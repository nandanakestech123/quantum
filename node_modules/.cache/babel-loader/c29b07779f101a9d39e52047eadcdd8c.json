{"ast":null,"code":"/**\r\n * DevExtreme (ui/text_box/ui.text_editor.mask.strategy.base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _dom = require(\"../../core/utils/dom\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar MASK_EVENT_NAMESPACE = \"dxMask\";\nvar BLUR_EVENT = \"blur beforedeactivate\";\nvar EMPTY_CHAR = \" \";\n\nvar BaseMaskStrategy = function () {\n  function BaseMaskStrategy(editor) {\n    _classCallCheck(this, BaseMaskStrategy);\n\n    this.editor = editor;\n    this.DIRECTION = {\n      FORWARD: \"forward\",\n      BACKWARD: \"backward\"\n    };\n    this.NAME = this._getStrategyName();\n  }\n\n  _createClass(BaseMaskStrategy, [{\n    key: \"_getStrategyName\",\n    value: function value() {\n      return \"base\";\n    }\n  }, {\n    key: \"editorOption\",\n    value: function value() {\n      var _this$editor;\n\n      return (_this$editor = this.editor).option.apply(_this$editor, arguments);\n    }\n  }, {\n    key: \"editorInput\",\n    value: function value() {\n      return this.editor._input();\n    }\n  }, {\n    key: \"editorCaret\",\n    value: function value(newCaret) {\n      if (!newCaret) {\n        return this.editor._caret();\n      }\n\n      this.editor._caret(newCaret);\n    }\n  }, {\n    key: \"getHandler\",\n    value: function value(handlerName) {\n      var handler = this[\"_\".concat(handlerName, \"Handler\")] || function () {};\n\n      return handler.bind(this);\n    }\n  }, {\n    key: \"attachEvents\",\n    value: function value() {\n      var _this = this;\n\n      var $input = this.editorInput();\n      this.getHandleEventNames().forEach(function (eventName) {\n        var subscriptionName = (0, _index.addNamespace)(eventName.toLowerCase(), MASK_EVENT_NAMESPACE);\n\n        _events_engine.default.on($input, subscriptionName, _this.getEventHandler(eventName));\n      });\n\n      this._attachChangeEventHandlers();\n    }\n  }, {\n    key: \"getHandleEventNames\",\n    value: function value() {\n      return [\"focusIn\", \"focusOut\", \"keyDown\", \"input\", \"paste\", \"cut\", \"drop\"];\n    }\n  }, {\n    key: \"getEventHandler\",\n    value: function value(eventName) {\n      return this[\"_\".concat(eventName, \"Handler\")].bind(this);\n    }\n  }, {\n    key: \"detachEvents\",\n    value: function value() {\n      _events_engine.default.off(this.editorInput(), \".\".concat(MASK_EVENT_NAMESPACE));\n    }\n  }, {\n    key: \"_attachChangeEventHandlers\",\n    value: function value() {\n      if ((0, _array.inArray)(\"change\", this.editorOption(\"valueChangeEvent\").split(\" \")) === -1) {\n        return;\n      }\n\n      _events_engine.default.on(this.editorInput(), (0, _index.addNamespace)(BLUR_EVENT, MASK_EVENT_NAMESPACE), function (e) {\n        this._suppressCaretChanging(this._changeHandler, [e]);\n\n        this._changeHandler(e);\n      }.bind(this.editor));\n    }\n  }, {\n    key: \"_focusInHandler\",\n    value: function value() {\n      this.editor._showMaskPlaceholder();\n\n      this.editor._direction(this.DIRECTION.FORWARD);\n\n      if (!this.editor._isValueEmpty() && this.editorOption(\"isValid\")) {\n        this.editor._adjustCaret();\n      } else {\n        var caret = this.editor._maskRulesChain.first();\n\n        this._caretTimeout = setTimeout(function () {\n          this._caret({\n            start: caret,\n            end: caret\n          });\n        }.bind(this.editor), 0);\n      }\n    }\n  }, {\n    key: \"_focusOutHandler\",\n    value: function value(event) {\n      this.editor._changeHandler(event);\n\n      if (\"onFocus\" === this.editorOption(\"showMaskMode\") && this.editor._isValueEmpty()) {\n        this.editorOption(\"text\", \"\");\n\n        this.editor._renderDisplayText(\"\");\n      }\n    }\n  }, {\n    key: \"_cutHandler\",\n    value: function value(event) {\n      var caret = this.editorCaret();\n      var selectedText = this.editorInput().val().substring(caret.start, caret.end);\n\n      this.editor._maskKeyHandler(event, function () {\n        return (0, _dom.clipboardText)(event, selectedText);\n      });\n    }\n  }, {\n    key: \"_dropHandler\",\n    value: function value() {\n      this._clearDragTimer();\n\n      this._dragTimer = setTimeout(function () {\n        this.option(\"value\", this._convertToValue(this._input().val()));\n      }.bind(this.editor));\n    }\n  }, {\n    key: \"_clearDragTimer\",\n    value: function value() {\n      clearTimeout(this._dragTimer);\n    }\n  }, {\n    key: \"_keyDownHandler\",\n    value: function value() {\n      this._keyPressHandled = false;\n    }\n  }, {\n    key: \"_pasteHandler\",\n    value: function value(event) {\n      var editor = this.editor;\n      this._keyPressHandled = true;\n      var caret = this.editorCaret();\n\n      editor._maskKeyHandler(event, function () {\n        var pastedText = (0, _dom.clipboardText)(event);\n\n        var restText = editor._maskRulesChain.text().substring(caret.end);\n\n        var accepted = editor._handleChain({\n          text: pastedText,\n          start: caret.start,\n          length: pastedText.length\n        });\n\n        var newCaret = caret.start + accepted;\n\n        editor._handleChain({\n          text: restText,\n          start: newCaret,\n          length: restText.length\n        });\n\n        editor._caret({\n          start: newCaret,\n          end: newCaret\n        });\n      });\n    }\n  }, {\n    key: \"_autoFillHandler\",\n    value: function value(event) {\n      var _this2 = this;\n\n      var editor = this.editor;\n      var inputVal = this.editorInput().val();\n      this._inputHandlerTimer = setTimeout(function () {\n        _this2._keyPressHandled = true;\n\n        if (_this2._isAutoFill()) {\n          _this2._keyPressHandled = true;\n\n          editor._maskKeyHandler(event, function () {\n            editor._handleChain({\n              text: inputVal,\n              start: 0,\n              length: inputVal.length\n            });\n          });\n\n          editor._validateMask();\n        }\n      });\n    }\n  }, {\n    key: \"_isAutoFill\",\n    value: function value() {\n      var $input = this.editor._input();\n\n      var result = false;\n\n      if (_browser.default.msie && _browser.default.version > 11) {\n        result = $input.hasClass(\"edge-autofilled\");\n      } else {\n        if (_browser.default.webkit) {\n          var input = $input.get(0);\n          result = input && input.matches(\":-webkit-autofill\");\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"runWithoutEventProcessing\",\n    value: function value(action) {\n      var keyPressHandled = this._keyPressHandled;\n      this._keyPressHandled = true;\n      action();\n      this._keyPressHandled = keyPressHandled;\n    }\n  }, {\n    key: \"_backspaceHandler\",\n    value: function value() {}\n  }, {\n    key: \"_delHandler\",\n    value: function value(event) {\n      var editor = this.editor;\n      this._keyPressHandled = true;\n\n      editor._maskKeyHandler(event, function () {\n        return !editor._hasSelection() && editor._handleKey(EMPTY_CHAR);\n      });\n    }\n  }, {\n    key: \"clean\",\n    value: function value() {\n      this._clearDragTimer();\n\n      clearTimeout(this._backspaceHandlerTimeout);\n      clearTimeout(this._caretTimeout);\n      clearTimeout(this._inputHandlerTimer);\n    }\n  }]);\n\n  return BaseMaskStrategy;\n}();\n\nexports.default = BaseMaskStrategy;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/text_box/ui.text_editor.mask.strategy.base.js"],"names":["exports","default","_events_engine","_interopRequireDefault","require","_index","_browser","_array","_dom","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","MASK_EVENT_NAMESPACE","BLUR_EVENT","EMPTY_CHAR","BaseMaskStrategy","editor","DIRECTION","FORWARD","BACKWARD","NAME","_getStrategyName","value","_this$editor","option","apply","arguments","_input","newCaret","_caret","handlerName","handler","concat","bind","_this","$input","editorInput","getHandleEventNames","forEach","eventName","subscriptionName","addNamespace","toLowerCase","on","getEventHandler","_attachChangeEventHandlers","off","inArray","editorOption","split","e","_suppressCaretChanging","_changeHandler","_showMaskPlaceholder","_direction","_isValueEmpty","_adjustCaret","caret","_maskRulesChain","first","_caretTimeout","setTimeout","start","end","event","_renderDisplayText","editorCaret","selectedText","val","substring","_maskKeyHandler","clipboardText","_clearDragTimer","_dragTimer","_convertToValue","clearTimeout","_keyPressHandled","pastedText","restText","text","accepted","_handleChain","_this2","inputVal","_inputHandlerTimer","_isAutoFill","_validateMask","result","msie","version","hasClass","webkit","input","get","matches","action","keyPressHandled","_hasSelection","_handleKey","_backspaceHandlerTimeout","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/text_box/ui.text_editor.mask.strategy.base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar MASK_EVENT_NAMESPACE = \"dxMask\";\r\nvar BLUR_EVENT = \"blur beforedeactivate\";\r\nvar EMPTY_CHAR = \" \";\r\nvar BaseMaskStrategy = function() {\r\n    function BaseMaskStrategy(editor) {\r\n        _classCallCheck(this, BaseMaskStrategy);\r\n        this.editor = editor;\r\n        this.DIRECTION = {\r\n            FORWARD: \"forward\",\r\n            BACKWARD: \"backward\"\r\n        };\r\n        this.NAME = this._getStrategyName()\r\n    }\r\n    _createClass(BaseMaskStrategy, [{\r\n        key: \"_getStrategyName\",\r\n        value: function() {\r\n            return \"base\"\r\n        }\r\n    }, {\r\n        key: \"editorOption\",\r\n        value: function() {\r\n            var _this$editor;\r\n            return (_this$editor = this.editor).option.apply(_this$editor, arguments)\r\n        }\r\n    }, {\r\n        key: \"editorInput\",\r\n        value: function() {\r\n            return this.editor._input()\r\n        }\r\n    }, {\r\n        key: \"editorCaret\",\r\n        value: function(newCaret) {\r\n            if (!newCaret) {\r\n                return this.editor._caret()\r\n            }\r\n            this.editor._caret(newCaret)\r\n        }\r\n    }, {\r\n        key: \"getHandler\",\r\n        value: function(handlerName) {\r\n            var handler = this[\"_\".concat(handlerName, \"Handler\")] || function() {};\r\n            return handler.bind(this)\r\n        }\r\n    }, {\r\n        key: \"attachEvents\",\r\n        value: function() {\r\n            var _this = this;\r\n            var $input = this.editorInput();\r\n            this.getHandleEventNames().forEach(function(eventName) {\r\n                var subscriptionName = (0, _index.addNamespace)(eventName.toLowerCase(), MASK_EVENT_NAMESPACE);\r\n                _events_engine.default.on($input, subscriptionName, _this.getEventHandler(eventName))\r\n            });\r\n            this._attachChangeEventHandlers()\r\n        }\r\n    }, {\r\n        key: \"getHandleEventNames\",\r\n        value: function() {\r\n            return [\"focusIn\", \"focusOut\", \"keyDown\", \"input\", \"paste\", \"cut\", \"drop\"]\r\n        }\r\n    }, {\r\n        key: \"getEventHandler\",\r\n        value: function(eventName) {\r\n            return this[\"_\".concat(eventName, \"Handler\")].bind(this)\r\n        }\r\n    }, {\r\n        key: \"detachEvents\",\r\n        value: function() {\r\n            _events_engine.default.off(this.editorInput(), \".\".concat(MASK_EVENT_NAMESPACE))\r\n        }\r\n    }, {\r\n        key: \"_attachChangeEventHandlers\",\r\n        value: function() {\r\n            if ((0, _array.inArray)(\"change\", this.editorOption(\"valueChangeEvent\").split(\" \")) === -1) {\r\n                return\r\n            }\r\n            _events_engine.default.on(this.editorInput(), (0, _index.addNamespace)(BLUR_EVENT, MASK_EVENT_NAMESPACE), function(e) {\r\n                this._suppressCaretChanging(this._changeHandler, [e]);\r\n                this._changeHandler(e)\r\n            }.bind(this.editor))\r\n        }\r\n    }, {\r\n        key: \"_focusInHandler\",\r\n        value: function() {\r\n            this.editor._showMaskPlaceholder();\r\n            this.editor._direction(this.DIRECTION.FORWARD);\r\n            if (!this.editor._isValueEmpty() && this.editorOption(\"isValid\")) {\r\n                this.editor._adjustCaret()\r\n            } else {\r\n                var caret = this.editor._maskRulesChain.first();\r\n                this._caretTimeout = setTimeout(function() {\r\n                    this._caret({\r\n                        start: caret,\r\n                        end: caret\r\n                    })\r\n                }.bind(this.editor), 0)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_focusOutHandler\",\r\n        value: function(event) {\r\n            this.editor._changeHandler(event);\r\n            if (\"onFocus\" === this.editorOption(\"showMaskMode\") && this.editor._isValueEmpty()) {\r\n                this.editorOption(\"text\", \"\");\r\n                this.editor._renderDisplayText(\"\")\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_cutHandler\",\r\n        value: function(event) {\r\n            var caret = this.editorCaret();\r\n            var selectedText = this.editorInput().val().substring(caret.start, caret.end);\r\n            this.editor._maskKeyHandler(event, function() {\r\n                return (0, _dom.clipboardText)(event, selectedText)\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_dropHandler\",\r\n        value: function() {\r\n            this._clearDragTimer();\r\n            this._dragTimer = setTimeout(function() {\r\n                this.option(\"value\", this._convertToValue(this._input().val()))\r\n            }.bind(this.editor))\r\n        }\r\n    }, {\r\n        key: \"_clearDragTimer\",\r\n        value: function() {\r\n            clearTimeout(this._dragTimer)\r\n        }\r\n    }, {\r\n        key: \"_keyDownHandler\",\r\n        value: function() {\r\n            this._keyPressHandled = false\r\n        }\r\n    }, {\r\n        key: \"_pasteHandler\",\r\n        value: function(event) {\r\n            var editor = this.editor;\r\n            this._keyPressHandled = true;\r\n            var caret = this.editorCaret();\r\n            editor._maskKeyHandler(event, function() {\r\n                var pastedText = (0, _dom.clipboardText)(event);\r\n                var restText = editor._maskRulesChain.text().substring(caret.end);\r\n                var accepted = editor._handleChain({\r\n                    text: pastedText,\r\n                    start: caret.start,\r\n                    length: pastedText.length\r\n                });\r\n                var newCaret = caret.start + accepted;\r\n                editor._handleChain({\r\n                    text: restText,\r\n                    start: newCaret,\r\n                    length: restText.length\r\n                });\r\n                editor._caret({\r\n                    start: newCaret,\r\n                    end: newCaret\r\n                })\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_autoFillHandler\",\r\n        value: function(event) {\r\n            var _this2 = this;\r\n            var editor = this.editor;\r\n            var inputVal = this.editorInput().val();\r\n            this._inputHandlerTimer = setTimeout(function() {\r\n                _this2._keyPressHandled = true;\r\n                if (_this2._isAutoFill()) {\r\n                    _this2._keyPressHandled = true;\r\n                    editor._maskKeyHandler(event, function() {\r\n                        editor._handleChain({\r\n                            text: inputVal,\r\n                            start: 0,\r\n                            length: inputVal.length\r\n                        })\r\n                    });\r\n                    editor._validateMask()\r\n                }\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_isAutoFill\",\r\n        value: function() {\r\n            var $input = this.editor._input();\r\n            var result = false;\r\n            if (_browser.default.msie && _browser.default.version > 11) {\r\n                result = $input.hasClass(\"edge-autofilled\")\r\n            } else {\r\n                if (_browser.default.webkit) {\r\n                    var input = $input.get(0);\r\n                    result = input && input.matches(\":-webkit-autofill\")\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"runWithoutEventProcessing\",\r\n        value: function(action) {\r\n            var keyPressHandled = this._keyPressHandled;\r\n            this._keyPressHandled = true;\r\n            action();\r\n            this._keyPressHandled = keyPressHandled\r\n        }\r\n    }, {\r\n        key: \"_backspaceHandler\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_delHandler\",\r\n        value: function(event) {\r\n            var editor = this.editor;\r\n            this._keyPressHandled = true;\r\n            editor._maskKeyHandler(event, function() {\r\n                return !editor._hasSelection() && editor._handleKey(EMPTY_CHAR)\r\n            })\r\n        }\r\n    }, {\r\n        key: \"clean\",\r\n        value: function() {\r\n            this._clearDragTimer();\r\n            clearTimeout(this._backspaceHandlerTimeout);\r\n            clearTimeout(this._caretTimeout);\r\n            clearTimeout(this._inputHandlerTimer)\r\n        }\r\n    }]);\r\n    return BaseMaskStrategy\r\n}();\r\nexports.default = BaseMaskStrategy;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}