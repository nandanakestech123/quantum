{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\CustomerPlus\\\\AddCustomerPlus\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCustomerPlusSettings, updateCustomerPlus, CreateCustomerPlus, getCustomerPlus } from \"redux/actions/customerPlus\";\nimport { NormalInput, NormalDateTime, NormalSelect, NormalMultiSelect, NormalButton, LayoutEditor, NormalModal } from \"component/common\";\nimport { getCommonApi, commonPatchApi, commonDeleteApi, commonCreateApi } from 'redux/actions/common';\nimport { withTranslation } from \"react-i18next\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { history } from \"helpers\";\nimport { updateForm } from \"redux/actions/common\";\nimport closeIcon from \"assets/images/close.png\";\nexport class AddCustomerPlusClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {},\n      fields: [{\n        id: 1,\n        field_name: \"cust_dob\",\n        display_field_name: \"Customer DOB\",\n        visible_in_registration: true,\n        visible_in_listing: true,\n        visible_in_profile: true,\n        mandatory: true,\n        data_type: \"Dat\",\n        selection: null\n      }],\n      isLoading: true,\n      isMounted: true,\n      cust_corporate: false,\n      isModalVisibleContectPerson: false,\n      corpContactPersionList: [],\n      deletedCorpContactPersionList: [],\n      updatedCorpContactPersionList: [],\n      corpContactPersionDetail: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        designation: \"\",\n        mobile_phone: \"\"\n      }\n    };\n\n    this.handleToogleModalContectPerson = (edit = false) => {\n      let {\n        isModalVisibleContectPerson\n      } = this.state;\n      isModalVisibleContectPerson = !isModalVisibleContectPerson;\n\n      if (edit) {\n        this.setState({\n          isModalVisibleContectPerson\n        });\n      } else {\n        this.setState({\n          isModalVisibleContectPerson,\n          corpContactPersionDetail: {\n            id: 0,\n            name: \"\",\n            email: \"\",\n            designation: \"\",\n            mobile_phone: \"\"\n          }\n        });\n      }\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.loadData = async () => {\n      await this.props.getCustomerPlusSettings(\"details\");\n      this.state.fields = this.props.customerPlusSettings.filter(e => e.visible_in_registration);\n      this.state.formFields = this.state.fields.reduce((map, obj) => {\n        if (obj.data_type == \"date\") map[obj.field_name] = dateFormat(new Date());else if (obj.data_type == \"datetime\") map[obj.field_name] = new Date().toISOString();else map[obj.field_name] = null;\n        return map;\n      }, {});\n\n      if (this.props.match.params.id) {\n        await this.props.getCustomerPlus(this.props.match.params.id);\n        console.log(this.props.customerPlusDetail);\n        this.state.formFields = this.props.customerPlusDetail;\n        this.state.cust_corporate = this.props.customerPlusDetail.cust_corporate;\n\n        if (this.state.cust_corporate) {\n          this.state.corpContactPersionList = this.props.customerPlusDetail.contactperson;\n        }\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleSubmit = async type => {\n      if (!this.validator.allValid()) return this.validator.showMessages();\n      this.setState({\n        isLoading: true\n      });\n      console.log(this.state.formFields);\n\n      try {\n        this.state.fields.filter(e => e.data_type == \"date\").forEach(e => {\n          if (this.state.formFields[e.field_name]) {\n            this.state.formFields[e.field_name] = dateFormat(this.state.formFields[e.field_name]);\n          }\n        });\n        this.state.fields.filter(e => e.data_type == \"datetime\").forEach(e => {\n          if (this.state.formFields[e.field_name]) {\n            let date = new Date(this.state.formFields[e.field_name]);\n            this.state.formFields[e.field_name] = date.toISOString();\n          }\n        });\n\n        if (this.props.match.params.id) {\n          var formFields = {};\n          this.state.fields.forEach(e => {\n            formFields[e.field_name] = this.state.formFields[e.field_name];\n          });\n          var res = await this.props.updateCustomerPlus(this.props.match.params.id + \"/\", JSON.stringify(formFields));\n\n          for (let e of this.state.deletedCorpContactPersionList) {\n            if (e.id !== 0) await this.props.commonDeleteApi(`contactperson/${e.id}/`);\n          }\n\n          for (let e of this.state.corpContactPersionList) {\n            if (e.id == 0) await this.props.commonCreateApi(`contactperson/`, {\n              customer_id: this.props.match.params.id,\n              name: e.name,\n              email: e.email,\n              designation: e.designation,\n              mobile_phone: e.mobile_phone\n            });\n          }\n\n          for (let e of this.state.updatedCorpContactPersionList) {\n            if (e.id) await this.props.commonPatchApi(`contactperson/${e.id}/`, {\n              customer_id: this.props.match.params.id,\n              ...e\n            });\n          }\n\n          if (res.status == 200) {\n            if (type == \"catalog\") {\n              let formField = {\n                custId: 0,\n                custName: \"\"\n              };\n              formField[\"custId\"] = res.data.id;\n              formField[\"custName\"] = res.data.cust_name;\n              this.setState({\n                isLoading: false\n              });\n              this.props.updateForm(\"basicApptDetail\", formField);\n              history.push(\"/admin/cart\");\n            } else {\n              history.push(`/admin/customerplus/${this.props.match.params.id}/details`);\n            }\n          }\n        } else {\n          const payload = this.state.corpContactPersionList.length > 0 ? {\n            cust_corporate: this.state.cust_corporate,\n            contactperson: this.state.cust_corporate ? this.state.corpContactPersionList : [],\n            ...this.state.formFields\n          } : { ...this.state.formFields\n          };\n          var res = await this.props.CreateCustomerPlus(JSON.stringify(payload));\n\n          if (type == \"catalog\") {\n            let formField = {\n              custId: 0,\n              custName: \"\"\n            };\n            formField[\"custId\"] = res.data.id;\n            formField[\"custName\"] = res.data.cust_name;\n            this.props.updateForm(\"basicApptDetail\", formField);\n            history.push(\"/admin/cart\");\n          } else {\n            history.push(`/admin/customerPlus`);\n          }\n        }\n      } catch (e) {\n        console.log(e, \"catchmessage\");\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleCancel = () => {\n      if (this.props.match.params.id) {\n        this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`);\n      } else {\n        this.props.history.push(`/admin/customerplus`);\n      }\n    };\n\n    this.handleChangeCorpContact = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let corpContactPersionDetail = Object.assign({}, this.state.corpContactPersionDetail);\n      corpContactPersionDetail[name] = value;\n      this.setState({\n        corpContactPersionDetail\n      });\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleMultiSelect = (field, e) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[field] = e;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleChangeBox = event => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[event.target.name] = event.target.checked;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleDatePick = async (name, value) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.renderLayout = () => {\n      let {\n        t\n      } = this.props;\n      let filtered = this.state.fields;\n\n      const renderFormData = (e, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }\n        }, e.data_type == \"text\" ? /*#__PURE__*/React.createElement(NormalInput, {\n          placeholder: \"Enter here\",\n          value: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"date\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n          onChange: this.handleDatePick,\n          value: this.state.formFields[e.field_name] ? new Date(this.state.formFields[e.field_name]) : new Date(),\n          name: e.field_name,\n          showYearDropdown: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"datetime\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n          onChange: this.handleDatePick,\n          value: this.state.formFields[e.field_name] ? new Date(this.state.formFields[e.field_name]) : new Date(),\n          name: e.field_name,\n          showYearDropdown: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"selection\" ? /*#__PURE__*/React.createElement(NormalSelect, {\n          options: e.selection,\n          value: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"multiSelect\" ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n          options: e.selection,\n          defaultValue: this.state.formFields[e.field_name],\n          name: e.field_name,\n          handleMultiSelect: e => this.handleMultiSelect(e.field_name, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"boolean\" ? /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChangeBox,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"number\" ? /*#__PURE__*/React.createElement(NormalInput, {\n          type: \"number\",\n          placeholder: \"Enter here\",\n          value: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }\n        }) : t(\"NO FILED RENDER DATA FOUND\")), e.mandatory ? this.validator.message(e.display_field_name, this.state.formFields[e.field_name], \"required\") : null);\n      };\n\n      return filtered.map(e => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: `${e.id}`,\n          style: e.data_type == \"date\" || e.data_type == \"datetime\" ? {\n            zIndex: 1\n          } : {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 9\n          }\n        }, e.showLabel && /*#__PURE__*/React.createElement(\"label\", {\n          className: \"text-left text-black common-label-text fs-17 p-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }\n        }, t(e.display_field_name), e.mandatory && /*#__PURE__*/React.createElement(\"label\", {\n          className: \"text-danger p-0 m-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 31\n          }\n        }, \"*\")), renderFormData(e));\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentDidMount() {\n    this.validator = new SimpleReactValidator({\n      validators: {},\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n    this.loadData();\n  }\n\n  render() {\n    let {\n      isLoading,\n      deletedCorpContactPersionList\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer-section container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NormalModal, {\n      modal: this.state.isModalVisibleContectPerson,\n      handleModal: this.handleToogleModalContectPerson,\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"600px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group input-group-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"col-md-10\": true,\n      \"col-sm-10\": true,\n      \"mb-10\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }, t(\"Add New Contact Person\"))), /*#__PURE__*/React.createElement(\"div\", {\n      \"col-md-2\": true,\n      \"col-sm-2\": true,\n      \"mb-2\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleToogleModalContectPerson,\n      style: {\n        paddingLeft: 300\n      },\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group input-group-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }, t(\"Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: this.state.corpContactPersionDetail.name,\n      name: \"name\",\n      onChange: this.handleChangeCorpContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group input-group-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 19\n      }\n    }, t(\"Designation\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: this.state.corpContactPersionDetail.designation,\n      name: \"designation\",\n      onChange: this.handleChangeCorpContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group input-group-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 19\n      }\n    }, t(\"Mobile Number\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: this.state.corpContactPersionDetail.mobile_phone,\n      name: \"mobile_phone\",\n      onChange: this.handleChangeCorpContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group input-group-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 19\n      }\n    }, t(\"Email Address\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: this.state.corpContactPersionDetail.email,\n      name: \"email\",\n      onChange: this.handleChangeCorpContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group input-group-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 col-sm-12 mb-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Add\",\n      onClick: () => {\n        if (this.state.corpContactPersionDetail.name && this.state.corpContactPersionDetail.email && this.state.corpContactPersionDetail.designation && this.state.corpContactPersionDetail.mobile_phone) if (!this.state.corpContactPersionDetail.id) {\n          this.setState({\n            isModalVisibleContactPerson: false,\n            corpContactPersionList: [...this.state.corpContactPersionList, this.state.corpContactPersionDetail]\n          });\n          this.handleToogleModalContectPerson();\n        } else {\n          let list = this.state.corpContactPersionList;\n          let index = list.findIndex(x => x.id === this.state.corpContactPersionDetail.id);\n          list[index] = this.state.corpContactPersionDetail;\n          let {\n            updatedCorpContactPersionList\n          } = this.state;\n          let updateindex = updatedCorpContactPersionList.findIndex(x => x.id === this.state.corpContactPersionDetail.id);\n\n          if (updateindex > -1) {\n            updatedCorpContactPersionList[updateindex] = this.state.corpContactPersionDetail;\n          } else {\n            updatedCorpContactPersionList.push(this.state.corpContactPersionDetail);\n          }\n\n          this.setState({\n            isModalVisibleContactPerson: false,\n            corpContactPersionList: list,\n            updatedCorpContactPersionList\n          });\n          this.handleToogleModalContectPerson();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 19\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customerplus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-label-nav p-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category\",\n      onClick: () => {\n        this.props.match.params.id ? this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`) : this.props.history.push(`/admin/customerplus/`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 13\n      }\n    }, t(\"Customer\")), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-right mx-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 13\n      }\n    }, t((this.props.match.params.id ? \"Edit\" : \"Add\") + \" New Customer\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 19\n      }\n    }, \"Loading...\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2 row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LayoutEditor, {\n      fields: this.state.fields,\n      editable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 19\n      }\n    }, this.renderLayout()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"corp-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"corp-cust-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 23\n      }\n    }, t(\"Corporate Customer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      disabled: this.props.match.params.id ? true : false,\n      type: \"checkbox\",\n      checked: this.state.cust_corporate,\n      name: \"cust_corporate\",\n      onChange: () => {\n        let {\n          cust_corporate\n        } = this.state;\n        cust_corporate = !cust_corporate;\n        this.setState({\n          cust_corporate\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 25\n      }\n    }))), this.state.cust_corporate ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"confirm\",\n      onClick: this.handleToogleModalContectPerson,\n      label: \"Add New Contact Person\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 27\n      }\n    })), this.state.corpContactPersionList.length > 0 ? /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"first-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 31\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 31\n      }\n    }, \"Designation\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 31\n      }\n    }, \"Mobile\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 27\n      }\n    }, this.state.corpContactPersionList.map((e, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 33\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n        onClick: () => {\n          let {\n            corpContactPersionList\n          } = this.state;\n\n          if (e.id) {\n            deletedCorpContactPersionList.push(corpContactPersionList[index]);\n          }\n\n          corpContactPersionList.splice(index, 1);\n          this.setState({\n            corpContactPersionList\n          });\n        },\n        className: \"close\",\n        src: closeIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 38\n        }\n      }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => {\n          if (e.id) {\n            this.setState({\n              corpContactPersionDetail: e\n            });\n            this.handleToogleModalContectPerson(true);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 33\n        }\n      }, e.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 33\n        }\n      }, e.designation), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 33\n        }\n      }, e.mobile_phone));\n    }))) : \"\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: this.handleCancel,\n      label: \"CANCEL\",\n      danger: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(),\n      label: \"SAVE\",\n      success: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(\"catalog\"),\n      label: \"SAVE & CATALOG\",\n      success: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerPlusDetail: state.customerPlus.customerPlusDetail,\n  customerPlusSettings: state.customerPlus.customerPlusSettings\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCustomerPlusSettings,\n    updateCustomerPlus,\n    CreateCustomerPlus,\n    getCustomerPlus,\n    updateForm,\n    getCommonApi,\n    commonDeleteApi,\n    commonPatchApi,\n    commonCreateApi\n  }, dispatch);\n};\n\nexport const AddCustomerPlus = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(AddCustomerPlusClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/CustomerPlus/AddCustomerPlus/index.js"],"names":["React","Component","SimpleReactValidator","connect","bindActionCreators","getCustomerPlusSettings","updateCustomerPlus","CreateCustomerPlus","getCustomerPlus","NormalInput","NormalDateTime","NormalSelect","NormalMultiSelect","NormalButton","LayoutEditor","NormalModal","getCommonApi","commonPatchApi","commonDeleteApi","commonCreateApi","withTranslation","dateFormat","history","updateForm","closeIcon","AddCustomerPlusClass","state","formFields","fields","id","field_name","display_field_name","visible_in_registration","visible_in_listing","visible_in_profile","mandatory","data_type","selection","isLoading","isMounted","cust_corporate","isModalVisibleContectPerson","corpContactPersionList","deletedCorpContactPersionList","updatedCorpContactPersionList","corpContactPersionDetail","name","email","designation","mobile_phone","handleToogleModalContectPerson","edit","setState","updateState","data","loadData","props","customerPlusSettings","filter","e","reduce","map","obj","Date","toISOString","match","params","console","log","customerPlusDetail","contactperson","handleSubmit","type","validator","allValid","showMessages","forEach","date","res","JSON","stringify","customer_id","status","formField","custId","custName","cust_name","push","payload","length","handleCancel","handleChangeCorpContact","target","value","Object","assign","handleChange","handleMultiSelect","field","handleChangeBox","event","checked","handleDatePick","renderLayout","t","filtered","renderFormData","index","message","zIndex","showLabel","componentWillUnmount","componentDidMount","validators","element","autoForceUpdate","render","minWidth","paddingLeft","isModalVisibleContactPerson","list","findIndex","x","updateindex","splice","mapStateToProps","customerPlus","mapDispatchToProps","dispatch","AddCustomerPlus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCustomerPlusSettings,\r\n  updateCustomerPlus,\r\n  CreateCustomerPlus,\r\n  getCustomerPlus,\r\n} from \"redux/actions/customerPlus\";\r\nimport {\r\n  NormalInput,\r\n  NormalDateTime,\r\n  NormalSelect,\r\n  NormalMultiSelect,\r\n  NormalButton,\r\n  LayoutEditor,\r\n  NormalModal\r\n\r\n} from \"component/common\";\r\nimport { getCommonApi, commonPatchApi, commonDeleteApi , commonCreateApi  } from 'redux/actions/common';\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { history } from \"helpers\";\r\nimport { updateForm } from \"redux/actions/common\";\r\nimport closeIcon from \"assets/images/close.png\";\r\n\r\nexport class AddCustomerPlusClass extends Component {\r\n  state = {\r\n    formFields: {},\r\n    fields: [\r\n      {\r\n        id: 1,\r\n        field_name: \"cust_dob\",\r\n        display_field_name: \"Customer DOB\",\r\n        visible_in_registration: true,\r\n        visible_in_listing: true,\r\n        visible_in_profile: true,\r\n        mandatory: true,\r\n        data_type: \"Dat\",\r\n        selection: null,\r\n      },\r\n    ],\r\n    isLoading: true,\r\n    isMounted: true,\r\n    cust_corporate: false,\r\n    isModalVisibleContectPerson: false,\r\n    corpContactPersionList: [],\r\n    deletedCorpContactPersionList: [],\r\n    updatedCorpContactPersionList: [],\r\n    corpContactPersionDetail: {id:0, name: \"\", email: \"\", designation: \"\", mobile_phone: \"\" }\r\n  };\r\n\r\n  handleToogleModalContectPerson = (edit=false) => {\r\n    let { isModalVisibleContectPerson } = this.state;\r\n    isModalVisibleContectPerson = !isModalVisibleContectPerson;\r\n    if(edit){\r\n    this.setState({\r\n      isModalVisibleContectPerson     \r\n    });\r\n  }else{\r\n    this.setState({\r\n      isModalVisibleContectPerson,\r\n      corpContactPersionDetail:{ id:0,name: \"\", email: \"\", designation: \"\", mobile_phone: \"\" }\r\n    });\r\n  }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.isMounted = false;\r\n  }\r\n\r\n  updateState = data => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      validators: {},\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n    this.loadData();\r\n  }\r\n\r\n  loadData = async () => {\r\n    await this.props.getCustomerPlusSettings(\"details\");\r\n    this.state.fields = this.props.customerPlusSettings.filter(\r\n      e => e.visible_in_registration\r\n    );\r\n    this.state.formFields = this.state.fields.reduce((map, obj) => {\r\n      if (obj.data_type == \"date\") map[obj.field_name] = dateFormat(new Date());\r\n      else if (obj.data_type == \"datetime\")\r\n        map[obj.field_name] = new Date().toISOString();\r\n      else map[obj.field_name] = null;\r\n      return map;\r\n    }, {});\r\n    if (this.props.match.params.id) {\r\n      await this.props.getCustomerPlus(this.props.match.params.id);\r\n      console.log(this.props.customerPlusDetail)\r\n      this.state.formFields = this.props.customerPlusDetail;\r\n      this.state.cust_corporate=this.props.customerPlusDetail.cust_corporate;\r\n      if(this.state.cust_corporate){\r\n        this.state.corpContactPersionList =this.props.customerPlusDetail.contactperson\r\n        \r\n      }\r\n    }\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleSubmit = async type => {\r\n\r\n    if (!this.validator.allValid()) return this.validator.showMessages();\r\n    this.setState({ isLoading: true });\r\n    console.log(this.state.formFields);\r\n    try {\r\n      this.state.fields\r\n        .filter(e => e.data_type == \"date\")\r\n        .forEach(e => {\r\n          if (this.state.formFields[e.field_name]) {\r\n            this.state.formFields[e.field_name] = dateFormat(\r\n              this.state.formFields[e.field_name]\r\n            );\r\n          }\r\n        });\r\n      this.state.fields\r\n        .filter(e => e.data_type == \"datetime\")\r\n        .forEach(e => {\r\n          if (this.state.formFields[e.field_name]) {\r\n            let date = new Date(this.state.formFields[e.field_name]);\r\n            this.state.formFields[e.field_name] = date.toISOString();\r\n          }\r\n        });\r\n      if (this.props.match.params.id) {\r\n        var formFields = {};\r\n        this.state.fields.forEach(e => {\r\n          formFields[e.field_name] = this.state.formFields[e.field_name];\r\n        });\r\n        var res = await this.props.updateCustomerPlus(\r\n          this.props.match.params.id + \"/\",\r\n          JSON.stringify(formFields)\r\n        );\r\n        for(let e of this.state.deletedCorpContactPersionList){          \r\n          if(e.id!==0)\r\n            await this.props.commonDeleteApi(`contactperson/${e.id}/`);\r\n        }\r\n        for(let e of this.state.corpContactPersionList){\r\n          if(e.id==0)\r\n            await this.props.commonCreateApi(`contactperson/`,{customer_id:this.props.match.params.id,name: e.name, email:e.email, designation: e.designation, mobile_phone: e.mobile_phone});\r\n        }\r\n        for(let e of this.state.updatedCorpContactPersionList){\r\n          if(e.id)\r\n            await this.props.commonPatchApi(`contactperson/${e.id}/`,{customer_id:this.props.match.params.id,...e});\r\n        }\r\n        \r\n        if (res.status == 200) {\r\n          if (type == \"catalog\") {\r\n            let formField = { custId: 0, custName: \"\" };\r\n            formField[\"custId\"] = res.data.id;\r\n            formField[\"custName\"] = res.data.cust_name;\r\n            this.setState({ isLoading: false });\r\n            this.props.updateForm(\"basicApptDetail\", formField);\r\n            history.push(\"/admin/cart\");\r\n          } else {\r\n            history.push(\r\n              `/admin/customerplus/${this.props.match.params.id}/details`\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        const payload = this.state.corpContactPersionList.length > 0 ?\r\n          { cust_corporate: this.state.cust_corporate, contactperson: this.state.cust_corporate?this.state.corpContactPersionList:[], ...this.state.formFields }\r\n          : { ...this.state.formFields };\r\n        var res = await this.props.CreateCustomerPlus(\r\n          JSON.stringify(payload)\r\n        );\r\n        if (type == \"catalog\") {\r\n          let formField = { custId: 0, custName: \"\" };\r\n          formField[\"custId\"] = res.data.id;\r\n          formField[\"custName\"] = res.data.cust_name;\r\n          this.props.updateForm(\"basicApptDetail\", formField);\r\n          history.push(\"/admin/cart\");\r\n        } else {\r\n          history.push(`/admin/customerPlus`);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e, \"catchmessage\");\r\n    }\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.props.match.params.id) {\r\n      this.props.history.push(\r\n        `/admin/customerplus/${this.props.match.params.id}/details`\r\n      );\r\n    } else {\r\n      this.props.history.push(`/admin/customerplus`);\r\n    }\r\n  };\r\n  handleChangeCorpContact = ({ target: { value, name } }) => {\r\n    let corpContactPersionDetail = Object.assign({}, this.state.corpContactPersionDetail);\r\n\r\n    corpContactPersionDetail[name] = value;\r\n\r\n    this.setState({\r\n      corpContactPersionDetail,\r\n    });\r\n  }\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleMultiSelect = (field, e) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[field] = e;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleChangeBox = event => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[event.target.name] = event.target.checked;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleDatePick = async (name, value) => {\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  renderLayout = () => {\r\n    let { t } = this.props;\r\n    let filtered = this.state.fields;\r\n    const renderFormData = (e, index) => {\r\n      return (\r\n        <div key={index}>\r\n          <div className=\"input-group\">\r\n            {e.data_type == \"text\" ? (\r\n              <NormalInput\r\n                placeholder=\"Enter here\"\r\n                value={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                onChange={this.handleChange}\r\n              />\r\n            ) : e.data_type == \"date\" ? (\r\n              <NormalDateTime\r\n                onChange={this.handleDatePick}\r\n                value={\r\n                  this.state.formFields[e.field_name]\r\n                    ? new Date(this.state.formFields[e.field_name])\r\n                    : new Date()\r\n                }\r\n                name={e.field_name}\r\n                showYearDropdown={true}\r\n              />\r\n            ) : e.data_type == \"datetime\" ? (\r\n              <NormalDateTime\r\n                onChange={this.handleDatePick}\r\n                value={\r\n                  this.state.formFields[e.field_name]\r\n                    ? new Date(this.state.formFields[e.field_name])\r\n                    : new Date()\r\n                }\r\n                name={e.field_name}\r\n                showYearDropdown={true}\r\n              />\r\n            ) : e.data_type == \"selection\" ? (\r\n              <NormalSelect\r\n                options={e.selection}\r\n                value={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                onChange={this.handleChange}\r\n              />\r\n            ) : e.data_type == \"multiSelect\" ? (\r\n              <NormalMultiSelect\r\n                options={e.selection}\r\n                defaultValue={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                handleMultiSelect={e => this.handleMultiSelect(e.field_name, e)}\r\n              />\r\n            ) : e.data_type == \"boolean\" ? (\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                onChange={this.handleChangeBox}\r\n              />\r\n            ) : e.data_type == \"number\" ? (\r\n              <NormalInput\r\n                type=\"number\"\r\n                placeholder=\"Enter here\"\r\n                value={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                onChange={this.handleChange}\r\n              />\r\n            ) : (\r\n              t(\"NO FILED RENDER DATA FOUND\")\r\n            )}\r\n          </div>\r\n          {e.mandatory\r\n            ? this.validator.message(\r\n              e.display_field_name,\r\n              this.state.formFields[e.field_name],\r\n              \"required\"\r\n            )\r\n            : null}\r\n        </div>\r\n      );\r\n    };\r\n    return filtered.map(e => {\r\n      return (\r\n        <div\r\n          key={`${e.id}`}\r\n          style={\r\n            e.data_type == \"date\" || e.data_type == \"datetime\"\r\n              ? { zIndex: 1 }\r\n              : {}\r\n          }\r\n        >\r\n          {e.showLabel && (\r\n            <label className=\"text-left text-black common-label-text fs-17 p-0\">\r\n              {t(e.display_field_name)}\r\n              {e.mandatory && <label className=\"text-danger p-0 m-0\">*</label>}\r\n            </label>\r\n          )}\r\n          {renderFormData(e)}\r\n\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { isLoading ,deletedCorpContactPersionList} = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <div className=\"create-customer-section container-fluid\">\r\n        <NormalModal\r\n          modal={this.state.isModalVisibleContectPerson}\r\n          handleModal={this.handleToogleModalContectPerson}\r\n          className={\"multiple-appointment select-category\"}\r\n          style={{ minWidth: \"600px\" }}\r\n        >\r\n          <>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"input-group input-group-padding\">\r\n                <div col-md-10 col-sm-10 mb-10>\r\n                  <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n                    {t(\"Add New Contact Person\")}\r\n                  </label>\r\n                </div >\r\n                <div col-md-2 col-sm-2 mb-2>\r\n                  <img onClick={this.handleToogleModalContectPerson} style={{paddingLeft:300}} className=\"close\" src={closeIcon} alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"input-group input-group-padding\">\r\n                <div className=\"col-md-4 col-sm-12 mb-6\">\r\n                  <label className=\"text-left text-black common-label-text fs-17 p-0\" >\r\n                    {t(\"Name\")}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-12 mb-6\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={this.state.corpContactPersionDetail.name}\r\n                    name=\"name\"\r\n                    onChange={this.handleChangeCorpContact}\r\n\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"input-group input-group-padding\">\r\n                <div className=\"col-md-4 col-sm-12 mb-6\">\r\n                  <label className=\"text-left text-black common-label-text fs-17 p-0\" >\r\n                    {t(\"Designation\")}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-12 mb-6\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={this.state.corpContactPersionDetail.designation}\r\n                    name=\"designation\"\r\n                    onChange={this.handleChangeCorpContact}\r\n\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"input-group input-group-padding\">\r\n                <div className=\"col-md-4 col-sm-12 mb-6\">\r\n                  <label className=\"text-left text-black common-label-text fs-17 p-0\" >\r\n                    {t(\"Mobile Number\")}\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 col-sm-12 mb-6\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={this.state.corpContactPersionDetail.mobile_phone}\r\n                    name=\"mobile_phone\"\r\n                    onChange={this.handleChangeCorpContact}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"input-group input-group-padding\">\r\n                <div className=\"col-md-4 col-sm-12 mb-6\">\r\n                  <label className=\"text-left text-black common-label-text fs-17 p-0\" >\r\n                    {t(\"Email Address\")}\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 col-sm-12 mb-6\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={this.state.corpContactPersionDetail.email}\r\n                    name=\"email\"\r\n                    onChange={this.handleChangeCorpContact}\r\n\r\n                  />\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"input-group input-group-padding\">\r\n\r\n                <div className=\"col-md-8 col-sm-12 mb-8\">\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-12 mb-4\">\r\n                  <NormalButton\r\n\r\n                    buttonClass={\"mx-2\"}\r\n                    mainbg={true}\r\n                    className=\"confirm\"\r\n                    label=\"Add\"\r\n                    onClick={() => {\r\n                      if (this.state.corpContactPersionDetail.name && this.state.corpContactPersionDetail.email && this.state.corpContactPersionDetail.designation && this.state.corpContactPersionDetail.mobile_phone)\r\n                      if(!this.state.corpContactPersionDetail.id){  \r\n                      this.setState({ isModalVisibleContactPerson: false, corpContactPersionList: [...this.state.corpContactPersionList, this.state.corpContactPersionDetail] });\r\n                        this.handleToogleModalContectPerson()\r\n                    }else{\r\n                      let list= this.state.corpContactPersionList;\r\n                      let index= list.findIndex(x=>x.id===this.state.corpContactPersionDetail.id);\r\n                      list[index]=this.state.corpContactPersionDetail;\r\n                      let {updatedCorpContactPersionList}=this.state;\r\n                      let updateindex=updatedCorpContactPersionList.findIndex(x=>x.id===this.state.corpContactPersionDetail.id)\r\n                      if(updateindex>-1){\r\n                        updatedCorpContactPersionList[updateindex]=this.state.corpContactPersionDetail\r\n                      }else{\r\n                        updatedCorpContactPersionList.push(this.state.corpContactPersionDetail);\r\n                      }\r\n                      this.setState({ isModalVisibleContactPerson: false, corpContactPersionList: list, updatedCorpContactPersionList });\r\n                      this.handleToogleModalContectPerson()\r\n                    }\r\n                  }\r\n                  }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </>\r\n        </NormalModal>\r\n\r\n\r\n        {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Customer</p> */}\r\n        <div className=\"create-customerplus\">\r\n          <div className=\"head-label-nav p-2\">\r\n            <p\r\n              className=\"category\"\r\n              onClick={() => {\r\n                this.props.match.params.id\r\n                  ? this.props.history.push(\r\n                    `/admin/customerplus/${this.props.match.params.id}/details`\r\n                  )\r\n                  : this.props.history.push(`/admin/customerplus/`);\r\n              }}\r\n            >\r\n              {t(\"Customer\")}\r\n            </p>\r\n            <i className=\"icon-right mx-md-3\"></i>\r\n            <p className=\"sub-category\">\r\n              {t(\r\n                (this.props.match.params.id ? \"Edit\" : \"Add\") + \" New Customer\"\r\n              )}\r\n            </p>\r\n          </div>\r\n          <div className=\"customer-detail\">\r\n            {isLoading ? (\r\n              <div class=\"d-flex mt-5 align-items-center justify-content-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"form-group mb-4 pb-2 row\">\r\n                  <LayoutEditor fields={this.state.fields} editable={false}>\r\n                    {this.renderLayout()}\r\n\r\n                  </LayoutEditor>\r\n                  \r\n                  <div className=\"corp-box\">\r\n                    <div className=\"corp-cust-box\">\r\n                      <label className=\"text-left text-black common-label-text fs-17 p-0\">\r\n                        {t(\"Corporate Customer\")}\r\n\r\n                      </label>\r\n                      <div className=\"input-group\">\r\n                        <input\r\n                          disabled={this.props.match.params.id?true:false}\r\n                          type=\"checkbox\"\r\n                          checked={this.state.cust_corporate}\r\n                          name={\"cust_corporate\"}\r\n                          onChange={() => {\r\n                            let { cust_corporate } = this.state;\r\n                            cust_corporate = !cust_corporate;\r\n                            this.setState({ cust_corporate })\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    {this.state.cust_corporate ?\r\n                      <div className=\"row d-flex\">\r\n                        <div className=\"col-md-6 col-sm-12 mb-6\">\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12 mb-6\">\r\n                          <NormalButton\r\n                            buttonClass={\"mx-2\"}\r\n                            mainbg={true}\r\n                            className=\"confirm\"\r\n                            onClick={this.handleToogleModalContectPerson}\r\n                            label=\"Add New Contact Person\"\r\n\r\n                          />\r\n                        </div>\r\n\r\n                      {this.state.corpContactPersionList.length>0 ? <table className=\"table\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"first-value\"></th>\r\n                              <th>Name</th>\r\n                              <th>Designation</th>\r\n                              <th>Mobile</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.corpContactPersionList.map((e, index) => {\r\n                              return(\r\n                              <tr key={index}>\r\n                                <td> <img onClick={()=>{ let {corpContactPersionList}= this.state; if(e.id){deletedCorpContactPersionList.push(corpContactPersionList[index])}corpContactPersionList.splice(index,1);this.setState({corpContactPersionList})}} className=\"close\" src={closeIcon} alt=\"\" /> </td>\r\n                                <td onClick={()=>{if(e.id){this.setState({corpContactPersionDetail:e});\r\n                                 this.handleToogleModalContectPerson(true);}}}>{e.name}</td>\r\n                                <td>{e.designation}</td>\r\n                                <td>{e.mobile_phone}</td>\r\n\r\n                              </tr>)\r\n                            })}\r\n\r\n                          </tbody>\r\n                        </table>:\"\"\r\n                      }\r\n                      </div> : \"\"\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\r\n                    <NormalButton\r\n                      onClick={this.handleCancel}\r\n                      label=\"CANCEL\"\r\n                      danger={true}\r\n                      className=\"mr-2 col-12\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\r\n                    <NormalButton\r\n                      onClick={() => this.handleSubmit()}\r\n                      label=\"SAVE\"\r\n                      success={true}\r\n                      className=\"mr-2 col-12\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\r\n                    <NormalButton\r\n                      onClick={() => this.handleSubmit(\"catalog\")}\r\n                      label=\"SAVE &amp; CATALOG\"\r\n                      success={true}\r\n                      className=\"mr-2 col-12\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customerPlusDetail: state.customerPlus.customerPlusDetail,\r\n  customerPlusSettings: state.customerPlus.customerPlusSettings,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCustomerPlusSettings,\r\n      updateCustomerPlus,\r\n      CreateCustomerPlus,\r\n      getCustomerPlus,\r\n      updateForm,\r\n      getCommonApi,\r\n      commonDeleteApi,\r\n      commonPatchApi,\r\n      commonCreateApi\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const AddCustomerPlus = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(AddCustomerPlusClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}