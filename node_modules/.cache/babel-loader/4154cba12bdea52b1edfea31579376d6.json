{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Cart\\\\treatmentDone\\\\TreatmentUsageDetail.js\";\nimport { NormalInput, NormalSelect, NormalButton } from \"component/common\";\nimport React, { Component } from \"react\";\nimport { getCommonApi, commonCreateApi, commonPatchApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nexport class TreatmentUsageDetailClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      treatmentDetailFace: {\n        id: 0,\n        str1: \"\",\n        str2: \"\",\n        str3: \"\",\n        str4: \"\",\n        str5: \"\",\n        room_id: \"\",\n        remarks: \"\",\n        treatment_code: \"\"\n      },\n      TreatmentHistoryId: 0,\n      treatmentDetailId: 0,\n      RoomList: [],\n      remarks: \"\"\n    };\n\n    this.componentDidMount = () => {\n      this.getRoomList();\n      this.getTreatmentUsageDetailTabInfo(this.props.TreatmentHistoryId);\n    };\n\n    this.getTreatmentUsageDetailTabInfo = async TreatId => {\n      await this.setState({\n        TreatmentHistoryId: this.props.TreatmentHistoryId,\n        treatment_code: this.props.treatment_code,\n        remarks: this.props.remarks\n      });\n      let {\n        treatmentDetailFace\n      } = this.state;\n      this.props.getCommonApi(`treatmentface/?treat_id=${TreatId}`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          if (data) {\n            treatmentDetailFace[\"str1\"] = data.str1;\n            treatmentDetailFace[\"str2\"] = data.str2;\n            treatmentDetailFace[\"str3\"] = data.str3;\n            treatmentDetailFace[\"str4\"] = data.str4;\n            treatmentDetailFace[\"str5\"] = data.str5; // treatmentDetailFace[\"room_id\"] = data.room_id;\n\n            await this.setState({\n              treatmentDetailFace,\n              treatmentDetailId: data.id\n            });\n          }\n        }\n      });\n    };\n\n    this.handlechange = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      let {\n        treatmentDetailFace\n      } = this.state;\n      treatmentDetailFace[name] = value;\n      this.setState({\n        treatmentDetailFace\n      });\n    };\n\n    this.cleartext = () => {\n      this.setState({\n        treatmentDetailFace: \"\"\n      });\n    };\n\n    this.handleTreatmentUsageDetailSave = detail => {\n      let {\n        TreatmentHistoryId,\n        remarks\n      } = this.state;\n      let Body = {\n        treatment_code: this.props.treatment_code,\n        str1: detail.str1,\n        str2: detail.str2,\n        str3: detail.str3,\n        str4: detail.str4,\n        str5: detail.str5,\n        room_id: \"\",\n        treat_remarks: this.props.remarks\n      };\n      this.props.commonCreateApi(`treatmentface/?treat_id=${TreatmentHistoryId}`, Body).then(async res => {\n        if (res.status === 200) {\n          this.getTreatmentUsageDetailTabInfo(TreatmentHistoryId);\n        }\n      });\n    };\n\n    this.handleTreatmentUsageDetailUpdate = detail => {\n      let {\n        TreatmentHistoryId,\n        treatmentDetailId\n      } = this.state;\n      let Body = {\n        treatment_code: this.props.treatment_code,\n        str1: detail.str1,\n        str2: detail.str2,\n        str3: detail.str3,\n        str4: detail.str4,\n        str5: detail.str5,\n        room_id: detail.room_id,\n        treat_remarks: this.props.remarks\n      };\n      this.props.commonPatchApi(`treatmentface/${treatmentDetailId}/?treat_id=${TreatmentHistoryId}`, Body).then(async res => {\n        if (res.status === 200) {\n          this.getTreatmentUsageDetailTabInfo(TreatmentHistoryId);\n        }\n      });\n    };\n\n    this.getRoomList = () => {\n      let {\n        RoomList\n      } = this.state;\n      this.props.getCommonApi(`room/`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            RoomList.push({\n              value: value.id,\n              label: value.displayname\n            });\n          }\n\n          await this.setState({\n            RoomList\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    let {\n      treatmentDetailFace,\n      treatmentDetailId,\n      RoomList\n    } = this.state;\n    let {\n      str1,\n      str2,\n      str3,\n      str4,\n      str5,\n      room_id\n    } = treatmentDetailFace;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column p-2 m-2 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-2 w-100 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      name: \"str1\",\n      onChange: e => this.handlechange(e),\n      value: str1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-2 w-100 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      name: \"str2\",\n      onChange: e => this.handlechange(e),\n      value: str2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-2 w-100 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      name: \"str3\",\n      onChange: e => this.handlechange(e),\n      value: str3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-2 w-100 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      name: \"str4\",\n      onChange: e => this.handlechange(e),\n      value: str4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-2 w-100 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      name: \"str5\",\n      onChange: e => this.handlechange(e),\n      value: str5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center justify-content-start w-100 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, treatmentDetailId && treatmentDetailId > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"col-2\",\n      mainbg: true,\n      className: \"col-12 ml-4 fs-15 \",\n      label: \"Update\",\n      onClick: () => this.handleTreatmentUsageDetailUpdate(treatmentDetailFace),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"col-2\",\n      mainbg: true,\n      className: \"col-12 ml-4 fs-15 \",\n      label: \"Save\",\n      onClick: () => this.handleTreatmentUsageDetailSave(treatmentDetailFace),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({// filter: state.dashboard\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonCreateApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const TreatmentUsageDetail = connect(mapStateToProps, mapDispatchToProps)(TreatmentUsageDetailClass);","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Cart/treatmentDone/TreatmentUsageDetail.js"],"names":["NormalInput","NormalSelect","NormalButton","React","Component","getCommonApi","commonCreateApi","commonPatchApi","connect","bindActionCreators","TreatmentUsageDetailClass","state","treatmentDetailFace","id","str1","str2","str3","str4","str5","room_id","remarks","treatment_code","TreatmentHistoryId","treatmentDetailId","RoomList","componentDidMount","getRoomList","getTreatmentUsageDetailTabInfo","props","TreatId","setState","then","key","status","data","handlechange","target","name","value","cleartext","handleTreatmentUsageDetailSave","detail","Body","treat_remarks","res","handleTreatmentUsageDetailUpdate","push","label","displayname","render","e","mapStateToProps","mapDispatchToProps","dispatch","TreatmentUsageDetail"],"mappings":"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","sourcesContent":["import { NormalInput, NormalSelect, NormalButton } from \"component/common\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  getCommonApi,\r\n  commonCreateApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nexport class TreatmentUsageDetailClass extends Component {\r\n  state = {\r\n    treatmentDetailFace: {\r\n      id: 0,\r\n      str1: \"\",\r\n      str2: \"\",\r\n      str3: \"\",\r\n      str4: \"\",\r\n      str5: \"\",\r\n      room_id: \"\",\r\n      remarks: \"\",\r\n      treatment_code: \"\",\r\n    },\r\n    TreatmentHistoryId: 0,\r\n    treatmentDetailId: 0,\r\n    RoomList: [],\r\n    remarks: \"\",\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getRoomList();\r\n    this.getTreatmentUsageDetailTabInfo(this.props.TreatmentHistoryId);\r\n  };\r\n\r\n  getTreatmentUsageDetailTabInfo = async TreatId => {\r\n    await this.setState({\r\n      TreatmentHistoryId: this.props.TreatmentHistoryId,\r\n      treatment_code: this.props.treatment_code,\r\n      remarks: this.props.remarks,\r\n    });\r\n    let { treatmentDetailFace } = this.state;\r\n    this.props\r\n      .getCommonApi(`treatmentface/?treat_id=${TreatId}`)\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          if (data) {\r\n            treatmentDetailFace[\"str1\"] = data.str1;\r\n            treatmentDetailFace[\"str2\"] = data.str2;\r\n            treatmentDetailFace[\"str3\"] = data.str3;\r\n            treatmentDetailFace[\"str4\"] = data.str4;\r\n            treatmentDetailFace[\"str5\"] = data.str5;\r\n            // treatmentDetailFace[\"room_id\"] = data.room_id;\r\n            await this.setState({\r\n              treatmentDetailFace,\r\n              treatmentDetailId: data.id,\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n  handlechange = ({ target: { name, value } }) => {\r\n    let { treatmentDetailFace } = this.state;\r\n    treatmentDetailFace[name] = value;\r\n    this.setState({\r\n      treatmentDetailFace,\r\n    });\r\n  };\r\n\r\n  cleartext = () => {\r\n    this.setState({\r\n      treatmentDetailFace: \"\",\r\n    });\r\n  };\r\n\r\n  handleTreatmentUsageDetailSave = detail => {\r\n    let { TreatmentHistoryId, remarks } = this.state;\r\n    let Body = {\r\n      treatment_code: this.props.treatment_code,\r\n      str1: detail.str1,\r\n      str2: detail.str2,\r\n      str3: detail.str3,\r\n      str4: detail.str4,\r\n      str5: detail.str5,\r\n      room_id: \"\",\r\n      treat_remarks: this.props.remarks,\r\n    };\r\n    this.props\r\n      .commonCreateApi(`treatmentface/?treat_id=${TreatmentHistoryId}`, Body)\r\n      .then(async res => {\r\n        if (res.status === 200) {\r\n          this.getTreatmentUsageDetailTabInfo(TreatmentHistoryId);\r\n        }\r\n      });\r\n  };\r\n\r\n  handleTreatmentUsageDetailUpdate = detail => {\r\n    let { TreatmentHistoryId, treatmentDetailId } = this.state;\r\n    let Body = {\r\n      treatment_code: this.props.treatment_code,\r\n      str1: detail.str1,\r\n      str2: detail.str2,\r\n      str3: detail.str3,\r\n      str4: detail.str4,\r\n      str5: detail.str5,\r\n      room_id: detail.room_id,\r\n      treat_remarks: this.props.remarks,\r\n    };\r\n    this.props\r\n      .commonPatchApi(\r\n        `treatmentface/${treatmentDetailId}/?treat_id=${TreatmentHistoryId}`,\r\n        Body\r\n      )\r\n      .then(async res => {\r\n        if (res.status === 200) {\r\n          this.getTreatmentUsageDetailTabInfo(TreatmentHistoryId);\r\n        }\r\n      });\r\n  };\r\n  getRoomList = () => {\r\n    let { RoomList } = this.state;\r\n    this.props.getCommonApi(`room/`).then(async key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          RoomList.push({\r\n            value: value.id,\r\n            label: value.displayname,\r\n          });\r\n        }\r\n        await this.setState({ RoomList });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    let { treatmentDetailFace, treatmentDetailId, RoomList } = this.state;\r\n    let { str1, str2, str3, str4, str5, room_id } = treatmentDetailFace;\r\n\r\n    return (\r\n      <div className=\"d-flex flex-column p-2 m-2 mt-2\">\r\n        <div className=\"my-2 w-100 col-6\">\r\n          <NormalInput\r\n            name=\"str1\"\r\n            onChange={e => this.handlechange(e)}\r\n            value={str1}\r\n          />\r\n        </div>\r\n        <div className=\"my-2 w-100 col-6\">\r\n          <NormalInput\r\n            name=\"str2\"\r\n            onChange={e => this.handlechange(e)}\r\n            value={str2}\r\n          />\r\n        </div>\r\n        <div className=\"my-2 w-100 col-6\">\r\n          <NormalInput\r\n            name=\"str3\"\r\n            onChange={e => this.handlechange(e)}\r\n            value={str3}\r\n          />\r\n        </div>\r\n        <div className=\"my-2 w-100 col-6\">\r\n          <NormalInput\r\n            name=\"str4\"\r\n            onChange={e => this.handlechange(e)}\r\n            value={str4}\r\n          />\r\n        </div>\r\n        <div className=\"my-2 w-100 col-6\">\r\n          <NormalInput\r\n            name=\"str5\"\r\n            onChange={e => this.handlechange(e)}\r\n            value={str5}\r\n          />\r\n        </div>\r\n        {/* <div className=\"my-2 w-100 col-3\">\r\n          <NormalSelect\r\n            name=\"room_id\"\r\n            options={RoomList}\r\n            onChange={e => this.handlechange(e)}\r\n            value={room_id}\r\n            placeholder={`Select Room`}\r\n          />\r\n        </div> */}\r\n        <div className=\"row text-center justify-content-start w-100 mt-3\">\r\n          {treatmentDetailId && treatmentDetailId > 0 ? (\r\n            <>\r\n              <NormalButton\r\n                buttonClass={\"col-2\"}\r\n                mainbg={true}\r\n                className=\"col-12 ml-4 fs-15 \"\r\n                label=\"Update\"\r\n                onClick={() =>\r\n                  this.handleTreatmentUsageDetailUpdate(treatmentDetailFace)\r\n                }\r\n              />\r\n            </>\r\n          ) : (\r\n            <NormalButton\r\n              buttonClass={\"col-2\"}\r\n              mainbg={true}\r\n              className=\"col-12 ml-4 fs-15 \"\r\n              label=\"Save\"\r\n              onClick={() =>\r\n                this.handleTreatmentUsageDetailSave(treatmentDetailFace)\r\n              }\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // filter: state.dashboard\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TreatmentUsageDetail = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TreatmentUsageDetailClass);\r\n"]},"metadata":{},"sourceType":"module"}