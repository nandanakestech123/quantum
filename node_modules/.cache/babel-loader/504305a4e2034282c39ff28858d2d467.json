{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\CustomerPlus\\\\CustomerPlusSettings\\\\EditLayout\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCustomerPlusSettings, updateCustomerPlusSettings } from \"redux/actions/customerPlus\";\nimport { NormalInput, NormalDateTime, NormalSelect, NormalMultiSelect, NormalButton, LayoutEditor } from \"component/common\";\nimport { withTranslation } from \"react-i18next\";\nexport class EditLayoutClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {},\n      fields: [{\n        id: 1,\n        field_name: \"cust_dob\",\n        display_field_name: \"Customer DOB\",\n        visible_in_registration: true,\n        visible_in_listing: true,\n        visible_in_profile: true,\n        mandatory: true,\n        data_type: \"Dat\",\n        selection: null\n      }],\n      layout: {\n        lg: [],\n        sm: [],\n        md: []\n      },\n      isLoading: true,\n      isMounted: true\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.loadData = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await this.props.getCustomerPlusSettings(\"details\");\n      this.state.fields = this.props.customerPlusSettings.filter(e => e.visible_in_registration);\n      this.state.formFields = this.state.fields.reduce((map, obj) => {\n        map[obj.field_name] = \"\";\n        return map;\n      }, {});\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleSubmit = async () => {\n      this.setState({\n        isLoading: true\n      });\n      let {\n        layout,\n        fields\n      } = this.state;\n      layout.lg.forEach(e => {\n        let {\n          w,\n          h,\n          x,\n          y\n        } = e;\n        fields.find(e2 => e2.id == e.i).layout.lg = {\n          w,\n          h,\n          x,\n          y\n        };\n      });\n      layout.md.forEach(e => {\n        let {\n          w,\n          h,\n          x,\n          y\n        } = e;\n        fields.find(e2 => e2.id == e.i).layout.md = {\n          w,\n          h,\n          x,\n          y\n        };\n      });\n      layout.sm.forEach(e => {\n        let {\n          w,\n          h,\n          x,\n          y\n        } = e;\n        fields.find(e2 => e2.id == e.i).layout.sm = {\n          w,\n          h,\n          x,\n          y\n        };\n      });\n\n      try {\n        await this.props.updateCustomerPlusSettings({\n          customerControlList: fields\n        });\n      } catch (e) {\n        console.log(e);\n      }\n\n      this.loadData();\n    };\n\n    this.renderLayout = () => {\n      let {\n        t\n      } = this.props;\n      let filtered = this.state.fields;\n\n      const renderFormData = (e, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        }, e.data_type == \"text\" ? /*#__PURE__*/React.createElement(NormalInput, {\n          placeholder: e.field_name,\n          name: e.field_name,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"date\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"datetime\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"selection\" ? /*#__PURE__*/React.createElement(NormalSelect, {\n          placeholder: e.field_name,\n          name: e.field_name,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"multiSelect\" ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n          placeholder: e.field_name,\n          name: e.field_name,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"boolean\" ? /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: e.field_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"number\" ? /*#__PURE__*/React.createElement(NormalInput, {\n          type: \"number\",\n          placeholder: e.field_name,\n          name: e.field_name,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }\n        }) : t(\"NO FILED RENDER DATA FOUND\")));\n      };\n\n      return filtered.map(e => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: `${e.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }\n        }, e.showLabel && /*#__PURE__*/React.createElement(\"label\", {\n          className: \"text-left text-black common-label-text fs-17\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }\n        }, t(e.display_field_name)), renderFormData(e));\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    let {\n      isLoading\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer-section container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customerplus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"head-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, t(\"Edit Form Layout\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Loading...\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(),\n      label: \"SAVE\",\n      mainbg: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2 row border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LayoutEditor, {\n      fields: this.state.fields,\n      onChange: layout => this.updateState({\n        layout\n      }),\n      editable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, this.renderLayout()))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerPlusSettings: state.customerPlus.customerPlusSettings\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCustomerPlusSettings,\n    updateCustomerPlusSettings\n  }, dispatch);\n};\n\nexport const CustomerPlusEditLayout = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(EditLayoutClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/CustomerPlus/CustomerPlusSettings/EditLayout/index.js"],"names":["React","Component","connect","bindActionCreators","getCustomerPlusSettings","updateCustomerPlusSettings","NormalInput","NormalDateTime","NormalSelect","NormalMultiSelect","NormalButton","LayoutEditor","withTranslation","EditLayoutClass","state","formFields","fields","id","field_name","display_field_name","visible_in_registration","visible_in_listing","visible_in_profile","mandatory","data_type","selection","layout","lg","sm","md","isLoading","isMounted","updateState","data","setState","loadData","props","customerPlusSettings","filter","e","reduce","map","obj","handleSubmit","forEach","w","h","x","y","find","e2","i","customerControlList","console","log","renderLayout","t","filtered","renderFormData","index","showLabel","componentWillUnmount","componentDidMount","render","mapStateToProps","customerPlus","mapDispatchToProps","dispatch","CustomerPlusEditLayout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCustomerPlusSettings,\r\n  updateCustomerPlusSettings,\r\n} from \"redux/actions/customerPlus\";\r\nimport {\r\n  NormalInput,\r\n  NormalDateTime,\r\n  NormalSelect,\r\n  NormalMultiSelect,\r\n  NormalButton,\r\n  LayoutEditor,\r\n} from \"component/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class EditLayoutClass extends Component {\r\n  state = {\r\n    formFields: {},\r\n    fields: [\r\n      {\r\n        id: 1,\r\n        field_name: \"cust_dob\",\r\n        display_field_name: \"Customer DOB\",\r\n        visible_in_registration: true,\r\n        visible_in_listing: true,\r\n        visible_in_profile: true,\r\n        mandatory: true,\r\n        data_type: \"Dat\",\r\n        selection: null,\r\n      },\r\n    ],\r\n    layout: { lg: [], sm: [], md: [] },\r\n    isLoading: true,\r\n    isMounted: true,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.isMounted = false;\r\n  }\r\n\r\n  updateState = data => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData = async () => {\r\n    this.setState({ isLoading: true });\r\n    await this.props.getCustomerPlusSettings(\"details\");\r\n    this.state.fields = this.props.customerPlusSettings.filter(\r\n      e => e.visible_in_registration\r\n    );\r\n    this.state.formFields = this.state.fields.reduce((map, obj) => {\r\n      map[obj.field_name] = \"\";\r\n      return map;\r\n    }, {});\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    this.setState({ isLoading: true });\r\n    let { layout, fields } = this.state;\r\n    layout.lg.forEach(e => {\r\n      let { w, h, x, y } = e;\r\n      fields.find(e2 => e2.id == e.i).layout.lg = { w, h, x, y };\r\n    });\r\n    layout.md.forEach(e => {\r\n      let { w, h, x, y } = e;\r\n      fields.find(e2 => e2.id == e.i).layout.md = { w, h, x, y };\r\n    });\r\n    layout.sm.forEach(e => {\r\n      let { w, h, x, y } = e;\r\n      fields.find(e2 => e2.id == e.i).layout.sm = { w, h, x, y };\r\n    });\r\n    try {\r\n      await this.props.updateCustomerPlusSettings({\r\n        customerControlList: fields,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    this.loadData();\r\n  };\r\n\r\n  renderLayout = () => {\r\n    let { t } = this.props;\r\n    let filtered = this.state.fields;\r\n    const renderFormData = (e, index) => {\r\n      return (\r\n        <div key={index}>\r\n          <div className=\"input-group\">\r\n            {e.data_type == \"text\" ? (\r\n              <NormalInput\r\n                placeholder={e.field_name}\r\n                name={e.field_name}\r\n                disabled={true}\r\n              />\r\n            ) : e.data_type == \"date\" ? (\r\n              <NormalDateTime disabled={true} />\r\n            ) : e.data_type == \"datetime\" ? (\r\n              <NormalDateTime disabled={true} />\r\n            ) : e.data_type == \"selection\" ? (\r\n              <NormalSelect\r\n                placeholder={e.field_name}\r\n                name={e.field_name}\r\n                disabled={true}\r\n              />\r\n            ) : e.data_type == \"multiSelect\" ? (\r\n              <NormalMultiSelect\r\n                placeholder={e.field_name}\r\n                name={e.field_name}\r\n                disabled={true}\r\n              />\r\n            ) : e.data_type == \"boolean\" ? (\r\n              <input type=\"checkbox\" name={e.field_name} />\r\n            ) : e.data_type == \"number\" ? (\r\n              <NormalInput\r\n                type=\"number\"\r\n                placeholder={e.field_name}\r\n                name={e.field_name}\r\n                disabled={true}\r\n              />\r\n            ) : (\r\n              t(\"NO FILED RENDER DATA FOUND\")\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n    return filtered.map(e => {\r\n      return (\r\n        <div key={`${e.id}`}>\r\n          {e.showLabel && (\r\n            <label className=\"text-left text-black common-label-text fs-17\">\r\n              {t(e.display_field_name)}\r\n            </label>\r\n          )}\r\n          {renderFormData(e)}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { isLoading } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <div className=\"create-customer-section container-fluid\">\r\n        {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Customer</p> */}\r\n        <div className=\"create-customerplus\">\r\n          <div className=\"col-md-12 mb-4\">\r\n            <h3 className=\"head-label\">{t(\"Edit Form Layout\")}</h3>\r\n          </div>\r\n          <div className=\"customer-detail\">\r\n            {isLoading ? (\r\n              <div class=\"d-flex mt-5 align-items-center justify-content-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"row d-flex justify-content-end\">\r\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\r\n                    <NormalButton\r\n                      onClick={() => this.handleSubmit()}\r\n                      label=\"SAVE\"\r\n                      mainbg={true}\r\n                      className=\"mr-2 col-12\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mb-4 pb-2 row border\">\r\n                  <LayoutEditor\r\n                    fields={this.state.fields}\r\n                    onChange={layout => this.updateState({ layout })}\r\n                    editable={true}\r\n                  >\r\n                    {this.renderLayout()}\r\n                  </LayoutEditor>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customerPlusSettings: state.customerPlus.customerPlusSettings,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCustomerPlusSettings,\r\n      updateCustomerPlusSettings,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const CustomerPlusEditLayout = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(EditLayoutClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}