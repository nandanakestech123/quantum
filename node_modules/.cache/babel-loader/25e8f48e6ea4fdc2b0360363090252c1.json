{"ast":null,"code":"import { Backend } from \"service/apiVariables\"; //get ReverseTrmtReason\n\nexport const ReverseTrmtReason = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ReverseTrmtReason,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const updateCommon = (id, body) => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    Backend.updateCommon.addQuery = {\n      key: \"id\",\n      payload: id\n    };\n    api({ ...Backend.updateCommon,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Newappointreason = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Newappointreason,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ReverseTrmtReasonupdate = (id, body) => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    Backend.ReverseTrmtReasonupdate.addQuery = {\n      key: \"id\",\n      payload: id\n    };\n    api({ ...Backend.ReverseTrmtReasonupdate,\n      body,\n      header: {\n        type: \"Content-Type\",\n        value: \"application/json\"\n      }\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n}; //get Diagnosissetups\n\nexport const Diagnosissetups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Diagnosissetups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewDiagosissetup = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewDiagosissetup,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Myequipments = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Myequipments,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewMyequipments = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewMyequipments,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Rooms = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Rooms,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewRooms = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewRooms,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const BlockReason = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.BlockReason,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewBlockReason = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewBlockReason,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const AppointmentGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.AppointmentGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewAppointmentGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewAppointmentGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ApptBookingStatuses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ApptBookingStatuses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewApptBookingStatuses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewApptBookingStatuses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ApptTypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ApptTypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewApptTypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewApptTypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ApptSecondaryStatuses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ApptSecondaryStatuses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewApptSecondaryStatuses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewApptSecondaryStatuses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemStatusGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemStatusGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemStatusGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemStatusGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemStatuses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemStatuses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemStatuses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemStatuses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const PaymentRemarks = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.PaymentRemarks,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewPaymentRemarks = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewPaymentRemarks,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const FocReasons = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.FocReasons,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewFocReasons = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewFocReasons,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Occupationtypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Occupationtypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewOccupationtypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewOccupationtypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Sources = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Sources,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewSources = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewSources,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const TransactionReasons = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.TransactionReasons,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewTransactionReasons = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewTransactionReasons,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const VoidReasons = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.VoidReasons,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewVoidReasons = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewVoidReasons,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Businesshrs = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Businesshrs,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewBusinesshrs = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewBusinesshrs,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const TaxType1TaxCodes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.TaxType1TaxCodes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewTaxType1TaxCodes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewTaxType1TaxCodes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const TaxType2TaxCodes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.TaxType2TaxCodes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewTaxType2TaxCodes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewTaxType2TaxCodes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const BrManuals = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.BrManuals,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewBrManuals = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewBrManuals,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const getStocks = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.getStocks,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewStocks = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewStocks,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemDivs = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemDivs,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemUom = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemUom,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemUom = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemUom,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const SiteGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.SiteGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemSitelists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemSitelists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const VoucherConditions = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.VoucherConditions,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemBrands = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemBrands,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemBrands = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemBrands,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemSupplies = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemSupplies,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemSupplies = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemSupplies,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemDepts = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemDepts,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemDepts = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemDepts,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemClasses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemClasses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemClasses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemClasses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const RewardPolicies = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.RewardPolicies,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewRewardPolicies = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewRewardPolicies,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const RedeemLists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.RedeemLists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewRedeemLists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewRedeemLists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Securities = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Securities,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewSecurities = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewSecurities,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Cities = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Cities,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCities = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCities,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const States = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.States,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewStates = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewStates,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Countries = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Countries,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCountries = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCountries,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const CommGroupHdrs = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.CommGroupHdrs,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCommGroupHdrs = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCommGroupHdrs,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const EmpLevels = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.EmpLevels,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewEmpLevels = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewEmpLevels,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewSiteGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewSiteGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemSitelists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemSitelists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const rangelists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.rangelists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Newrangelists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Newrangelists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const PayGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.PayGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewPayGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewPayGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemTypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemTypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemUomprices = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemUomprices,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemUomprices = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemUomprices,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemLinks = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemLinks,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemLinks = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemLinks,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemStocklists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemStocklists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemStocklists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemStocklists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemRanges = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemRanges,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemRanges = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemRanges,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const PrepaidOpenConditions = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.PrepaidOpenConditions,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewPrepaidOpenConditions = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewPrepaidOpenConditions,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ItemBatches = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ItemBatches,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const GstSettings = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.GstSettings,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewGstSettings = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewGstSettings,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Races = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Races,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewRaces = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewRaces,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Agegroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Agegroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewAgegroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewAgegroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Corporatecustomers = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Corporatecustomers,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCorporatecustomers = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCorporatecustomers,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const SkinTypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.SkinTypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewSkinTypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewSkinTypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Languages = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Languages,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewLanguages = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewLanguages,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Locations = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Locations,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewLocations = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewLocations,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Genders = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Genders,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewGenders = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewGenders,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const CustomerClasses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.CustomerClasses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCustomerClasses = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCustomerClasses,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const CustomerTypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.CustomerTypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCustomerTypes = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCustomerTypes,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const CustomerGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.CustomerGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCustomerGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCustomerGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const CustomerGroup2s = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.CustomerGroup2s,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCustomerGroup2s = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCustomerGroup2s,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const CustomerGroup3s = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.CustomerGroup3s,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewCustomerGroup3s = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewCustomerGroup3s,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const ProductGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.ProductGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewProductGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewProductGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Departmentaldiscounts = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Departmentaldiscounts,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewDepartmentaldiscounts = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewDepartmentaldiscounts,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Paytables = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Paytables,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewPaytables = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewPaytables,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const PackageDtls = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.PackageDtls,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewPackageDtls = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewPackageDtls,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const PackageHdrs = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.PackageHdrs,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewPackageHdrs = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewPackageHdrs,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const PackageItemDetails = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.PackageItemDetails,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewPackageItemDetails = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewPackageItemDetails,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Itemusagelists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Itemusagelists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewItemusagelists = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewItemusagelists,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const Usagelevels = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.Usagelevels,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const NewUsagelevels = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.NewUsagelevels,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const CommissionSiteGroups = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.CommissionSiteGroups,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const CommGroupDtls = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.CommGroupDtls,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const getCommGroupDtls = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Backend.getCommGroupDtls,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/redux/actions/Backend.js"],"names":["Backend","ReverseTrmtReason","body","dispatch","getState","api","Toast","Promise","resolve","reject","then","response","catch","message","type","updateCommon","id","addQuery","key","payload","Newappointreason","ReverseTrmtReasonupdate","header","value","Diagnosissetups","NewDiagosissetup","Myequipments","NewMyequipments","Rooms","NewRooms","BlockReason","NewBlockReason","AppointmentGroups","NewAppointmentGroups","ApptBookingStatuses","NewApptBookingStatuses","ApptTypes","NewApptTypes","ApptSecondaryStatuses","NewApptSecondaryStatuses","ItemStatusGroups","NewItemStatusGroups","ItemStatuses","NewItemStatuses","PaymentRemarks","NewPaymentRemarks","FocReasons","NewFocReasons","Occupationtypes","NewOccupationtypes","Sources","NewSources","TransactionReasons","NewTransactionReasons","VoidReasons","NewVoidReasons","Businesshrs","NewBusinesshrs","TaxType1TaxCodes","NewTaxType1TaxCodes","TaxType2TaxCodes","NewTaxType2TaxCodes","BrManuals","NewBrManuals","getStocks","NewStocks","ItemDivs","ItemUom","NewItemUom","SiteGroups","ItemSitelists","VoucherConditions","ItemBrands","NewItemBrands","ItemSupplies","NewItemSupplies","ItemDepts","NewItemDepts","ItemClasses","NewItemClasses","RewardPolicies","NewRewardPolicies","RedeemLists","NewRedeemLists","Securities","NewSecurities","Cities","NewCities","States","NewStates","Countries","NewCountries","CommGroupHdrs","NewCommGroupHdrs","EmpLevels","NewEmpLevels","NewSiteGroups","NewItemSitelists","rangelists","Newrangelists","PayGroups","NewPayGroups","ItemTypes","ItemUomprices","NewItemUomprices","ItemLinks","NewItemLinks","ItemStocklists","NewItemStocklists","ItemRanges","NewItemRanges","PrepaidOpenConditions","NewPrepaidOpenConditions","ItemBatches","GstSettings","NewGstSettings","Races","NewRaces","Agegroups","NewAgegroups","Corporatecustomers","NewCorporatecustomers","SkinTypes","NewSkinTypes","Languages","NewLanguages","Locations","NewLocations","Genders","NewGenders","CustomerClasses","NewCustomerClasses","CustomerTypes","NewCustomerTypes","CustomerGroups","NewCustomerGroups","CustomerGroup2s","NewCustomerGroup2s","CustomerGroup3s","NewCustomerGroup3s","ProductGroups","NewProductGroups","Departmentaldiscounts","NewDepartmentaldiscounts","Paytables","NewPaytables","PackageDtls","NewPackageDtls","PackageHdrs","NewPackageHdrs","PackageItemDetails","NewPackageItemDetails","Itemusagelists","NewItemusagelists","Usagelevels","NewUsagelevels","CommissionSiteGroups","CommGroupDtls","getCommGroupDtls"],"mappings":"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","sourcesContent":["import { Backend } from \"service/apiVariables\";\r\n\r\n//get ReverseTrmtReason\r\nexport const ReverseTrmtReason =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ReverseTrmtReason, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const updateCommon =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      Backend.updateCommon.addQuery = { key: \"id\", payload: id };\r\n      api({ ...Backend.updateCommon, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Newappointreason =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Newappointreason, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ReverseTrmtReasonupdate =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      Backend.ReverseTrmtReasonupdate.addQuery = { key: \"id\", payload: id };\r\n      api({\r\n        ...Backend.ReverseTrmtReasonupdate,\r\n        body,\r\n        header: { type: \"Content-Type\", value: \"application/json\" },\r\n      })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n//get Diagnosissetups\r\nexport const Diagnosissetups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Diagnosissetups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewDiagosissetup =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewDiagosissetup, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Myequipments =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Myequipments, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewMyequipments =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewMyequipments, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Rooms =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Rooms, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewRooms =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewRooms, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const BlockReason =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.BlockReason, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewBlockReason =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewBlockReason, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const AppointmentGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.AppointmentGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewAppointmentGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewAppointmentGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ApptBookingStatuses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ApptBookingStatuses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewApptBookingStatuses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewApptBookingStatuses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ApptTypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ApptTypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewApptTypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewApptTypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\nexport const ApptSecondaryStatuses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ApptSecondaryStatuses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewApptSecondaryStatuses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewApptSecondaryStatuses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemStatusGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemStatusGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemStatusGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemStatusGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemStatuses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemStatuses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemStatuses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemStatuses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const PaymentRemarks =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.PaymentRemarks, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewPaymentRemarks =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewPaymentRemarks, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const FocReasons =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.FocReasons, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewFocReasons =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewFocReasons, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Occupationtypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Occupationtypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewOccupationtypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewOccupationtypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Sources =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Sources, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewSources =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewSources, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const TransactionReasons =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.TransactionReasons, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewTransactionReasons =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewTransactionReasons, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const VoidReasons =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.VoidReasons, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewVoidReasons =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewVoidReasons, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Businesshrs =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Businesshrs, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewBusinesshrs =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewBusinesshrs, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const TaxType1TaxCodes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.TaxType1TaxCodes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewTaxType1TaxCodes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewTaxType1TaxCodes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const TaxType2TaxCodes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.TaxType2TaxCodes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewTaxType2TaxCodes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewTaxType2TaxCodes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const BrManuals =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.BrManuals, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewBrManuals =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewBrManuals, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const getStocks =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.getStocks, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewStocks =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewStocks, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemDivs =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemDivs, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemUom =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemUom, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemUom =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemUom, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const SiteGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.SiteGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemSitelists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemSitelists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const VoucherConditions =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.VoucherConditions, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemBrands =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemBrands, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemBrands =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemBrands, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemSupplies =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemSupplies, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemSupplies =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemSupplies, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemDepts =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemDepts, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemDepts =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemDepts, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemClasses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemClasses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemClasses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemClasses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const RewardPolicies =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.RewardPolicies, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewRewardPolicies =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewRewardPolicies, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const RedeemLists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.RedeemLists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewRedeemLists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewRedeemLists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Securities =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Securities, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewSecurities =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewSecurities, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Cities =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Cities, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCities =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCities, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const States =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.States, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewStates =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewStates, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Countries =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Countries, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCountries =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCountries, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const CommGroupHdrs =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.CommGroupHdrs, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCommGroupHdrs =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCommGroupHdrs, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const EmpLevels =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.EmpLevels, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewEmpLevels =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewEmpLevels, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewSiteGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewSiteGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemSitelists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemSitelists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const rangelists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.rangelists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Newrangelists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Newrangelists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const PayGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.PayGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewPayGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewPayGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemTypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemTypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemUomprices =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemUomprices, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemUomprices =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemUomprices, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemLinks =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemLinks, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemLinks =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemLinks, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemStocklists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemStocklists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemStocklists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemStocklists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemRanges =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemRanges, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemRanges =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemRanges, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const PrepaidOpenConditions =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.PrepaidOpenConditions, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewPrepaidOpenConditions =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewPrepaidOpenConditions, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ItemBatches =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ItemBatches, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const GstSettings =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.GstSettings, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewGstSettings =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewGstSettings, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Races =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Races, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewRaces =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewRaces, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Agegroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Agegroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewAgegroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewAgegroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Corporatecustomers =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Corporatecustomers, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCorporatecustomers =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCorporatecustomers, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const SkinTypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.SkinTypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewSkinTypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewSkinTypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Languages =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Languages, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewLanguages =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewLanguages, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Locations =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Locations, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewLocations =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewLocations, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Genders =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Genders, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewGenders =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewGenders, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const CustomerClasses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.CustomerClasses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCustomerClasses =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCustomerClasses, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const CustomerTypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.CustomerTypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCustomerTypes =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCustomerTypes, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const CustomerGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.CustomerGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCustomerGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCustomerGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const CustomerGroup2s =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.CustomerGroup2s, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCustomerGroup2s =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCustomerGroup2s, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const CustomerGroup3s =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.CustomerGroup3s, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewCustomerGroup3s =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewCustomerGroup3s, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const ProductGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.ProductGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewProductGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewProductGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Departmentaldiscounts =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Departmentaldiscounts, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewDepartmentaldiscounts =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewDepartmentaldiscounts, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Paytables =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Paytables, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewPaytables =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewPaytables, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const PackageDtls =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.PackageDtls, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewPackageDtls =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewPackageDtls, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const PackageHdrs =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.PackageHdrs, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewPackageHdrs =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewPackageHdrs, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const PackageItemDetails =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.PackageItemDetails, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewPackageItemDetails =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewPackageItemDetails, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Itemusagelists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Itemusagelists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewItemusagelists =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewItemusagelists, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const Usagelevels =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.Usagelevels, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const NewUsagelevels =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.NewUsagelevels, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const CommissionSiteGroups =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.CommissionSiteGroups, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const CommGroupDtls =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.CommGroupDtls, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const getCommGroupDtls =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Backend.getCommGroupDtls, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}