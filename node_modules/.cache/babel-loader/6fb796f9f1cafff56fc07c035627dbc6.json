{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\NewDashboard\\\\PayMode.js\";\nimport React, { Component } from \"react\";\nimport PayModePieChart from \"./PayModePieChart\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { NormalButton, NormalCheckbox, NormalInput, SwitchBox } from \"component/common\";\nimport \"./style.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { AiOutlinePlusCircle, AiOutlineMinusCircle } from \"react-icons/ai\";\nexport class PayModeClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // chartData: {\n      //   chart: {\n      //     plotBackgroundColor: null,\n      //     plotBorderWidth: null,\n      //     plotShadow: false,\n      //     type: \"pie\",\n      //   },\n      //   title: {\n      //     text: \"Browser market shares in January, 2018\",\n      //   },\n      //   tooltip: {\n      //     pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\n      //   },\n      //   accessibility: {\n      //     point: {\n      //       valueSuffix: \"%\",\n      //     },\n      //   },\n      //   plotOptions: {\n      //     pie: {\n      //       allowPointSelect: true,\n      //       innerSize: \"40%\",\n      //       cursor: \"pointer\",\n      //       dataLabels: {\n      //         enabled: true,\n      //         format: \"<b>{point.name}</b>: {point.percentage:.1f} %\",\n      //       },\n      //     },\n      //   },\n      //   series: [\n      //     {\n      //       name: \"\",\n      //       colorByPoint: true,\n      //       data: [\n      //         {\n      //           name: \"Chrome\",\n      //           y: 61.41,\n      //         },\n      //         {\n      //           name: \"Internet Explorer\",\n      //           y: 11.84,\n      //         },\n      //         {\n      //           name: \"Firefox\",\n      //           y: 10.85,\n      //         },\n      //         {\n      //           name: \"Edge\",\n      //           y: 4.67,\n      //         },\n      //         {\n      //           name: \"Safari\",\n      //           y: 4.18,\n      //         },\n      //         {\n      //           name: \"Sogou Explorer\",\n      //           y: 1.64,\n      //         },\n      //         {\n      //           name: \"Opera\",\n      //           y: 1.6,\n      //         },\n      //         {\n      //           name: \"QQ\",\n      //           y: 1.2,\n      //         },\n      //         {\n      //           name: \"Other\",\n      //           y: 2.61,\n      //         },\n      //       ],\n      //     },\n      //   ],\n      // },\n      // TestchartData: {\n      //   chart: {\n      //     plotBackgroundColor: null,\n      //     plotBorderWidth: null,\n      //     plotShadow: false,\n      //     type: \"pie\",\n      //   },\n      //   title: {\n      //     text: \"Browser market shares in January, 2018\",\n      //   },\n      //   tooltip: {\n      //     pointFormat:\n      //       \"<b>count: {point.y}</b><br/>\" + \"<b>Amount($): {point.z:.2f}</b>\",\n      //   },\n      //   accessibility: {\n      //     point: {\n      //       valueSuffix: \"%\",\n      //     },\n      //   },\n      //   plotOptions: {\n      //     pie: {\n      //       allowPointSelect: true,\n      //       innerSize: \"40%\",\n      //       cursor: \"pointer\",\n      //       dataLabels: {\n      //         enabled: true,\n      //         format: \"<b>{point.name}</b>: {point.percent:.2f} %\",\n      //       },\n      //     },\n      //   },\n      //   series: [\n      //     {\n      //       name: \"\",\n      //       colorByPoint: true,\n      //       data: [\n      //         {\n      //           name: \"Chrome\",\n      //           y: 61,\n      //           z: 124.632320000000003,\n      //           color: \"#96c344\",\n      //           percent: 5,\n      //         },\n      //         {\n      //           name: \"Internet Explorer\",\n      //           y: 11,\n      //           z: 124.6,\n      //           color: \"green\",\n      //           percent: 5,\n      //         },\n      //         {\n      //           name: \"Firefox\",\n      //           y: 10,\n      //           z: 129.6,\n      //           color: \"grey\",\n      //           percent: 5,\n      //         },\n      //         {\n      //           name: \"Edge\",\n      //           y: 4,\n      //           color: \"blue\",\n      //           percent: 5,\n      //         },\n      //         {\n      //           name: \"Safari\",\n      //           y: 4,\n      //           z: 123.6,\n      //           color: \"orange\",\n      //           percent: 10,\n      //         },\n      //         {\n      //           name: \"Sogou Explorer\",\n      //           y: 1,\n      //           z: 124.6,\n      //           color: \"black\",\n      //           percent: 8,\n      //         },\n      //         {\n      //           name: \"Opera\",\n      //           y: 1,\n      //           z: 124.6,\n      //           color: \"purple\",\n      //           percent: 6,\n      //         },\n      //         {\n      //           name: \"QQ\",\n      //           y: 2,\n      //           z: 10.6,\n      //           color: \"white\",\n      //           percent: 4,\n      //         },\n      //         {\n      //           name: \"Other\",\n      //           y: 61,\n      //           z: 144.6,\n      //           color: \"royalblue\",\n      //           percent: 2,\n      //         },\n      //       ],\n      //     },\n      //   ],\n      // },\n      chartData: {},\n      dayPayCompare: false,\n      weekPayCompare: false,\n      monthPayCompare: false,\n      yearPayCompare: false,\n      activeMenu: \"today\",\n      paymodeCompare: false,\n      deptmodeCompare: false,\n      divmodeCompare: false,\n      comparedChartData: {},\n      breakstaffmodeCompare: false,\n      breakdeptmodeCompare: false,\n      breakdivmodeCompare: false,\n      tdstaffmodeCompare: false,\n      tddeptmodeCompare: false,\n      tddivmodeCompare: false,\n      isChart: false\n    };\n\n    this.componentDidMount = async () => {\n      let {\n        type\n      } = this.props; // this.getDataByOrder();\n    };\n\n    this.getDataByOrder = async () => {\n      await this.setState({\n        chartData: []\n      });\n      let {\n        chartData,\n        activeMenu\n      } = this.state;\n      let {\n        type\n      } = this.props;\n      let {\n        paymodeCompare,\n        divmodeCompare,\n        deptmodeCompare,\n        breakstaffmodeCompare,\n        breakdivmodeCompare,\n        breakdeptmodeCompare,\n        tddeptmodeCompare,\n        tddivmodeCompare,\n        tdstaffmodeCompare\n      } = this.state;\n      this.props.getCommonApi(`${this.props.apiURL}/?type=${activeMenu}`).then(async res => {\n        chartData = res.data[0];\n        console.log(chartData, \"paymodedata\");\n        await this.setState({\n          chartData\n        });\n      });\n\n      if (type == \"paymode\" && paymodeCompare || type == \"department\" && deptmodeCompare || type == \"division\" && divmodeCompare || type == \"staff\" && breakstaffmodeCompare || type == \"department\" && breakdeptmodeCompare || type == \"division\" && breakdivmodeCompare || type == \"staff\" && tdstaffmodeCompare || type == \"department\" && tddeptmodeCompare || type == \"division\" && tddivmodeCompare) {\n        await this.setState({\n          comparedChartData: {}\n        });\n        this.getDataByOrdercompared();\n      } else {\n        await this.setState({\n          comparedChartData: {}\n        });\n      }\n    };\n\n    this.toggle = async tab => {\n      if (this.state.activeMenu !== tab) {\n        await this.setState({\n          activeMenu: tab\n        });\n        this.getDataByOrder();\n      }\n    };\n\n    this.handleCompareChange = async ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      await this.setState({\n        [name]: value\n      });\n      this.getcompareFlow();\n    };\n\n    this.getcompareFlow = async () => {\n      let {\n        type\n      } = this.props;\n      let {\n        paymodeCompare,\n        divmodeCompare,\n        deptmodeCompare,\n        breakdeptmodeCompare,\n        breakdivmodeCompare,\n        breakstaffmodeCompare,\n        tddeptmodeCompare,\n        tddivmodeCompare,\n        tdstaffmodeCompare\n      } = this.state;\n\n      if (type == \"paymode\" && paymodeCompare || type == \"department\" && deptmodeCompare || type == \"division\" && divmodeCompare || type == \"staff\" && breakstaffmodeCompare || type == \"department\" && breakdeptmodeCompare || type == \"division\" && breakdivmodeCompare || type == \"staff\" && tdstaffmodeCompare || type == \"department\" && tddeptmodeCompare || type == \"division\" && tddivmodeCompare) {\n        await this.setState({\n          comparedChartData: {}\n        });\n        this.getDataByOrdercompared();\n      } else {\n        await this.setState({\n          comparedChartData: {}\n        });\n      }\n    };\n\n    this.getDataByOrdercompared = async () => {\n      let {\n        comparedChartData,\n        activeMenu\n      } = this.state;\n      let comparemenu = this.getComparemenu();\n      this.props.getCommonApi(`${this.props.apiURL}/?type=${comparemenu}`).then(async res => {\n        comparedChartData = res.data[0];\n        console.log(comparedChartData, \"comparedChartData\");\n        await this.setState({\n          comparedChartData\n        });\n      });\n    };\n\n    this.getComparemenu = () => {\n      let {\n        activeMenu\n      } = this.state;\n\n      switch (activeMenu) {\n        case \"today\":\n          return \"yesterday\";\n\n        case \"yesterday\":\n          return \"today\";\n\n        case \"thisweek\":\n          return \"lastweek\";\n\n        case \"lastweek\":\n          return \"thisweek\";\n\n        case \"thismonth\":\n          return \"lastmonth\";\n\n        case \"lastmonth\":\n          return \"thismonth\";\n\n        case \"ytd\":\n          return \"lastyear\";\n\n        case \"lastyear\":\n          return \"ytd\";\n\n        default:\n          return \"\";\n      }\n    };\n\n    this.handlehide = () => {\n      this.setState(prevState => ({\n        isChart: !prevState.isChart\n      }));\n      this.handleLoadChart();\n    };\n\n    this.handleLoadChart = () => {\n      let {\n        isChart\n      } = this.state;\n\n      if (!isChart) {\n        this.getDataByOrder();\n      }\n    };\n  }\n\n  render() {\n    let {\n      chartData,\n      activeMenu,\n      paymodeCompare,\n      deptmodeCompare,\n      divmodeCompare,\n      breakdeptmodeCompare,\n      breakstaffmodeCompare,\n      breakdivmodeCompare,\n      tddeptmodeCompare,\n      tdstaffmodeCompare,\n      tddivmodeCompare,\n      comparedChartData,\n      isChart\n    } = this.state;\n    let {\n      t,\n      type,\n      mainTitle,\n      switchBoxName\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"piechart mb-2 mt-3 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center aligm-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, t(mainTitle))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-11 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-11 col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-detail tab-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filled-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      className: \"day-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"today\"\n      }),\n      onClick: () => {\n        this.toggle(\"today\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 27\n      }\n    }, t(\"Today\"))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"yesterday\"\n      }),\n      onClick: () => {\n        this.toggle(\"yesterday\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 27\n      }\n    }, t(\"Yesterday\"))), /*#__PURE__*/React.createElement(NavItem, {\n      className: \"week-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"thisweek\"\n      }),\n      onClick: () => {\n        this.toggle(\"thisweek\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 27\n      }\n    }, t(\"This Week\"))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"lastweek\"\n      }),\n      onClick: () => {\n        this.toggle(\"lastweek\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 27\n      }\n    }, t(\"Last Week\"))), /*#__PURE__*/React.createElement(NavItem, {\n      className: \"month-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"thismonth\"\n      }),\n      onClick: () => {\n        this.toggle(\"thismonth\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 27\n      }\n    }, t(\"This Month\"))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"lastmonth\"\n      }),\n      onClick: () => {\n        this.toggle(\"lastmonth\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 27\n      }\n    }, t(\"Last Month\"))), /*#__PURE__*/React.createElement(NavItem, {\n      className: \"year-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"ytd\"\n      }),\n      onClick: () => {\n        this.toggle(\"ytd\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 27\n      }\n    }, t(\"YTD\"))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"lastyear\"\n      }),\n      onClick: () => {\n        this.toggle(\"lastyear\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 27\n      }\n    }, t(\"Last Year\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      onClick: this.handlehide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }, isChart == false ? /*#__PURE__*/React.createElement(AiOutlinePlusCircle, {\n      className: \"fs-27\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(AiOutlineMinusCircle, {\n      className: \"fs-27\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    })))))), isChart && /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeMenu,\n      className: \"chart-border p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 21\n      }\n    }, t(\"Compare\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 19\n      }\n    }, type == \"paymode\" && switchBoxName == \"paymodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: paymodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `paymodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 23\n      }\n    }) : type == \"department\" && switchBoxName == \"deptmodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: deptmodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `deptmodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 23\n      }\n    }) : type == \"division\" && switchBoxName == \"divmodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: divmodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `divmodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 23\n      }\n    }) : type == \"staff\" && switchBoxName == \"breakstaffmodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: breakstaffmodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `breakstaffmodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 23\n      }\n    }) : type == \"department\" && switchBoxName == \"breakdeptmodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: breakdeptmodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `breakdeptmodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 23\n      }\n    }) : type == \"division\" && switchBoxName == \"breakdivmodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: breakdivmodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `breakdivmodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 23\n      }\n    }) : type == \"staff\" && switchBoxName == \"tdstaffmodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: tdstaffmodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `tdstaffmodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 23\n      }\n    }) : type == \"department\" && switchBoxName == \"tddeptmodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: tddeptmodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `tddeptmodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 23\n      }\n    }) : type == \"division\" && switchBoxName == \"tddivmodeCompare\" ? /*#__PURE__*/React.createElement(SwitchBox, {\n      checked: tddivmodeCompare,\n      onColor: \"green\",\n      handleToggle: this.handleCompareChange,\n      name: `tddivmodeCompare`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 23\n      }\n    }) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PayModePieChart, {\n      chartData: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 23\n      }\n    })), type == \"paymode\" && this.state.paymodeCompare || type == \"department\" && this.state.deptmodeCompare || type == \"division\" && this.state.divmodeCompare || type == \"staff\" && this.state.breakstaffmodeCompare || type == \"division\" && this.state.breakdivmodeCompare || type == \"department\" && this.state.breakdeptmodeCompare || type == \"staff\" && this.state.tdstaffmodeCompare || type == \"division\" && this.state.tddivmodeCompare || type == \"department\" && this.state.tddeptmodeCompare ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(PayModePieChart, {\n      chartData: comparedChartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 25\n      }\n    })) : \"\"))))));\n  }\n\n} // const mapStateToProps = state => ({\n//   appointmentDetail: state.appointment.appointmentDetail,\n//   selected_cstomer: state.common.selected_cstomer,\n// });\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi\n  }, dispatch);\n};\n\nexport const PayMode = withTranslation()(connect(null, mapDispatchToProps)(PayModeClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/NewDashboard/PayMode.js"],"names":["React","Component","PayModePieChart","getCommonApi","connect","bindActionCreators","NormalButton","NormalCheckbox","NormalInput","SwitchBox","withTranslation","Nav","NavItem","NavLink","TabContent","TabPane","classnames","AiOutlinePlusCircle","AiOutlineMinusCircle","PayModeClass","state","chartData","dayPayCompare","weekPayCompare","monthPayCompare","yearPayCompare","activeMenu","paymodeCompare","deptmodeCompare","divmodeCompare","comparedChartData","breakstaffmodeCompare","breakdeptmodeCompare","breakdivmodeCompare","tdstaffmodeCompare","tddeptmodeCompare","tddivmodeCompare","isChart","componentDidMount","type","props","getDataByOrder","setState","apiURL","then","res","data","console","log","getDataByOrdercompared","toggle","tab","handleCompareChange","target","name","value","getcompareFlow","comparemenu","getComparemenu","handlehide","prevState","handleLoadChart","render","t","mainTitle","switchBoxName","active","mapDispatchToProps","dispatch","PayMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,kBALP;AAMA,OAAO,cAAP;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,OAAvB,EAAgCC,UAAhC,EAA4CC,OAA5C,QAA2D,YAA3D;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,gBAA1D;AAEA,OAAO,MAAMC,YAAN,SAA2BlB,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CmB,KAD0C,GAClhLL;AAiLNC,MAAAA,aAAa,EAAE,KAjLT;AAkLNC,MAAAA,cAAc,EAAE,KAlLV;AAmLNC,MAAAA,eAAe,EAAE,KAnLX;AAoLNC,MAAAA,cAAc,EAAE,KApLV;AAqLNC,MAAAA,UAAU,EAAE,OArLN;AAsLNC,MAAAA,cAAc,EAAE,KAtLV;AAuLNC,MAAAA,eAAe,EAAE,KAvLX;AAwLNC,MAAAA,cAAc,EAAE,KAxLV;AAyLNC,MAAAA,iBAAiB,EAAE,EAzLb;AA0LNC,MAAAA,qBAAqB,EAAE,KA1LjB;AA2LNC,MAAAA,oBAAoB,EAAE,KA3LhB;AA4LNC,MAAAA,mBAAmB,EAAE,KA5Lf;AA6LNC,MAAAA,kBAAkB,EAAE,KA7Ld;AA8LNC,MAAAA,iBAAiB,EAAE,KA9Lb;AA+LNC,MAAAA,gBAAgB,EAAE,KA/LZ;AAgMNC,MAAAA,OAAO,EAAE;AAhMH,KADkC;;AAAA,SAoM1CC,iBApM0C,GAoMtB,YAAY;AAC9B,UAAI;AAAEC,QAAAA;AAAF,UAAW,KAAKC,KAApB,CAD8B,CAE9B;AACD,KAvMyC;;AAAA,SAwM1CC,cAxM0C,GAwMzB,YAAY;AAC3B,YAAM,KAAKC,QAAL,CAAc;AAClBrB,QAAAA,SAAS,EAAE;AADO,OAAd,CAAN;AAGA,UAAI;AAAEA,QAAAA,SAAF;AAAaK,QAAAA;AAAb,UAA4B,KAAKN,KAArC;AACA,UAAI;AAAEmB,QAAAA;AAAF,UAAW,KAAKC,KAApB;AACA,UAAI;AACFb,QAAAA,cADE;AAEFE,QAAAA,cAFE;AAGFD,QAAAA,eAHE;AAIFG,QAAAA,qBAJE;AAKFE,QAAAA,mBALE;AAMFD,QAAAA,oBANE;AAOFG,QAAAA,iBAPE;AAQFC,QAAAA,gBARE;AASFF,QAAAA;AATE,UAUA,KAAKd,KAVT;AAWA,WAAKoB,KAAL,CACGrC,YADH,CACiB,GAAE,KAAKqC,KAAL,CAAWG,MAAO,UAASjB,UAAW,EADzD,EAEGkB,IAFH,CAEQ,MAAMC,GAAN,IAAa;AACjBxB,QAAAA,SAAS,GAAGwB,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY3B,SAAZ,EAAuB,aAAvB;AACA,cAAM,KAAKqB,QAAL,CAAc;AAClBrB,UAAAA;AADkB,SAAd,CAAN;AAGD,OARH;;AASA,UACGkB,IAAI,IAAI,SAAR,IAAqBZ,cAAtB,IACCY,IAAI,IAAI,YAAR,IAAwBX,eADzB,IAECW,IAAI,IAAI,UAAR,IAAsBV,cAFvB,IAGCU,IAAI,IAAI,OAAR,IAAmBR,qBAHpB,IAICQ,IAAI,IAAI,YAAR,IAAwBP,oBAJzB,IAKCO,IAAI,IAAI,UAAR,IAAsBN,mBALvB,IAMCM,IAAI,IAAI,OAAR,IAAmBL,kBANpB,IAOCK,IAAI,IAAI,YAAR,IAAwBJ,iBAPzB,IAQCI,IAAI,IAAI,UAAR,IAAsBH,gBATzB,EAUE;AACA,cAAM,KAAKM,QAAL,CAAc;AAClBZ,UAAAA,iBAAiB,EAAE;AADD,SAAd,CAAN;AAGA,aAAKmB,sBAAL;AACD,OAfD,MAeO;AACL,cAAM,KAAKP,QAAL,CAAc;AAClBZ,UAAAA,iBAAiB,EAAE;AADD,SAAd,CAAN;AAGD;AACF,KAtPyC;;AAAA,SAwP1CoB,MAxP0C,GAwPjC,MAAMC,GAAN,IAAa;AACpB,UAAI,KAAK/B,KAAL,CAAWM,UAAX,KAA0ByB,GAA9B,EAAmC;AACjC,cAAM,KAAKT,QAAL,CAAc;AAClBhB,UAAAA,UAAU,EAAEyB;AADM,SAAd,CAAN;AAGA,aAAKV,cAAL;AACD;AACF,KA/PyC;;AAAA,SAiQ1CW,mBAjQ0C,GAiQpB,OAAO;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAV,KAAP,KAAuC;AAC3D,YAAM,KAAKb,QAAL,CAAc;AAClB,SAACY,IAAD,GAAQC;AADU,OAAd,CAAN;AAGA,WAAKC,cAAL;AACD,KAtQyC;;AAAA,SAuQ1CA,cAvQ0C,GAuQzB,YAAY;AAC3B,UAAI;AAAEjB,QAAAA;AAAF,UAAW,KAAKC,KAApB;AACA,UAAI;AACFb,QAAAA,cADE;AAEFE,QAAAA,cAFE;AAGFD,QAAAA,eAHE;AAIFI,QAAAA,oBAJE;AAKFC,QAAAA,mBALE;AAMFF,QAAAA,qBANE;AAOFI,QAAAA,iBAPE;AAQFC,QAAAA,gBARE;AASFF,QAAAA;AATE,UAUA,KAAKd,KAVT;;AAWA,UACGmB,IAAI,IAAI,SAAR,IAAqBZ,cAAtB,IACCY,IAAI,IAAI,YAAR,IAAwBX,eADzB,IAECW,IAAI,IAAI,UAAR,IAAsBV,cAFvB,IAGCU,IAAI,IAAI,OAAR,IAAmBR,qBAHpB,IAICQ,IAAI,IAAI,YAAR,IAAwBP,oBAJzB,IAKCO,IAAI,IAAI,UAAR,IAAsBN,mBALvB,IAMCM,IAAI,IAAI,OAAR,IAAmBL,kBANpB,IAOCK,IAAI,IAAI,YAAR,IAAwBJ,iBAPzB,IAQCI,IAAI,IAAI,UAAR,IAAsBH,gBATzB,EAUE;AACA,cAAM,KAAKM,QAAL,CAAc;AAClBZ,UAAAA,iBAAiB,EAAE;AADD,SAAd,CAAN;AAGA,aAAKmB,sBAAL;AACD,OAfD,MAeO;AACL,cAAM,KAAKP,QAAL,CAAc;AAClBZ,UAAAA,iBAAiB,EAAE;AADD,SAAd,CAAN;AAGD;AACF,KAxSyC;;AAAA,SAyS1CmB,sBAzS0C,GAySjB,YAAY;AACnC,UAAI;AAAEnB,QAAAA,iBAAF;AAAqBJ,QAAAA;AAArB,UAAoC,KAAKN,KAA7C;AAEA,UAAIqC,WAAW,GAAG,KAAKC,cAAL,EAAlB;AAEA,WAAKlB,KAAL,CACGrC,YADH,CACiB,GAAE,KAAKqC,KAAL,CAAWG,MAAO,UAASc,WAAY,EAD1D,EAEGb,IAFH,CAEQ,MAAMC,GAAN,IAAa;AACjBf,QAAAA,iBAAiB,GAAGe,GAAG,CAACC,IAAJ,CAAS,CAAT,CAApB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYlB,iBAAZ,EAA+B,mBAA/B;AACA,cAAM,KAAKY,QAAL,CAAc;AAClBZ,UAAAA;AADkB,SAAd,CAAN;AAGD,OARH;AASD,KAvTyC;;AAAA,SAwT1C4B,cAxT0C,GAwTzB,MAAM;AACrB,UAAI;AAAEhC,QAAAA;AAAF,UAAiB,KAAKN,KAA1B;;AACA,cAAQM,UAAR;AACE,aAAK,OAAL;AACE,iBAAO,WAAP;;AACF,aAAK,WAAL;AACE,iBAAO,OAAP;;AACF,aAAK,UAAL;AACE,iBAAO,UAAP;;AACF,aAAK,UAAL;AACE,iBAAO,UAAP;;AACF,aAAK,WAAL;AACE,iBAAO,WAAP;;AACF,aAAK,WAAL;AACE,iBAAO,WAAP;;AACF,aAAK,KAAL;AACE,iBAAO,UAAP;;AACF,aAAK,UAAL;AACE,iBAAO,KAAP;;AACF;AACE,iBAAO,EAAP;AAlBJ;AAoBD,KA9UyC;;AAAA,SA+U1CiC,UA/U0C,GA+U7B,MAAM;AACjB,WAAKjB,QAAL,CAAckB,SAAS,KAAK;AAC1BvB,QAAAA,OAAO,EAAE,CAACuB,SAAS,CAACvB;AADM,OAAL,CAAvB;AAGA,WAAKwB,eAAL;AACD,KApVyC;;AAAA,SAqV1CA,eArV0C,GAqVxB,MAAM;AACtB,UAAI;AAAExB,QAAAA;AAAF,UAAc,KAAKjB,KAAvB;;AACA,UAAI,CAACiB,OAAL,EAAc;AACZ,aAAKI,cAAL;AACD;AACF,KA1VyC;AAAA;;AA2V1CqB,EAAAA,MAAM,GAAG;AACP,QAAI;AACFzC,MAAAA,SADE;AAEFK,MAAAA,UAFE;AAGFC,MAAAA,cAHE;AAIFC,MAAAA,eAJE;AAKFC,MAAAA,cALE;AAMFG,MAAAA,oBANE;AAOFD,MAAAA,qBAPE;AAQFE,MAAAA,mBARE;AASFE,MAAAA,iBATE;AAUFD,MAAAA,kBAVE;AAWFE,MAAAA,gBAXE;AAYFN,MAAAA,iBAZE;AAaFO,MAAAA;AAbE,QAcA,KAAKjB,KAdT;AAeA,QAAI;AAAE2C,MAAAA,CAAF;AAAKxB,MAAAA,IAAL;AAAWyB,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,QAAwC,KAAKzB,KAAjD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBuB,CAAC,CAACC,SAAD,CAAtB,CADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAEhD,UAAU,CAAC;AACpBkD,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWM,UAAX,KAA0B;AADd,OAAD,CADvB;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKwB,MAAL,CAAY,OAAZ;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,CAAC,CAAC,OAAD,CARJ,CADF,CADF,eAaE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE/C,UAAU,CAAC;AACpBkD,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWM,UAAX,KAA0B;AADd,OAAD,CADvB;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKwB,MAAL,CAAY,WAAZ;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,CAAC,CAAC,WAAD,CARJ,CADF,CAbF,eAyBE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE/C,UAAU,CAAC;AACpBkD,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWM,UAAX,KAA0B;AADd,OAAD,CADvB;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKwB,MAAL,CAAY,UAAZ;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,CAAC,CAAC,WAAD,CARJ,CADF,CAzBF,eAqCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE/C,UAAU,CAAC;AACpBkD,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWM,UAAX,KAA0B;AADd,OAAD,CADvB;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKwB,MAAL,CAAY,UAAZ;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,CAAC,CAAC,WAAD,CARJ,CADF,CArCF,eAiDE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE/C,UAAU,CAAC;AACpBkD,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWM,UAAX,KAA0B;AADd,OAAD,CADvB;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKwB,MAAL,CAAY,WAAZ;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,CAAC,CAAC,YAAD,CARJ,CADF,CAjDF,eA6DE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE/C,UAAU,CAAC;AACpBkD,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWM,UAAX,KAA0B;AADd,OAAD,CADvB;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKwB,MAAL,CAAY,WAAZ;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,CAAC,CAAC,YAAD,CARJ,CADF,CA7DF,eAyEE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE/C,UAAU,CAAC;AACpBkD,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWM,UAAX,KAA0B;AADd,OAAD,CADvB;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKwB,MAAL,CAAY,KAAZ;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,CAAC,CAAC,KAAD,CARJ,CADF,CAzEF,eAqFE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE/C,UAAU,CAAC;AACpBkD,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWM,UAAX,KAA0B;AADd,OAAD,CADvB;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKwB,MAAL,CAAY,UAAZ;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,CAAC,CAAC,WAAD,CARJ,CADF,CArFF,CADF,CADF,CADF,CADF,CADF,eA2GE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,kDADZ;AAEE,MAAA,OAAO,EAAE,KAAKJ,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGtB,OAAO,IAAI,KAAX,gBACC,oBAAC,mBAAD;AAAqB,MAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAGC,oBAAC,oBAAD;AAAsB,MAAA,SAAS,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADF,CA3GF,CADF,CAJF,CADF,EAgIGA,OAAO,iBACN,oBAAC,UAAD;AACE,MAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWM,UADxB;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOqC,CAAC,CAAC,SAAD,CAAR,CADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxB,IAAI,IAAI,SAAR,IAAqB0B,aAAa,IAAI,gBAAtC,gBACC,oBAAC,SAAD;AACE,MAAA,OAAO,EAAEtC,cADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKyB,mBAHrB;AAIE,MAAA,IAAI,EAAG,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOGb,IAAI,IAAI,YAAR,IACF0B,aAAa,IAAI,iBADf,gBAEF,oBAAC,SAAD;AACE,MAAA,OAAO,EAAErC,eADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKwB,mBAHrB;AAIE,MAAA,IAAI,EAAG,iBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,GAQAb,IAAI,IAAI,UAAR,IACF0B,aAAa,IAAI,gBADf,gBAEF,oBAAC,SAAD;AACE,MAAA,OAAO,EAAEpC,cADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKuB,mBAHrB;AAIE,MAAA,IAAI,EAAG,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,GAQAb,IAAI,IAAI,OAAR,IACF0B,aAAa,IAAI,uBADf,gBAEF,oBAAC,SAAD;AACE,MAAA,OAAO,EAAElC,qBADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKqB,mBAHrB;AAIE,MAAA,IAAI,EAAG,uBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,GAQAb,IAAI,IAAI,YAAR,IACF0B,aAAa,IAAI,sBADf,gBAEF,oBAAC,SAAD;AACE,MAAA,OAAO,EAAEjC,oBADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKoB,mBAHrB;AAIE,MAAA,IAAI,EAAG,sBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,GAQAb,IAAI,IAAI,UAAR,IACF0B,aAAa,IAAI,qBADf,gBAEF,oBAAC,SAAD;AACE,MAAA,OAAO,EAAEhC,mBADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKmB,mBAHrB;AAIE,MAAA,IAAI,EAAG,qBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,GAQAb,IAAI,IAAI,OAAR,IACF0B,aAAa,IAAI,oBADf,gBAEF,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE/B,kBADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKkB,mBAHrB;AAIE,MAAA,IAAI,EAAG,oBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,GAQAb,IAAI,IAAI,YAAR,IACF0B,aAAa,IAAI,mBADf,gBAEF,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE9B,iBADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKiB,mBAHrB;AAIE,MAAA,IAAI,EAAG,mBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,GAQAb,IAAI,IAAI,UAAR,IACF0B,aAAa,IAAI,kBADf,gBAEF,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE7B,gBADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,YAAY,EAAE,KAAKgB,mBAHrB;AAIE,MAAA,IAAI,EAAG,kBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,GASF,EAzEJ,CAJF,CADF,eAkFE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE/B,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIIkB,IAAI,IAAI,SAAR,IAAqB,KAAKnB,KAAL,CAAWO,cAAjC,IACAY,IAAI,IAAI,YAAR,IAAwB,KAAKnB,KAAL,CAAWQ,eADnC,IAEAW,IAAI,IAAI,UAAR,IAAsB,KAAKnB,KAAL,CAAWS,cAFjC,IAGAU,IAAI,IAAI,OAAR,IAAmB,KAAKnB,KAAL,CAAWW,qBAH9B,IAIAQ,IAAI,IAAI,UAAR,IAAsB,KAAKnB,KAAL,CAAWa,mBAJjC,IAKAM,IAAI,IAAI,YAAR,IAAwB,KAAKnB,KAAL,CAAWY,oBALnC,IAMAO,IAAI,IAAI,OAAR,IAAmB,KAAKnB,KAAL,CAAWc,kBAN9B,IAOAK,IAAI,IAAI,UAAR,IAAsB,KAAKnB,KAAL,CAAWgB,gBAPjC,IAQAG,IAAI,IAAI,YAAR,IAAwB,KAAKnB,KAAL,CAAWe,iBARnC,gBASC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAEL,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATD,GAaC,EAjBJ,CADF,CAlFF,CADF,CAJF,CAjIJ,CADF;AAqPD;;AAjmByC,C,CAomB5C;AACA;AACA;AACA;;AAEA,MAAMqC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO/D,kBAAkB,CACvB;AACEF,IAAAA;AADF,GADuB,EAIvBiE,QAJuB,CAAzB;AAMD,CAPD;;AASA,OAAO,MAAMC,OAAO,GAAG3D,eAAe,GACpCN,OAAO,CAAC,IAAD,EAAO+D,kBAAP,CAAP,CAAkChD,YAAlC,CADoC,CAA/B","sourcesContent":["import React, { Component } from \"react\";\r\nimport PayModePieChart from \"./PayModePieChart\";\r\nimport { getCommonApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  NormalButton,\r\n  NormalCheckbox,\r\n  NormalInput,\r\n  SwitchBox,\r\n} from \"component/common\";\r\nimport \"./style.scss\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport { AiOutlinePlusCircle, AiOutlineMinusCircle } from \"react-icons/ai\";\r\n\r\nexport class PayModeClass extends Component {\r\n  state = {\r\n    // chartData: {\r\n    //   chart: {\r\n    //     plotBackgroundColor: null,\r\n    //     plotBorderWidth: null,\r\n    //     plotShadow: false,\r\n    //     type: \"pie\",\r\n    //   },\r\n    //   title: {\r\n    //     text: \"Browser market shares in January, 2018\",\r\n    //   },\r\n    //   tooltip: {\r\n    //     pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\r\n    //   },\r\n    //   accessibility: {\r\n    //     point: {\r\n    //       valueSuffix: \"%\",\r\n    //     },\r\n    //   },\r\n    //   plotOptions: {\r\n    //     pie: {\r\n    //       allowPointSelect: true,\r\n    //       innerSize: \"40%\",\r\n    //       cursor: \"pointer\",\r\n    //       dataLabels: {\r\n    //         enabled: true,\r\n    //         format: \"<b>{point.name}</b>: {point.percentage:.1f} %\",\r\n    //       },\r\n    //     },\r\n    //   },\r\n    //   series: [\r\n    //     {\r\n    //       name: \"\",\r\n    //       colorByPoint: true,\r\n    //       data: [\r\n    //         {\r\n    //           name: \"Chrome\",\r\n    //           y: 61.41,\r\n    //         },\r\n    //         {\r\n    //           name: \"Internet Explorer\",\r\n    //           y: 11.84,\r\n    //         },\r\n    //         {\r\n    //           name: \"Firefox\",\r\n    //           y: 10.85,\r\n    //         },\r\n    //         {\r\n    //           name: \"Edge\",\r\n    //           y: 4.67,\r\n    //         },\r\n    //         {\r\n    //           name: \"Safari\",\r\n    //           y: 4.18,\r\n    //         },\r\n    //         {\r\n    //           name: \"Sogou Explorer\",\r\n    //           y: 1.64,\r\n    //         },\r\n    //         {\r\n    //           name: \"Opera\",\r\n    //           y: 1.6,\r\n    //         },\r\n    //         {\r\n    //           name: \"QQ\",\r\n    //           y: 1.2,\r\n    //         },\r\n    //         {\r\n    //           name: \"Other\",\r\n    //           y: 2.61,\r\n    //         },\r\n    //       ],\r\n    //     },\r\n    //   ],\r\n    // },\r\n    // TestchartData: {\r\n    //   chart: {\r\n    //     plotBackgroundColor: null,\r\n    //     plotBorderWidth: null,\r\n    //     plotShadow: false,\r\n    //     type: \"pie\",\r\n    //   },\r\n    //   title: {\r\n    //     text: \"Browser market shares in January, 2018\",\r\n    //   },\r\n    //   tooltip: {\r\n    //     pointFormat:\r\n    //       \"<b>count: {point.y}</b><br/>\" + \"<b>Amount($): {point.z:.2f}</b>\",\r\n    //   },\r\n    //   accessibility: {\r\n    //     point: {\r\n    //       valueSuffix: \"%\",\r\n    //     },\r\n    //   },\r\n    //   plotOptions: {\r\n    //     pie: {\r\n    //       allowPointSelect: true,\r\n    //       innerSize: \"40%\",\r\n    //       cursor: \"pointer\",\r\n    //       dataLabels: {\r\n    //         enabled: true,\r\n    //         format: \"<b>{point.name}</b>: {point.percent:.2f} %\",\r\n    //       },\r\n    //     },\r\n    //   },\r\n    //   series: [\r\n    //     {\r\n    //       name: \"\",\r\n    //       colorByPoint: true,\r\n    //       data: [\r\n    //         {\r\n    //           name: \"Chrome\",\r\n    //           y: 61,\r\n    //           z: 124.632320000000003,\r\n    //           color: \"#96c344\",\r\n    //           percent: 5,\r\n    //         },\r\n    //         {\r\n    //           name: \"Internet Explorer\",\r\n    //           y: 11,\r\n    //           z: 124.6,\r\n    //           color: \"green\",\r\n    //           percent: 5,\r\n    //         },\r\n    //         {\r\n    //           name: \"Firefox\",\r\n    //           y: 10,\r\n    //           z: 129.6,\r\n    //           color: \"grey\",\r\n    //           percent: 5,\r\n    //         },\r\n    //         {\r\n    //           name: \"Edge\",\r\n    //           y: 4,\r\n    //           color: \"blue\",\r\n    //           percent: 5,\r\n    //         },\r\n    //         {\r\n    //           name: \"Safari\",\r\n    //           y: 4,\r\n    //           z: 123.6,\r\n    //           color: \"orange\",\r\n    //           percent: 10,\r\n    //         },\r\n    //         {\r\n    //           name: \"Sogou Explorer\",\r\n    //           y: 1,\r\n    //           z: 124.6,\r\n    //           color: \"black\",\r\n    //           percent: 8,\r\n    //         },\r\n    //         {\r\n    //           name: \"Opera\",\r\n    //           y: 1,\r\n    //           z: 124.6,\r\n    //           color: \"purple\",\r\n    //           percent: 6,\r\n    //         },\r\n    //         {\r\n    //           name: \"QQ\",\r\n    //           y: 2,\r\n    //           z: 10.6,\r\n    //           color: \"white\",\r\n    //           percent: 4,\r\n    //         },\r\n    //         {\r\n    //           name: \"Other\",\r\n    //           y: 61,\r\n    //           z: 144.6,\r\n    //           color: \"royalblue\",\r\n    //           percent: 2,\r\n    //         },\r\n    //       ],\r\n    //     },\r\n    //   ],\r\n    // },\r\n    chartData: {},\r\n    dayPayCompare: false,\r\n    weekPayCompare: false,\r\n    monthPayCompare: false,\r\n    yearPayCompare: false,\r\n    activeMenu: \"today\",\r\n    paymodeCompare: false,\r\n    deptmodeCompare: false,\r\n    divmodeCompare: false,\r\n    comparedChartData: {},\r\n    breakstaffmodeCompare: false,\r\n    breakdeptmodeCompare: false,\r\n    breakdivmodeCompare: false,\r\n    tdstaffmodeCompare: false,\r\n    tddeptmodeCompare: false,\r\n    tddivmodeCompare: false,\r\n    isChart: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    let { type } = this.props;\r\n    // this.getDataByOrder();\r\n  };\r\n  getDataByOrder = async () => {\r\n    await this.setState({\r\n      chartData: [],\r\n    });\r\n    let { chartData, activeMenu } = this.state;\r\n    let { type } = this.props;\r\n    let {\r\n      paymodeCompare,\r\n      divmodeCompare,\r\n      deptmodeCompare,\r\n      breakstaffmodeCompare,\r\n      breakdivmodeCompare,\r\n      breakdeptmodeCompare,\r\n      tddeptmodeCompare,\r\n      tddivmodeCompare,\r\n      tdstaffmodeCompare,\r\n    } = this.state;\r\n    this.props\r\n      .getCommonApi(`${this.props.apiURL}/?type=${activeMenu}`)\r\n      .then(async res => {\r\n        chartData = res.data[0];\r\n        console.log(chartData, \"paymodedata\");\r\n        await this.setState({\r\n          chartData,\r\n        });\r\n      });\r\n    if (\r\n      (type == \"paymode\" && paymodeCompare) ||\r\n      (type == \"department\" && deptmodeCompare) ||\r\n      (type == \"division\" && divmodeCompare) ||\r\n      (type == \"staff\" && breakstaffmodeCompare) ||\r\n      (type == \"department\" && breakdeptmodeCompare) ||\r\n      (type == \"division\" && breakdivmodeCompare) ||\r\n      (type == \"staff\" && tdstaffmodeCompare) ||\r\n      (type == \"department\" && tddeptmodeCompare) ||\r\n      (type == \"division\" && tddivmodeCompare)\r\n    ) {\r\n      await this.setState({\r\n        comparedChartData: {},\r\n      });\r\n      this.getDataByOrdercompared();\r\n    } else {\r\n      await this.setState({\r\n        comparedChartData: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  toggle = async tab => {\r\n    if (this.state.activeMenu !== tab) {\r\n      await this.setState({\r\n        activeMenu: tab,\r\n      });\r\n      this.getDataByOrder();\r\n    }\r\n  };\r\n\r\n  handleCompareChange = async ({ target: { name, value } }) => {\r\n    await this.setState({\r\n      [name]: value,\r\n    });\r\n    this.getcompareFlow();\r\n  };\r\n  getcompareFlow = async () => {\r\n    let { type } = this.props;\r\n    let {\r\n      paymodeCompare,\r\n      divmodeCompare,\r\n      deptmodeCompare,\r\n      breakdeptmodeCompare,\r\n      breakdivmodeCompare,\r\n      breakstaffmodeCompare,\r\n      tddeptmodeCompare,\r\n      tddivmodeCompare,\r\n      tdstaffmodeCompare,\r\n    } = this.state;\r\n    if (\r\n      (type == \"paymode\" && paymodeCompare) ||\r\n      (type == \"department\" && deptmodeCompare) ||\r\n      (type == \"division\" && divmodeCompare) ||\r\n      (type == \"staff\" && breakstaffmodeCompare) ||\r\n      (type == \"department\" && breakdeptmodeCompare) ||\r\n      (type == \"division\" && breakdivmodeCompare) ||\r\n      (type == \"staff\" && tdstaffmodeCompare) ||\r\n      (type == \"department\" && tddeptmodeCompare) ||\r\n      (type == \"division\" && tddivmodeCompare)\r\n    ) {\r\n      await this.setState({\r\n        comparedChartData: {},\r\n      });\r\n      this.getDataByOrdercompared();\r\n    } else {\r\n      await this.setState({\r\n        comparedChartData: {},\r\n      });\r\n    }\r\n  };\r\n  getDataByOrdercompared = async () => {\r\n    let { comparedChartData, activeMenu } = this.state;\r\n\r\n    let comparemenu = this.getComparemenu();\r\n\r\n    this.props\r\n      .getCommonApi(`${this.props.apiURL}/?type=${comparemenu}`)\r\n      .then(async res => {\r\n        comparedChartData = res.data[0];\r\n        console.log(comparedChartData, \"comparedChartData\");\r\n        await this.setState({\r\n          comparedChartData,\r\n        });\r\n      });\r\n  };\r\n  getComparemenu = () => {\r\n    let { activeMenu } = this.state;\r\n    switch (activeMenu) {\r\n      case \"today\":\r\n        return \"yesterday\";\r\n      case \"yesterday\":\r\n        return \"today\";\r\n      case \"thisweek\":\r\n        return \"lastweek\";\r\n      case \"lastweek\":\r\n        return \"thisweek\";\r\n      case \"thismonth\":\r\n        return \"lastmonth\";\r\n      case \"lastmonth\":\r\n        return \"thismonth\";\r\n      case \"ytd\":\r\n        return \"lastyear\";\r\n      case \"lastyear\":\r\n        return \"ytd\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  handlehide = () => {\r\n    this.setState(prevState => ({\r\n      isChart: !prevState.isChart,\r\n    }));\r\n    this.handleLoadChart();\r\n  };\r\n  handleLoadChart = () => {\r\n    let { isChart } = this.state;\r\n    if (!isChart) {\r\n      this.getDataByOrder();\r\n    }\r\n  };\r\n  render() {\r\n    let {\r\n      chartData,\r\n      activeMenu,\r\n      paymodeCompare,\r\n      deptmodeCompare,\r\n      divmodeCompare,\r\n      breakdeptmodeCompare,\r\n      breakstaffmodeCompare,\r\n      breakdivmodeCompare,\r\n      tddeptmodeCompare,\r\n      tdstaffmodeCompare,\r\n      tddivmodeCompare,\r\n      comparedChartData,\r\n      isChart,\r\n    } = this.state;\r\n    let { t, type, mainTitle, switchBoxName } = this.props;\r\n    return (\r\n      <div className=\"piechart mb-2 mt-3 pb-2\">\r\n        <div className=\"d-flex flex-wrap justify-content-center aligm-items-center\">\r\n          <div className=\"col-md-1 col-12\">\r\n            <div className=\"h6\">{t(mainTitle)}</div>\r\n          </div>\r\n          <div className=\"col-md-11 col-12\">\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div className=\"col-md-11 col-10\">\r\n                <div className=\"customer-detail tab-border\">\r\n                  <div className=\"filled-tabs\">\r\n                    <div className=\"tabs-block\">\r\n                      <Nav tabs>\r\n                        <NavItem className=\"day-border\">\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"today\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"today\");\r\n                            }}\r\n                          >\r\n                            {t(\"Today\")}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"yesterday\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"yesterday\");\r\n                            }}\r\n                          >\r\n                            {t(\"Yesterday\")}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"week-border\">\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"thisweek\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"thisweek\");\r\n                            }}\r\n                          >\r\n                            {t(\"This Week\")}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"lastweek\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"lastweek\");\r\n                            }}\r\n                          >\r\n                            {t(\"Last Week\")}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"month-border\">\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"thismonth\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"thismonth\");\r\n                            }}\r\n                          >\r\n                            {t(\"This Month\")}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"lastmonth\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"lastmonth\");\r\n                            }}\r\n                          >\r\n                            {t(\"Last Month\")}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"year-border\">\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"ytd\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"ytd\");\r\n                            }}\r\n                          >\r\n                            {t(\"YTD\")}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"lastyear\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"lastyear\");\r\n                            }}\r\n                          >\r\n                            {t(\"Last Year\")}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                      </Nav>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-1 col-2\">\r\n                <div\r\n                  className=\"d-flex align-items-center justify-content-center\"\r\n                  onClick={this.handlehide}\r\n                >\r\n                  {isChart == false ? (\r\n                    <AiOutlinePlusCircle className=\"fs-27\" />\r\n                  ) : (\r\n                    <AiOutlineMinusCircle className=\"fs-27\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isChart && (\r\n          <TabContent\r\n            activeTab={this.state.activeMenu}\r\n            className=\"chart-border p-1\"\r\n          >\r\n            <div className=\"col-12\">\r\n              <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\r\n                <div className=\"col-md-1 col-12\">\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <span>{t(\"Compare\")}</span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\r\n                    {type == \"paymode\" && switchBoxName == \"paymodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={paymodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`paymodeCompare`}\r\n                      />\r\n                    ) : type == \"department\" &&\r\n                      switchBoxName == \"deptmodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={deptmodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`deptmodeCompare`}\r\n                      />\r\n                    ) : type == \"division\" &&\r\n                      switchBoxName == \"divmodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={divmodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`divmodeCompare`}\r\n                      />\r\n                    ) : type == \"staff\" &&\r\n                      switchBoxName == \"breakstaffmodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={breakstaffmodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`breakstaffmodeCompare`}\r\n                      />\r\n                    ) : type == \"department\" &&\r\n                      switchBoxName == \"breakdeptmodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={breakdeptmodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`breakdeptmodeCompare`}\r\n                      />\r\n                    ) : type == \"division\" &&\r\n                      switchBoxName == \"breakdivmodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={breakdivmodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`breakdivmodeCompare`}\r\n                      />\r\n                    ) : type == \"staff\" &&\r\n                      switchBoxName == \"tdstaffmodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={tdstaffmodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`tdstaffmodeCompare`}\r\n                      />\r\n                    ) : type == \"department\" &&\r\n                      switchBoxName == \"tddeptmodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={tddeptmodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`tddeptmodeCompare`}\r\n                      />\r\n                    ) : type == \"division\" &&\r\n                      switchBoxName == \"tddivmodeCompare\" ? (\r\n                      <SwitchBox\r\n                        checked={tddivmodeCompare}\r\n                        onColor=\"green\"\r\n                        handleToggle={this.handleCompareChange}\r\n                        name={`tddivmodeCompare`}\r\n                      />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-11\">\r\n                  <div className=\"d-flex flex-wrap justify-content-center \">\r\n                    <div className=\"col-md-6 col-12\">\r\n                      <PayModePieChart chartData={chartData} />\r\n                    </div>\r\n                    {(type == \"paymode\" && this.state.paymodeCompare) ||\r\n                    (type == \"department\" && this.state.deptmodeCompare) ||\r\n                    (type == \"division\" && this.state.divmodeCompare) ||\r\n                    (type == \"staff\" && this.state.breakstaffmodeCompare) ||\r\n                    (type == \"division\" && this.state.breakdivmodeCompare) ||\r\n                    (type == \"department\" && this.state.breakdeptmodeCompare) ||\r\n                    (type == \"staff\" && this.state.tdstaffmodeCompare) ||\r\n                    (type == \"division\" && this.state.tddivmodeCompare) ||\r\n                    (type == \"department\" && this.state.tddeptmodeCompare) ? (\r\n                      <div className=\"col-md-6 col-12\">\r\n                        <PayModePieChart chartData={comparedChartData} />\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TabContent>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   appointmentDetail: state.appointment.appointmentDetail,\r\n//   selected_cstomer: state.common.selected_cstomer,\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const PayMode = withTranslation()(\r\n  connect(null, mapDispatchToProps)(PayModeClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}