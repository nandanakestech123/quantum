{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.data_controller.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.DataController = void 0;\n\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _extend2 = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _string = require(\"../../core/utils/string\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _uiGrid_core = require(\"../grid_core/ui.grid_core.virtual_scrolling_core\");\n\nvar _uiGrid_core2 = require(\"../grid_core/ui.grid_core.virtual_columns_core\");\n\nvar _uiGrid_core3 = require(\"../grid_core/ui.grid_core.state_storing_core\");\n\nvar _data_source = _interopRequireDefault(require(\"./data_source\"));\n\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar math = Math;\nvar GRAND_TOTAL_TYPE = \"GT\";\nvar TOTAL_TYPE = \"T\";\nvar DATA_TYPE = \"D\";\nvar NOT_AVAILABLE = \"#N/A\";\nvar CHANGING_DURATION_IF_PAGINATE = 300;\n\nvar proxyMethod = function (instance, methodName, defaultResult) {\n  if (!instance[methodName]) {\n    instance[methodName] = function () {\n      var dataSource = this._dataSource;\n      return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult;\n    };\n  }\n};\n\nvar DataController = _class.default.inherit(function () {\n  function getHeaderItemText(item, description, options) {\n    var text = item.text;\n\n    if ((0, _type.isDefined)(item.displayText)) {\n      text = item.displayText;\n    } else {\n      if ((0, _type.isDefined)(item.caption)) {\n        text = item.caption;\n      } else {\n        if (item.type === GRAND_TOTAL_TYPE) {\n          text = options.texts.grandTotal;\n        }\n      }\n    }\n\n    if (item.isAdditionalTotal) {\n      text = (0, _string.format)(options.texts.total || \"\", text);\n    }\n\n    return text;\n  }\n\n  function formatCellValue(value, dataField, errorText) {\n    return value === NOT_AVAILABLE ? errorText : (0, _uiPivot_grid.formatValue)(value, dataField);\n  }\n\n  var createHeaderInfo = function () {\n    var getHeaderItemsDepth = function (headerItems) {\n      var depth = 0;\n      (0, _uiPivot_grid.foreachTree)(headerItems, function (items) {\n        depth = math.max(depth, items.length);\n      });\n      return depth;\n    };\n\n    var createInfoItem = function (headerItem, breadth, isHorizontal, isTree) {\n      var infoItem = {\n        type: headerItem.type,\n        text: headerItem.text\n      };\n\n      if (headerItem.path) {\n        infoItem.path = headerItem.path;\n      }\n\n      if (headerItem.width) {\n        infoItem.width = headerItem.width;\n      }\n\n      if ((0, _type.isDefined)(headerItem.wordWrapEnabled)) {\n        infoItem.wordWrapEnabled = headerItem.wordWrapEnabled;\n      }\n\n      if (headerItem.isLast) {\n        infoItem.isLast = true;\n      }\n\n      if (headerItem.sorted) {\n        infoItem.sorted = true;\n      }\n\n      if (headerItem.isMetric) {\n        infoItem.dataIndex = headerItem.dataIndex;\n      }\n\n      if ((0, _type.isDefined)(headerItem.expanded)) {\n        infoItem.expanded = headerItem.expanded;\n      }\n\n      if (breadth > 1) {\n        infoItem[isHorizontal ? \"colspan\" : \"rowspan\"] = breadth;\n      }\n\n      if (headerItem.depthSize && headerItem.depthSize > 1) {\n        infoItem[isHorizontal ? \"rowspan\" : \"colspan\"] = headerItem.depthSize;\n      }\n\n      if (headerItem.index >= 0) {\n        infoItem.dataSourceIndex = headerItem.index;\n      }\n\n      if (isTree && headerItem.children && headerItem.children.length && !headerItem.children[0].isMetric) {\n        infoItem.width = null;\n        infoItem.isWhiteSpace = true;\n      }\n\n      return infoItem;\n    };\n\n    var addInfoItem = function (info, options) {\n      var breadth = options.lastIndex - options.index || 1;\n\n      var addInfoItemCore = function (info, infoItem, itemIndex, depthIndex, isHorizontal) {\n        var index = isHorizontal ? depthIndex : itemIndex;\n\n        while (!info[index]) {\n          info.push([]);\n        }\n\n        if (isHorizontal) {\n          info[index].push(infoItem);\n        } else {\n          info[index].unshift(infoItem);\n        }\n      };\n\n      var itemInfo = createInfoItem(options.headerItem, breadth, options.isHorizontal, options.isTree);\n      addInfoItemCore(info, itemInfo, options.index, options.depth, options.isHorizontal);\n\n      if (!options.headerItem.children || 0 === options.headerItem.children.length) {\n        return options.lastIndex + 1;\n      }\n\n      return options.lastIndex;\n    };\n\n    var isItemSorted = function (items, sortBySummaryPath) {\n      var path;\n      var item = items[0];\n      var stringValuesUsed = (0, _type.isString)(sortBySummaryPath[0]);\n      var headerItem = item.dataIndex >= 0 ? items[1] : item;\n\n      if (stringValuesUsed && sortBySummaryPath[0].indexOf(\"&[\") !== -1 && headerItem.key || !headerItem.key) {\n        path = (0, _uiPivot_grid.createPath)(items);\n      } else {\n        path = (0, _iterator.map)(items, function (item) {\n          return item.dataIndex >= 0 ? item.value : item.text;\n        }).reverse();\n      }\n\n      if (item.type === GRAND_TOTAL_TYPE) {\n        path = path.slice(1);\n      }\n\n      return path.join(\"/\") === sortBySummaryPath.join(\"/\");\n    };\n\n    var getViewHeaderItems = function (headerItems, headerDescriptions, cellDescriptions, depthSize, options) {\n      var cellDescriptionsCount = cellDescriptions.length;\n      var viewHeaderItems = createViewHeaderItems(headerItems, headerDescriptions);\n      var dataFields = options.dataFields;\n      var d = new _deferred.Deferred();\n      (0, _deferred.when)(viewHeaderItems).done(function (viewHeaderItems) {\n        options.notifyProgress(.5);\n\n        if (options.showGrandTotals) {\n          viewHeaderItems[!options.showTotalsPrior ? \"push\" : \"unshift\"]({\n            type: GRAND_TOTAL_TYPE,\n            isEmpty: options.isEmptyGrandTotal\n          });\n        }\n\n        var hideTotals = false === options.showTotals || dataFields.length > 0 && dataFields.length === options.hiddenTotals.length;\n        var hideData = dataFields.length > 0 && options.hiddenValues.length === dataFields.length;\n\n        if (hideData && hideTotals) {\n          depthSize = 1;\n        }\n\n        if (!hideTotals || \"tree\" === options.layout) {\n          addAdditionalTotalHeaderItems(viewHeaderItems, headerDescriptions, options.showTotalsPrior, \"tree\" === options.layout);\n        }\n\n        (0, _deferred.when)((0, _uiPivot_grid.foreachTreeAsync)(viewHeaderItems, function (items) {\n          var item = items[0];\n\n          if (!item.children || 0 === item.children.length) {\n            item.depthSize = depthSize - items.length + 1;\n          }\n        })).done(function () {\n          if (cellDescriptionsCount > 1) {\n            addMetricHeaderItems(viewHeaderItems, cellDescriptions, options);\n          }\n\n          !options.showEmpty && removeHiddenItems(viewHeaderItems);\n          options.notifyProgress(.75);\n          (0, _deferred.when)((0, _uiPivot_grid.foreachTreeAsync)(viewHeaderItems, function (items) {\n            var item = items[0];\n            var isMetric = item.isMetric;\n            var field = headerDescriptions[items.length - 1] || {};\n\n            if (item.type === DATA_TYPE && !isMetric) {\n              item.width = field.width;\n            }\n\n            if (true === hideData && item.type === DATA_TYPE) {\n              var parentChildren = (items[1] ? items[1].children : viewHeaderItems) || [];\n              parentChildren.splice((0, _array.inArray)(item, parentChildren), 1);\n              return;\n            }\n\n            if (isMetric) {\n              item.wordWrapEnabled = cellDescriptions[item.dataIndex].wordWrapEnabled;\n            } else {\n              item.wordWrapEnabled = field.wordWrapEnabled;\n            }\n\n            item.isLast = !item.children || !item.children.length;\n\n            if (item.isLast) {\n              (0, _iterator.each)(options.sortBySummaryPaths, function (index, sortBySummaryPath) {\n                if (!(0, _type.isDefined)(item.dataIndex)) {\n                  sortBySummaryPath = sortBySummaryPath.slice(0);\n                  sortBySummaryPath.pop();\n                }\n\n                if (isItemSorted(items, sortBySummaryPath)) {\n                  item.sorted = true;\n                  return false;\n                }\n              });\n            }\n\n            item.text = getHeaderItemText(item, field, options);\n          })).done(function () {\n            if (!viewHeaderItems.length) {\n              viewHeaderItems.push({});\n            }\n\n            options.notifyProgress(1);\n            d.resolve(viewHeaderItems);\n          });\n        });\n      });\n      return d;\n    };\n\n    function createHeaderItem(childrenStack, depth, index) {\n      var parent = childrenStack[depth] = childrenStack[depth] || [];\n      var node = parent[index] = {};\n\n      if (childrenStack[depth + 1]) {\n        node.children = childrenStack[depth + 1];\n\n        for (var i = depth + 1; i < childrenStack.length; i++) {\n          childrenStack[i] = void 0;\n        }\n\n        childrenStack.length = depth + 1;\n      }\n\n      return node;\n    }\n\n    function createViewHeaderItems(headerItems, headerDescriptions) {\n      var headerDescriptionsCount = headerDescriptions && headerDescriptions.length || 0;\n      var childrenStack = [];\n      var d = new _deferred.Deferred();\n      var headerItem;\n      (0, _deferred.when)((0, _uiPivot_grid.foreachTreeAsync)(headerItems, function (items, index) {\n        var item = items[0];\n        var path = (0, _uiPivot_grid.createPath)(items);\n        headerItem = createHeaderItem(childrenStack, path.length, index);\n        headerItem.type = DATA_TYPE;\n        headerItem.value = item.value;\n        headerItem.path = path;\n        headerItem.text = item.text;\n        headerItem.index = item.index;\n        headerItem.displayText = item.displayText;\n        headerItem.key = item.key;\n        headerItem.isEmpty = item.isEmpty;\n\n        if (path.length < headerDescriptionsCount && (!item.children || 0 !== item.children.length)) {\n          headerItem.expanded = !!item.children;\n        }\n      })).done(function () {\n        d.resolve(createHeaderItem(childrenStack, 0, 0).children || []);\n      });\n      return d;\n    }\n\n    function addMetricHeaderItems(headerItems, cellDescriptions, options) {\n      (0, _uiPivot_grid.foreachTree)(headerItems, function (items) {\n        var item = items[0];\n        var i;\n\n        if (!item.children || 0 === item.children.length) {\n          item.children = [];\n\n          for (i = 0; i < cellDescriptions.length; i++) {\n            var isGrandTotal = item.type === GRAND_TOTAL_TYPE;\n            var isTotal = item.type === TOTAL_TYPE;\n            var isValue = item.type === DATA_TYPE;\n            var columnIsHidden = false === cellDescriptions[i].visible || isGrandTotal && (0, _array.inArray)(i, options.hiddenGrandTotals) !== -1 || isTotal && (0, _array.inArray)(i, options.hiddenTotals) !== -1 || isValue && (0, _array.inArray)(i, options.hiddenValues) !== -1;\n\n            if (columnIsHidden) {\n              continue;\n            }\n\n            item.children.push({\n              caption: cellDescriptions[i].caption,\n              path: item.path,\n              type: item.type,\n              value: i,\n              index: item.index,\n              dataIndex: i,\n              isMetric: true,\n              isEmpty: item.isEmpty && item.isEmpty[i]\n            });\n          }\n        }\n      });\n    }\n\n    function addAdditionalTotalHeaderItems(headerItems, headerDescriptions, showTotalsPrior, isTree) {\n      showTotalsPrior = showTotalsPrior || isTree;\n      (0, _uiPivot_grid.foreachTree)(headerItems, function (items, index) {\n        var item = items[0];\n        var parentChildren = (items[1] ? items[1].children : headerItems) || [];\n        var dataField = headerDescriptions[items.length - 1];\n\n        if (item.type === DATA_TYPE && item.expanded && (false !== dataField.showTotals || isTree)) {\n          index !== -1 && parentChildren.splice(showTotalsPrior ? index : index + 1, 0, (0, _extend2.extend)({}, item, {\n            children: null,\n            type: TOTAL_TYPE,\n            expanded: showTotalsPrior ? true : null,\n            isAdditionalTotal: true\n          }));\n\n          if (showTotalsPrior) {\n            item.expanded = null;\n          }\n        }\n      });\n    }\n\n    var removeEmptyParent = function removeEmptyParent(items, index) {\n      var parent = items[index + 1];\n\n      if (!items[index].children.length && parent && parent.children) {\n        parent.children.splice((0, _array.inArray)(items[index], parent.children), 1);\n        removeEmptyParent(items, index + 1);\n      }\n    };\n\n    function removeHiddenItems(headerItems) {\n      (0, _uiPivot_grid.foreachTree)([{\n        children: headerItems\n      }], function (items, index) {\n        var item = items[0];\n        var parentChildren = (items[1] ? items[1].children : headerItems) || [];\n        var isEmpty = item.isEmpty;\n\n        if (isEmpty && isEmpty.length) {\n          isEmpty = item.isEmpty.filter(function (isEmpty) {\n            return isEmpty;\n          }).length === isEmpty.length;\n        }\n\n        if (item && !item.children && isEmpty) {\n          parentChildren.splice(index, 1);\n          removeEmptyParent(items, 1);\n        }\n      });\n    }\n\n    var fillHeaderInfo = function (info, viewHeaderItems, depthSize, isHorizontal, isTree) {\n      var lastIndex = 0;\n      var index;\n      var depth;\n      var indexesByDepth = [0];\n      (0, _uiPivot_grid.foreachTree)(viewHeaderItems, function (items) {\n        var headerItem = items[0];\n        depth = headerItem.isMetric ? depthSize : items.length - 1;\n\n        while (indexesByDepth.length - 1 < depth) {\n          indexesByDepth.push(indexesByDepth[indexesByDepth.length - 1]);\n        }\n\n        index = indexesByDepth[depth] || 0;\n        lastIndex = addInfoItem(info, {\n          headerItem: headerItem,\n          index: index,\n          lastIndex: lastIndex,\n          depth: depth,\n          isHorizontal: isHorizontal,\n          isTree: isTree\n        });\n        indexesByDepth.length = depth;\n        indexesByDepth.push(lastIndex);\n      });\n    };\n\n    return function (headerItems, headerDescriptions, cellDescriptions, isHorizontal, options) {\n      var info = [];\n      var depthSize = getHeaderItemsDepth(headerItems) || 1;\n      var d = new _deferred.Deferred();\n      getViewHeaderItems(headerItems, headerDescriptions, cellDescriptions, depthSize, options).done(function (viewHeaderItems) {\n        fillHeaderInfo(info, viewHeaderItems, depthSize, isHorizontal, \"tree\" === options.layout);\n        options.notifyProgress(1);\n        d.resolve(info);\n      });\n      return d;\n    };\n  }();\n\n  function createSortPaths(headerFields, dataFields) {\n    var sortBySummaryPaths = [];\n    (0, _iterator.each)(headerFields, function (index, headerField) {\n      var fieldIndex = (0, _uiPivot_grid.findField)(dataFields, headerField.sortBySummaryField);\n\n      if (fieldIndex >= 0) {\n        sortBySummaryPaths.push((headerField.sortBySummaryPath || []).concat([fieldIndex]));\n      }\n    });\n    return sortBySummaryPaths;\n  }\n\n  function foreachRowInfo(rowsInfo, callback) {\n    var columnOffset = 0;\n    var columnOffsetResetIndexes = [];\n\n    for (var i = 0; i < rowsInfo.length; i++) {\n      for (var j = 0; j < rowsInfo[i].length; j++) {\n        var rowSpanOffset = (rowsInfo[i][j].rowspan || 1) - 1;\n        var visibleIndex = i + rowSpanOffset;\n\n        if (columnOffsetResetIndexes[i]) {\n          columnOffset -= columnOffsetResetIndexes[i];\n          columnOffsetResetIndexes[i] = 0;\n        }\n\n        if (false === callback(rowsInfo[i][j], visibleIndex, i, j, columnOffset)) {\n          break;\n        }\n\n        columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] = (columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] || 0) + 1;\n        columnOffset++;\n      }\n    }\n  }\n\n  function createCellsInfo(rowsInfo, columnsInfo, data, dataFields, dataFieldArea, errorText) {\n    var info = [];\n    var dataFieldAreaInRows = \"row\" === dataFieldArea;\n    var dataSourceCells = data.values;\n    dataSourceCells.length && foreachRowInfo(rowsInfo, function (rowInfo, rowIndex) {\n      var row = info[rowIndex] = [];\n      var dataRow = dataSourceCells[rowInfo.dataSourceIndex >= 0 ? rowInfo.dataSourceIndex : data.grandTotalRowIndex] || [];\n      rowInfo.isLast && (0, _uiGrid_core2.foreachColumnInfo)(columnsInfo, function (columnInfo, columnIndex) {\n        var dataIndex = (dataFieldAreaInRows ? rowInfo.dataIndex : columnInfo.dataIndex) || 0;\n        var dataField = dataFields[dataIndex];\n\n        if (columnInfo.isLast && dataField) {\n          var cell = dataRow[columnInfo.dataSourceIndex >= 0 ? columnInfo.dataSourceIndex : data.grandTotalColumnIndex];\n\n          if (!Array.isArray(cell)) {\n            cell = [cell];\n          }\n\n          var cellValue = cell[dataIndex];\n          row[columnIndex] = {\n            text: formatCellValue(cellValue, dataField, errorText),\n            value: cellValue,\n            format: dataField.format,\n            dataType: dataField.dataType,\n            columnType: columnInfo.type,\n            rowType: rowInfo.type,\n            rowPath: rowInfo.path || [],\n            columnPath: columnInfo.path || [],\n            dataIndex: dataIndex\n          };\n\n          if (dataField.width) {\n            row[columnIndex].width = dataField.width;\n          }\n        }\n      });\n    });\n    return info;\n  }\n\n  function getHeaderIndexedItems(headerItems, options) {\n    var visibleIndex = 0;\n    var indexedItems = [];\n    (0, _uiPivot_grid.foreachTree)(headerItems, function (items) {\n      var headerItem = items[0];\n      var path = (0, _uiPivot_grid.createPath)(items);\n\n      if (headerItem.children && false === options.showTotals) {\n        return;\n      }\n\n      var indexedItem = (0, _extend2.extend)(true, {}, headerItem, {\n        visibleIndex: visibleIndex++,\n        path: path\n      });\n\n      if ((0, _type.isDefined)(indexedItem.index)) {\n        indexedItems[indexedItem.index] = indexedItem;\n      } else {\n        indexedItems.push(indexedItem);\n      }\n    });\n    return indexedItems;\n  }\n\n  function createScrollController(dataController, component, dataAdapter) {\n    if (component && \"virtual\" === component.option(\"scrolling.mode\")) {\n      return new _uiGrid_core.VirtualScrollController(component, (0, _extend2.extend)({\n        hasKnownLastPage: function () {\n          return true;\n        },\n        pageCount: function () {\n          return math.ceil(this.totalItemsCount() / this.pageSize());\n        },\n        updateLoading: function () {},\n        itemsCount: function () {\n          if (this.pageIndex() < this.pageCount() - 1) {\n            return this.pageSize();\n          } else {\n            return this.totalItemsCount() % this.pageSize();\n          }\n        },\n        items: function () {\n          return [];\n        },\n        viewportItems: function () {\n          return [];\n        },\n        onChanged: function () {},\n        isLoading: function () {\n          return dataController.isLoading();\n        },\n        changingDuration: function () {\n          var dataSource = dataController._dataSource;\n\n          if (dataSource.paginate()) {\n            return CHANGING_DURATION_IF_PAGINATE;\n          }\n\n          return dataController._changingDuration || 0;\n        }\n      }, dataAdapter));\n    }\n  }\n\n  function getHiddenTotals(dataFields) {\n    var result = [];\n    (0, _iterator.each)(dataFields, function (index, field) {\n      if (false === field.showTotals) {\n        result.push(index);\n      }\n    });\n    return result;\n  }\n\n  function getHiddenValues(dataFields) {\n    var result = [];\n    dataFields.forEach(function (field, index) {\n      if (void 0 === field.showValues && false === field.showTotals || false === field.showValues) {\n        result.push(index);\n      }\n    });\n    return result;\n  }\n\n  function getHiddenGrandTotalsTotals(dataFields, columnFields) {\n    var result = [];\n    (0, _iterator.each)(dataFields, function (index, field) {\n      if (false === field.showGrandTotals) {\n        result.push(index);\n      }\n    });\n\n    if (0 === columnFields.length && result.length === dataFields.length) {\n      result = [];\n    }\n\n    return result;\n  }\n\n  var members = {\n    ctor: function (options) {\n      var that = this;\n\n      var virtualScrollControllerChanged = that._fireChanged.bind(that);\n\n      options = that._options = options || {};\n      that.dataSourceChanged = (0, _callbacks.default)();\n      that._dataSource = that._createDataSource(options);\n      that._rowsScrollController = createScrollController(that, options.component, {\n        totalItemsCount: function () {\n          return that.totalRowCount();\n        },\n        pageIndex: function (index) {\n          return that.rowPageIndex(index);\n        },\n        pageSize: function () {\n          return that.rowPageSize();\n        },\n        load: function () {\n          if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\n            that._rowsScrollController.pageIndex(this.pageCount() - 1);\n          }\n\n          return that._rowsScrollController.handleDataChanged(function () {\n            if (that._dataSource.paginate()) {\n              that._dataSource.load();\n            } else {\n              virtualScrollControllerChanged.apply(this, arguments);\n            }\n          });\n        }\n      });\n      that._columnsScrollController = createScrollController(that, options.component, {\n        totalItemsCount: function () {\n          return that.totalColumnCount();\n        },\n        pageIndex: function (index) {\n          return that.columnPageIndex(index);\n        },\n        pageSize: function () {\n          return that.columnPageSize();\n        },\n        load: function () {\n          if (that._columnsScrollController.pageIndex() >= this.pageCount()) {\n            that._columnsScrollController.pageIndex(this.pageCount() - 1);\n          }\n\n          return that._columnsScrollController.handleDataChanged(function () {\n            if (that._dataSource.paginate()) {\n              that._dataSource.load();\n            } else {\n              virtualScrollControllerChanged.apply(this, arguments);\n            }\n          });\n        }\n      });\n      that._stateStoringController = new _uiGrid_core3.StateStoringController(options.component).init();\n      that._columnsInfo = [];\n      that._rowsInfo = [];\n      that._cellsInfo = [];\n      that.expandValueChanging = (0, _callbacks.default)();\n      that.loadingChanged = (0, _callbacks.default)();\n      that.progressChanged = (0, _callbacks.default)();\n      that.scrollChanged = (0, _callbacks.default)();\n      that.load();\n\n      that._update();\n\n      that.changed = (0, _callbacks.default)();\n    },\n    _fireChanged: function () {\n      var that = this;\n      var startChanging = new Date();\n      that.changed && !that._lockChanged && that.changed.fire();\n      that._changingDuration = new Date() - startChanging;\n    },\n    _correctSkipsTakes: function (rowIndex, rowSkip, rowSpan, levels, skips, takes) {\n      var endIndex = rowSpan ? rowIndex + rowSpan - 1 : rowIndex;\n      skips[levels.length] = skips[levels.length] || 0;\n      takes[levels.length] = takes[levels.length] || 0;\n\n      if (endIndex < rowSkip) {\n        skips[levels.length]++;\n      } else {\n        takes[levels.length]++;\n      }\n    },\n    _calculatePagingForRowExpandedPaths: function (options, skips, takes, rowExpandedSkips, rowExpandedTakes) {\n      var rows = this._rowsInfo;\n      var rowCount = Math.min(options.rowSkip + options.rowTake, rows.length);\n      var rowExpandedPaths = options.rowExpandedPaths;\n      var levels = [];\n      var expandedPathIndexes = {};\n      var i;\n      var j;\n      var path;\n      rowExpandedPaths.forEach(function (path, index) {\n        expandedPathIndexes[path] = index;\n      });\n\n      for (i = 0; i < rowCount; i++) {\n        takes.length = skips.length = levels.length + 1;\n\n        for (j = 0; j < rows[i].length; j++) {\n          var cell = rows[i][j];\n\n          if (\"D\" === cell.type) {\n            this._correctSkipsTakes(i, options.rowSkip, cell.rowspan, levels, skips, takes);\n\n            path = cell.path || path;\n            var expandIndex = path && path.length > 1 ? expandedPathIndexes[path.slice(0, -1)] : -1;\n\n            if (expandIndex >= 0) {\n              rowExpandedSkips[expandIndex] = skips[levels.length] || 0;\n              rowExpandedTakes[expandIndex] = takes[levels.length] || 0;\n            }\n\n            if (cell.rowspan) {\n              levels.push(cell.rowspan);\n            }\n          }\n        }\n\n        levels = levels.map(function (level) {\n          return level - 1;\n        }).filter(function (level) {\n          return level > 0;\n        });\n      }\n    },\n    _calculatePagingForColumnExpandedPaths: function (options, skips, takes, expandedSkips, expandedTakes) {\n      var skipByPath = {};\n      var takeByPath = {};\n      (0, _uiGrid_core2.foreachColumnInfo)(this._columnsInfo, function (columnInfo, columnIndex) {\n        if (\"D\" === columnInfo.type && columnInfo.path && void 0 === columnInfo.dataIndex) {\n          var colspan = columnInfo.colspan || 1;\n          var path = columnInfo.path.slice(0, -1).toString();\n          skipByPath[path] = skipByPath[path] || 0;\n          takeByPath[path] = takeByPath[path] || 0;\n\n          if (columnIndex + colspan <= options.columnSkip) {\n            skipByPath[path]++;\n          } else {\n            if (columnIndex < options.columnSkip + options.columnTake) {\n              takeByPath[path]++;\n            }\n          }\n        }\n      });\n      skips[0] = skipByPath[[]];\n      takes[0] = takeByPath[[]];\n      options.columnExpandedPaths.forEach(function (path, index) {\n        var skip = skipByPath[path];\n        var take = takeByPath[path];\n\n        if (void 0 !== skip) {\n          expandedSkips[index] = skip;\n        }\n\n        if (void 0 !== take) {\n          expandedTakes[index] = take;\n        }\n      });\n    },\n    _processPagingForExpandedPaths: function (options, area, storeLoadOptions, reload) {\n      var expandedPaths = options[area + \"ExpandedPaths\"];\n      var expandedSkips = expandedPaths.map(function () {\n        return 0;\n      });\n      var expandedTakes = expandedPaths.map(function () {\n        return reload ? options.pageSize : 0;\n      });\n      var skips = [];\n      var takes = [];\n\n      if (!reload) {\n        if (\"row\" === area) {\n          this._calculatePagingForRowExpandedPaths(options, skips, takes, expandedSkips, expandedTakes);\n        } else {\n          this._calculatePagingForColumnExpandedPaths(options, skips, takes, expandedSkips, expandedTakes);\n        }\n      }\n\n      this._savePagingForExpandedPaths(options, area, storeLoadOptions, skips[0], takes[0], expandedSkips, expandedTakes);\n    },\n    _savePagingForExpandedPaths: function (options, area, storeLoadOptions, skip, take, expandedSkips, expandedTakes) {\n      var expandedPaths = options[area + \"ExpandedPaths\"];\n      options[area + \"ExpandedPaths\"] = [];\n      options[area + \"Skip\"] = void 0 !== skip ? skip : options[area + \"Skip\"];\n      options[area + \"Take\"] = void 0 !== take ? take : options[area + \"Take\"];\n\n      for (var i = 0; i < expandedPaths.length; i++) {\n        if (expandedTakes[i]) {\n          var _extend;\n\n          var isOppositeArea = options.area && options.area !== area;\n          storeLoadOptions.push((0, _extend2.extend)({\n            area: area,\n            headerName: area + \"s\"\n          }, options, (_extend = {}, _defineProperty(_extend, area + \"Skip\", expandedSkips[i]), _defineProperty(_extend, area + \"Take\", expandedTakes[i]), _defineProperty(_extend, isOppositeArea ? \"oppositePath\" : \"path\", expandedPaths[i]), _extend)));\n        }\n      }\n    },\n    _handleCustomizeStoreLoadOptions: function (storeLoadOptions, reload) {\n      var _this = this;\n\n      var options = storeLoadOptions[0];\n      var rowsScrollController = this._rowsScrollController;\n\n      if (this._dataSource.paginate() && rowsScrollController) {\n        var rowPageSize = rowsScrollController._dataSource.pageSize();\n\n        if (\"rows\" === options.headerName) {\n          options.rowSkip = 0;\n          options.rowTake = rowPageSize;\n          options.rowExpandedPaths = [];\n        } else {\n          options.rowSkip = rowsScrollController.beginPageIndex() * rowPageSize;\n          options.rowTake = (rowsScrollController.endPageIndex() - rowsScrollController.beginPageIndex() + 1) * rowPageSize;\n\n          this._processPagingForExpandedPaths(options, \"row\", storeLoadOptions, reload);\n        }\n      }\n\n      var columnsScrollController = this._columnsScrollController;\n\n      if (this._dataSource.paginate() && columnsScrollController) {\n        var columnPageSize = columnsScrollController._dataSource.pageSize();\n\n        storeLoadOptions.forEach(function (options, index) {\n          if (\"columns\" === options.headerName) {\n            options.columnSkip = 0;\n            options.columnTake = columnPageSize;\n            options.columnExpandedPaths = [];\n          } else {\n            options.columnSkip = columnsScrollController.beginPageIndex() * columnPageSize;\n            options.columnTake = (columnsScrollController.endPageIndex() - columnsScrollController.beginPageIndex() + 1) * columnPageSize;\n\n            _this._processPagingForExpandedPaths(options, \"column\", storeLoadOptions, reload);\n          }\n        });\n      }\n    },\n    load: function () {\n      var that = this;\n      var stateStoringController = this._stateStoringController;\n\n      if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\n        stateStoringController.load().always(function (state) {\n          if (state) {\n            that._dataSource.state(state);\n          } else {\n            that._dataSource.load();\n          }\n        });\n      } else {\n        that._dataSource.load();\n      }\n    },\n    calculateVirtualContentParams: function (contentParams) {\n      var that = this;\n      var rowsScrollController = that._rowsScrollController;\n      var columnsScrollController = that._columnsScrollController;\n\n      if (rowsScrollController && columnsScrollController) {\n        rowsScrollController.viewportItemSize(contentParams.virtualRowHeight);\n        rowsScrollController.viewportSize(contentParams.viewportHeight / rowsScrollController.viewportItemSize());\n        rowsScrollController.setContentSize(contentParams.itemHeights);\n        columnsScrollController.viewportItemSize(contentParams.virtualColumnWidth);\n        columnsScrollController.viewportSize(contentParams.viewportWidth / columnsScrollController.viewportItemSize());\n        columnsScrollController.setContentSize(contentParams.itemWidths);\n        (0, _common.deferUpdate)(function () {\n          columnsScrollController.loadIfNeed();\n          rowsScrollController.loadIfNeed();\n        });\n        that.scrollChanged.fire({\n          left: columnsScrollController.getViewportPosition(),\n          top: rowsScrollController.getViewportPosition()\n        });\n        return {\n          contentTop: rowsScrollController.getContentOffset(),\n          contentLeft: columnsScrollController.getContentOffset(),\n          width: columnsScrollController.getVirtualContentSize(),\n          height: rowsScrollController.getVirtualContentSize()\n        };\n      }\n    },\n    setViewportPosition: function (left, top) {\n      this._rowsScrollController.setViewportPosition(top || 0);\n\n      this._columnsScrollController.setViewportPosition(left || 0);\n    },\n    subscribeToWindowScrollEvents: function ($element) {\n      this._rowsScrollController && this._rowsScrollController.subscribeToWindowScrollEvents($element);\n    },\n    updateWindowScrollPosition: function (position) {\n      this._rowsScrollController && this._rowsScrollController.scrollTo(position);\n    },\n    updateViewOptions: function (options) {\n      (0, _extend2.extend)(this._options, options);\n\n      this._update();\n    },\n    _handleExpandValueChanging: function (e) {\n      this.expandValueChanging.fire(e);\n    },\n    _handleLoadingChanged: function (isLoading) {\n      this.loadingChanged.fire(isLoading);\n    },\n    _handleProgressChanged: function (progress) {\n      this.progressChanged.fire(progress);\n    },\n    _handleFieldsPrepared: function (e) {\n      this._options.onFieldsPrepared && this._options.onFieldsPrepared(e);\n    },\n    _createDataSource: function (options) {\n      var that = this;\n      var dataSourceOptions = options.dataSource;\n      var dataSource;\n      that._isSharedDataSource = dataSourceOptions instanceof _data_source.default;\n\n      if (that._isSharedDataSource) {\n        dataSource = dataSourceOptions;\n      } else {\n        dataSource = new _data_source.default(dataSourceOptions);\n      }\n\n      that._expandValueChangingHandler = that._handleExpandValueChanging.bind(that);\n      that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\n      that._fieldsPreparedHandler = that._handleFieldsPrepared.bind(that);\n      that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\n\n      that._changedHandler = function () {\n        that._update();\n\n        that.dataSourceChanged.fire();\n      };\n\n      that._progressChangedHandler = function (progress) {\n        that._handleProgressChanged(.8 * progress);\n      };\n\n      dataSource.on(\"changed\", that._changedHandler);\n      dataSource.on(\"expandValueChanging\", that._expandValueChangingHandler);\n      dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\n      dataSource.on(\"progressChanged\", that._progressChangedHandler);\n      dataSource.on(\"fieldsPrepared\", that._fieldsPreparedHandler);\n      dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\n      return dataSource;\n    },\n    getDataSource: function () {\n      return this._dataSource;\n    },\n    isLoading: function () {\n      return this._dataSource.isLoading();\n    },\n    beginLoading: function () {\n      this._dataSource.beginLoading();\n    },\n    endLoading: function () {\n      this._dataSource.endLoading();\n    },\n    _update: function () {\n      var that = this;\n      var dataSource = that._dataSource;\n      var options = that._options;\n      var columnFields = dataSource.getAreaFields(\"column\");\n      var rowFields = dataSource.getAreaFields(\"row\");\n      var dataFields = dataSource.getAreaFields(\"data\");\n      var dataFieldsForRows = \"row\" === options.dataFieldArea ? dataFields : [];\n      var dataFieldsForColumns = \"row\" !== options.dataFieldArea ? dataFields : [];\n      var data = dataSource.getData();\n      var hiddenTotals = getHiddenTotals(dataFields);\n      var hiddenValues = getHiddenValues(dataFields);\n      var hiddenGrandTotals = getHiddenGrandTotalsTotals(dataFields, columnFields);\n      var grandTotalsAreHiddenForNotAllDataFields = dataFields.length > 0 ? hiddenGrandTotals.length !== dataFields.length : true;\n      var rowOptions = {\n        isEmptyGrandTotal: data.isEmptyGrandTotalRow,\n        texts: options.texts || {},\n        hiddenTotals: hiddenTotals,\n        hiddenValues: hiddenValues,\n        hiddenGrandTotals: [],\n        showTotals: options.showRowTotals,\n        showGrandTotals: false !== options.showRowGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\n        sortBySummaryPaths: createSortPaths(columnFields, dataFields),\n        showTotalsPrior: \"rows\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\n        showEmpty: !options.hideEmptySummaryCells,\n        layout: options.rowHeaderLayout,\n        fields: rowFields,\n        dataFields: dataFields,\n        progress: 0\n      };\n      var columnOptions = {\n        isEmptyGrandTotal: data.isEmptyGrandTotalColumn,\n        texts: options.texts || {},\n        hiddenTotals: hiddenTotals,\n        hiddenValues: hiddenValues,\n        hiddenGrandTotals: hiddenGrandTotals,\n        showTotals: options.showColumnTotals,\n        showTotalsPrior: \"columns\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\n        showGrandTotals: false !== options.showColumnGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\n        sortBySummaryPaths: createSortPaths(rowFields, dataFields),\n        showEmpty: !options.hideEmptySummaryCells,\n        fields: columnFields,\n        dataFields: dataFields,\n        progress: 0\n      };\n\n      var notifyProgress = function (progress) {\n        this.progress = progress;\n\n        that._handleProgressChanged(.8 + .1 * rowOptions.progress + .1 * columnOptions.progress);\n      };\n\n      rowOptions.notifyProgress = notifyProgress;\n      columnOptions.notifyProgress = notifyProgress;\n\n      if (!(0, _type.isDefined)(data.grandTotalRowIndex)) {\n        data.grandTotalRowIndex = getHeaderIndexedItems(data.rows, rowOptions).length;\n      }\n\n      if (!(0, _type.isDefined)(data.grandTotalColumnIndex)) {\n        data.grandTotalColumnIndex = getHeaderIndexedItems(data.columns, columnOptions).length;\n      }\n\n      dataSource._changeLoadingCount(1);\n\n      (0, _deferred.when)(createHeaderInfo(data.columns, columnFields, dataFieldsForColumns, true, columnOptions), createHeaderInfo(data.rows, rowFields, dataFieldsForRows, false, rowOptions)).always(function () {\n        dataSource._changeLoadingCount(-1);\n      }).done(function (columnsInfo, rowsInfo) {\n        that._columnsInfo = columnsInfo;\n        that._rowsInfo = rowsInfo;\n\n        if (that._rowsScrollController && that._columnsScrollController && that.changed && !that._dataSource.paginate()) {\n          that._rowsScrollController.reset();\n\n          that._columnsScrollController.reset();\n\n          that._lockChanged = true;\n\n          that._rowsScrollController.load();\n\n          that._columnsScrollController.load();\n\n          that._lockChanged = false;\n        }\n      }).done(function () {\n        that._fireChanged();\n\n        if (that._stateStoringController.isEnabled() && !that._dataSource.isLoading()) {\n          that._stateStoringController.state(that._dataSource.state());\n\n          that._stateStoringController.save();\n        }\n      });\n    },\n    getRowsInfo: function (getAllData) {\n      var that = this;\n      var rowsInfo = that._rowsInfo;\n      var scrollController = that._rowsScrollController;\n      var rowspan;\n      var i;\n\n      if (scrollController && !getAllData) {\n        var startIndex = scrollController.beginPageIndex() * that.rowPageSize();\n        var endIndex = scrollController.endPageIndex() * that.rowPageSize() + that.rowPageSize();\n        var newRowsInfo = [];\n        var maxDepth = 1;\n        foreachRowInfo(rowsInfo, function (rowInfo, visibleIndex, rowIndex, _, columnIndex) {\n          var isVisible = visibleIndex >= startIndex && rowIndex < endIndex;\n          var index = rowIndex < startIndex ? 0 : rowIndex - startIndex;\n          var cell = rowInfo;\n\n          if (isVisible) {\n            newRowsInfo[index] = newRowsInfo[index] || [];\n            rowspan = rowIndex < startIndex ? rowInfo.rowspan - (startIndex - rowIndex) || 1 : rowInfo.rowspan;\n\n            if (startIndex + index + rowspan > endIndex) {\n              rowspan = endIndex - (index + startIndex) || 1;\n            }\n\n            if (rowspan !== rowInfo.rowspan) {\n              cell = (0, _extend2.extend)({}, cell, {\n                rowspan: rowspan\n              });\n            }\n\n            newRowsInfo[index].push(cell);\n            maxDepth = math.max(maxDepth, columnIndex + 1);\n          } else {\n            if (i > endIndex) {\n              return false;\n            }\n          }\n        });\n        foreachRowInfo(newRowsInfo, function (rowInfo, visibleIndex, rowIndex, columnIndex, realColumnIndex) {\n          var colspan = rowInfo.colspan || 1;\n\n          if (realColumnIndex + colspan > maxDepth) {\n            newRowsInfo[rowIndex][columnIndex] = (0, _extend2.extend)({}, rowInfo, {\n              colspan: maxDepth - realColumnIndex || 1\n            });\n          }\n        });\n        return newRowsInfo;\n      }\n\n      return rowsInfo;\n    },\n    getColumnsInfo: function (getAllData) {\n      var that = this;\n      var info = that._columnsInfo;\n      var scrollController = that._columnsScrollController;\n\n      if (scrollController && !getAllData) {\n        var startIndex = scrollController.beginPageIndex() * that.columnPageSize();\n        var endIndex = scrollController.endPageIndex() * that.columnPageSize() + that.columnPageSize();\n        info = (0, _uiGrid_core2.createColumnsInfo)(info, startIndex, endIndex);\n      }\n\n      return info;\n    },\n    totalRowCount: function () {\n      return this._rowsInfo.length;\n    },\n    rowPageIndex: function (index) {\n      if (void 0 !== index) {\n        this._rowPageIndex = index;\n      }\n\n      return this._rowPageIndex || 0;\n    },\n    totalColumnCount: function () {\n      var count = 0;\n\n      if (this._columnsInfo && this._columnsInfo.length) {\n        for (var i = 0; i < this._columnsInfo[0].length; i++) {\n          count += this._columnsInfo[0][i].colspan || 1;\n        }\n      }\n\n      return count;\n    },\n    rowPageSize: function (size) {\n      if (void 0 !== size) {\n        this._rowPageSize = size;\n      }\n\n      return this._rowPageSize || 20;\n    },\n    columnPageSize: function (size) {\n      if (void 0 !== size) {\n        this._columnPageSize = size;\n      }\n\n      return this._columnPageSize || 20;\n    },\n    columnPageIndex: function (index) {\n      if (void 0 !== index) {\n        this._columnPageIndex = index;\n      }\n\n      return this._columnPageIndex || 0;\n    },\n    getCellsInfo: function (getAllData) {\n      var rowsInfo = this.getRowsInfo(getAllData);\n      var columnsInfo = this.getColumnsInfo(getAllData);\n\n      var data = this._dataSource.getData();\n\n      var texts = this._options.texts || {};\n      return createCellsInfo(rowsInfo, columnsInfo, data, this._dataSource.getAreaFields(\"data\"), this._options.dataFieldArea, texts.dataNotAvailable);\n    },\n    dispose: function () {\n      var that = this;\n\n      if (that._isSharedDataSource) {\n        that._dataSource.off(\"changed\", that._changedHandler);\n\n        that._dataSource.off(\"expandValueChanging\", that._expandValueChangingHandler);\n\n        that._dataSource.off(\"loadingChanged\", that._loadingChangedHandler);\n\n        that._dataSource.off(\"progressChanged\", that._progressChangedHandler);\n\n        that._dataSource.off(\"fieldsPrepared\", that._fieldsPreparedHandler);\n\n        that._dataSource.off(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\n      } else {\n        that._dataSource.dispose();\n      }\n\n      that._columnsScrollController && that._columnsScrollController.dispose();\n      that._rowsScrollController && that._rowsScrollController.dispose();\n\n      that._stateStoringController.dispose();\n\n      that.expandValueChanging.empty();\n      that.changed.empty();\n      that.loadingChanged.empty();\n      that.progressChanged.empty();\n      that.scrollChanged.empty();\n      that.dataSourceChanged.empty();\n    }\n  };\n  proxyMethod(members, \"applyPartialDataSource\");\n  proxyMethod(members, \"collapseHeaderItem\");\n  proxyMethod(members, \"expandHeaderItem\");\n  proxyMethod(members, \"getData\");\n  proxyMethod(members, \"isEmpty\");\n  return members;\n}());\n\nexports.DataController = DataController;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/ui.pivot_grid.data_controller.js"],"names":["exports","DataController","_callbacks","_interopRequireDefault","require","_deferred","_extend2","_array","_iterator","_class","_string","_common","_type","_uiGrid_core","_uiGrid_core2","_uiGrid_core3","_data_source","_uiPivot_grid","obj","__esModule","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","math","Math","GRAND_TOTAL_TYPE","TOTAL_TYPE","DATA_TYPE","NOT_AVAILABLE","CHANGING_DURATION_IF_PAGINATE","proxyMethod","instance","methodName","defaultResult","dataSource","_dataSource","apply","arguments","default","inherit","getHeaderItemText","item","description","options","text","isDefined","displayText","caption","type","texts","grandTotal","isAdditionalTotal","format","total","formatCellValue","dataField","errorText","formatValue","createHeaderInfo","getHeaderItemsDepth","headerItems","depth","foreachTree","items","max","length","createInfoItem","headerItem","breadth","isHorizontal","isTree","infoItem","path","width","wordWrapEnabled","isLast","sorted","isMetric","dataIndex","expanded","depthSize","index","dataSourceIndex","children","isWhiteSpace","addInfoItem","info","lastIndex","addInfoItemCore","itemIndex","depthIndex","push","unshift","itemInfo","isItemSorted","sortBySummaryPath","stringValuesUsed","isString","indexOf","createPath","map","reverse","slice","join","getViewHeaderItems","headerDescriptions","cellDescriptions","cellDescriptionsCount","viewHeaderItems","createViewHeaderItems","dataFields","d","Deferred","when","done","notifyProgress","showGrandTotals","showTotalsPrior","isEmpty","isEmptyGrandTotal","hideTotals","showTotals","hiddenTotals","hideData","hiddenValues","layout","addAdditionalTotalHeaderItems","foreachTreeAsync","addMetricHeaderItems","showEmpty","removeHiddenItems","field","parentChildren","splice","inArray","each","sortBySummaryPaths","pop","resolve","createHeaderItem","childrenStack","parent","node","i","headerDescriptionsCount","isGrandTotal","isTotal","isValue","columnIsHidden","visible","hiddenGrandTotals","extend","removeEmptyParent","filter","fillHeaderInfo","indexesByDepth","createSortPaths","headerFields","headerField","fieldIndex","findField","sortBySummaryField","concat","foreachRowInfo","rowsInfo","callback","columnOffset","columnOffsetResetIndexes","j","rowSpanOffset","rowspan","visibleIndex","createCellsInfo","columnsInfo","data","dataFieldArea","dataFieldAreaInRows","dataSourceCells","values","rowInfo","rowIndex","row","dataRow","grandTotalRowIndex","foreachColumnInfo","columnInfo","columnIndex","cell","grandTotalColumnIndex","Array","isArray","cellValue","dataType","columnType","rowType","rowPath","columnPath","getHeaderIndexedItems","indexedItems","indexedItem","createScrollController","dataController","component","dataAdapter","option","VirtualScrollController","hasKnownLastPage","pageCount","ceil","totalItemsCount","pageSize","updateLoading","itemsCount","pageIndex","viewportItems","onChanged","isLoading","changingDuration","paginate","_changingDuration","getHiddenTotals","result","getHiddenValues","forEach","showValues","getHiddenGrandTotalsTotals","columnFields","members","ctor","that","virtualScrollControllerChanged","_fireChanged","bind","_options","dataSourceChanged","_createDataSource","_rowsScrollController","totalRowCount","rowPageIndex","rowPageSize","load","handleDataChanged","_columnsScrollController","totalColumnCount","columnPageIndex","columnPageSize","_stateStoringController","StateStoringController","init","_columnsInfo","_rowsInfo","_cellsInfo","expandValueChanging","loadingChanged","progressChanged","scrollChanged","_update","changed","startChanging","Date","_lockChanged","fire","_correctSkipsTakes","rowSkip","rowSpan","levels","skips","takes","endIndex","_calculatePagingForRowExpandedPaths","rowExpandedSkips","rowExpandedTakes","rows","rowCount","min","rowTake","rowExpandedPaths","expandedPathIndexes","expandIndex","level","_calculatePagingForColumnExpandedPaths","expandedSkips","expandedTakes","skipByPath","takeByPath","colspan","toString","columnSkip","columnTake","columnExpandedPaths","skip","take","_processPagingForExpandedPaths","area","storeLoadOptions","reload","expandedPaths","_savePagingForExpandedPaths","_extend","isOppositeArea","headerName","_handleCustomizeStoreLoadOptions","_this","rowsScrollController","beginPageIndex","endPageIndex","columnsScrollController","stateStoringController","isEnabled","isLoaded","always","state","calculateVirtualContentParams","contentParams","viewportItemSize","virtualRowHeight","viewportSize","viewportHeight","setContentSize","itemHeights","virtualColumnWidth","viewportWidth","itemWidths","deferUpdate","loadIfNeed","left","getViewportPosition","top","contentTop","getContentOffset","contentLeft","getVirtualContentSize","height","setViewportPosition","subscribeToWindowScrollEvents","$element","updateWindowScrollPosition","position","scrollTo","updateViewOptions","_handleExpandValueChanging","e","_handleLoadingChanged","_handleProgressChanged","progress","_handleFieldsPrepared","onFieldsPrepared","dataSourceOptions","_isSharedDataSource","_expandValueChangingHandler","_loadingChangedHandler","_fieldsPreparedHandler","_customizeStoreLoadOptionsHandler","_changedHandler","_progressChangedHandler","on","getDataSource","beginLoading","endLoading","getAreaFields","rowFields","dataFieldsForRows","dataFieldsForColumns","getData","grandTotalsAreHiddenForNotAllDataFields","rowOptions","isEmptyGrandTotalRow","showRowTotals","showRowGrandTotals","hideEmptySummaryCells","rowHeaderLayout","fields","columnOptions","isEmptyGrandTotalColumn","showColumnTotals","showColumnGrandTotals","columns","_changeLoadingCount","reset","save","getRowsInfo","getAllData","scrollController","startIndex","newRowsInfo","maxDepth","_","isVisible","realColumnIndex","getColumnsInfo","createColumnsInfo","_rowPageIndex","count","size","_rowPageSize","_columnPageSize","_columnPageIndex","getCellsInfo","dataNotAvailable","dispose","off","empty"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.data_controller.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.DataController = void 0;\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _extend2 = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _string = require(\"../../core/utils/string\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _uiGrid_core = require(\"../grid_core/ui.grid_core.virtual_scrolling_core\");\r\nvar _uiGrid_core2 = require(\"../grid_core/ui.grid_core.virtual_columns_core\");\r\nvar _uiGrid_core3 = require(\"../grid_core/ui.grid_core.state_storing_core\");\r\nvar _data_source = _interopRequireDefault(require(\"./data_source\"));\r\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar math = Math;\r\nvar GRAND_TOTAL_TYPE = \"GT\";\r\nvar TOTAL_TYPE = \"T\";\r\nvar DATA_TYPE = \"D\";\r\nvar NOT_AVAILABLE = \"#N/A\";\r\nvar CHANGING_DURATION_IF_PAGINATE = 300;\r\nvar proxyMethod = function(instance, methodName, defaultResult) {\r\n    if (!instance[methodName]) {\r\n        instance[methodName] = function() {\r\n            var dataSource = this._dataSource;\r\n            return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n        }\r\n    }\r\n};\r\nvar DataController = _class.default.inherit(function() {\r\n    function getHeaderItemText(item, description, options) {\r\n        var text = item.text;\r\n        if ((0, _type.isDefined)(item.displayText)) {\r\n            text = item.displayText\r\n        } else {\r\n            if ((0, _type.isDefined)(item.caption)) {\r\n                text = item.caption\r\n            } else {\r\n                if (item.type === GRAND_TOTAL_TYPE) {\r\n                    text = options.texts.grandTotal\r\n                }\r\n            }\r\n        }\r\n        if (item.isAdditionalTotal) {\r\n            text = (0, _string.format)(options.texts.total || \"\", text)\r\n        }\r\n        return text\r\n    }\r\n\r\n    function formatCellValue(value, dataField, errorText) {\r\n        return value === NOT_AVAILABLE ? errorText : (0, _uiPivot_grid.formatValue)(value, dataField)\r\n    }\r\n    var createHeaderInfo = function() {\r\n        var getHeaderItemsDepth = function(headerItems) {\r\n            var depth = 0;\r\n            (0, _uiPivot_grid.foreachTree)(headerItems, function(items) {\r\n                depth = math.max(depth, items.length)\r\n            });\r\n            return depth\r\n        };\r\n        var createInfoItem = function(headerItem, breadth, isHorizontal, isTree) {\r\n            var infoItem = {\r\n                type: headerItem.type,\r\n                text: headerItem.text\r\n            };\r\n            if (headerItem.path) {\r\n                infoItem.path = headerItem.path\r\n            }\r\n            if (headerItem.width) {\r\n                infoItem.width = headerItem.width\r\n            }\r\n            if ((0, _type.isDefined)(headerItem.wordWrapEnabled)) {\r\n                infoItem.wordWrapEnabled = headerItem.wordWrapEnabled\r\n            }\r\n            if (headerItem.isLast) {\r\n                infoItem.isLast = true\r\n            }\r\n            if (headerItem.sorted) {\r\n                infoItem.sorted = true\r\n            }\r\n            if (headerItem.isMetric) {\r\n                infoItem.dataIndex = headerItem.dataIndex\r\n            }\r\n            if ((0, _type.isDefined)(headerItem.expanded)) {\r\n                infoItem.expanded = headerItem.expanded\r\n            }\r\n            if (breadth > 1) {\r\n                infoItem[isHorizontal ? \"colspan\" : \"rowspan\"] = breadth\r\n            }\r\n            if (headerItem.depthSize && headerItem.depthSize > 1) {\r\n                infoItem[isHorizontal ? \"rowspan\" : \"colspan\"] = headerItem.depthSize\r\n            }\r\n            if (headerItem.index >= 0) {\r\n                infoItem.dataSourceIndex = headerItem.index\r\n            }\r\n            if (isTree && headerItem.children && headerItem.children.length && !headerItem.children[0].isMetric) {\r\n                infoItem.width = null;\r\n                infoItem.isWhiteSpace = true\r\n            }\r\n            return infoItem\r\n        };\r\n        var addInfoItem = function(info, options) {\r\n            var breadth = options.lastIndex - options.index || 1;\r\n            var addInfoItemCore = function(info, infoItem, itemIndex, depthIndex, isHorizontal) {\r\n                var index = isHorizontal ? depthIndex : itemIndex;\r\n                while (!info[index]) {\r\n                    info.push([])\r\n                }\r\n                if (isHorizontal) {\r\n                    info[index].push(infoItem)\r\n                } else {\r\n                    info[index].unshift(infoItem)\r\n                }\r\n            };\r\n            var itemInfo = createInfoItem(options.headerItem, breadth, options.isHorizontal, options.isTree);\r\n            addInfoItemCore(info, itemInfo, options.index, options.depth, options.isHorizontal);\r\n            if (!options.headerItem.children || 0 === options.headerItem.children.length) {\r\n                return options.lastIndex + 1\r\n            }\r\n            return options.lastIndex\r\n        };\r\n        var isItemSorted = function(items, sortBySummaryPath) {\r\n            var path;\r\n            var item = items[0];\r\n            var stringValuesUsed = (0, _type.isString)(sortBySummaryPath[0]);\r\n            var headerItem = item.dataIndex >= 0 ? items[1] : item;\r\n            if (stringValuesUsed && sortBySummaryPath[0].indexOf(\"&[\") !== -1 && headerItem.key || !headerItem.key) {\r\n                path = (0, _uiPivot_grid.createPath)(items)\r\n            } else {\r\n                path = (0, _iterator.map)(items, function(item) {\r\n                    return item.dataIndex >= 0 ? item.value : item.text\r\n                }).reverse()\r\n            }\r\n            if (item.type === GRAND_TOTAL_TYPE) {\r\n                path = path.slice(1)\r\n            }\r\n            return path.join(\"/\") === sortBySummaryPath.join(\"/\")\r\n        };\r\n        var getViewHeaderItems = function(headerItems, headerDescriptions, cellDescriptions, depthSize, options) {\r\n            var cellDescriptionsCount = cellDescriptions.length;\r\n            var viewHeaderItems = createViewHeaderItems(headerItems, headerDescriptions);\r\n            var dataFields = options.dataFields;\r\n            var d = new _deferred.Deferred;\r\n            (0, _deferred.when)(viewHeaderItems).done(function(viewHeaderItems) {\r\n                options.notifyProgress(.5);\r\n                if (options.showGrandTotals) {\r\n                    viewHeaderItems[!options.showTotalsPrior ? \"push\" : \"unshift\"]({\r\n                        type: GRAND_TOTAL_TYPE,\r\n                        isEmpty: options.isEmptyGrandTotal\r\n                    })\r\n                }\r\n                var hideTotals = false === options.showTotals || dataFields.length > 0 && dataFields.length === options.hiddenTotals.length;\r\n                var hideData = dataFields.length > 0 && options.hiddenValues.length === dataFields.length;\r\n                if (hideData && hideTotals) {\r\n                    depthSize = 1\r\n                }\r\n                if (!hideTotals || \"tree\" === options.layout) {\r\n                    addAdditionalTotalHeaderItems(viewHeaderItems, headerDescriptions, options.showTotalsPrior, \"tree\" === options.layout)\r\n                }(0, _deferred.when)((0, _uiPivot_grid.foreachTreeAsync)(viewHeaderItems, function(items) {\r\n                    var item = items[0];\r\n                    if (!item.children || 0 === item.children.length) {\r\n                        item.depthSize = depthSize - items.length + 1\r\n                    }\r\n                })).done(function() {\r\n                    if (cellDescriptionsCount > 1) {\r\n                        addMetricHeaderItems(viewHeaderItems, cellDescriptions, options)\r\n                    }!options.showEmpty && removeHiddenItems(viewHeaderItems);\r\n                    options.notifyProgress(.75);\r\n                    (0, _deferred.when)((0, _uiPivot_grid.foreachTreeAsync)(viewHeaderItems, function(items) {\r\n                        var item = items[0];\r\n                        var isMetric = item.isMetric;\r\n                        var field = headerDescriptions[items.length - 1] || {};\r\n                        if (item.type === DATA_TYPE && !isMetric) {\r\n                            item.width = field.width\r\n                        }\r\n                        if (true === hideData && item.type === DATA_TYPE) {\r\n                            var parentChildren = (items[1] ? items[1].children : viewHeaderItems) || [];\r\n                            parentChildren.splice((0, _array.inArray)(item, parentChildren), 1);\r\n                            return\r\n                        }\r\n                        if (isMetric) {\r\n                            item.wordWrapEnabled = cellDescriptions[item.dataIndex].wordWrapEnabled\r\n                        } else {\r\n                            item.wordWrapEnabled = field.wordWrapEnabled\r\n                        }\r\n                        item.isLast = !item.children || !item.children.length;\r\n                        if (item.isLast) {\r\n                            (0, _iterator.each)(options.sortBySummaryPaths, function(index, sortBySummaryPath) {\r\n                                if (!(0, _type.isDefined)(item.dataIndex)) {\r\n                                    sortBySummaryPath = sortBySummaryPath.slice(0);\r\n                                    sortBySummaryPath.pop()\r\n                                }\r\n                                if (isItemSorted(items, sortBySummaryPath)) {\r\n                                    item.sorted = true;\r\n                                    return false\r\n                                }\r\n                            })\r\n                        }\r\n                        item.text = getHeaderItemText(item, field, options)\r\n                    })).done(function() {\r\n                        if (!viewHeaderItems.length) {\r\n                            viewHeaderItems.push({})\r\n                        }\r\n                        options.notifyProgress(1);\r\n                        d.resolve(viewHeaderItems)\r\n                    })\r\n                })\r\n            });\r\n            return d\r\n        };\r\n\r\n        function createHeaderItem(childrenStack, depth, index) {\r\n            var parent = childrenStack[depth] = childrenStack[depth] || [];\r\n            var node = parent[index] = {};\r\n            if (childrenStack[depth + 1]) {\r\n                node.children = childrenStack[depth + 1];\r\n                for (var i = depth + 1; i < childrenStack.length; i++) {\r\n                    childrenStack[i] = void 0\r\n                }\r\n                childrenStack.length = depth + 1\r\n            }\r\n            return node\r\n        }\r\n\r\n        function createViewHeaderItems(headerItems, headerDescriptions) {\r\n            var headerDescriptionsCount = headerDescriptions && headerDescriptions.length || 0;\r\n            var childrenStack = [];\r\n            var d = new _deferred.Deferred;\r\n            var headerItem;\r\n            (0, _deferred.when)((0, _uiPivot_grid.foreachTreeAsync)(headerItems, function(items, index) {\r\n                var item = items[0];\r\n                var path = (0, _uiPivot_grid.createPath)(items);\r\n                headerItem = createHeaderItem(childrenStack, path.length, index);\r\n                headerItem.type = DATA_TYPE;\r\n                headerItem.value = item.value;\r\n                headerItem.path = path;\r\n                headerItem.text = item.text;\r\n                headerItem.index = item.index;\r\n                headerItem.displayText = item.displayText;\r\n                headerItem.key = item.key;\r\n                headerItem.isEmpty = item.isEmpty;\r\n                if (path.length < headerDescriptionsCount && (!item.children || 0 !== item.children.length)) {\r\n                    headerItem.expanded = !!item.children\r\n                }\r\n            })).done(function() {\r\n                d.resolve(createHeaderItem(childrenStack, 0, 0).children || [])\r\n            });\r\n            return d\r\n        }\r\n\r\n        function addMetricHeaderItems(headerItems, cellDescriptions, options) {\r\n            (0, _uiPivot_grid.foreachTree)(headerItems, function(items) {\r\n                var item = items[0];\r\n                var i;\r\n                if (!item.children || 0 === item.children.length) {\r\n                    item.children = [];\r\n                    for (i = 0; i < cellDescriptions.length; i++) {\r\n                        var isGrandTotal = item.type === GRAND_TOTAL_TYPE;\r\n                        var isTotal = item.type === TOTAL_TYPE;\r\n                        var isValue = item.type === DATA_TYPE;\r\n                        var columnIsHidden = false === cellDescriptions[i].visible || isGrandTotal && (0, _array.inArray)(i, options.hiddenGrandTotals) !== -1 || isTotal && (0, _array.inArray)(i, options.hiddenTotals) !== -1 || isValue && (0, _array.inArray)(i, options.hiddenValues) !== -1;\r\n                        if (columnIsHidden) {\r\n                            continue\r\n                        }\r\n                        item.children.push({\r\n                            caption: cellDescriptions[i].caption,\r\n                            path: item.path,\r\n                            type: item.type,\r\n                            value: i,\r\n                            index: item.index,\r\n                            dataIndex: i,\r\n                            isMetric: true,\r\n                            isEmpty: item.isEmpty && item.isEmpty[i]\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        function addAdditionalTotalHeaderItems(headerItems, headerDescriptions, showTotalsPrior, isTree) {\r\n            showTotalsPrior = showTotalsPrior || isTree;\r\n            (0, _uiPivot_grid.foreachTree)(headerItems, function(items, index) {\r\n                var item = items[0];\r\n                var parentChildren = (items[1] ? items[1].children : headerItems) || [];\r\n                var dataField = headerDescriptions[items.length - 1];\r\n                if (item.type === DATA_TYPE && item.expanded && (false !== dataField.showTotals || isTree)) {\r\n                    index !== -1 && parentChildren.splice(showTotalsPrior ? index : index + 1, 0, (0, _extend2.extend)({}, item, {\r\n                        children: null,\r\n                        type: TOTAL_TYPE,\r\n                        expanded: showTotalsPrior ? true : null,\r\n                        isAdditionalTotal: true\r\n                    }));\r\n                    if (showTotalsPrior) {\r\n                        item.expanded = null\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        var removeEmptyParent = function removeEmptyParent(items, index) {\r\n            var parent = items[index + 1];\r\n            if (!items[index].children.length && parent && parent.children) {\r\n                parent.children.splice((0, _array.inArray)(items[index], parent.children), 1);\r\n                removeEmptyParent(items, index + 1)\r\n            }\r\n        };\r\n\r\n        function removeHiddenItems(headerItems) {\r\n            (0, _uiPivot_grid.foreachTree)([{\r\n                children: headerItems\r\n            }], function(items, index) {\r\n                var item = items[0];\r\n                var parentChildren = (items[1] ? items[1].children : headerItems) || [];\r\n                var isEmpty = item.isEmpty;\r\n                if (isEmpty && isEmpty.length) {\r\n                    isEmpty = item.isEmpty.filter(function(isEmpty) {\r\n                        return isEmpty\r\n                    }).length === isEmpty.length\r\n                }\r\n                if (item && !item.children && isEmpty) {\r\n                    parentChildren.splice(index, 1);\r\n                    removeEmptyParent(items, 1)\r\n                }\r\n            })\r\n        }\r\n        var fillHeaderInfo = function(info, viewHeaderItems, depthSize, isHorizontal, isTree) {\r\n            var lastIndex = 0;\r\n            var index;\r\n            var depth;\r\n            var indexesByDepth = [0];\r\n            (0, _uiPivot_grid.foreachTree)(viewHeaderItems, function(items) {\r\n                var headerItem = items[0];\r\n                depth = headerItem.isMetric ? depthSize : items.length - 1;\r\n                while (indexesByDepth.length - 1 < depth) {\r\n                    indexesByDepth.push(indexesByDepth[indexesByDepth.length - 1])\r\n                }\r\n                index = indexesByDepth[depth] || 0;\r\n                lastIndex = addInfoItem(info, {\r\n                    headerItem: headerItem,\r\n                    index: index,\r\n                    lastIndex: lastIndex,\r\n                    depth: depth,\r\n                    isHorizontal: isHorizontal,\r\n                    isTree: isTree\r\n                });\r\n                indexesByDepth.length = depth;\r\n                indexesByDepth.push(lastIndex)\r\n            })\r\n        };\r\n        return function(headerItems, headerDescriptions, cellDescriptions, isHorizontal, options) {\r\n            var info = [];\r\n            var depthSize = getHeaderItemsDepth(headerItems) || 1;\r\n            var d = new _deferred.Deferred;\r\n            getViewHeaderItems(headerItems, headerDescriptions, cellDescriptions, depthSize, options).done(function(viewHeaderItems) {\r\n                fillHeaderInfo(info, viewHeaderItems, depthSize, isHorizontal, \"tree\" === options.layout);\r\n                options.notifyProgress(1);\r\n                d.resolve(info)\r\n            });\r\n            return d\r\n        }\r\n    }();\r\n\r\n    function createSortPaths(headerFields, dataFields) {\r\n        var sortBySummaryPaths = [];\r\n        (0, _iterator.each)(headerFields, function(index, headerField) {\r\n            var fieldIndex = (0, _uiPivot_grid.findField)(dataFields, headerField.sortBySummaryField);\r\n            if (fieldIndex >= 0) {\r\n                sortBySummaryPaths.push((headerField.sortBySummaryPath || []).concat([fieldIndex]))\r\n            }\r\n        });\r\n        return sortBySummaryPaths\r\n    }\r\n\r\n    function foreachRowInfo(rowsInfo, callback) {\r\n        var columnOffset = 0;\r\n        var columnOffsetResetIndexes = [];\r\n        for (var i = 0; i < rowsInfo.length; i++) {\r\n            for (var j = 0; j < rowsInfo[i].length; j++) {\r\n                var rowSpanOffset = (rowsInfo[i][j].rowspan || 1) - 1;\r\n                var visibleIndex = i + rowSpanOffset;\r\n                if (columnOffsetResetIndexes[i]) {\r\n                    columnOffset -= columnOffsetResetIndexes[i];\r\n                    columnOffsetResetIndexes[i] = 0\r\n                }\r\n                if (false === callback(rowsInfo[i][j], visibleIndex, i, j, columnOffset)) {\r\n                    break\r\n                }\r\n                columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] = (columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] || 0) + 1;\r\n                columnOffset++\r\n            }\r\n        }\r\n    }\r\n\r\n    function createCellsInfo(rowsInfo, columnsInfo, data, dataFields, dataFieldArea, errorText) {\r\n        var info = [];\r\n        var dataFieldAreaInRows = \"row\" === dataFieldArea;\r\n        var dataSourceCells = data.values;\r\n        dataSourceCells.length && foreachRowInfo(rowsInfo, function(rowInfo, rowIndex) {\r\n            var row = info[rowIndex] = [];\r\n            var dataRow = dataSourceCells[rowInfo.dataSourceIndex >= 0 ? rowInfo.dataSourceIndex : data.grandTotalRowIndex] || [];\r\n            rowInfo.isLast && (0, _uiGrid_core2.foreachColumnInfo)(columnsInfo, function(columnInfo, columnIndex) {\r\n                var dataIndex = (dataFieldAreaInRows ? rowInfo.dataIndex : columnInfo.dataIndex) || 0;\r\n                var dataField = dataFields[dataIndex];\r\n                if (columnInfo.isLast && dataField) {\r\n                    var cell = dataRow[columnInfo.dataSourceIndex >= 0 ? columnInfo.dataSourceIndex : data.grandTotalColumnIndex];\r\n                    if (!Array.isArray(cell)) {\r\n                        cell = [cell]\r\n                    }\r\n                    var cellValue = cell[dataIndex];\r\n                    row[columnIndex] = {\r\n                        text: formatCellValue(cellValue, dataField, errorText),\r\n                        value: cellValue,\r\n                        format: dataField.format,\r\n                        dataType: dataField.dataType,\r\n                        columnType: columnInfo.type,\r\n                        rowType: rowInfo.type,\r\n                        rowPath: rowInfo.path || [],\r\n                        columnPath: columnInfo.path || [],\r\n                        dataIndex: dataIndex\r\n                    };\r\n                    if (dataField.width) {\r\n                        row[columnIndex].width = dataField.width\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        return info\r\n    }\r\n\r\n    function getHeaderIndexedItems(headerItems, options) {\r\n        var visibleIndex = 0;\r\n        var indexedItems = [];\r\n        (0, _uiPivot_grid.foreachTree)(headerItems, function(items) {\r\n            var headerItem = items[0];\r\n            var path = (0, _uiPivot_grid.createPath)(items);\r\n            if (headerItem.children && false === options.showTotals) {\r\n                return\r\n            }\r\n            var indexedItem = (0, _extend2.extend)(true, {}, headerItem, {\r\n                visibleIndex: visibleIndex++,\r\n                path: path\r\n            });\r\n            if ((0, _type.isDefined)(indexedItem.index)) {\r\n                indexedItems[indexedItem.index] = indexedItem\r\n            } else {\r\n                indexedItems.push(indexedItem)\r\n            }\r\n        });\r\n        return indexedItems\r\n    }\r\n\r\n    function createScrollController(dataController, component, dataAdapter) {\r\n        if (component && \"virtual\" === component.option(\"scrolling.mode\")) {\r\n            return new _uiGrid_core.VirtualScrollController(component, (0, _extend2.extend)({\r\n                hasKnownLastPage: function() {\r\n                    return true\r\n                },\r\n                pageCount: function() {\r\n                    return math.ceil(this.totalItemsCount() / this.pageSize())\r\n                },\r\n                updateLoading: function() {},\r\n                itemsCount: function() {\r\n                    if (this.pageIndex() < this.pageCount() - 1) {\r\n                        return this.pageSize()\r\n                    } else {\r\n                        return this.totalItemsCount() % this.pageSize()\r\n                    }\r\n                },\r\n                items: function() {\r\n                    return []\r\n                },\r\n                viewportItems: function() {\r\n                    return []\r\n                },\r\n                onChanged: function() {},\r\n                isLoading: function() {\r\n                    return dataController.isLoading()\r\n                },\r\n                changingDuration: function() {\r\n                    var dataSource = dataController._dataSource;\r\n                    if (dataSource.paginate()) {\r\n                        return CHANGING_DURATION_IF_PAGINATE\r\n                    }\r\n                    return dataController._changingDuration || 0\r\n                }\r\n            }, dataAdapter))\r\n        }\r\n    }\r\n\r\n    function getHiddenTotals(dataFields) {\r\n        var result = [];\r\n        (0, _iterator.each)(dataFields, function(index, field) {\r\n            if (false === field.showTotals) {\r\n                result.push(index)\r\n            }\r\n        });\r\n        return result\r\n    }\r\n\r\n    function getHiddenValues(dataFields) {\r\n        var result = [];\r\n        dataFields.forEach(function(field, index) {\r\n            if (void 0 === field.showValues && false === field.showTotals || false === field.showValues) {\r\n                result.push(index)\r\n            }\r\n        });\r\n        return result\r\n    }\r\n\r\n    function getHiddenGrandTotalsTotals(dataFields, columnFields) {\r\n        var result = [];\r\n        (0, _iterator.each)(dataFields, function(index, field) {\r\n            if (false === field.showGrandTotals) {\r\n                result.push(index)\r\n            }\r\n        });\r\n        if (0 === columnFields.length && result.length === dataFields.length) {\r\n            result = []\r\n        }\r\n        return result\r\n    }\r\n    var members = {\r\n        ctor: function(options) {\r\n            var that = this;\r\n            var virtualScrollControllerChanged = that._fireChanged.bind(that);\r\n            options = that._options = options || {};\r\n            that.dataSourceChanged = (0, _callbacks.default)();\r\n            that._dataSource = that._createDataSource(options);\r\n            that._rowsScrollController = createScrollController(that, options.component, {\r\n                totalItemsCount: function() {\r\n                    return that.totalRowCount()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that.rowPageIndex(index)\r\n                },\r\n                pageSize: function() {\r\n                    return that.rowPageSize()\r\n                },\r\n                load: function() {\r\n                    if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                        that._rowsScrollController.pageIndex(this.pageCount() - 1)\r\n                    }\r\n                    return that._rowsScrollController.handleDataChanged(function() {\r\n                        if (that._dataSource.paginate()) {\r\n                            that._dataSource.load()\r\n                        } else {\r\n                            virtualScrollControllerChanged.apply(this, arguments)\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n            that._columnsScrollController = createScrollController(that, options.component, {\r\n                totalItemsCount: function() {\r\n                    return that.totalColumnCount()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that.columnPageIndex(index)\r\n                },\r\n                pageSize: function() {\r\n                    return that.columnPageSize()\r\n                },\r\n                load: function() {\r\n                    if (that._columnsScrollController.pageIndex() >= this.pageCount()) {\r\n                        that._columnsScrollController.pageIndex(this.pageCount() - 1)\r\n                    }\r\n                    return that._columnsScrollController.handleDataChanged(function() {\r\n                        if (that._dataSource.paginate()) {\r\n                            that._dataSource.load()\r\n                        } else {\r\n                            virtualScrollControllerChanged.apply(this, arguments)\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n            that._stateStoringController = new _uiGrid_core3.StateStoringController(options.component).init();\r\n            that._columnsInfo = [];\r\n            that._rowsInfo = [];\r\n            that._cellsInfo = [];\r\n            that.expandValueChanging = (0, _callbacks.default)();\r\n            that.loadingChanged = (0, _callbacks.default)();\r\n            that.progressChanged = (0, _callbacks.default)();\r\n            that.scrollChanged = (0, _callbacks.default)();\r\n            that.load();\r\n            that._update();\r\n            that.changed = (0, _callbacks.default)()\r\n        },\r\n        _fireChanged: function() {\r\n            var that = this;\r\n            var startChanging = new Date;\r\n            that.changed && !that._lockChanged && that.changed.fire();\r\n            that._changingDuration = new Date - startChanging\r\n        },\r\n        _correctSkipsTakes: function(rowIndex, rowSkip, rowSpan, levels, skips, takes) {\r\n            var endIndex = rowSpan ? rowIndex + rowSpan - 1 : rowIndex;\r\n            skips[levels.length] = skips[levels.length] || 0;\r\n            takes[levels.length] = takes[levels.length] || 0;\r\n            if (endIndex < rowSkip) {\r\n                skips[levels.length]++\r\n            } else {\r\n                takes[levels.length]++\r\n            }\r\n        },\r\n        _calculatePagingForRowExpandedPaths: function(options, skips, takes, rowExpandedSkips, rowExpandedTakes) {\r\n            var rows = this._rowsInfo;\r\n            var rowCount = Math.min(options.rowSkip + options.rowTake, rows.length);\r\n            var rowExpandedPaths = options.rowExpandedPaths;\r\n            var levels = [];\r\n            var expandedPathIndexes = {};\r\n            var i;\r\n            var j;\r\n            var path;\r\n            rowExpandedPaths.forEach(function(path, index) {\r\n                expandedPathIndexes[path] = index\r\n            });\r\n            for (i = 0; i < rowCount; i++) {\r\n                takes.length = skips.length = levels.length + 1;\r\n                for (j = 0; j < rows[i].length; j++) {\r\n                    var cell = rows[i][j];\r\n                    if (\"D\" === cell.type) {\r\n                        this._correctSkipsTakes(i, options.rowSkip, cell.rowspan, levels, skips, takes);\r\n                        path = cell.path || path;\r\n                        var expandIndex = path && path.length > 1 ? expandedPathIndexes[path.slice(0, -1)] : -1;\r\n                        if (expandIndex >= 0) {\r\n                            rowExpandedSkips[expandIndex] = skips[levels.length] || 0;\r\n                            rowExpandedTakes[expandIndex] = takes[levels.length] || 0\r\n                        }\r\n                        if (cell.rowspan) {\r\n                            levels.push(cell.rowspan)\r\n                        }\r\n                    }\r\n                }\r\n                levels = levels.map(function(level) {\r\n                    return level - 1\r\n                }).filter(function(level) {\r\n                    return level > 0\r\n                })\r\n            }\r\n        },\r\n        _calculatePagingForColumnExpandedPaths: function(options, skips, takes, expandedSkips, expandedTakes) {\r\n            var skipByPath = {};\r\n            var takeByPath = {};\r\n            (0, _uiGrid_core2.foreachColumnInfo)(this._columnsInfo, function(columnInfo, columnIndex) {\r\n                if (\"D\" === columnInfo.type && columnInfo.path && void 0 === columnInfo.dataIndex) {\r\n                    var colspan = columnInfo.colspan || 1;\r\n                    var path = columnInfo.path.slice(0, -1).toString();\r\n                    skipByPath[path] = skipByPath[path] || 0;\r\n                    takeByPath[path] = takeByPath[path] || 0;\r\n                    if (columnIndex + colspan <= options.columnSkip) {\r\n                        skipByPath[path]++\r\n                    } else {\r\n                        if (columnIndex < options.columnSkip + options.columnTake) {\r\n                            takeByPath[path]++\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            skips[0] = skipByPath[[]];\r\n            takes[0] = takeByPath[[]];\r\n            options.columnExpandedPaths.forEach(function(path, index) {\r\n                var skip = skipByPath[path];\r\n                var take = takeByPath[path];\r\n                if (void 0 !== skip) {\r\n                    expandedSkips[index] = skip\r\n                }\r\n                if (void 0 !== take) {\r\n                    expandedTakes[index] = take\r\n                }\r\n            })\r\n        },\r\n        _processPagingForExpandedPaths: function(options, area, storeLoadOptions, reload) {\r\n            var expandedPaths = options[area + \"ExpandedPaths\"];\r\n            var expandedSkips = expandedPaths.map(function() {\r\n                return 0\r\n            });\r\n            var expandedTakes = expandedPaths.map(function() {\r\n                return reload ? options.pageSize : 0\r\n            });\r\n            var skips = [];\r\n            var takes = [];\r\n            if (!reload) {\r\n                if (\"row\" === area) {\r\n                    this._calculatePagingForRowExpandedPaths(options, skips, takes, expandedSkips, expandedTakes)\r\n                } else {\r\n                    this._calculatePagingForColumnExpandedPaths(options, skips, takes, expandedSkips, expandedTakes)\r\n                }\r\n            }\r\n            this._savePagingForExpandedPaths(options, area, storeLoadOptions, skips[0], takes[0], expandedSkips, expandedTakes)\r\n        },\r\n        _savePagingForExpandedPaths: function(options, area, storeLoadOptions, skip, take, expandedSkips, expandedTakes) {\r\n            var expandedPaths = options[area + \"ExpandedPaths\"];\r\n            options[area + \"ExpandedPaths\"] = [];\r\n            options[area + \"Skip\"] = void 0 !== skip ? skip : options[area + \"Skip\"];\r\n            options[area + \"Take\"] = void 0 !== take ? take : options[area + \"Take\"];\r\n            for (var i = 0; i < expandedPaths.length; i++) {\r\n                if (expandedTakes[i]) {\r\n                    var _extend;\r\n                    var isOppositeArea = options.area && options.area !== area;\r\n                    storeLoadOptions.push((0, _extend2.extend)({\r\n                        area: area,\r\n                        headerName: area + \"s\"\r\n                    }, options, (_extend = {}, _defineProperty(_extend, area + \"Skip\", expandedSkips[i]), _defineProperty(_extend, area + \"Take\", expandedTakes[i]), _defineProperty(_extend, isOppositeArea ? \"oppositePath\" : \"path\", expandedPaths[i]), _extend)))\r\n                }\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions: function(storeLoadOptions, reload) {\r\n            var _this = this;\r\n            var options = storeLoadOptions[0];\r\n            var rowsScrollController = this._rowsScrollController;\r\n            if (this._dataSource.paginate() && rowsScrollController) {\r\n                var rowPageSize = rowsScrollController._dataSource.pageSize();\r\n                if (\"rows\" === options.headerName) {\r\n                    options.rowSkip = 0;\r\n                    options.rowTake = rowPageSize;\r\n                    options.rowExpandedPaths = []\r\n                } else {\r\n                    options.rowSkip = rowsScrollController.beginPageIndex() * rowPageSize;\r\n                    options.rowTake = (rowsScrollController.endPageIndex() - rowsScrollController.beginPageIndex() + 1) * rowPageSize;\r\n                    this._processPagingForExpandedPaths(options, \"row\", storeLoadOptions, reload)\r\n                }\r\n            }\r\n            var columnsScrollController = this._columnsScrollController;\r\n            if (this._dataSource.paginate() && columnsScrollController) {\r\n                var columnPageSize = columnsScrollController._dataSource.pageSize();\r\n                storeLoadOptions.forEach(function(options, index) {\r\n                    if (\"columns\" === options.headerName) {\r\n                        options.columnSkip = 0;\r\n                        options.columnTake = columnPageSize;\r\n                        options.columnExpandedPaths = []\r\n                    } else {\r\n                        options.columnSkip = columnsScrollController.beginPageIndex() * columnPageSize;\r\n                        options.columnTake = (columnsScrollController.endPageIndex() - columnsScrollController.beginPageIndex() + 1) * columnPageSize;\r\n                        _this._processPagingForExpandedPaths(options, \"column\", storeLoadOptions, reload)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        load: function() {\r\n            var that = this;\r\n            var stateStoringController = this._stateStoringController;\r\n            if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                stateStoringController.load().always(function(state) {\r\n                    if (state) {\r\n                        that._dataSource.state(state)\r\n                    } else {\r\n                        that._dataSource.load()\r\n                    }\r\n                })\r\n            } else {\r\n                that._dataSource.load()\r\n            }\r\n        },\r\n        calculateVirtualContentParams: function(contentParams) {\r\n            var that = this;\r\n            var rowsScrollController = that._rowsScrollController;\r\n            var columnsScrollController = that._columnsScrollController;\r\n            if (rowsScrollController && columnsScrollController) {\r\n                rowsScrollController.viewportItemSize(contentParams.virtualRowHeight);\r\n                rowsScrollController.viewportSize(contentParams.viewportHeight / rowsScrollController.viewportItemSize());\r\n                rowsScrollController.setContentSize(contentParams.itemHeights);\r\n                columnsScrollController.viewportItemSize(contentParams.virtualColumnWidth);\r\n                columnsScrollController.viewportSize(contentParams.viewportWidth / columnsScrollController.viewportItemSize());\r\n                columnsScrollController.setContentSize(contentParams.itemWidths);\r\n                (0, _common.deferUpdate)(function() {\r\n                    columnsScrollController.loadIfNeed();\r\n                    rowsScrollController.loadIfNeed()\r\n                });\r\n                that.scrollChanged.fire({\r\n                    left: columnsScrollController.getViewportPosition(),\r\n                    top: rowsScrollController.getViewportPosition()\r\n                });\r\n                return {\r\n                    contentTop: rowsScrollController.getContentOffset(),\r\n                    contentLeft: columnsScrollController.getContentOffset(),\r\n                    width: columnsScrollController.getVirtualContentSize(),\r\n                    height: rowsScrollController.getVirtualContentSize()\r\n                }\r\n            }\r\n        },\r\n        setViewportPosition: function(left, top) {\r\n            this._rowsScrollController.setViewportPosition(top || 0);\r\n            this._columnsScrollController.setViewportPosition(left || 0)\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._rowsScrollController && this._rowsScrollController.subscribeToWindowScrollEvents($element)\r\n        },\r\n        updateWindowScrollPosition: function(position) {\r\n            this._rowsScrollController && this._rowsScrollController.scrollTo(position)\r\n        },\r\n        updateViewOptions: function(options) {\r\n            (0, _extend2.extend)(this._options, options);\r\n            this._update()\r\n        },\r\n        _handleExpandValueChanging: function(e) {\r\n            this.expandValueChanging.fire(e)\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleProgressChanged: function(progress) {\r\n            this.progressChanged.fire(progress)\r\n        },\r\n        _handleFieldsPrepared: function(e) {\r\n            this._options.onFieldsPrepared && this._options.onFieldsPrepared(e)\r\n        },\r\n        _createDataSource: function(options) {\r\n            var that = this;\r\n            var dataSourceOptions = options.dataSource;\r\n            var dataSource;\r\n            that._isSharedDataSource = dataSourceOptions instanceof _data_source.default;\r\n            if (that._isSharedDataSource) {\r\n                dataSource = dataSourceOptions\r\n            } else {\r\n                dataSource = new _data_source.default(dataSourceOptions)\r\n            }\r\n            that._expandValueChangingHandler = that._handleExpandValueChanging.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._fieldsPreparedHandler = that._handleFieldsPrepared.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._changedHandler = function() {\r\n                that._update();\r\n                that.dataSourceChanged.fire()\r\n            };\r\n            that._progressChangedHandler = function(progress) {\r\n                that._handleProgressChanged(.8 * progress)\r\n            };\r\n            dataSource.on(\"changed\", that._changedHandler);\r\n            dataSource.on(\"expandValueChanging\", that._expandValueChangingHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"progressChanged\", that._progressChangedHandler);\r\n            dataSource.on(\"fieldsPrepared\", that._fieldsPreparedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            return dataSource\r\n        },\r\n        getDataSource: function() {\r\n            return this._dataSource\r\n        },\r\n        isLoading: function() {\r\n            return this._dataSource.isLoading()\r\n        },\r\n        beginLoading: function() {\r\n            this._dataSource.beginLoading()\r\n        },\r\n        endLoading: function() {\r\n            this._dataSource.endLoading()\r\n        },\r\n        _update: function() {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var options = that._options;\r\n            var columnFields = dataSource.getAreaFields(\"column\");\r\n            var rowFields = dataSource.getAreaFields(\"row\");\r\n            var dataFields = dataSource.getAreaFields(\"data\");\r\n            var dataFieldsForRows = \"row\" === options.dataFieldArea ? dataFields : [];\r\n            var dataFieldsForColumns = \"row\" !== options.dataFieldArea ? dataFields : [];\r\n            var data = dataSource.getData();\r\n            var hiddenTotals = getHiddenTotals(dataFields);\r\n            var hiddenValues = getHiddenValues(dataFields);\r\n            var hiddenGrandTotals = getHiddenGrandTotalsTotals(dataFields, columnFields);\r\n            var grandTotalsAreHiddenForNotAllDataFields = dataFields.length > 0 ? hiddenGrandTotals.length !== dataFields.length : true;\r\n            var rowOptions = {\r\n                isEmptyGrandTotal: data.isEmptyGrandTotalRow,\r\n                texts: options.texts || {},\r\n                hiddenTotals: hiddenTotals,\r\n                hiddenValues: hiddenValues,\r\n                hiddenGrandTotals: [],\r\n                showTotals: options.showRowTotals,\r\n                showGrandTotals: false !== options.showRowGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\r\n                sortBySummaryPaths: createSortPaths(columnFields, dataFields),\r\n                showTotalsPrior: \"rows\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\r\n                showEmpty: !options.hideEmptySummaryCells,\r\n                layout: options.rowHeaderLayout,\r\n                fields: rowFields,\r\n                dataFields: dataFields,\r\n                progress: 0\r\n            };\r\n            var columnOptions = {\r\n                isEmptyGrandTotal: data.isEmptyGrandTotalColumn,\r\n                texts: options.texts || {},\r\n                hiddenTotals: hiddenTotals,\r\n                hiddenValues: hiddenValues,\r\n                hiddenGrandTotals: hiddenGrandTotals,\r\n                showTotals: options.showColumnTotals,\r\n                showTotalsPrior: \"columns\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\r\n                showGrandTotals: false !== options.showColumnGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\r\n                sortBySummaryPaths: createSortPaths(rowFields, dataFields),\r\n                showEmpty: !options.hideEmptySummaryCells,\r\n                fields: columnFields,\r\n                dataFields: dataFields,\r\n                progress: 0\r\n            };\r\n            var notifyProgress = function(progress) {\r\n                this.progress = progress;\r\n                that._handleProgressChanged(.8 + .1 * rowOptions.progress + .1 * columnOptions.progress)\r\n            };\r\n            rowOptions.notifyProgress = notifyProgress;\r\n            columnOptions.notifyProgress = notifyProgress;\r\n            if (!(0, _type.isDefined)(data.grandTotalRowIndex)) {\r\n                data.grandTotalRowIndex = getHeaderIndexedItems(data.rows, rowOptions).length\r\n            }\r\n            if (!(0, _type.isDefined)(data.grandTotalColumnIndex)) {\r\n                data.grandTotalColumnIndex = getHeaderIndexedItems(data.columns, columnOptions).length\r\n            }\r\n            dataSource._changeLoadingCount(1);\r\n            (0, _deferred.when)(createHeaderInfo(data.columns, columnFields, dataFieldsForColumns, true, columnOptions), createHeaderInfo(data.rows, rowFields, dataFieldsForRows, false, rowOptions)).always(function() {\r\n                dataSource._changeLoadingCount(-1)\r\n            }).done(function(columnsInfo, rowsInfo) {\r\n                that._columnsInfo = columnsInfo;\r\n                that._rowsInfo = rowsInfo;\r\n                if (that._rowsScrollController && that._columnsScrollController && that.changed && !that._dataSource.paginate()) {\r\n                    that._rowsScrollController.reset();\r\n                    that._columnsScrollController.reset();\r\n                    that._lockChanged = true;\r\n                    that._rowsScrollController.load();\r\n                    that._columnsScrollController.load();\r\n                    that._lockChanged = false\r\n                }\r\n            }).done(function() {\r\n                that._fireChanged();\r\n                if (that._stateStoringController.isEnabled() && !that._dataSource.isLoading()) {\r\n                    that._stateStoringController.state(that._dataSource.state());\r\n                    that._stateStoringController.save()\r\n                }\r\n            })\r\n        },\r\n        getRowsInfo: function(getAllData) {\r\n            var that = this;\r\n            var rowsInfo = that._rowsInfo;\r\n            var scrollController = that._rowsScrollController;\r\n            var rowspan;\r\n            var i;\r\n            if (scrollController && !getAllData) {\r\n                var startIndex = scrollController.beginPageIndex() * that.rowPageSize();\r\n                var endIndex = scrollController.endPageIndex() * that.rowPageSize() + that.rowPageSize();\r\n                var newRowsInfo = [];\r\n                var maxDepth = 1;\r\n                foreachRowInfo(rowsInfo, function(rowInfo, visibleIndex, rowIndex, _, columnIndex) {\r\n                    var isVisible = visibleIndex >= startIndex && rowIndex < endIndex;\r\n                    var index = rowIndex < startIndex ? 0 : rowIndex - startIndex;\r\n                    var cell = rowInfo;\r\n                    if (isVisible) {\r\n                        newRowsInfo[index] = newRowsInfo[index] || [];\r\n                        rowspan = rowIndex < startIndex ? rowInfo.rowspan - (startIndex - rowIndex) || 1 : rowInfo.rowspan;\r\n                        if (startIndex + index + rowspan > endIndex) {\r\n                            rowspan = endIndex - (index + startIndex) || 1\r\n                        }\r\n                        if (rowspan !== rowInfo.rowspan) {\r\n                            cell = (0, _extend2.extend)({}, cell, {\r\n                                rowspan: rowspan\r\n                            })\r\n                        }\r\n                        newRowsInfo[index].push(cell);\r\n                        maxDepth = math.max(maxDepth, columnIndex + 1)\r\n                    } else {\r\n                        if (i > endIndex) {\r\n                            return false\r\n                        }\r\n                    }\r\n                });\r\n                foreachRowInfo(newRowsInfo, function(rowInfo, visibleIndex, rowIndex, columnIndex, realColumnIndex) {\r\n                    var colspan = rowInfo.colspan || 1;\r\n                    if (realColumnIndex + colspan > maxDepth) {\r\n                        newRowsInfo[rowIndex][columnIndex] = (0, _extend2.extend)({}, rowInfo, {\r\n                            colspan: maxDepth - realColumnIndex || 1\r\n                        })\r\n                    }\r\n                });\r\n                return newRowsInfo\r\n            }\r\n            return rowsInfo\r\n        },\r\n        getColumnsInfo: function(getAllData) {\r\n            var that = this;\r\n            var info = that._columnsInfo;\r\n            var scrollController = that._columnsScrollController;\r\n            if (scrollController && !getAllData) {\r\n                var startIndex = scrollController.beginPageIndex() * that.columnPageSize();\r\n                var endIndex = scrollController.endPageIndex() * that.columnPageSize() + that.columnPageSize();\r\n                info = (0, _uiGrid_core2.createColumnsInfo)(info, startIndex, endIndex)\r\n            }\r\n            return info\r\n        },\r\n        totalRowCount: function() {\r\n            return this._rowsInfo.length\r\n        },\r\n        rowPageIndex: function(index) {\r\n            if (void 0 !== index) {\r\n                this._rowPageIndex = index\r\n            }\r\n            return this._rowPageIndex || 0\r\n        },\r\n        totalColumnCount: function() {\r\n            var count = 0;\r\n            if (this._columnsInfo && this._columnsInfo.length) {\r\n                for (var i = 0; i < this._columnsInfo[0].length; i++) {\r\n                    count += this._columnsInfo[0][i].colspan || 1\r\n                }\r\n            }\r\n            return count\r\n        },\r\n        rowPageSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._rowPageSize = size\r\n            }\r\n            return this._rowPageSize || 20\r\n        },\r\n        columnPageSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._columnPageSize = size\r\n            }\r\n            return this._columnPageSize || 20\r\n        },\r\n        columnPageIndex: function(index) {\r\n            if (void 0 !== index) {\r\n                this._columnPageIndex = index\r\n            }\r\n            return this._columnPageIndex || 0\r\n        },\r\n        getCellsInfo: function(getAllData) {\r\n            var rowsInfo = this.getRowsInfo(getAllData);\r\n            var columnsInfo = this.getColumnsInfo(getAllData);\r\n            var data = this._dataSource.getData();\r\n            var texts = this._options.texts || {};\r\n            return createCellsInfo(rowsInfo, columnsInfo, data, this._dataSource.getAreaFields(\"data\"), this._options.dataFieldArea, texts.dataNotAvailable)\r\n        },\r\n        dispose: function() {\r\n            var that = this;\r\n            if (that._isSharedDataSource) {\r\n                that._dataSource.off(\"changed\", that._changedHandler);\r\n                that._dataSource.off(\"expandValueChanging\", that._expandValueChangingHandler);\r\n                that._dataSource.off(\"loadingChanged\", that._loadingChangedHandler);\r\n                that._dataSource.off(\"progressChanged\", that._progressChangedHandler);\r\n                that._dataSource.off(\"fieldsPrepared\", that._fieldsPreparedHandler);\r\n                that._dataSource.off(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler)\r\n            } else {\r\n                that._dataSource.dispose()\r\n            }\r\n            that._columnsScrollController && that._columnsScrollController.dispose();\r\n            that._rowsScrollController && that._rowsScrollController.dispose();\r\n            that._stateStoringController.dispose();\r\n            that.expandValueChanging.empty();\r\n            that.changed.empty();\r\n            that.loadingChanged.empty();\r\n            that.progressChanged.empty();\r\n            that.scrollChanged.empty();\r\n            that.dataSourceChanged.empty()\r\n        }\r\n    };\r\n    proxyMethod(members, \"applyPartialDataSource\");\r\n    proxyMethod(members, \"collapseHeaderItem\");\r\n    proxyMethod(members, \"expandHeaderItem\");\r\n    proxyMethod(members, \"getData\");\r\n    proxyMethod(members, \"isEmpty\");\r\n    return members\r\n}());\r\nexports.DataController = DataController;\r\n"]},"metadata":{},"sourceType":"script"}