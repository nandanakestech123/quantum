{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Dashboard\\\\Statistic\\\\AdminStats\\\\AdminReport\\\\CustomerByCountry\\\\index.js\";\nimport React from 'react';\nimport { NormalDate } from 'component/common';\nimport CountryChart from './CountryChart';\nimport './style.scss';\nexport class CustomerByCountry extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        date: ''\n      } // status : {\n      //     labels: ['Singappore', 'Malaysia', 'East Malaysia', ' Brunei', 'Vietnam', 'Indonesia'],\n      //     datasets: [\n      //         {\n      //             label: 'New Users',\n      //             backgroundColor: '#FF0000',\n      //             borderColor: '',\n      //             borderWidth: 0.5,\n      //             data: [10,5,15,3,10,12]\n      //         },\n      //     ]\n      // }\n\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.chartOptions = {\n      chart: {\n        type: 'column'\n      },\n      // title: {\n      //     text: 'World\\'s largest cities per 2017'\n      // },\n      // subtitle: {\n      //     text: 'Source: <a href=\"http://en.wikipedia.org/wiki/List_of_cities_proper_by_population\">Wikipedia</a>'\n      // },\n      xAxis: {\n        type: 'category',\n        labels: {\n          rotation: -90,\n          style: {\n            fontSize: '13px',\n            fontFamily: 'Verdana, sans-serif'\n          }\n        }\n      },\n      // yAxis: {\n      //     min: 0,\n      //     title: {\n      //         text: 'Population (millions)'\n      //     }\n      // },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        pointFormat: 'Population in 2017: <b>{point.y:.1f} millions</b>'\n      },\n      series: [{\n        name: 'Population',\n        data: [['Singapore', 53], ['Malaysia', 71], ['East Malaysia', 38], ['Brunei', 66], ['Vietnam', 88], ['Indonesia', 50]],\n        dataLabels: {\n          enabled: true,\n          rotation: 0,\n          color: '$white',\n          align: 'right',\n          // format: '{point.y:.1f}', // one decimal\n          y: 25,\n          // 10 pixels down from the top\n          style: {\n            fontSize: '13px',\n            fontFamily: 'Verdana, sans-serif'\n          }\n        }\n      }]\n    };\n  }\n\n  render() {\n    let {\n      formFields\n    } = this.state;\n    let {\n      date\n    } = formFields;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"team-label my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Customer Statistic\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-month-stats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, \"Customers by Country\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalDate, {\n      value: date,\n      name: \"date\",\n      type: \"date\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CountryChart, {\n      options: this.chartOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Dashboard/Statistic/AdminStats/AdminReport/CustomerByCountry/index.js"],"names":["React","NormalDate","CountryChart","CustomerByCountry","Component","state","formFields","date","handleChange","target","value","name","Object","assign","setState","chartOptions","chart","type","xAxis","labels","rotation","style","fontSize","fontFamily","legend","enabled","tooltip","pointFormat","series","data","dataLabels","color","align","y","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,cAAP;AACA,OAAO,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAAA;AAAA;AAAA,SACnDC,KADmD,GAC7C;AACFC,MAAAA,UAAU,EAAE;AACRC,QAAAA,IAAI,EAAE;AADE,OADV,CAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAhBE,KAD6C;;AAAA,SAmBnDC,YAnBmD,GAmBpC,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAV,KAAD,KAAiC;AAC5C,UAAIL,UAAU,GAAGM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKR,KAAL,CAAWC,UAA7B,CAAjB;AAEAA,MAAAA,UAAU,CAACK,IAAD,CAAV,GAAmBD,KAAnB;AAEA,WAAKI,QAAL,CAAc;AACVR,QAAAA;AADU,OAAd;AAGH,KA3BkD;;AAAA,SA4BnDS,YA5BmD,GA4BrC;AACVC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE;AADH,OADG;AAIV;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,KAAK,EAAE;AACHD,QAAAA,IAAI,EAAE,UADH;AAEHE,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAE,CAAC,EADP;AAEJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,QAAQ,EAAE,MADP;AAEHC,YAAAA,UAAU,EAAE;AAFT;AAFH;AAFL,OAVG;AAoBV;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OA1BE;AA6BVC,MAAAA,OAAO,EAAE;AACLC,QAAAA,WAAW,EAAE;AADR,OA7BC;AAgCVC,MAAAA,MAAM,EAAE,CAAC;AACLjB,QAAAA,IAAI,EAAE,YADD;AAELkB,QAAAA,IAAI,EAAE,CACF,CAAC,WAAD,EAAc,EAAd,CADE,EAEF,CAAC,UAAD,EAAa,EAAb,CAFE,EAGF,CAAC,eAAD,EAAkB,EAAlB,CAHE,EAIF,CAAC,QAAD,EAAW,EAAX,CAJE,EAKF,CAAC,SAAD,EAAY,EAAZ,CALE,EAMF,CAAC,WAAD,EAAc,EAAd,CANE,CAFD;AAULC,QAAAA,UAAU,EAAE;AACRL,UAAAA,OAAO,EAAE,IADD;AAERL,UAAAA,QAAQ,EAAE,CAFF;AAGRW,UAAAA,KAAK,EAAE,QAHC;AAIRC,UAAAA,KAAK,EAAE,OAJC;AAKR;AACAC,UAAAA,CAAC,EAAE,EANK;AAMD;AACPZ,UAAAA,KAAK,EAAE;AACHC,YAAAA,QAAQ,EAAE,MADP;AAEHC,YAAAA,UAAU,EAAE;AAFT;AAPC;AAVP,OAAD;AAhCE,KA5BqC;AAAA;;AAoFnDW,EAAAA,MAAM,GAAG;AACL,QAAI;AAAC5B,MAAAA;AAAD,QAAc,KAAKD,KAAvB;AACA,QAAI;AAACE,MAAAA;AAAD,QAAOD,UAAX;AACA,wBACI,uDACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAEC,IADX;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,QAAQ,EAAE,KAAKC,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,YAAD;AAAe,MAAA,OAAO,EAAE,KAAKO,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAdJ,CADJ,CAFJ,CADJ;AA2BH;;AAlHkD","sourcesContent":["import React from 'react';\r\nimport { NormalDate } from 'component/common';\r\nimport CountryChart from './CountryChart'\r\nimport './style.scss'\r\nexport class CustomerByCountry extends React.Component {\r\n    state={\r\n        formFields: {\r\n            date: '',\r\n        },\r\n        // status : {\r\n        //     labels: ['Singappore', 'Malaysia', 'East Malaysia', ' Brunei', 'Vietnam', 'Indonesia'],\r\n        //     datasets: [\r\n        //         {\r\n        //             label: 'New Users',\r\n        //             backgroundColor: '#FF0000',\r\n        //             borderColor: '',\r\n        //             borderWidth: 0.5,\r\n        //             data: [10,5,15,3,10,12]\r\n        //         },\r\n               \r\n        //     ]\r\n        // }\r\n    }\r\n    handleChange = ({ target: { value, name } }) => {\r\n        let formFields = Object.assign({}, this.state.formFields);\r\n\r\n        formFields[name] = value;\r\n\r\n        this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n    chartOptions= {\r\n        chart: {\r\n            type: 'column'\r\n        },\r\n        // title: {\r\n        //     text: 'World\\'s largest cities per 2017'\r\n        // },\r\n        // subtitle: {\r\n        //     text: 'Source: <a href=\"http://en.wikipedia.org/wiki/List_of_cities_proper_by_population\">Wikipedia</a>'\r\n        // },\r\n        xAxis: {\r\n            type: 'category',\r\n            labels: {\r\n                rotation: -90,\r\n                style: {\r\n                    fontSize: '13px',\r\n                    fontFamily: 'Verdana, sans-serif'\r\n                }\r\n            }\r\n        },\r\n        // yAxis: {\r\n        //     min: 0,\r\n        //     title: {\r\n        //         text: 'Population (millions)'\r\n        //     }\r\n        // },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        tooltip: {\r\n            pointFormat: 'Population in 2017: <b>{point.y:.1f} millions</b>'\r\n        },\r\n        series: [{\r\n            name: 'Population',\r\n            data: [\r\n                ['Singapore', 53],\r\n                ['Malaysia', 71],\r\n                ['East Malaysia', 38],\r\n                ['Brunei', 66],\r\n                ['Vietnam', 88],\r\n                ['Indonesia', 50]\r\n            ],\r\n            dataLabels: {\r\n                enabled: true,\r\n                rotation: 0,\r\n                color: '$white',\r\n                align: 'right',\r\n                // format: '{point.y:.1f}', // one decimal\r\n                y: 25, // 10 pixels down from the top\r\n                style: {\r\n                    fontSize: '13px',\r\n                    fontFamily: 'Verdana, sans-serif'\r\n                }\r\n            }\r\n        }]\r\n    };\r\n    render() {\r\n        let {formFields} =this.state\r\n        let {date}=formFields\r\n        return (\r\n            <>\r\n                <h3 className=\"team-label my-4\">Customer Statistic</h3>\r\n                <div className=\"customer-month-stats\">\r\n                    <div className=\"card\">\r\n                        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <div className=\"label\">\r\n                                <p>Customers by Country</p>\r\n                            </div>\r\n                            <div className=\" date\">\r\n                                <NormalDate\r\n                                    value={date}\r\n                                    name=\"date\"\r\n                                    type=\"date\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            {/* <BarChart data={this.state.status}/> */}\r\n                            <CountryChart  options={this.chartOptions} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}