{"ast":null,"code":"import _objectSpread from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{PaymentActionType}from\"redux/actions/actionType\";import{payment}from\"../../service/apiVariables\";// create payment action\nexport var createPayment=function createPayment(id,body){return function(dispatch,getState,_ref){var api=_ref.api,Toast=_ref.Toast;return new Promise(function(resolve,reject){payment.addPayment.addQuery={key:\"id\",payload:id};api(_objectSpread(_objectSpread({},payment.addPayment),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200||status===201){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\n// Toast({ type: 'success', message })\n}else{reject(Toast({type:\"error\",message:message}));}}).catch(function(_ref2){var message=_ref2.message;reject(Toast({type:\"error\",message:message}));});});};};// update payment action\nexport var updatePayment=function updatePayment(id,body){return function(dispatch,getState,_ref3){var api=_ref3.api,Toast=_ref3.Toast;return new Promise(function(resolve,reject){payment.updatePayment.addQuery={key:\"id\",payload:id};api(_objectSpread(_objectSpread({},payment.updatePayment),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200||status===201){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\n// Toast({ type: 'success', message })\n}else{reject(Toast({type:\"error\",message:message}));}}).catch(function(_ref4){var message=_ref4.message;reject(Toast({type:\"error\",message:message}));});});};};// delete payment action\nexport var deletePayment=function deletePayment(id,body){return function(dispatch,getState,_ref5){var api=_ref5.api,Toast=_ref5.Toast;return new Promise(function(resolve,reject){payment.deletePayment.addQuery={key:\"id\",payload:id};api(_objectSpread(_objectSpread({},payment.deletePayment),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;console.log(\"sadfadfgadfgdf\",response);if(status===200||status===201){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\n//Toast({ type: \"success\", message });\n}else{reject(Toast({type:\"error\",message:message}));}}).catch(function(error){console.log(\"sadfadfgadfgdf errorr\",error);reject(error);var message=error.message;Toast({type:\"error\",message:message});});});};};// get payment action\nexport var getPayment=function getPayment(id){return function(dispatch,getState,_ref6){var api=_ref6.api,Toast=_ref6.Toast;return new Promise(function(resolve,reject){payment.getPayment.addQuery={key:\"id\",payload:id};api(_objectSpread({},payment.getPayment)).then(function(response){resolve(response);var message=response.message,status=response.status,data=response.data;if(status===200||status===201){dispatch({type:PaymentActionType.getPaymentDetail,payload:data});//Toast({ type: \"success\", message });\n}else{reject(Toast({type:\"error\",message:message}));}}).catch(function(_ref7){var message=_ref7.message;reject(Toast({type:\"error\",message:message}));});});};};","map":{"version":3,"sources":["F:/webfe/src/redux/actions/payment.js"],"names":["PaymentActionType","payment","createPayment","id","body","dispatch","getState","api","Toast","Promise","resolve","reject","addPayment","addQuery","key","payload","then","response","message","status","type","catch","updatePayment","deletePayment","console","log","error","getPayment","data","getPaymentDetail"],"mappings":"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","sourcesContent":["import { PaymentActionType } from \"redux/actions/actionType\";\r\nimport { payment } from \"../../service/apiVariables\";\r\n\r\n// create payment action\r\nexport const createPayment =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      payment.addPayment.addQuery = { key: \"id\", payload: id };\r\n      api({ ...payment.addPayment, body })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status } = response;\r\n          if (status === 200 || status === 201) {\r\n            // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n            // Toast({ type: 'success', message })\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n// update payment action\r\nexport const updatePayment =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      payment.updatePayment.addQuery = { key: \"id\", payload: id };\r\n      api({ ...payment.updatePayment, body })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status } = response;\r\n          if (status === 200 || status === 201) {\r\n            // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n            // Toast({ type: 'success', message })\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n// delete payment action\r\nexport const deletePayment =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      payment.deletePayment.addQuery = { key: \"id\", payload: id };\r\n      api({ ...payment.deletePayment, body })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status } = response;\r\n          console.log(\"sadfadfgadfgdf\", response);\r\n          if (status === 200 || status === 201) {\r\n            // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n            //Toast({ type: \"success\", message });\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(\"sadfadfgadfgdf errorr\", error);\r\n          reject(error);\r\n          let { message } = error;\r\n          Toast({ type: \"error\", message });\r\n        });\r\n    });\r\n  };\r\n\r\n// get payment action\r\nexport const getPayment =\r\n  id =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      payment.getPayment.addQuery = { key: \"id\", payload: id };\r\n      api({ ...payment.getPayment })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status, data } = response;\r\n          if (status === 200 || status === 201) {\r\n            dispatch({\r\n              type: PaymentActionType.getPaymentDetail,\r\n              payload: data,\r\n            });\r\n            //Toast({ type: \"success\", message });\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}