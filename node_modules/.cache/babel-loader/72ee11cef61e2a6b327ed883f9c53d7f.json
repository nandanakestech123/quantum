{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Cart\\\\CombineTopup\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper, NormalCheckbox } from \"component/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\";\nimport { withTranslation } from \"react-i18next\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { Toast } from \"service/toast\";\nexport class CombineTopupClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      treatmentList: [],\n      formFields: {\n        customer_name: \"\",\n        new_outstanding: \"\",\n        old_outstanding: \"\",\n        topup_amount: \"\"\n      },\n      headerDetails: [{\n        label: \"Date\",\n        sortKey: false,\n        width: \"120px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Invoice No\",\n        sortKey: false,\n        width: \"120px\"\n      }, {\n        label: \"Treatment Name\",\n        sortKey: false,\n        width: \"120px\"\n      }, {\n        label: \"Qty\",\n        sortKey: false,\n        width: \"50px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Total Amount\",\n        width: \"120px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Deposit Balance\",\n        sortKey: false,\n        width: \"100px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Outstanding\",\n        sortKey: false,\n        width: \"100px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Pay amount\",\n        width: \"60px\",\n        divClass: \"justify-content-center\"\n      }, {\n        label: \"Staff\",\n        width: \"120px\"\n      }],\n      headerDetailsAuto: [{\n        label: \"Date\",\n        sortKey: false,\n        width: \"120px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Invoice No\",\n        sortKey: false,\n        width: \"120px\"\n      }, {\n        label: \"Treatment Name\",\n        sortKey: false,\n        width: \"120px\"\n      }, {\n        label: \"Qty\",\n        sortKey: false,\n        width: \"50px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Total Amount\",\n        width: \"120px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Deposit Balance\",\n        sortKey: false,\n        width: \"100px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Outstanding\",\n        sortKey: false,\n        width: \"100px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Pay amount\",\n        width: \"60px\",\n        divClass: \"justify-content-center\"\n      }, {\n        label: \"Auto\",\n        width: \"50px\",\n        divClass: `justify-content-center`\n      }, {\n        label: \"Staff\",\n        width: \"120px\"\n      }],\n      typeofSelection: {\n        service: true,\n        product: true,\n        prepaid: true\n      },\n      is_fullpay: false,\n      is_auto: false,\n      page: 1,\n      limit: 10,\n      pageMeta: {},\n      settingData: {}\n    };\n\n    this.componentWillMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n    };\n\n    this.handleItemSettings = () => {\n      let {\n        settingData\n      } = this.state;\n      this.props.getCommonApi(`userlist/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(key, \"settingsData appointmentCreate\");\n\n        if (status === 200) {\n          settingData = data;\n          this.setState({\n            settingData\n          });\n        }\n      });\n    };\n\n    this.getCart = () => {\n      let {\n        typeofSelection,\n        treatmentList,\n        pageMeta,\n        is_auto,\n        is_fullpay\n      } = this.state;\n\n      try {\n        let dataType = [];\n\n        if (typeofSelection.service) {\n          dataType.push(\"service\");\n        }\n\n        if (typeofSelection.prepaid) {\n          dataType.push(\"prepaid\");\n        }\n\n        if (typeofSelection.product) {\n          dataType.push(\"product\");\n        }\n\n        this.props.getCommonApi(`topupcombinedlist/?cust_id=${this.props.id}&type=${dataType}`).then(async key => {\n          let {\n            status,\n            data\n          } = key;\n\n          if (status === 200) {\n            treatmentList = [];\n            await this.setState({\n              treatmentList\n            });\n            this.getDataFromRes(key);\n\n            if (data) {\n              if (data.dataList) {\n                data.dataList.forEach(item => {\n                  let itemData = item;\n                  itemData[\"Autokey\"] = false;\n                  treatmentList.push(itemData);\n                });\n                pageMeta = data.meta.pagination;\n                is_auto = false;\n                is_fullpay = false;\n                this.setState({\n                  treatmentList,\n                  pageMeta,\n                  is_auto,\n                  is_fullpay\n                });\n              }\n            }\n          }\n        });\n      } catch (e) {\n        console.log(e, \"topupgetcombinelog\");\n      }\n    };\n\n    this.getDataFromRes = data => {\n      let {\n        header_data\n      } = data;\n      let {\n        formFields\n      } = this.state;\n      formFields[\"customer_name\"] = header_data ? header_data.customer_name : \"\";\n      formFields[\"new_outstanding\"] = header_data ? header_data.new_outstanding : \"\";\n      formFields[\"old_outstanding\"] = header_data ? header_data.old_outstanding : \"\";\n      formFields[\"topup_amount\"] = header_data ? header_data.topup_amount : \"\";\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handlePagination = async pageNo => {\n      let {\n        page\n      } = this.state;\n      page = pageNo.page;\n      await this.setState({\n        page\n      });\n      this.getCart();\n    };\n\n    this.handlechangeSelection = async e => {\n      let {\n        typeofSelection\n      } = this.state;\n      typeofSelection[e.target.name] = e.target.value;\n      await this.setState({\n        typeofSelection\n      });\n      this.getCart();\n    };\n\n    this.handleChange = e => {\n      let {\n        formFields\n      } = this.state;\n      formFields[e.target.name] = e.target.value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleTopupChange = async event => {\n      // event.persist();\n      let {\n        formFields\n      } = this.state;\n      formFields.topup_amount = event.target.value;\n      await this.setState({\n        formFields\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          this.search();\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = () => {\n      let {\n        formFields\n      } = this.state;\n      let old_outstand = Number(formFields.old_outstanding);\n      let topup = Number(formFields.topup_amount);\n\n      if (topup <= old_outstand) {\n        formFields[\"new_outstanding\"] = Number(old_outstand - topup).toFixed(2);\n        this.setState({\n          formFields\n        });\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"The topup amount may not be greater than outstanding\"\n        });\n      }\n    };\n\n    this.handlePayAmount = (event, data, index) => {\n      let {\n        treatmentList\n      } = this.state;\n      treatmentList[index][event.target.name] = event.target.value;\n      this.setState({\n        treatmentList\n      });\n    };\n\n    this.handleCommonChange = async e => {\n      let {\n        treatmentList,\n        is_auto\n      } = this.state;\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if ([e.target.name] == \"is_auto\") {\n        treatmentList.forEach(item => {\n          {\n            e.target.value == true ? item[\"Autokey\"] = true : item[\"Autokey\"] = false;\n          }\n        });\n        await this.setState({\n          treatmentList\n        });\n      } else if ([e.target.name] == \"is_fullpay\") {\n        let {\n          formFields\n        } = this.state;\n        let topup = 0;\n\n        if (is_auto) {\n          treatmentList.forEach(item => {\n            if (item.Autokey) {\n              item[\"pay_amount\"] = item.outstanding;\n              topup += Number(item.outstanding);\n            }\n          });\n          await this.setState({\n            treatmentList\n          });\n          formFields[\"topup_amount\"] = Number(topup).toFixed(2);\n          formFields[\"new_outstanding\"] = Number(formFields.old_outstanding - topup).toFixed(2);\n          await this.setState({\n            formFields\n          });\n        } else {\n          treatmentList.forEach(item => {\n            item[\"pay_amount\"] = item.outstanding;\n          });\n          await this.setState({\n            treatmentList\n          });\n          formFields[\"new_outstanding\"] = 0;\n          formFields[\"topup_amount\"] = formFields.old_outstanding;\n          await this.setState({\n            formFields\n          });\n        }\n      }\n    };\n\n    this.ParseFloatUpdate = (str, val) => {\n      str = str.toString();\n      str = str.slice(0, str.indexOf(\".\") + val + 1);\n      return Number(str);\n    };\n\n    this.handleAutoMatch = async () => {\n      let {\n        treatmentList,\n        formFields\n      } = this.state;\n\n      try {\n        if (formFields.topup_amount > 0) {\n          let checkedCount = treatmentList.filter(item => item.Autokey == true).length;\n          let SelectedTotalOutstanding = 0;\n          treatmentList.forEach(item => {\n            if (item.Autokey) {\n              SelectedTotalOutstanding += Number(item.outstanding);\n            }\n          });\n          let recordCount = 0;\n          let UpdatedTotalOutstanding = 0;\n          treatmentList.forEach(item => {\n            if (item.Autokey) {\n              recordCount++;\n\n              if (recordCount == checkedCount) {\n                let otherrowTotal = this.ParseFloatUpdate(UpdatedTotalOutstanding, 2);\n                let linePay = Number(formFields.topup_amount - otherrowTotal);\n                let tot = Number(linePay) + Number(otherrowTotal);\n                let difference = formFields.topup_amount - tot;\n                let final = linePay + difference;\n                item[\"pay_amount\"] = this.ParseFloatUpdate(final, 2);\n              } else {\n                let findPercentage = Number(formFields.topup_amount / SelectedTotalOutstanding) * 100;\n                let linePay = Number(findPercentage) / 100 * item.outstanding;\n                UpdatedTotalOutstanding += this.ParseFloatUpdate(linePay, 2);\n                item[\"pay_amount\"] = this.ParseFloatUpdate(linePay, 2);\n              }\n            }\n          });\n          await this.setState({\n            treatmentList\n          });\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Please enter valid Top up amount\"\n          });\n        }\n      } catch (e) {\n        console.log(e, \"catchlogautomatch\");\n      }\n    };\n\n    this.handleClearAll = async () => {\n      let {\n        formFields,\n        treatmentList\n      } = this.state;\n      formFields[\"topup_amount\"] = 0;\n      formFields[\"new_outstanding\"] = formFields.old_outstanding;\n      await this.setState({\n        is_fullpay: false,\n        formFields\n      });\n      treatmentList.forEach(item => {\n        item[\"pay_amount\"] = 0;\n      });\n      await this.setState({\n        treatmentList\n      });\n    };\n\n    this.handleCreateCart = () => {\n      let {\n        basicApptDetail\n      } = this.props;\n      let {\n        treatmentList\n      } = this.state;\n      let payload = [];\n\n      if (this.validator.allValid()) {\n        for (let key of treatmentList) {\n          if (key.pay_amount > 0) {\n            let obj = {\n              cust_noid: basicApptDetail.custId,\n              cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\n              itemcodeid: key.stock_id,\n              price: key.pay_amount,\n              item_uom: null,\n              treatment_account: key.TreatmentAccountid ? key.TreatmentAccountid : null,\n              deposit_account: key.DepositAccountid ? key.DepositAccountid : null,\n              prepaid_account: key.prepaid_id ? key.prepaid_id : null\n            };\n            payload.push(obj);\n          }\n        }\n\n        this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${basicApptDetail.custId}`).then(res => {\n          if (res.data.length === 0) {\n            this.props.commonCreateApi(\"itemcart/TopUpCartCreate/\", payload).then(res => {\n              // this.props.handleCartCreated()\n              this.props.handleModal();\n            });\n          } else {\n            this.props.commonCreateApi(`itemcart/TopUpCartCreate/?cart_id=${res.cart_id}`, payload).then(res => {\n              this.props.handleModal();\n            });\n          }\n        });\n      } else {\n        this.validator.showMessages();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getCart();\n  }\n\n  render() {\n    let {\n      workpoint = \"\",\n      treatmentList = [],\n      headerDetails,\n      formFields,\n      is_auto,\n      pageMeta,\n      typeofSelection,\n      is_fullpay,\n      settingData,\n      headerDetailsAuto\n    } = this.state;\n    let {\n      customer_name,\n      new_outstanding,\n      old_outstanding,\n      topup_amount\n    } = formFields;\n    let {\n      service,\n      prepaid,\n      product\n    } = typeofSelection;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12 fw-500 fs-18 text-left p-0 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 13\n      }\n    }, \"Top Up\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      submitBtn: true,\n      className: \"confirm\",\n      label: \"Confirm\",\n      onClick: this.handleCreateCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 new-cart top-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }\n    }, t(\"Customer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: customer_name,\n      name: \"customer_name\",\n      onChange: this.handleChange,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }\n    }, t(\"Outstanding\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: old_outstanding,\n      name: \"old_outstanding\",\n      onChange: this.handleTopupChange,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      type: \"checkbox\",\n      onChange: this.handleCommonChange,\n      name: \"is_auto\",\n      checked: is_auto,\n      label: \"Auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }\n    }, t(\"Top Up Amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"number\",\n      value: topup_amount,\n      name: \"topup_amount\",\n      onChange: this.handleTopupChange,\n      className: \"text-right\",\n      max: old_outstanding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 19\n      }\n    }), topup_amount ? this.validator.message(\"topup_amount\", topup_amount, `required|max:${Number(old_outstanding)},num`) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 17\n      }\n    }, t(\"New Outstanding\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"number\",\n      value: new_outstanding,\n      name: \"new_outstanding\",\n      onChange: this.handleChange,\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      type: \"checkbox\",\n      onChange: this.handleCommonChange,\n      name: \"is_fullpay\",\n      checked: is_fullpay,\n      label: \"Full payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      checked: service,\n      label: \"service\",\n      name: \"service\",\n      onChange: this.handlechangeSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      checked: product,\n      label: \"product\",\n      name: \"product\",\n      onChange: this.handlechangeSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      checked: prepaid,\n      label: \"prepaid\",\n      name: \"prepaid\",\n      onChange: this.handlechangeSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `col-12`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: is_auto ? headerDetailsAuto : headerDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 13\n      }\n    }, treatmentList.length > 0 ? treatmentList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 25\n        }\n      }, item.sa_date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 25\n        }\n      }, item.sa_transacno)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 25\n        }\n      }, item.description)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 25\n        }\n      }, item.qty)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 25\n        }\n      }, item.total_amount)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 25\n        }\n      }, item.balance)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 25\n        }\n      }, item.outstanding)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center payment-input justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        value: item.pay_amount,\n        name: \"pay_amount\",\n        onChange: e => this.handlePayAmount(e, item, index),\n        className: `customer-name text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 27\n        }\n      }), item.pay_amount ? this.validator.message(\"pay_amount\", item.pay_amount, `required|max:${Number(item.outstanding)},num`) : \"\")), is_auto ? /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        type: \"checkbox\",\n        onChange: e => this.handlePayAmount(e, item, index),\n        name: \"Autokey\",\n        checked: item.Autokey //disabled={is_auto ? false : true}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 29\n        }\n      }))) : \"\", /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 25\n        }\n      }, item.sa_staffname)));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 21\n      }\n    }, \"No data\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pt-4 action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex  justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      resetbg: true,\n      label: \"Clear All\",\n      className: \"mr-2\",\n      onClick: this.handleClearAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 17\n      }\n    }), is_auto ? /*#__PURE__*/React.createElement(NormalButton, {\n      mainbgrev: true,\n      label: \"Auto Match\" // disabled={is_auto ? false : true}\n      ,\n      onClick: this.handleAutoMatch,\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 19\n      }\n    }) : \"\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonCreateApi,\n    commonPatchApi,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const CombineTopup = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(CombineTopupClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Cart/CombineTopup/index.js"],"names":["React","Component","NormalButton","NormalInput","NormalSelect","InputSearch","NormalModal","TableWrapper","NormalCheckbox","dateFormat","_","connect","bindActionCreators","getCommonApi","updateForm","commonCreateApi","commonDeleteApi","commonPatchApi","withTranslation","SimpleReactValidator","Toast","CombineTopupClass","state","treatmentList","formFields","customer_name","new_outstanding","old_outstanding","topup_amount","headerDetails","label","sortKey","width","divClass","headerDetailsAuto","typeofSelection","service","product","prepaid","is_fullpay","is_auto","page","limit","pageMeta","settingData","componentWillMount","validator","element","message","autoForceUpdate","handleItemSettings","props","then","key","status","data","console","log","setState","getCart","dataType","push","id","getDataFromRes","dataList","forEach","item","itemData","meta","pagination","e","header_data","handlePagination","pageNo","handlechangeSelection","target","name","value","handleChange","handleTopupChange","event","debouncedFn","debounce","search","old_outstand","Number","topup","toFixed","type","handlePayAmount","index","handleCommonChange","Autokey","outstanding","ParseFloatUpdate","str","val","toString","slice","indexOf","handleAutoMatch","checkedCount","filter","length","SelectedTotalOutstanding","recordCount","UpdatedTotalOutstanding","otherrowTotal","linePay","tot","difference","final","findPercentage","handleClearAll","handleCreateCart","basicApptDetail","payload","allValid","pay_amount","obj","cust_noid","custId","cart_date","Date","itemcodeid","stock_id","price","item_uom","treatment_account","TreatmentAccountid","deposit_account","DepositAccountid","prepaid_account","prepaid_id","res","handleModal","cart_id","showMessages","componentDidMount","render","workpoint","t","map","sa_date","sa_transacno","description","qty","total_amount","balance","sa_staffname","mapStateToProps","selected_cstomer","common","appointment","mapDispatchToProps","dispatch","CombineTopup"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalButton,\r\n  NormalInput,\r\n  NormalSelect,\r\n  InputSearch,\r\n  NormalModal,\r\n  TableWrapper,\r\n  NormalCheckbox,\r\n} from \"component/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  updateForm,\r\n  commonCreateApi,\r\n  commonDeleteApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nexport class CombineTopupClass extends Component {\r\n  state = {\r\n    treatmentList: [],\r\n    formFields: {\r\n      customer_name: \"\",\r\n      new_outstanding: \"\",\r\n      old_outstanding: \"\",\r\n      topup_amount: \"\",\r\n    },\r\n    headerDetails: [\r\n      {\r\n        label: \"Date\",\r\n        sortKey: false,\r\n        width: \"120px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Invoice No\", sortKey: false, width: \"120px\" },\r\n      { label: \"Treatment Name\", sortKey: false, width: \"120px\" },\r\n      {\r\n        label: \"Qty\",\r\n        sortKey: false,\r\n        width: \"50px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Total Amount\",\r\n        width: \"120px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Deposit Balance\",\r\n        sortKey: false,\r\n        width: \"100px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Outstanding\",\r\n        sortKey: false,\r\n        width: \"100px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n\r\n      {\r\n        label: \"Pay amount\",\r\n        width: \"60px\",\r\n        divClass: \"justify-content-center\",\r\n      },\r\n      { label: \"Staff\", width: \"120px\" },\r\n    ],\r\n    headerDetailsAuto: [\r\n      {\r\n        label: \"Date\",\r\n        sortKey: false,\r\n        width: \"120px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Invoice No\", sortKey: false, width: \"120px\" },\r\n      { label: \"Treatment Name\", sortKey: false, width: \"120px\" },\r\n      {\r\n        label: \"Qty\",\r\n        sortKey: false,\r\n        width: \"50px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Total Amount\",\r\n        width: \"120px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Deposit Balance\",\r\n        sortKey: false,\r\n        width: \"100px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Outstanding\",\r\n        sortKey: false,\r\n        width: \"100px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n\r\n      {\r\n        label: \"Pay amount\",\r\n        width: \"60px\",\r\n        divClass: \"justify-content-center\",\r\n      },\r\n      {\r\n        label: \"Auto\",\r\n        width: \"50px\",\r\n        divClass: `justify-content-center`,\r\n      },\r\n      { label: \"Staff\", width: \"120px\" },\r\n    ],\r\n    typeofSelection: {\r\n      service: true,\r\n      product: true,\r\n      prepaid: true,\r\n    },\r\n    is_fullpay: false,\r\n    is_auto: false,\r\n    page: 1,\r\n    limit: 10,\r\n    pageMeta: {},\r\n    settingData: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCart();\r\n  }\r\n  componentWillMount = () => {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n  };\r\n\r\n  handleItemSettings = () => {\r\n    let { settingData } = this.state;\r\n    this.props.getCommonApi(`userlist/`).then(key => {\r\n      let { status, data } = key;\r\n      console.log(key, \"settingsData appointmentCreate\");\r\n      if (status === 200) {\r\n        settingData = data;\r\n        this.setState({ settingData });\r\n      }\r\n    });\r\n  };\r\n  getCart = () => {\r\n    let { typeofSelection, treatmentList, pageMeta, is_auto, is_fullpay } =\r\n      this.state;\r\n\r\n    try {\r\n      let dataType = [];\r\n\r\n      if (typeofSelection.service) {\r\n        dataType.push(\"service\");\r\n      }\r\n      if (typeofSelection.prepaid) {\r\n        dataType.push(\"prepaid\");\r\n      }\r\n      if (typeofSelection.product) {\r\n        dataType.push(\"product\");\r\n      }\r\n\r\n      this.props\r\n        .getCommonApi(\r\n          `topupcombinedlist/?cust_id=${this.props.id}&type=${dataType}`\r\n        )\r\n        .then(async key => {\r\n          let { status, data } = key;\r\n\r\n          if (status === 200) {\r\n            treatmentList = [];\r\n            await this.setState({ treatmentList });\r\n            this.getDataFromRes(key);\r\n            if (data) {\r\n              if (data.dataList) {\r\n                data.dataList.forEach(item => {\r\n                  let itemData = item;\r\n                  itemData[\"Autokey\"] = false;\r\n                  treatmentList.push(itemData);\r\n                });\r\n                pageMeta = data.meta.pagination;\r\n                is_auto = false;\r\n                is_fullpay = false;\r\n                this.setState({ treatmentList, pageMeta, is_auto, is_fullpay });\r\n              }\r\n            }\r\n          }\r\n        });\r\n    } catch (e) {\r\n      console.log(e, \"topupgetcombinelog\");\r\n    }\r\n  };\r\n\r\n  getDataFromRes = data => {\r\n    let { header_data } = data;\r\n    let { formFields } = this.state;\r\n    formFields[\"customer_name\"] = header_data ? header_data.customer_name : \"\";\r\n    formFields[\"new_outstanding\"] = header_data\r\n      ? header_data.new_outstanding\r\n      : \"\";\r\n    formFields[\"old_outstanding\"] = header_data\r\n      ? header_data.old_outstanding\r\n      : \"\";\r\n    formFields[\"topup_amount\"] = header_data ? header_data.topup_amount : \"\";\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n  handlePagination = async pageNo => {\r\n    let { page } = this.state;\r\n    page = pageNo.page;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    this.getCart();\r\n  };\r\n  handlechangeSelection = async e => {\r\n    let { typeofSelection } = this.state;\r\n    typeofSelection[e.target.name] = e.target.value;\r\n    await this.setState({\r\n      typeofSelection,\r\n    });\r\n    this.getCart();\r\n  };\r\n\r\n  handleChange = e => {\r\n    let { formFields } = this.state;\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleTopupChange = async event => {\r\n    // event.persist();\r\n    let { formFields } = this.state;\r\n    formFields.topup_amount = event.target.value;\r\n    await this.setState({ formFields });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {\r\n        this.search();\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  search = () => {\r\n    let { formFields } = this.state;\r\n    let old_outstand = Number(formFields.old_outstanding);\r\n    let topup = Number(formFields.topup_amount);\r\n    if (topup <= old_outstand) {\r\n      formFields[\"new_outstanding\"] = Number(old_outstand - topup).toFixed(2);\r\n      this.setState({\r\n        formFields,\r\n      });\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"The topup amount may not be greater than outstanding\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handlePayAmount = (event, data, index) => {\r\n    let { treatmentList } = this.state;\r\n    treatmentList[index][event.target.name] = event.target.value;\r\n    this.setState({\r\n      treatmentList,\r\n    });\r\n  };\r\n\r\n  handleCommonChange = async e => {\r\n    let { treatmentList, is_auto } = this.state;\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    if ([e.target.name] == \"is_auto\") {\r\n      treatmentList.forEach(item => {\r\n        {\r\n          e.target.value == true\r\n            ? (item[\"Autokey\"] = true)\r\n            : (item[\"Autokey\"] = false);\r\n        }\r\n      });\r\n      await this.setState({\r\n        treatmentList,\r\n      });\r\n    } else if ([e.target.name] == \"is_fullpay\") {\r\n      let { formFields } = this.state;\r\n      let topup = 0;\r\n      if (is_auto) {\r\n        treatmentList.forEach(item => {\r\n          if (item.Autokey) {\r\n            item[\"pay_amount\"] = item.outstanding;\r\n            topup += Number(item.outstanding);\r\n          }\r\n        });\r\n        await this.setState({\r\n          treatmentList,\r\n        });\r\n        formFields[\"topup_amount\"] = Number(topup).toFixed(2);\r\n        formFields[\"new_outstanding\"] = Number(\r\n          formFields.old_outstanding - topup\r\n        ).toFixed(2);\r\n        await this.setState({\r\n          formFields,\r\n        });\r\n      } else {\r\n        treatmentList.forEach(item => {\r\n          item[\"pay_amount\"] = item.outstanding;\r\n        });\r\n        await this.setState({\r\n          treatmentList,\r\n        });\r\n        formFields[\"new_outstanding\"] = 0;\r\n        formFields[\"topup_amount\"] = formFields.old_outstanding;\r\n        await this.setState({\r\n          formFields,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  ParseFloatUpdate = (str, val) => {\r\n    str = str.toString();\r\n    str = str.slice(0, str.indexOf(\".\") + val + 1);\r\n    return Number(str);\r\n  };\r\n\r\n  handleAutoMatch = async () => {\r\n    let { treatmentList, formFields } = this.state;\r\n    try {\r\n      if (formFields.topup_amount > 0) {\r\n        let checkedCount = treatmentList.filter(\r\n          item => item.Autokey == true\r\n        ).length;\r\n        let SelectedTotalOutstanding = 0;\r\n\r\n        treatmentList.forEach(item => {\r\n          if (item.Autokey) {\r\n            SelectedTotalOutstanding += Number(item.outstanding);\r\n          }\r\n        });\r\n\r\n        let recordCount = 0;\r\n        let UpdatedTotalOutstanding = 0;\r\n        treatmentList.forEach(item => {\r\n          if (item.Autokey) {\r\n            recordCount++;\r\n            if (recordCount == checkedCount) {\r\n              let otherrowTotal = this.ParseFloatUpdate(\r\n                UpdatedTotalOutstanding,\r\n                2\r\n              );\r\n\r\n              let linePay = Number(formFields.topup_amount - otherrowTotal);\r\n              let tot = Number(linePay) + Number(otherrowTotal);\r\n              let difference = formFields.topup_amount - tot;\r\n              let final = linePay + difference;\r\n              item[\"pay_amount\"] = this.ParseFloatUpdate(final, 2);\r\n            } else {\r\n              let findPercentage =\r\n                Number(formFields.topup_amount / SelectedTotalOutstanding) *\r\n                100;\r\n              let linePay = (Number(findPercentage) / 100) * item.outstanding;\r\n              UpdatedTotalOutstanding += this.ParseFloatUpdate(linePay, 2);\r\n              item[\"pay_amount\"] = this.ParseFloatUpdate(linePay, 2);\r\n            }\r\n          }\r\n        });\r\n        await this.setState({\r\n          treatmentList,\r\n        });\r\n      } else {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Please enter valid Top up amount\",\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e, \"catchlogautomatch\");\r\n    }\r\n  };\r\n  handleClearAll = async () => {\r\n    let { formFields, treatmentList } = this.state;\r\n    formFields[\"topup_amount\"] = 0;\r\n    formFields[\"new_outstanding\"] = formFields.old_outstanding;\r\n    await this.setState({\r\n      is_fullpay: false,\r\n      formFields,\r\n    });\r\n    treatmentList.forEach(item => {\r\n      item[\"pay_amount\"] = 0;\r\n    });\r\n    await this.setState({\r\n      treatmentList,\r\n    });\r\n  };\r\n\r\n  handleCreateCart = () => {\r\n    let { basicApptDetail } = this.props;\r\n    let { treatmentList } = this.state;\r\n    let payload = [];\r\n    if (this.validator.allValid()) {\r\n      for (let key of treatmentList) {\r\n        if (key.pay_amount > 0) {\r\n          let obj = {\r\n            cust_noid: basicApptDetail.custId,\r\n            cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n            itemcodeid: key.stock_id,\r\n            price: key.pay_amount,\r\n            item_uom: null,\r\n            treatment_account: key.TreatmentAccountid\r\n              ? key.TreatmentAccountid\r\n              : null,\r\n            deposit_account: key.DepositAccountid ? key.DepositAccountid : null,\r\n            prepaid_account: key.prepaid_id ? key.prepaid_id : null,\r\n          };\r\n          payload.push(obj);\r\n        }\r\n      }\r\n\r\n      this.props\r\n        .getCommonApi(\r\n          `itemcart/Check/?cart_date=${dateFormat(\r\n            new Date(),\r\n            \"yyyy-mm-dd\"\r\n          )}&cust_noid=${basicApptDetail.custId}`\r\n        )\r\n        .then(res => {\r\n          if (res.data.length === 0) {\r\n            this.props\r\n              .commonCreateApi(\"itemcart/TopUpCartCreate/\", payload)\r\n              .then(res => {\r\n                // this.props.handleCartCreated()\r\n                this.props.handleModal();\r\n              });\r\n          } else {\r\n            this.props\r\n              .commonCreateApi(\r\n                `itemcart/TopUpCartCreate/?cart_id=${res.cart_id}`,\r\n                payload\r\n              )\r\n              .then(res => {\r\n                this.props.handleModal();\r\n              });\r\n          }\r\n        });\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      workpoint = \"\",\r\n      treatmentList = [],\r\n      headerDetails,\r\n      formFields,\r\n      is_auto,\r\n      pageMeta,\r\n      typeofSelection,\r\n      is_fullpay,\r\n      settingData,\r\n      headerDetailsAuto,\r\n    } = this.state;\r\n    let { customer_name, new_outstanding, old_outstanding, topup_amount } =\r\n      formFields;\r\n    let { service, prepaid, product } = typeofSelection;\r\n    let { t } = this.props;\r\n    return (\r\n      <div className=\"row p-3\">\r\n        <div className=\"col-12 mb-2\">\r\n          <div className=\"d-flex flex-wrap\">\r\n            <div className=\"col-md-6 col-12 fw-500 fs-18 text-left p-0 m-0\">\r\n              Top Up\r\n            </div>\r\n            <div className=\"col-md-4\"></div>\r\n            <div className=\"col-md-2 col-12\">\r\n              <NormalButton\r\n                buttonClass={\"mx-2\"}\r\n                submitBtn={true}\r\n                className=\"confirm\"\r\n                label=\"Confirm\"\r\n                onClick={this.handleCreateCart}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 new-cart top-up\">\r\n          <div className=\"d-flex flex-wrap\">\r\n            <div className=\"col-md-5 col-12\">\r\n              <div className=\"d-flex mb-2\">\r\n                <label className=\"text-left w-100 text-black common-label-text\">\r\n                  {t(\"Customer\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    value={customer_name}\r\n                    name=\"customer_name\"\r\n                    onChange={this.handleChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex\">\r\n                <label className=\"text-left w-100 text-black common-label-text\">\r\n                  {t(\"Outstanding\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    value={old_outstanding}\r\n                    name=\"old_outstanding\"\r\n                    onChange={this.handleTopupChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-1 col-12\">\r\n              <NormalCheckbox\r\n                type=\"checkbox\"\r\n                onChange={this.handleCommonChange}\r\n                name=\"is_auto\"\r\n                checked={is_auto}\r\n                label=\"Auto\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-4 col-12\">\r\n              <div className=\"d-flex mb-2\">\r\n                <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                  {t(\"Top Up Amount\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    type=\"number\"\r\n                    value={topup_amount}\r\n                    name=\"topup_amount\"\r\n                    onChange={this.handleTopupChange}\r\n                    className=\"text-right\"\r\n                    max={old_outstanding}\r\n                  />\r\n\r\n                  {topup_amount\r\n                    ? this.validator.message(\r\n                        \"topup_amount\",\r\n                        topup_amount,\r\n                        `required|max:${Number(old_outstanding)},num`\r\n                      )\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex\">\r\n                <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                  {t(\"New Outstanding\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    type=\"number\"\r\n                    value={new_outstanding}\r\n                    name=\"new_outstanding\"\r\n                    onChange={this.handleChange}\r\n                    className={\"text-right\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-2 col-12\">\r\n              <NormalCheckbox\r\n                type=\"checkbox\"\r\n                onChange={this.handleCommonChange}\r\n                name=\"is_fullpay\"\r\n                checked={is_fullpay}\r\n                label=\"Full payment\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <div className=\"d-flex flex-wrap mt-2\">\r\n            <div className=\"col-md-1 col-12\">\r\n              <NormalCheckbox\r\n                checked={service}\r\n                label=\"service\"\r\n                name=\"service\"\r\n                onChange={this.handlechangeSelection}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-1 col-12\">\r\n              <NormalCheckbox\r\n                checked={product}\r\n                label=\"product\"\r\n                name=\"product\"\r\n                onChange={this.handlechangeSelection}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-1 col-12\">\r\n              <NormalCheckbox\r\n                checked={prepaid}\r\n                label=\"prepaid\"\r\n                name=\"prepaid\"\r\n                onChange={this.handlechangeSelection}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-9\"></div>\r\n          </div>\r\n        </div>\r\n        <div className={`col-12`}>\r\n          <div className=\"table-container table-responsive mt-3\">\r\n            <TableWrapper\r\n              headerDetails={is_auto ? headerDetailsAuto : headerDetails}\r\n              queryHandler={this.handlePagination}\r\n              pageMeta={pageMeta}\r\n            >\r\n              {treatmentList.length > 0 ? (\r\n                treatmentList.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <div className=\"text-right\">{item.sa_date}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-left\">{item.sa_transacno}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-left\">{item.description}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-right\">{item.qty}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-right\">{item.total_amount}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-right\">{item.balance}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-right\">{item.outstanding}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center payment-input justify-content-center\">\r\n                          <NormalInput\r\n                            value={item.pay_amount}\r\n                            name=\"pay_amount\"\r\n                            onChange={e => this.handlePayAmount(e, item, index)}\r\n                            className={`customer-name text-right`}\r\n                          />\r\n                          {item.pay_amount\r\n                            ? this.validator.message(\r\n                                \"pay_amount\",\r\n                                item.pay_amount,\r\n                                `required|max:${Number(item.outstanding)},num`\r\n                              )\r\n                            : \"\"}\r\n                        </div>\r\n                      </td>\r\n                      {is_auto ? (\r\n                        <td>\r\n                          <div className=\"d-flex justify-content-center\">\r\n                            <NormalCheckbox\r\n                              type=\"checkbox\"\r\n                              onChange={e =>\r\n                                this.handlePayAmount(e, item, index)\r\n                              }\r\n                              name=\"Autokey\"\r\n                              checked={item.Autokey}\r\n                              //disabled={is_auto ? false : true}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n\r\n                      <td>\r\n                        <div className=\"text-left\">{item.sa_staffname}</div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"12\">\r\n                    <div className=\"text-center\">No data</div>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </TableWrapper>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 pt-4 action-bar\">\r\n          <div className=\"d-flex  justify-content-end\">\r\n            <div className=\"col-md-5\">\r\n              <div className=\"d-flex justify-content-end\">\r\n                <NormalButton\r\n                  resetbg={true}\r\n                  label=\"Clear All\"\r\n                  className=\"mr-2\"\r\n                  onClick={this.handleClearAll}\r\n                />\r\n                {is_auto ? (\r\n                  <NormalButton\r\n                    mainbgrev={true}\r\n                    label=\"Auto Match\"\r\n                    // disabled={is_auto ? false : true}\r\n                    onClick={this.handleAutoMatch}\r\n                    className=\"ml-2\"\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selected_cstomer: state.common.selected_cstomer,\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      // getCustomer,\r\n      getCommonApi,\r\n      updateForm,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n      commonDeleteApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const CombineTopup = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(CombineTopupClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}