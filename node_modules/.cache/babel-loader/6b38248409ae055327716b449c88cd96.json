{"ast":null,"code":"import _regeneratorRuntime from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{NormalButton}from\"component/common\";import React,{Component}from\"react\";import{LineChart}from\"./Chart\";import\"./style.scss\";import{connect}from\"react-redux\";import{bindActionCreators}from\"redux\";import{getCommonApi,commonCreateApi}from\"redux/actions/common\";import{NormalSelect}from\"component/common\";import{withTranslation}from\"react-i18next\";export var NewQuickChartClass=/*#__PURE__*/function(_Component){_inherits(NewQuickChartClass,_Component);var _super=_createSuper(NewQuickChartClass);function NewQuickChartClass(){var _this;_classCallCheck(this,NewQuickChartClass);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={transtype:\"Quarterly\",transtypeOptions:[{label:\"Yearly\",value:\"Yearly\"},{label:\"Quarterly\",value:\"Quarterly\"}],data:[]// data: [\n//   {\n//     title: {\n//       text: \"New Customer\",\n//     },\n//     xAxis: {\n//       categories: [\n//         \"Jan-2021\",\n//         \"Feb-2021\",\n//         \"Mar-2021\",\n//         \"Apr-2021\",\n//         \"May-2021\",\n//         \"Jun-2021\",\n//         \"Jul-2021\",\n//         \"Aug-2021\",\n//         \"Sep-2021\",\n//         \"Oct-2021\",\n//         \"Nov-2021\",\n//         \"Dec-2021\",\n//       ],\n//       labels: {\n//         step: 1,\n//       },\n//     },\n//     yAxis: {\n//       min: 0,\n//       title: {\n//         text: \"\",\n//       },\n//       labels: {\n//         step: 1,\n//         format: \"{value}\",\n//       },\n//     },\n//     series: [\n//       {\n//         name: \"New Customer 1 (Male)\",\n//         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n//         color: \"#ffa31a\",\n//       },\n//       {\n//         name: \"New Customer 2 (Male)\",\n//         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n//         color: \"#ffa31a\",\n//       },\n//       {\n//         name: \"New Customer (Male)\",\n//         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n//         color: \"#ffa31a\",\n//       },\n//       {\n//         name: \"New Customer (Female)\",\n//         data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n//         color: \"#a1cae2\",\n//       },\n//       {\n//         name: \"Dummy Customer (others)\",\n//         data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n//         color: \"#a1cae2\",\n//       },\n//     ],\n//     legend: {\n//       position: \"bottom\",\n//       align: \"center\",\n//     },\n//     outlinetext: \"Total Number of Customer\",\n//     outlinevalue: 4,\n//   },\n//   {\n//     title: {\n//       text: \"Product Sold QTY\",\n//     },\n//     xAxis: {\n//       categories: [\n//         \"Jan-2021\",\n//         \"Feb-2021\",\n//         \"Mar-2021\",\n//         \"Apr-2021\",\n//         \"May-2021\",\n//         \"Jun-2021\",\n//         \"Jul-2021\",\n//         \"Aug-2021\",\n//         \"Sep-2021\",\n//         \"Oct-2021\",\n//         \"Nov-2021\",\n//         \"Dec-2021\",\n//       ],\n//       labels: {\n//         step: 1,\n//       },\n//     },\n//     yAxis: {\n//       min: 0,\n//       title: {\n//         text: \"\",\n//       },\n//       labels: {\n//         step: 1,\n//         format: \"{value}\",\n//       },\n//     },\n//     series: [\n//       {\n//         code: \"100016\",\n//         name: \"TONG JUM CHEW 锺炎州\",\n//         color: \"#B7F19C\",\n//         data: [0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n//       },\n//     ],\n//     legend: {\n//       align: \"right\",\n//       verticalAlign: \"top\",\n//       layout: \"vertical\",\n//       x: 0,\n//       y: 100,\n//     },\n//     outlinetext: \"Total Number of Customer\",\n//     outlinevalue: 4,\n//   },\n//   {\n//     title: {\n//       text: \"Service Sales Amount\",\n//     },\n//     xAxis: {\n//       categories: [\n//         \"Jan-2021\",\n//         \"Feb-2021\",\n//         \"Mar-2021\",\n//         \"Apr-2021\",\n//         \"May-2021\",\n//         \"Jun-2021\",\n//         \"Jul-2021\",\n//         \"Aug-2021\",\n//         \"Sep-2021\",\n//         \"Oct-2021\",\n//         \"Nov-2021\",\n//         \"Dec-2021\",\n//       ],\n//       labels: {\n//         step: 1,\n//       },\n//     },\n//     yAxis: {\n//       min: 0,\n//       title: {\n//         text: \"\",\n//       },\n//       labels: {\n//         step: 1,\n//         format: \"{value}\",\n//       },\n//     },\n//     series: [\n//       {\n//         code: \"42\",\n//         name: \"BODY\",\n//         color: \"#B46966\",\n//         data: [1000, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n//       },\n//     ],\n//     legend: {\n//       align: \"right\",\n//       verticalAlign: \"top\",\n//       layout: \"vertical\",\n//       x: 0,\n//       y: 100,\n//     },\n//   },\n//   {\n//     title: {\n//       text: \"Treatment Done Count\",\n//     },\n//     xAxis: {\n//       categories: [\n//         \"Jan-2021\",\n//         \"Feb-2021\",\n//         \"Mar-2021\",\n//         \"Apr-2021\",\n//         \"May-2021\",\n//         \"Jun-2021\",\n//         \"Jul-2021\",\n//         \"Aug-2021\",\n//         \"Sep-2021\",\n//         \"Oct-2021\",\n//         \"Nov-2021\",\n//         \"Dec-2021\",\n//       ],\n//       labels: {\n//         step: 1,\n//       },\n//     },\n//     yAxis: {\n//       min: 0,\n//       title: {\n//         text: \"\",\n//       },\n//       labels: {\n//         step: 1,\n//         format: \"{value}\",\n//       },\n//     },\n//     series: [\n//       {\n//         code: \"42\",\n//         name: \"Male\",\n//         color: \"#B46966\",\n//         data: [200, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n//       },\n//     ],\n//     legend: {\n//       position: \"top\",\n//       align: \"center\",\n//     },\n//   },\n// ],\n};_this.getDataByOrder=function(){var _this$state=_this.state,transtype=_this$state.transtype,data=_this$state.data;//Yoonus block this for tnc error\n//this.props.getCommonApi(`dashboardchart/?select=${transtype}`).then(res => {\n//  data = res.data;\n//  this.setState({\n//    data,\n//  });\n//});\n};_this.handleChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var _ref$target,value,name,transtype;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_ref$target=_ref.target,value=_ref$target.value,name=_ref$target.name;transtype=_this.state.transtype;if(!(transtype!=value)){_context.next=7;break;}transtype=value;_context.next=6;return _this.setState({transtype:transtype});case 6:_this.getDataByOrder();case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();return _this;}_createClass(NewQuickChartClass,[{key:\"componentDidMount\",value:function componentDidMount(){this.getDataByOrder();}},{key:\"render\",value:function render(){var _this$state2=this.state,chartOptions=_this$state2.chartOptions,data=_this$state2.data,transtype=_this$state2.transtype,transtypeOptions=_this$state2.transtypeOptions;var t=this.props.t;return/*#__PURE__*/React.createElement(\"div\",{className:\"Line-chart\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end flex-row mt-5 mb-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-2 col-12\"},/*#__PURE__*/React.createElement(NormalSelect,{placeholderrequired:\"false\",options:transtypeOptions,value:transtype,iconname:\"icon-down-key\",name:\"transtype\",onChange:this.handleChange}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between flex-wrap\"},data&&data.length>0?data.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 col-md-6 mb-3 p-2\",key:index},/*#__PURE__*/React.createElement(LineChart,{height:\"150\",width:\"150\",chartOptions:item,t:t}),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center fw-500 p-1\"},/*#__PURE__*/React.createElement(\"p\",{className:\"text-center\"},t(item.outlinetext),\" : \",item.outlinevalue)));}):/*#__PURE__*/React.createElement(\"div\",{className:\"text-center w-100\"},t(\"No data available \"))));}}]);return NewQuickChartClass;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({getCommonApi:getCommonApi,commonCreateApi:commonCreateApi},dispatch);};export var NewQuickChart=withTranslation()(connect(null,mapDispatchToProps)(NewQuickChartClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Dashboard/Statistic/AdminStats/NewDashboard/NewQuickChart/index.js"],"names":["NormalButton","React","Component","LineChart","connect","bindActionCreators","getCommonApi","commonCreateApi","NormalSelect","withTranslation","NewQuickChartClass","state","transtype","transtypeOptions","label","value","data","getDataByOrder","handleChange","target","name","setState","chartOptions","t","props","length","map","item","index","outlinetext","outlinevalue","mapDispatchToProps","dispatch","NewQuickChart"],"mappings":"2wBAAA,OAASA,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,SAA1B,CACA,MAAO,cAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,OAASC,YAAT,CAAuBC,eAAvB,KAA8C,sBAA9C,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,eAAT,KAAgC,eAAhC,CAEA,UAAaC,CAAAA,kBAAb,2WACEC,KADF,CACU,CACNC,SAAS,CAAE,WADL,CAENC,gBAAgB,CAAE,CAChB,CAAEC,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CADgB,CAEhB,CAAED,KAAK,CAAE,WAAT,CAAsBC,KAAK,CAAE,WAA7B,CAFgB,CAFZ,CAMNC,IAAI,CAAE,EACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","sourcesContent":["import { NormalButton } from \"component/common\";\r\nimport React, { Component } from \"react\";\r\nimport { LineChart } from \"./Chart\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, commonCreateApi } from \"redux/actions/common\";\r\nimport { NormalSelect } from \"component/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class NewQuickChartClass extends Component {\r\n  state = {\r\n    transtype: \"Quarterly\",\r\n    transtypeOptions: [\r\n      { label: \"Yearly\", value: \"Yearly\" },\r\n      { label: \"Quarterly\", value: \"Quarterly\" },\r\n    ],\r\n    data: [],\r\n    // data: [\r\n    //   {\r\n    //     title: {\r\n    //       text: \"New Customer\",\r\n    //     },\r\n    //     xAxis: {\r\n    //       categories: [\r\n    //         \"Jan-2021\",\r\n    //         \"Feb-2021\",\r\n    //         \"Mar-2021\",\r\n    //         \"Apr-2021\",\r\n    //         \"May-2021\",\r\n    //         \"Jun-2021\",\r\n    //         \"Jul-2021\",\r\n    //         \"Aug-2021\",\r\n    //         \"Sep-2021\",\r\n    //         \"Oct-2021\",\r\n    //         \"Nov-2021\",\r\n    //         \"Dec-2021\",\r\n    //       ],\r\n    //       labels: {\r\n    //         step: 1,\r\n    //       },\r\n    //     },\r\n    //     yAxis: {\r\n    //       min: 0,\r\n    //       title: {\r\n    //         text: \"\",\r\n    //       },\r\n    //       labels: {\r\n    //         step: 1,\r\n    //         format: \"{value}\",\r\n    //       },\r\n    //     },\r\n    //     series: [\r\n    //       {\r\n    //         name: \"New Customer 1 (Male)\",\r\n    //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#ffa31a\",\r\n    //       },\r\n    //       {\r\n    //         name: \"New Customer 2 (Male)\",\r\n    //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#ffa31a\",\r\n    //       },\r\n    //       {\r\n    //         name: \"New Customer (Male)\",\r\n    //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#ffa31a\",\r\n    //       },\r\n    //       {\r\n    //         name: \"New Customer (Female)\",\r\n    //         data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#a1cae2\",\r\n    //       },\r\n    //       {\r\n    //         name: \"Dummy Customer (others)\",\r\n    //         data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#a1cae2\",\r\n    //       },\r\n    //     ],\r\n    //     legend: {\r\n    //       position: \"bottom\",\r\n    //       align: \"center\",\r\n    //     },\r\n    //     outlinetext: \"Total Number of Customer\",\r\n    //     outlinevalue: 4,\r\n    //   },\r\n    //   {\r\n    //     title: {\r\n    //       text: \"Product Sold QTY\",\r\n    //     },\r\n    //     xAxis: {\r\n    //       categories: [\r\n    //         \"Jan-2021\",\r\n    //         \"Feb-2021\",\r\n    //         \"Mar-2021\",\r\n    //         \"Apr-2021\",\r\n    //         \"May-2021\",\r\n    //         \"Jun-2021\",\r\n    //         \"Jul-2021\",\r\n    //         \"Aug-2021\",\r\n    //         \"Sep-2021\",\r\n    //         \"Oct-2021\",\r\n    //         \"Nov-2021\",\r\n    //         \"Dec-2021\",\r\n    //       ],\r\n    //       labels: {\r\n    //         step: 1,\r\n    //       },\r\n    //     },\r\n    //     yAxis: {\r\n    //       min: 0,\r\n    //       title: {\r\n    //         text: \"\",\r\n    //       },\r\n    //       labels: {\r\n    //         step: 1,\r\n    //         format: \"{value}\",\r\n    //       },\r\n    //     },\r\n    //     series: [\r\n    //       {\r\n    //         code: \"100016\",\r\n    //         name: \"TONG JUM CHEW 锺炎州\",\r\n    //         color: \"#B7F19C\",\r\n    //         data: [0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //       },\r\n    //     ],\r\n    //     legend: {\r\n    //       align: \"right\",\r\n    //       verticalAlign: \"top\",\r\n    //       layout: \"vertical\",\r\n    //       x: 0,\r\n    //       y: 100,\r\n    //     },\r\n    //     outlinetext: \"Total Number of Customer\",\r\n    //     outlinevalue: 4,\r\n    //   },\r\n    //   {\r\n    //     title: {\r\n    //       text: \"Service Sales Amount\",\r\n    //     },\r\n    //     xAxis: {\r\n    //       categories: [\r\n    //         \"Jan-2021\",\r\n    //         \"Feb-2021\",\r\n    //         \"Mar-2021\",\r\n    //         \"Apr-2021\",\r\n    //         \"May-2021\",\r\n    //         \"Jun-2021\",\r\n    //         \"Jul-2021\",\r\n    //         \"Aug-2021\",\r\n    //         \"Sep-2021\",\r\n    //         \"Oct-2021\",\r\n    //         \"Nov-2021\",\r\n    //         \"Dec-2021\",\r\n    //       ],\r\n    //       labels: {\r\n    //         step: 1,\r\n    //       },\r\n    //     },\r\n    //     yAxis: {\r\n    //       min: 0,\r\n    //       title: {\r\n    //         text: \"\",\r\n    //       },\r\n    //       labels: {\r\n    //         step: 1,\r\n    //         format: \"{value}\",\r\n    //       },\r\n    //     },\r\n    //     series: [\r\n    //       {\r\n    //         code: \"42\",\r\n    //         name: \"BODY\",\r\n    //         color: \"#B46966\",\r\n    //         data: [1000, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //       },\r\n    //     ],\r\n    //     legend: {\r\n    //       align: \"right\",\r\n    //       verticalAlign: \"top\",\r\n    //       layout: \"vertical\",\r\n    //       x: 0,\r\n    //       y: 100,\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     title: {\r\n    //       text: \"Treatment Done Count\",\r\n    //     },\r\n    //     xAxis: {\r\n    //       categories: [\r\n    //         \"Jan-2021\",\r\n    //         \"Feb-2021\",\r\n    //         \"Mar-2021\",\r\n    //         \"Apr-2021\",\r\n    //         \"May-2021\",\r\n    //         \"Jun-2021\",\r\n    //         \"Jul-2021\",\r\n    //         \"Aug-2021\",\r\n    //         \"Sep-2021\",\r\n    //         \"Oct-2021\",\r\n    //         \"Nov-2021\",\r\n    //         \"Dec-2021\",\r\n    //       ],\r\n    //       labels: {\r\n    //         step: 1,\r\n    //       },\r\n    //     },\r\n    //     yAxis: {\r\n    //       min: 0,\r\n    //       title: {\r\n    //         text: \"\",\r\n    //       },\r\n    //       labels: {\r\n    //         step: 1,\r\n    //         format: \"{value}\",\r\n    //       },\r\n    //     },\r\n    //     series: [\r\n    //       {\r\n    //         code: \"42\",\r\n    //         name: \"Male\",\r\n    //         color: \"#B46966\",\r\n    //         data: [200, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //       },\r\n    //     ],\r\n    //     legend: {\r\n    //       position: \"top\",\r\n    //       align: \"center\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataByOrder();\r\n  }\r\n\r\n  getDataByOrder = () => {\r\n    let { transtype, data } = this.state;\r\n    //Yoonus block this for tnc error\r\n    //this.props.getCommonApi(`dashboardchart/?select=${transtype}`).then(res => {\r\n    //  data = res.data;\r\n    //  this.setState({\r\n    //    data,\r\n    //  });\r\n    //});\r\n\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { transtype } = this.state;\r\n    if (transtype != value) {\r\n      transtype = value;\r\n      await this.setState({\r\n        transtype,\r\n      });\r\n      this.getDataByOrder();\r\n    }\r\n  };\r\n  render() {\r\n    const { chartOptions, data, transtype, transtypeOptions } = this.state;\r\n    let {t} = this.props;\r\n    return (\r\n      <div className=\"Line-chart\">\r\n        <div className=\"d-flex justify-content-end flex-row mt-5 mb-3\">\r\n          <div className=\"col-md-2 col-12\">\r\n            <NormalSelect\r\n              placeholderrequired=\"false\"\r\n              options={transtypeOptions}\r\n              value={transtype}\r\n              iconname=\"icon-down-key\"\r\n              name=\"transtype\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between flex-wrap\">\r\n          {data && data.length > 0 ? (\r\n            data.map((item, index) => {\r\n              return (\r\n                <div className=\"col-12 col-md-6 mb-3 p-2\" key={index}>\r\n                  <LineChart height=\"150\" width=\"150\" chartOptions={item}  t={t}/>\r\n\r\n                  <div className=\"text-center fw-500 p-1\">\r\n                    <p className=\"text-center\">\r\n                      {t(item.outlinetext)} : {item.outlinevalue}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"text-center w-100\">{t(\"No data available \")}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonCreateApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const NewQuickChart = withTranslation()(connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(NewQuickChartClass));\r\n"]},"metadata":{},"sourceType":"module"}