{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\common\\\\Plugins\\\\devExpressScheduler\\\\AppointmentSettings.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalButton } from \"component/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, commonUpdateApi, commonPatchApi } from \"redux/actions/common\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { Toast } from \"service/toast\";\nexport class AppointmentSettingsClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startday_hour: \"\",\n      endday_hour: \"\",\n      cell_duration: \"\",\n      resource_count: \"\"\n    };\n\n    this.componentWillMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n    };\n\n    this.componentDidMount = async () => {\n      let {\n        id,\n        startday_hour,\n        endday_hour,\n        cell_duration,\n        resource_count\n      } = this.state;\n      let {\n        SchedulerSetting\n      } = this.props;\n      id = SchedulerSetting.settingId;\n      startday_hour = Number(SchedulerSetting.startday_hour).toFixed(2);\n      endday_hour = Number(SchedulerSetting.endday_hour).toFixed(2);\n      cell_duration = SchedulerSetting.cell_duration;\n      resource_count = SchedulerSetting.resource_count;\n      await this.setState({\n        id,\n        startday_hour,\n        endday_hour,\n        cell_duration,\n        resource_count\n      });\n    };\n\n    this.handleClear = () => {\n      this.setState({\n        startday_hour: \"\",\n        endday_hour: \"\",\n        cell_duration: \"\",\n        resource_count: \"\"\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      let {\n        startday_hour,\n        endday_hour,\n        cell_duration,\n        resource_count\n      } = this.state;\n\n      if (Number(startday_hour) < Number(endday_hour)) {\n        let body = {};\n\n        if (this.validator.allValid()) {\n          body = {\n            startday_hour: startday_hour,\n            endday_hour: endday_hour,\n            cell_duration: cell_duration,\n            resource_count: resource_count\n          };\n          this.props.commonPatchApi(`siteappointsetting/${this.props.SchedulerSetting.settingId}/`, body).then(key => {\n            let {\n              status\n            } = key;\n            console.log(key, \"response for submit\");\n\n            if (status == \"200\") {\n              this.props.handleModal();\n              this.props.handleSettingChange();\n            }\n          });\n        } else {\n          this.validator.showMessages();\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Start hour must be earlier than end hour\"\n        });\n      }\n    };\n\n    this.handlesStartHour = () => {\n      let {\n        startday_hour\n      } = this.state;\n\n      if (Number(startday_hour) > 24 || Number(startday_hour) < 0) {\n        Toast({\n          type: \"error\",\n          message: \"Please enter valid Start hour (MAX. 24 hours)\"\n        });\n        this.setState({\n          startday_hour: \"\"\n        });\n      }\n    };\n\n    this.handlesEndHour = () => {\n      let {\n        endday_hour,\n        startday_hour\n      } = this.state;\n\n      if (Number(endday_hour) > 24 || Number(endday_hour) < 0 || Number(endday_hour) < Number(startday_hour)) {\n        Toast({\n          type: \"error\",\n          message: \"Please enter valid End hour (MAX. 24 hours)\"\n        });\n        this.setState({\n          endday_hour: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    let {\n      startday_hour,\n      endday_hour,\n      cell_duration,\n      resource_count\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-secondary fs-19 fw-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Scheduler Setting\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Start Hour\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: startday_hour,\n      type: \"number\",\n      name: \"startday_hour\",\n      onChange: this.handleChange,\n      onBlur: this.handlesStartHour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"start day hour\", startday_hour, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"End Hour\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: endday_hour,\n      type: \"number\",\n      name: \"endday_hour\",\n      onChange: this.handleChange,\n      onBlur: this.handlesEndHour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"end day hour\", endday_hour, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"Duration\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: cell_duration,\n      type: \"number\",\n      name: \"cell_duration\",\n      onChange: this.handleChange,\n      onBlur: this.handlePrepaidValueChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"duration\", cell_duration, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, \"Resource Count\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: resource_count,\n      type: \"number\",\n      name: \"resource_count\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"resource count\", resource_count, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: false,\n      className: \"col-12 fs-15 submit-btn\",\n      label: \"Submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  basicApptDetail: state.appointment.basicApptDetail,\n  SchedulerSetting: state.appointment.SchedulerSetting\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonUpdateApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const AppointmentSettings = connect(mapStateToProps, mapDispatchToProps)(AppointmentSettingsClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/common/Plugins/devExpressScheduler/AppointmentSettings.js"],"names":["React","Component","NormalInput","NormalButton","connect","bindActionCreators","getCommonApi","commonUpdateApi","commonPatchApi","SimpleReactValidator","Toast","AppointmentSettingsClass","state","startday_hour","endday_hour","cell_duration","resource_count","componentWillMount","validator","element","message","autoForceUpdate","componentDidMount","id","SchedulerSetting","props","settingId","Number","toFixed","setState","handleClear","handleChange","target","value","name","handleSubmit","body","allValid","then","key","status","console","log","handleModal","handleSettingChange","showMessages","type","handlesStartHour","handlesEndHour","render","handlePrepaidValueChange","mapStateToProps","basicApptDetail","appointment","mapDispatchToProps","dispatch","AppointmentSettings"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NormalInput, NormalButton } from \"component/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  commonUpdateApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nexport class AppointmentSettingsClass extends Component {\r\n  state = {\r\n    startday_hour: \"\",\r\n    endday_hour: \"\",\r\n    cell_duration: \"\",\r\n    resource_count: \"\",\r\n  };\r\n  componentWillMount = () => {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n  };\r\n  componentDidMount = async () => {\r\n    let { id, startday_hour, endday_hour, cell_duration, resource_count } =\r\n      this.state;\r\n    let { SchedulerSetting } = this.props;\r\n    id = SchedulerSetting.settingId;\r\n    startday_hour = Number(SchedulerSetting.startday_hour).toFixed(2);\r\n    endday_hour = Number(SchedulerSetting.endday_hour).toFixed(2);\r\n    cell_duration = SchedulerSetting.cell_duration;\r\n    resource_count = SchedulerSetting.resource_count;\r\n\r\n    await this.setState({\r\n      id,\r\n      startday_hour,\r\n      endday_hour,\r\n      cell_duration,\r\n      resource_count,\r\n    });\r\n  };\r\n  handleClear = () => {\r\n    this.setState({\r\n      startday_hour: \"\",\r\n      endday_hour: \"\",\r\n      cell_duration: \"\",\r\n      resource_count: \"\",\r\n    });\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    let { startday_hour, endday_hour, cell_duration, resource_count } =\r\n      this.state;\r\n    if (Number(startday_hour) < Number(endday_hour)) {\r\n      let body = {};\r\n      if (this.validator.allValid()) {\r\n        body = {\r\n          startday_hour: startday_hour,\r\n          endday_hour: endday_hour,\r\n          cell_duration: cell_duration,\r\n          resource_count: resource_count,\r\n        };\r\n        this.props\r\n          .commonPatchApi(\r\n            `siteappointsetting/${this.props.SchedulerSetting.settingId}/`,\r\n            body\r\n          )\r\n          .then(key => {\r\n            let { status } = key;\r\n            console.log(key, \"response for submit\");\r\n            if (status == \"200\") {\r\n              this.props.handleModal();\r\n              this.props.handleSettingChange();\r\n            }\r\n          });\r\n      } else {\r\n        this.validator.showMessages();\r\n      }\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Start hour must be earlier than end hour\",\r\n      });\r\n    }\r\n  };\r\n  handlesStartHour = () => {\r\n    let { startday_hour } = this.state;\r\n    if (Number(startday_hour) > 24 || Number(startday_hour) < 0) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Please enter valid Start hour (MAX. 24 hours)\",\r\n      });\r\n      this.setState({\r\n        startday_hour: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handlesEndHour = () => {\r\n    let { endday_hour, startday_hour } = this.state;\r\n    if (\r\n      Number(endday_hour) > 24 ||\r\n      Number(endday_hour) < 0 ||\r\n      Number(endday_hour) < Number(startday_hour)\r\n    ) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Please enter valid End hour (MAX. 24 hours)\",\r\n      });\r\n      this.setState({\r\n        endday_hour: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { startday_hour, endday_hour, cell_duration, resource_count } =\r\n      this.state;\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid mb-4\">\r\n          <div className=\"row pl-3\">\r\n            <div className=\"col-md-9 col-12\">\r\n              <h6 className=\"text-secondary fs-19 fw-500\">Scheduler Setting</h6>\r\n            </div>\r\n            <div className=\"col-md-2 col-12\"></div>\r\n          </div>\r\n          <div className=\"row pl-5 pr-5 mt-4\">\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-md-2 col-12\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\r\n                  Start Hour\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={startday_hour}\r\n                    type=\"number\"\r\n                    name=\"startday_hour\"\r\n                    onChange={this.handleChange}\r\n                    onBlur={this.handlesStartHour}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"start day hour\",\r\n                  startday_hour,\r\n                  \"required\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-2 col-12\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\r\n                  End Hour\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={endday_hour}\r\n                    type=\"number\"\r\n                    name=\"endday_hour\"\r\n                    onChange={this.handleChange}\r\n                    onBlur={this.handlesEndHour}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"end day hour\",\r\n                  endday_hour,\r\n                  \"required\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-2 col-12\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\r\n                  Duration\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={cell_duration}\r\n                    type=\"number\"\r\n                    name=\"cell_duration\"\r\n                    onChange={this.handleChange}\r\n                    onBlur={this.handlePrepaidValueChange}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\"duration\", cell_duration, \"required\")}\r\n              </div>\r\n              <div className=\"col-md-3 col-12\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\r\n                  Resource Count\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={resource_count}\r\n                    type=\"number\"\r\n                    name=\"resource_count\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"resource count\",\r\n                  resource_count,\r\n                  \"required\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-2 col-12 mt-4\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <NormalButton\r\n                    mainbg={false}\r\n                    className=\"col-12 fs-15 submit-btn\"\r\n                    label=\"Submit\"\r\n                    onClick={this.handleSubmit}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  SchedulerSetting: state.appointment.SchedulerSetting,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonUpdateApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\nexport const AppointmentSettings = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AppointmentSettingsClass);\r\n"]},"metadata":{},"sourceType":"module"}