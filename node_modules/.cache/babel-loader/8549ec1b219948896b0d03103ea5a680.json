{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _uiSchedulerAppointmentsPositioningStrategy = _interopRequireDefault(require(\"./ui.scheduler.appointmentsPositioning.strategy.base\"));\n\nvar _uiSchedulerAppointmentsPositioningStrategy2 = _interopRequireDefault(require(\"./ui.scheduler.appointmentsPositioning.strategy.adaptive\"));\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _themes = require(\"../../themes\");\n\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar toMs = _date.default.dateToMilliseconds;\nvar APPOINTMENT_MIN_SIZE = 2;\nvar APPOINTMENT_DEFAULT_HEIGHT = 20;\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;\nvar DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;\n\nvar BaseRenderingStrategy = function () {\n  function BaseRenderingStrategy(instance) {\n    _classCallCheck(this, BaseRenderingStrategy);\n\n    this.instance = instance;\n\n    this._initPositioningStrategy();\n  }\n\n  _createClass(BaseRenderingStrategy, [{\n    key: \"_isAdaptive\",\n    value: function value() {\n      return this.instance.fire(\"isAdaptive\");\n    }\n  }, {\n    key: \"_correctCollectorCoordinatesInAdaptive\",\n    value: function value(coordinates, isAllDay) {\n      coordinates.top = coordinates.top + this.getCollectorTopOffset(isAllDay);\n      coordinates.left = coordinates.left + this.getCollectorLeftOffset();\n    }\n  }, {\n    key: \"_initPositioningStrategy\",\n    value: function value() {\n      this._positioningStrategy = this._isAdaptive() ? new _uiSchedulerAppointmentsPositioningStrategy2.default(this) : new _uiSchedulerAppointmentsPositioningStrategy.default(this);\n    }\n  }, {\n    key: \"getPositioningStrategy\",\n    value: function value() {\n      return this._positioningStrategy;\n    }\n  }, {\n    key: \"getAppointmentMinSize\",\n    value: function value() {\n      return APPOINTMENT_MIN_SIZE;\n    }\n  }, {\n    key: \"keepAppointmentSettings\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"getDeltaTime\",\n    value: function value() {}\n  }, {\n    key: \"getAppointmentGeometry\",\n    value: function value(coordinates) {\n      return coordinates;\n    }\n  }, {\n    key: \"needCorrectAppointmentDates\",\n    value: function value() {\n      return true;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function value() {\n      return \"horizontal\";\n    }\n  }, {\n    key: \"createTaskPositionMap\",\n    value: function value(items) {\n      delete this._maxAppointmentCountPerCell;\n      var length = items && items.length;\n\n      if (!length) {\n        return;\n      }\n\n      this._defaultWidth = this.instance.fire(\"getCellWidth\");\n      this._defaultHeight = this.instance.fire(\"getCellHeight\");\n      this._allDayHeight = this.instance._allDayCellHeight;\n      var map = [];\n\n      for (var i = 0; i < length; i++) {\n        var coordinates = this._getItemPosition(items[i]);\n\n        if (this._isRtl()) {\n          coordinates = this._correctRtlCoordinates(coordinates);\n        }\n\n        map.push(coordinates);\n      }\n\n      var positionArray = this._getSortedPositions(map);\n\n      var resultPositions = this._getResultPositions(positionArray);\n\n      return this._getExtendedPositionMap(map, resultPositions);\n    }\n  }, {\n    key: \"_getDeltaWidth\",\n    value: function value(args, initialSize) {\n      var intervalWidth = this.instance.fire(\"getResizableStep\") || this.getAppointmentMinSize();\n      var initialWidth = initialSize.width;\n      return Math.round((args.width - initialWidth) / intervalWidth);\n    }\n  }, {\n    key: \"_correctRtlCoordinates\",\n    value: function value(coordinates) {\n      var width = coordinates[0].width || this._getAppointmentMaxWidth();\n\n      coordinates.forEach(function (coordinate) {\n        if (!coordinate.appointmentReduced) {\n          coordinate.left -= width;\n        }\n      });\n      return coordinates;\n    }\n  }, {\n    key: \"_getAppointmentMaxWidth\",\n    value: function value() {\n      return this.getDefaultCellWidth();\n    }\n  }, {\n    key: \"_getItemPosition\",\n    value: function value(appointment) {\n      var adapter = this.instance.createAppointmentAdapter(appointment);\n\n      var position = this._getAppointmentCoordinates(appointment);\n\n      var allDay = this.isAllDay(appointment);\n      var startDate = new Date(adapter.startDate);\n      var result = [];\n\n      for (var j = 0; j < position.length; j++) {\n        var height = this.calculateAppointmentHeight(appointment, position[j]);\n        var width = this.calculateAppointmentWidth(appointment, position[j]);\n        var resultWidth = width;\n        var appointmentReduced = null;\n        var multiWeekAppointmentParts = [];\n        var initialRowIndex = position[j].rowIndex;\n        var initialCellIndex = position[j].cellIndex;\n\n        if (this._needVerifyItemSize() || allDay) {\n          var currentMaxAllowedPosition = position[j].hMax;\n\n          if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {\n            left: position[j].left,\n            width: width\n          })) {\n            appointmentReduced = \"head\";\n            initialRowIndex = position[j].rowIndex;\n            initialCellIndex = position[j].cellIndex;\n            resultWidth = this._reduceMultiWeekAppointment(width, {\n              left: position[j].left,\n              right: currentMaxAllowedPosition\n            });\n            multiWeekAppointmentParts = this._getAppointmentParts({\n              sourceAppointmentWidth: width,\n              reducedWidth: resultWidth,\n              height: height\n            }, position[j], startDate);\n\n            if (this._isRtl()) {\n              position[j].left = currentMaxAllowedPosition;\n            }\n          }\n        }\n\n        (0, _extend.extend)(position[j], {\n          height: height,\n          width: resultWidth,\n          allDay: allDay,\n          rowIndex: initialRowIndex,\n          cellIndex: initialCellIndex,\n          appointmentReduced: appointmentReduced\n        });\n        result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getAppointmentPartsPosition\",\n    value: function value(appointmentParts, position, result) {\n      if (appointmentParts.length) {\n        appointmentParts.unshift(position);\n        result = result.concat(appointmentParts);\n      } else {\n        result.push(position);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getAppointmentCoordinates\",\n    value: function value(appointment) {\n      return this.instance.fire(\"createAppointmentSettings\", appointment);\n    }\n  }, {\n    key: \"_isRtl\",\n    value: function value() {\n      return this.instance.option(\"rtlEnabled\");\n    }\n  }, {\n    key: \"_getAppointmentParts\",\n    value: function value() {\n      return [];\n    }\n  }, {\n    key: \"_getCompactAppointmentParts\",\n    value: function value(appointmentWidth) {\n      var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\n      return Math.round(appointmentWidth / cellWidth);\n    }\n  }, {\n    key: \"_reduceMultiWeekAppointment\",\n    value: function value(sourceAppointmentWidth, bound) {\n      if (this._isRtl()) {\n        sourceAppointmentWidth = Math.floor(bound.left - bound.right);\n      } else {\n        sourceAppointmentWidth = bound.right - Math.floor(bound.left);\n      }\n\n      return sourceAppointmentWidth;\n    }\n  }, {\n    key: \"calculateAppointmentHeight\",\n    value: function value() {\n      return 0;\n    }\n  }, {\n    key: \"calculateAppointmentWidth\",\n    value: function value() {\n      return 0;\n    }\n  }, {\n    key: \"isAppointmentGreaterThan\",\n    value: function value(etalon, comparisonParameters) {\n      var result = comparisonParameters.left + comparisonParameters.width - etalon;\n\n      if (this._isRtl()) {\n        result = etalon + comparisonParameters.width - comparisonParameters.left;\n      }\n\n      return result > this.getDefaultCellWidth() / 2;\n    }\n  }, {\n    key: \"isAllDay\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"cropAppointmentWidth\",\n    value: function value(width, cellWidth) {\n      if (this.instance.fire(\"isGroupedByDate\")) {\n        width = cellWidth;\n      }\n\n      return width;\n    }\n  }, {\n    key: \"_getSortedPositions\",\n    value: function value(positionList) {\n      var _this = this;\n\n      var result = [];\n\n      var round = function round(value) {\n        return Math.round(100 * value) / 100;\n      };\n\n      var createItem = function createItem(rowIndex, cellIndex, top, left, bottom, right, position, allDay) {\n        return {\n          i: rowIndex,\n          j: cellIndex,\n          top: round(top),\n          left: round(left),\n          bottom: round(bottom),\n          right: round(right),\n          cellPosition: position,\n          allDay: allDay\n        };\n      };\n\n      for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {\n        for (var cellIndex = 0, cellCount = positionList[rowIndex].length; cellIndex < cellCount; cellIndex++) {\n          var _positionList$rowInde = positionList[rowIndex][cellIndex],\n              top = _positionList$rowInde.top,\n              left = _positionList$rowInde.left,\n              height = _positionList$rowInde.height,\n              width = _positionList$rowInde.width,\n              cellPosition = _positionList$rowInde.cellPosition,\n              allDay = _positionList$rowInde.allDay;\n          result.push(createItem(rowIndex, cellIndex, top, left, top + height, left + width, cellPosition, allDay));\n        }\n      }\n\n      return result.sort(function (a, b) {\n        return _this._sortCondition(a, b);\n      });\n    }\n  }, {\n    key: \"_sortCondition\",\n    value: function value() {}\n  }, {\n    key: \"_getConditions\",\n    value: function value(a, b) {\n      var isSomeEdge = this._isSomeEdge(a, b);\n\n      return {\n        columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),\n        rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),\n        cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)\n      };\n    }\n  }, {\n    key: \"_rowCondition\",\n    value: function value(a, b) {\n      var conditions = this._getConditions(a, b);\n\n      return conditions.columnCondition || conditions.rowCondition;\n    }\n  }, {\n    key: \"_columnCondition\",\n    value: function value(a, b) {\n      var conditions = this._getConditions(a, b);\n\n      return conditions.rowCondition || conditions.columnCondition;\n    }\n  }, {\n    key: \"_isSomeEdge\",\n    value: function value(a, b) {\n      return a.i === b.i && a.j === b.j;\n    }\n  }, {\n    key: \"_normalizeCondition\",\n    value: function value(first, second) {\n      var result = first - second;\n      return Math.abs(result) > 1 ? result : 0;\n    }\n  }, {\n    key: \"_isItemsCross\",\n    value: function value(firstItem, secondItem) {\n      var areItemsInTheSameTable = !!firstItem.allDay === !!secondItem.allDay;\n      var areItemsAllDay = firstItem.allDay && secondItem.allDay;\n\n      if (areItemsInTheSameTable) {\n        var orientation = this._getOrientation(areItemsAllDay);\n\n        return this._checkItemsCrossing(firstItem, secondItem, orientation);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"_checkItemsCrossing\",\n    value: function value(firstItem, secondItem, orientation) {\n      var firstItemSide_1 = Math.floor(firstItem[orientation[0]]);\n      var firstItemSide_2 = Math.floor(firstItem[orientation[1]]);\n      var secondItemSide_1 = Math.ceil(secondItem[orientation[0]]);\n      var secondItemSide_2 = Math.ceil(secondItem[orientation[1]]);\n      var isItemCross = Math.abs(firstItem[orientation[2]] - secondItem[orientation[2]]) <= 1;\n      return isItemCross && (firstItemSide_1 <= secondItemSide_1 && firstItemSide_2 > secondItemSide_1 || firstItemSide_1 < secondItemSide_2 && firstItemSide_2 >= secondItemSide_2 || firstItemSide_1 === secondItemSide_1 && firstItemSide_2 === secondItemSide_2);\n    }\n  }, {\n    key: \"_getOrientation\",\n    value: function value(isAllDay) {\n      return isAllDay ? [\"left\", \"right\", \"top\"] : [\"top\", \"bottom\", \"left\"];\n    }\n  }, {\n    key: \"_getResultPositions\",\n    value: function value(sortedArray) {\n      var _this2 = this;\n\n      var result = [];\n      var i;\n      var sortedIndex = 0;\n      var currentItem;\n      var indexes;\n      var itemIndex;\n      var maxIndexInStack = 0;\n      var stack = {};\n\n      var findFreeIndex = function findFreeIndex(indexes, index) {\n        var isFind = indexes.some(function (item) {\n          return item === index;\n        });\n\n        if (isFind) {\n          return findFreeIndex(indexes, ++index);\n        } else {\n          return index;\n        }\n      };\n\n      var createItem = function createItem(currentItem, index) {\n        var currentIndex = index || 0;\n        return {\n          index: currentIndex,\n          i: currentItem.i,\n          j: currentItem.j,\n          left: currentItem.left,\n          right: currentItem.right,\n          top: currentItem.top,\n          bottom: currentItem.bottom,\n          allDay: currentItem.allDay,\n          sortedIndex: _this2._skipSortedIndex(currentIndex) ? null : sortedIndex++\n        };\n      };\n\n      var startNewStack = function startNewStack(currentItem) {\n        stack.items = [createItem(currentItem)];\n        stack.left = currentItem.left;\n        stack.right = currentItem.right;\n        stack.top = currentItem.top;\n        stack.bottom = currentItem.bottom;\n        stack.allDay = currentItem.allDay;\n      };\n\n      var pushItemsInResult = function pushItemsInResult(items) {\n        items.forEach(function (item) {\n          result.push({\n            index: item.index,\n            count: maxIndexInStack + 1,\n            i: item.i,\n            j: item.j,\n            sortedIndex: item.sortedIndex\n          });\n        });\n      };\n\n      for (i = 0; i < sortedArray.length; i++) {\n        currentItem = sortedArray[i];\n        indexes = [];\n\n        if (!stack.items) {\n          startNewStack(currentItem);\n        } else {\n          if (this._isItemsCross(stack, currentItem)) {\n            stack.items.forEach(function (item, index) {\n              if (_this2._isItemsCross(item, currentItem)) {\n                indexes.push(item.index);\n              }\n            });\n            itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;\n            stack.items.push(createItem(currentItem, itemIndex));\n            maxIndexInStack = Math.max(itemIndex, maxIndexInStack);\n            stack.left = Math.min(stack.left, currentItem.left);\n            stack.right = Math.max(stack.right, currentItem.right);\n            stack.top = Math.min(stack.top, currentItem.top);\n            stack.bottom = Math.max(stack.bottom, currentItem.bottom);\n            stack.allDay = currentItem.allDay;\n          } else {\n            pushItemsInResult(stack.items);\n            stack = {};\n            startNewStack(currentItem);\n            maxIndexInStack = 0;\n          }\n        }\n      }\n\n      if (stack.items) {\n        pushItemsInResult(stack.items);\n      }\n\n      return result.sort(function (a, b) {\n        var columnCondition = a.j - b.j;\n        var rowCondition = a.i - b.i;\n        return rowCondition ? rowCondition : columnCondition;\n      });\n    }\n  }, {\n    key: \"_skipSortedIndex\",\n    value: function value(index) {\n      return index > this._getMaxAppointmentCountPerCell() - 1;\n    }\n  }, {\n    key: \"_findIndexByKey\",\n    value: function value(arr, iKey, jKey, iValue, jValue) {\n      var result = 0;\n\n      for (var i = 0, len = arr.length; i < len; i++) {\n        if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {\n          result = i;\n          break;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getExtendedPositionMap\",\n    value: function value(map, positions) {\n      var positionCounter = 0;\n      var result = [];\n\n      for (var i = 0, mapLength = map.length; i < mapLength; i++) {\n        var resultString = [];\n\n        for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {\n          map[i][j].index = positions[positionCounter].index;\n          map[i][j].sortedIndex = positions[positionCounter].sortedIndex;\n          map[i][j].count = positions[positionCounter++].count;\n          resultString.push(map[i][j]);\n\n          this._checkLongCompactAppointment(map[i][j], resultString);\n        }\n\n        result.push(resultString);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_checkLongCompactAppointment\",\n    value: function value(item, result) {\n      this._splitLongCompactAppointment(item, result);\n\n      return result;\n    }\n  }, {\n    key: \"_splitLongCompactAppointment\",\n    value: function value(item, result) {\n      var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);\n\n      var compactCount = 0;\n\n      if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {\n        item.isCompact = true;\n        compactCount = this._getCompactAppointmentParts(item.width);\n\n        for (var k = 1; k < compactCount; k++) {\n          var compactPart = (0, _extend.extend)(true, {}, item);\n          compactPart.left = this._getCompactLeftCoordinate(item.left, k);\n          compactPart.cellIndex = compactPart.cellIndex + k;\n          compactPart.sortedIndex = null;\n          result.push(compactPart);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"normalizeEndDateByViewEnd\",\n    value: function value(appointment, endDate) {\n      var result = new Date(endDate.getTime());\n\n      if (!this.isAllDay(appointment)) {\n        var viewEndDate = _date.default.roundToHour(this.instance.fire(\"getEndViewDate\"));\n\n        if (result > viewEndDate) {\n          result = viewEndDate;\n        }\n      }\n\n      var endDayHour = this.instance._getCurrentViewOption(\"endDayHour\");\n\n      var allDay = this.instance.fire(\"getField\", \"allDay\", appointment);\n      var currentViewEndTime = new Date(new Date(endDate.getTime()).setHours(endDayHour, 0, 0, 0));\n\n      if (result.getTime() > currentViewEndTime.getTime() || allDay && result.getHours() < endDayHour) {\n        result = currentViewEndTime;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_adjustDurationByDaylightDiff\",\n    value: function value(duration, startDate, endDate) {\n      var daylightDiff = _utils.default.getDaylightOffset(startDate, endDate);\n\n      return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration;\n    }\n  }, {\n    key: \"_needAdjustDuration\",\n    value: function value(diff) {\n      return 0 !== diff;\n    }\n  }, {\n    key: \"_calculateDurationByDaylightDiff\",\n    value: function value(duration, diff) {\n      return duration + diff * toMs(\"minute\");\n    }\n  }, {\n    key: \"_getAppointmentDurationInMs\",\n    value: function value(startDate, endDate, allDay) {\n      return this.instance.fire(\"getAppointmentDurationInMs\", {\n        startDate: startDate,\n        endDate: endDate,\n        allDay: allDay\n      });\n    }\n  }, {\n    key: \"_markAppointmentAsVirtual\",\n    value: function value(coordinates, isAllDay) {\n      var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);\n\n      if (coordinates.count - countFullWidthAppointmentInCell > 0) {\n        coordinates.virtual = {\n          top: coordinates.top,\n          left: coordinates.left,\n          index: \"tail\" === coordinates.appointmentReduced ? coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex : coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex + \"-tail\",\n          isAllDay: isAllDay\n        };\n      }\n    }\n  }, {\n    key: \"_getMaxAppointmentCountPerCellByType\",\n    value: function value(isAllDay) {\n      var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();\n\n      if ((0, _type.isObject)(appointmentCountPerCell)) {\n        return isAllDay ? this._getMaxAppointmentCountPerCell().allDay : this._getMaxAppointmentCountPerCell().simple;\n      } else {\n        return appointmentCountPerCell;\n      }\n    }\n  }, {\n    key: \"getDropDownAppointmentWidth\",\n    value: function value(intervalCount, isAllDay) {\n      return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay);\n    }\n  }, {\n    key: \"getDropDownAppointmentHeight\",\n    value: function value() {\n      return this.getPositioningStrategy().getDropDownAppointmentHeight();\n    }\n  }, {\n    key: \"getDropDownButtonAdaptiveSize\",\n    value: function value() {\n      return DROP_DOWN_BUTTON_ADAPTIVE_SIZE;\n    }\n  }, {\n    key: \"getDefaultCellWidth\",\n    value: function value() {\n      return this._defaultWidth;\n    }\n  }, {\n    key: \"getDefaultCellHeight\",\n    value: function value() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"getDefaultAllDayCellHeight\",\n    value: function value() {\n      return this._allDayHeight;\n    }\n  }, {\n    key: \"getCollectorTopOffset\",\n    value: function value(allDay) {\n      return this.getPositioningStrategy().getCollectorTopOffset(allDay);\n    }\n  }, {\n    key: \"getCollectorLeftOffset\",\n    value: function value() {\n      return this.getPositioningStrategy().getCollectorLeftOffset();\n    }\n  }, {\n    key: \"getAppointmentDataCalculator\",\n    value: function value() {}\n  }, {\n    key: \"_customizeCoordinates\",\n    value: function value(coordinates, height, appointmentCountPerCell, topOffset, isAllDay) {\n      var index = coordinates.index;\n      var appointmentHeight = height / appointmentCountPerCell;\n      var appointmentTop = coordinates.top + index * appointmentHeight;\n      var top = appointmentTop + topOffset;\n      var width = coordinates.width;\n      var left = coordinates.left;\n\n      if (coordinates.isCompact) {\n        this._isAdaptive() && this._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay);\n\n        this._markAppointmentAsVirtual(coordinates, isAllDay);\n      }\n\n      return {\n        height: appointmentHeight,\n        width: width,\n        top: top,\n        left: left,\n        empty: this._isAppointmentEmpty(height, width)\n      };\n    }\n  }, {\n    key: \"_isAppointmentEmpty\",\n    value: function value(height, width) {\n      return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth();\n    }\n  }, {\n    key: \"_calculateGeometryConfig\",\n    value: function value(coordinates) {\n      var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\n\n      var offsets = this._getOffsets();\n\n      var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\n\n      var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\n\n      var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\n\n      var maxHeight = this._getMaxHeight();\n\n      if (!(0, _type.isNumeric)(appointmentCountPerCell)) {\n        appointmentCountPerCell = coordinates.count;\n        ratio = (maxHeight - offsets.unlimited) / maxHeight;\n      }\n\n      var topOffset = (1 - ratio) * maxHeight;\n\n      if (\"auto\" === overlappingMode || (0, _type.isNumeric)(overlappingMode)) {\n        ratio = 1;\n        maxHeight -= appointmentDefaultOffset;\n        topOffset = appointmentDefaultOffset;\n      }\n\n      return {\n        height: ratio * maxHeight,\n        appointmentCountPerCell: appointmentCountPerCell,\n        offset: topOffset\n      };\n    }\n  }, {\n    key: \"_getAppointmentCount\",\n    value: function value() {}\n  }, {\n    key: \"_getDefaultRatio\",\n    value: function value() {}\n  }, {\n    key: \"_getOffsets\",\n    value: function value() {}\n  }, {\n    key: \"_getMaxHeight\",\n    value: function value() {}\n  }, {\n    key: \"_needVerifyItemSize\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"needSeparateAppointment\",\n    value: function value(allDay) {\n      return this.instance.fire(\"isGroupedByDate\") && allDay;\n    }\n  }, {\n    key: \"_getMaxAppointmentCountPerCell\",\n    value: function value() {\n      if (!this._maxAppointmentCountPerCell) {\n        var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\n        var appointmentCountPerCell;\n\n        if ((0, _type.isNumeric)(overlappingMode)) {\n          appointmentCountPerCell = overlappingMode;\n        }\n\n        if (\"auto\" === overlappingMode) {\n          appointmentCountPerCell = this._getDynamicAppointmentCountPerCell();\n        }\n\n        if (\"unlimited\" === overlappingMode) {\n          appointmentCountPerCell = void 0;\n        }\n\n        this._maxAppointmentCountPerCell = appointmentCountPerCell;\n      }\n\n      return this._maxAppointmentCountPerCell;\n    }\n  }, {\n    key: \"_getDynamicAppointmentCountPerCell\",\n    value: function value() {\n      return this.getPositioningStrategy().getDynamicAppointmentCountPerCell();\n    }\n  }, {\n    key: \"hasAllDayAppointments\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"_isCompactTheme\",\n    value: function value() {\n      return \"compact\" === ((0, _themes.current)() || \"\").split(\".\").pop();\n    }\n  }, {\n    key: \"_getAppointmentDefaultOffset\",\n    value: function value() {\n      return this.getPositioningStrategy().getAppointmentDefaultOffset();\n    }\n  }, {\n    key: \"_getAppointmentDefaultHeight\",\n    value: function value() {\n      return this._getAppointmentHeightByTheme();\n    }\n  }, {\n    key: \"_getAppointmentMinHeight\",\n    value: function value() {\n      return this._getAppointmentDefaultHeight();\n    }\n  }, {\n    key: \"_getAppointmentHeightByTheme\",\n    value: function value() {\n      return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT;\n    }\n  }, {\n    key: \"_getAppointmentDefaultWidth\",\n    value: function value() {\n      return this.getPositioningStrategy()._getAppointmentDefaultWidth();\n    }\n  }, {\n    key: \"_getAppointmentMinWidth\",\n    value: function value() {\n      return this._getAppointmentDefaultWidth();\n    }\n  }, {\n    key: \"_needVerticalGroupBounds\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"_needHorizontalGroupBounds\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"isVirtualScrolling\",\n    get: function get() {\n      return this.instance.fire(\"isVirtualScrolling\");\n    }\n  }]);\n\n  return BaseRenderingStrategy;\n}();\n\nvar _default = BaseRenderingStrategy;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js"],"names":["exports","default","_uiSchedulerAppointmentsPositioningStrategy","_interopRequireDefault","require","_uiSchedulerAppointmentsPositioningStrategy2","_extend","_date","_type","_themes","_utils","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","toMs","dateToMilliseconds","APPOINTMENT_MIN_SIZE","APPOINTMENT_DEFAULT_HEIGHT","COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT","DROP_DOWN_BUTTON_ADAPTIVE_SIZE","BaseRenderingStrategy","_initPositioningStrategy","value","fire","coordinates","isAllDay","top","getCollectorTopOffset","left","getCollectorLeftOffset","_positioningStrategy","_isAdaptive","items","_maxAppointmentCountPerCell","_defaultWidth","_defaultHeight","_allDayHeight","_allDayCellHeight","map","_getItemPosition","_isRtl","_correctRtlCoordinates","push","positionArray","_getSortedPositions","resultPositions","_getResultPositions","_getExtendedPositionMap","args","initialSize","intervalWidth","getAppointmentMinSize","initialWidth","width","Math","round","_getAppointmentMaxWidth","forEach","coordinate","appointmentReduced","getDefaultCellWidth","appointment","adapter","createAppointmentAdapter","position","_getAppointmentCoordinates","allDay","startDate","Date","result","j","height","calculateAppointmentHeight","calculateAppointmentWidth","resultWidth","multiWeekAppointmentParts","initialRowIndex","rowIndex","initialCellIndex","cellIndex","_needVerifyItemSize","currentMaxAllowedPosition","hMax","isAppointmentGreaterThan","_reduceMultiWeekAppointment","right","_getAppointmentParts","sourceAppointmentWidth","reducedWidth","extend","_getAppointmentPartsPosition","appointmentParts","unshift","concat","option","appointmentWidth","cellWidth","bound","floor","etalon","comparisonParameters","positionList","_this","createItem","bottom","cellPosition","rowCount","cellCount","_positionList$rowInde","sort","a","b","_sortCondition","isSomeEdge","_isSomeEdge","columnCondition","_normalizeCondition","rowCondition","cellPositionCondition","conditions","_getConditions","first","second","abs","firstItem","secondItem","areItemsInTheSameTable","areItemsAllDay","orientation","_getOrientation","_checkItemsCrossing","firstItemSide_1","firstItemSide_2","secondItemSide_1","ceil","secondItemSide_2","isItemCross","sortedArray","_this2","sortedIndex","currentItem","indexes","itemIndex","maxIndexInStack","stack","findFreeIndex","index","isFind","some","item","currentIndex","_skipSortedIndex","startNewStack","pushItemsInResult","count","_isItemsCross","max","min","_getMaxAppointmentCountPerCell","arr","iKey","jKey","iValue","jValue","len","positions","positionCounter","mapLength","resultString","itemLength","_checkLongCompactAppointment","_splitLongCompactAppointment","appointmentCountPerCell","_getMaxAppointmentCountPerCellByType","compactCount","isCompact","_getCompactAppointmentParts","k","compactPart","_getCompactLeftCoordinate","endDate","getTime","viewEndDate","roundToHour","endDayHour","_getCurrentViewOption","currentViewEndTime","setHours","getHours","duration","daylightDiff","getDaylightOffset","_needAdjustDuration","_calculateDurationByDaylightDiff","diff","countFullWidthAppointmentInCell","virtual","groupIndex","isObject","simple","intervalCount","getPositioningStrategy","getDropDownAppointmentWidth","getDropDownAppointmentHeight","topOffset","appointmentHeight","appointmentTop","_correctCollectorCoordinatesInAdaptive","_markAppointmentAsVirtual","empty","_isAppointmentEmpty","_getAppointmentMinHeight","_getAppointmentMinWidth","overlappingMode","offsets","_getOffsets","appointmentDefaultOffset","_getAppointmentDefaultOffset","_getAppointmentCount","ratio","_getDefaultRatio","maxHeight","_getMaxHeight","isNumeric","unlimited","offset","_getDynamicAppointmentCountPerCell","getDynamicAppointmentCountPerCell","current","split","pop","getAppointmentDefaultOffset","_getAppointmentHeightByTheme","_getAppointmentDefaultHeight","_isCompactTheme","_getAppointmentDefaultWidth","get","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiSchedulerAppointmentsPositioningStrategy = _interopRequireDefault(require(\"./ui.scheduler.appointmentsPositioning.strategy.base\"));\r\nvar _uiSchedulerAppointmentsPositioningStrategy2 = _interopRequireDefault(require(\"./ui.scheduler.appointmentsPositioning.strategy.adaptive\"));\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _themes = require(\"../../themes\");\r\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar APPOINTMENT_MIN_SIZE = 2;\r\nvar APPOINTMENT_DEFAULT_HEIGHT = 20;\r\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;\r\nvar DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;\r\nvar BaseRenderingStrategy = function() {\r\n    function BaseRenderingStrategy(instance) {\r\n        _classCallCheck(this, BaseRenderingStrategy);\r\n        this.instance = instance;\r\n        this._initPositioningStrategy()\r\n    }\r\n    _createClass(BaseRenderingStrategy, [{\r\n        key: \"_isAdaptive\",\r\n        value: function() {\r\n            return this.instance.fire(\"isAdaptive\")\r\n        }\r\n    }, {\r\n        key: \"_correctCollectorCoordinatesInAdaptive\",\r\n        value: function(coordinates, isAllDay) {\r\n            coordinates.top = coordinates.top + this.getCollectorTopOffset(isAllDay);\r\n            coordinates.left = coordinates.left + this.getCollectorLeftOffset()\r\n        }\r\n    }, {\r\n        key: \"_initPositioningStrategy\",\r\n        value: function() {\r\n            this._positioningStrategy = this._isAdaptive() ? new _uiSchedulerAppointmentsPositioningStrategy2.default(this) : new _uiSchedulerAppointmentsPositioningStrategy.default(this)\r\n        }\r\n    }, {\r\n        key: \"getPositioningStrategy\",\r\n        value: function() {\r\n            return this._positioningStrategy\r\n        }\r\n    }, {\r\n        key: \"getAppointmentMinSize\",\r\n        value: function() {\r\n            return APPOINTMENT_MIN_SIZE\r\n        }\r\n    }, {\r\n        key: \"keepAppointmentSettings\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"getDeltaTime\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"getAppointmentGeometry\",\r\n        value: function(coordinates) {\r\n            return coordinates\r\n        }\r\n    }, {\r\n        key: \"needCorrectAppointmentDates\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"getDirection\",\r\n        value: function() {\r\n            return \"horizontal\"\r\n        }\r\n    }, {\r\n        key: \"createTaskPositionMap\",\r\n        value: function(items) {\r\n            delete this._maxAppointmentCountPerCell;\r\n            var length = items && items.length;\r\n            if (!length) {\r\n                return\r\n            }\r\n            this._defaultWidth = this.instance.fire(\"getCellWidth\");\r\n            this._defaultHeight = this.instance.fire(\"getCellHeight\");\r\n            this._allDayHeight = this.instance._allDayCellHeight;\r\n            var map = [];\r\n            for (var i = 0; i < length; i++) {\r\n                var coordinates = this._getItemPosition(items[i]);\r\n                if (this._isRtl()) {\r\n                    coordinates = this._correctRtlCoordinates(coordinates)\r\n                }\r\n                map.push(coordinates)\r\n            }\r\n            var positionArray = this._getSortedPositions(map);\r\n            var resultPositions = this._getResultPositions(positionArray);\r\n            return this._getExtendedPositionMap(map, resultPositions)\r\n        }\r\n    }, {\r\n        key: \"_getDeltaWidth\",\r\n        value: function(args, initialSize) {\r\n            var intervalWidth = this.instance.fire(\"getResizableStep\") || this.getAppointmentMinSize();\r\n            var initialWidth = initialSize.width;\r\n            return Math.round((args.width - initialWidth) / intervalWidth)\r\n        }\r\n    }, {\r\n        key: \"_correctRtlCoordinates\",\r\n        value: function(coordinates) {\r\n            var width = coordinates[0].width || this._getAppointmentMaxWidth();\r\n            coordinates.forEach(function(coordinate) {\r\n                if (!coordinate.appointmentReduced) {\r\n                    coordinate.left -= width\r\n                }\r\n            });\r\n            return coordinates\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMaxWidth\",\r\n        value: function() {\r\n            return this.getDefaultCellWidth()\r\n        }\r\n    }, {\r\n        key: \"_getItemPosition\",\r\n        value: function(appointment) {\r\n            var adapter = this.instance.createAppointmentAdapter(appointment);\r\n            var position = this._getAppointmentCoordinates(appointment);\r\n            var allDay = this.isAllDay(appointment);\r\n            var startDate = new Date(adapter.startDate);\r\n            var result = [];\r\n            for (var j = 0; j < position.length; j++) {\r\n                var height = this.calculateAppointmentHeight(appointment, position[j]);\r\n                var width = this.calculateAppointmentWidth(appointment, position[j]);\r\n                var resultWidth = width;\r\n                var appointmentReduced = null;\r\n                var multiWeekAppointmentParts = [];\r\n                var initialRowIndex = position[j].rowIndex;\r\n                var initialCellIndex = position[j].cellIndex;\r\n                if (this._needVerifyItemSize() || allDay) {\r\n                    var currentMaxAllowedPosition = position[j].hMax;\r\n                    if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {\r\n                            left: position[j].left,\r\n                            width: width\r\n                        })) {\r\n                        appointmentReduced = \"head\";\r\n                        initialRowIndex = position[j].rowIndex;\r\n                        initialCellIndex = position[j].cellIndex;\r\n                        resultWidth = this._reduceMultiWeekAppointment(width, {\r\n                            left: position[j].left,\r\n                            right: currentMaxAllowedPosition\r\n                        });\r\n                        multiWeekAppointmentParts = this._getAppointmentParts({\r\n                            sourceAppointmentWidth: width,\r\n                            reducedWidth: resultWidth,\r\n                            height: height\r\n                        }, position[j], startDate);\r\n                        if (this._isRtl()) {\r\n                            position[j].left = currentMaxAllowedPosition\r\n                        }\r\n                    }\r\n                }(0, _extend.extend)(position[j], {\r\n                    height: height,\r\n                    width: resultWidth,\r\n                    allDay: allDay,\r\n                    rowIndex: initialRowIndex,\r\n                    cellIndex: initialCellIndex,\r\n                    appointmentReduced: appointmentReduced\r\n                });\r\n                result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentPartsPosition\",\r\n        value: function(appointmentParts, position, result) {\r\n            if (appointmentParts.length) {\r\n                appointmentParts.unshift(position);\r\n                result = result.concat(appointmentParts)\r\n            } else {\r\n                result.push(position)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentCoordinates\",\r\n        value: function(appointment) {\r\n            return this.instance.fire(\"createAppointmentSettings\", appointment)\r\n        }\r\n    }, {\r\n        key: \"_isRtl\",\r\n        value: function() {\r\n            return this.instance.option(\"rtlEnabled\")\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentParts\",\r\n        value: function() {\r\n            return []\r\n        }\r\n    }, {\r\n        key: \"_getCompactAppointmentParts\",\r\n        value: function(appointmentWidth) {\r\n            var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\r\n            return Math.round(appointmentWidth / cellWidth)\r\n        }\r\n    }, {\r\n        key: \"_reduceMultiWeekAppointment\",\r\n        value: function(sourceAppointmentWidth, bound) {\r\n            if (this._isRtl()) {\r\n                sourceAppointmentWidth = Math.floor(bound.left - bound.right)\r\n            } else {\r\n                sourceAppointmentWidth = bound.right - Math.floor(bound.left)\r\n            }\r\n            return sourceAppointmentWidth\r\n        }\r\n    }, {\r\n        key: \"calculateAppointmentHeight\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"calculateAppointmentWidth\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"isAppointmentGreaterThan\",\r\n        value: function(etalon, comparisonParameters) {\r\n            var result = comparisonParameters.left + comparisonParameters.width - etalon;\r\n            if (this._isRtl()) {\r\n                result = etalon + comparisonParameters.width - comparisonParameters.left\r\n            }\r\n            return result > this.getDefaultCellWidth() / 2\r\n        }\r\n    }, {\r\n        key: \"isAllDay\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"cropAppointmentWidth\",\r\n        value: function(width, cellWidth) {\r\n            if (this.instance.fire(\"isGroupedByDate\")) {\r\n                width = cellWidth\r\n            }\r\n            return width\r\n        }\r\n    }, {\r\n        key: \"_getSortedPositions\",\r\n        value: function(positionList) {\r\n            var _this = this;\r\n            var result = [];\r\n            var round = function(value) {\r\n                return Math.round(100 * value) / 100\r\n            };\r\n            var createItem = function(rowIndex, cellIndex, top, left, bottom, right, position, allDay) {\r\n                return {\r\n                    i: rowIndex,\r\n                    j: cellIndex,\r\n                    top: round(top),\r\n                    left: round(left),\r\n                    bottom: round(bottom),\r\n                    right: round(right),\r\n                    cellPosition: position,\r\n                    allDay: allDay\r\n                }\r\n            };\r\n            for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {\r\n                for (var cellIndex = 0, cellCount = positionList[rowIndex].length; cellIndex < cellCount; cellIndex++) {\r\n                    var _positionList$rowInde = positionList[rowIndex][cellIndex],\r\n                        top = _positionList$rowInde.top,\r\n                        left = _positionList$rowInde.left,\r\n                        height = _positionList$rowInde.height,\r\n                        width = _positionList$rowInde.width,\r\n                        cellPosition = _positionList$rowInde.cellPosition,\r\n                        allDay = _positionList$rowInde.allDay;\r\n                    result.push(createItem(rowIndex, cellIndex, top, left, top + height, left + width, cellPosition, allDay))\r\n                }\r\n            }\r\n            return result.sort(function(a, b) {\r\n                return _this._sortCondition(a, b)\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_sortCondition\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getConditions\",\r\n        value: function(a, b) {\r\n            var isSomeEdge = this._isSomeEdge(a, b);\r\n            return {\r\n                columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),\r\n                rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),\r\n                cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_rowCondition\",\r\n        value: function(a, b) {\r\n            var conditions = this._getConditions(a, b);\r\n            return conditions.columnCondition || conditions.rowCondition\r\n        }\r\n    }, {\r\n        key: \"_columnCondition\",\r\n        value: function(a, b) {\r\n            var conditions = this._getConditions(a, b);\r\n            return conditions.rowCondition || conditions.columnCondition\r\n        }\r\n    }, {\r\n        key: \"_isSomeEdge\",\r\n        value: function(a, b) {\r\n            return a.i === b.i && a.j === b.j\r\n        }\r\n    }, {\r\n        key: \"_normalizeCondition\",\r\n        value: function(first, second) {\r\n            var result = first - second;\r\n            return Math.abs(result) > 1 ? result : 0\r\n        }\r\n    }, {\r\n        key: \"_isItemsCross\",\r\n        value: function(firstItem, secondItem) {\r\n            var areItemsInTheSameTable = !!firstItem.allDay === !!secondItem.allDay;\r\n            var areItemsAllDay = firstItem.allDay && secondItem.allDay;\r\n            if (areItemsInTheSameTable) {\r\n                var orientation = this._getOrientation(areItemsAllDay);\r\n                return this._checkItemsCrossing(firstItem, secondItem, orientation)\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_checkItemsCrossing\",\r\n        value: function(firstItem, secondItem, orientation) {\r\n            var firstItemSide_1 = Math.floor(firstItem[orientation[0]]);\r\n            var firstItemSide_2 = Math.floor(firstItem[orientation[1]]);\r\n            var secondItemSide_1 = Math.ceil(secondItem[orientation[0]]);\r\n            var secondItemSide_2 = Math.ceil(secondItem[orientation[1]]);\r\n            var isItemCross = Math.abs(firstItem[orientation[2]] - secondItem[orientation[2]]) <= 1;\r\n            return isItemCross && (firstItemSide_1 <= secondItemSide_1 && firstItemSide_2 > secondItemSide_1 || firstItemSide_1 < secondItemSide_2 && firstItemSide_2 >= secondItemSide_2 || firstItemSide_1 === secondItemSide_1 && firstItemSide_2 === secondItemSide_2)\r\n        }\r\n    }, {\r\n        key: \"_getOrientation\",\r\n        value: function(isAllDay) {\r\n            return isAllDay ? [\"left\", \"right\", \"top\"] : [\"top\", \"bottom\", \"left\"]\r\n        }\r\n    }, {\r\n        key: \"_getResultPositions\",\r\n        value: function(sortedArray) {\r\n            var _this2 = this;\r\n            var result = [];\r\n            var i;\r\n            var sortedIndex = 0;\r\n            var currentItem;\r\n            var indexes;\r\n            var itemIndex;\r\n            var maxIndexInStack = 0;\r\n            var stack = {};\r\n            var findFreeIndex = function findFreeIndex(indexes, index) {\r\n                var isFind = indexes.some(function(item) {\r\n                    return item === index\r\n                });\r\n                if (isFind) {\r\n                    return findFreeIndex(indexes, ++index)\r\n                } else {\r\n                    return index\r\n                }\r\n            };\r\n            var createItem = function(currentItem, index) {\r\n                var currentIndex = index || 0;\r\n                return {\r\n                    index: currentIndex,\r\n                    i: currentItem.i,\r\n                    j: currentItem.j,\r\n                    left: currentItem.left,\r\n                    right: currentItem.right,\r\n                    top: currentItem.top,\r\n                    bottom: currentItem.bottom,\r\n                    allDay: currentItem.allDay,\r\n                    sortedIndex: _this2._skipSortedIndex(currentIndex) ? null : sortedIndex++\r\n                }\r\n            };\r\n            var startNewStack = function(currentItem) {\r\n                stack.items = [createItem(currentItem)];\r\n                stack.left = currentItem.left;\r\n                stack.right = currentItem.right;\r\n                stack.top = currentItem.top;\r\n                stack.bottom = currentItem.bottom;\r\n                stack.allDay = currentItem.allDay\r\n            };\r\n            var pushItemsInResult = function(items) {\r\n                items.forEach(function(item) {\r\n                    result.push({\r\n                        index: item.index,\r\n                        count: maxIndexInStack + 1,\r\n                        i: item.i,\r\n                        j: item.j,\r\n                        sortedIndex: item.sortedIndex\r\n                    })\r\n                })\r\n            };\r\n            for (i = 0; i < sortedArray.length; i++) {\r\n                currentItem = sortedArray[i];\r\n                indexes = [];\r\n                if (!stack.items) {\r\n                    startNewStack(currentItem)\r\n                } else {\r\n                    if (this._isItemsCross(stack, currentItem)) {\r\n                        stack.items.forEach(function(item, index) {\r\n                            if (_this2._isItemsCross(item, currentItem)) {\r\n                                indexes.push(item.index)\r\n                            }\r\n                        });\r\n                        itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;\r\n                        stack.items.push(createItem(currentItem, itemIndex));\r\n                        maxIndexInStack = Math.max(itemIndex, maxIndexInStack);\r\n                        stack.left = Math.min(stack.left, currentItem.left);\r\n                        stack.right = Math.max(stack.right, currentItem.right);\r\n                        stack.top = Math.min(stack.top, currentItem.top);\r\n                        stack.bottom = Math.max(stack.bottom, currentItem.bottom);\r\n                        stack.allDay = currentItem.allDay\r\n                    } else {\r\n                        pushItemsInResult(stack.items);\r\n                        stack = {};\r\n                        startNewStack(currentItem);\r\n                        maxIndexInStack = 0\r\n                    }\r\n                }\r\n            }\r\n            if (stack.items) {\r\n                pushItemsInResult(stack.items)\r\n            }\r\n            return result.sort(function(a, b) {\r\n                var columnCondition = a.j - b.j;\r\n                var rowCondition = a.i - b.i;\r\n                return rowCondition ? rowCondition : columnCondition\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_skipSortedIndex\",\r\n        value: function(index) {\r\n            return index > this._getMaxAppointmentCountPerCell() - 1\r\n        }\r\n    }, {\r\n        key: \"_findIndexByKey\",\r\n        value: function(arr, iKey, jKey, iValue, jValue) {\r\n            var result = 0;\r\n            for (var i = 0, len = arr.length; i < len; i++) {\r\n                if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {\r\n                    result = i;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getExtendedPositionMap\",\r\n        value: function(map, positions) {\r\n            var positionCounter = 0;\r\n            var result = [];\r\n            for (var i = 0, mapLength = map.length; i < mapLength; i++) {\r\n                var resultString = [];\r\n                for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {\r\n                    map[i][j].index = positions[positionCounter].index;\r\n                    map[i][j].sortedIndex = positions[positionCounter].sortedIndex;\r\n                    map[i][j].count = positions[positionCounter++].count;\r\n                    resultString.push(map[i][j]);\r\n                    this._checkLongCompactAppointment(map[i][j], resultString)\r\n                }\r\n                result.push(resultString)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_checkLongCompactAppointment\",\r\n        value: function(item, result) {\r\n            this._splitLongCompactAppointment(item, result);\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_splitLongCompactAppointment\",\r\n        value: function(item, result) {\r\n            var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);\r\n            var compactCount = 0;\r\n            if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {\r\n                item.isCompact = true;\r\n                compactCount = this._getCompactAppointmentParts(item.width);\r\n                for (var k = 1; k < compactCount; k++) {\r\n                    var compactPart = (0, _extend.extend)(true, {}, item);\r\n                    compactPart.left = this._getCompactLeftCoordinate(item.left, k);\r\n                    compactPart.cellIndex = compactPart.cellIndex + k;\r\n                    compactPart.sortedIndex = null;\r\n                    result.push(compactPart)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"normalizeEndDateByViewEnd\",\r\n        value: function(appointment, endDate) {\r\n            var result = new Date(endDate.getTime());\r\n            if (!this.isAllDay(appointment)) {\r\n                var viewEndDate = _date.default.roundToHour(this.instance.fire(\"getEndViewDate\"));\r\n                if (result > viewEndDate) {\r\n                    result = viewEndDate\r\n                }\r\n            }\r\n            var endDayHour = this.instance._getCurrentViewOption(\"endDayHour\");\r\n            var allDay = this.instance.fire(\"getField\", \"allDay\", appointment);\r\n            var currentViewEndTime = new Date(new Date(endDate.getTime()).setHours(endDayHour, 0, 0, 0));\r\n            if (result.getTime() > currentViewEndTime.getTime() || allDay && result.getHours() < endDayHour) {\r\n                result = currentViewEndTime\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_adjustDurationByDaylightDiff\",\r\n        value: function(duration, startDate, endDate) {\r\n            var daylightDiff = _utils.default.getDaylightOffset(startDate, endDate);\r\n            return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration\r\n        }\r\n    }, {\r\n        key: \"_needAdjustDuration\",\r\n        value: function(diff) {\r\n            return 0 !== diff\r\n        }\r\n    }, {\r\n        key: \"_calculateDurationByDaylightDiff\",\r\n        value: function(duration, diff) {\r\n            return duration + diff * toMs(\"minute\")\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDurationInMs\",\r\n        value: function(startDate, endDate, allDay) {\r\n            return this.instance.fire(\"getAppointmentDurationInMs\", {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                allDay: allDay\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_markAppointmentAsVirtual\",\r\n        value: function(coordinates, isAllDay) {\r\n            var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);\r\n            if (coordinates.count - countFullWidthAppointmentInCell > 0) {\r\n                coordinates.virtual = {\r\n                    top: coordinates.top,\r\n                    left: coordinates.left,\r\n                    index: \"tail\" === coordinates.appointmentReduced ? coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex : coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex + \"-tail\",\r\n                    isAllDay: isAllDay\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getMaxAppointmentCountPerCellByType\",\r\n        value: function(isAllDay) {\r\n            var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();\r\n            if ((0, _type.isObject)(appointmentCountPerCell)) {\r\n                return isAllDay ? this._getMaxAppointmentCountPerCell().allDay : this._getMaxAppointmentCountPerCell().simple\r\n            } else {\r\n                return appointmentCountPerCell\r\n            }\r\n        }\r\n    }, {\r\n        key: \"getDropDownAppointmentWidth\",\r\n        value: function(intervalCount, isAllDay) {\r\n            return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay)\r\n        }\r\n    }, {\r\n        key: \"getDropDownAppointmentHeight\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getDropDownAppointmentHeight()\r\n        }\r\n    }, {\r\n        key: \"getDropDownButtonAdaptiveSize\",\r\n        value: function() {\r\n            return DROP_DOWN_BUTTON_ADAPTIVE_SIZE\r\n        }\r\n    }, {\r\n        key: \"getDefaultCellWidth\",\r\n        value: function() {\r\n            return this._defaultWidth\r\n        }\r\n    }, {\r\n        key: \"getDefaultCellHeight\",\r\n        value: function() {\r\n            return this._defaultHeight\r\n        }\r\n    }, {\r\n        key: \"getDefaultAllDayCellHeight\",\r\n        value: function() {\r\n            return this._allDayHeight\r\n        }\r\n    }, {\r\n        key: \"getCollectorTopOffset\",\r\n        value: function(allDay) {\r\n            return this.getPositioningStrategy().getCollectorTopOffset(allDay)\r\n        }\r\n    }, {\r\n        key: \"getCollectorLeftOffset\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getCollectorLeftOffset()\r\n        }\r\n    }, {\r\n        key: \"getAppointmentDataCalculator\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_customizeCoordinates\",\r\n        value: function(coordinates, height, appointmentCountPerCell, topOffset, isAllDay) {\r\n            var index = coordinates.index;\r\n            var appointmentHeight = height / appointmentCountPerCell;\r\n            var appointmentTop = coordinates.top + index * appointmentHeight;\r\n            var top = appointmentTop + topOffset;\r\n            var width = coordinates.width;\r\n            var left = coordinates.left;\r\n            if (coordinates.isCompact) {\r\n                this._isAdaptive() && this._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay);\r\n                this._markAppointmentAsVirtual(coordinates, isAllDay)\r\n            }\r\n            return {\r\n                height: appointmentHeight,\r\n                width: width,\r\n                top: top,\r\n                left: left,\r\n                empty: this._isAppointmentEmpty(height, width)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_isAppointmentEmpty\",\r\n        value: function(height, width) {\r\n            return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth()\r\n        }\r\n    }, {\r\n        key: \"_calculateGeometryConfig\",\r\n        value: function(coordinates) {\r\n            var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\r\n            var offsets = this._getOffsets();\r\n            var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\r\n            var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\r\n            var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\r\n            var maxHeight = this._getMaxHeight();\r\n            if (!(0, _type.isNumeric)(appointmentCountPerCell)) {\r\n                appointmentCountPerCell = coordinates.count;\r\n                ratio = (maxHeight - offsets.unlimited) / maxHeight\r\n            }\r\n            var topOffset = (1 - ratio) * maxHeight;\r\n            if (\"auto\" === overlappingMode || (0, _type.isNumeric)(overlappingMode)) {\r\n                ratio = 1;\r\n                maxHeight -= appointmentDefaultOffset;\r\n                topOffset = appointmentDefaultOffset\r\n            }\r\n            return {\r\n                height: ratio * maxHeight,\r\n                appointmentCountPerCell: appointmentCountPerCell,\r\n                offset: topOffset\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentCount\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getDefaultRatio\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getOffsets\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getMaxHeight\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_needVerifyItemSize\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"needSeparateAppointment\",\r\n        value: function(allDay) {\r\n            return this.instance.fire(\"isGroupedByDate\") && allDay\r\n        }\r\n    }, {\r\n        key: \"_getMaxAppointmentCountPerCell\",\r\n        value: function() {\r\n            if (!this._maxAppointmentCountPerCell) {\r\n                var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\r\n                var appointmentCountPerCell;\r\n                if ((0, _type.isNumeric)(overlappingMode)) {\r\n                    appointmentCountPerCell = overlappingMode\r\n                }\r\n                if (\"auto\" === overlappingMode) {\r\n                    appointmentCountPerCell = this._getDynamicAppointmentCountPerCell()\r\n                }\r\n                if (\"unlimited\" === overlappingMode) {\r\n                    appointmentCountPerCell = void 0\r\n                }\r\n                this._maxAppointmentCountPerCell = appointmentCountPerCell\r\n            }\r\n            return this._maxAppointmentCountPerCell\r\n        }\r\n    }, {\r\n        key: \"_getDynamicAppointmentCountPerCell\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getDynamicAppointmentCountPerCell()\r\n        }\r\n    }, {\r\n        key: \"hasAllDayAppointments\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_isCompactTheme\",\r\n        value: function() {\r\n            return \"compact\" === ((0, _themes.current)() || \"\").split(\".\").pop()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultOffset\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getAppointmentDefaultOffset()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultHeight\",\r\n        value: function() {\r\n            return this._getAppointmentHeightByTheme()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMinHeight\",\r\n        value: function() {\r\n            return this._getAppointmentDefaultHeight()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentHeightByTheme\",\r\n        value: function() {\r\n            return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultWidth\",\r\n        value: function() {\r\n            return this.getPositioningStrategy()._getAppointmentDefaultWidth()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMinWidth\",\r\n        value: function() {\r\n            return this._getAppointmentDefaultWidth()\r\n        }\r\n    }, {\r\n        key: \"_needVerticalGroupBounds\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_needHorizontalGroupBounds\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"isVirtualScrolling\",\r\n        get: function() {\r\n            return this.instance.fire(\"isVirtualScrolling\")\r\n        }\r\n    }]);\r\n    return BaseRenderingStrategy\r\n}();\r\nvar _default = BaseRenderingStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}