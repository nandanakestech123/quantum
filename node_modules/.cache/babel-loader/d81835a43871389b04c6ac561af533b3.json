{"ast":null,"code":"import _objectSpread from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{StaffActionType}from'redux/actions/actionType';import{staff}from'service/apiVariables';// create staff action\nexport var createStaff=function createStaff(body){return function(dispatch,getState,_ref){var api=_ref.api,Toast=_ref.Toast;return new Promise(function(resolve,reject){api(_objectSpread(_objectSpread({},staff.addStaff),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status,data=response.data;if(status===200){// dispatch({ type: StaffActionType.getStaffDetail, payload: data });\nToast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref2){var message=_ref2.message;reject(Toast({type:'error',message:message}));});});};};// update staff action\nexport var updateStaff=function updateStaff(id,body){return function(dispatch,getState,_ref3){var api=_ref3.api,Toast=_ref3.Toast;return new Promise(function(resolve,reject){staff.updateStaff.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},staff.updateStaff),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref4){var message=_ref4.message;reject(Toast({type:'error',message:message}));});});};};// delete staff action\nexport var deleteStaff=function deleteStaff(id,body){return function(dispatch,getState,_ref5){var api=_ref5.api,Toast=_ref5.Toast;return new Promise(function(resolve,reject){staff.deleteStaff.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},staff.deleteStaff),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref6){var message=_ref6.message;reject(Toast({type:'error',message:message}));});});};};// get staff  action\nexport var getStaff=function getStaff(id){return function(dispatch,getState,_ref7){var api=_ref7.api,Toast=_ref7.Toast;return new Promise(function(resolve,reject){staff.getStaff.addQuery={key:'id',payload:id};api(_objectSpread({},staff.getStaff)).then(function(response){resolve(response);var message=response.message,status=response.status,data=response.data;if(status===200){dispatch({type:StaffActionType.getStaffDetail,payload:data});// Toast({ type: 'success', message })\n}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref8){var message=_ref8.message;reject(Toast({type:'error',message:message}));});});};};// get staff availability action\nexport var getStaffAvailability=function getStaffAvailability(id){return function(dispatch,getState,_ref9){var api=_ref9.api,Toast=_ref9.Toast;return new Promise(function(resolve,reject){staff.getStaffAvailability.addQuery={key:'id',payload:id};api(_objectSpread({},staff.getStaffAvailability)).then(function(response){resolve(response);var message=response.message,status=response.status,data=response.data;if(status===200){// dispatch({ type: StaffActionType.getStaffDetail, payload: data });\n// Toast({ type: 'success', message })\n}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref10){var message=_ref10.message;reject(Toast({type:'error',message:message}));});});};};// get staff branchwise action\nexport var getStaffBranchwise=function getStaffBranchwise(id){return function(dispatch,getState,_ref11){var api=_ref11.api,Toast=_ref11.Toast;return new Promise(function(resolve,reject){staff.getStaffBranchwise.addQuery={key:'id',payload:id};api(_objectSpread({},staff.getStaffBranchwise)).then(function(response){resolve(response);var message=response.message,status=response.status,data=response.data;if(status===200){// dispatch({ type: StaffActionType.getStaffDetail, payload: data });\n// Toast({ type: 'success', message })\n}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref12){var message=_ref12.message;reject(Toast({type:'error',message:message}));});});};};","map":{"version":3,"sources":["E:/newfrontend/webfe/src/redux/actions/staff.js"],"names":["StaffActionType","staff","createStaff","body","dispatch","getState","api","Toast","Promise","resolve","reject","addStaff","then","response","message","status","data","type","catch","updateStaff","id","addQuery","key","payload","deleteStaff","getStaff","getStaffDetail","getStaffAvailability","getStaffBranchwise"],"mappings":"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","sourcesContent":["import { StaffActionType } from 'redux/actions/actionType';\r\nimport { staff } from 'service/apiVariables';\r\n\r\n// create staff action\r\nexport const createStaff = (body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    api({ ...staff.addStaff, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status, data } =  response\r\n        if(status===200){\r\n          // dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// update staff action\r\nexport const updateStaff = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    staff.updateStaff.addQuery = { key: 'id', payload: id };\r\n    api({ ...staff.updateStaff, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } =  response\r\n        if(status===200){\r\n          // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// delete staff action\r\nexport const deleteStaff = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    staff.deleteStaff.addQuery = { key: 'id', payload: id };\r\n    api({ ...staff.deleteStaff, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } =  response\r\n        if(status===200){\r\n          // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// get staff  action\r\nexport const getStaff = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    staff.getStaff.addQuery = { key: 'id', payload: id };\r\n    api({ ...staff.getStaff })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status, data } =  response\r\n        if(status===200){\r\n          dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// get staff availability action\r\nexport const getStaffAvailability = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    staff.getStaffAvailability.addQuery = { key: 'id', payload: id };\r\n    api({ ...staff.getStaffAvailability })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status, data } =  response\r\n        if(status===200){\r\n          // dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// get staff branchwise action\r\nexport const getStaffBranchwise = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    staff.getStaffBranchwise.addQuery = { key: 'id', payload: id };\r\n    api({ ...staff.getStaffBranchwise })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status, data } =  response\r\n        if(status===200){\r\n          // dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};"]},"metadata":{},"sourceType":"module"}