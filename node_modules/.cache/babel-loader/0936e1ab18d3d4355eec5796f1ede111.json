{"ast":null,"code":"/**\r\n * DevExtreme (viz/tree_map/tree_map.base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _common = require(\"./common\");\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nvar _tiling = require(\"./tiling\");\n\nvar _colorizing = require(\"./colorizing\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _common2 = require(\"../../core/utils/common\");\n\nvar _base_widget = _interopRequireDefault(require(\"../core/base_widget\"));\n\nrequire(\"./tiling.squarified\");\n\nrequire(\"./colorizing.discrete\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _data_source = require(\"../core/data_source\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _max = Math.max;\nvar directions = {\n  lefttoprightbottom: [1, 1],\n  leftbottomrighttop: [1, -1],\n  righttopleftbottom: [-1, 1],\n  rightbottomlefttop: [-1, -1]\n};\n(0, _tiling.setDefaultAlgorithm)(\"squarified\");\n(0, _colorizing.setDefaultColorizer)(\"discrete\");\n\nfunction pickPositiveInteger(val) {\n  return val > 0 ? Math.round(val) : 0;\n}\n\nvar dxTreeMap = _base_widget.default.inherit({\n  _handlers: {\n    beginBuildNodes: _common2.noop,\n    buildNode: _common2.noop,\n    endBuildNodes: _common2.noop,\n    setTrackerData: _common2.noop,\n    calculateState: function (options) {\n      return (0, _common.buildRectAppearance)(options);\n    }\n  },\n  _rootClass: \"dxtm-tree-map\",\n  _rootClassPrefix: \"dxtm\",\n  _getDefaultSize: function () {\n    return {\n      width: 400,\n      height: 400\n    };\n  },\n  _themeSection: \"treeMap\",\n  _fontFields: [\"tile.label.font\", \"group.label.font\"],\n  _init: function () {\n    var that = this;\n    that._rectOffsets = {};\n    that._handlers = Object.create(that._handlers);\n    that._context = {\n      suspend: function () {\n        if (!that._applyingChanges) {\n          that._suspendChanges();\n        }\n      },\n      resume: function () {\n        if (!that._applyingChanges) {\n          that._resumeChanges();\n        }\n      },\n      change: function (codes) {\n        that._change(codes);\n      },\n      settings: [{}, {}],\n      calculateState: that._handlers.calculateState,\n      calculateLabelState: _common.buildTextAppearance\n    };\n    that._root = that._topNode = {\n      nodes: []\n    };\n    that.callBase.apply(that, arguments);\n  },\n  _initialChanges: [\"DATA_SOURCE\"],\n  _initCore: function () {\n    var that = this;\n    var renderer = that._renderer;\n\n    that._createProxyType();\n\n    that._tilesGroup = renderer.g().linkOn(renderer.root, \"tiles\").linkAppend();\n    that._labelsGroup = renderer.g().linkOn(renderer.root, \"labels\").linkAppend();\n  },\n  _createProxyType: _common2.noop,\n  _disposeCore: function () {\n    var that = this;\n    that._filter && that._filter.dispose();\n\n    that._labelsGroup.linkOff();\n\n    that._tilesGroup.linkOff();\n  },\n  _applySize: function (rect) {\n    this._tilingRect = rect.slice();\n\n    this._change([\"TILING\"]);\n  },\n  _optionChangesMap: {\n    dataSource: \"DATA_SOURCE\",\n    valueField: \"NODES_CREATE\",\n    childrenField: \"NODES_CREATE\",\n    colorField: \"TILES\",\n    colorizer: \"TILES\",\n    labelField: \"LABELS\",\n    tile: \"TILE_SETTINGS\",\n    group: \"GROUP_SETTINGS\",\n    maxDepth: \"MAX_DEPTH\",\n    layoutAlgorithm: \"TILING\",\n    layoutDirection: \"TILING\"\n  },\n  _themeDependentChanges: [\"TILE_SETTINGS\", \"GROUP_SETTINGS\", \"MAX_DEPTH\"],\n  _changeDataSource: function () {\n    var that = this;\n    that._isDataExpected = that._isSyncData = true;\n\n    that._updateDataSource();\n\n    that._isSyncData = false;\n\n    if (that._isDataExpected) {\n      that._suspendChanges();\n    }\n  },\n  _dataSourceChangedHandler: function () {\n    var that = this;\n\n    if (that._isDataExpected) {\n      that._isDataExpected = false;\n\n      that._change([\"NODES_CREATE\"]);\n\n      if (!that._isSyncData) {\n        that._resumeChanges();\n      }\n    } else {\n      that._requestChange([\"NODES_CREATE\"]);\n    }\n  },\n  _optionChangesOrder: [\"DATA_SOURCE\", \"TILE_SETTINGS\", \"GROUP_SETTINGS\", \"MAX_DEPTH\"],\n  _change_DATA_SOURCE: function () {\n    this._changeDataSource();\n  },\n  _change_TILE_SETTINGS: function () {\n    this._changeTileSettings();\n  },\n  _change_GROUP_SETTINGS: function () {\n    this._changeGroupSettings();\n  },\n  _change_MAX_DEPTH: function () {\n    this._changeMaxDepth();\n  },\n  _customChangesOrder: [\"NODES_CREATE\", \"NODES_RESET\", \"TILES\", \"LABELS\", \"TILING\", \"LABELS_LAYOUT\"],\n  _change_NODES_CREATE: function () {\n    this._buildNodes();\n  },\n  _change_NODES_RESET: function () {\n    this._resetNodes();\n  },\n  _change_TILES: function () {\n    this._applyTilesAppearance();\n  },\n  _change_LABELS: function () {\n    this._applyLabelsAppearance();\n  },\n  _change_TILING: function () {\n    this._performTiling();\n  },\n  _change_LABELS_LAYOUT: function () {\n    this._performLabelsLayout();\n  },\n  _applyChanges: function () {\n    var that = this;\n    that.callBase.apply(that, arguments);\n\n    if (!that._isDataExpected) {\n      that._drawn();\n    }\n\n    that._context.forceReset = false;\n  },\n  _buildNodes: function () {\n    var that = this;\n    var root = that._root = that._topNode = new _node.default();\n    root._id = 0;\n    root.parent = {};\n    root.data = {};\n    root.level = root.index = -1;\n    root.ctx = that._context;\n    root.label = null;\n    that._nodes = [root];\n\n    that._handlers.beginBuildNodes();\n\n    var processedData = that._processDataSourceItems(that._dataSourceItems() || []);\n\n    traverseDataItems(root, processedData.items, 0, {\n      itemsField: !processedData.isPlain && that._getOption(\"childrenField\", true) || \"items\",\n      valueField: that._getOption(\"valueField\", true) || \"value\",\n      buildNode: that._handlers.buildNode,\n      ctx: that._context,\n      nodes: that._nodes\n    });\n\n    that._onNodesCreated();\n\n    that._handlers.endBuildNodes();\n\n    that._change([\"NODES_RESET\"]);\n  },\n  _onNodesCreated: _common2.noop,\n  _processDataSourceItems: function (items) {\n    return {\n      items: items,\n      isPlain: false\n    };\n  },\n  _changeTileSettings: function () {\n    var that = this;\n\n    var options = that._getOption(\"tile\");\n\n    var offsets = that._rectOffsets;\n    var borderWidth = pickPositiveInteger(options.border.width);\n    var edgeOffset = borderWidth / 2;\n    var innerOffset = 1 & borderWidth ? .5 : 0;\n    var labelOptions = options.label;\n    var settings = that._context.settings[0];\n\n    that._change([\"TILES\", \"LABELS\"]);\n\n    settings.state = that._handlers.calculateState(options);\n    that._filter = that._filter || that._renderer.shadowFilter(\"-50%\", \"-50%\", \"200%\", \"200%\");\n\n    that._filter.attr(labelOptions.shadow);\n\n    that._calculateLabelSettings(settings, labelOptions, that._filter.id);\n\n    if (offsets.tileEdge !== edgeOffset || offsets.tileInner !== innerOffset) {\n      offsets.tileEdge = edgeOffset;\n      offsets.tileInner = innerOffset;\n\n      that._change([\"TILING\"]);\n    }\n  },\n  _changeGroupSettings: function () {\n    var that = this;\n\n    var options = that._getOption(\"group\");\n\n    var labelOptions = options.label;\n    var offsets = that._rectOffsets;\n    var borderWidth = pickPositiveInteger(options.border.width);\n    var edgeOffset = borderWidth / 2;\n    var innerOffset = 1 & borderWidth ? .5 : 0;\n    var headerHeight = 0;\n    var groupPadding = pickPositiveInteger(options.padding);\n    var settings = that._context.settings[1];\n\n    that._change([\"TILES\", \"LABELS\"]);\n\n    settings.state = that._handlers.calculateState(options);\n\n    that._calculateLabelSettings(settings, labelOptions);\n\n    if (options.headerHeight >= 0) {\n      headerHeight = pickPositiveInteger(options.headerHeight);\n    } else {\n      headerHeight = settings.labelParams.height + 2 * pickPositiveInteger(labelOptions.paddingTopBottom);\n    }\n\n    if (that._headerHeight !== headerHeight) {\n      that._headerHeight = headerHeight;\n\n      that._change([\"TILING\"]);\n    }\n\n    if (that._groupPadding !== groupPadding) {\n      that._groupPadding = groupPadding;\n\n      that._change([\"TILING\"]);\n    }\n\n    if (offsets.headerEdge !== edgeOffset || offsets.headerInner !== innerOffset) {\n      offsets.headerEdge = edgeOffset;\n      offsets.headerInner = innerOffset;\n\n      that._change([\"TILING\"]);\n    }\n  },\n  _calculateLabelSettings: function (settings, options, filter) {\n    var bBox = this._getTextBBox(options.font);\n\n    var paddingLeftRight = pickPositiveInteger(options.paddingLeftRight);\n    var paddingTopBottom = pickPositiveInteger(options.paddingTopBottom);\n\n    var tileLabelOptions = this._getOption(\"tile.label\");\n\n    var groupLabelOptions = this._getOption(\"group.label\");\n\n    settings.labelState = (0, _common.buildTextAppearance)(options, filter);\n    settings.labelState.visible = !(\"visible\" in options) || !!options.visible;\n    settings.labelParams = {\n      height: bBox.height,\n      rtlEnabled: this._getOption(\"rtlEnabled\", true),\n      paddingTopBottom: paddingTopBottom,\n      paddingLeftRight: paddingLeftRight,\n      tileLabelWordWrap: tileLabelOptions.wordWrap,\n      tileLabelOverflow: tileLabelOptions.textOverflow,\n      groupLabelOverflow: groupLabelOptions.textOverflow\n    };\n  },\n  _changeMaxDepth: function () {\n    var maxDepth = this._getOption(\"maxDepth\", true);\n\n    maxDepth = maxDepth >= 1 ? Math.round(maxDepth) : 1 / 0;\n\n    if (this._maxDepth !== maxDepth) {\n      this._maxDepth = maxDepth;\n\n      this._change([\"NODES_RESET\"]);\n    }\n  },\n  _resetNodes: function () {\n    var that = this;\n\n    that._tilesGroup.clear();\n\n    that._renderer.initHatching();\n\n    that._context.forceReset = true;\n    that._context.minLevel = that._topNode.level + 1;\n    that._context.maxLevel = that._context.minLevel + that._maxDepth - 1;\n\n    that._change([\"TILES\", \"LABELS\", \"TILING\"]);\n  },\n  _processNodes: function (context, process) {\n    processNodes(context, this._topNode, process);\n  },\n  _applyTilesAppearance: function () {\n    var that = this;\n    var colorizer = (0, _colorizing.getColorizer)(that._getOption(\"colorizer\"), that._themeManager, that._topNode);\n\n    that._processNodes({\n      renderer: that._renderer,\n      group: that._tilesGroup,\n      setTrackerData: that._handlers.setTrackerData,\n      colorField: that._getOption(\"colorField\", true) || \"color\",\n      getColor: colorizer\n    }, processTileAppearance);\n  },\n  _applyLabelsAppearance: function () {\n    var that = this;\n\n    that._labelsGroup.clear();\n\n    that._processNodes({\n      renderer: that._renderer,\n      group: that._labelsGroup,\n      setTrackerData: that._handlers.setTrackerData,\n      labelField: that._getOption(\"labelField\", true) || \"name\"\n    }, processLabelAppearance);\n\n    that._change([\"LABELS_LAYOUT\"]);\n  },\n  _performTiling: function () {\n    var that = this;\n    var context = {\n      algorithm: (0, _tiling.getAlgorithm)(that._getOption(\"layoutAlgorithm\", true)),\n      directions: directions[String(that._getOption(\"layoutDirection\", true)).toLowerCase()] || directions.lefttoprightbottom,\n      headerHeight: that._headerHeight,\n      groupPadding: that._groupPadding,\n      rectOffsets: that._rectOffsets\n    };\n    that._topNode.innerRect = that._tilingRect;\n    calculateRects(context, that._topNode);\n\n    that._processNodes(context, processTiling);\n\n    that._change([\"LABELS_LAYOUT\"]);\n\n    that._onTilingPerformed();\n  },\n  _onTilingPerformed: _common2.noop,\n  _performLabelsLayout: function () {\n    this._processNodes(null, processLabelsLayout);\n  },\n  _getTextBBox: function (fontOptions) {\n    var renderer = this._renderer;\n    var text = this._textForCalculations || renderer.text(\"0\", 0, 0);\n    this._textForCalculations = text;\n    text.css((0, _utils.patchFontOptions)(fontOptions)).append(renderer.root);\n    var bBox = text.getBBox();\n    text.remove();\n    return bBox;\n  }\n});\n\nfunction traverseDataItems(root, dataItems, level, params) {\n  var nodes = [];\n  var allNodes = params.nodes;\n  var node;\n  var i;\n  var ii = dataItems.length;\n  var dataItem;\n  var totalValue = 0;\n  var items;\n\n  for (i = 0; i < ii; ++i) {\n    var _items;\n\n    dataItem = dataItems[i];\n    node = new _node.default();\n    node._id = allNodes.length;\n    node.ctx = params.ctx;\n    node.parent = root;\n    node.level = level;\n    node.index = nodes.length;\n    node.data = dataItem;\n    params.buildNode(node);\n    allNodes.push(node);\n    nodes.push(node);\n    items = dataItem[params.itemsField];\n\n    if (null !== (_items = items) && void 0 !== _items && _items.length) {\n      traverseDataItems(node, items, level + 1, params);\n    }\n\n    if (dataItem[params.valueField] > 0) {\n      node.value = Number(dataItem[params.valueField]);\n    }\n\n    totalValue += node.value;\n  }\n\n  root.nodes = nodes;\n  root.value = totalValue;\n}\n\nfunction processNodes(context, root, process) {\n  var nodes = root.nodes;\n  var node;\n  var i;\n  var ii = nodes.length;\n\n  for (i = 0; i < ii; ++i) {\n    node = nodes[i];\n    process(context, node);\n\n    if (node.isNode()) {\n      processNodes(context, node, process);\n    }\n  }\n}\n\nvar createTile = [createLeaf, createGroup];\n\nfunction processTileAppearance(context, node) {\n  node.color = node.data[context.colorField] || context.getColor(node) || node.parent.color;\n  node.updateStyles();\n  node.tile = !node.ctx.forceReset && node.tile || createTile[Number(node.isNode())](context, node);\n  node.applyState();\n}\n\nfunction createLeaf(context, node) {\n  var tile = context.renderer.simpleRect().append(context.group);\n  context.setTrackerData(node, tile);\n  return tile;\n}\n\nfunction createGroup(context, node) {\n  var outer = context.renderer.simpleRect().append(context.group);\n  var inner = context.renderer.simpleRect().append(context.group);\n  context.setTrackerData(node, inner);\n  return {\n    outer: outer,\n    inner: inner\n  };\n}\n\nfunction processLabelAppearance(context, node) {\n  node.updateLabelStyle();\n\n  if (node.labelState.visible) {\n    createLabel(context, node, node.labelState, node.labelParams);\n  }\n}\n\nfunction createLabel(context, currentNode, settings, params) {\n  var textData = currentNode.data[context.labelField];\n  currentNode.label = textData ? String(textData) : null;\n  textData = currentNode.customLabel || currentNode.label;\n\n  if (textData) {\n    currentNode.text = context.renderer.text(textData).attr(settings.attr).css(settings.css).append(context.group);\n    context.setTrackerData(currentNode, currentNode.text);\n  }\n}\n\nvar emptyRect = [0, 0, 0, 0];\n\nfunction calculateRects(context, root) {\n  var nodes = root.nodes;\n  var items = [];\n  var rects = [];\n  var sum = 0;\n  var i;\n  var ii = items.length = rects.length = nodes.length;\n\n  for (i = 0; i < ii; ++i) {\n    sum += nodes[i].value;\n    items[i] = {\n      value: nodes[i].value,\n      i: i\n    };\n  }\n\n  if (sum > 0) {\n    context.algorithm({\n      items: items.slice(),\n      sum: sum,\n      rect: root.innerRect.slice(),\n      isRotated: 1 & nodes[0].level,\n      directions: context.directions\n    });\n  }\n\n  for (i = 0; i < ii; ++i) {\n    rects[i] = items[i].rect || emptyRect;\n  }\n\n  root.rects = rects;\n}\n\nfunction processTiling(context, node) {\n  var rect = node.parent.rects[node.index];\n  var rectOffsets = context.rectOffsets;\n  var headerHeight;\n\n  if (node.isNode()) {\n    setRectAttrs(node.tile.outer, buildTileRect(rect, node.parent.innerRect, rectOffsets.headerEdge, rectOffsets.headerInner));\n    rect = marginateRect(rect, context.groupPadding);\n    headerHeight = Math.min(context.headerHeight, rect[3] - rect[1]);\n    node.rect = [rect[0], rect[1], rect[2], rect[1] + headerHeight];\n    setRectAttrs(node.tile.inner, marginateRect(node.rect, rectOffsets.headerEdge));\n    rect[1] += headerHeight;\n    node.innerRect = rect;\n    calculateRects(context, node);\n  } else {\n    node.rect = rect;\n    setRectAttrs(node.tile, buildTileRect(rect, node.parent.innerRect, rectOffsets.tileEdge, rectOffsets.tileInner));\n  }\n}\n\nfunction marginateRect(rect, margin) {\n  return [rect[0] + margin, rect[1] + margin, rect[2] - margin, rect[3] - margin];\n}\n\nfunction buildTileRect(rect, outer, edgeOffset, innerOffset) {\n  return [rect[0] + (rect[0] === outer[0] ? edgeOffset : +innerOffset), rect[1] + (rect[1] === outer[1] ? edgeOffset : +innerOffset), rect[2] - (rect[2] === outer[2] ? edgeOffset : -innerOffset), rect[3] - (rect[3] === outer[3] ? edgeOffset : -innerOffset)];\n}\n\nfunction setRectAttrs(element, rect) {\n  element.attr({\n    x: rect[0],\n    y: rect[1],\n    width: _max(rect[2] - rect[0], 0),\n    height: _max(rect[3] - rect[1], 0)\n  });\n}\n\nfunction processLabelsLayout(context, node) {\n  if (node.text && node.labelState.visible) {\n    layoutTextNode(node, node.labelParams);\n  }\n}\n\nfunction layoutTextNode(node, params) {\n  var rect = node.rect;\n  var text = node.text;\n  var bBox = text.getBBox();\n  var paddingLeftRight = params.paddingLeftRight;\n  var paddingTopBottom = params.paddingTopBottom;\n  var effectiveWidth = rect[2] - rect[0] - 2 * paddingLeftRight;\n  text.setMaxSize(effectiveWidth, rect[3] - rect[1] - paddingTopBottom, node.isNode() ? {\n    textOverflow: params.groupLabelOverflow,\n    wordWrap: \"none\"\n  } : {\n    textOverflow: params.tileLabelOverflow,\n    wordWrap: params.tileLabelWordWrap,\n    hideOverflowEllipsis: true\n  });\n  text.move(params.rtlEnabled ? rect[2] - paddingLeftRight - bBox.x - bBox.width : rect[0] + paddingLeftRight - bBox.x, rect[1] + paddingTopBottom - bBox.y);\n}\n\n(0, _component_registrator.default)(\"dxTreeMap\", dxTreeMap);\nvar _default = dxTreeMap;\nexports.default = _default;\ndxTreeMap.addPlugin(_data_source.plugin);\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/tree_map/tree_map.base.js"],"names":["exports","default","_common","require","_node","_interopRequireDefault","_tiling","_colorizing","_utils","_common2","_base_widget","_component_registrator","_data_source","obj","__esModule","_max","Math","max","directions","lefttoprightbottom","leftbottomrighttop","righttopleftbottom","rightbottomlefttop","setDefaultAlgorithm","setDefaultColorizer","pickPositiveInteger","val","round","dxTreeMap","inherit","_handlers","beginBuildNodes","noop","buildNode","endBuildNodes","setTrackerData","calculateState","options","buildRectAppearance","_rootClass","_rootClassPrefix","_getDefaultSize","width","height","_themeSection","_fontFields","_init","that","_rectOffsets","Object","create","_context","suspend","_applyingChanges","_suspendChanges","resume","_resumeChanges","change","codes","_change","settings","calculateLabelState","buildTextAppearance","_root","_topNode","nodes","callBase","apply","arguments","_initialChanges","_initCore","renderer","_renderer","_createProxyType","_tilesGroup","g","linkOn","root","linkAppend","_labelsGroup","_disposeCore","_filter","dispose","linkOff","_applySize","rect","_tilingRect","slice","_optionChangesMap","dataSource","valueField","childrenField","colorField","colorizer","labelField","tile","group","maxDepth","layoutAlgorithm","layoutDirection","_themeDependentChanges","_changeDataSource","_isDataExpected","_isSyncData","_updateDataSource","_dataSourceChangedHandler","_requestChange","_optionChangesOrder","_change_DATA_SOURCE","_change_TILE_SETTINGS","_changeTileSettings","_change_GROUP_SETTINGS","_changeGroupSettings","_change_MAX_DEPTH","_changeMaxDepth","_customChangesOrder","_change_NODES_CREATE","_buildNodes","_change_NODES_RESET","_resetNodes","_change_TILES","_applyTilesAppearance","_change_LABELS","_applyLabelsAppearance","_change_TILING","_performTiling","_change_LABELS_LAYOUT","_performLabelsLayout","_applyChanges","_drawn","forceReset","_id","parent","data","level","index","ctx","label","_nodes","processedData","_processDataSourceItems","_dataSourceItems","traverseDataItems","items","itemsField","isPlain","_getOption","_onNodesCreated","offsets","borderWidth","border","edgeOffset","innerOffset","labelOptions","state","shadowFilter","attr","shadow","_calculateLabelSettings","id","tileEdge","tileInner","headerHeight","groupPadding","padding","labelParams","paddingTopBottom","_headerHeight","_groupPadding","headerEdge","headerInner","filter","bBox","_getTextBBox","font","paddingLeftRight","tileLabelOptions","groupLabelOptions","labelState","visible","rtlEnabled","tileLabelWordWrap","wordWrap","tileLabelOverflow","textOverflow","groupLabelOverflow","_maxDepth","clear","initHatching","minLevel","maxLevel","_processNodes","context","process","processNodes","getColorizer","_themeManager","getColor","processTileAppearance","processLabelAppearance","algorithm","getAlgorithm","String","toLowerCase","rectOffsets","innerRect","calculateRects","processTiling","_onTilingPerformed","processLabelsLayout","fontOptions","text","_textForCalculations","css","patchFontOptions","append","getBBox","remove","dataItems","params","allNodes","node","i","ii","length","dataItem","totalValue","_items","push","value","Number","isNode","createTile","createLeaf","createGroup","color","updateStyles","applyState","simpleRect","outer","inner","updateLabelStyle","createLabel","currentNode","textData","customLabel","emptyRect","rects","sum","isRotated","setRectAttrs","buildTileRect","marginateRect","min","margin","element","x","y","layoutTextNode","effectiveWidth","setMaxSize","hideOverflowEllipsis","move","_default","addPlugin","plugin","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/tree_map/tree_map.base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _common = require(\"./common\");\r\nvar _node = _interopRequireDefault(require(\"./node\"));\r\nvar _tiling = require(\"./tiling\");\r\nvar _colorizing = require(\"./colorizing\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _common2 = require(\"../../core/utils/common\");\r\nvar _base_widget = _interopRequireDefault(require(\"../core/base_widget\"));\r\nrequire(\"./tiling.squarified\");\r\nrequire(\"./colorizing.discrete\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _data_source = require(\"../core/data_source\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _max = Math.max;\r\nvar directions = {\r\n    lefttoprightbottom: [1, 1],\r\n    leftbottomrighttop: [1, -1],\r\n    righttopleftbottom: [-1, 1],\r\n    rightbottomlefttop: [-1, -1]\r\n};\r\n(0, _tiling.setDefaultAlgorithm)(\"squarified\");\r\n(0, _colorizing.setDefaultColorizer)(\"discrete\");\r\n\r\nfunction pickPositiveInteger(val) {\r\n    return val > 0 ? Math.round(val) : 0\r\n}\r\nvar dxTreeMap = _base_widget.default.inherit({\r\n    _handlers: {\r\n        beginBuildNodes: _common2.noop,\r\n        buildNode: _common2.noop,\r\n        endBuildNodes: _common2.noop,\r\n        setTrackerData: _common2.noop,\r\n        calculateState: function(options) {\r\n            return (0, _common.buildRectAppearance)(options)\r\n        }\r\n    },\r\n    _rootClass: \"dxtm-tree-map\",\r\n    _rootClassPrefix: \"dxtm\",\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 400\r\n        }\r\n    },\r\n    _themeSection: \"treeMap\",\r\n    _fontFields: [\"tile.label.font\", \"group.label.font\"],\r\n    _init: function() {\r\n        var that = this;\r\n        that._rectOffsets = {};\r\n        that._handlers = Object.create(that._handlers);\r\n        that._context = {\r\n            suspend: function() {\r\n                if (!that._applyingChanges) {\r\n                    that._suspendChanges()\r\n                }\r\n            },\r\n            resume: function() {\r\n                if (!that._applyingChanges) {\r\n                    that._resumeChanges()\r\n                }\r\n            },\r\n            change: function(codes) {\r\n                that._change(codes)\r\n            },\r\n            settings: [{}, {}],\r\n            calculateState: that._handlers.calculateState,\r\n            calculateLabelState: _common.buildTextAppearance\r\n        };\r\n        that._root = that._topNode = {\r\n            nodes: []\r\n        };\r\n        that.callBase.apply(that, arguments)\r\n    },\r\n    _initialChanges: [\"DATA_SOURCE\"],\r\n    _initCore: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        that._createProxyType();\r\n        that._tilesGroup = renderer.g().linkOn(renderer.root, \"tiles\").linkAppend();\r\n        that._labelsGroup = renderer.g().linkOn(renderer.root, \"labels\").linkAppend()\r\n    },\r\n    _createProxyType: _common2.noop,\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        that._filter && that._filter.dispose();\r\n        that._labelsGroup.linkOff();\r\n        that._tilesGroup.linkOff()\r\n    },\r\n    _applySize: function(rect) {\r\n        this._tilingRect = rect.slice();\r\n        this._change([\"TILING\"])\r\n    },\r\n    _optionChangesMap: {\r\n        dataSource: \"DATA_SOURCE\",\r\n        valueField: \"NODES_CREATE\",\r\n        childrenField: \"NODES_CREATE\",\r\n        colorField: \"TILES\",\r\n        colorizer: \"TILES\",\r\n        labelField: \"LABELS\",\r\n        tile: \"TILE_SETTINGS\",\r\n        group: \"GROUP_SETTINGS\",\r\n        maxDepth: \"MAX_DEPTH\",\r\n        layoutAlgorithm: \"TILING\",\r\n        layoutDirection: \"TILING\"\r\n    },\r\n    _themeDependentChanges: [\"TILE_SETTINGS\", \"GROUP_SETTINGS\", \"MAX_DEPTH\"],\r\n    _changeDataSource: function() {\r\n        var that = this;\r\n        that._isDataExpected = that._isSyncData = true;\r\n        that._updateDataSource();\r\n        that._isSyncData = false;\r\n        if (that._isDataExpected) {\r\n            that._suspendChanges()\r\n        }\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        var that = this;\r\n        if (that._isDataExpected) {\r\n            that._isDataExpected = false;\r\n            that._change([\"NODES_CREATE\"]);\r\n            if (!that._isSyncData) {\r\n                that._resumeChanges()\r\n            }\r\n        } else {\r\n            that._requestChange([\"NODES_CREATE\"])\r\n        }\r\n    },\r\n    _optionChangesOrder: [\"DATA_SOURCE\", \"TILE_SETTINGS\", \"GROUP_SETTINGS\", \"MAX_DEPTH\"],\r\n    _change_DATA_SOURCE: function() {\r\n        this._changeDataSource()\r\n    },\r\n    _change_TILE_SETTINGS: function() {\r\n        this._changeTileSettings()\r\n    },\r\n    _change_GROUP_SETTINGS: function() {\r\n        this._changeGroupSettings()\r\n    },\r\n    _change_MAX_DEPTH: function() {\r\n        this._changeMaxDepth()\r\n    },\r\n    _customChangesOrder: [\"NODES_CREATE\", \"NODES_RESET\", \"TILES\", \"LABELS\", \"TILING\", \"LABELS_LAYOUT\"],\r\n    _change_NODES_CREATE: function() {\r\n        this._buildNodes()\r\n    },\r\n    _change_NODES_RESET: function() {\r\n        this._resetNodes()\r\n    },\r\n    _change_TILES: function() {\r\n        this._applyTilesAppearance()\r\n    },\r\n    _change_LABELS: function() {\r\n        this._applyLabelsAppearance()\r\n    },\r\n    _change_TILING: function() {\r\n        this._performTiling()\r\n    },\r\n    _change_LABELS_LAYOUT: function() {\r\n        this._performLabelsLayout()\r\n    },\r\n    _applyChanges: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        if (!that._isDataExpected) {\r\n            that._drawn()\r\n        }\r\n        that._context.forceReset = false\r\n    },\r\n    _buildNodes: function() {\r\n        var that = this;\r\n        var root = that._root = that._topNode = new _node.default;\r\n        root._id = 0;\r\n        root.parent = {};\r\n        root.data = {};\r\n        root.level = root.index = -1;\r\n        root.ctx = that._context;\r\n        root.label = null;\r\n        that._nodes = [root];\r\n        that._handlers.beginBuildNodes();\r\n        var processedData = that._processDataSourceItems(that._dataSourceItems() || []);\r\n        traverseDataItems(root, processedData.items, 0, {\r\n            itemsField: !processedData.isPlain && that._getOption(\"childrenField\", true) || \"items\",\r\n            valueField: that._getOption(\"valueField\", true) || \"value\",\r\n            buildNode: that._handlers.buildNode,\r\n            ctx: that._context,\r\n            nodes: that._nodes\r\n        });\r\n        that._onNodesCreated();\r\n        that._handlers.endBuildNodes();\r\n        that._change([\"NODES_RESET\"])\r\n    },\r\n    _onNodesCreated: _common2.noop,\r\n    _processDataSourceItems: function(items) {\r\n        return {\r\n            items: items,\r\n            isPlain: false\r\n        }\r\n    },\r\n    _changeTileSettings: function() {\r\n        var that = this;\r\n        var options = that._getOption(\"tile\");\r\n        var offsets = that._rectOffsets;\r\n        var borderWidth = pickPositiveInteger(options.border.width);\r\n        var edgeOffset = borderWidth / 2;\r\n        var innerOffset = 1 & borderWidth ? .5 : 0;\r\n        var labelOptions = options.label;\r\n        var settings = that._context.settings[0];\r\n        that._change([\"TILES\", \"LABELS\"]);\r\n        settings.state = that._handlers.calculateState(options);\r\n        that._filter = that._filter || that._renderer.shadowFilter(\"-50%\", \"-50%\", \"200%\", \"200%\");\r\n        that._filter.attr(labelOptions.shadow);\r\n        that._calculateLabelSettings(settings, labelOptions, that._filter.id);\r\n        if (offsets.tileEdge !== edgeOffset || offsets.tileInner !== innerOffset) {\r\n            offsets.tileEdge = edgeOffset;\r\n            offsets.tileInner = innerOffset;\r\n            that._change([\"TILING\"])\r\n        }\r\n    },\r\n    _changeGroupSettings: function() {\r\n        var that = this;\r\n        var options = that._getOption(\"group\");\r\n        var labelOptions = options.label;\r\n        var offsets = that._rectOffsets;\r\n        var borderWidth = pickPositiveInteger(options.border.width);\r\n        var edgeOffset = borderWidth / 2;\r\n        var innerOffset = 1 & borderWidth ? .5 : 0;\r\n        var headerHeight = 0;\r\n        var groupPadding = pickPositiveInteger(options.padding);\r\n        var settings = that._context.settings[1];\r\n        that._change([\"TILES\", \"LABELS\"]);\r\n        settings.state = that._handlers.calculateState(options);\r\n        that._calculateLabelSettings(settings, labelOptions);\r\n        if (options.headerHeight >= 0) {\r\n            headerHeight = pickPositiveInteger(options.headerHeight)\r\n        } else {\r\n            headerHeight = settings.labelParams.height + 2 * pickPositiveInteger(labelOptions.paddingTopBottom)\r\n        }\r\n        if (that._headerHeight !== headerHeight) {\r\n            that._headerHeight = headerHeight;\r\n            that._change([\"TILING\"])\r\n        }\r\n        if (that._groupPadding !== groupPadding) {\r\n            that._groupPadding = groupPadding;\r\n            that._change([\"TILING\"])\r\n        }\r\n        if (offsets.headerEdge !== edgeOffset || offsets.headerInner !== innerOffset) {\r\n            offsets.headerEdge = edgeOffset;\r\n            offsets.headerInner = innerOffset;\r\n            that._change([\"TILING\"])\r\n        }\r\n    },\r\n    _calculateLabelSettings: function(settings, options, filter) {\r\n        var bBox = this._getTextBBox(options.font);\r\n        var paddingLeftRight = pickPositiveInteger(options.paddingLeftRight);\r\n        var paddingTopBottom = pickPositiveInteger(options.paddingTopBottom);\r\n        var tileLabelOptions = this._getOption(\"tile.label\");\r\n        var groupLabelOptions = this._getOption(\"group.label\");\r\n        settings.labelState = (0, _common.buildTextAppearance)(options, filter);\r\n        settings.labelState.visible = !(\"visible\" in options) || !!options.visible;\r\n        settings.labelParams = {\r\n            height: bBox.height,\r\n            rtlEnabled: this._getOption(\"rtlEnabled\", true),\r\n            paddingTopBottom: paddingTopBottom,\r\n            paddingLeftRight: paddingLeftRight,\r\n            tileLabelWordWrap: tileLabelOptions.wordWrap,\r\n            tileLabelOverflow: tileLabelOptions.textOverflow,\r\n            groupLabelOverflow: groupLabelOptions.textOverflow\r\n        }\r\n    },\r\n    _changeMaxDepth: function() {\r\n        var maxDepth = this._getOption(\"maxDepth\", true);\r\n        maxDepth = maxDepth >= 1 ? Math.round(maxDepth) : 1 / 0;\r\n        if (this._maxDepth !== maxDepth) {\r\n            this._maxDepth = maxDepth;\r\n            this._change([\"NODES_RESET\"])\r\n        }\r\n    },\r\n    _resetNodes: function() {\r\n        var that = this;\r\n        that._tilesGroup.clear();\r\n        that._renderer.initHatching();\r\n        that._context.forceReset = true;\r\n        that._context.minLevel = that._topNode.level + 1;\r\n        that._context.maxLevel = that._context.minLevel + that._maxDepth - 1;\r\n        that._change([\"TILES\", \"LABELS\", \"TILING\"])\r\n    },\r\n    _processNodes: function(context, process) {\r\n        processNodes(context, this._topNode, process)\r\n    },\r\n    _applyTilesAppearance: function() {\r\n        var that = this;\r\n        var colorizer = (0, _colorizing.getColorizer)(that._getOption(\"colorizer\"), that._themeManager, that._topNode);\r\n        that._processNodes({\r\n            renderer: that._renderer,\r\n            group: that._tilesGroup,\r\n            setTrackerData: that._handlers.setTrackerData,\r\n            colorField: that._getOption(\"colorField\", true) || \"color\",\r\n            getColor: colorizer\r\n        }, processTileAppearance)\r\n    },\r\n    _applyLabelsAppearance: function() {\r\n        var that = this;\r\n        that._labelsGroup.clear();\r\n        that._processNodes({\r\n            renderer: that._renderer,\r\n            group: that._labelsGroup,\r\n            setTrackerData: that._handlers.setTrackerData,\r\n            labelField: that._getOption(\"labelField\", true) || \"name\"\r\n        }, processLabelAppearance);\r\n        that._change([\"LABELS_LAYOUT\"])\r\n    },\r\n    _performTiling: function() {\r\n        var that = this;\r\n        var context = {\r\n            algorithm: (0, _tiling.getAlgorithm)(that._getOption(\"layoutAlgorithm\", true)),\r\n            directions: directions[String(that._getOption(\"layoutDirection\", true)).toLowerCase()] || directions.lefttoprightbottom,\r\n            headerHeight: that._headerHeight,\r\n            groupPadding: that._groupPadding,\r\n            rectOffsets: that._rectOffsets\r\n        };\r\n        that._topNode.innerRect = that._tilingRect;\r\n        calculateRects(context, that._topNode);\r\n        that._processNodes(context, processTiling);\r\n        that._change([\"LABELS_LAYOUT\"]);\r\n        that._onTilingPerformed()\r\n    },\r\n    _onTilingPerformed: _common2.noop,\r\n    _performLabelsLayout: function() {\r\n        this._processNodes(null, processLabelsLayout)\r\n    },\r\n    _getTextBBox: function(fontOptions) {\r\n        var renderer = this._renderer;\r\n        var text = this._textForCalculations || renderer.text(\"0\", 0, 0);\r\n        this._textForCalculations = text;\r\n        text.css((0, _utils.patchFontOptions)(fontOptions)).append(renderer.root);\r\n        var bBox = text.getBBox();\r\n        text.remove();\r\n        return bBox\r\n    }\r\n});\r\n\r\nfunction traverseDataItems(root, dataItems, level, params) {\r\n    var nodes = [];\r\n    var allNodes = params.nodes;\r\n    var node;\r\n    var i;\r\n    var ii = dataItems.length;\r\n    var dataItem;\r\n    var totalValue = 0;\r\n    var items;\r\n    for (i = 0; i < ii; ++i) {\r\n        var _items;\r\n        dataItem = dataItems[i];\r\n        node = new _node.default;\r\n        node._id = allNodes.length;\r\n        node.ctx = params.ctx;\r\n        node.parent = root;\r\n        node.level = level;\r\n        node.index = nodes.length;\r\n        node.data = dataItem;\r\n        params.buildNode(node);\r\n        allNodes.push(node);\r\n        nodes.push(node);\r\n        items = dataItem[params.itemsField];\r\n        if (null !== (_items = items) && void 0 !== _items && _items.length) {\r\n            traverseDataItems(node, items, level + 1, params)\r\n        }\r\n        if (dataItem[params.valueField] > 0) {\r\n            node.value = Number(dataItem[params.valueField])\r\n        }\r\n        totalValue += node.value\r\n    }\r\n    root.nodes = nodes;\r\n    root.value = totalValue\r\n}\r\n\r\nfunction processNodes(context, root, process) {\r\n    var nodes = root.nodes;\r\n    var node;\r\n    var i;\r\n    var ii = nodes.length;\r\n    for (i = 0; i < ii; ++i) {\r\n        node = nodes[i];\r\n        process(context, node);\r\n        if (node.isNode()) {\r\n            processNodes(context, node, process)\r\n        }\r\n    }\r\n}\r\nvar createTile = [createLeaf, createGroup];\r\n\r\nfunction processTileAppearance(context, node) {\r\n    node.color = node.data[context.colorField] || context.getColor(node) || node.parent.color;\r\n    node.updateStyles();\r\n    node.tile = !node.ctx.forceReset && node.tile || createTile[Number(node.isNode())](context, node);\r\n    node.applyState()\r\n}\r\n\r\nfunction createLeaf(context, node) {\r\n    var tile = context.renderer.simpleRect().append(context.group);\r\n    context.setTrackerData(node, tile);\r\n    return tile\r\n}\r\n\r\nfunction createGroup(context, node) {\r\n    var outer = context.renderer.simpleRect().append(context.group);\r\n    var inner = context.renderer.simpleRect().append(context.group);\r\n    context.setTrackerData(node, inner);\r\n    return {\r\n        outer: outer,\r\n        inner: inner\r\n    }\r\n}\r\n\r\nfunction processLabelAppearance(context, node) {\r\n    node.updateLabelStyle();\r\n    if (node.labelState.visible) {\r\n        createLabel(context, node, node.labelState, node.labelParams)\r\n    }\r\n}\r\n\r\nfunction createLabel(context, currentNode, settings, params) {\r\n    var textData = currentNode.data[context.labelField];\r\n    currentNode.label = textData ? String(textData) : null;\r\n    textData = currentNode.customLabel || currentNode.label;\r\n    if (textData) {\r\n        currentNode.text = context.renderer.text(textData).attr(settings.attr).css(settings.css).append(context.group);\r\n        context.setTrackerData(currentNode, currentNode.text)\r\n    }\r\n}\r\nvar emptyRect = [0, 0, 0, 0];\r\n\r\nfunction calculateRects(context, root) {\r\n    var nodes = root.nodes;\r\n    var items = [];\r\n    var rects = [];\r\n    var sum = 0;\r\n    var i;\r\n    var ii = items.length = rects.length = nodes.length;\r\n    for (i = 0; i < ii; ++i) {\r\n        sum += nodes[i].value;\r\n        items[i] = {\r\n            value: nodes[i].value,\r\n            i: i\r\n        }\r\n    }\r\n    if (sum > 0) {\r\n        context.algorithm({\r\n            items: items.slice(),\r\n            sum: sum,\r\n            rect: root.innerRect.slice(),\r\n            isRotated: 1 & nodes[0].level,\r\n            directions: context.directions\r\n        })\r\n    }\r\n    for (i = 0; i < ii; ++i) {\r\n        rects[i] = items[i].rect || emptyRect\r\n    }\r\n    root.rects = rects\r\n}\r\n\r\nfunction processTiling(context, node) {\r\n    var rect = node.parent.rects[node.index];\r\n    var rectOffsets = context.rectOffsets;\r\n    var headerHeight;\r\n    if (node.isNode()) {\r\n        setRectAttrs(node.tile.outer, buildTileRect(rect, node.parent.innerRect, rectOffsets.headerEdge, rectOffsets.headerInner));\r\n        rect = marginateRect(rect, context.groupPadding);\r\n        headerHeight = Math.min(context.headerHeight, rect[3] - rect[1]);\r\n        node.rect = [rect[0], rect[1], rect[2], rect[1] + headerHeight];\r\n        setRectAttrs(node.tile.inner, marginateRect(node.rect, rectOffsets.headerEdge));\r\n        rect[1] += headerHeight;\r\n        node.innerRect = rect;\r\n        calculateRects(context, node)\r\n    } else {\r\n        node.rect = rect;\r\n        setRectAttrs(node.tile, buildTileRect(rect, node.parent.innerRect, rectOffsets.tileEdge, rectOffsets.tileInner))\r\n    }\r\n}\r\n\r\nfunction marginateRect(rect, margin) {\r\n    return [rect[0] + margin, rect[1] + margin, rect[2] - margin, rect[3] - margin]\r\n}\r\n\r\nfunction buildTileRect(rect, outer, edgeOffset, innerOffset) {\r\n    return [rect[0] + (rect[0] === outer[0] ? edgeOffset : +innerOffset), rect[1] + (rect[1] === outer[1] ? edgeOffset : +innerOffset), rect[2] - (rect[2] === outer[2] ? edgeOffset : -innerOffset), rect[3] - (rect[3] === outer[3] ? edgeOffset : -innerOffset)]\r\n}\r\n\r\nfunction setRectAttrs(element, rect) {\r\n    element.attr({\r\n        x: rect[0],\r\n        y: rect[1],\r\n        width: _max(rect[2] - rect[0], 0),\r\n        height: _max(rect[3] - rect[1], 0)\r\n    })\r\n}\r\n\r\nfunction processLabelsLayout(context, node) {\r\n    if (node.text && node.labelState.visible) {\r\n        layoutTextNode(node, node.labelParams)\r\n    }\r\n}\r\n\r\nfunction layoutTextNode(node, params) {\r\n    var rect = node.rect;\r\n    var text = node.text;\r\n    var bBox = text.getBBox();\r\n    var paddingLeftRight = params.paddingLeftRight;\r\n    var paddingTopBottom = params.paddingTopBottom;\r\n    var effectiveWidth = rect[2] - rect[0] - 2 * paddingLeftRight;\r\n    text.setMaxSize(effectiveWidth, rect[3] - rect[1] - paddingTopBottom, node.isNode() ? {\r\n        textOverflow: params.groupLabelOverflow,\r\n        wordWrap: \"none\"\r\n    } : {\r\n        textOverflow: params.tileLabelOverflow,\r\n        wordWrap: params.tileLabelWordWrap,\r\n        hideOverflowEllipsis: true\r\n    });\r\n    text.move(params.rtlEnabled ? rect[2] - paddingLeftRight - bBox.x - bBox.width : rect[0] + paddingLeftRight - bBox.x, rect[1] + paddingTopBottom - bBox.y)\r\n}(0, _component_registrator.default)(\"dxTreeMap\", dxTreeMap);\r\nvar _default = dxTreeMap;\r\nexports.default = _default;\r\ndxTreeMap.addPlugin(_data_source.plugin);\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}