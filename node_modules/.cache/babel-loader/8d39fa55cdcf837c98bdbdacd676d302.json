{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\common\\\\NormalTime\\\\index.js\";\n// import React, { Component } from 'react';\n// import ReactDateTime from 'react-datetime';\n// import 'react-datetime/css/react-datetime.css';\n// // import './style.scss';\n// import moment from 'moment';\n// export class NormalTime extends Component {\n//   state = {\n//     defaultValue: '',\n//     stateChanged: false,\n//   };\n//   componentDidMount() {\n//     let { value } = this.props;\n//     if (value && !this.state.stateChanged) {\n//       this.setState({\n//         defaultValue:\n//           typeof value === 'string' && value.indexOf('T') !== -1 && value.indexOf('Z') !== -1 ? moment(value) : value,\n//         stateChanged: true,\n//       });\n//     }\n//   }\n//   componentWillReceiveProps({ value, name, isControlled }) {\n//     if (value && !this.state.stateChanged) {\n//       this.setState(\n//         {\n//           defaultValue:\n//             typeof value === 'string' && value.indexOf('T') !== -1 && value.indexOf('Z') !== -1 ? moment(value) : value,\n//           stateChanged: true,\n//         },\n//         () => {\n//           if (\n//             !moment(value, 'MM/DD/YYYY hh:mm a', true).isValid() &&\n//             !moment(value, 'YYYY-MM-DDTHH:mm:ssZ', true).isValid() &&\n//             !moment(value, 'YYYY-MM-DDTHH:mm:ss.000Z', true).isValid()\n//           ) {\n//             this.refs.dateInput.querySelector('input').focus();\n//           }\n//         },\n//       );\n//     }\n//     if (isControlled) {\n//       this.setState({\n//         defaultValue: moment(value),\n//       });\n//     }\n//   }\n//   getTimeConstrain = () => {\n//     let dateTime = ReactDateTime.moment();\n//     return {\n//       hours: {\n//         min: dateTime.hours(),\n//         max: 23,\n//         step: 1,\n//       },\n//       minutes: {\n//         min: dateTime.minutes(),\n//         max: 59,\n//         step: 1,\n//       },\n//     };\n//   };\n//   changeDateBasedOnSelection = date => {\n//     // let { timeConstrainParams, value } = this.props\n//     // if (!moment(date).isSame(value, 'day') && moment(timeConstrainParams).isSame(date, 'day')) {\n//     //     return moment(timeConstrainParams).add(15, 'minutes')\n//     // }\n//     return date;\n//   };\n//   render() {\n//     let {\n//       placeholder = '',\n//       value = '',\n//       isControlled = false,\n//       // timeConstrainParams,\n//       // timeConstraints,\n//       onChange,\n//       name = '',\n//       disabled = false,\n//       isValidDate = e => true,\n//       timeFormat = true,\n//       dateFormat = false,\n//       className = 'form-control',\n//     } = this.props;\n//     let { defaultValue, stateChanged } = this.state;\n//     // value = ReactDateTime.moment(defaultValue)\n//     return (\n//       <div className=\"date-input-wrapper w-100\" ref=\"dateInput\">\n//           <ReactDateTime \n//           dateFormat={dateFormat}\n//           selected={value}\n//           onChange={date => {\n//             let body = {};\n//             body = {\n//               target: {\n//                 name: name,\n//                 value: date\n//               },\n//             };\n//             onChange(body);\n//           }}\n//           name={name}\n//           />\n//         {/* {!isControlled ? (\n//           <ReactDateTime\n//             inputProps={{\n//               placeholder,\n//               className,\n//               disabled,\n//               // readOnly: true\n//             }}\n//             key={stateChanged}\n//             defaultValue={defaultValue}\n//             isValidDate={isValidDate}\n//             // utc={true}\n//             onChange={date => {\n//               onChange(\n//                 name,\n//                 moment(date, 'MM/DD/YYYY hh:mm a', true).isValid()\n//                   ? moment(date)\n//                       .utc()\n//                       .format()\n//                   : date,\n//               ); //\n//             }}\n//             dateFormat={dateFormat}\n//             timeFormat={timeFormat}\n//           />\n//         ) : (\n//           <ReactDateTime\n//             inputProps={{\n//               placeholder,\n//               className,\n//               disabled,\n//               // readOnly: true\n//             }}\n//             key={stateChanged}\n//             value={defaultValue}\n//             isValidDate={isValidDate}\n//             // utc={true}\n//             onChange={date => {\n//               onChange(\n//                 name,\n//                 moment(date, 'MM/DD/YYYY hh:mm a', true).isValid()\n//                   ? moment(date)\n//                       .utc()\n//                       .format()\n//                   : \n//                   date,\n//               ); //\n//             }}\n//             timeFormat={timeFormat}\n//             dateFormat={dateFormat}\n//           />\n//         )} */}\n//       </div>\n//     );\n//   }\n// }\n// import React, { useState } from 'react';\n// import TimePicker from 'react-time-picker';\n// function NormalTime() {\n//   const [value, onChange] = useState('10:00');\n//   return (\n//     <div>\n//       <TimePicker\n//         onChange={onChange}\n//         value={value}\n//       />\n//     </div>\n//   );\n// }\n// export default NormalTime;\nimport React, { Component } from 'react';\nimport TimePicker from 'react-time-picker';\nexport class NormalTime extends Component {\n  render() {\n    let {\n      value,\n      onChange,\n      name\n    } = this.props; // state = {\n    //   time: '10:00',\n    // }\n    // onChange = time => this.setState({ time })\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TimePicker // onChange={this.onChange}\n    // value={this.state.time}\n    , {\n      value: value,\n      onChange: e => console.log(e, \"kjdfsdjfsdf\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/common/NormalTime/index.js"],"names":["React","Component","TimePicker","NormalTime","render","value","onChange","name","props","e","console","log"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACxCG,EAAAA,MAAM,GAAG;AACP,QAAG;AACDC,MAAAA,KADC;AAEDC,MAAAA,QAFC;AAGDC,MAAAA;AAHC,QAIC,KAAKC,KAJT,CADO,CAMT;AACA;AACA;AAEA;;AAEE,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD,CACE;AACA;AAFF;AAGE,MAAA,KAAK,EAAEH,KAHT;AAIE,MAAA,QAAQ,EAAGI,CAAD,IAAKC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAAe,aAAf,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AAvBuC","sourcesContent":["// import React, { Component } from 'react';\r\n// import ReactDateTime from 'react-datetime';\r\n// import 'react-datetime/css/react-datetime.css';\r\n// // import './style.scss';\r\n// import moment from 'moment';\r\n\r\n// export class NormalTime extends Component {\r\n//   state = {\r\n//     defaultValue: '',\r\n//     stateChanged: false,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     let { value } = this.props;\r\n\r\n//     if (value && !this.state.stateChanged) {\r\n//       this.setState({\r\n//         defaultValue:\r\n//           typeof value === 'string' && value.indexOf('T') !== -1 && value.indexOf('Z') !== -1 ? moment(value) : value,\r\n//         stateChanged: true,\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   componentWillReceiveProps({ value, name, isControlled }) {\r\n//     if (value && !this.state.stateChanged) {\r\n//       this.setState(\r\n//         {\r\n//           defaultValue:\r\n//             typeof value === 'string' && value.indexOf('T') !== -1 && value.indexOf('Z') !== -1 ? moment(value) : value,\r\n//           stateChanged: true,\r\n//         },\r\n//         () => {\r\n//           if (\r\n//             !moment(value, 'MM/DD/YYYY hh:mm a', true).isValid() &&\r\n//             !moment(value, 'YYYY-MM-DDTHH:mm:ssZ', true).isValid() &&\r\n//             !moment(value, 'YYYY-MM-DDTHH:mm:ss.000Z', true).isValid()\r\n//           ) {\r\n//             this.refs.dateInput.querySelector('input').focus();\r\n//           }\r\n//         },\r\n//       );\r\n//     }\r\n\r\n//     if (isControlled) {\r\n//       this.setState({\r\n//         defaultValue: moment(value),\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   getTimeConstrain = () => {\r\n//     let dateTime = ReactDateTime.moment();\r\n\r\n//     return {\r\n//       hours: {\r\n//         min: dateTime.hours(),\r\n//         max: 23,\r\n//         step: 1,\r\n//       },\r\n//       minutes: {\r\n//         min: dateTime.minutes(),\r\n//         max: 59,\r\n//         step: 1,\r\n//       },\r\n//     };\r\n//   };\r\n\r\n//   changeDateBasedOnSelection = date => {\r\n//     // let { timeConstrainParams, value } = this.props\r\n\r\n//     // if (!moment(date).isSame(value, 'day') && moment(timeConstrainParams).isSame(date, 'day')) {\r\n//     //     return moment(timeConstrainParams).add(15, 'minutes')\r\n//     // }\r\n\r\n//     return date;\r\n//   };\r\n\r\n//   render() {\r\n//     let {\r\n//       placeholder = '',\r\n//       value = '',\r\n//       isControlled = false,\r\n//       // timeConstrainParams,\r\n//       // timeConstraints,\r\n//       onChange,\r\n//       name = '',\r\n//       disabled = false,\r\n//       isValidDate = e => true,\r\n//       timeFormat = true,\r\n//       dateFormat = false,\r\n//       className = 'form-control',\r\n//     } = this.props;\r\n\r\n//     let { defaultValue, stateChanged } = this.state;\r\n\r\n//     // value = ReactDateTime.moment(defaultValue)\r\n\r\n//     return (\r\n//       <div className=\"date-input-wrapper w-100\" ref=\"dateInput\">\r\n//           <ReactDateTime \r\n//           dateFormat={dateFormat}\r\n//           selected={value}\r\n//           onChange={date => {\r\n//             let body = {};\r\n\r\n//             body = {\r\n//               target: {\r\n//                 name: name,\r\n//                 value: date\r\n\r\n//               },\r\n//             };\r\n\r\n//             onChange(body);\r\n\r\n//           }}\r\n//           name={name}\r\n//           />\r\n//         {/* {!isControlled ? (\r\n//           <ReactDateTime\r\n//             inputProps={{\r\n//               placeholder,\r\n//               className,\r\n//               disabled,\r\n//               // readOnly: true\r\n//             }}\r\n//             key={stateChanged}\r\n//             defaultValue={defaultValue}\r\n//             isValidDate={isValidDate}\r\n//             // utc={true}\r\n//             onChange={date => {\r\n//               onChange(\r\n//                 name,\r\n//                 moment(date, 'MM/DD/YYYY hh:mm a', true).isValid()\r\n//                   ? moment(date)\r\n//                       .utc()\r\n//                       .format()\r\n//                   : date,\r\n//               ); //\r\n//             }}\r\n//             dateFormat={dateFormat}\r\n//             timeFormat={timeFormat}\r\n//           />\r\n//         ) : (\r\n//           <ReactDateTime\r\n//             inputProps={{\r\n//               placeholder,\r\n//               className,\r\n//               disabled,\r\n//               // readOnly: true\r\n//             }}\r\n//             key={stateChanged}\r\n//             value={defaultValue}\r\n//             isValidDate={isValidDate}\r\n//             // utc={true}\r\n//             onChange={date => {\r\n//               onChange(\r\n//                 name,\r\n//                 moment(date, 'MM/DD/YYYY hh:mm a', true).isValid()\r\n//                   ? moment(date)\r\n//                       .utc()\r\n//                       .format()\r\n//                   : \r\n//                   date,\r\n//               ); //\r\n//             }}\r\n//             timeFormat={timeFormat}\r\n//             dateFormat={dateFormat}\r\n//           />\r\n//         )} */}\r\n\r\n\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import TimePicker from 'react-time-picker';\r\n\r\n// function NormalTime() {\r\n//   const [value, onChange] = useState('10:00');\r\n\r\n//   return (\r\n//     <div>\r\n//       <TimePicker\r\n//         onChange={onChange}\r\n//         value={value}\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n// export default NormalTime;\r\n\r\nimport React, { Component } from 'react';\r\nimport TimePicker from 'react-time-picker';\r\n \r\nexport class NormalTime extends Component {\r\n  render() {\r\n    let{\r\n      value,\r\n      onChange,\r\n      name\r\n    } = this.props\r\n  // state = {\r\n  //   time: '10:00',\r\n  // }\r\n \r\n  // onChange = time => this.setState({ time })\r\n \r\n    return (\r\n      <div>\r\n        <TimePicker\r\n          // onChange={this.onChange}\r\n          // value={this.state.time}\r\n          value={value}\r\n          onChange={(e)=>console.log(e, \"kjdfsdjfsdf\")}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}