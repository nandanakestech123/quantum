{"ast":null,"code":"/**\r\n * DevExtreme (ui/tree_list/ui.tree_list.data_controller.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.DataController = void 0;\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _uiTree_list = _interopRequireDefault(require(\"./ui.tree_list.core\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _uiTree_list2 = _interopRequireDefault(require(\"./ui.tree_list.data_source_adapter\"));\n\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.data_controller\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DataController = _uiGrid_core.default.controllers.data.inherit(function () {\n  return {\n    _getDataSourceAdapter: function () {\n      return _uiTree_list2.default;\n    },\n    _getNodeLevel: function (node) {\n      var level = -1;\n\n      while (node.parent) {\n        if (node.visible) {\n          level++;\n        }\n\n        node = node.parent;\n      }\n\n      return level;\n    },\n    _generateDataItem: function (node, options) {\n      return {\n        rowType: \"data\",\n        node: node,\n        key: node.key,\n        data: node.data,\n        isExpanded: this.isRowExpanded(node.key, options),\n        level: this._getNodeLevel(node)\n      };\n    },\n    _loadOnOptionChange: function () {\n      this._dataSource.load();\n    },\n    _isItemEquals: function (item1, item2) {\n      if (!this.callBase.apply(this, arguments)) {\n        return false;\n      }\n\n      if (item1.node && item2.node && item1.node.hasChildren !== item2.node.hasChildren) {\n        return false;\n      }\n\n      if (item1.level !== item2.level) {\n        return false;\n      }\n\n      return true;\n    },\n    init: function () {\n      this.createAction(\"onRowExpanding\");\n      this.createAction(\"onRowExpanded\");\n      this.createAction(\"onRowCollapsing\");\n      this.createAction(\"onRowCollapsed\");\n      this.callBase.apply(this, arguments);\n    },\n    keyOf: function (data) {\n      var dataSource = this._dataSource;\n\n      if (dataSource) {\n        return dataSource.keyOf(data);\n      }\n    },\n    key: function () {\n      var dataSource = this._dataSource;\n\n      if (dataSource) {\n        return dataSource.getKeyExpr();\n      }\n    },\n    publicMethods: function () {\n      return this.callBase().concat([\"expandRow\", \"collapseRow\", \"isRowExpanded\", \"getRootNode\", \"getNodeByKey\", \"loadDescendants\", \"forEachNode\"]);\n    },\n    changeRowExpand: function (key) {\n      if (this._dataSource) {\n        var that = this;\n        var args = {\n          key: key\n        };\n        var isExpanded = this.isRowExpanded(key);\n        that.executeAction(isExpanded ? \"onRowCollapsing\" : \"onRowExpanding\", args);\n\n        if (!args.cancel) {\n          return that._dataSource.changeRowExpand(key).done(function () {\n            that.executeAction(isExpanded ? \"onRowCollapsed\" : \"onRowExpanded\", args);\n          });\n        }\n      }\n\n      return new _deferred.Deferred().resolve();\n    },\n    isRowExpanded: function (key, cache) {\n      return this._dataSource && this._dataSource.isRowExpanded(key, cache);\n    },\n    expandRow: function (key) {\n      if (!this.isRowExpanded(key)) {\n        return this.changeRowExpand(key);\n      }\n\n      return new _deferred.Deferred().resolve();\n    },\n    collapseRow: function (key) {\n      if (this.isRowExpanded(key)) {\n        return this.changeRowExpand(key);\n      }\n\n      return new _deferred.Deferred().resolve();\n    },\n    getRootNode: function () {\n      return this._dataSource && this._dataSource.getRootNode();\n    },\n    optionChanged: function (args) {\n      switch (args.name) {\n        case \"rootValue\":\n        case \"parentIdExpr\":\n        case \"itemsExpr\":\n        case \"filterMode\":\n        case \"expandNodesOnFiltering\":\n        case \"autoExpandAll\":\n        case \"hasItemsExpr\":\n        case \"dataStructure\":\n          this._columnsController.reset();\n\n          this._items = [];\n\n          this._refreshDataSource();\n\n          args.handled = true;\n          break;\n\n        case \"expandedRowKeys\":\n        case \"onNodesInitialized\":\n          if (this._dataSource && !this._dataSource._isNodesInitializing && !(0, _common.equalByValue)(args.value, args.previousValue)) {\n            this._loadOnOptionChange();\n          }\n\n          args.handled = true;\n          break;\n\n        case \"maxFilterLengthInRequest\":\n          args.handled = true;\n          break;\n\n        default:\n          this.callBase(args);\n      }\n    },\n    getNodeByKey: function (key) {\n      if (!this._dataSource) {\n        return;\n      }\n\n      return this._dataSource.getNodeByKey(key);\n    },\n    getChildNodeKeys: function (parentKey) {\n      if (!this._dataSource) {\n        return;\n      }\n\n      return this._dataSource.getChildNodeKeys(parentKey);\n    },\n    loadDescendants: function (keys, childrenOnly) {\n      if (!this._dataSource) {\n        return;\n      }\n\n      return this._dataSource.loadDescendants(keys, childrenOnly);\n    },\n    forEachNode: function () {\n      this._dataSource.forEachNode.apply(this, arguments);\n    }\n  };\n}());\n\nexports.DataController = DataController;\n\n_uiTree_list.default.registerModule(\"data\", {\n  defaultOptions: function () {\n    return (0, _extend.extend)({}, _uiGrid_core.default.defaultOptions(), {\n      itemsExpr: \"items\",\n      parentIdExpr: \"parentId\",\n      rootValue: 0,\n      dataStructure: \"plain\",\n      expandedRowKeys: [],\n      filterMode: \"withAncestors\",\n      expandNodesOnFiltering: true,\n      autoExpandAll: false,\n      onNodesInitialized: null,\n      maxFilterLengthInRequest: 1500,\n      paging: {\n        enabled: false\n      }\n    });\n  },\n  controllers: {\n    data: DataController\n  }\n});","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/tree_list/ui.tree_list.data_controller.js"],"names":["exports","DataController","_extend","require","_deferred","_uiTree_list","_interopRequireDefault","_common","_uiTree_list2","_uiGrid_core","obj","__esModule","default","controllers","data","inherit","_getDataSourceAdapter","_getNodeLevel","node","level","parent","visible","_generateDataItem","options","rowType","key","isExpanded","isRowExpanded","_loadOnOptionChange","_dataSource","load","_isItemEquals","item1","item2","callBase","apply","arguments","hasChildren","init","createAction","keyOf","dataSource","getKeyExpr","publicMethods","concat","changeRowExpand","that","args","executeAction","cancel","done","Deferred","resolve","cache","expandRow","collapseRow","getRootNode","optionChanged","name","_columnsController","reset","_items","_refreshDataSource","handled","_isNodesInitializing","equalByValue","value","previousValue","getNodeByKey","getChildNodeKeys","parentKey","loadDescendants","keys","childrenOnly","forEachNode","registerModule","defaultOptions","extend","itemsExpr","parentIdExpr","rootValue","dataStructure","expandedRowKeys","filterMode","expandNodesOnFiltering","autoExpandAll","onNodesInitialized","maxFilterLengthInRequest","paging","enabled"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/tree_list/ui.tree_list.data_controller.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.DataController = void 0;\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _uiTree_list = _interopRequireDefault(require(\"./ui.tree_list.core\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _uiTree_list2 = _interopRequireDefault(require(\"./ui.tree_list.data_source_adapter\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.data_controller\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DataController = _uiGrid_core.default.controllers.data.inherit(function() {\r\n    return {\r\n        _getDataSourceAdapter: function() {\r\n            return _uiTree_list2.default\r\n        },\r\n        _getNodeLevel: function(node) {\r\n            var level = -1;\r\n            while (node.parent) {\r\n                if (node.visible) {\r\n                    level++\r\n                }\r\n                node = node.parent\r\n            }\r\n            return level\r\n        },\r\n        _generateDataItem: function(node, options) {\r\n            return {\r\n                rowType: \"data\",\r\n                node: node,\r\n                key: node.key,\r\n                data: node.data,\r\n                isExpanded: this.isRowExpanded(node.key, options),\r\n                level: this._getNodeLevel(node)\r\n            }\r\n        },\r\n        _loadOnOptionChange: function() {\r\n            this._dataSource.load()\r\n        },\r\n        _isItemEquals: function(item1, item2) {\r\n            if (!this.callBase.apply(this, arguments)) {\r\n                return false\r\n            }\r\n            if (item1.node && item2.node && item1.node.hasChildren !== item2.node.hasChildren) {\r\n                return false\r\n            }\r\n            if (item1.level !== item2.level) {\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        init: function() {\r\n            this.createAction(\"onRowExpanding\");\r\n            this.createAction(\"onRowExpanded\");\r\n            this.createAction(\"onRowCollapsing\");\r\n            this.createAction(\"onRowCollapsed\");\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        keyOf: function(data) {\r\n            var dataSource = this._dataSource;\r\n            if (dataSource) {\r\n                return dataSource.keyOf(data)\r\n            }\r\n        },\r\n        key: function() {\r\n            var dataSource = this._dataSource;\r\n            if (dataSource) {\r\n                return dataSource.getKeyExpr()\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return this.callBase().concat([\"expandRow\", \"collapseRow\", \"isRowExpanded\", \"getRootNode\", \"getNodeByKey\", \"loadDescendants\", \"forEachNode\"])\r\n        },\r\n        changeRowExpand: function(key) {\r\n            if (this._dataSource) {\r\n                var that = this;\r\n                var args = {\r\n                    key: key\r\n                };\r\n                var isExpanded = this.isRowExpanded(key);\r\n                that.executeAction(isExpanded ? \"onRowCollapsing\" : \"onRowExpanding\", args);\r\n                if (!args.cancel) {\r\n                    return that._dataSource.changeRowExpand(key).done(function() {\r\n                        that.executeAction(isExpanded ? \"onRowCollapsed\" : \"onRowExpanded\", args)\r\n                    })\r\n                }\r\n            }\r\n            return (new _deferred.Deferred).resolve()\r\n        },\r\n        isRowExpanded: function(key, cache) {\r\n            return this._dataSource && this._dataSource.isRowExpanded(key, cache)\r\n        },\r\n        expandRow: function(key) {\r\n            if (!this.isRowExpanded(key)) {\r\n                return this.changeRowExpand(key)\r\n            }\r\n            return (new _deferred.Deferred).resolve()\r\n        },\r\n        collapseRow: function(key) {\r\n            if (this.isRowExpanded(key)) {\r\n                return this.changeRowExpand(key)\r\n            }\r\n            return (new _deferred.Deferred).resolve()\r\n        },\r\n        getRootNode: function() {\r\n            return this._dataSource && this._dataSource.getRootNode()\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"rootValue\":\r\n                case \"parentIdExpr\":\r\n                case \"itemsExpr\":\r\n                case \"filterMode\":\r\n                case \"expandNodesOnFiltering\":\r\n                case \"autoExpandAll\":\r\n                case \"hasItemsExpr\":\r\n                case \"dataStructure\":\r\n                    this._columnsController.reset();\r\n                    this._items = [];\r\n                    this._refreshDataSource();\r\n                    args.handled = true;\r\n                    break;\r\n                case \"expandedRowKeys\":\r\n                case \"onNodesInitialized\":\r\n                    if (this._dataSource && !this._dataSource._isNodesInitializing && !(0, _common.equalByValue)(args.value, args.previousValue)) {\r\n                        this._loadOnOptionChange()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                case \"maxFilterLengthInRequest\":\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        getNodeByKey: function(key) {\r\n            if (!this._dataSource) {\r\n                return\r\n            }\r\n            return this._dataSource.getNodeByKey(key)\r\n        },\r\n        getChildNodeKeys: function(parentKey) {\r\n            if (!this._dataSource) {\r\n                return\r\n            }\r\n            return this._dataSource.getChildNodeKeys(parentKey)\r\n        },\r\n        loadDescendants: function(keys, childrenOnly) {\r\n            if (!this._dataSource) {\r\n                return\r\n            }\r\n            return this._dataSource.loadDescendants(keys, childrenOnly)\r\n        },\r\n        forEachNode: function() {\r\n            this._dataSource.forEachNode.apply(this, arguments)\r\n        }\r\n    }\r\n}());\r\nexports.DataController = DataController;\r\n_uiTree_list.default.registerModule(\"data\", {\r\n    defaultOptions: function() {\r\n        return (0, _extend.extend)({}, _uiGrid_core.default.defaultOptions(), {\r\n            itemsExpr: \"items\",\r\n            parentIdExpr: \"parentId\",\r\n            rootValue: 0,\r\n            dataStructure: \"plain\",\r\n            expandedRowKeys: [],\r\n            filterMode: \"withAncestors\",\r\n            expandNodesOnFiltering: true,\r\n            autoExpandAll: false,\r\n            onNodesInitialized: null,\r\n            maxFilterLengthInRequest: 1500,\r\n            paging: {\r\n                enabled: false\r\n            }\r\n        })\r\n    },\r\n    controllers: {\r\n        data: DataController\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}