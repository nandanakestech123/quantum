{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\treatmentDone\\\\treatment.js\";\nimport React, { Component } from 'react';\nimport './style.scss';\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper, NormalCheckbox } from 'component/common';\nimport { dateFormat } from 'service/helperFunctions';\nimport _ from 'lodash';\nimport { history } from 'helpers';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport { SelectStaff } from './treatmentDone';\nimport { Reversal } from './reversal';\nimport service from 'assets/images/make-up-brush.png'; // import Discount from './cart/discount';\n\nimport closeIcon from \"assets/images/close.png\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport { TreatmentHistoryCart } from \"./TreatmentHistoryCart\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport classnames from \"classnames\";\nexport class TreatmentDoneClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tstaffList: [],\n      headerDetails: [{\n        label: 'Date',\n        sortKey: false,\n        width: \"110px\"\n      }, {\n        label: 'Treatment',\n        width: \"120px\"\n      }, {\n        label: 'Trans Ref',\n        sortKey: false,\n        width: \"50px\"\n      }, //{ label: 'Type', sortKey: false, width: \"55px\" },\n      // { label: 'Exp-Date', sortKey: false, width: \"80px\" },\n      {\n        label: 'Amount',\n        sortKey: false,\n        width: \"50px\"\n      }, {\n        label: 'Treat-Code',\n        sortKey: false,\n        width: \"105px\"\n      }, {\n        label: 'TD',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Rev',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Open',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'AR',\n        sortKey: false,\n        width: \"35px\"\n      }, {\n        label: 'Session',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Redeem',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Reversal',\n        sortKey: false,\n        width: \"55px\"\n      }],\n      // cartData: {},\n      yearList: [],\n      selectedYear: 2021,\n      isOpenTreatmentDone: false,\n      tsStaff: {},\n      workPoint: 0,\n      isOpenReversal: false,\n      checkBoxConfirmReversal: [],\n      selectedSession: \"\",\n      selectedItemTreatmentIds: [],\n      activeMenu: \"treatmentdone\"\n    };\n\n    this.componentWillMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n      this.props.getCommonApi('treatmentdone/Year/').then(key => {\n        let {\n          status,\n          data\n        } = key;\n        let {\n          yearList\n        } = this.state;\n\n        for (let value of data) {\n          yearList.push({\n            value: value,\n            label: value\n          });\n        }\n\n        this.setState({\n          yearList\n        });\n      });\n      this.getCart();\n    };\n\n    this.handleCheckboxChangeWithNormalCheckBox = item => {\n      let newArray = [...this.state.checkBoxConfirmReversal, item.target.name];\n\n      if (this.state.checkBoxConfirmReversal.includes(item.target.name)) {\n        newArray = newArray.filter(day => day !== item.target.name);\n      }\n\n      this.setState({\n        checkBoxConfirmReversal: newArray\n      });\n    };\n\n    this.getCart = async () => {\n      console.log(this.props, \"sfgdfsgdfghgf\");\n      let {\n        roomList,\n        sourceList,\n        staffList,\n        cartData,\n        duration,\n        tstaffList,\n        selectedYear\n      } = this.state;\n      let {\n        custId = 50270\n      } = this.props.basicApptDetail;\n      this.props.getCommonApi(`treatmentdone/?year=${selectedYear}&cust_id=${custId}`).then(async key => {\n        cartData = key;\n        await this.setState({\n          tstaffList: []\n        });\n        tstaffList = key.data;\n        this.setState({\n          tstaffList\n        });\n      });\n    };\n\n    this.handleYearChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        selectedYear\n      } = this.state;\n      selectedYear = value;\n      await this.setState({\n        selectedYear\n      });\n      this.getCart();\n    };\n\n    this.getDataFromRes = data => {\n      let {\n        formFields,\n        cartData,\n        updateFields,\n        postFields\n      } = this.state;\n      formFields['Item'] = data.value.Item;\n      formFields['Price'] = data.value.Price;\n      formFields['Room'] = data.value.Room;\n      updateFields['Room'] = data.value.Room;\n      formFields['Source'] = data.value.Source;\n      updateFields['Source'] = data.value.Source;\n      formFields['add_duration'] = data.value.add_duration;\n      formFields['new_remark'] = data.value.new_remark;\n      updateFields['new_remark'] = data.value.new_remark;\n      postFields['times'] = data.value.times;\n      postFields['work_point'] = data.value.work_point;\n      this.setState({\n        formFields,\n        updateFields,\n        postFields\n      });\n    };\n\n    this.handleSubmit = id => {};\n\n    this.handleDialog = () => {\n      this.setState({\n        isOpenTreatmentDone: false,\n        isOpenReversal: false,\n        checkBoxConfirmReversal: []\n      });\n      this.getCart();\n    };\n\n    this.handleSearch = event => {\n      event.persist();\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          this.props.getCommonApi(`custappt/?search=${searchString}`).then(key => {\n            let {\n              status,\n              data\n            } = key;\n\n            if (status === 200) {\n              // for (let value of data) {\n              //     customerList.push({ value: value.id, label: value.emp_name })\n              // }\n              this.setState({\n                customerOption: data\n              });\n            }\n          });\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleSelectCustomer = async data => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"custId\"] = data.id;\n      formFields[\"custName\"] = data.cust_name;\n      this.setState({\n        formFields,\n        isOpenCustomer: false,\n        customerOption: []\n      });\n      await this.props.updateForm('basicApptDetail', formFields);\n      console.log(this.props.basicApptDetail, \"sdfsadfasdf\");\n    };\n\n    this.handleCartCreated = (data, price, id) => {\n      let {\n        basicApptDetail\n      } = this.props;\n      let {\n        tstaffList\n      } = this.state;\n      let payload = [];\n\n      for (let key of tstaffList) {\n        let reverseTreatmentIds = [];\n        reverseTreatmentIds = key.treatmentids.reverse();\n\n        if (key.sel === true) {\n          let obj = {\n            \"cust_noid\": basicApptDetail.custId,\n            \"cart_date\": dateFormat(new Date(), \"yyyy-mm-dd\"),\n            \"itemcodeid\": key.stockid,\n            \"price\": key.unit_amount,\n            \"item_uom\": null,\n            \"treatment_account\": key.TreatmentAccountid,\n            \"treatment\": reverseTreatmentIds.slice(0, key.session),\n            \"ori_stockid\": null\n          };\n          payload.push(obj);\n        }\n      }\n\n      let test = payload;\n      console.log(\"payload-data\", test);\n      this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${basicApptDetail.custId}`).then(res => {\n        if (res.data.length === 0) {\n          this.props.commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload).then(res => {\n            // this.props.handleCartCreated()\n            this.setState({\n              activeTab: \"treatment\",\n              isOpenPriceModal: false\n            });\n            history.push('/admin/cart');\n          });\n        } else {\n          this.props.commonCreateApi(`itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`, payload).then(res => {\n            // this.props.handleCartCreated()\n            this.setState({\n              activeTab: \"treatment\",\n              isOpenPriceModal: false\n            });\n            history.push('/admin/cart');\n          });\n        }\n      });\n    };\n\n    this.handleCheckout = () => {\n      let {\n        isOpenPayment\n      } = this.state;\n      isOpenPayment = true;\n      this.setState({\n        isOpenPayment\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      }); // this.props.updateForm('customerDetail', formFields)\n      // await this.props.updateForm('appointmentCustomerDetail', formFields)\n    };\n\n    this.handlePostChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        postFields\n      } = this.state;\n      postFields[name] = value;\n      await this.setState({\n        postFields\n      });\n    };\n\n    this.handleUpdateChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        updateFields\n      } = this.state;\n      updateFields[name] = value;\n      await this.setState({\n        updateFields\n      });\n      let event = {\n        target: {\n          value: value,\n          name: name\n        }\n      }; // this.handleUpdatestaff(event);\n    };\n\n    this.handleAddstaff = async item => {\n      let {\n        tstaffList,\n        selectedSession,\n        selectedItemTreatmentIds\n      } = this.state;\n      selectedSession = item.session;\n      let reverseTreatmentIds = [];\n      reverseTreatmentIds = item.treatmentids.reverse();\n\n      if (selectedSession == 0) {\n        selectedSession = 1;\n      }\n\n      selectedItemTreatmentIds = reverseTreatmentIds.slice(0, selectedSession);\n      var unit_rate = item.unit_amount;\n      var qualifiedAmount = selectedSession * unit_rate;\n      this.setState({\n        selectedSession,\n        selectedItemTreatmentIds\n      });\n      /* let test=0;\r\n       const currentParentCodeBalance = tstaffList.filter(\r\n           (res) => res.treatment_parentcode ===  item.treatment_parentcode\r\n         ).reduce((sum, currentValue) => {\r\n           return  currentValue.balance;\r\n         }, 0);\r\n       const currentParentCodeSelectedStaffValue = tstaffList.filter(\r\n           (res) => res.treatment_parentcode ===  item.treatment_parentcode && res.staff!=null\r\n           ).reduce((sum, currentValue) => {\r\n               return parseFloat((eval(sum))) + parseFloat((eval(currentValue.unit_amount)));\r\n             }, 0);\r\n       \r\n       if(item.staff==null)\r\n       {\r\n           test=parseFloat((eval(currentParentCodeSelectedStaffValue))) + parseFloat((eval(item.unit_amount))) ;\r\n       }\r\n       else{\r\n           test=parseFloat((eval(currentParentCodeSelectedStaffValue))) - parseFloat((eval(item.unit_amount))) ;\r\n       }\r\n       */\n      //if (currentParentCodeBalance >= test) {\n\n      if (item.balance >= qualifiedAmount) {\n        let {\n          tstaffList,\n          formFields,\n          cartData,\n          postFields\n        } = this.state;\n        await this.setState({\n          tsStaff: item\n        });\n        this.setState({\n          isOpenTreatmentDone: true\n        });\n      } else {\n        this.handleDialog();\n        alert(\"Insufficient balance to redeem\");\n      }\n    };\n\n    this.handleUpdatestaff = async (event, item, index) => {\n      let {\n        tstaffList,\n        formFields,\n        cartData,\n        updateFields\n      } = this.state;\n      tstaffList[index][event.target.name] = event.target.value;\n      this.setState({\n        tstaffList\n      });\n      let data = {};\n\n      if (event.target.name === \"appt_fr_time\") {\n        data = {\n          appt_fr_time: event.target.value,\n          add_duration: formFields['add_duration']\n        };\n      }\n\n      if (event.target.name === \"add_duration\") {\n        data = {\n          appt_fr_time: item.appt_fr_time,\n          add_duration: event.target.value\n        };\n      } // if (updateFields.Source && updateFields.Room) {\n\n\n      this.props.commonPatchApi(`tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`, data).then(() => {\n        this.getCart();\n      }); // } else {\n      //     this.setState({ showUpdateError: true })\n      // }\n    };\n\n    this.handleClearLine = () => {\n      this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=0&cartid=${this.props.cartId}`).then(() => {\n        this.getCart();\n      });\n    };\n\n    this.handleClearAll = () => {\n      this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=1&cartid=${this.props.cartId}`).then(() => {\n        let {\n          formFields,\n          postFields\n        } = this.state;\n        formFields[\"work_point\"] = \"\";\n        postFields['times'] = \"\";\n        this.setState({\n          formFields,\n          postFields\n        });\n        this.getCart();\n      });\n    };\n\n    this.handleReversalTreatmentAll = async () => {\n      let treatmentIds = this.state.checkBoxConfirmReversal;\n      await this.setState({\n        treatmentIds\n      });\n      this.setState({\n        isOpenReversal: true\n      });\n    };\n\n    this.handleReversalTreatment = async item => {\n      let reverseTreatmentIds = [];\n      let {\n        selectedSession\n      } = this.state;\n      selectedSession = item.session;\n\n      if (selectedSession == 0) {\n        selectedSession = 1;\n      }\n\n      reverseTreatmentIds = item.treatmentids.reverse().slice(0, selectedSession);\n      await this.setState({\n        treatmentIds: reverseTreatmentIds,\n        selectedSession\n      });\n      this.setState({\n        isOpenReversal: true\n      });\n    };\n\n    this.handleReverse = (item, index) => {\n      let {\n        tstaffList\n      } = this.state;\n      tstaffList[index]['rev'] = true;\n      this.setState({\n        tstaffList\n      }); // onClick={this.handleReversalTreatment}\n    };\n\n    this.changeIndexSession = (index, value) => {\n      let {\n        tstaffList\n      } = this.state;\n      tstaffList[index]['session'] = value;\n      this.setState({\n        tstaffList\n      }); // onClick={this.handleReversalTreatment}\n    };\n\n    this.toggle = tab => {\n      if (this.state.activeMenu !== tab) {\n        this.setState({\n          activeMenu: tab\n        });\n      }\n    };\n  }\n\n  render() {\n    let {\n      tstaffList = [],\n      selectedYear,\n      yearList,\n      isOpenTreatmentDone,\n      headerDetails,\n      tsStaff,\n      isOpenReversal,\n      treatmentIds,\n      activeMenu\n    } = this.state;\n    let localtStaffList = [...tstaffList];\n    let {\n      basicApptDetail\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatmentDone-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"beautesoft-navlink customer-detail mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filled-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"treatmentdone\"\n      }),\n      onClick: () => {\n        this.toggle(\"treatmentdone\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 27\n      }\n    }, \"Treatment Done\")), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"treatmenthistory\"\n      }),\n      onClick: () => {\n        this.toggle(\"treatmenthistory\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 27\n      }\n    }, \"Treatment History\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"fs-15 clear-line\",\n      label: \"Back\",\n      outline: false,\n      onClick: () => history.push(`/admin/cart`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatment-section ml-1 p-2 pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"treatmentdone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }\n    }, activeMenu === \"treatmentdone\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row treatment-done-new p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 font-700 mb-3 title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 21\n      }\n    }, \"Available Treatments\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex select-year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-0 mb-2 name fs-16 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 25\n      }\n    }, \"Select Year\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: yearList,\n      value: selectedYear,\n      name: \"selectedYear\",\n      onChange: this.handleYearChange,\n      className: \"selected-year mb-2 py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `col-12 cart-item`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `item-list`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination // pageMeta={pageMeta}\n      // isEmpty={tstaffList.length === 0 ? true:false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 29\n      }\n    }, tstaffList.length > 0 ? tstaffList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"position-relative status-type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 49\n        }\n      }, item.treatment_date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 49\n        }\n      }, item.course)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 49\n        }\n      }, item.transacno_ref)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 49\n        }\n      }, item.unit_amount)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 49\n        }\n      }, item.treatment_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 45\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 50\n        }\n      }, item.td)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 45\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 50\n        }\n      }, item.rev)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 45\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 50\n        }\n      }, item.open)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 45\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 50\n        }\n      }, item.ar)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          width: \"50px\"\n        },\n        value: item.session,\n        onChange: e => this.changeIndexSession(index, e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnRedeem\",\n        onClick: () => this.handleAddstaff(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 45\n        }\n      }, \"Select\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 45\n        }\n      }, item.iscurrentloggedinsalon && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnReversal\",\n        onClick: () => this.handleReversalTreatment(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 45\n        }\n      }, \"Select\")));\n    }) : \"\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pt-4 action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \" fs-15 confirm\",\n      label: \"Confirm Treatment Done\",\n      outline: false,\n      onClick: () => this.handleCartCreated(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 29\n      }\n    })))))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-reversal\",\n      style: {\n        minWidth: \"1160px\"\n      },\n      modal: isOpenReversal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Reversal, {\n      id: basicApptDetail.custId,\n      treatmentId: tsStaff.id,\n      reversalId: treatmentIds,\n      cartId: this.props.id,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-modal\",\n      style: {\n        minWidth: \"760px\"\n      },\n      modal: isOpenTreatmentDone,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SelectStaff, {\n      id: this.state.selectedItemTreatmentIds //id={tsStaff.id} \n      ,\n      session: this.state.selectedSession,\n      cartId: basicApptDetail.cartId,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 21\n      }\n    }))) : null), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"treatmenthistory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 14\n      }\n    }, activeMenu === \"treatmenthistory\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row treatment-done-new p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(TreatmentHistoryCart, {\n      customerNumber: basicApptDetail.custId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 22\n      }\n    }))) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonCreateApi,\n    commonPatchApi,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const TreatmentDone = connect(mapStateToProps, mapDispatchToProps)(TreatmentDoneClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Cart/treatmentDone/treatment.js"],"names":["React","Component","NormalButton","NormalInput","NormalSelect","InputSearch","NormalModal","TableWrapper","NormalCheckbox","dateFormat","_","history","connect","bindActionCreators","getCommonApi","updateForm","commonCreateApi","commonDeleteApi","commonPatchApi","SimpleReactValidator","SelectStaff","Reversal","service","closeIcon","FormGroup","Label","Input","TreatmentHistoryCart","Nav","NavItem","NavLink","TabContent","TabPane","classnames","TreatmentDoneClass","state","tstaffList","headerDetails","label","sortKey","width","yearList","selectedYear","isOpenTreatmentDone","tsStaff","workPoint","isOpenReversal","checkBoxConfirmReversal","selectedSession","selectedItemTreatmentIds","activeMenu","componentWillMount","validator","element","message","autoForceUpdate","props","then","key","status","data","value","push","setState","getCart","handleCheckboxChangeWithNormalCheckBox","item","newArray","target","name","includes","filter","day","console","log","roomList","sourceList","staffList","cartData","duration","custId","basicApptDetail","handleYearChange","getDataFromRes","formFields","updateFields","postFields","Item","Price","Room","Source","add_duration","new_remark","times","work_point","handleSubmit","id","handleDialog","handleSearch","event","persist","debouncedFn","debounce","searchString","customerOption","handleSelectCustomer","cust_name","isOpenCustomer","handleCartCreated","price","payload","reverseTreatmentIds","treatmentids","reverse","sel","obj","Date","stockid","unit_amount","TreatmentAccountid","slice","session","test","res","length","activeTab","isOpenPriceModal","cart_id","handleCheckout","isOpenPayment","handleChange","handlePostChange","handleUpdateChange","handleAddstaff","unit_rate","qualifiedAmount","balance","alert","handleUpdatestaff","index","appt_fr_time","handleClearLine","cartId","handleClearAll","handleReversalTreatmentAll","treatmentIds","handleReversalTreatment","handleReverse","changeIndexSession","toggle","tab","render","localtStaffList","active","handlePagination","map","treatment_date","course","transacno_ref","treatment_code","td","rev","open","ar","e","iscurrentloggedinsalon","minWidth","mapStateToProps","selected_cstomer","common","appointment","mapDispatchToProps","dispatch","TreatmentDone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper, NormalCheckbox } from 'component/common';\r\nimport { dateFormat } from 'service/helperFunctions';\r\nimport _ from 'lodash';\r\nimport { history } from 'helpers';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\"\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { SelectStaff } from './treatmentDone';\r\nimport { Reversal } from './reversal';\r\nimport service from 'assets/images/make-up-brush.png';\r\n// import Discount from './cart/discount';\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\nimport { TreatmentHistoryCart } from \"./TreatmentHistoryCart\";\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nexport class TreatmentDoneClass extends Component {\r\n    state = {\r\n        tstaffList: [],\r\n        headerDetails: [\r\n            { label: 'Date', sortKey: false, width: \"110px\" },\r\n            { label: 'Treatment', width: \"120px\" },\r\n            { label: 'Trans Ref', sortKey: false, width: \"50px\" },\r\n           \r\n            //{ label: 'Type', sortKey: false, width: \"55px\" },\r\n           // { label: 'Exp-Date', sortKey: false, width: \"80px\" },\r\n            { label: 'Amount', sortKey: false, width: \"50px\" },\r\n            \r\n           \r\n            { label: 'Treat-Code', sortKey: false, width: \"105px\" },\r\n            { label: 'TD', sortKey: false, width: \"55px\" },\r\n            { label: 'Rev', sortKey: false, width: \"55px\" },\r\n            { label: 'Open', sortKey: false, width: \"55px\" },\r\n            { label: 'AR', sortKey: false, width: \"35px\" },\r\n            { label: 'Session', sortKey: false, width: \"55px\" },\r\n            { label: 'Redeem', sortKey: false, width: \"55px\" },\r\n            { label: 'Reversal', sortKey: false, width: \"55px\" },\r\n\r\n\r\n        ],\r\n        // cartData: {},\r\n        yearList: [],\r\n        selectedYear: 2021,\r\n        isOpenTreatmentDone: false,\r\n        tsStaff: {},\r\n        workPoint: 0,\r\n        isOpenReversal: false,\r\n        checkBoxConfirmReversal: [],\r\n        selectedSession:\"\",\r\n        selectedItemTreatmentIds:[],\r\n        activeMenu: \"treatmentdone\",\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.validator = new SimpleReactValidator({\r\n            element: message => <span className=\"error-message text-danger validNo fs14\">{message}</span>,\r\n            autoForceUpdate: this,\r\n        });\r\n        this.props.getCommonApi('treatmentdone/Year/').then((key) => {\r\n            let { status, data } = key;\r\n            let { yearList } = this.state;\r\n            for (let value of data) {\r\n                yearList.push({ value: value, label: value })\r\n            }\r\n            this.setState({ yearList })\r\n        })\r\n\r\n        this.getCart();\r\n\r\n    }\r\n      handleCheckboxChangeWithNormalCheckBox = (item) => {\r\n        let newArray = [...this.state.checkBoxConfirmReversal, item.target.name];\r\n        if (this.state.checkBoxConfirmReversal.includes(item.target.name)) {\r\n          newArray = newArray.filter(day => day !== item.target.name);\r\n        }\r\n        this.setState({\r\n          checkBoxConfirmReversal: newArray\r\n        });\r\n      };\r\n    getCart = async () => {\r\n        console.log(this.props, \"sfgdfsgdfghgf\")\r\n        let { roomList, sourceList, staffList, cartData, duration, tstaffList, selectedYear } = this.state;\r\n        let { custId = 50270 } = this.props.basicApptDetail\r\n        this.props.getCommonApi(`treatmentdone/?year=${selectedYear}&cust_id=${custId}`).then(async(key) => {\r\n            cartData = key;\r\n            await this.setState({tstaffList:[]})\r\n            tstaffList = key.data;\r\n            this.setState({ tstaffList });\r\n        })\r\n    }\r\n\r\n    handleYearChange = async ({ target: { value, name } }) => {\r\n        let { selectedYear } = this.state;\r\n        selectedYear = value;\r\n        await this.setState({\r\n            selectedYear\r\n        })\r\n        this.getCart();\r\n    }\r\n\r\n    getDataFromRes = (data) => {\r\n        let { formFields, cartData, updateFields, postFields } = this.state;\r\n        formFields['Item'] = data.value.Item;\r\n        formFields['Price'] = data.value.Price;\r\n        formFields['Room'] = data.value.Room;\r\n        updateFields['Room'] = data.value.Room;\r\n        formFields['Source'] = data.value.Source;\r\n        updateFields['Source'] = data.value.Source;\r\n        formFields['add_duration'] = data.value.add_duration;\r\n        formFields['new_remark'] = data.value.new_remark;\r\n        updateFields['new_remark'] = data.value.new_remark;\r\n        postFields['times'] = data.value.times;\r\n        postFields['work_point'] = data.value.work_point;\r\n        this.setState({\r\n            formFields,\r\n            updateFields,\r\n            postFields\r\n        })\r\n    }\r\n\r\n\r\n    // getYearList = (data) => {\r\n    //     let date = new Date().getFullYear();\r\n\r\n    //     let { yearList } = this.state;\r\n    //     for (let i = date; i > 1970; i--) {\r\n    //         yearList.push({ label: i, value: i });\r\n    //     }\r\n    //     this.setState({\r\n    //         yearList\r\n    //     })\r\n    // }\r\n\r\n    handleSubmit = (id) => {\r\n\r\n    }\r\n\r\n    handleDialog = () => {\r\n        this.setState({\r\n            isOpenTreatmentDone: false,\r\n            isOpenReversal: false,\r\n            checkBoxConfirmReversal:[]\r\n        });\r\n        this.getCart();\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        event.persist();\r\n\r\n        if (!this.debouncedFn) {\r\n            this.debouncedFn = _.debounce(() => {\r\n                let searchString = event.target.value;\r\n                this.props.getCommonApi(`custappt/?search=${searchString}`).then((key) => {\r\n\r\n                    let { status, data } = key;\r\n                    if (status === 200) {\r\n                        // for (let value of data) {\r\n                        //     customerList.push({ value: value.id, label: value.emp_name })\r\n                        // }\r\n                        this.setState({ customerOption: data })\r\n                    }\r\n                })\r\n            }, 500);\r\n        }\r\n        this.debouncedFn();\r\n    }\r\n\r\n    handleSelectCustomer = async (data) => {\r\n        let { formFields } = this.state;\r\n        formFields[\"custId\"] = data.id;\r\n        formFields[\"custName\"] = data.cust_name;\r\n        this.setState({ formFields, isOpenCustomer: false, customerOption: [] });\r\n        await this.props.updateForm('basicApptDetail', formFields)\r\n        console.log(this.props.basicApptDetail, \"sdfsadfasdf\")\r\n    }\r\n\r\n    handleCartCreated = (data, price, id) => {\r\n        let { basicApptDetail } = this.props;\r\n        let { tstaffList } = this.state;\r\n        let payload = []\r\n\r\n        for(let key of tstaffList){\r\n            let reverseTreatmentIds=[];\r\n            reverseTreatmentIds= key.treatmentids.reverse();\r\n            if(key.sel===true){\r\n                let obj =   {\r\n                    \"cust_noid\": basicApptDetail.custId,\r\n                    \"cart_date\" : dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n                    \"itemcodeid\": key.stockid,  \r\n                    \"price\" : key.unit_amount,\r\n                    \"item_uom\" : null,\r\n                    \"treatment_account\" : key.TreatmentAccountid,\r\n                    \"treatment\": reverseTreatmentIds.slice(0, key.session),\r\n                    \"ori_stockid\": null,\r\n                }\r\n                payload.push(obj);\r\n            }\r\n        }\r\n\r\n        let test =payload;\r\n        console.log(\"payload-data\",test);\r\n        this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${basicApptDetail.custId}`).then((res) => {\r\n            if (res.data.length === 0) {\r\n                this.props.commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload).then((res) => {\r\n                    // this.props.handleCartCreated()\r\n                    this.setState({ activeTab: \"treatment\", isOpenPriceModal: false })\r\n                    history.push('/admin/cart');\r\n                })\r\n            } else {\r\n                this.props.commonCreateApi(`itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`, payload).then((res) => {\r\n                    // this.props.handleCartCreated()\r\n                    this.setState({ activeTab: \"treatment\", isOpenPriceModal: false })\r\n                    history.push('/admin/cart');\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleCheckout = () => {\r\n        let { isOpenPayment } = this.state;\r\n        isOpenPayment = true;\r\n        this.setState({ isOpenPayment });\r\n    }\r\n\r\n    handleChange = async ({ target: { value, name } }) => {\r\n        let { formFields } = this.state;\r\n        formFields[name] = value;\r\n        await this.setState({\r\n            formFields,\r\n        });\r\n        // this.props.updateForm('customerDetail', formFields)\r\n        // await this.props.updateForm('appointmentCustomerDetail', formFields)\r\n    };\r\n\r\n    handlePostChange = async ({ target: { value, name } }) => {\r\n        let { postFields } = this.state;\r\n        postFields[name] = value;\r\n        await this.setState({\r\n            postFields,\r\n        });\r\n    }\r\n\r\n    handleUpdateChange = async ({ target: { value, name } }) => {\r\n        let { updateFields } = this.state;\r\n        updateFields[name] = value;\r\n        await this.setState({\r\n            updateFields,\r\n        });\r\n        let event = { target: { value: value, name: name } }\r\n        // this.handleUpdatestaff(event);\r\n    }\r\n\r\n    handleAddstaff = async (item) => {\r\n        let { tstaffList,selectedSession,selectedItemTreatmentIds } = this.state;\r\n        selectedSession=item.session;\r\n        let reverseTreatmentIds=[];\r\n            reverseTreatmentIds= item.treatmentids.reverse();\r\n\r\n        if(selectedSession==0)\r\n        {\r\n            selectedSession=1;\r\n        }\r\n        selectedItemTreatmentIds=reverseTreatmentIds.slice(0, selectedSession);\r\n        var unit_rate =item.unit_amount;\r\n        var qualifiedAmount=selectedSession*unit_rate;\r\n        this.setState({selectedSession,selectedItemTreatmentIds});\r\n        \r\n       /* let test=0;\r\n        const currentParentCodeBalance = tstaffList.filter(\r\n            (res) => res.treatment_parentcode ===  item.treatment_parentcode\r\n          ).reduce((sum, currentValue) => {\r\n            return  currentValue.balance;\r\n          }, 0);\r\n        const currentParentCodeSelectedStaffValue = tstaffList.filter(\r\n            (res) => res.treatment_parentcode ===  item.treatment_parentcode && res.staff!=null\r\n            ).reduce((sum, currentValue) => {\r\n                return parseFloat((eval(sum))) + parseFloat((eval(currentValue.unit_amount)));\r\n              }, 0);\r\n        \r\n        if(item.staff==null)\r\n        {\r\n            test=parseFloat((eval(currentParentCodeSelectedStaffValue))) + parseFloat((eval(item.unit_amount))) ;\r\n        }\r\n        else{\r\n            test=parseFloat((eval(currentParentCodeSelectedStaffValue))) - parseFloat((eval(item.unit_amount))) ;\r\n        }\r\n        */\r\n        \r\n        //if (currentParentCodeBalance >= test) {\r\n        if(item.balance>=qualifiedAmount){\r\n          let { tstaffList, formFields, cartData, postFields } = this.state;\r\n          await this.setState({ tsStaff: item });\r\n          this.setState({\r\n            isOpenTreatmentDone: true,\r\n          });\r\n        }\r\n        else{\r\n            this.handleDialog();\r\n            alert(\"Insufficient balance to redeem\");\r\n        }\r\n      };\r\n\r\n    handleUpdatestaff = async (event, item, index) => {\r\n        let { tstaffList, formFields, cartData, updateFields } = this.state;\r\n        tstaffList[index][event.target.name] = event.target.value;\r\n        this.setState({\r\n            tstaffList\r\n        })\r\n        let data = {}\r\n        if (event.target.name === \"appt_fr_time\") {\r\n            data = {\r\n                appt_fr_time: event.target.value,\r\n                add_duration: formFields['add_duration']\r\n            }\r\n        }\r\n        if (event.target.name === \"add_duration\") {\r\n            data = {\r\n                appt_fr_time: item.appt_fr_time,\r\n                add_duration: event.target.value\r\n            }\r\n        }\r\n\r\n        // if (updateFields.Source && updateFields.Room) {\r\n        this.props.commonPatchApi(`tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`, data).then(() => {\r\n            this.getCart();\r\n        })\r\n        // } else {\r\n        //     this.setState({ showUpdateError: true })\r\n        // }\r\n    }\r\n\r\n    handleClearLine = () => {\r\n        this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=0&cartid=${this.props.cartId}`).then(() => {\r\n            this.getCart();\r\n        })\r\n    }\r\n\r\n    handleClearAll = () => {\r\n        this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=1&cartid=${this.props.cartId}`).then(() => {\r\n            let { formFields, postFields } = this.state;\r\n            formFields[\"work_point\"] = \"\";\r\n            postFields['times'] = \"\";\r\n            this.setState({\r\n                formFields,\r\n                postFields\r\n            });\r\n            this.getCart();\r\n\r\n        })\r\n    }\r\n    handleReversalTreatmentAll = async () => {\r\n        let treatmentIds = this.state.checkBoxConfirmReversal\r\n\r\n        await this.setState({\r\n            treatmentIds\r\n        });\r\n\r\n        this.setState({\r\n            isOpenReversal: true,\r\n        });\r\n    }\r\n    handleReversalTreatment = async (item) => {\r\n        let reverseTreatmentIds=[];\r\n        let { selectedSession } = this.state;\r\n        selectedSession=item.session;\r\n\r\n        if(selectedSession==0)\r\n        {\r\n            selectedSession=1;\r\n        }\r\n        reverseTreatmentIds= item.treatmentids.reverse().slice(0, selectedSession);\r\n        await this.setState({\r\n            treatmentIds:reverseTreatmentIds,\r\n            selectedSession\r\n        });\r\n\r\n        this.setState({\r\n            isOpenReversal: true,\r\n        });\r\n    }\r\n\r\n    handleReverse = (item, index) => {\r\n        let { tstaffList } = this.state;\r\n        tstaffList[index]['rev'] = true;\r\n        this.setState({\r\n            tstaffList\r\n        })\r\n        // onClick={this.handleReversalTreatment}\r\n    }\r\n    changeIndexSession = (index,value) => {\r\n        let { tstaffList } = this.state;\r\n        tstaffList[index]['session'] = value;\r\n        this.setState({\r\n            tstaffList\r\n        })\r\n        // onClick={this.handleReversalTreatment}\r\n    }\r\n    toggle = tab => {\r\n        if (this.state.activeMenu !== tab) {\r\n          this.setState({\r\n            activeMenu: tab,\r\n          });\r\n        }\r\n      };\r\n    render() {      \r\n        let { tstaffList = [], selectedYear, yearList, isOpenTreatmentDone, headerDetails, tsStaff, isOpenReversal, treatmentIds,activeMenu } = this.state;\r\n        let localtStaffList=[...tstaffList]\r\n        let { basicApptDetail } = this.props;\r\n        return (        \r\n            <div className=\"treatmentDone-menu\">\r\n            <div className=\"row\">\r\n              <div className=\"col-10\">\r\n                <div className=\"beautesoft-navlink customer-detail mt-3\">\r\n                  <div className=\"filled-tabs\">\r\n                    <div className=\"tabs-block\">\r\n                      <Nav tabs>\r\n                        <NavItem>\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"treatmentdone\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"treatmentdone\");\r\n                            }}\r\n                          >\r\n                            Treatment Done\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                          <NavLink\r\n                            className={classnames({\r\n                              active: this.state.activeMenu === \"treatmenthistory\",\r\n                            })}\r\n                            onClick={() => {\r\n                              this.toggle(\"treatmenthistory\");\r\n                            }}\r\n                          >\r\n                            Treatment History\r\n                          </NavLink>\r\n                        </NavItem>\r\n                      </Nav>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"fs-15 clear-line\"\r\n                  label=\"Back\"\r\n                  outline={false}\r\n                  onClick={() => history.push(`/admin/cart`)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"treatment-section ml-1 p-2 pr-0\">\r\n              <TabContent activeTab={this.state.activeMenu}>\r\n                <TabPane tabId=\"treatmentdone\">\r\n                  {activeMenu === \"treatmentdone\" ? (\r\n            <div className=\"row treatment-done-new p-3\">          \r\n                <div className=\"col-10 header\">\r\n                    <p className=\"fs-18 font-700 mb-3 title\">Available Treatments</p>\r\n                    <div className=\"d-flex select-year\">\r\n                        <div className=\"pl-0 mb-2 name fs-16 py-2\">\r\n                            Select Year\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <NormalSelect\r\n                                // placeholder=\"Enter here\"\r\n                                options={yearList}\r\n                                value={selectedYear}\r\n                                name=\"selectedYear\"\r\n                                onChange={this.handleYearChange}\r\n                                className=\"selected-year mb-2 py-0\"\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n           \r\n\r\n\r\n                <div className={`col-12 cart-item`}>\r\n                    <div className={`item-list`}>\r\n\r\n                        <div className=\"table\">\r\n                            <TableWrapper\r\n                                headerDetails={headerDetails}\r\n                                queryHandler={this.handlePagination}\r\n                            // pageMeta={pageMeta}\r\n                            // isEmpty={tstaffList.length === 0 ? true:false}\r\n                            >\r\n                                {tstaffList.length > 0 ? tstaffList.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td className=\"position-relative status-type\">\r\n                                                <div className=\"d-flex align-items-center justify-content-center\">{item.treatment_date}</div>\r\n                                            </td>\r\n                                            <td><div className=\"d-flex align-items-center justify-content-center\">{item.course}</div></td>\r\n                                            <td>\r\n                                                <div className=\"d-flex align-items-center justify-content-center\">{item.transacno_ref}</div>\r\n                                            </td>\r\n                                            \r\n                                            \r\n                                            <td>\r\n                                                <div className=\"d-flex align-items-center justify-content-center\">{item.unit_amount}</div>\r\n                                            </td>\r\n                                      \r\n                                           \r\n                                            <td>\r\n                                                <div className=\"d-flex align-items-center justify-content-center\">{item.treatment_code}</div>\r\n                                            </td>\r\n                                            <td> <div className=\"d-flex align-items-center justify-content-center\">{item.td}</div></td>\r\n                                            <td> <div className=\"d-flex align-items-center justify-content-center\">{item.rev}</div></td>\r\n                                            <td> <div className=\"d-flex align-items-center justify-content-center\">{item.open}</div></td>\r\n                                            <td> <div className=\"d-flex align-items-center justify-content-center\">{item.ar}</div></td>\r\n                                            <td >\r\n                                                <input type=\"text\"\r\n                                                style={{ width: \"50px\"}}\r\n                                                value={item.session}\r\n                                                onChange={(e) =>\r\n                                                    this.changeIndexSession(index,e.target.value)\r\n                                                }\r\n                                                />\r\n                                            </td>\r\n                                            <td style={{ width:\"50px\"}}>\r\n                                            <button\r\n                                                   className=\"btnRedeem\"\r\n                                                 onClick={() => this.handleAddstaff(item)}\r\n                                                  >\r\n                                                 Select\r\n                                                 </button>\r\n                                            </td>\r\n                                            <td  style={{ width:\"50px\"}}>\r\n                                         \r\n                                            {item.iscurrentloggedinsalon &&\r\n                                            <button className=\"btnReversal\"\r\n                                            onClick={() => this.handleReversalTreatment(item)}>Select</button>\r\n                                                  }\r\n                                            \r\n                                            </td>\r\n                                           \r\n                                        </tr>\r\n                                    )\r\n                                }) : \"\"\r\n                                }\r\n\r\n                            </TableWrapper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 pt-4 action-bar\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-7 d-flex\">\r\n                            {/* <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-line\"\r\n                                label=\"Clear Line\"\r\n                                outline={false}\r\n                                onClick={this.handleClearLine}\r\n                            />\r\n                            <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-all\"\r\n                                label=\"Clear All\"\r\n                                outline={false}\r\n                                onClick={this.handleClearAll}\r\n                            /> */}\r\n                        </div>\r\n                        <div className=\"col-5\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-6 text-right\">\r\n\r\n                             \r\n                                </div>\r\n                            <div className=\"col-6 text-right\">\r\n\r\n                            <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\" fs-15 confirm\"\r\n                                label=\"Confirm Treatment Done\"\r\n                                outline={false}\r\n                                onClick={() => this.handleCartCreated()}\r\n                            />\r\n\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <NormalModal className={\"transaction-done-reversal\"} style={{ minWidth: \"1160px\" }} modal={isOpenReversal} handleModal={this.handleDialog}>\r\n                    <img onClick={this.handleDialog} className=\"close cursor-pointer\" src={closeIcon} alt=\"\" />\r\n                    <Reversal id={basicApptDetail.custId} treatmentId={tsStaff.id} reversalId={treatmentIds} cartId={this.props.id} handleModal={this.handleDialog}></Reversal>\r\n                </NormalModal>\r\n                <NormalModal className={\"transaction-done-modal\"} style={{ minWidth: \"760px\" }} modal={isOpenTreatmentDone} handleModal={this.handleDialog}>\r\n                    <img onClick={this.handleDialog} className=\"close cursor-pointer\" src={closeIcon} alt=\"\" />\r\n                    <SelectStaff \r\n                    id={this.state.selectedItemTreatmentIds}\r\n                    //id={tsStaff.id} \r\n                    session={this.state.selectedSession}\r\n                    cartId={basicApptDetail.cartId}  \r\n                    handleModal={this.handleDialog}></SelectStaff>\r\n                </NormalModal>\r\n            </div>\r\n             ) : null}\r\n             </TabPane>\r\n             <TabPane tabId=\"treatmenthistory\">\r\n               {activeMenu === \"treatmenthistory\" ? (\r\n                 <div className=\"row treatment-done-new p-3\">\r\n                   <div className=\"table\">\r\n                     <TreatmentHistoryCart\r\n                       customerNumber={basicApptDetail.custId}\r\n                     />\r\n                   </div>\r\n                 </div>\r\n               ) : null}\r\n             </TabPane>\r\n           </TabContent>\r\n         </div>\r\n       </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selected_cstomer: state.common.selected_cstomer,\r\n    basicApptDetail: state.appointment.basicApptDetail,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        // getCustomer,\r\n        getCommonApi,\r\n        updateForm,\r\n        commonCreateApi,\r\n        commonPatchApi,\r\n        commonDeleteApi\r\n    }, dispatch)\r\n}\r\n\r\nexport const TreatmentDone = connect(mapStateToProps, mapDispatchToProps)(TreatmentDoneClass)"]},"metadata":{},"sourceType":"module"}