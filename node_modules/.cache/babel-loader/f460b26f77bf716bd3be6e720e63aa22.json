{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\pages\\\\Auth\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalCheckbox, NormalButton, NormalSelect } from \"component/common\";\nimport Cookies from \"universal-cookie\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { login, getLoginSaloon, getTokenDetails } from \"redux/actions/auth\";\nimport { history } from \"helpers/index\";\nimport \"assets/scss/pages/login.scss\";\nimport { Link } from \"react-router-dom\";\nimport { withTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\nconst cookies = new Cookies();\nexport class LoginClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        salon: 0,\n        username: \"\",\n        password: \"\",\n        mobileAppointment: false\n      },\n      rememberme: \"\",\n      passwordVisible: false,\n      salonList: [],\n      langOptions: [{\n        label: \"EN-US\",\n        value: \"en\"\n      }, {\n        label: \"ZH-SG\",\n        value: \"zh_sg\"\n      }],\n      selectedLang: \"\",\n      isMounthed: true\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounthed) this.setState(data);\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleChangeAndSubmit = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      }, () => {\n        this.handleSubmit();\n      });\n    };\n\n    this.handleFirstLogin = event => {\n      event.preventDefault();\n\n      if (this.validator.allValid()) {\n        let {\n          formFields,\n          rememberme,\n          salonList\n        } = this.state;\n        this.props.login(formFields).then(res => {\n          let {\n            status,\n            data\n          } = res;\n\n          if (status === 200) {\n            if (res.data.sites.length > 1) {\n              for (let key of res.data.sites) {\n                salonList.push({\n                  value: key.id,\n                  label: key.itemsite_desc\n                });\n              }\n\n              this.setState({\n                salonList\n              });\n            } else {\n              formFields.salon = res.data.sites[0].id;\n              this.handleSubmit();\n            }\n          }\n        });\n      } else {\n        this.validator.showMessages();\n      }\n    };\n\n    this.toggle = key => {\n      this.setState(prevState => ({\n        [key]: !prevState[key]\n      }));\n    };\n\n    this.handlemobileApp = () => {\n      debugger;\n      let {\n        formFields\n      } = this.state;\n      formFields[\"mobileAppointment\"] = !this.state.formFields.mobileAppointment;\n      this.setState({\n        formFields\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounthed = false;\n  }\n\n  componentWillMount() {\n    var _localStorage$getItem;\n\n    this.updateState({\n      selectedLang: (_localStorage$getItem = localStorage.getItem(\"lang\")) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : \"en\"\n    });\n    this.validator = new SimpleReactValidator({\n      // validators: {\n      //   password: {\n      //     message: 'The :attribute must be a valid format.',\n      //     rule: (val, params, validator) => {\n      //       return validator.helpers.testRegex(val, /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,20}$/) && params.indexOf(val) === -1\n      //     },\n      //     messageReplace: (message, params) => message.replace('', this.helpers.toSentence(params)),\n      //     required: true\n      //   }\n      // },\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message font-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n    /*let { salonList } = this.state;\r\n    this.props.getLoginSaloon().then((res) => {\r\n      for (let key of res.data) {\r\n        salonList.push({ value: key.id, label: key.itemsite_desc })\r\n      }\r\n      this.setState({ salonList })\r\n    })*/\n  }\n\n  handleSubmit() {\n    // event.preventDefault();\n    if (this.validator.allValid()) {\n      let {\n        formFields,\n        rememberme\n      } = this.state;\n      let mobileAppointment = formFields.mobileAppointment;\n      this.props.login(formFields).then(async res => {\n        let {\n          status,\n          data\n        } = res;\n\n        if (status === 200) {\n          //debugger;\n          if (rememberme) {\n            let date = new Date();\n            date.setTime(date.getTime() + 48 * 60 * 60 * 1000);\n            let dateString = date.toGMTString();\n            cookies.set(\"emailId\", formFields.emailId, [{\n              path: \"/\"\n            }, {\n              expires: dateString\n            }]);\n            cookies.set(\"password\", formFields.password, [{\n              path: \"/\"\n            }, {\n              expires: dateString\n            }]);\n          }\n\n          await this.props.getTokenDetails().then(res => {\n            console.log(res, \"selected token details\");\n          });\n\n          if (mobileAppointment) {\n            history.push(\"/admin/mobileappointment\");\n          } else {\n            {\n              this.props.tokenDetails.role_code === \"3\" ? history.push(\"/admin/customerplus\") : this.props.tokenDetails.role_code === \"4\" ? history.push(\"/admin/newappointment\") : history.push(\"/admin/dashboard\");\n            }\n          }\n        }\n      });\n    } else {\n      this.validator.showMessages();\n    }\n  }\n\n  render() {\n    let {\n      formFields,\n      passwordVisible,\n      rememberme,\n      salonList,\n      langOptions,\n      selectedLang\n    } = this.state;\n    let {\n      username,\n      password,\n      salon,\n      mobileappointment\n    } = formFields;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        right: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item d-flex align-items-center position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        background: \"white\",\n        padding: \"3px\"\n      },\n      onChange: e => {\n        i18n.changeLanguage(e.target.value);\n        localStorage.setItem(\"lang\", e.target.value);\n        this.updateState({\n          selectedLang: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, langOptions.map(e => /*#__PURE__*/React.createElement(\"option\", {\n      value: e.value,\n      selected: selectedLang == e.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, e.label))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container h-100 py-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-left login-heading mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, t(\"Sign in to access BeauteSoft\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Username\",\n      value: username,\n      name: \"username\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }), t(\" \")), this.validator.message(\"Username\", username, \"required|string\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: passwordVisible ? \"text\" : \"password\",\n      placeholder: \"Password\",\n      value: password,\n      name: \"password\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-addon right fs-14\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.toggle(\"passwordVisible\"),\n      className: `icon-${passwordVisible ? \"eye\" : \"eye-blocked\"} cursor-pointer fs-24`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }), t(\" \")), t(\" \")), this.validator.message(\"Password\", password, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      value: \"\",\n      label: \"Keep me signed in\",\n      name: \"rememberme\",\n      checked: rememberme,\n      onChange: () => this.toggle(\"rememberme\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }), t(\" \")), /*#__PURE__*/React.createElement(Link, {\n      className: \"d-flex align-items-center ml-2\",\n      to: \"/auth/forgotPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fs-13 text-right tc-primary link-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, t(\"Forgot Password\")), t(\" \")), t(\" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-0 p-0 d-flex justify-content-center col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100\",\n      onClick: this.handleFirstLogin,\n      id: \"loginBtn\",\n      label: \"LOGIN\",\n      mainbg: true,\n      className: \"mr-2 fs-14 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }), t(\" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      value: \"\",\n      onChange: this.handlemobileApp,\n      label: \"Mobile Appointment\",\n      name: \"mobileappointment\",\n      checked: mobileappointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }), t(\" \"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }), salonList.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholder: \"Please Select Site\",\n      options: salonList,\n      value: salon,\n      name: \"salon\",\n      onChange: this.handleChangeAndSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }), t(\" \")), this.validator.message(\"salon\", salon, \"required|string\")), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, \"Copyrights (c) acy7lab.com.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, \" Licensed to Sequoia - Version 6.3.7.2\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }\n    }, \"Dated: 1.1.2022\"), t(\" \")), t(\" \")), t(\" \"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    login,\n    getLoginSaloon,\n    getTokenDetails\n  }, dispatch);\n};\n\nlet component = LoginClass;\nexport const Login = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(component));","map":{"version":3,"sources":["F:/webfe/src/pages/Auth/Login.js"],"names":["React","Component","NormalInput","NormalCheckbox","NormalButton","NormalSelect","Cookies","connect","bindActionCreators","SimpleReactValidator","login","getLoginSaloon","getTokenDetails","history","Link","withTranslation","i18n","cookies","LoginClass","state","formFields","salon","username","password","mobileAppointment","rememberme","passwordVisible","salonList","langOptions","label","value","selectedLang","isMounthed","updateState","data","setState","handleChange","target","name","Object","assign","handleChangeAndSubmit","handleSubmit","handleFirstLogin","event","preventDefault","validator","allValid","props","then","res","status","sites","length","key","push","id","itemsite_desc","showMessages","toggle","prevState","handlemobileApp","componentWillUnmount","componentWillMount","localStorage","getItem","element","message","autoForceUpdate","date","Date","setTime","getTime","dateString","toGMTString","set","emailId","path","expires","console","log","tokenDetails","role_code","render","mobileappointment","t","position","top","right","background","padding","e","changeLanguage","setItem","map","mapStateToProps","authStore","mapDispatchToProps","dispatch","component","Login"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalInput,\r\n  NormalCheckbox,\r\n  NormalButton,\r\n  NormalSelect,\r\n} from \"component/common\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { login, getLoginSaloon, getTokenDetails } from \"redux/actions/auth\";\r\nimport { history } from \"helpers/index\";\r\nimport \"assets/scss/pages/login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport class LoginClass extends Component {\r\n  state = {\r\n    formFields: {\r\n      salon: 0,\r\n      username: \"\",\r\n      password: \"\",\r\n      mobileAppointment: false,\r\n    },\r\n    rememberme: \"\",\r\n    passwordVisible: false,\r\n    salonList: [],\r\n    langOptions: [\r\n      { label: \"EN-US\", value: \"en\" },\r\n      { label: \"ZH-SG\", value: \"zh_sg\" },\r\n    ],\r\n    selectedLang: \"\",\r\n    isMounthed: true,\r\n  };\r\n  updateState = data => {\r\n    if (this.state.isMounthed) this.setState(data);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.isMounthed = false;\r\n  }\r\n  componentWillMount() {\r\n    this.updateState({ selectedLang: localStorage.getItem(\"lang\") ?? \"en\" });\r\n    this.validator = new SimpleReactValidator({\r\n      // validators: {\r\n      //   password: {\r\n      //     message: 'The :attribute must be a valid format.',\r\n      //     rule: (val, params, validator) => {\r\n      //       return validator.helpers.testRegex(val, /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,20}$/) && params.indexOf(val) === -1\r\n      //     },\r\n      //     messageReplace: (message, params) => message.replace('', this.helpers.toSentence(params)),\r\n      //     required: true\r\n      //   }\r\n      // },\r\n      element: message => (\r\n        <span className=\"error-message font-md\">{message}</span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n    /*let { salonList } = this.state;\r\n    this.props.getLoginSaloon().then((res) => {\r\n      for (let key of res.data) {\r\n        salonList.push({ value: key.id, label: key.itemsite_desc })\r\n      }\r\n      this.setState({ salonList })\r\n    })*/\r\n  }\r\n  handleChange = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n  handleChangeAndSubmit = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState(\r\n      {\r\n        formFields,\r\n      },\r\n      () => {\r\n        this.handleSubmit();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleFirstLogin = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.validator.allValid()) {\r\n      let { formFields, rememberme, salonList } = this.state;\r\n\r\n      this.props.login(formFields).then(res => {\r\n        let { status, data } = res;\r\n        if (status === 200) {\r\n          if (res.data.sites.length > 1) {\r\n            for (let key of res.data.sites) {\r\n              salonList.push({ value: key.id, label: key.itemsite_desc });\r\n            }\r\n            this.setState({ salonList });\r\n          } else {\r\n            formFields.salon = res.data.sites[0].id;\r\n            this.handleSubmit();\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  };\r\n\r\n  handleSubmit() {\r\n    // event.preventDefault();\r\n\r\n    if (this.validator.allValid()) {\r\n      let { formFields, rememberme } = this.state;\r\n      let mobileAppointment = formFields.mobileAppointment;\r\n      this.props.login(formFields).then(async res => {\r\n        let { status, data } = res;\r\n        if (status === 200) {\r\n          //debugger;\r\n\r\n          if (rememberme) {\r\n            let date = new Date();\r\n            date.setTime(date.getTime() + 48 * 60 * 60 * 1000);\r\n            let dateString = date.toGMTString();\r\n            cookies.set(\"emailId\", formFields.emailId, [\r\n              { path: \"/\" },\r\n              { expires: dateString },\r\n            ]);\r\n            cookies.set(\"password\", formFields.password, [\r\n              { path: \"/\" },\r\n              { expires: dateString },\r\n            ]);\r\n          }\r\n          await this.props.getTokenDetails().then(res => {\r\n            console.log(res, \"selected token details\");\r\n          });\r\n\r\n          if (mobileAppointment) {\r\n            history.push(\"/admin/mobileappointment\");\r\n          } else {\r\n            {\r\n              this.props.tokenDetails.role_code === \"3\"\r\n                ? history.push(\"/admin/customerplus\")\r\n                : this.props.tokenDetails.role_code === \"4\"\r\n                ? history.push(\"/admin/newappointment\")\r\n                : history.push(\"/admin/dashboard\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  }\r\n\r\n  toggle = key => {\r\n    this.setState(prevState => ({\r\n      [key]: !prevState[key],\r\n    }));\r\n  };\r\n  handlemobileApp = () => {\r\n    debugger;\r\n    let { formFields } = this.state;\r\n    formFields[\"mobileAppointment\"] = !this.state.formFields.mobileAppointment;\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      formFields,\r\n      passwordVisible,\r\n      rememberme,\r\n      salonList,\r\n      langOptions,\r\n      selectedLang,\r\n    } = this.state;\r\n\r\n    let { username, password, salon, mobileappointment } = formFields;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div style={{ position: \"absolute\", top: 10, right: 0 }}>\r\n          <li className=\"nav-item d-flex align-items-center position-relative\">\r\n            <select\r\n              style={{ background: \"white\", padding: \"3px\" }}\r\n              onChange={e => {\r\n                i18n.changeLanguage(e.target.value);\r\n                localStorage.setItem(\"lang\", e.target.value);\r\n                this.updateState({ selectedLang: e.target.value });\r\n              }}\r\n            >\r\n              {langOptions.map(e => (\r\n                <option value={e.value} selected={selectedLang == e.value}>\r\n                  {e.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </li>\r\n        </div>\r\n        <div className=\"login-container h-100 py-5\">\r\n          <h1 className=\"text-left login-heading mb-5\">\r\n            {t(\"Sign in to access BeauteSoft\")}\r\n          </h1>\r\n\r\n          <div className=\"form-group mb-4 pb-3\">\r\n            <div className=\"input-group\">\r\n              <NormalInput\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                name=\"username\"\r\n                onChange={this.handleChange}\r\n              />\r\n              {t(\" \")}\r\n            </div>\r\n            {this.validator.message(\"Username\", username, \"required|string\")}\r\n          </div>\r\n          <div className=\"form-group mb-4 pb-3\">\r\n            <div className=\"input-group\">\r\n              <NormalInput\r\n                type={passwordVisible ? \"text\" : \"password\"}\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                name=\"password\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <div className=\"input-group-addon right fs-14\">\r\n                <span\r\n                  onClick={() => this.toggle(\"passwordVisible\")}\r\n                  className={`icon-${\r\n                    passwordVisible ? \"eye\" : \"eye-blocked\"\r\n                  } cursor-pointer fs-24`}\r\n                ></span>\r\n                {t(\" \")}\r\n              </div>\r\n              {t(\" \")}\r\n            </div>\r\n            {/* {this.validator.message('Password', password, 'required|password')} */}\r\n            {this.validator.message(\"Password\", password, \"required\")}\r\n          </div>\r\n          <div className=\"d-flex justify-content-between align-items-center mb-5\">\r\n            <div className=\"checkbox\">\r\n              <NormalCheckbox\r\n                value=\"\"\r\n                label=\"Keep me signed in\"\r\n                name=\"rememberme\"\r\n                checked={rememberme}\r\n                onChange={() => this.toggle(\"rememberme\")}\r\n              />\r\n              {t(\" \")}\r\n            </div>\r\n            <Link\r\n              className=\"d-flex align-items-center ml-2\"\r\n              to=\"/auth/forgotPassword\"\r\n            >\r\n              <span className=\"fs-13 text-right tc-primary link-text\">\r\n                {t(\"Forgot Password\")}\r\n              </span>\r\n              {t(\" \")}\r\n            </Link>\r\n            {t(\" \")}\r\n          </div>\r\n\r\n          <div className=\"form-group mb-0 p-0 d-flex justify-content-center col-12\">\r\n            <NormalButton\r\n              buttonClass={\"w-100\"}\r\n              onClick={this.handleFirstLogin}\r\n              id=\"loginBtn\"\r\n              label=\"LOGIN\"\r\n              mainbg={true}\r\n              className=\"mr-2 fs-14 col-12\"\r\n            />\r\n            {t(\" \")}\r\n          </div>\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <div className=\"checkbox\">\r\n              <NormalCheckbox\r\n                value=\"\"\r\n                onChange={this.handlemobileApp}\r\n                label=\"Mobile Appointment\"\r\n                name=\"mobileappointment\"\r\n                checked={mobileappointment}\r\n              />\r\n              {t(\" \")}\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          {salonList.length > 1 && (\r\n            <div className=\"form-group mb-4 pb-3\">\r\n              <div className=\"input-group\">\r\n                <NormalSelect\r\n                  placeholder=\"Please Select Site\"\r\n                  options={salonList}\r\n                  value={salon}\r\n                  name=\"salon\"\r\n                  onChange={this.handleChangeAndSubmit}\r\n                />\r\n                {t(\" \")}\r\n              </div>\r\n              {this.validator.message(\"salon\", salon, \"required|string\")}\r\n            </div>\r\n          )}\r\n          <center>\r\n            <p>Copyrights (c) acy7lab.com.</p>\r\n            <p> Licensed to Sequoia - Version 6.3.7.2</p>\r\n            <br />\r\n            <p>Dated: 1.1.2022</p>\r\n            {t(\" \")}\r\n          </center>\r\n          {t(\" \")}\r\n        </div>\r\n        {t(\" \")}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      login,\r\n      getLoginSaloon,\r\n      getTokenDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nlet component = LoginClass;\r\n\r\nexport const Login = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(component)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}