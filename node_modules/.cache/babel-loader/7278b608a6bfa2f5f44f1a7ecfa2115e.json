{"ast":null,"code":"import _objectSpread from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{Commission}from\"service/apiVariables\";export var Amountapplicable=function Amountapplicable(body){return function(dispatch,getState,_ref){var api=_ref.api,Toast=_ref.Toast;return new Promise(function(resolve,reject){api(_objectSpread(_objectSpread({},Commission.Amountapplicable),{},{body:body})).then(function(response){resolve(response);}).catch(function(_ref2){var message=_ref2.message;reject(Toast({type:\"error\",message:message}));});});};};export var getAmountapplicable=function getAmountapplicable(id){return function(dispatch,getState,_ref3){var api=_ref3.api,Toast=_ref3.Toast;return new Promise(function(resolve,reject){Commission.getAmountapplicable.addQuery={key:\"id\",payload:id};api(_objectSpread({},Commission.getAmountapplicable)).then(function(response){resolve(response);}).catch(function(_ref4){var message=_ref4.message;reject(Toast({type:\"error\",message:message}));});});};};","map":{"version":3,"sources":["F:/webfe/src/redux/actions/Commission.js"],"names":["Commission","Amountapplicable","body","dispatch","getState","api","Toast","Promise","resolve","reject","then","response","catch","message","type","getAmountapplicable","id","addQuery","key","payload"],"mappings":"oIAAA,OAASA,UAAT,KAA2B,sBAA3B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAC3B,QADWA,CAAAA,gBACX,CAACC,IAAD,QACA,UAACC,QAAD,CAAWC,QAAX,MAAwC,IAAjBC,CAAAA,GAAiB,MAAjBA,GAAiB,CAAZC,KAAY,MAAZA,KAAY,CACtC,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCJ,GAAG,gCAAML,UAAU,CAACC,gBAAjB,MAAmCC,IAAI,CAAJA,IAAnC,GAAH,CACGQ,IADH,CACQ,SAACC,QAAD,CAAc,CAClBH,OAAO,CAACG,QAAD,CAAP,CACD,CAHH,EAIGC,KAJH,CAIS,eAAiB,IAAdC,CAAAA,OAAc,OAAdA,OAAc,CACtBJ,MAAM,CAACH,KAAK,CAAC,CAAEQ,IAAI,CAAE,OAAR,CAAiBD,OAAO,CAAPA,OAAjB,CAAD,CAAN,CAAN,CACD,CANH,EAOD,CARM,CAAP,CASD,CAXD,EADK,CAcP,MAAO,IAAME,CAAAA,mBAAmB,CAC9B,QADWA,CAAAA,mBACX,CAACC,EAAD,QACA,UAACb,QAAD,CAAWC,QAAX,OAAwC,IAAjBC,CAAAA,GAAiB,OAAjBA,GAAiB,CAAZC,KAAY,OAAZA,KAAY,CACtC,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCT,UAAU,CAACe,mBAAX,CAA+BE,QAA/B,CAA0C,CAAEC,GAAG,CAAE,IAAP,CAAaC,OAAO,CAAEH,EAAtB,CAA1C,CAEAX,GAAG,kBAAML,UAAU,CAACe,mBAAjB,EAAH,CACGL,IADH,CACQ,SAACC,QAAD,CAAc,CAClBH,OAAO,CAACG,QAAD,CAAP,CACD,CAHH,EAIGC,KAJH,CAIS,eAAiB,IAAdC,CAAAA,OAAc,OAAdA,OAAc,CACtBJ,MAAM,CAACH,KAAK,CAAC,CAAEQ,IAAI,CAAE,OAAR,CAAiBD,OAAO,CAAPA,OAAjB,CAAD,CAAN,CAAN,CACD,CANH,EAOD,CAVM,CAAP,CAWD,CAbD,EADK","sourcesContent":["import { Commission } from \"service/apiVariables\";\r\n\r\nexport const Amountapplicable =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Commission.Amountapplicable, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const getAmountapplicable =\r\n  (id) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      Commission.getAmountapplicable.addQuery = { key: \"id\", payload: id };\r\n\r\n      api({ ...Commission.getAmountapplicable })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}