{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.table_creator.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\n\nvar _element_data = require(\"../../core/element_data\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _element = require(\"../../core/element\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar ROW_SELECTOR = \"tr\";\n\nvar SchedulerTableCreator = function () {\n  function SchedulerTableCreator() {\n    _classCallCheck(this, SchedulerTableCreator);\n\n    this.VERTICAL = \"vertical\";\n    this.HORIZONTAL = \"horizontal\";\n  }\n\n  _createClass(SchedulerTableCreator, [{\n    key: \"insertAllDayRow\",\n    value: function value(allDayElements, tableBody, index) {\n      if (allDayElements[index]) {\n        var row = allDayElements[index].find(ROW_SELECTOR);\n\n        if (!row.length) {\n          row = (0, _renderer.default)(_dom_adapter.default.createElement(ROW_SELECTOR));\n          row.append(allDayElements[index].get(0));\n        }\n\n        tableBody.appendChild(row.get ? row.get(0) : row);\n      }\n    }\n  }, {\n    key: \"makeTable\",\n    value: function value(options) {\n      var tableBody = _dom_adapter.default.createElement(\"tbody\");\n\n      var templateCallbacks = [];\n      var row;\n      var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;\n      var allDayElementIndex = 0;\n      var allDayElements = options.allDayElements;\n      var groupIndex = options.groupIndex;\n      var rowCount = options.rowCount;\n      (0, _renderer.default)(options.container).append(tableBody);\n\n      if (allDayElements) {\n        this.insertAllDayRow(allDayElements, tableBody, 0);\n        allDayElementIndex++;\n      }\n\n      for (var i = 0; i < rowCount; i++) {\n        row = _dom_adapter.default.createElement(ROW_SELECTOR);\n        tableBody.appendChild(row);\n        var isLastRowInGroup = (i + 1) % rowCountInGroup === 0;\n\n        if (options.rowClass) {\n          row.className = options.rowClass;\n        }\n\n        for (var j = 0; j < options.cellCount; j++) {\n          var td = _dom_adapter.default.createElement(\"td\");\n\n          row.appendChild(td);\n\n          if (options.cellClass) {\n            if ((0, _type.isFunction)(options.cellClass)) {\n              td.className = options.cellClass(i, j);\n            } else {\n              td.className = options.cellClass;\n            }\n          }\n\n          var cellDataObject = void 0;\n          var dataKey = void 0;\n          var dataValue = void 0;\n\n          if (options.getCellData) {\n            cellDataObject = options.getCellData(td, i, j, groupIndex);\n            dataKey = cellDataObject.key;\n            dataValue = cellDataObject.value;\n            dataKey && (0, _element_data.data)(td, dataKey, dataValue);\n          }\n\n          if (options.cellTemplate && options.cellTemplate.render) {\n            var templateOptions = {\n              model: {\n                text: options.getCellText ? options.getCellText(i, j) : \"\",\n                date: options.getCellDate ? options.getCellDate(i) : void 0\n              },\n              container: (0, _element.getPublicElement)((0, _renderer.default)(td)),\n              index: i * options.cellCount + j\n            };\n\n            if (dataValue) {\n              if (dataValue.startDate) {\n                templateOptions.model.startDate = dataValue.startDate;\n              }\n\n              if (dataValue.endDate) {\n                templateOptions.model.endDate = dataValue.endDate;\n              }\n\n              if (dataValue.groups) {\n                templateOptions.model.groups = dataValue.groups;\n              }\n\n              if (dataValue.allDay) {\n                templateOptions.model.allDay = dataValue.allDay;\n              }\n            }\n\n            templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions));\n          } else {\n            if (options.getCellText) {\n              td.innerHTML = \"<div>\" + options.getCellText(i, j) + \"</div>\";\n            }\n          }\n        }\n\n        if (allDayElements && isLastRowInGroup) {\n          this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);\n          allDayElementIndex++;\n        }\n      }\n\n      return templateCallbacks;\n    }\n  }, {\n    key: \"makeGroupedTable\",\n    value: function value(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {\n      var rows = [];\n\n      if (type === this.VERTICAL) {\n        rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount);\n      } else {\n        rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate);\n      }\n\n      return rows;\n    }\n  }, {\n    key: \"makeGroupedTableFromJSON\",\n    value: function value(type, data, config) {\n      var table;\n      var cellStorage = [];\n      var rowIndex = 0;\n      config = config || {};\n      var cellTag = config.cellTag || \"td\";\n      var childrenField = config.childrenField || \"children\";\n      var titleField = config.titleField || \"title\";\n      var groupTableClass = config.groupTableClass;\n      var groupRowClass = config.groupRowClass;\n      var groupCellClass = config.groupCellClass;\n      var groupCellCustomContent = config.groupCellCustomContent;\n\n      function createTable() {\n        table = _dom_adapter.default.createElement(\"table\");\n\n        if (groupTableClass) {\n          table.className = groupTableClass;\n        }\n      }\n\n      function getChildCount(item) {\n        if (item[childrenField]) {\n          return item[childrenField].length;\n        }\n\n        return 0;\n      }\n\n      function createCell(text, childCount, index, data) {\n        var cell = {\n          element: _dom_adapter.default.createElement(cellTag),\n          childCount: childCount\n        };\n\n        if (groupCellClass) {\n          cell.element.className = groupCellClass;\n        }\n\n        var cellText = _dom_adapter.default.createTextNode(text);\n\n        if (\"function\" === typeof groupCellCustomContent) {\n          groupCellCustomContent(cell.element, cellText, index, data);\n        } else {\n          cell.element.appendChild(cellText);\n        }\n\n        return cell;\n      }\n\n      function generateCells(data) {\n        for (var i = 0; i < data.length; i++) {\n          var childCount = getChildCount(data[i]);\n          var cell = createCell(data[i][titleField], childCount, i, data[i]);\n\n          if (!cellStorage[rowIndex]) {\n            cellStorage[rowIndex] = [];\n          }\n\n          cellStorage[rowIndex].push(cell);\n\n          if (childCount) {\n            generateCells(data[i][childrenField]);\n          } else {\n            rowIndex++;\n          }\n        }\n      }\n\n      function putCellsToRows() {\n        cellStorage.forEach(function (cells) {\n          var row = _dom_adapter.default.createElement(ROW_SELECTOR);\n\n          if (groupRowClass) {\n            row.className = groupRowClass;\n          }\n\n          var rowspans = [];\n\n          for (var i = cells.length - 1; i >= 0; i--) {\n            var prev = cells[i + 1];\n            var rowspan = cells[i].childCount;\n\n            if (prev && prev.childCount) {\n              rowspan *= prev.childCount;\n            }\n\n            rowspans.push(rowspan);\n          }\n\n          rowspans.reverse();\n          cells.forEach(function (cell, index) {\n            if (rowspans[index]) {\n              cell.element.setAttribute(\"rowSpan\", rowspans[index]);\n            }\n\n            row.appendChild(cell.element);\n          });\n          table.appendChild(row);\n        });\n      }\n\n      createTable();\n      generateCells(data);\n      putCellsToRows();\n      return table;\n    }\n  }, {\n    key: \"_makeFlexGroupedRowCells\",\n    value: function value(group, repeatCount, cssClasses, cellTemplate) {\n      var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;\n      var cells = [];\n      var items = group.items;\n      var itemCount = items.length;\n\n      for (var i = 0; i < repeatCount * repeatByDate; i++) {\n        for (var j = 0; j < itemCount; j++) {\n          var $container = (0, _renderer.default)(\"<div>\");\n          var cell = {};\n\n          if (cellTemplate && cellTemplate.render) {\n            var templateOptions = {\n              model: items[j],\n              container: (0, _element.getPublicElement)($container),\n              index: i * itemCount + j\n            };\n\n            if (group.data) {\n              templateOptions.model.data = group.data[j];\n            }\n\n            cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);\n          } else {\n            $container.text(items[j].text).attr(\"title\", items[j].text).addClass(\"dx-scheduler-group-header-content\");\n            $container = (0, _renderer.default)(\"<div>\").append($container);\n          }\n\n          var cssClass = (0, _type.isFunction)(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;\n          cell.element = $container.addClass(cssClass);\n          cells.push(cell);\n        }\n      }\n\n      return cells;\n    }\n  }, {\n    key: \"_makeVerticalGroupedRows\",\n    value: function value(groups, cssClasses, cellTemplate) {\n      var cellTemplates = [];\n      var repeatCount = 1;\n      var cellsArray = [];\n\n      var cellIterator = function cellIterator(cell) {\n        if (cell.template) {\n          cellTemplates.push(cell.template);\n        }\n      };\n\n      for (var i = 0; i < groups.length; i++) {\n        if (i > 0) {\n          repeatCount = groups[i - 1].items.length * repeatCount;\n        }\n\n        var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);\n\n        cells.forEach(cellIterator);\n        cellsArray.push(cells);\n      }\n\n      var rows = [];\n      var groupCount = cellsArray.length;\n\n      for (var _i = 0; _i < groupCount; _i++) {\n        rows.push((0, _renderer.default)(\"<div>\").addClass(cssClasses.groupHeaderRowClass));\n      }\n\n      for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {\n        var currentColumnLength = cellsArray[_i2].length;\n\n        for (var j = 0; j < currentColumnLength; j++) {\n          rows[_i2].append(cellsArray[_i2][j].element);\n        }\n      }\n\n      return {\n        elements: (0, _renderer.default)(\"<div>\").addClass(\"dx-scheduler-group-flex-container\").append(rows),\n        cellTemplates: cellTemplates\n      };\n    }\n  }, {\n    key: \"_makeHorizontalGroupedRows\",\n    value: function value(groups, cssClasses, cellCount, cellTemplate, groupByDate) {\n      var repeatCount = 1;\n      var groupCount = groups.length;\n      var rows = [];\n      var cellTemplates = [];\n      var repeatByDate = groupByDate ? cellCount : 1;\n\n      var cellIterator = function cellIterator(cell) {\n        if (cell.template) {\n          cellTemplates.push(cell.template);\n        }\n\n        return cell.element;\n      };\n\n      for (var i = 0; i < groupCount; i++) {\n        if (i > 0) {\n          repeatCount = groups[i - 1].items.length * repeatCount;\n        }\n\n        var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);\n\n        rows.push((0, _renderer.default)(\"<tr>\").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)));\n      }\n\n      var maxCellCount = rows[groupCount - 1].find(\"th\").length;\n\n      for (var j = 0; j < groupCount; j++) {\n        var $cell = rows[j].find(\"th\");\n        var colspan = maxCellCount / $cell.length;\n\n        if (!groupByDate) {\n          colspan *= cellCount;\n        }\n\n        if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {\n          $cell.attr(\"colSpan\", colspan);\n        }\n      }\n\n      return {\n        elements: rows,\n        cellTemplates: cellTemplates\n      };\n    }\n  }, {\n    key: \"_makeGroupedRowCells\",\n    value: function value(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {\n      repeatByDate = repeatByDate || 1;\n      repeatCount *= repeatByDate;\n      var cells = [];\n      var items = group.items;\n      var itemCount = items.length;\n\n      for (var i = 0; i < repeatCount; i++) {\n        for (var j = 0; j < itemCount; j++) {\n          var $container = (0, _renderer.default)(\"<div>\");\n          var cell = {};\n\n          if (cellTemplate && cellTemplate.render) {\n            var templateOptions = {\n              model: items[j],\n              container: (0, _element.getPublicElement)($container),\n              index: i * itemCount + j\n            };\n\n            if (group.data) {\n              templateOptions.model.data = group.data[j];\n            }\n\n            cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);\n          } else {\n            $container.text(items[j].text);\n            $container = (0, _renderer.default)(\"<div>\").append($container);\n          }\n\n          $container.addClass(cssClasses.groupHeaderContentClass);\n          var cssClass = void 0;\n\n          if ((0, _type.isFunction)(cssClasses.groupHeaderClass)) {\n            cssClass = cssClasses.groupHeaderClass(j);\n          } else {\n            cssClass = cssClasses.groupHeaderClass;\n          }\n\n          cell.element = (0, _renderer.default)(\"<th>\").addClass(cssClass).append($container);\n          cells.push(cell);\n        }\n      }\n\n      return cells;\n    }\n  }]);\n\n  return SchedulerTableCreator;\n}();\n\nvar _default = {\n  tableCreator: new SchedulerTableCreator()\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/scheduler/ui.scheduler.table_creator.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_dom_adapter","_element_data","_type","_element","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","ROW_SELECTOR","SchedulerTableCreator","VERTICAL","HORIZONTAL","value","allDayElements","tableBody","index","row","find","createElement","append","get","appendChild","options","templateCallbacks","rowCountInGroup","groupCount","rowCount","allDayElementIndex","groupIndex","container","insertAllDayRow","isLastRowInGroup","rowClass","className","j","cellCount","td","cellClass","isFunction","cellDataObject","dataKey","dataValue","getCellData","data","cellTemplate","render","templateOptions","model","text","getCellText","date","getCellDate","getPublicElement","startDate","endDate","groups","allDay","push","bind","innerHTML","type","cssClasses","groupByDate","rows","_makeVerticalGroupedRows","_makeHorizontalGroupedRows","config","table","cellStorage","rowIndex","cellTag","childrenField","titleField","groupTableClass","groupRowClass","groupCellClass","groupCellCustomContent","createTable","getChildCount","item","createCell","childCount","cell","element","cellText","createTextNode","generateCells","putCellsToRows","forEach","cells","rowspans","prev","rowspan","reverse","setAttribute","group","repeatCount","repeatByDate","arguments","items","itemCount","$container","template","attr","addClass","cssClass","groupHeaderClass","cellTemplates","cellsArray","cellIterator","_makeFlexGroupedRowCells","_i","groupHeaderRowClass","_i2","currentColumnLength","elements","_makeGroupedRowCells","map","maxCellCount","$cell","colspan","groupHeaderContentClass","_default","tableCreator","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.table_creator.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _element = require(\"../../core/element\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar ROW_SELECTOR = \"tr\";\r\nvar SchedulerTableCreator = function() {\r\n    function SchedulerTableCreator() {\r\n        _classCallCheck(this, SchedulerTableCreator);\r\n        this.VERTICAL = \"vertical\";\r\n        this.HORIZONTAL = \"horizontal\"\r\n    }\r\n    _createClass(SchedulerTableCreator, [{\r\n        key: \"insertAllDayRow\",\r\n        value: function(allDayElements, tableBody, index) {\r\n            if (allDayElements[index]) {\r\n                var row = allDayElements[index].find(ROW_SELECTOR);\r\n                if (!row.length) {\r\n                    row = (0, _renderer.default)(_dom_adapter.default.createElement(ROW_SELECTOR));\r\n                    row.append(allDayElements[index].get(0))\r\n                }\r\n                tableBody.appendChild(row.get ? row.get(0) : row)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"makeTable\",\r\n        value: function(options) {\r\n            var tableBody = _dom_adapter.default.createElement(\"tbody\");\r\n            var templateCallbacks = [];\r\n            var row;\r\n            var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;\r\n            var allDayElementIndex = 0;\r\n            var allDayElements = options.allDayElements;\r\n            var groupIndex = options.groupIndex;\r\n            var rowCount = options.rowCount;\r\n            (0, _renderer.default)(options.container).append(tableBody);\r\n            if (allDayElements) {\r\n                this.insertAllDayRow(allDayElements, tableBody, 0);\r\n                allDayElementIndex++\r\n            }\r\n            for (var i = 0; i < rowCount; i++) {\r\n                row = _dom_adapter.default.createElement(ROW_SELECTOR);\r\n                tableBody.appendChild(row);\r\n                var isLastRowInGroup = (i + 1) % rowCountInGroup === 0;\r\n                if (options.rowClass) {\r\n                    row.className = options.rowClass\r\n                }\r\n                for (var j = 0; j < options.cellCount; j++) {\r\n                    var td = _dom_adapter.default.createElement(\"td\");\r\n                    row.appendChild(td);\r\n                    if (options.cellClass) {\r\n                        if ((0, _type.isFunction)(options.cellClass)) {\r\n                            td.className = options.cellClass(i, j)\r\n                        } else {\r\n                            td.className = options.cellClass\r\n                        }\r\n                    }\r\n                    var cellDataObject = void 0;\r\n                    var dataKey = void 0;\r\n                    var dataValue = void 0;\r\n                    if (options.getCellData) {\r\n                        cellDataObject = options.getCellData(td, i, j, groupIndex);\r\n                        dataKey = cellDataObject.key;\r\n                        dataValue = cellDataObject.value;\r\n                        dataKey && (0, _element_data.data)(td, dataKey, dataValue)\r\n                    }\r\n                    if (options.cellTemplate && options.cellTemplate.render) {\r\n                        var templateOptions = {\r\n                            model: {\r\n                                text: options.getCellText ? options.getCellText(i, j) : \"\",\r\n                                date: options.getCellDate ? options.getCellDate(i) : void 0\r\n                            },\r\n                            container: (0, _element.getPublicElement)((0, _renderer.default)(td)),\r\n                            index: i * options.cellCount + j\r\n                        };\r\n                        if (dataValue) {\r\n                            if (dataValue.startDate) {\r\n                                templateOptions.model.startDate = dataValue.startDate\r\n                            }\r\n                            if (dataValue.endDate) {\r\n                                templateOptions.model.endDate = dataValue.endDate\r\n                            }\r\n                            if (dataValue.groups) {\r\n                                templateOptions.model.groups = dataValue.groups\r\n                            }\r\n                            if (dataValue.allDay) {\r\n                                templateOptions.model.allDay = dataValue.allDay\r\n                            }\r\n                        }\r\n                        templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions))\r\n                    } else {\r\n                        if (options.getCellText) {\r\n                            td.innerHTML = \"<div>\" + options.getCellText(i, j) + \"</div>\"\r\n                        }\r\n                    }\r\n                }\r\n                if (allDayElements && isLastRowInGroup) {\r\n                    this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);\r\n                    allDayElementIndex++\r\n                }\r\n            }\r\n            return templateCallbacks\r\n        }\r\n    }, {\r\n        key: \"makeGroupedTable\",\r\n        value: function(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {\r\n            var rows = [];\r\n            if (type === this.VERTICAL) {\r\n                rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount)\r\n            } else {\r\n                rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate)\r\n            }\r\n            return rows\r\n        }\r\n    }, {\r\n        key: \"makeGroupedTableFromJSON\",\r\n        value: function(type, data, config) {\r\n            var table;\r\n            var cellStorage = [];\r\n            var rowIndex = 0;\r\n            config = config || {};\r\n            var cellTag = config.cellTag || \"td\";\r\n            var childrenField = config.childrenField || \"children\";\r\n            var titleField = config.titleField || \"title\";\r\n            var groupTableClass = config.groupTableClass;\r\n            var groupRowClass = config.groupRowClass;\r\n            var groupCellClass = config.groupCellClass;\r\n            var groupCellCustomContent = config.groupCellCustomContent;\r\n\r\n            function createTable() {\r\n                table = _dom_adapter.default.createElement(\"table\");\r\n                if (groupTableClass) {\r\n                    table.className = groupTableClass\r\n                }\r\n            }\r\n\r\n            function getChildCount(item) {\r\n                if (item[childrenField]) {\r\n                    return item[childrenField].length\r\n                }\r\n                return 0\r\n            }\r\n\r\n            function createCell(text, childCount, index, data) {\r\n                var cell = {\r\n                    element: _dom_adapter.default.createElement(cellTag),\r\n                    childCount: childCount\r\n                };\r\n                if (groupCellClass) {\r\n                    cell.element.className = groupCellClass\r\n                }\r\n                var cellText = _dom_adapter.default.createTextNode(text);\r\n                if (\"function\" === typeof groupCellCustomContent) {\r\n                    groupCellCustomContent(cell.element, cellText, index, data)\r\n                } else {\r\n                    cell.element.appendChild(cellText)\r\n                }\r\n                return cell\r\n            }\r\n\r\n            function generateCells(data) {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var childCount = getChildCount(data[i]);\r\n                    var cell = createCell(data[i][titleField], childCount, i, data[i]);\r\n                    if (!cellStorage[rowIndex]) {\r\n                        cellStorage[rowIndex] = []\r\n                    }\r\n                    cellStorage[rowIndex].push(cell);\r\n                    if (childCount) {\r\n                        generateCells(data[i][childrenField])\r\n                    } else {\r\n                        rowIndex++\r\n                    }\r\n                }\r\n            }\r\n\r\n            function putCellsToRows() {\r\n                cellStorage.forEach(function(cells) {\r\n                    var row = _dom_adapter.default.createElement(ROW_SELECTOR);\r\n                    if (groupRowClass) {\r\n                        row.className = groupRowClass\r\n                    }\r\n                    var rowspans = [];\r\n                    for (var i = cells.length - 1; i >= 0; i--) {\r\n                        var prev = cells[i + 1];\r\n                        var rowspan = cells[i].childCount;\r\n                        if (prev && prev.childCount) {\r\n                            rowspan *= prev.childCount\r\n                        }\r\n                        rowspans.push(rowspan)\r\n                    }\r\n                    rowspans.reverse();\r\n                    cells.forEach(function(cell, index) {\r\n                        if (rowspans[index]) {\r\n                            cell.element.setAttribute(\"rowSpan\", rowspans[index])\r\n                        }\r\n                        row.appendChild(cell.element)\r\n                    });\r\n                    table.appendChild(row)\r\n                })\r\n            }\r\n            createTable();\r\n            generateCells(data);\r\n            putCellsToRows();\r\n            return table\r\n        }\r\n    }, {\r\n        key: \"_makeFlexGroupedRowCells\",\r\n        value: function(group, repeatCount, cssClasses, cellTemplate) {\r\n            var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;\r\n            var cells = [];\r\n            var items = group.items;\r\n            var itemCount = items.length;\r\n            for (var i = 0; i < repeatCount * repeatByDate; i++) {\r\n                for (var j = 0; j < itemCount; j++) {\r\n                    var $container = (0, _renderer.default)(\"<div>\");\r\n                    var cell = {};\r\n                    if (cellTemplate && cellTemplate.render) {\r\n                        var templateOptions = {\r\n                            model: items[j],\r\n                            container: (0, _element.getPublicElement)($container),\r\n                            index: i * itemCount + j\r\n                        };\r\n                        if (group.data) {\r\n                            templateOptions.model.data = group.data[j]\r\n                        }\r\n                        cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)\r\n                    } else {\r\n                        $container.text(items[j].text).attr(\"title\", items[j].text).addClass(\"dx-scheduler-group-header-content\");\r\n                        $container = (0, _renderer.default)(\"<div>\").append($container)\r\n                    }\r\n                    var cssClass = (0, _type.isFunction)(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;\r\n                    cell.element = $container.addClass(cssClass);\r\n                    cells.push(cell)\r\n                }\r\n            }\r\n            return cells\r\n        }\r\n    }, {\r\n        key: \"_makeVerticalGroupedRows\",\r\n        value: function(groups, cssClasses, cellTemplate) {\r\n            var cellTemplates = [];\r\n            var repeatCount = 1;\r\n            var cellsArray = [];\r\n            var cellIterator = function(cell) {\r\n                if (cell.template) {\r\n                    cellTemplates.push(cell.template)\r\n                }\r\n            };\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (i > 0) {\r\n                    repeatCount = groups[i - 1].items.length * repeatCount\r\n                }\r\n                var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);\r\n                cells.forEach(cellIterator);\r\n                cellsArray.push(cells)\r\n            }\r\n            var rows = [];\r\n            var groupCount = cellsArray.length;\r\n            for (var _i = 0; _i < groupCount; _i++) {\r\n                rows.push((0, _renderer.default)(\"<div>\").addClass(cssClasses.groupHeaderRowClass))\r\n            }\r\n            for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {\r\n                var currentColumnLength = cellsArray[_i2].length;\r\n                for (var j = 0; j < currentColumnLength; j++) {\r\n                    rows[_i2].append(cellsArray[_i2][j].element)\r\n                }\r\n            }\r\n            return {\r\n                elements: (0, _renderer.default)(\"<div>\").addClass(\"dx-scheduler-group-flex-container\").append(rows),\r\n                cellTemplates: cellTemplates\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_makeHorizontalGroupedRows\",\r\n        value: function(groups, cssClasses, cellCount, cellTemplate, groupByDate) {\r\n            var repeatCount = 1;\r\n            var groupCount = groups.length;\r\n            var rows = [];\r\n            var cellTemplates = [];\r\n            var repeatByDate = groupByDate ? cellCount : 1;\r\n            var cellIterator = function(cell) {\r\n                if (cell.template) {\r\n                    cellTemplates.push(cell.template)\r\n                }\r\n                return cell.element\r\n            };\r\n            for (var i = 0; i < groupCount; i++) {\r\n                if (i > 0) {\r\n                    repeatCount = groups[i - 1].items.length * repeatCount\r\n                }\r\n                var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);\r\n                rows.push((0, _renderer.default)(\"<tr>\").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)))\r\n            }\r\n            var maxCellCount = rows[groupCount - 1].find(\"th\").length;\r\n            for (var j = 0; j < groupCount; j++) {\r\n                var $cell = rows[j].find(\"th\");\r\n                var colspan = maxCellCount / $cell.length;\r\n                if (!groupByDate) {\r\n                    colspan *= cellCount\r\n                }\r\n                if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {\r\n                    $cell.attr(\"colSpan\", colspan)\r\n                }\r\n            }\r\n            return {\r\n                elements: rows,\r\n                cellTemplates: cellTemplates\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_makeGroupedRowCells\",\r\n        value: function(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {\r\n            repeatByDate = repeatByDate || 1;\r\n            repeatCount *= repeatByDate;\r\n            var cells = [];\r\n            var items = group.items;\r\n            var itemCount = items.length;\r\n            for (var i = 0; i < repeatCount; i++) {\r\n                for (var j = 0; j < itemCount; j++) {\r\n                    var $container = (0, _renderer.default)(\"<div>\");\r\n                    var cell = {};\r\n                    if (cellTemplate && cellTemplate.render) {\r\n                        var templateOptions = {\r\n                            model: items[j],\r\n                            container: (0, _element.getPublicElement)($container),\r\n                            index: i * itemCount + j\r\n                        };\r\n                        if (group.data) {\r\n                            templateOptions.model.data = group.data[j]\r\n                        }\r\n                        cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)\r\n                    } else {\r\n                        $container.text(items[j].text);\r\n                        $container = (0, _renderer.default)(\"<div>\").append($container)\r\n                    }\r\n                    $container.addClass(cssClasses.groupHeaderContentClass);\r\n                    var cssClass = void 0;\r\n                    if ((0, _type.isFunction)(cssClasses.groupHeaderClass)) {\r\n                        cssClass = cssClasses.groupHeaderClass(j)\r\n                    } else {\r\n                        cssClass = cssClasses.groupHeaderClass\r\n                    }\r\n                    cell.element = (0, _renderer.default)(\"<th>\").addClass(cssClass).append($container);\r\n                    cells.push(cell)\r\n                }\r\n            }\r\n            return cells\r\n        }\r\n    }]);\r\n    return SchedulerTableCreator\r\n}();\r\nvar _default = {\r\n    tableCreator: new SchedulerTableCreator\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}