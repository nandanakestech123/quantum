{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\common\\\\NormalDateTime\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport PropTypes from \"prop-types\"; // import { useSelector } from 'react-redux';\n\nimport \"moment/locale/it.js\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useTranslation } from \"react-i18next\";\nexport const NormalDateTime = ({\n  onChange,\n  name = \"\",\n  showTime = false,\n  timeOnly = false,\n  value,\n  className,\n  showYearDropdown = false,\n  dateFormat,\n  timeIntervals = 5,\n  showIcon = true,\n  showMonthYearPicker,\n  minDate,\n  maxDate\n}) => {\n  const [startDate, setStartDate] = useState(new Date());\n\n  const handleDateSelect = date => {\n    onChange(name, date);\n    setStartDate(date);\n  };\n\n  let {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${className} date-picker`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: value ? value : startDate,\n    onChange: date => handleDateSelect(date),\n    showTimeSelect: showTime,\n    showTimeSelectOnly: timeOnly,\n    timeIntervals: timeIntervals // timeCaption=\"Time\"\n    ,\n    minDate: minDate,\n    maxDate: maxDate,\n    dropdownMode: \"select\",\n    dateFormat: dateFormat,\n    showYearDropdown: showYearDropdown,\n    showMonthYearPicker: showMonthYearPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), showIcon ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon-calendar icon font-lg icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }) : null);\n}; // export default RTDatepick;\n\nNormalDateTime.propTypes = {\n  value: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func\n};","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/common/NormalDateTime/index.js"],"names":["React","useState","useEffect","PropTypes","DatePicker","useTranslation","NormalDateTime","onChange","name","showTime","timeOnly","value","className","showYearDropdown","dateFormat","timeIntervals","showIcon","showMonthYearPicker","minDate","maxDate","startDate","setStartDate","Date","handleDateSelect","date","t","propTypes","string","id","label","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAO,qBAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC7BC,EAAAA,QAD6B;AAE7BC,EAAAA,IAAI,GAAG,EAFsB;AAG7BC,EAAAA,QAAQ,GAAG,KAHkB;AAI7BC,EAAAA,QAAQ,GAAG,KAJkB;AAK7BC,EAAAA,KAL6B;AAM7BC,EAAAA,SAN6B;AAO7BC,EAAAA,gBAAgB,GAAG,KAPU;AAQ7BC,EAAAA,UAR6B;AAS7BC,EAAAA,aAAa,GAAG,CATa;AAU7BC,EAAAA,QAAQ,GAAG,IAVkB;AAW7BC,EAAAA,mBAX6B;AAY7BC,EAAAA,OAZ6B;AAa7BC,EAAAA;AAb6B,CAAD,KAcxB;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,IAAIqB,IAAJ,EAAD,CAA1C;;AACA,QAAMC,gBAAgB,GAAGC,IAAI,IAAI;AAC/BjB,IAAAA,QAAQ,CAACC,IAAD,EAAOgB,IAAP,CAAR;AACAH,IAAAA,YAAY,CAACG,IAAD,CAAZ;AACD,GAHD;;AAIA,MAAI;AAAEC,IAAAA;AAAF,MAAQpB,cAAc,EAA1B;AACA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEO,SAAU,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAED,KAAK,GAAGA,KAAH,GAAWS,SAD5B;AAEE,IAAA,QAAQ,EAAEI,IAAI,IAAID,gBAAgB,CAACC,IAAD,CAFpC;AAGE,IAAA,cAAc,EAAEf,QAHlB;AAIE,IAAA,kBAAkB,EAAEC,QAJtB;AAKE,IAAA,aAAa,EAAEK,aALjB,CAME;AANF;AAOE,IAAA,OAAO,EAAEG,OAPX;AAQE,IAAA,OAAO,EAAEC,OARX;AASE,IAAA,YAAY,EAAC,QATf;AAUE,IAAA,UAAU,EAAEL,UAVd;AAWE,IAAA,gBAAgB,EAAED,gBAXpB;AAYE,IAAA,mBAAmB,EAAEI,mBAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAeGD,QAAQ,gBACP;AAAM,IAAA,SAAS,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAEL,IAjBN,CADF;AAqBD,CA1CM,C,CA4CP;;AACAV,cAAc,CAACoB,SAAf,GAA2B;AACzBf,EAAAA,KAAK,EAAER,SAAS,CAACwB,MADQ;AAEzBC,EAAAA,EAAE,EAAEzB,SAAS,CAACwB,MAFW;AAGzBE,EAAAA,KAAK,EAAE1B,SAAS,CAACwB,MAHQ;AAIzBpB,EAAAA,QAAQ,EAAEJ,SAAS,CAAC2B;AAJK,CAA3B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport PropTypes from \"prop-types\";\r\n// import { useSelector } from 'react-redux';\r\nimport \"moment/locale/it.js\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const NormalDateTime = ({\r\n  onChange,\r\n  name = \"\",\r\n  showTime = false,\r\n  timeOnly = false,\r\n  value,\r\n  className,\r\n  showYearDropdown = false,\r\n  dateFormat,\r\n  timeIntervals = 5,\r\n  showIcon = true,\r\n  showMonthYearPicker,\r\n  minDate,\r\n  maxDate,\r\n}) => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const handleDateSelect = date => {\r\n    onChange(name, date);\r\n    setStartDate(date);\r\n  };\r\n  let { t } = useTranslation();\r\n  return (\r\n    <div className={`${className} date-picker`}>\r\n      <DatePicker\r\n        selected={value ? value : startDate}\r\n        onChange={date => handleDateSelect(date)}\r\n        showTimeSelect={showTime}\r\n        showTimeSelectOnly={timeOnly}\r\n        timeIntervals={timeIntervals}\r\n        // timeCaption=\"Time\"\r\n        minDate={minDate}\r\n        maxDate={maxDate}\r\n        dropdownMode=\"select\"\r\n        dateFormat={dateFormat}\r\n        showYearDropdown={showYearDropdown}\r\n        showMonthYearPicker={showMonthYearPicker}\r\n      />\r\n      {showIcon ? (\r\n        <span className=\"icon-calendar icon font-lg icon\"></span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default RTDatepick;\r\nNormalDateTime.propTypes = {\r\n  value: PropTypes.string,\r\n  id: PropTypes.string,\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}