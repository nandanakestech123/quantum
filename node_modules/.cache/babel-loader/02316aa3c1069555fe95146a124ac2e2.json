{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Appointment\\\\CreateAppointment\\\\selectTreatment.js\";\nimport React, { Component } from 'react';\nimport { NormalSelect, NormalButton, NormalModal, NormalInput } from 'component/common';\nimport './style.scss';\nimport { updateForm, getSelectedTreatmentList } from 'redux/actions/appointment';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport closeIcon from 'assets/images/close.png';\nimport { getCommonApi, commonCreateApi } from 'redux/actions/common';\nimport { dateFormat } from 'service/helperFunctions';\nimport { history } from 'helpers';\nimport _ from 'lodash';\nimport { TableWrapper } from 'component/common';\nimport { TreatmentPackage } from './modal/TreatmentPackage';\nexport class SelectTreatmentClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      treatmentDetail: [],\n      formFields: {\n        start_time: \"\",\n        end_time: \"\",\n        Item_Codeid: null,\n        add_duration: \"\",\n        emp_no: [],\n        requesttherapist: true,\n        Item_CodeName: \"\"\n      },\n      selectedList: [{\n        start_time: \"\",\n        end_time: \"\",\n        Item_Codeid: null,\n        add_duration: \"\",\n        emp_no: [],\n        requesttherapist: false\n      }],\n      outletOption: [],\n      staffOption: [],\n      roomOption: [],\n      list: [],\n      isOpenModal: false,\n      categoryList: [],\n      treatmentList: [],\n      siteList: [],\n      treatmentField: {\n        category: \"\",\n        treatment: \"\"\n      },\n      timeDropdown: [],\n      duration: [],\n      index: null,\n      search: \"\",\n      selectTreatmentId: \"\",\n      treatmentListHeader: [{\n        label: 'Category',\n        className: \"w-50\"\n      }, {\n        label: 'Service',\n        className: \"w-75\"\n      }, {\n        label: 'Duration',\n        className: \"w-25\"\n      }, {\n        label: 'price',\n        className: \"w-50\"\n      }],\n      meta: {},\n      isTreatementModal: false\n    };\n\n    this.getStaffAvailability = () => {\n      this.props.getCommonApi(`staffsavailable/?Appt_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          // for (let value of data) {\n          //     staffList.push({ value: value.id, label: value.emp_name })\n          // }\n          this.setState({\n            list: data\n          });\n        }\n      });\n    };\n\n    this.handleSearch = event => {\n      event.persist();\n      console.log(event.target.value, event.target, event, \"dfhdfjghkjfghj\");\n      let {\n        treatmentField\n      } = this.state;\n      treatmentField['treatment'] = event.target.value;\n      this.setState({\n        search: event.target.value,\n        treatmentField\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          let data = {\n            search: searchString\n          }; // this.queryHandler(data)\n\n          let {\n            customerList\n          } = this.state;\n          let {\n            basicApptDetail\n          } = this.props;\n          this.search(data);\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = data => {\n      let {\n        page = 1,\n        limit = 10,\n        search = \"\"\n      } = data;\n      let {\n        selectTreatmentId\n      } = this.state;\n      this.props.getCommonApi(`stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          this.setState({\n            treatmentList: res.data.dataList,\n            meta: res.data.meta.pagination\n          });\n        }\n      });\n    };\n\n    this.handlePagination = page => {\n      this.search(page);\n    };\n\n    this.handleChangeTreatment = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        treatmentField,\n        treatmentList,\n        search,\n        selectTreatmentId\n      } = this.state;\n      console.log(\"uihwkjrwkej\", name, value);\n      treatmentField[name] = value;\n\n      if (name === \"category\") {\n        selectTreatmentId = value;\n      } else if (name === \"treatment\") {\n        search = value;\n      }\n\n      await this.setState({\n        treatmentField,\n        selectTreatmentId,\n        search\n      });\n      let page = 1,\n          limit = 10;\n      this.props.getCommonApi(`stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          this.setState({\n            treatmentList: res.data.dataList,\n            meta: res.data.meta.pagination\n          });\n        }\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }, index) => {\n      let {\n        formFields,\n        selectedList\n      } = this.state;\n      console.log(\"hgjfgjfcghfghfgh\", name, value, index);\n\n      if (selectedList.length > 0 && selectedList.length !== index + 1) {\n        console.log(\"hgjfgjfcghfghfgh indexed\", name, value, index);\n        selectedList[index][name] = value;\n\n        if (name === \"add_duration\") {\n          selectedList[index]['end_time'] = this.addTimes(selectedList[index][\"start_time\"], value);\n          selectedList[index + 1][\"start_time\"] = selectedList[index]['end_time'];\n        }\n\n        await this.setState({\n          selectedList\n        });\n        await this.props.updateForm('treatmentList', selectedList);\n      } else {\n        console.log(\"hgjfgjfcghfghfgh else\", name, value, index);\n        formFields[name] = value;\n\n        if (name === \"add_duration\") {\n          formFields['end_time'] = this.addTimes(formFields[\"start_time\"], value);\n        }\n\n        await this.setState({\n          formFields\n        });\n        selectedList.splice(selectedList.length - 1, 1);\n        selectedList.push(formFields);\n        await this.setState({\n          selectedList\n        });\n        await this.props.updateForm('treatmentList', selectedList);\n      }\n    };\n\n    this.handleMultiSelect = data => {\n      let {\n        formFields\n      } = this.state;\n      let list = [];\n\n      for (let key of data) {\n        list.push(key.value);\n      }\n\n      formFields['emp_no'] = list;\n      this.setState({\n        formFields\n      });\n      console.log(formFields, \"oyokkjk\");\n    };\n\n    this.handleSubmit = () => {\n      // this.props.handleConfirmBooking()\n      let {\n        appointmentCustomerDetail,\n        appointmentTreatmentList\n      } = this.props;\n      console.log(appointmentCustomerDetail, appointmentTreatmentList, \"sdfgdfsdggf\");\n      let data = {\n        Appointment: {\n          appt_date: dateFormat(new Date(appointmentCustomerDetail.appointmentDate), \"yyyy-mm-dd\"),\n          Appt_typeid: appointmentCustomerDetail.Appt_typeid,\n          cust_noid: appointmentCustomerDetail.customerName,\n          new_remark: appointmentCustomerDetail.new_remark,\n          // emp_noid: appointmentCustomerDetail.emp_id,\n          Source_Codeid: appointmentCustomerDetail.Source_Codeid,\n          Room_Codeid: appointmentCustomerDetail.Room_Codeid,\n          appt_status: appointmentCustomerDetail.bookingStatus,\n          sec_status: appointmentCustomerDetail.sec_status,\n          ItemSite_Codeid: appointmentCustomerDetail.ItemSite_Codeid\n        },\n        Treatment: appointmentTreatmentList\n      };\n\n      if (appointmentCustomerDetail.customerName && appointmentCustomerDetail.bookingStatus) {\n        this.props.commonCreateApi(`appointment/`, data).then(async res => {\n          if (res.status === 201) {\n            await this.props.updateForm('treatmentList', []);\n            await this.props.updateForm('basicApptDetail', {});\n            await this.props.updateForm('appointmentCustomerDetail', {});\n            history.push('/admin/appointment');\n          }\n        });\n      } else {\n        this.props.showErrorMessage();\n      }\n    };\n\n    this.getDateTime = data => {\n      let date = new Date(data);\n      date = String(date).split(\" \");\n      let date1 = date[2] + \"th \" + date[1] + \", \" + date[3];\n      let time = date[4].split(\":\");\n      let time1 = String(Number(time[0]) > 12 ? Number(time[0]) - 12 : time[0]) + \":\" + time[1] + (Number(time[0]) > 12 ? \"PM\" : \"AM\");\n      return time1 + \", \" + date1;\n    };\n\n    this.handleDialog = () => {\n      this.setState({\n        isOpenModal: false,\n        index: null\n      });\n    };\n\n    this.handleMultipleCustomer = () => {\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.handleSelectPackage = async data => {\n      debugger;\n      let {\n        formFields,\n        selectedList,\n        index\n      } = this.state;\n\n      if (selectedList.length === 1 || selectedList.length === index + 1) {\n        formFields[\"start_time\"] = formFields[\"start_time\"];\n        formFields[\"end_time\"] = this.addTimes(formFields[\"start_time\"], data.add_duration);\n        formFields[\"Item_Codeid\"] = data.id;\n        formFields[\"Item_CodeName\"] = data.item_desc;\n        formFields[\"add_duration\"] = data.add_duration;\n        await this.setState({\n          formFields\n        });\n      }\n\n      if (selectedList.length > index + 1) {\n        var listCount = selectedList.length - 1;\n        selectedList[listCount][\"end_time\"] = this.addTimes(selectedList[listCount][\"start_time\"], data.add_duration);\n        selectedList[listCount][\"Item_Codeid\"] = data.id;\n        selectedList[listCount][\"Item_CodeName\"] = data.item_desc;\n        selectedList[listCount][\"add_duration\"] = data.add_duration;\n        await this.setState({\n          selectedList\n        });\n      }\n\n      selectedList.splice(selectedList.length - 1, 1);\n      selectedList.push(formFields);\n      await this.setState({\n        selectedList\n      });\n      await this.props.updateForm('treatmentList', selectedList);\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.handleSelectTreatment = async data => {\n      let {\n        treatmentList\n      } = this.state;\n      let {\n        formFields,\n        selectedList,\n        index\n      } = this.state;\n      console.log(\"uihwkjrwkej\", selectedList.length, \"===\", index);\n\n      if (selectedList.length === 1 || selectedList.length === index + 1) {\n        formFields[\"start_time\"] = formFields[\"start_time\"];\n        formFields[\"end_time\"] = this.addTimes(formFields[\"start_time\"], data.add_duration);\n        formFields[\"Item_Codeid\"] = data.id;\n        formFields[\"Item_CodeName\"] = data.item_desc;\n        formFields[\"add_duration\"] = data.add_duration;\n        await this.setState({\n          formFields\n        });\n      }\n\n      console.log(index);\n\n      if (selectedList.length > index + 1) {\n        selectedList[index]['Item_CodeName'] = data.item_desc;\n        selectedList[index][\"Item_Codeid\"] = data.id;\n        selectedList[index][\"add_duration\"] = data.add_duration;\n        await this.setState({\n          selectedList\n        });\n      }\n\n      selectedList.splice(selectedList.length - 1, 1);\n      selectedList.push(formFields);\n      await this.setState({\n        selectedList\n      }); // console.log(\"uihwkjrwkej\", data, selectedList)\n\n      await this.props.updateForm('treatmentList', selectedList);\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.timeToMins = time => {\n      var b = time.split(':');\n      return b[0] * 60 + +b[1];\n    };\n\n    this.timeFromMins = mins => {\n      function z(n) {\n        return (n < 10 ? '0' : '') + n;\n      }\n\n      var h = (mins / 60 | 0) % 24;\n      var m = mins % 60;\n      return z(h) + ':' + z(m);\n    };\n\n    this.addTimes = (t0, t1) => {\n      return this.timeFromMins(this.timeToMins(t0) + this.timeToMins(t1));\n    };\n\n    this.handleAddtreatment = async () => {\n      let {\n        selectedList,\n        formFields\n      } = this.state;\n      formFields = {\n        start_time: selectedList[selectedList.length - 1].end_time,\n        end_time: \"\",\n        Item_Codeid: null,\n        add_duration: \"\",\n        emp_no: [],\n        requesttherapist: false\n      };\n      selectedList.push({\n        start_time: selectedList[selectedList.length - 1].end_time,\n        end_time: \"\",\n        Item_Codeid: 1,\n        Item_CodeName: \"\",\n        add_duration: \"\",\n        emp_no: [],\n        requesttherapist: false\n      });\n      await this.setState({\n        selectedList,\n        formFields\n      });\n      await this.props.updateForm('treatmentList', selectedList);\n    };\n\n    this.deleteTreatment = async index => {\n      let {\n        selectedList\n      } = this.state;\n      selectedList.splice(index, 1);\n      this.setState({\n        selectedList\n      });\n      await this.props.updateForm('treatmentList', selectedList);\n    };\n\n    this.handleTreatementmodal = () => {\n      this.setState(prevState => ({\n        isTreatementModal: !prevState.isTreatementModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.search({});\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n    let {\n      appointmentDetail,\n      categoryList,\n      staffOption,\n      selectedList,\n      formFields,\n      duration\n    } = this.state; // this.props.getSelectedTreatmentList(`?appt_id=${appointmentDetail.id}`).then((res) => {\n    //     console.log(\"namekkuhkjn\", res)\n    // })\n\n    let {\n      basicApptDetail\n    } = this.props;\n    formFields['start_time'] = basicApptDetail ? basicApptDetail.time : \"\";\n    selectedList[0]['start_time'] = basicApptDetail ? basicApptDetail.time : \"\";\n    this.setState({\n      formFields,\n      selectedList\n    });\n    this.props.getCommonApi(`itemdept/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          categoryList.push({\n            value: value.id,\n            label: value.itm_desc\n          });\n        }\n\n        this.setState({\n          categoryList\n        });\n      }\n    });\n    this.props.getCommonApi(`appointment/Staffs/?Outlet=${basicApptDetail.branchId}&date=${dateFormat(new Date())}`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          staffOption.push({\n            value: value.id,\n            label: value.emp_name\n          });\n        }\n\n        this.setState({\n          staffOption\n        });\n      }\n    });\n    this.props.getCommonApi(`treatment/Duration/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          duration.push({\n            value: value,\n            label: value\n          });\n        }\n\n        this.setState({\n          duration\n        });\n      }\n    });\n    this.getStaffAvailability();\n  }\n\n  render() {\n    let {\n      outletOption,\n      staffOption,\n      roomOption,\n      selectedList,\n      siteList,\n      list,\n      formFields,\n      timeDropdown,\n      duration,\n      isOpenModal,\n      treatmentField,\n      treatmentList = [],\n      categoryList,\n      treatmentListHeader,\n      meta,\n      isTreatementModal\n    } = this.state;\n    let {\n      customerDetail,\n      selectedTreatmentList,\n      customerId\n    } = this.props;\n    let {\n      outlet,\n      staff,\n      rooms\n    } = customerDetail;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-appointment select-treatment-appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatment-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-treatment select-list w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row selected selected-header mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 45\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 45\n      }\n    }, \"End\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 45\n      }\n    }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 45\n      }\n    }, \"Duration\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 45\n      }\n    }, \"Treatment staff\")), selectedList.length > 0 ? selectedList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row selected  mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"start\" // options={timeDropdown}\n        ,\n        value: item.start_time,\n        name: \"start_time\",\n        onChange: this.handleChange,\n        className: \"customer-name p-0\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"end\" // options={timeDropdown}\n        ,\n        value: item.end_time,\n        name: \"end_time\",\n        onChange: this.handleChange,\n        className: \"customer-name p-0\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => this.setState({\n          isOpenModal: true,\n          index: index\n        }),\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 mr-1 p-0 header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n      , {\n        options: duration,\n        value: item.add_duration,\n        name: \"add_duration\",\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n      , {\n        options: staffOption,\n        value: item.emp_no,\n        name: \"emp_no\",\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 57\n        }\n      })), selectedList.length === index + 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ml-3\",\n        onClick: this.handleAddtreatment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"31\",\n        height: \"30\",\n        viewBox: \"0 0 31 30\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        width: \"31\",\n        height: \"30\",\n        fill: \"#F9F9F9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 65\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M15 8V22\",\n        stroke: \"#848484\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 65\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M8 15H22\",\n        stroke: \"#848484\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 65\n        }\n      }))) : /*#__PURE__*/React.createElement(\"img\", {\n        width: \"25\",\n        height: \"25\",\n        onClick: () => this.deleteTreatment(index),\n        className: \"ml-3\",\n        src: closeIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 66\n        }\n      }));\n    }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"confirm confirm-selected mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 mr-4 fs-15 \",\n      label: \"Treatment Package\",\n      onClick: this.handleTreatementmodal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 mr-4 ml-4 fs-15 \",\n      label: \"cancel\",\n      onClick: () => history.push('/admin/appointment'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 ml-5 fs-15 \",\n      label: \"Confirm Booking\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 45\n      }\n    }))))))))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"800px\"\n      },\n      modal: isOpenModal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-list container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pl-0 mb-3 fs-18 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 25\n      }\n    }, \"Select Treatment\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 25\n      }\n    }, \"Category\", /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: categoryList,\n      value: treatmentField.category,\n      name: \"category\",\n      onChange: this.handleChangeTreatment,\n      className: \"customer-name p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 25\n      }\n    }, \"Service\", /*#__PURE__*/React.createElement(\"input\", {\n      // placeholder=\"Enter here\"\n      // options={siteList}\n      value: treatmentField.treatment,\n      name: \"treatment\",\n      onChange: this.handleSearch,\n      className: \"search px-3 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: treatmentListHeader,\n      queryHandler: this.handlePagination,\n      pageMeta: meta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 25\n      }\n    }, treatmentList.length > 0 ? treatmentList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"w-100\",\n        onClick: () => this.handleSelectTreatment(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 40\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 45\n        }\n      }, item.Item_Class)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 40\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 45\n        }\n      }, item.item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 40\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 45\n        }\n      }, item.add_duration)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 40\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 45\n        }\n      }, item.item_price)));\n    }) : /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 38\n      }\n    }, \"No data available\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center justify-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"col-3\",\n      mainbg: true,\n      className: \"col-12 ml-4 fs-15 \",\n      label: \"Cancel\",\n      onClick: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 17\n      }\n    }, isTreatementModal ? /*#__PURE__*/React.createElement(TreatmentPackage, {\n      isTreatementModal: isTreatementModal,\n      handleTreatementmodal: this.handleTreatementmodal,\n      handleSelectPackage: this.handleSelectPackage,\n      customerId: customerId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 41\n      }\n    }) : ''));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerDetail: state.appointment.customerDetail,\n  appointmentDetail: state.appointment.appointmentDetail,\n  selectedTreatmentList: state.appointment.selectedTreatmentList,\n  basicApptDetail: state.appointment.basicApptDetail,\n  appointmentCustomerDetail: state.appointment.appointmentCustomerDetail,\n  appointmentTreatmentList: state.appointment.appointmentTreatmentList\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateForm,\n    getSelectedTreatmentList,\n    getCommonApi,\n    commonCreateApi\n  }, dispatch);\n};\n\nexport const SelectTreatment = connect(mapStateToProps, mapDispatchToProps)(SelectTreatmentClass);","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Appointment/CreateAppointment/selectTreatment.js"],"names":["React","Component","NormalSelect","NormalButton","NormalModal","NormalInput","updateForm","getSelectedTreatmentList","connect","bindActionCreators","SimpleReactValidator","closeIcon","getCommonApi","commonCreateApi","dateFormat","history","_","TableWrapper","TreatmentPackage","SelectTreatmentClass","state","treatmentDetail","formFields","start_time","end_time","Item_Codeid","add_duration","emp_no","requesttherapist","Item_CodeName","selectedList","outletOption","staffOption","roomOption","list","isOpenModal","categoryList","treatmentList","siteList","treatmentField","category","treatment","timeDropdown","duration","index","search","selectTreatmentId","treatmentListHeader","label","className","meta","isTreatementModal","getStaffAvailability","props","Date","then","key","status","data","setState","handleSearch","event","persist","console","log","target","value","debouncedFn","debounce","searchString","customerList","basicApptDetail","page","limit","res","dataList","pagination","handlePagination","handleChangeTreatment","name","handleChange","length","addTimes","splice","push","handleMultiSelect","handleSubmit","appointmentCustomerDetail","appointmentTreatmentList","Appointment","appt_date","appointmentDate","Appt_typeid","cust_noid","customerName","new_remark","Source_Codeid","Room_Codeid","appt_status","bookingStatus","sec_status","ItemSite_Codeid","Treatment","showErrorMessage","getDateTime","date","String","split","date1","time","time1","Number","handleDialog","handleMultipleCustomer","handleSelectPackage","id","item_desc","listCount","handleSelectTreatment","timeToMins","b","timeFromMins","mins","z","n","h","m","t0","t1","handleAddtreatment","deleteTreatment","handleTreatementmodal","prevState","componentDidMount","componentWillMount","validator","element","message","autoForceUpdate","appointmentDetail","itm_desc","branchId","emp_name","render","customerDetail","selectedTreatmentList","customerId","outlet","staff","rooms","map","item","e","minWidth","Item_Class","item_price","mapStateToProps","appointment","mapDispatchToProps","dispatch","SelectTreatment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,WAArC,EAAkDC,WAAlD,QAAqE,kBAArE;AACA,OAAO,cAAP;AACA,SAASC,UAAT,EAAqBC,wBAArB,QAAqD,2BAArD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,sBAA9C;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAAQC,gBAAR,QAA+B,0BAA/B;AAEA,OAAO,MAAMC,oBAAN,SAAmClB,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAChDmB,KADgD,GACxC;AACJC,MAAAA,eAAe,EAAE,EADb;AAEJC,MAAAA,UAAU,EAAE;AACRC,QAAAA,UAAU,EAAE,EADJ;AAERC,QAAAA,QAAQ,EAAE,EAFF;AAGRC,QAAAA,WAAW,EAAE,IAHL;AAIRC,QAAAA,YAAY,EAAE,EAJN;AAKRC,QAAAA,MAAM,EAAE,EALA;AAMRC,QAAAA,gBAAgB,EAAE,IANV;AAORC,QAAAA,aAAa,EAAE;AAPP,OAFR;AAWJC,MAAAA,YAAY,EAAE,CACV;AACIP,QAAAA,UAAU,EAAE,EADhB;AAEIC,QAAAA,QAAQ,EAAE,EAFd;AAGIC,QAAAA,WAAW,EAAE,IAHjB;AAIIC,QAAAA,YAAY,EAAE,EAJlB;AAKIC,QAAAA,MAAM,EAAE,EALZ;AAMIC,QAAAA,gBAAgB,EAAE;AANtB,OADU,CAXV;AAqBJG,MAAAA,YAAY,EAAE,EArBV;AAsBJC,MAAAA,WAAW,EAAE,EAtBT;AAuBJC,MAAAA,UAAU,EAAE,EAvBR;AAwBJC,MAAAA,IAAI,EAAE,EAxBF;AAyBJC,MAAAA,WAAW,EAAE,KAzBT;AA0BJC,MAAAA,YAAY,EAAE,EA1BV;AA2BJC,MAAAA,aAAa,EAAE,EA3BX;AA4BJC,MAAAA,QAAQ,EAAE,EA5BN;AA6BJC,MAAAA,cAAc,EAAE;AACZC,QAAAA,QAAQ,EAAE,EADE;AAEZC,QAAAA,SAAS,EAAE;AAFC,OA7BZ;AAiCJC,MAAAA,YAAY,EAAE,EAjCV;AAkCJC,MAAAA,QAAQ,EAAE,EAlCN;AAmCJC,MAAAA,KAAK,EAAE,IAnCH;AAoCJC,MAAAA,MAAM,EAAE,EApCJ;AAqCJC,MAAAA,iBAAiB,EAAE,EArCf;AAsCJC,MAAAA,mBAAmB,EAAE,CACjB;AAAEC,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OADiB,EAEjB;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,SAAS,EAAE;AAA/B,OAFiB,EAGjB;AAAED,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAHiB,EAIjB;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAJiB,CAtCjB;AA4CJC,MAAAA,IAAI,EAAE,EA5CF;AA6CJC,MAAAA,iBAAiB,EAAE;AA7Cf,KADwC;;AAAA,SAkGhDC,oBAlGgD,GAkGzB,MAAM;AACzB,WAAKC,KAAL,CAAWzC,YAAX,CAAyB,8BAA6BE,UAAU,CAAC,IAAIwC,IAAJ,EAAD,EAAa,YAAb,CAA2B,EAA3F,EAA8FC,IAA9F,CAAoGC,GAAD,IAAS;AACxG,YAAI;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAAmBF,GAAvB;;AACA,YAAIC,MAAM,KAAK,GAAf,EAAoB;AAChB;AACA;AACA;AACA,eAAKE,QAAL,CAAc;AAAEzB,YAAAA,IAAI,EAAEwB;AAAR,WAAd;AACH;AACJ,OARD;AASH,KA5G+C;;AAAA,SA8GhDE,YA9GgD,GA8GhCC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,OAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaC,KAAzB,EAAgCL,KAAK,CAACI,MAAtC,EAA8CJ,KAA9C,EAAqD,gBAArD;AACA,UAAI;AAAEtB,QAAAA;AAAF,UAAqB,KAAKnB,KAA9B;AACAmB,MAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BsB,KAAK,CAACI,MAAN,CAAaC,KAA3C;AACA,WAAKP,QAAL,CAAc;AAAEd,QAAAA,MAAM,EAAEgB,KAAK,CAACI,MAAN,CAAaC,KAAvB;AAA8B3B,QAAAA;AAA9B,OAAd;;AACA,UAAI,CAAC,KAAK4B,WAAV,EAAuB;AACnB,aAAKA,WAAL,GAAmBnD,CAAC,CAACoD,QAAF,CAAW,MAAM;AAChC,cAAIC,YAAY,GAAGR,KAAK,CAACI,MAAN,CAAaC,KAAhC;AACC,cAAIR,IAAI,GAAG;AAAEb,YAAAA,MAAM,EAAEwB;AAAV,WAAX,CAF+B,CAGhC;;AACA,cAAI;AAAEC,YAAAA;AAAF,cAAmB,KAAKlD,KAA5B;AACA,cAAI;AAAEmD,YAAAA;AAAF,cAAsB,KAAKlB,KAA/B;AACA,eAAKR,MAAL,CAAYa,IAAZ;AACH,SAPkB,EAOhB,GAPgB,CAAnB;AAQH;;AACD,WAAKS,WAAL;AACH,KA/H+C;;AAAA,SAiIhDtB,MAjIgD,GAiItCa,IAAD,IAAU;AACf,UAAI;AAAEc,QAAAA,IAAI,GAAG,CAAT;AAAYC,QAAAA,KAAK,GAAG,EAApB;AAAwB5B,QAAAA,MAAM,GAAG;AAAjC,UAAwCa,IAA5C;AACA,UAAI;AAACZ,QAAAA;AAAD,UAAuB,KAAK1B,KAAhC;AACA,WAAKiC,KAAL,CAAWzC,YAAX,CAAyB,0BAAyBkC,iBAAkB,WAAUD,MAAO,SAAQ2B,IAAK,UAASC,KAAM,EAAjH,EAAoHlB,IAApH,CAA0HmB,GAAD,IAAS;AAChIX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;;AACE,YAAIA,GAAG,CAACjB,MAAJ,KAAe,GAAnB,EAAwB;AACpB,eAAKE,QAAL,CAAc;AAAEtB,YAAAA,aAAa,EAAEqC,GAAG,CAAChB,IAAJ,CAASiB,QAA1B;AAAoCzB,YAAAA,IAAI,EAAEwB,GAAG,CAAChB,IAAJ,CAASR,IAAT,CAAc0B;AAAxD,WAAd;AACH;AACJ,OALD;AAMH,KA1I+C;;AAAA,SA4IhDC,gBA5IgD,GA4I5BL,IAAD,IAAU;AACzB,WAAK3B,MAAL,CAAY2B,IAAZ;AACH,KA9I+C;;AAAA,SAgJhDM,qBAhJgD,GAgJxB,OAAO;AAAEb,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASa,QAAAA;AAAT;AAAV,KAAP,KAAuC;AAC3D,UAAI;AAAExC,QAAAA,cAAF;AAAkBF,QAAAA,aAAlB;AAAiCQ,QAAAA,MAAjC;AAAyCC,QAAAA;AAAzC,UAA+D,KAAK1B,KAAxE;AACA2C,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Be,IAA3B,EAAiCb,KAAjC;AACA3B,MAAAA,cAAc,CAACwC,IAAD,CAAd,GAAuBb,KAAvB;;AACA,UAAIa,IAAI,KAAK,UAAb,EAAyB;AACrBjC,QAAAA,iBAAiB,GAAGoB,KAApB;AACH,OAFD,MAEO,IAAIa,IAAI,KAAG,WAAX,EAAuB;AAC1BlC,QAAAA,MAAM,GAAGqB,KAAT;AACH;;AACD,YAAM,KAAKP,QAAL,CAAc;AAChBpB,QAAAA,cADgB;AAEhBO,QAAAA,iBAFgB;AAGhBD,QAAAA;AAHgB,OAAd,CAAN;AAMA,UAAI2B,IAAI,GAAG,CAAX;AAAA,UAAcC,KAAK,GAAG,EAAtB;AACA,WAAKpB,KAAL,CAAWzC,YAAX,CAAyB,0BAAyBkC,iBAAkB,WAAUD,MAAO,SAAQ2B,IAAK,UAASC,KAAM,EAAjH,EAAoHlB,IAApH,CAA0HmB,GAAD,IAAS;AAC9HX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;;AACE,YAAIA,GAAG,CAACjB,MAAJ,KAAe,GAAnB,EAAwB;AACpB,eAAKE,QAAL,CAAc;AAAEtB,YAAAA,aAAa,EAAEqC,GAAG,CAAChB,IAAJ,CAASiB,QAA1B;AAAoCzB,YAAAA,IAAI,EAAEwB,GAAG,CAAChB,IAAJ,CAASR,IAAT,CAAc0B;AAAxD,WAAd;AACH;AACJ,OALH;AAMH,KAtK+C;;AAAA,SAwKhDI,YAxKgD,GAwKjC,OAAO;AAAEf,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASa,QAAAA;AAAT;AAAV,KAAP,EAAoCnC,KAApC,KAA8C;AACzD,UAAI;AAAEtB,QAAAA,UAAF;AAAcQ,QAAAA;AAAd,UAA+B,KAAKV,KAAxC;AACA2C,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCe,IAAhC,EAAsCb,KAAtC,EAA6CtB,KAA7C;;AACA,UAAId,YAAY,CAACmD,MAAb,GAAsB,CAAtB,IAA2BnD,YAAY,CAACmD,MAAb,KAAyBrC,KAAK,GAAG,CAAhE,EAAoE;AAChEmB,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCe,IAAxC,EAA8Cb,KAA9C,EAAqDtB,KAArD;AACAd,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoBmC,IAApB,IAA4Bb,KAA5B;;AACA,YAAGa,IAAI,KAAG,cAAV,EAAyB;AACrBjD,UAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,IAAkC,KAAKsC,QAAL,CAAcpD,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,CAAd,EAAiDsB,KAAjD,CAAlC;AACApC,UAAAA,YAAY,CAACc,KAAK,GAAC,CAAP,CAAZ,CAAsB,YAAtB,IAAsCd,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CAAtC;AACH;;AACD,cAAM,KAAKe,QAAL,CAAc;AAChB7B,UAAAA;AADgB,SAAd,CAAN;AAGA,cAAM,KAAKuB,KAAL,CAAW/C,UAAX,CAAsB,eAAtB,EAAuCwB,YAAvC,CAAN;AACH,OAXD,MAWO;AACHiC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCe,IAArC,EAA2Cb,KAA3C,EAAkDtB,KAAlD;AACAtB,QAAAA,UAAU,CAACyD,IAAD,CAAV,GAAmBb,KAAnB;;AACA,YAAGa,IAAI,KAAG,cAAV,EAAyB;AACrBzD,UAAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK4D,QAAL,CAAc5D,UAAU,CAAC,YAAD,CAAxB,EAAwC4C,KAAxC,CAAzB;AACH;;AACD,cAAM,KAAKP,QAAL,CAAc;AAChBrC,UAAAA;AADgB,SAAd,CAAN;AAGAQ,QAAAA,YAAY,CAACqD,MAAb,CAAqBrD,YAAY,CAACmD,MAAb,GAAsB,CAA3C,EAA+C,CAA/C;AACAnD,QAAAA,YAAY,CAACsD,IAAb,CAAkB9D,UAAlB;AACA,cAAM,KAAKqC,QAAL,CAAc;AAChB7B,UAAAA;AADgB,SAAd,CAAN;AAGA,cAAM,KAAKuB,KAAL,CAAW/C,UAAX,CAAsB,eAAtB,EAAuCwB,YAAvC,CAAN;AACH;AACJ,KAtM+C;;AAAA,SAwMhDuD,iBAxMgD,GAwM3B3B,IAAD,IAAU;AAC1B,UAAI;AAAEpC,QAAAA;AAAF,UAAiB,KAAKF,KAA1B;AACA,UAAIc,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIsB,GAAT,IAAgBE,IAAhB,EAAsB;AAClBxB,QAAAA,IAAI,CAACkD,IAAL,CAAU5B,GAAG,CAACU,KAAd;AACH;;AACD5C,MAAAA,UAAU,CAAC,QAAD,CAAV,GAAuBY,IAAvB;AACA,WAAKyB,QAAL,CAAc;AAAErC,QAAAA;AAAF,OAAd;AACAyC,MAAAA,OAAO,CAACC,GAAR,CAAY1C,UAAZ,EAAwB,SAAxB;AACH,KAjN+C;;AAAA,SAmNhDgE,YAnNgD,GAmNjC,MAAM;AACjB;AACA,UAAI;AAAEC,QAAAA,yBAAF;AAA6BC,QAAAA;AAA7B,UAA0D,KAAKnC,KAAnE;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYuB,yBAAZ,EAAuCC,wBAAvC,EAAiE,aAAjE;AACA,UAAI9B,IAAI,GAAG;AACP+B,QAAAA,WAAW,EAAE;AACTC,UAAAA,SAAS,EAAE5E,UAAU,CAAC,IAAIwC,IAAJ,CAASiC,yBAAyB,CAACI,eAAnC,CAAD,EAAsD,YAAtD,CADZ;AAETC,UAAAA,WAAW,EAAEL,yBAAyB,CAACK,WAF9B;AAGTC,UAAAA,SAAS,EAAEN,yBAAyB,CAACO,YAH5B;AAITC,UAAAA,UAAU,EAAER,yBAAyB,CAACQ,UAJ7B;AAKT;AACAC,UAAAA,aAAa,EAAET,yBAAyB,CAACS,aANhC;AAOTC,UAAAA,WAAW,EAAEV,yBAAyB,CAACU,WAP9B;AAQTC,UAAAA,WAAW,EAAEX,yBAAyB,CAACY,aAR9B;AASTC,UAAAA,UAAU,EAAEb,yBAAyB,CAACa,UAT7B;AAUTC,UAAAA,eAAe,EAAEd,yBAAyB,CAACc;AAVlC,SADN;AAaPC,QAAAA,SAAS,EAAEd;AAbJ,OAAX;;AAeA,UAAGD,yBAAyB,CAACO,YAA1B,IAA0CP,yBAAyB,CAACY,aAAvE,EAAqF;AACrF,aAAK9C,KAAL,CAAWxC,eAAX,CAA4B,cAA5B,EAA2C6C,IAA3C,EAAiDH,IAAjD,CAAsD,MAAOmB,GAAP,IAAe;AACjE,cAAIA,GAAG,CAACjB,MAAJ,KAAe,GAAnB,EAAwB;AACpB,kBAAM,KAAKJ,KAAL,CAAW/C,UAAX,CAAsB,eAAtB,EAAuC,EAAvC,CAAN;AACA,kBAAM,KAAK+C,KAAL,CAAW/C,UAAX,CAAsB,iBAAtB,EAAyC,EAAzC,CAAN;AACA,kBAAM,KAAK+C,KAAL,CAAW/C,UAAX,CAAsB,2BAAtB,EAAmD,EAAnD,CAAN;AACAS,YAAAA,OAAO,CAACqE,IAAR,CAAa,oBAAb;AACH;AACJ,SAPD;AAQH,OATG,MASG;AACH,aAAK/B,KAAL,CAAWkD,gBAAX;AACH;AACA,KAlP+C;;AAAA,SAoPhDC,WApPgD,GAoPjC9C,IAAD,IAAU;AACpB,UAAI+C,IAAI,GAAG,IAAInD,IAAJ,CAASI,IAAT,CAAX;AACA+C,MAAAA,IAAI,GAAGC,MAAM,CAACD,IAAD,CAAN,CAAaE,KAAb,CAAmB,GAAnB,CAAP;AACA,UAAIC,KAAK,GAAGH,IAAI,CAAC,CAAD,CAAJ,GAAU,KAAV,GAAkBA,IAAI,CAAC,CAAD,CAAtB,GAA4B,IAA5B,GAAmCA,IAAI,CAAC,CAAD,CAAnD;AACA,UAAII,IAAI,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAR,CAAc,GAAd,CAAX;AACA,UAAIG,KAAK,GAAGJ,MAAM,CAACK,MAAM,CAACF,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,EAAlB,GAAwBE,MAAM,CAACF,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,EAA1C,GAAgDA,IAAI,CAAC,CAAD,CAArD,CAAN,GAAkE,GAAlE,GAAwEA,IAAI,CAAC,CAAD,CAA5E,IAAmFE,MAAM,CAACF,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,EAAlB,GAAuB,IAAvB,GAA8B,IAAjH,CAAZ;AACA,aAAOC,KAAK,GAAG,IAAR,GAAeF,KAAtB;AACH,KA3P+C;;AAAA,SA6PhDI,YA7PgD,GA6PjC,MAAM;AACjB,WAAKrD,QAAL,CAAc;AAAExB,QAAAA,WAAW,EAAE,KAAf;AAAsBS,QAAAA,KAAK,EAAE;AAA7B,OAAd;AACH,KA/P+C;;AAAA,SAiQhDqE,sBAjQgD,GAiQvB,MAAM;AAC3B,WAAKtD,QAAL,CAAc;AAAExB,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KAnQ+C;;AAAA,SAqQhD+E,mBArQgD,GAqQ1B,MAAOxD,IAAP,IAAgB;AAClC;AACA,UAAI;AAAEpC,QAAAA,UAAF;AAAcQ,QAAAA,YAAd;AAA4Bc,QAAAA;AAA5B,UAAqC,KAAKxB,KAA9C;;AACA,UAAGU,YAAY,CAACmD,MAAb,KAAsB,CAAtB,IAA2BnD,YAAY,CAACmD,MAAb,KAAsBrC,KAAK,GAAC,CAA1D,EAA4D;AACxDtB,QAAAA,UAAU,CAAC,YAAD,CAAV,GAA2BA,UAAU,CAAC,YAAD,CAArC;AACAA,QAAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK4D,QAAL,CAAc5D,UAAU,CAAC,YAAD,CAAxB,EAAwCoC,IAAI,CAAChC,YAA7C,CAAzB;AACAJ,QAAAA,UAAU,CAAC,aAAD,CAAV,GAA4BoC,IAAI,CAACyD,EAAjC;AACA7F,QAAAA,UAAU,CAAC,eAAD,CAAV,GAA8BoC,IAAI,CAAC0D,SAAnC;AACA9F,QAAAA,UAAU,CAAC,cAAD,CAAV,GAA6BoC,IAAI,CAAChC,YAAlC;AACA,cAAM,KAAKiC,QAAL,CAAc;AAChBrC,UAAAA;AADgB,SAAd,CAAN;AAGH;;AACG,UAAGQ,YAAY,CAACmD,MAAb,GAAoBrC,KAAK,GAAC,CAA7B,EAAgC;AAC5B,YAAIyE,SAAS,GAAIvF,YAAY,CAACmD,MAAb,GAAsB,CAAvC;AACAnD,QAAAA,YAAY,CAACuF,SAAD,CAAZ,CAAwB,UAAxB,IAAsC,KAAKnC,QAAL,CAAcpD,YAAY,CAACuF,SAAD,CAAZ,CAAwB,YAAxB,CAAd,EAAqD3D,IAAI,CAAChC,YAA1D,CAAtC;AACAI,QAAAA,YAAY,CAACuF,SAAD,CAAZ,CAAwB,aAAxB,IAAyC3D,IAAI,CAACyD,EAA9C;AACArF,QAAAA,YAAY,CAACuF,SAAD,CAAZ,CAAwB,eAAxB,IAA2C3D,IAAI,CAAC0D,SAAhD;AACAtF,QAAAA,YAAY,CAACuF,SAAD,CAAZ,CAAwB,cAAxB,IAA0C3D,IAAI,CAAChC,YAA/C;AACJ,cAAM,KAAKiC,QAAL,CAAc;AAChB7B,UAAAA;AADgB,SAAd,CAAN;AAGH;;AACDA,MAAAA,YAAY,CAACqD,MAAb,CAAqBrD,YAAY,CAACmD,MAAb,GAAsB,CAA3C,EAA+C,CAA/C;AACAnD,MAAAA,YAAY,CAACsD,IAAb,CAAkB9D,UAAlB;AACA,YAAM,KAAKqC,QAAL,CAAc;AAChB7B,QAAAA;AADgB,OAAd,CAAN;AAGA,YAAM,KAAKuB,KAAL,CAAW/C,UAAX,CAAsB,eAAtB,EAAuCwB,YAAvC,CAAN;AACA,WAAK6B,QAAL,CAAc;AAAExB,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KAnS+C;;AAAA,SAoShDmF,qBApSgD,GAoSxB,MAAO5D,IAAP,IAAgB;AACpC,UAAI;AAAErB,QAAAA;AAAF,UAAoB,KAAKjB,KAA7B;AACA,UAAI;AAAEE,QAAAA,UAAF;AAAcQ,QAAAA,YAAd;AAA4Bc,QAAAA;AAA5B,UAAqC,KAAKxB,KAA9C;AACA2C,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BlC,YAAY,CAACmD,MAAxC,EAAgD,KAAhD,EAAuDrC,KAAvD;;AACA,UAAGd,YAAY,CAACmD,MAAb,KAAsB,CAAtB,IAA2BnD,YAAY,CAACmD,MAAb,KAAsBrC,KAAK,GAAC,CAA1D,EAA4D;AAExDtB,QAAAA,UAAU,CAAC,YAAD,CAAV,GAA2BA,UAAU,CAAC,YAAD,CAArC;AACAA,QAAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK4D,QAAL,CAAc5D,UAAU,CAAC,YAAD,CAAxB,EAAwCoC,IAAI,CAAChC,YAA7C,CAAzB;AACAJ,QAAAA,UAAU,CAAC,aAAD,CAAV,GAA4BoC,IAAI,CAACyD,EAAjC;AACA7F,QAAAA,UAAU,CAAC,eAAD,CAAV,GAA8BoC,IAAI,CAAC0D,SAAnC;AACA9F,QAAAA,UAAU,CAAC,cAAD,CAAV,GAA6BoC,IAAI,CAAChC,YAAlC;AACA,cAAM,KAAKiC,QAAL,CAAc;AAChBrC,UAAAA;AADgB,SAAd,CAAN;AAGH;;AACDyC,MAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;;AACA,UAAGd,YAAY,CAACmD,MAAb,GAAoBrC,KAAK,GAAC,CAA7B,EAAgC;AAC5Bd,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,eAApB,IAAuCc,IAAI,CAAC0D,SAA5C;AACAtF,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,aAApB,IAAqCc,IAAI,CAACyD,EAA1C;AACArF,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,cAApB,IAAsCc,IAAI,CAAChC,YAA3C;AACA,cAAM,KAAKiC,QAAL,CAAc;AAChB7B,UAAAA;AADgB,SAAd,CAAN;AAGH;;AAEDA,MAAAA,YAAY,CAACqD,MAAb,CAAqBrD,YAAY,CAACmD,MAAb,GAAsB,CAA3C,EAA+C,CAA/C;AACAnD,MAAAA,YAAY,CAACsD,IAAb,CAAkB9D,UAAlB;AACA,YAAM,KAAKqC,QAAL,CAAc;AAChB7B,QAAAA;AADgB,OAAd,CAAN,CA3BoC,CA8BpC;;AACA,YAAM,KAAKuB,KAAL,CAAW/C,UAAX,CAAsB,eAAtB,EAAuCwB,YAAvC,CAAN;AACA,WAAK6B,QAAL,CAAc;AAAExB,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KArU+C;;AAAA,SAuUhDoF,UAvUgD,GAuUlCV,IAAD,IAAU;AACnB,UAAIW,CAAC,GAAGX,IAAI,CAACF,KAAL,CAAW,GAAX,CAAR;AACA,aAAOa,CAAC,CAAC,CAAD,CAAD,GAAO,EAAP,GAAY,CAACA,CAAC,CAAC,CAAD,CAArB;AACH,KA1U+C;;AAAA,SA8UhDC,YA9UgD,GA8UhCC,IAAD,IAAU;AACrB,eAASC,CAAT,CAAWC,CAAX,EAAc;AAAE,eAAO,CAACA,CAAC,GAAG,EAAJ,GAAS,GAAT,GAAe,EAAhB,IAAsBA,CAA7B;AAAiC;;AACjD,UAAIC,CAAC,GAAG,CAACH,IAAI,GAAG,EAAP,GAAY,CAAb,IAAkB,EAA1B;AACA,UAAII,CAAC,GAAGJ,IAAI,GAAG,EAAf;AACA,aAAOC,CAAC,CAACE,CAAD,CAAD,GAAO,GAAP,GAAaF,CAAC,CAACG,CAAD,CAArB;AACH,KAnV+C;;AAAA,SAsVhD5C,QAtVgD,GAsVrC,CAAC6C,EAAD,EAAKC,EAAL,KAAY;AACnB,aAAO,KAAKP,YAAL,CAAkB,KAAKF,UAAL,CAAgBQ,EAAhB,IAAsB,KAAKR,UAAL,CAAgBS,EAAhB,CAAxC,CAAP;AACH,KAxV+C;;AAAA,SA0VhDC,kBA1VgD,GA0V3B,YAAY;AAC7B,UAAI;AAAEnG,QAAAA,YAAF;AAAgBR,QAAAA;AAAhB,UAA+B,KAAKF,KAAxC;AACAE,MAAAA,UAAU,GAAG;AACTC,QAAAA,UAAU,EAAEO,YAAY,CAACA,YAAY,CAACmD,MAAb,GAAsB,CAAvB,CAAZ,CAAsCzD,QADzC;AAETA,QAAAA,QAAQ,EAAE,EAFD;AAGTC,QAAAA,WAAW,EAAE,IAHJ;AAITC,QAAAA,YAAY,EAAE,EAJL;AAKTC,QAAAA,MAAM,EAAE,EALC;AAMTC,QAAAA,gBAAgB,EAAE;AANT,OAAb;AAQAE,MAAAA,YAAY,CAACsD,IAAb,CAAkB;AACd7D,QAAAA,UAAU,EAAEO,YAAY,CAACA,YAAY,CAACmD,MAAb,GAAsB,CAAvB,CAAZ,CAAsCzD,QADpC;AAEdA,QAAAA,QAAQ,EAAE,EAFI;AAGdC,QAAAA,WAAW,EAAE,CAHC;AAIdI,QAAAA,aAAa,EAAE,EAJD;AAKdH,QAAAA,YAAY,EAAE,EALA;AAMdC,QAAAA,MAAM,EAAE,EANM;AAOdC,QAAAA,gBAAgB,EAAE;AAPJ,OAAlB;AAUA,YAAM,KAAK+B,QAAL,CAAc;AAAE7B,QAAAA,YAAF;AAAgBR,QAAAA;AAAhB,OAAd,CAAN;AAEA,YAAM,KAAK+B,KAAL,CAAW/C,UAAX,CAAsB,eAAtB,EAAuCwB,YAAvC,CAAN;AACH,KAjX+C;;AAAA,SAmXhDoG,eAnXgD,GAmX9B,MAAOtF,KAAP,IAAiB;AAC/B,UAAI;AAAEd,QAAAA;AAAF,UAAmB,KAAKV,KAA5B;AACAU,MAAAA,YAAY,CAACqD,MAAb,CAAoBvC,KAApB,EAA2B,CAA3B;AACA,WAAKe,QAAL,CAAc;AAAE7B,QAAAA;AAAF,OAAd;AACA,YAAM,KAAKuB,KAAL,CAAW/C,UAAX,CAAsB,eAAtB,EAAuCwB,YAAvC,CAAN;AACH,KAxX+C;;AAAA,SA0XhDqG,qBA1XgD,GA0XxB,MAAM;AAC1B,WAAKxE,QAAL,CAAeyE,SAAD,KAAgB;AAC1BjF,QAAAA,iBAAiB,EAAE,CAACiF,SAAS,CAACjF;AADJ,OAAhB,CAAd;AAGH,KA9X+C;AAAA;;AAgDhDkF,EAAAA,iBAAiB,GAAE;AACf,SAAKxF,MAAL,CAAY,EAAZ;AACH;;AACDyF,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,SAAL,GAAiB,IAAI7H,oBAAJ,CAAyB;AACtC8H,MAAAA,OAAO,EAAEC,OAAO,iBAAI;AAAM,QAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0DA,OAA1D,CADkB;AAEtCC,MAAAA,eAAe,EAAE;AAFqB,KAAzB,CAAjB;AAIA,QAAI;AAAEC,MAAAA,iBAAF;AAAqBvG,MAAAA,YAArB;AAAmCJ,MAAAA,WAAnC;AAAgDF,MAAAA,YAAhD;AAA8DR,MAAAA,UAA9D;AAA0EqB,MAAAA;AAA1E,QAAuF,KAAKvB,KAAhG,CALiB,CAMjB;AACA;AACA;;AACA,QAAI;AAAEmD,MAAAA;AAAF,QAAsB,KAAKlB,KAA/B;AACA/B,IAAAA,UAAU,CAAC,YAAD,CAAV,GAA2BiD,eAAe,GAAGA,eAAe,CAACsC,IAAnB,GAA0B,EAApE;AACA/E,IAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,IAAgCyC,eAAe,GAAGA,eAAe,CAACsC,IAAnB,GAA0B,EAAzE;AACA,SAAKlD,QAAL,CAAc;AACVrC,MAAAA,UADU;AAEVQ,MAAAA;AAFU,KAAd;AAKA,SAAKuB,KAAL,CAAWzC,YAAX,CAAyB,WAAzB,EAAqC2C,IAArC,CAA2CC,GAAD,IAAS;AAC/C,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmBF,GAAvB;;AACA,UAAIC,MAAM,KAAK,GAAf,EAAoB;AAChB,aAAK,IAAIS,KAAT,IAAkBR,IAAlB,EAAwB;AACpBtB,UAAAA,YAAY,CAACgD,IAAb,CAAkB;AAAElB,YAAAA,KAAK,EAAEA,KAAK,CAACiD,EAAf;AAAmBnE,YAAAA,KAAK,EAAEkB,KAAK,CAAC0E;AAAhC,WAAlB;AACH;;AACD,aAAKjF,QAAL,CAAc;AAAEvB,UAAAA;AAAF,SAAd;AACH;AACJ,KARD;AASA,SAAKiB,KAAL,CAAWzC,YAAX,CAAyB,8BAA6B2D,eAAe,CAACsE,QAAS,SAAQ/H,UAAU,CAAC,IAAIwC,IAAJ,EAAD,CAAa,EAA9G,EAAiHC,IAAjH,CAAuHC,GAAD,IAAS;AAC3H,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmBF,GAAvB;;AACA,UAAIC,MAAM,KAAK,GAAf,EAAoB;AAChB,aAAK,IAAIS,KAAT,IAAkBR,IAAlB,EAAwB;AACpB1B,UAAAA,WAAW,CAACoD,IAAZ,CAAiB;AAAElB,YAAAA,KAAK,EAAEA,KAAK,CAACiD,EAAf;AAAmBnE,YAAAA,KAAK,EAAEkB,KAAK,CAAC4E;AAAhC,WAAjB;AACH;;AACD,aAAKnF,QAAL,CAAc;AAAE3B,UAAAA;AAAF,SAAd;AACH;AACJ,KARD;AASA,SAAKqB,KAAL,CAAWzC,YAAX,CAAyB,qBAAzB,EAA+C2C,IAA/C,CAAqDC,GAAD,IAAS;AACzD,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmBF,GAAvB;;AACA,UAAIC,MAAM,KAAK,GAAf,EAAoB;AAChB,aAAK,IAAIS,KAAT,IAAkBR,IAAlB,EAAwB;AACpBf,UAAAA,QAAQ,CAACyC,IAAT,CAAc;AAAElB,YAAAA,KAAK,EAAEA,KAAT;AAAgBlB,YAAAA,KAAK,EAAEkB;AAAvB,WAAd;AACH;;AACD,aAAKP,QAAL,CAAc;AAAEhB,UAAAA;AAAF,SAAd;AACH;AACJ,KARD;AASA,SAAKS,oBAAL;AACH;;AAgSD2F,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEhH,MAAAA,YAAF;AAAgBC,MAAAA,WAAhB;AAA6BC,MAAAA,UAA7B;AAAyCH,MAAAA,YAAzC;AAAuDQ,MAAAA,QAAvD;AAAiEJ,MAAAA,IAAjE;AAAuEZ,MAAAA,UAAvE;AAAmFoB,MAAAA,YAAnF;AAAiGC,MAAAA,QAAjG;AAA2GR,MAAAA,WAA3G;AAAwHI,MAAAA,cAAxH;AAAwIF,MAAAA,aAAa,GAAG,EAAxJ;AAA4JD,MAAAA,YAA5J;AAA0KW,MAAAA,mBAA1K;AAA+LG,MAAAA,IAA/L;AAAqMC,MAAAA;AAArM,QAA2N,KAAK/B,KAApO;AACA,QAAI;AAAE4H,MAAAA,cAAF;AAAkBC,MAAAA,qBAAlB;AAAyCC,MAAAA;AAAzC,QAAwD,KAAK7F,KAAjE;AACA,QAAI;AAAE8F,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,QAA2BL,cAA/B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAMI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,eASI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAgBI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAoBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBApBJ,CAFJ,EA+BKlH,YAAY,CAACmD,MAAb,GAAsB,CAAtB,GAA0BnD,YAAY,CAACwH,GAAb,CAAiB,CAACC,IAAD,EAAO3G,KAAP,KAAiB;AACzD,0BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAUI,oBAAC,WAAD;AACI,QAAA,WAAW,EAAC,OADhB,CAEI;AAFJ;AAGI,QAAA,KAAK,EAAE2G,IAAI,CAAChI,UAHhB;AAII,QAAA,IAAI,EAAC,YAJT;AAKI,QAAA,QAAQ,EAAE,KAAKyD,YALnB;AAMI,QAAA,SAAS,EAAC,mBANd;AAOI,QAAA,QAAQ,EAAE,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CAHJ,eAuBI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASI,oBAAC,WAAD;AACI,QAAA,WAAW,EAAC,KADhB,CAEI;AAFJ;AAGI,QAAA,KAAK,EAAEuE,IAAI,CAAC/H,QAHhB;AAII,QAAA,IAAI,EAAC,UAJT;AAKI,QAAA,QAAQ,EAAE,KAAKwD,YALnB;AAMI,QAAA,SAAS,EAAC,mBANd;AAOI,QAAA,QAAQ,EAAE,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAvBJ,eA0CI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,WAAD;AACI,QAAA,WAAW,EAAC,SADhB,CAEI;AAFJ;AAGI,QAAA,KAAK,EAAEuE,IAAI,CAAC1H,aAHhB;AAII,QAAA,IAAI,EAAC,eAJT;AAKI,QAAA,OAAO,EAAE,MAAM,KAAK8B,QAAL,CAAc;AAAExB,UAAAA,WAAW,EAAE,IAAf;AAAqBS,UAAAA,KAAK,EAAEA;AAA5B,SAAd,CALnB;AAMI,QAAA,SAAS,EAAC,wBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA1CJ,eAyDI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD,CACI;AADJ;AAEI,QAAA,OAAO,EAAED,QAFb;AAGI,QAAA,KAAK,EAAE4G,IAAI,CAAC7H,YAHhB;AAII,QAAA,IAAI,EAAC,cAJT;AAKI,QAAA,QAAQ,EAAG8H,CAAD,IAAK,KAAKxE,YAAL,CAAkBwE,CAAlB,EAAqB5G,KAArB,CALnB;AAMI,QAAA,SAAS,EAAC,mBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAzDJ,eAoEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD,CACI;AADJ;AAEI,QAAA,OAAO,EAAEZ,WAFb;AAGI,QAAA,KAAK,EAAEuH,IAAI,CAAC5H,MAHhB;AAII,QAAA,IAAI,EAAC,QAJT;AAKI,QAAA,QAAQ,EAAG6H,CAAD,IAAO,KAAKxE,YAAL,CAAkBwE,CAAlB,EAAqB5G,KAArB,CALrB;AAMI,QAAA,SAAS,EAAC,mBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CApEJ,EA+EKd,YAAY,CAACmD,MAAb,KAAwBrC,KAAK,GAAG,CAAhC,gBACG;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAE,KAAKqF,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAC,IAAX;AAAgB,QAAA,MAAM,EAAC,IAAvB;AAA4B,QAAA,OAAO,EAAC,WAApC;AAAgD,QAAA,IAAI,EAAC,MAArD;AAA4D,QAAA,KAAK,EAAC,4BAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,KAAK,EAAC,IAAZ;AAAiB,QAAA,MAAM,EAAC,IAAxB;AAA6B,QAAA,IAAI,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAM,QAAA,CAAC,EAAC,UAAR;AAAmB,QAAA,MAAM,EAAC,SAA1B;AAAoC,0BAAe,OAAnD;AAA2D,2BAAgB,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAM,QAAA,CAAC,EAAC,UAAR;AAAmB,QAAA,MAAM,EAAC,SAA1B;AAAoC,0BAAe,OAAnD;AAA2D,2BAAgB,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,CADH,gBAOY;AAAK,QAAA,KAAK,EAAC,IAAX;AAAgB,QAAA,MAAM,EAAC,IAAvB;AAA4B,QAAA,OAAO,EAAE,MAAM,KAAKC,eAAL,CAAqBtF,KAArB,CAA3C;AAAwE,QAAA,SAAS,EAAC,MAAlF;AAAyF,QAAA,GAAG,EAAEjC,SAA9F;AAAyG,QAAA,GAAG,EAAC,EAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtFjB,CADJ;AA0FH,KA3F0B,CAA1B,GA2FI,EA1HT,eA4HI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACA,MAAA,WAAW,EAAE,WADb;AAEA,MAAA,MAAM,EAAE,IAFR;AAGA,MAAA,SAAS,EAAC,oBAHV;AAIA,MAAA,KAAK,EAAC,mBAJN;AAKA,MAAA,OAAO,EAAE,KAAKwH,qBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQA,oBAAC,YAAD;AACI,MAAA,WAAW,EAAE,WADjB;AAEI,MAAA,MAAM,EAAE,IAFZ;AAGI,MAAA,SAAS,EAAC,yBAHd;AAII,MAAA,KAAK,EAAC,QAJV;AAKI,MAAA,OAAO,EAAE,MAAMpH,OAAO,CAACqE,IAAR,CAAa,oBAAb,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eAeA,oBAAC,YAAD;AACI,MAAA,WAAW,EAAE,WADjB;AAEI,MAAA,MAAM,EAAE,IAFZ;AAGI,MAAA,SAAS,EAAC,oBAHd;AAII,MAAA,KAAK,EAAC,iBAJV;AAKI,MAAA,OAAO,EAAE,KAAKE,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfA,CADJ,CA5HJ,CADJ,CADJ,CAFJ,CADJ,CAFJ,CADJ,eAsKI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE,sCAAxB;AAAgE,MAAA,KAAK,EAAE;AAAEmE,QAAAA,QAAQ,EAAE;AAAZ,OAAvE;AAA8F,MAAA,KAAK,EAAEtH,WAArG;AAAkH,MAAA,WAAW,EAAE,KAAK6E,YAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,OAAO,EAAE,KAAKA,YAAnB;AAAiC,MAAA,SAAS,EAAC,OAA3C;AAAmD,MAAA,GAAG,EAAErG,SAAxD;AAAmE,MAAA,GAAG,EAAC,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEA,oBAAC,YAAD,CACI;AADJ;AAEI,MAAA,OAAO,EAAEyB,YAFb;AAGI,MAAA,KAAK,EAAEG,cAAc,CAACC,QAH1B;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,QAAQ,EAAE,KAAKsC,qBALnB;AAMI,MAAA,SAAS,EAAC,mBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADI,eAYJ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEA;AACI;AACA;AACA,MAAA,KAAK,EAAEvC,cAAc,CAACE,SAH1B;AAII,MAAA,IAAI,EAAC,WAJT;AAKI,MAAA,QAAQ,EAAE,KAAKmB,YALnB;AAMI,MAAA,SAAS,EAAC,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAZI,CADJ,CAJJ,eA+BI;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACY,MAAA,aAAa,EAAEb,mBAD3B;AAEY,MAAA,YAAY,EAAE,KAAK8B,gBAF/B;AAGY,MAAA,QAAQ,EAAE3B,IAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKb,aAAa,CAAC4C,MAAd,GAAuB,CAAvB,GAA2B5C,aAAa,CAACiH,GAAd,CAAkB,CAACC,IAAD,EAAO3G,KAAP,KAAiB;AAC3D,0BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAK0E,qBAAL,CAA2BiC,IAA3B,CAArC;AAAuE,QAAA,GAAG,EAAE3G,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAK;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmE2G,IAAI,CAACG,UAAxE,CAAL,CADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAK;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmEH,IAAI,CAACnC,SAAxE,CAAL,CAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAK;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmEmC,IAAI,CAAC7H,YAAxE,CAAL,CAHH,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAK;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmE6H,IAAI,CAACI,UAAxE,CAAL,CAJH,CADJ;AAQH,KAT2B,CAA3B,gBASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAJ,CAdT,CADA,CA/BJ,eAkDI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,YAAD;AACI,MAAA,WAAW,EAAE,OADjB;AAEI,MAAA,MAAM,EAAE,IAFZ;AAGI,MAAA,SAAS,EAAC,oBAHd;AAII,MAAA,KAAK,EAAC,QAJV;AAKI,MAAA,OAAO,EAAE,KAAK3C,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAlDJ,CAFJ,CAtKJ,eAuOI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI7D,iBAAiB,gBAAG,oBAAC,gBAAD;AAAkB,MAAA,iBAAiB,EAAEA,iBAArC;AAAwD,MAAA,qBAAqB,EAAI,KAAKgF,qBAAtF;AAA8G,MAAA,mBAAmB,EAAE,KAAKjB,mBAAxI;AAA6J,MAAA,UAAU,EAAIgC,UAA3K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA+L,EAFpN,CAvOJ,CADJ;AAgPH;;AApnB+C;;AAunBpD,MAAMU,eAAe,GAAIxI,KAAD,KAAY;AAChC4H,EAAAA,cAAc,EAAE5H,KAAK,CAACyI,WAAN,CAAkBb,cADF;AAEhCL,EAAAA,iBAAiB,EAAEvH,KAAK,CAACyI,WAAN,CAAkBlB,iBAFL;AAGhCM,EAAAA,qBAAqB,EAAE7H,KAAK,CAACyI,WAAN,CAAkBZ,qBAHT;AAIhC1E,EAAAA,eAAe,EAAEnD,KAAK,CAACyI,WAAN,CAAkBtF,eAJH;AAKhCgB,EAAAA,yBAAyB,EAAEnE,KAAK,CAACyI,WAAN,CAAkBtE,yBALb;AAMhCC,EAAAA,wBAAwB,EAAEpE,KAAK,CAACyI,WAAN,CAAkBrE;AANZ,CAAZ,CAAxB;;AASA,MAAMsE,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAOtJ,kBAAkB,CAAC;AACtBH,IAAAA,UADsB;AAEtBC,IAAAA,wBAFsB;AAGtBK,IAAAA,YAHsB;AAItBC,IAAAA;AAJsB,GAAD,EAKtBkJ,QALsB,CAAzB;AAMH,CAPD;;AASA,OAAO,MAAMC,eAAe,GAAGxJ,OAAO,CAACoJ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3I,oBAA7C,CAAxB","sourcesContent":["import React, { Component } from 'react';\r\nimport { NormalSelect, NormalButton, NormalModal, NormalInput } from 'component/common';\r\nimport './style.scss';\r\nimport { updateForm, getSelectedTreatmentList } from 'redux/actions/appointment';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport closeIcon from 'assets/images/close.png';\r\nimport { getCommonApi, commonCreateApi } from 'redux/actions/common';\r\nimport { dateFormat } from 'service/helperFunctions';\r\nimport { history } from 'helpers';\r\nimport _ from 'lodash';\r\nimport { TableWrapper } from 'component/common';\r\nimport {TreatmentPackage} from './modal/TreatmentPackage'\r\n\r\nexport class SelectTreatmentClass extends Component {\r\n    state = {\r\n        treatmentDetail: [],\r\n        formFields: {\r\n            start_time: \"\",\r\n            end_time: \"\",\r\n            Item_Codeid: null,\r\n            add_duration: \"\",\r\n            emp_no: [],\r\n            requesttherapist: true,\r\n            Item_CodeName: \"\"\r\n        },\r\n        selectedList: [\r\n            {\r\n                start_time: \"\",\r\n                end_time: \"\",\r\n                Item_Codeid: null,\r\n                add_duration: \"\",\r\n                emp_no: [],\r\n                requesttherapist: false\r\n            }\r\n        ],\r\n        outletOption: [],\r\n        staffOption: [],\r\n        roomOption: [],\r\n        list: [],\r\n        isOpenModal: false,\r\n        categoryList: [],\r\n        treatmentList: [],\r\n        siteList: [],\r\n        treatmentField: {\r\n            category: \"\",\r\n            treatment: \"\",\r\n        },\r\n        timeDropdown: [],\r\n        duration: [],\r\n        index: null,\r\n        search: \"\",\r\n        selectTreatmentId: \"\",\r\n        treatmentListHeader: [\r\n            { label: 'Category', className: \"w-50\" },\r\n            { label: 'Service', className: \"w-75\"},\r\n            { label: 'Duration', className: \"w-25\" },\r\n            { label: 'price', className: \"w-50\" },            \r\n        ],\r\n        meta: {},\r\n        isTreatementModal: false\r\n    }\r\n    componentDidMount(){\r\n        this.search({})\r\n    }\r\n    componentWillMount() {\r\n        this.validator = new SimpleReactValidator({\r\n            element: message => <span className=\"error-message text-danger validNo fs14\">{message}</span>,\r\n            autoForceUpdate: this,\r\n        });\r\n        let { appointmentDetail, categoryList, staffOption, selectedList, formFields, duration } = this.state;\r\n        // this.props.getSelectedTreatmentList(`?appt_id=${appointmentDetail.id}`).then((res) => {\r\n        //     console.log(\"namekkuhkjn\", res)\r\n        // })\r\n        let { basicApptDetail } = this.props;\r\n        formFields['start_time'] = basicApptDetail ? basicApptDetail.time : \"\";\r\n        selectedList[0]['start_time'] = basicApptDetail ? basicApptDetail.time : \"\";\r\n        this.setState({\r\n            formFields,\r\n            selectedList\r\n        })\r\n\r\n        this.props.getCommonApi(`itemdept/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    categoryList.push({ value: value.id, label: value.itm_desc })\r\n                }\r\n                this.setState({ categoryList })\r\n            }\r\n        })\r\n        this.props.getCommonApi(`appointment/Staffs/?Outlet=${basicApptDetail.branchId}&date=${dateFormat(new Date())}`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    staffOption.push({ value: value.id, label: value.emp_name })\r\n                }\r\n                this.setState({ staffOption })\r\n            }\r\n        })\r\n        this.props.getCommonApi(`treatment/Duration/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    duration.push({ value: value, label: value })\r\n                }\r\n                this.setState({ duration })\r\n            }\r\n        })\r\n        this.getStaffAvailability();\r\n    }\r\n\r\n    getStaffAvailability = () => {\r\n        this.props.getCommonApi(`staffsavailable/?Appt_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                // for (let value of data) {\r\n                //     staffList.push({ value: value.id, label: value.emp_name })\r\n                // }\r\n                this.setState({ list: data })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        event.persist();\r\n        console.log(event.target.value, event.target, event, \"dfhdfjghkjfghj\")\r\n        let { treatmentField } = this.state;\r\n        treatmentField['treatment'] = event.target.value;\r\n        this.setState({ search: event.target.value, treatmentField })\r\n        if (!this.debouncedFn) {\r\n            this.debouncedFn = _.debounce(() => {\r\n                let searchString = event.target.value;\r\n                 let data = { search: searchString }\r\n                // this.queryHandler(data)\r\n                let { customerList } = this.state;\r\n                let { basicApptDetail } = this.props;\r\n                this.search(data)\r\n            }, 500);\r\n        }\r\n        this.debouncedFn();\r\n    }\r\n\r\n    search = (data) => {    \r\n        let { page = 1, limit = 10, search = \"\" } = data\r\n        let {selectTreatmentId } = this.state;\r\n        this.props.getCommonApi(`stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`).then((res) => {\r\n          console.log(res)\r\n            if (res.status === 200) {\r\n                this.setState({ treatmentList: res.data.dataList, meta: res.data.meta.pagination  })\r\n            }\r\n        })\r\n    }\r\n    \r\n    handlePagination = (page) => {\r\n        this.search(page)\r\n    }\r\n\r\n    handleChangeTreatment = async ({ target: { value, name } }) => {\r\n        let { treatmentField, treatmentList, search, selectTreatmentId } = this.state;\r\n        console.log(\"uihwkjrwkej\", name, value)\r\n        treatmentField[name] = value;\r\n        if (name === \"category\") {\r\n            selectTreatmentId = value;\r\n        } else if( name===\"treatment\"){\r\n            search = value;\r\n        }\r\n        await this.setState({\r\n            treatmentField,\r\n            selectTreatmentId,\r\n            search\r\n        });\r\n\r\n        let page = 1, limit = 10\r\n        this.props.getCommonApi(`stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`).then((res) => {\r\n            console.log(res)\r\n              if (res.status === 200) {\r\n                  this.setState({ treatmentList: res.data.dataList, meta: res.data.meta.pagination  })\r\n              }\r\n          })\r\n    };\r\n\r\n    handleChange = async ({ target: { value, name } }, index) => {\r\n        let { formFields, selectedList } = this.state;\r\n        console.log(\"hgjfgjfcghfghfgh\", name, value, index)\r\n        if (selectedList.length > 0 && selectedList.length !== (index + 1)) {\r\n            console.log(\"hgjfgjfcghfghfgh indexed\", name, value, index)\r\n            selectedList[index][name] = value;\r\n            if(name===\"add_duration\"){\r\n                selectedList[index]['end_time'] = this.addTimes(selectedList[index][\"start_time\"], value);\r\n                selectedList[index+1][\"start_time\"] = selectedList[index]['end_time'];\r\n            }\r\n            await this.setState({\r\n                selectedList,\r\n            });\r\n            await this.props.updateForm('treatmentList', selectedList)\r\n        } else {\r\n            console.log(\"hgjfgjfcghfghfgh else\", name, value, index)\r\n            formFields[name] = value;\r\n            if(name===\"add_duration\"){\r\n                formFields['end_time'] = this.addTimes(formFields[\"start_time\"], value)\r\n            }\r\n            await this.setState({\r\n                formFields,\r\n            });\r\n            selectedList.splice((selectedList.length - 1), 1);\r\n            selectedList.push(formFields);\r\n            await this.setState({\r\n                selectedList,\r\n            });\r\n            await this.props.updateForm('treatmentList', selectedList)\r\n        }\r\n    };\r\n\r\n    handleMultiSelect = (data) => {\r\n        let { formFields } = this.state;\r\n        let list = []\r\n        for (let key of data) {\r\n            list.push(key.value);\r\n        }\r\n        formFields['emp_no'] = list;\r\n        this.setState({ formFields });\r\n        console.log(formFields, \"oyokkjk\")\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        // this.props.handleConfirmBooking()\r\n        let { appointmentCustomerDetail, appointmentTreatmentList } = this.props;\r\n        console.log(appointmentCustomerDetail, appointmentTreatmentList, \"sdfgdfsdggf\")\r\n        let data = {\r\n            Appointment: {\r\n                appt_date: dateFormat(new Date(appointmentCustomerDetail.appointmentDate), \"yyyy-mm-dd\"),\r\n                Appt_typeid: appointmentCustomerDetail.Appt_typeid,\r\n                cust_noid: appointmentCustomerDetail.customerName,\r\n                new_remark: appointmentCustomerDetail.new_remark,\r\n                // emp_noid: appointmentCustomerDetail.emp_id,\r\n                Source_Codeid: appointmentCustomerDetail.Source_Codeid,\r\n                Room_Codeid: appointmentCustomerDetail.Room_Codeid,\r\n                appt_status: appointmentCustomerDetail.bookingStatus,\r\n                sec_status: appointmentCustomerDetail.sec_status,\r\n                ItemSite_Codeid: appointmentCustomerDetail.ItemSite_Codeid\r\n            },\r\n            Treatment: appointmentTreatmentList\r\n        }\r\n        if(appointmentCustomerDetail.customerName && appointmentCustomerDetail.bookingStatus){\r\n        this.props.commonCreateApi(`appointment/`, data).then(async (res) => {\r\n            if (res.status === 201) {\r\n                await this.props.updateForm('treatmentList', [])\r\n                await this.props.updateForm('basicApptDetail', {})\r\n                await this.props.updateForm('appointmentCustomerDetail', {})\r\n                history.push('/admin/appointment')\r\n            }\r\n        })\r\n    } else {\r\n        this.props.showErrorMessage();\r\n    }\r\n    }\r\n\r\n    getDateTime = (data) => {\r\n        let date = new Date(data)\r\n        date = String(date).split(\" \")\r\n        let date1 = date[2] + \"th \" + date[1] + \", \" + date[3]\r\n        let time = date[4].split(\":\")\r\n        let time1 = String(Number(time[0]) > 12 ? (Number(time[0]) - 12) : time[0]) + \":\" + time[1] + (Number(time[0]) > 12 ? \"PM\" : \"AM\")\r\n        return time1 + \", \" + date1\r\n    }\r\n\r\n    handleDialog = () => {\r\n        this.setState({ isOpenModal: false, index: null });\r\n    }\r\n\r\n    handleMultipleCustomer = () => {\r\n        this.setState({ isOpenModal: false });\r\n    }\r\n\r\n    handleSelectPackage = async (data) => {\r\n        debugger\r\n        let { formFields, selectedList, index} = this.state;\r\n        if(selectedList.length===1 || selectedList.length===index+1){\r\n            formFields[\"start_time\"] = formFields[\"start_time\"];\r\n            formFields[\"end_time\"] = this.addTimes(formFields[\"start_time\"], data.add_duration);\r\n            formFields[\"Item_Codeid\"] = data.id;\r\n            formFields[\"Item_CodeName\"] = data.item_desc;\r\n            formFields[\"add_duration\"] = data.add_duration;\r\n            await this.setState({\r\n                formFields,\r\n            });\r\n        }\r\n            if(selectedList.length>index+1) {\r\n                var listCount =  selectedList.length - 1;\r\n                selectedList[listCount][\"end_time\"] = this.addTimes(selectedList[listCount][\"start_time\"], data.add_duration);\r\n                selectedList[listCount][\"Item_Codeid\"] = data.id;\r\n                selectedList[listCount][\"Item_CodeName\"] = data.item_desc;\r\n                selectedList[listCount][\"add_duration\"] = data.add_duration;\r\n            await this.setState({\r\n                selectedList,\r\n            });\r\n        }\r\n        selectedList.splice((selectedList.length - 1), 1);\r\n        selectedList.push(formFields);\r\n        await this.setState({\r\n            selectedList,\r\n        });\r\n        await this.props.updateForm('treatmentList', selectedList)\r\n        this.setState({ isOpenModal: false })\r\n    }\r\n    handleSelectTreatment = async (data) => {\r\n        let { treatmentList } = this.state;        \r\n        let { formFields, selectedList, index} = this.state;\r\n        console.log(\"uihwkjrwkej\", selectedList.length, \"===\", index)\r\n        if(selectedList.length===1 || selectedList.length===index+1){\r\n\r\n            formFields[\"start_time\"] = formFields[\"start_time\"];\r\n            formFields[\"end_time\"] = this.addTimes(formFields[\"start_time\"], data.add_duration);\r\n            formFields[\"Item_Codeid\"] = data.id;\r\n            formFields[\"Item_CodeName\"] = data.item_desc;\r\n            formFields[\"add_duration\"] = data.add_duration;\r\n            await this.setState({\r\n                formFields,\r\n            });\r\n        }\r\n        console.log(index)\r\n        if(selectedList.length>index+1) {\r\n            selectedList[index]['Item_CodeName'] = data.item_desc;\r\n            selectedList[index][\"Item_Codeid\"] = data.id;\r\n            selectedList[index][\"add_duration\"] = data.add_duration;\r\n            await this.setState({\r\n                selectedList,\r\n            });\r\n        }\r\n        \r\n        selectedList.splice((selectedList.length - 1), 1);\r\n        selectedList.push(formFields);\r\n        await this.setState({\r\n            selectedList,\r\n        });\r\n        // console.log(\"uihwkjrwkej\", data, selectedList)\r\n        await this.props.updateForm('treatmentList', selectedList)\r\n        this.setState({ isOpenModal: false })\r\n    }\r\n\r\n    timeToMins = (time) => {\r\n        var b = time.split(':');\r\n        return b[0] * 60 + +b[1];\r\n    }\r\n\r\n    // Convert minutes to a time in format hh:mm\r\n    // Returned value is in range 00  to 24 hrs\r\n    timeFromMins = (mins) => {\r\n        function z(n) { return (n < 10 ? '0' : '') + n; }\r\n        var h = (mins / 60 | 0) % 24;\r\n        var m = mins % 60;\r\n        return z(h) + ':' + z(m);\r\n    }\r\n\r\n    // Add two times in hh:mm format\r\n    addTimes = (t0, t1) => {\r\n        return this.timeFromMins(this.timeToMins(t0) + this.timeToMins(t1));\r\n    }\r\n\r\n    handleAddtreatment = async () => {\r\n        let { selectedList, formFields } = this.state;\r\n        formFields = {\r\n            start_time: selectedList[selectedList.length - 1].end_time,\r\n            end_time: \"\",\r\n            Item_Codeid: null,\r\n            add_duration: \"\",\r\n            emp_no: [],\r\n            requesttherapist: false\r\n        };\r\n        selectedList.push({\r\n            start_time: selectedList[selectedList.length - 1].end_time,\r\n            end_time: \"\",\r\n            Item_Codeid: 1,\r\n            Item_CodeName: \"\",\r\n            add_duration: \"\",\r\n            emp_no: [],\r\n            requesttherapist: false\r\n        })\r\n\r\n        await this.setState({ selectedList, formFields });\r\n\r\n        await this.props.updateForm('treatmentList', selectedList)\r\n    }\r\n\r\n    deleteTreatment = async (index) => {\r\n        let { selectedList } = this.state;\r\n        selectedList.splice(index, 1);\r\n        this.setState({ selectedList });\r\n        await this.props.updateForm('treatmentList', selectedList)\r\n    }\r\n\r\n    handleTreatementmodal = () => {\r\n        this.setState((prevState) => ({\r\n            isTreatementModal: !prevState.isTreatementModal, \r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let { outletOption, staffOption, roomOption, selectedList, siteList, list, formFields, timeDropdown, duration, isOpenModal, treatmentField, treatmentList = [], categoryList, treatmentListHeader, meta, isTreatementModal } = this.state\r\n        let { customerDetail, selectedTreatmentList, customerId } = this.props;\r\n        let { outlet, staff, rooms } = customerDetail;\r\n        return (\r\n            <div className=\"create-appointment select-treatment-appointment\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\" col-md-12\">\r\n                        <div className=\"appointment\">\r\n\r\n                            <div className=\"appointment-holder\">\r\n                                <div className=\"treatment-section\">\r\n                                    <div className=\"select-treatment select-list w-100\">\r\n\r\n                                        <div className=\"row selected selected-header mb-4\">\r\n                                            {/* <div className=\"col-7 p-0\">\r\n                                                <div className=\"row\"> */}\r\n                                            <div className=\"col-1 p-0\">\r\n                                                Start\r\n                                                    </div>\r\n                                            <div className=\"col-1 p-0\">\r\n                                                End\r\n                                                    </div>\r\n                                            <div className=\"col-5 p-0 header-detail\">\r\n                                                Services\r\n                                                    </div>\r\n                                            {/* </div>\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-3 p-0\">\r\n                                                <div className=\"row\"> */}\r\n                                            <div className=\"col-2 p-0 header-detail\">\r\n                                                Duration\r\n\r\n                                                    </div>\r\n                                            <div className=\"col-2 p-0\">\r\n                                                Treatment staff\r\n                                                    </div>\r\n                                            {/* </div>\r\n                                            </div> */}\r\n                                            {/* <div>\r\n\r\n                                            </div> */}\r\n                                        </div>\r\n                                        {selectedList.length > 0 ? selectedList.map((item, index) => {\r\n                                            return (\r\n                                                <div className=\"row selected  mb-4\">\r\n                                                    {/* <div className=\"col-7 p-0\">\r\n                                                        <div className=\"row\"> */}\r\n                                                    <div className=\"col-1 mr-1 p-0\">\r\n                                                        {/* <NormalSelect\r\n                                                                    // placeholder=\"Enter here\"\r\n                                                                    options={timeDropdown}\r\n                                                                    value={item.start_time}\r\n                                                                    name=\"start_time\"\r\n                                                                    onChange={this.handleChange}\r\n                                                                    className=\"customer-name p-0\"\r\n                                                                /> */}\r\n\r\n                                                        <NormalInput\r\n                                                            placeholder=\"start\"\r\n                                                            // options={timeDropdown}\r\n                                                            value={item.start_time}\r\n                                                            name=\"start_time\"\r\n                                                            onChange={this.handleChange}\r\n                                                            className=\"customer-name p-0\"\r\n                                                            disabled={true}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-1 mr-1 p-0\">\r\n                                                        {/* <NormalSelect\r\n                                                                    // placeholder=\"Enter here\"\r\n                                                                    options={timeDropdown}\r\n                                                                    value={item.end_time}\r\n                                                                    name=\"end_time\"\r\n                                                                    onChange={this.handleChange}\r\n                                                                    className=\"customer-name p-0\"\r\n                                                                /> */}\r\n                                                        <NormalInput\r\n                                                            placeholder=\"end\"\r\n                                                            // options={timeDropdown}\r\n                                                            value={item.end_time}\r\n                                                            name=\"end_time\"\r\n                                                            onChange={this.handleChange}\r\n                                                            className=\"customer-name p-0\"\r\n                                                            disabled={true}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-5 mr-1 p-0\">\r\n                                                        <div className=\"header-detail\"></div>\r\n                                                        <NormalInput\r\n                                                            placeholder=\"service\"\r\n                                                            // options={siteList}\r\n                                                            value={item.Item_CodeName}\r\n                                                            name=\"Item_CodeName\"\r\n                                                            onClick={() => this.setState({ isOpenModal: true, index: index })}\r\n                                                            className=\"customer-name p-0 px-2\"\r\n                                                        />\r\n                                                        {/* </div>\r\n                                                        </div> */}\r\n                                                    </div>\r\n                                                    {/* <div className=\"col-3 p-0\">\r\n                                                        <div className=\"row\"> */}\r\n                                                    <div className=\"col-2 mr-1 p-0 header-detail\">\r\n                                                        <NormalSelect\r\n                                                            // placeholder=\"Enter here\"\r\n                                                            options={duration}\r\n                                                            value={item.add_duration}\r\n                                                            name=\"add_duration\"\r\n                                                            onChange={(e)=>this.handleChange(e, index)}\r\n                                                            className=\"customer-name p-0\"\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                    <div className=\"col-2 p-0\">\r\n                                                        <NormalSelect\r\n                                                            // placeholder=\"Enter here\"\r\n                                                            options={staffOption}\r\n                                                            value={item.emp_no}\r\n                                                            name=\"emp_no\"\r\n                                                            onChange={(e) => this.handleChange(e, index)}\r\n                                                            className=\"customer-name p-0\"\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                    {selectedList.length === index + 1 ?\r\n                                                        <div className=\"ml-3\" onClick={this.handleAddtreatment}>\r\n                                                            <svg width=\"31\" height=\"30\" viewBox=\"0 0 31 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <rect width=\"31\" height=\"30\" fill=\"#F9F9F9\" />\r\n                                                                <path d=\"M15 8V22\" stroke=\"#848484\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M8 15H22\" stroke=\"#848484\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                            </svg>\r\n                                                        </div> : <img width=\"25\" height=\"25\" onClick={() => this.deleteTreatment(index)} className=\"ml-3\" src={closeIcon} alt=\"\" />}\r\n                                                </div>\r\n                                            )\r\n                                        }) : \"\"}\r\n\r\n                                        <div className=\"confirm confirm-selected mt-5\">\r\n                                            <div className=\"row\">\r\n                                                <NormalButton\r\n                                                buttonClass={\"treatment\"}\r\n                                                mainbg={true}\r\n                                                className=\"col-12 mr-4 fs-15 \"\r\n                                                label=\"Treatment Package\"\r\n                                                onClick={this.handleTreatementmodal}\r\n                                            />\r\n                                            <NormalButton\r\n                                                buttonClass={\"treatment\"}\r\n                                                mainbg={true}\r\n                                                className=\"col-12 mr-4 ml-4 fs-15 \"\r\n                                                label=\"cancel\"\r\n                                                onClick={() => history.push('/admin/appointment')}\r\n                                            />\r\n                                            <NormalButton\r\n                                                buttonClass={\"treatment\"}\r\n                                                mainbg={true}\r\n                                                className=\"col-12 ml-5 fs-15 \"\r\n                                                label=\"Confirm Booking\"\r\n                                                onClick={this.handleSubmit}\r\n                                            />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <NormalModal className={\"multiple-appointment select-category\"} style={{ minWidth: \"800px\" }} modal={isOpenModal} handleModal={this.handleDialog}>\r\n                    <img onClick={this.handleDialog} className=\"close\" src={closeIcon} alt=\"\" />\r\n                    <div className=\"customer-list container\">                  \r\n                        <div className=\"col-12 pl-0 mb-3 fs-18 py-2\">\r\n                            Select Treatment\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className='row'>\r\n                        <div className='col-6'>\r\n                        Category\r\n                        <NormalSelect\r\n                            // placeholder=\"Enter here\"\r\n                            options={categoryList}\r\n                            value={treatmentField.category}\r\n                            name=\"category\"\r\n                            onChange={this.handleChangeTreatment}\r\n                            className=\"customer-name p-0\"\r\n                        />\r\n                        </div>\r\n                        <div className='col-6'>\r\n                        Service\r\n                        <input\r\n                            // placeholder=\"Enter here\"\r\n                            // options={siteList}\r\n                            value={treatmentField.treatment}\r\n                            name=\"treatment\"\r\n                            onChange={this.handleSearch}\r\n                            className=\"search px-3 p-0\"\r\n                        />\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                       \r\n                        <div className=\"table-container table-responsive mt-3\">\r\n                        <TableWrapper\r\n                                    headerDetails={treatmentListHeader}\r\n                                    queryHandler={this.handlePagination}\r\n                                    pageMeta={meta}\r\n                                >\r\n                            {treatmentList.length > 0 ? treatmentList.map((item, index) => {\r\n                                return (\r\n                                    <tr className='w-100' onClick={() => this.handleSelectTreatment(item)} key={index}>\r\n                                       <td> <div className=\"d-flex align-items-center justify-content-center\">{item.Item_Class}</div></td>\r\n                                       <td> <div className=\"d-flex align-items-center justify-content-center\">{item.item_desc}</div></td>\r\n                                       <td> <div className=\"d-flex align-items-center justify-content-center\">{item.add_duration}</div></td>\r\n                                       <td> <div className=\"d-flex align-items-center justify-content-center\">{item.item_price}</div></td>\r\n                                    </tr>\r\n                                )\r\n                            }) : <td><div className=\"d-flex align-items-center justify-content-center\">No data available</div></td>}\r\n                        </TableWrapper>\r\n                        </div>\r\n                        \r\n                        <div className=\"row text-center justify-center w-100\">\r\n\r\n                            <NormalButton\r\n                                buttonClass={\"col-3\"}\r\n                                mainbg={true}\r\n                                className=\"col-12 ml-4 fs-15 \"\r\n                                label=\"Cancel\"\r\n                                onClick={this.handleDialog}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </NormalModal>\r\n                <div className='col-12'>\r\n                {\r\n                    isTreatementModal ? <TreatmentPackage isTreatementModal={isTreatementModal} handleTreatementmodal = {this.handleTreatementmodal}  handleSelectPackage={this.handleSelectPackage} customerId = {customerId} /> : ''\r\n                    \r\n                }\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    customerDetail: state.appointment.customerDetail,\r\n    appointmentDetail: state.appointment.appointmentDetail,\r\n    selectedTreatmentList: state.appointment.selectedTreatmentList,\r\n    basicApptDetail: state.appointment.basicApptDetail,\r\n    appointmentCustomerDetail: state.appointment.appointmentCustomerDetail,\r\n    appointmentTreatmentList: state.appointment.appointmentTreatmentList,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        updateForm,\r\n        getSelectedTreatmentList,\r\n        getCommonApi,\r\n        commonCreateApi\r\n    }, dispatch)\r\n}\r\n\r\nexport const SelectTreatment = connect(mapStateToProps, mapDispatchToProps)(SelectTreatmentClass)"]},"metadata":{},"sourceType":"module"}