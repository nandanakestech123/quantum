{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\cart\\\\treatmentDone.js\";\nimport React, { Component } from 'react';\nimport './style.scss';\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper } from 'component/common';\nimport { dateFormat } from 'service/helperFunctions';\nimport _ from 'lodash';\nimport { history } from 'helpers';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\";\nimport SimpleReactValidator from 'simple-react-validator'; // import { Treatment, Payment, EditCart } from './cart/index';\n\nimport service from 'assets/images/make-up-brush.png'; // import Discount from './cart/discount';\n\nexport class TreatmentDoneClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      currentIndex: -1,\n      tstaffList: [],\n      cartData: {},\n      postFields: {\n        work_point: \"\",\n        times: \"\",\n        helper_id: \"\"\n      },\n      updateFields: {\n        Room: null,\n        Source: null,\n        new_remark: null\n      },\n      formFields: {\n        cartid: \"\",\n        Item: \"\",\n        Price: \"\",\n        Room: null,\n        Source: null,\n        add_duration: \"\",\n        new_remark: null,\n        times: null,\n        work_point: \"\"\n      },\n      outletList: [],\n      headerDetails: [{\n        label: 'Employee name',\n        sortKey: false,\n        width: \"130px\"\n      }, {\n        label: 'WP1',\n        width: \"42px\"\n      }, {\n        label: 'St. time',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'End time',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Duration',\n        sortKey: false,\n        width: \"55px\"\n      }],\n      customerOption: [],\n      // cartData: {},\n      roomList: [],\n      sourceList: [],\n      staffList: [],\n      duration: [],\n      showPostError: false,\n      showUpdateError: false,\n      page: 1,\n      startDuration: [],\n      hideNotNeededControls: \"false\"\n    };\n\n    this.componentWillMount = () => {\n      // this.getCart();\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n      let {\n        basicApptDetail\n      } = this.props;\n\n      if (basicApptDetail.custId) {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"custId\"] = basicApptDetail.custId;\n        formFields[\"custName\"] = basicApptDetail.custName;\n        this.setState({\n          formFields\n        });\n      }\n\n      let {\n        roomList,\n        sourceList,\n        staffList,\n        cartData,\n        duration,\n        startDuration,\n        tstaffList\n      } = this.state;\n      this.getStaffList();\n      this.props.getCommonApi('room/').then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        for (let value of data) {\n          roomList.push({\n            value: value.id,\n            label: value.displayname\n          });\n        }\n\n        this.setState({\n          roomList\n        });\n      });\n      this.props.getCommonApi(`source/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            sourceList.push({\n              value: value.id,\n              label: value.source_desc\n            });\n          }\n\n          this.setState({\n            sourceList\n          });\n        }\n      });\n      this.getCart();\n      const durationLocal = ['00:10', '00:20', '00:30', '00:40', '00:50', '01:00', '01:10', '01:20', '01:30', '01:40', '01:50', '02:00', '02:10', '02:20', '02:30', '02:40', '02:50', '03:00', '03:10', '03:20', '03:30', '03:40', '03:50', '04:00', '04:10', '04:20', '04:30', '04:40', '04:50', '05:00', '05:10', '05:20', '05:30', '05:40', '05:50', '06:00', '06:10', '06:20', '06:30', '06:40', '06:50', '07:00', '07:10', '07:20', '07:30', '07:40', '07:50', '08:00', '08:10', '08:20', '08:30', '08:40', '08:50', '09:00', '09:10', '09:20', '09:30', '09:40', '09:50', '10:00', '10:10', '10:20', '10:30', '10:40', '10:50', '11:00', '11:10', '11:20', '11:30', '11:40', '11:50', '12:00', '12:10', '12:20', '12:30', '12:40', '12:50', '13:00', '13:10', '13:20', '13:30', '13:40', '13:50', '14:00', '14:10', '14:20', '14:30', '14:40', '14:50', '15:00', '15:10', '15:20', '15:30', '15:40', '15:50', '16:00', '16:10', '16:20', '16:30', '16:40', '16:50', '17:00', '17:10', '17:20', '17:30', '17:40', '17:50', '18:00', '18:10', '18:20', '18:30', '18:40', '18:50', '19:00', '19:10', '19:20', '19:30', '19:40', '19:50', '20:00', '20:10', '20:20', '20:30', '20:40', '20:50', '21:00', '21:10', '21:20', '21:30', '21:40', '21:50', '22:00', '22:10', '22:20', '22:30', '22:40', '22:50', '23:00', '23:10', '23:20', '23:30', '23:40', '23:50'];\n      const startDurationLocal = ['08:00', '08:10', '08:20', '08:30', '08:40', '08:50', '09:00', '09:10', '09:20', '09:30', '09:40', '09:50', '10:00', '10:10', '10:20', '10:30', '10:40', '10:50', '11:00', '11:10', '11:20', '11:30', '11:40', '11:50', '12:00', '12:10', '12:20', '12:30', '12:40', '12:50', '13:00', '13:10', '13:20', '13:30', '13:40', '13:50', '14:00', '14:10', '14:20', '14:30', '14:40', '14:50', '15:00', '15:10', '15:20', '15:30', '15:40', '15:50', '16:00', '16:10', '16:20', '16:30', '16:40', '16:50', '17:00', '17:10', '17:20', '17:30', '17:40', '17:50', '18:00', '18:10', '18:20', '18:30', '18:40', '18:50', '19:00', '19:10', '19:20', '19:30', '19:40', '19:50', '20:00', '20:10', '20:20', '20:30', '20:40', '20:50', '21:00', '21:10', '21:20', '21:30', '21:40', '21:50', '22:00', '22:10', '22:20', '22:30', '22:40', '22:50', '23:00'];\n      /*this.props.getCommonApi(`treatment/Duration/`).then((key) => {\r\n          let { status, data } = key;\r\n          if (status === 200) {\r\n              for (let value of data) {\r\n                  duration.push({ value: value, label: value })\r\n              }\r\n              this.setState({ duration })\r\n          }\r\n      })\r\n      */\n\n      for (let value of durationLocal) {\n        duration.push({\n          value: value,\n          label: value\n        });\n      }\n\n      for (let value of startDurationLocal) {\n        startDuration.push({\n          value: value,\n          label: value\n        });\n      }\n\n      this.setState({\n        duration,\n        startDuration\n      });\n    };\n\n    this.getCart = () => {\n      let {\n        roomList,\n        sourceList,\n        staffList,\n        cartData,\n        duration,\n        tstaffList\n      } = this.state;\n      this.props.getCommonApi(`tmpitemhelper/?cartid=${this.props.cartId}`).then(key => {\n        // let { status, data } = key;\n        // if (status === 200) {\n        cartData = key;\n        tstaffList = key.data;\n        this.setState({\n          cartData,\n          tstaffList\n        });\n        this.getDataFromRes(key); // }\n      });\n    };\n\n    this.getStaffList = () => {\n      let {\n        staffList\n      } = this.state;\n      this.props.getCommonApi(`empcartlist/?sales_staff=0&page=${this.state.page}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          staffList = data.dataList;\n          this.setState({\n            staffList\n          });\n        }\n      });\n    };\n\n    this.getDataFromRes = data => {\n      let {\n        formFields,\n        cartData,\n        updateFields,\n        postFields\n      } = this.state;\n      formFields['Item'] = data.value.Item;\n      formFields['Price'] = data.value.Price;\n      formFields['Room'] = data.value.Room;\n      updateFields['Room'] = data.value.Room;\n      formFields['Source'] = data.value.Source;\n      updateFields['Source'] = data.value.Source;\n      formFields['add_duration'] = data.value.add_duration;\n      formFields['new_remark'] = data.value.new_remark;\n      updateFields['new_remark'] = data.value.new_remark;\n      postFields['times'] = data.value.times;\n      postFields['work_point'] = data.value.work_point;\n      this.setState({\n        formFields,\n        updateFields,\n        postFields\n      });\n    };\n\n    this.getDateTime = data => {\n      let date = new Date(data);\n      date = String(date).split(\" \");\n      let date1 = date[2] + \"th \" + date[1] + \", \" + date[3];\n      let time = date[4].split(\":\");\n      let time1 = String(Number(time[0]) > 12 ? Number(time[0]) - 12 : time[0]) + \":\" + time[1] + (Number(time[0]) > 12 ? \"PM\" : \"AM\");\n      return time1 + \", \" + date1;\n    };\n\n    this.handleSubmit = id => {\n      //Validation\n      let {\n        tstaffList,\n        formFields,\n        cartData,\n        postFields\n      } = this.state;\n      let xTotalWp1Amount = 0;\n\n      for (var i = 0; i < this.state.tstaffList.length; i++) {\n        xTotalWp1Amount += parseFloat(this.state.tstaffList[i].wp1);\n      }\n\n      if (parseFloat(xTotalWp1Amount) == parseFloat(postFields.work_point)) {} else {\n        alert(\"User Entry should not greater or lesser than Work point\");\n        return;\n      }\n\n      this.props.getCommonApi(`tmpitemhelper/confirm/?cartid=${this.props.cartId}`).then(async key => {\n        if (key.status === 200) {\n          this.props.handleModal();\n        }\n      });\n    };\n\n    this.handleDialog = () => {};\n\n    this.handleSearch = event => {\n      event.persist();\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          this.props.getCommonApi(`custappt/?search=${searchString}`).then(key => {\n            let {\n              status,\n              data\n            } = key;\n\n            if (status === 200) {\n              // for (let value of data) {\n              //     customerList.push({ value: value.id, label: value.emp_name })\n              // }\n              this.setState({\n                customerOption: data\n              });\n            }\n          });\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleSelectCustomer = async data => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"custId\"] = data.id;\n      formFields[\"custName\"] = data.cust_name;\n      this.setState({\n        formFields,\n        isOpenCustomer: false,\n        customerOption: []\n      });\n      await this.props.updateForm('basicApptDetail', formFields);\n      console.log(this.props.basicApptDetail, \"sdfsadfasdf\");\n    };\n\n    this.handleCartCreated = () => {};\n\n    this.handleCheckout = () => {\n      let {\n        isOpenPayment\n      } = this.state;\n      isOpenPayment = true;\n      this.setState({\n        isOpenPayment\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      }); // this.props.updateForm('customerDetail', formFields)\n      // await this.props.updateForm('appointmentCustomerDetail', formFields)\n    };\n\n    this.handlePostChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        postFields\n      } = this.state;\n      postFields[name] = value;\n      await this.setState({\n        postFields\n      });\n    };\n\n    this.handleUpdateChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        updateFields\n      } = this.state;\n      updateFields[name] = value;\n      await this.setState({\n        updateFields\n      });\n      let event = {\n        target: {\n          value: value,\n          name: name\n        }\n      }; // this.handleUpdatestaff(event);\n    };\n\n    this.handleNext = async () => {\n      let {\n        page\n      } = this.state;\n      page = page + 1;\n      await this.setState({\n        page\n      });\n\n      if (page > 0) {\n        this.getStaffList();\n      }\n    };\n\n    this.handleBack = async () => {\n      let {\n        page\n      } = this.state;\n      page = page - 1;\n      await this.setState({\n        page\n      });\n\n      if (page > 0) {\n        this.getStaffList();\n      }\n    };\n\n    this.handleAddstaff = item => {\n      let {\n        tstaffList,\n        formFields,\n        cartData,\n        postFields\n      } = this.state;\n      let data = {\n        helper_id: item.id\n      };\n\n      if (postFields.work_point && postFields.times) {\n        this.props.commonCreateApi(`tmpitemhelper/?cartid=${this.props.cartId}&workcommpoints=${postFields.work_point}&times=${postFields.times}`, data).then(() => {\n          this.getCart();\n        });\n      } else {\n        this.setState({\n          showPostError: true\n        });\n      }\n    };\n\n    this.handleUpdatestaff = async (event, item, index) => {\n      let {\n        tstaffList,\n        formFields,\n        cartData,\n        updateFields,\n        postFields\n      } = this.state;\n      let workpoint = parseFloat(postFields.work_point);\n      let userEnteredValue = parseFloat(event.target.value);\n\n      if (userEnteredValue > workpoint) {\n        return;\n      }\n\n      tstaffList[index][event.target.name] = event.target.value;\n      this.setState({\n        tstaffList\n      });\n      let data = {};\n\n      if (event.target.name === \"appt_fr_time\") {\n        data = {\n          appt_fr_time: event.target.value,\n          add_duration: formFields['add_duration'],\n          wp1: item.wp1\n        };\n      }\n\n      if (event.target.name === \"add_duration\") {\n        data = {\n          appt_fr_time: item.appt_fr_time,\n          add_duration: event.target.value,\n          wp1: item.wp1\n        };\n      }\n\n      if (event.target.name === \"wp1\") {\n        data = {\n          appt_fr_time: formFields['appt_fr_time'],\n          add_duration: formFields['add_duration'],\n          wp1: item.wp1\n        };\n      } // if (updateFields.Source && updateFields.Room) {\n\n\n      this.props.commonPatchApi(`tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`, data).then(() => {\n        this.getCart();\n      }); // } else {\n      //     this.setState({ showUpdateError: true })\n      // }\n    };\n\n    this.handleClearLine = () => {\n      this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=0&cartid=${this.props.cartId}`).then(() => {\n        this.getCart();\n      });\n    };\n\n    this.handleClearAll = () => {\n      this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=1&cartid=${this.props.cartId}`).then(() => {\n        let {\n          formFields,\n          postFields\n        } = this.state;\n        formFields[\"work_point\"] = \"\";\n        postFields['times'] = \"\";\n        this.setState({\n          formFields,\n          postFields\n        });\n        this.getCart();\n      });\n    };\n\n    this.handleChangeInput = async (event, item, index) => {\n      let tstaffList = [];\n      tstaffList = this.state.tstaffList;\n      tstaffList[index].wp1 = event.target.value; // update state\n\n      this.setState({\n        tstaffList\n      }, () => {\n        this.handleUpdatestaff(event, item, index);\n      });\n    };\n\n    this.handleSelect_Staff = async staff => {\n      let {\n        tstaffList,\n        formFields,\n        cartData,\n        postFields\n      } = this.state;\n      let data = {\n        helper_id: staff.id\n      };\n\n      if (postFields.work_point && postFields.times) {\n        this.props.commonCreateApi(`tmpitemhelper/?cartid=${this.props.cartId}&workcommpoints=${postFields.work_point}&times=${postFields.times}`, data).then(() => {\n          this.getCart1();\n        });\n      } else {\n        this.setState({\n          showPostError: true\n        });\n      }\n    };\n\n    this.getCart1 = () => {\n      let {\n        roomList,\n        sourceList,\n        staffList,\n        cartData,\n        duration,\n        tstaffList\n      } = this.state;\n      this.props.getCommonApi(`tmpitemhelper/?cartid=${this.props.cartId}`).then(key => {\n        // let { status, data } = key;\n        // if (status === 200) {\n        cartData = key;\n        tstaffList = key.data;\n        this.setState({\n          cartData,\n          tstaffList\n        }, () => {\n          this.checkFirstArrayAndUpdateTiming();\n        });\n        this.getDataFromRes(key); // }\n      });\n    };\n\n    this.checkFirstArrayAndUpdateTiming = () => {\n      let {\n        tstaffList,\n        cartData,\n        updateFields\n      } = this.state;\n      var item = tstaffList[0];\n      let {\n        Room_Codeid,\n        Source_Codeid,\n        new_remark\n      } = updateFields;\n      var today = new Date(),\n          time = today.getHours() + ':' + today.getMinutes();\n      let data = {};\n      data = {\n        appt_fr_time: this.roundTime(time, 10),\n        add_duration: cartData.value.add_duration,\n        wp1: item.wp1\n      };\n      this.props.commonPatchApi(`tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`, data).then(() => {\n        this.getCart();\n      });\n    };\n\n    this.roundTime = (time, minutesToRound) => {\n      let [hours, minutes] = time.split(':');\n      hours = parseInt(hours);\n      minutes = parseInt(minutes); // Convert hours and minutes to time in minutes\n\n      time = hours * 60 + minutes;\n      let rounded = Math.round(time / minutesToRound) * minutesToRound;\n      let rHr = '' + Math.floor(rounded / 60);\n      let rMin = '' + rounded % 60;\n      return rHr.padStart(2, '0') + ':' + rMin.padStart(2, '0');\n    };\n  }\n\n  render() {\n    let {\n      staffList = [],\n      tstaffList = [],\n      roomList,\n      sourceList,\n      formFields,\n      headerDetails,\n      cartData,\n      postFields,\n      updateFields,\n      duration,\n      startDuration\n    } = this.state;\n    let {\n      value = {},\n      data = {}\n    } = cartData;\n    let {\n      Item,\n      Price,\n      work_point\n    } = value;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row new-cart treatment-done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 font-700 mb-3 title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 21\n      }\n    }, \"Treatment Done\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 21\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 21\n      }\n    }, Item), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 21\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 21\n      }\n    }, Price), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 21\n      }\n    }, \"Work Point\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: postFields.work_point,\n      name: \"work_point\",\n      onChange: this.handlePostChange,\n      className: `customer-name ${!postFields.work_point ? \"required\" : \"\"}`,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 21\n      }\n    }, \"Sessions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: postFields.times,\n      name: \"times\",\n      onChange: this.handlePostChange,\n      className: `customer-name ${!postFields.times ? \"required\" : \"\"}`,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `col-12 cart-item emp-image`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `staff-listing d-flex emp-list`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forward-button cursor-pointer\",\n      onClick: this.handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"6\",\n      height: \"10\",\n      viewBox: \"0 0 6 10\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M5 0.5L1 5L5 9.5\",\n      stroke: \"#888888\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 37\n      }\n    }))), staffList.length > 0 ? staffList.map(staff => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mx-1 staff-list cursor-pointer emp\",\n        key: staff.id,\n        onClick: () => this.handleSelect_Staff(staff),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img\",\n        src: staff.emp_pic,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 41\n        }\n      }, staff.display_name));\n    }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back-button cursor-pointer\",\n      onClick: this.handleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"5\",\n      height: \"10\",\n      viewBox: \"0 0 5 10\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M0.5 9.5L4.5 5L0.5 0.5\",\n      stroke: \"#888888\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `col-12 cart-item`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `item-list`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination // pageMeta={pageMeta}\n      // isEmpty={tstaffList.length === 0 ? true:false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 29\n      }\n    }, tstaffList.length > 0 ? tstaffList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"position-relative status-type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: ``,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 91\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center  fs-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 119\n        }\n      }, item.helper_name)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        onChange: event => this.handleUpdatestaff(event, item, index),\n        name: \"wp1\",\n        type: \"number\",\n        min: \"0\",\n        max: postFields.work_point,\n        value: item.wp1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 49\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 45\n        }\n      }, this.state.hideNotNeededControls == \"true\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: `${tstaffList.length > 0 ? \"d-flex\" : \"display-none\"} align-items-center justify-content-center`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n      , {\n        options: startDuration,\n        value: item.appt_fr_time,\n        name: \"appt_fr_time\",\n        onChange: event => this.handleUpdatestaff(event, item, index),\n        className: \"customer-name py-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 57\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 45\n        }\n      }, this.state.hideNotNeededControls == \"true\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 49\n        }\n      }, item.appt_to_time)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 45\n        }\n      }, tstaffList.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: `${tstaffList.length > 0 ? \"d-flex\" : \"display-none\"} align-items-center justify-content-center`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 49\n        }\n      }, this.state.hideNotNeededControls == \"true\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n      , {\n        options: duration,\n        value: item.add_duration,\n        name: \"add_duration\",\n        onChange: event => this.handleUpdatestaff(event, item, index),\n        className: \"customer-name p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 57\n        }\n      }))) : \"\"));\n    }) : \"\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 17\n      }\n    }, this.state.hideNotNeededControls == \"true\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 21\n      }\n    }, \"Room\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: roomList,\n      value: updateFields.Room,\n      name: \"Room\",\n      onChange: this.handleUpdateChange,\n      className: \"customer-name py-0\" // disabled={formFields.Room}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 21\n      }\n    }, \"Source\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: sourceList,\n      value: updateFields.Source,\n      name: \"Source\",\n      onChange: this.handleUpdateChange,\n      className: \"customer-name py-0\" // disabled={formFields.Source}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 21\n      }\n    }, \"New Remark\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput // placeholder=\"Enter here\"\n    // options={siteList}\n    , {\n      value: updateFields.new_remark,\n      name: \"new_remark\",\n      onChange: this.handleUpdateChange,\n      className: \"customer-name\" // disabled={formFields.new_remark}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pt-4 action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"fs-15 clear-line\",\n      label: \"Clear Line\",\n      outline: false,\n      onClick: this.handleClearLine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"fs-15 clear-all\",\n      label: \"Clear All\",\n      outline: false,\n      onClick: this.handleClearAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \" fs-15 confirm\",\n      label: \"Confirm\",\n      outline: false,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonCreateApi,\n    commonPatchApi,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const TreatmentDone = connect(mapStateToProps, mapDispatchToProps)(TreatmentDoneClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Cart/cart/treatmentDone.js"],"names":["React","Component","NormalButton","NormalInput","NormalSelect","InputSearch","NormalModal","TableWrapper","dateFormat","_","history","connect","bindActionCreators","getCommonApi","updateForm","commonCreateApi","commonDeleteApi","commonPatchApi","SimpleReactValidator","service","TreatmentDoneClass","state","isOpen","currentIndex","tstaffList","cartData","postFields","work_point","times","helper_id","updateFields","Room","Source","new_remark","formFields","cartid","Item","Price","add_duration","outletList","headerDetails","label","sortKey","width","customerOption","roomList","sourceList","staffList","duration","showPostError","showUpdateError","page","startDuration","hideNotNeededControls","componentWillMount","validator","element","message","autoForceUpdate","basicApptDetail","props","custId","custName","setState","getStaffList","then","key","status","data","value","push","id","displayname","source_desc","getCart","durationLocal","startDurationLocal","cartId","getDataFromRes","dataList","getDateTime","date","Date","String","split","date1","time","time1","Number","handleSubmit","xTotalWp1Amount","i","length","parseFloat","wp1","alert","handleModal","handleDialog","handleSearch","event","persist","debouncedFn","debounce","searchString","target","handleSelectCustomer","cust_name","isOpenCustomer","console","log","handleCartCreated","handleCheckout","isOpenPayment","handleChange","name","handlePostChange","handleUpdateChange","handleNext","handleBack","handleAddstaff","item","handleUpdatestaff","index","workpoint","userEnteredValue","appt_fr_time","handleClearLine","handleClearAll","handleChangeInput","handleSelect_Staff","staff","getCart1","checkFirstArrayAndUpdateTiming","Room_Codeid","Source_Codeid","today","getHours","getMinutes","roundTime","minutesToRound","hours","minutes","parseInt","rounded","Math","round","rHr","floor","rMin","padStart","render","map","emp_pic","display_name","handlePagination","helper_name","appt_to_time","mapStateToProps","selected_cstomer","common","appointment","mapDispatchToProps","dispatch","TreatmentDone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper } from 'component/common';\r\nimport { dateFormat } from 'service/helperFunctions';\r\nimport _ from 'lodash';\r\nimport { history } from 'helpers';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\"\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n// import { Treatment, Payment, EditCart } from './cart/index';\r\nimport service from 'assets/images/make-up-brush.png';\r\n// import Discount from './cart/discount';\r\n\r\n\r\nexport class TreatmentDoneClass extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        currentIndex: -1,\r\n        tstaffList: [],\r\n        cartData: {},\r\n        postFields: {\r\n            work_point: \"\",\r\n            times: \"\",\r\n            helper_id: \"\"\r\n        },\r\n        updateFields: {\r\n            Room: null,\r\n            Source: null,\r\n            new_remark: null,\r\n        },\r\n        formFields: {\r\n            cartid: \"\",\r\n            Item: \"\",\r\n            Price: \"\",\r\n            Room: null,\r\n            Source: null,\r\n            add_duration: \"\",\r\n            new_remark: null,\r\n            times: null,\r\n            work_point: \"\"\r\n        },\r\n        outletList: [],\r\n        headerDetails: [\r\n            { label: 'Employee name', sortKey: false, width: \"130px\" },\r\n            { label: 'WP1', width: \"42px\" },\r\n            { label: 'St. time', sortKey: false, width: \"55px\" },\r\n            { label: 'End time', sortKey: false, width: \"55px\" },\r\n            { label: 'Duration', sortKey: false, width: \"55px\" },\r\n        ],\r\n        customerOption: [],\r\n        // cartData: {},\r\n        roomList: [],\r\n        sourceList: [],\r\n        staffList: [],\r\n        duration: [],\r\n        showPostError: false,\r\n        showUpdateError: false,\r\n        page:1,\r\n        startDuration:[],\r\n        hideNotNeededControls:\"false\",\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        // this.getCart();\r\n        this.validator = new SimpleReactValidator({\r\n            element: message => <span className=\"error-message text-danger validNo fs14\">{message}</span>,\r\n            autoForceUpdate: this,\r\n        });\r\n        let { basicApptDetail } = this.props;\r\n        if (basicApptDetail.custId) {\r\n            let { formFields } = this.state;\r\n            formFields[\"custId\"] = basicApptDetail.custId;\r\n            formFields[\"custName\"] = basicApptDetail.custName;\r\n            this.setState({ formFields });\r\n        }\r\n        let { roomList, sourceList, staffList, cartData, duration, startDuration,tstaffList } = this.state;\r\n        this.getStaffList();\r\n        this.props.getCommonApi('room/').then((key) => {\r\n            let { status, data } = key;\r\n            for (let value of data) {\r\n                roomList.push({ value: value.id, label: value.displayname })\r\n            }\r\n            this.setState({ roomList })\r\n        })\r\n        this.props.getCommonApi(`source/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    sourceList.push({ value: value.id, label: value.source_desc })\r\n                }\r\n                this.setState({ sourceList })\r\n            }\r\n        })\r\n       \r\n       this.getCart();\r\n\r\n       const durationLocal=[\r\n        '00:10',\r\n        '00:20',\r\n        '00:30',\r\n        '00:40',\r\n        '00:50',\r\n        '01:00',\r\n        '01:10',\r\n        '01:20',\r\n        '01:30',\r\n        '01:40',\r\n        '01:50',\r\n        '02:00',\r\n        '02:10',\r\n        '02:20',\r\n        '02:30',\r\n        '02:40',\r\n        '02:50',\r\n        '03:00',\r\n        '03:10',\r\n        '03:20',\r\n        '03:30',\r\n        '03:40',\r\n        '03:50',\r\n        '04:00',\r\n        '04:10',\r\n        '04:20',\r\n        '04:30',\r\n        '04:40',\r\n        '04:50',\r\n        '05:00',\r\n        '05:10',\r\n        '05:20',\r\n        '05:30',\r\n        '05:40',\r\n        '05:50',\r\n        '06:00',\r\n        '06:10',\r\n        '06:20',\r\n        '06:30',\r\n        '06:40',\r\n        '06:50',\r\n        '07:00',\r\n        '07:10',\r\n        '07:20',\r\n        '07:30',\r\n        '07:40',\r\n        '07:50',\r\n        '08:00',\r\n        '08:10',\r\n        '08:20',\r\n        '08:30',\r\n        '08:40',\r\n        '08:50',\r\n        '09:00',\r\n        '09:10',\r\n        '09:20',\r\n        '09:30',\r\n        '09:40',\r\n        '09:50',\r\n        '10:00',\r\n        '10:10',\r\n        '10:20',\r\n        '10:30',\r\n        '10:40',\r\n        '10:50',\r\n        '11:00',\r\n        '11:10',\r\n        '11:20',\r\n        '11:30',\r\n        '11:40',\r\n        '11:50',\r\n        '12:00',\r\n        '12:10',\r\n        '12:20',\r\n        '12:30',\r\n        '12:40',\r\n        '12:50',\r\n        '13:00',\r\n        '13:10',\r\n        '13:20',\r\n        '13:30',\r\n        '13:40',\r\n        '13:50',\r\n        '14:00',\r\n        '14:10',\r\n        '14:20',\r\n        '14:30',\r\n        '14:40',\r\n        '14:50',\r\n        '15:00',\r\n        '15:10',\r\n        '15:20',\r\n        '15:30',\r\n        '15:40',\r\n        '15:50',\r\n        '16:00',\r\n        '16:10',\r\n        '16:20',\r\n        '16:30',\r\n        '16:40',\r\n        '16:50',\r\n        '17:00',\r\n        '17:10',\r\n        '17:20',\r\n        '17:30',\r\n        '17:40',\r\n        '17:50',\r\n        '18:00',\r\n        '18:10',\r\n        '18:20',\r\n        '18:30',\r\n        '18:40',\r\n        '18:50',\r\n        '19:00',\r\n        '19:10',\r\n        '19:20',\r\n        '19:30',\r\n        '19:40',\r\n        '19:50',\r\n        '20:00',\r\n        '20:10',\r\n        '20:20',\r\n        '20:30',\r\n        '20:40',\r\n        '20:50',\r\n        '21:00',\r\n        '21:10',\r\n        '21:20',\r\n        '21:30',\r\n        '21:40',\r\n        '21:50',\r\n        '22:00',\r\n        '22:10',\r\n        '22:20',\r\n        '22:30',\r\n        '22:40',\r\n        '22:50',\r\n        '23:00',\r\n        '23:10',\r\n        '23:20',\r\n        '23:30',\r\n        '23:40',\r\n        '23:50']\r\n        const startDurationLocal=[\r\n            '08:00',\r\n            '08:10',\r\n            '08:20',\r\n            '08:30',\r\n            '08:40',\r\n            '08:50',\r\n            '09:00',\r\n            '09:10',\r\n            '09:20',\r\n            '09:30',\r\n            '09:40',\r\n            '09:50',\r\n            '10:00',\r\n            '10:10',\r\n            '10:20',\r\n            '10:30',\r\n            '10:40',\r\n            '10:50',\r\n            '11:00',\r\n            '11:10',\r\n            '11:20',\r\n            '11:30',\r\n            '11:40',\r\n            '11:50',\r\n            '12:00',\r\n            '12:10',\r\n            '12:20',\r\n            '12:30',\r\n            '12:40',\r\n            '12:50',\r\n            '13:00',\r\n            '13:10',\r\n            '13:20',\r\n            '13:30',\r\n            '13:40',\r\n            '13:50',\r\n            '14:00',\r\n            '14:10',\r\n            '14:20',\r\n            '14:30',\r\n            '14:40',\r\n            '14:50',\r\n            '15:00',\r\n            '15:10',\r\n            '15:20',\r\n            '15:30',\r\n            '15:40',\r\n            '15:50',\r\n            '16:00',\r\n            '16:10',\r\n            '16:20',\r\n            '16:30',\r\n            '16:40',\r\n            '16:50',\r\n            '17:00',\r\n            '17:10',\r\n            '17:20',\r\n            '17:30',\r\n            '17:40',\r\n            '17:50',\r\n            '18:00',\r\n            '18:10',\r\n            '18:20',\r\n            '18:30',\r\n            '18:40',\r\n            '18:50',\r\n            '19:00',\r\n            '19:10',\r\n            '19:20',\r\n            '19:30',\r\n            '19:40',\r\n            '19:50',\r\n            '20:00',\r\n            '20:10',\r\n            '20:20',\r\n            '20:30',\r\n            '20:40',\r\n            '20:50',\r\n            '21:00',\r\n            '21:10',\r\n            '21:20',\r\n            '21:30',\r\n            '21:40',\r\n            '21:50',\r\n            '22:00',\r\n            '22:10',\r\n            '22:20',\r\n            '22:30',\r\n            '22:40',\r\n            '22:50',\r\n            '23:00']\r\n\r\n        /*this.props.getCommonApi(`treatment/Duration/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    duration.push({ value: value, label: value })\r\n                }\r\n                this.setState({ duration })\r\n            }\r\n        })\r\n        */\r\n\r\n         for (let value of durationLocal)\r\n         {\r\n          duration.push({ value: value, label: value })\r\n         }\r\n         for (let value of startDurationLocal) {\r\n          startDuration.push({ value: value, label: value })\r\n         }\r\n        this.setState({ duration,startDuration })\r\n    }\r\n\r\n    getCart = () => {\r\n        let { roomList, sourceList, staffList, cartData, duration, tstaffList } = this.state;\r\n        this.props.getCommonApi(`tmpitemhelper/?cartid=${this.props.cartId}`).then((key) => {\r\n            // let { status, data } = key;\r\n            // if (status === 200) {\r\n            cartData = key;\r\n            tstaffList = key.data;\r\n            this.setState({ cartData, tstaffList })\r\n            this.getDataFromRes(key)\r\n            // }\r\n        })\r\n    }\r\n    getStaffList = () => {\r\n        let { staffList } = this.state;\r\n        this.props.getCommonApi(`empcartlist/?sales_staff=0&page=${this.state.page}`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                staffList = data.dataList;\r\n                this.setState({ staffList })\r\n            }\r\n        })\r\n    }\r\n    getDataFromRes = (data) => {\r\n        let { formFields, cartData, updateFields, postFields } = this.state;\r\n        formFields['Item'] = data.value.Item;\r\n        formFields['Price'] = data.value.Price;\r\n        formFields['Room'] = data.value.Room;\r\n        updateFields['Room'] = data.value.Room;\r\n        formFields['Source'] = data.value.Source;\r\n        updateFields['Source'] = data.value.Source;\r\n        formFields['add_duration'] = data.value.add_duration;\r\n        formFields['new_remark'] = data.value.new_remark;\r\n        updateFields['new_remark'] = data.value.new_remark;\r\n        postFields['times'] = data.value.times;\r\n        postFields['work_point'] = data.value.work_point;\r\n        this.setState({\r\n            formFields,\r\n            updateFields,\r\n            postFields\r\n        })\r\n    }\r\n\r\n\r\n    getDateTime = (data) => {\r\n        let date = new Date(data)\r\n        date = String(date).split(\" \")\r\n        let date1 = date[2] + \"th \" + date[1] + \", \" + date[3]\r\n        let time = date[4].split(\":\")\r\n        let time1 = String(Number(time[0]) > 12 ? (Number(time[0]) - 12) : time[0]) + \":\" + time[1] + (Number(time[0]) > 12 ? \"PM\" : \"AM\")\r\n        return time1 + \", \" + date1\r\n    }\r\n\r\n    handleSubmit = (id) => {\r\n        //Validation\r\n        let { tstaffList, formFields, cartData, postFields } = this.state;\r\n        let xTotalWp1Amount=0;\r\n        for (var i = 0; i < this.state.tstaffList.length; i++) {\r\n             xTotalWp1Amount+=parseFloat(this.state.tstaffList[i].wp1);\r\n        }     \r\n        if(parseFloat(xTotalWp1Amount)==parseFloat(postFields.work_point))   \r\n        {\r\n         \r\n        }\r\n        else{\r\n            alert (\"User Entry should not greater or lesser than Work point\");\r\n            return;\r\n        }\r\n\r\n        this.props.getCommonApi(`tmpitemhelper/confirm/?cartid=${this.props.cartId}`).then(async(key) => {\r\n            if(key.status === 200){\r\n                this.props.handleModal();\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDialog = () => {\r\n\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        event.persist();\r\n\r\n        if (!this.debouncedFn) {\r\n            this.debouncedFn = _.debounce(() => {\r\n                let searchString = event.target.value;\r\n                this.props.getCommonApi(`custappt/?search=${searchString}`).then((key) => {\r\n\r\n                    let { status, data } = key;\r\n                    if (status === 200) {\r\n                        // for (let value of data) {\r\n                        //     customerList.push({ value: value.id, label: value.emp_name })\r\n                        // }\r\n                        this.setState({ customerOption: data })\r\n                    }\r\n                })\r\n            }, 500);\r\n        }\r\n        this.debouncedFn();\r\n    }\r\n\r\n    handleSelectCustomer = async (data) => {\r\n        let { formFields } = this.state;\r\n        formFields[\"custId\"] = data.id;\r\n        formFields[\"custName\"] = data.cust_name;\r\n        this.setState({ formFields, isOpenCustomer: false, customerOption: [] });\r\n        await this.props.updateForm('basicApptDetail', formFields)\r\n        console.log(this.props.basicApptDetail, \"sdfsadfasdf\")\r\n    }\r\n\r\n    handleCartCreated = () => {\r\n\r\n    }\r\n\r\n    handleCheckout = () => {\r\n        let { isOpenPayment } = this.state;\r\n        isOpenPayment = true;\r\n        this.setState({ isOpenPayment });\r\n    }\r\n\r\n    handleChange = async ({ target: { value, name } }) => {\r\n        let { formFields } = this.state;\r\n        formFields[name] = value;\r\n        await this.setState({\r\n            formFields,\r\n        });\r\n        // this.props.updateForm('customerDetail', formFields)\r\n        // await this.props.updateForm('appointmentCustomerDetail', formFields)\r\n    };\r\n\r\n    handlePostChange = async({ target: { value, name } }) => {\r\n        let { postFields } = this.state;\r\n        postFields[name] = value;\r\n        await this.setState({\r\n            postFields,\r\n        });\r\n    }\r\n\r\n    handleUpdateChange = async({ target: { value, name } }) => {\r\n        let { updateFields } = this.state;\r\n        updateFields[name] = value;\r\n        await this.setState({\r\n            updateFields,\r\n        });\r\n        let event = {target: { value: value, name:name }}\r\n        // this.handleUpdatestaff(event);\r\n    }\r\n    \r\n    handleNext = async () => {\r\n        let { page } = this.state;\r\n        page = page + 1;\r\n        await this.setState({\r\n            page\r\n        })\r\n        if (page > 0) {\r\n            this.getStaffList();\r\n        }\r\n    }\r\n\r\n    handleBack = async () => {\r\n        let { page } = this.state;\r\n        page = page - 1;\r\n        await this.setState({\r\n            page\r\n        })\r\n        if (page > 0) {\r\n            this.getStaffList();\r\n        }\r\n    }\r\n\r\n    handleAddstaff = (item) => {\r\n        let { tstaffList, formFields, cartData, postFields } = this.state;\r\n        let data = {\r\n            helper_id: item.id\r\n        }\r\n        if (postFields.work_point && postFields.times) {\r\n            this.props.commonCreateApi(`tmpitemhelper/?cartid=${this.props.cartId}&workcommpoints=${postFields.work_point}&times=${postFields.times}`, data).then(() => {\r\n                this.getCart();\r\n            })\r\n        } else {\r\n            this.setState({ showPostError: true })\r\n        }\r\n    }\r\n\r\n    handleUpdatestaff = async(event, item, index) => {\r\n        let { tstaffList, formFields, cartData, updateFields,postFields } = this.state;\r\n        let workpoint=parseFloat(postFields.work_point);\r\n        let userEnteredValue=parseFloat(event.target.value);\r\n        if(userEnteredValue>workpoint)\r\n        {\r\n            return;\r\n        }\r\n        tstaffList[index][event.target.name] = event.target.value;\r\n        this.setState({\r\n            tstaffList\r\n        })\r\n        let data = {}\r\n        if(event.target.name===\"appt_fr_time\"){\r\n            data = {\r\n                appt_fr_time: event.target.value,\r\n                add_duration: formFields['add_duration'],\r\n                wp1:item.wp1,\r\n            }\r\n        }\r\n        if(event.target.name===\"add_duration\"){\r\n            data = {\r\n                appt_fr_time: item.appt_fr_time,\r\n                add_duration: event.target.value,\r\n                wp1:item.wp1,\r\n            }\r\n        }\r\n        if(event.target.name===\"wp1\")\r\n        {\r\n            data = {\r\n                appt_fr_time: formFields['appt_fr_time'],\r\n                add_duration: formFields['add_duration'],\r\n                wp1:item.wp1,\r\n            }  \r\n        }\r\n        \r\n        // if (updateFields.Source && updateFields.Room) {\r\n            this.props.commonPatchApi(`tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`, data).then(() => {\r\n                this.getCart();\r\n            })\r\n        // } else {\r\n        //     this.setState({ showUpdateError: true })\r\n        // }\r\n    }\r\n\r\n    handleClearLine = () => {\r\n        this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=0&cartid=${this.props.cartId}`).then(()=>{\r\n            this.getCart();\r\n        })\r\n    }\r\n\r\n    handleClearAll = () => {\r\n        this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=1&cartid=${this.props.cartId}`).then(()=>{\r\n            let { formFields, postFields } = this.state;\r\n            formFields[\"work_point\"] = \"\";\r\n            postFields['times'] = \"\";\r\n            this.setState({\r\n                formFields,\r\n                postFields\r\n            });\r\n            this.getCart();\r\n           \r\n        })\r\n    }\r\n    handleChangeInput = async(event, item, index) => {\r\n        let tstaffList=[];\r\n        tstaffList= this.state.tstaffList;\r\n        tstaffList[index].wp1 = event.target.value;\r\n        // update state\r\n        this.setState({\r\n            tstaffList,\r\n        }, () => {\r\n            this.handleUpdatestaff(event, item, index);\r\n        });\r\n       \r\n    };\r\n\r\n    handleSelect_Staff = async(staff) => {\r\n        let { tstaffList, formFields, cartData, postFields } = this.state;\r\n        let data = {\r\n            helper_id: staff.id\r\n        }\r\n        if (postFields.work_point && postFields.times) {\r\n            this.props.commonCreateApi(`tmpitemhelper/?cartid=${this.props.cartId}&workcommpoints=${postFields.work_point}&times=${postFields.times}`, data).then(() => {\r\n                this.getCart1();\r\n            })\r\n        } else {\r\n            this.setState({ showPostError: true })\r\n        }\r\n     \r\n\r\n    }\r\n    getCart1 = () => {\r\n        let { roomList, sourceList, staffList, cartData, duration, tstaffList } = this.state;\r\n        this.props.getCommonApi(`tmpitemhelper/?cartid=${this.props.cartId}`).then((key) => {\r\n            // let { status, data } = key;\r\n            // if (status === 200) {\r\n            cartData = key;\r\n            tstaffList = key.data;\r\n            this.setState({ cartData, tstaffList }, () => {\r\n                this.checkFirstArrayAndUpdateTiming();\r\n            });\r\n            this.getDataFromRes(key)\r\n            // }\r\n        })\r\n\r\n    }\r\n    checkFirstArrayAndUpdateTiming = () => {\r\n        \r\n\r\n        let { tstaffList, cartData, updateFields } = this.state;\r\n        var item =tstaffList[0];\r\n        let { Room_Codeid, Source_Codeid, new_remark } = updateFields;\r\n        var today = new Date(),\r\n\r\n        time = today.getHours() + ':' + today.getMinutes();\r\n        let data = {}\r\n\r\n            data = {\r\n                appt_fr_time: this.roundTime(time, 10),\r\n                add_duration: cartData.value.add_duration,\r\n                wp1: item.wp1\r\n            }\r\n  \r\n            this.props.commonPatchApi(`tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`, data).then(() => {\r\n                this.getCart();\r\n            })\r\n     \r\n    }\r\n    roundTime = (time, minutesToRound) => {\r\n\r\n        let [hours, minutes] = time.split(':');\r\n        hours = parseInt(hours);\r\n        minutes = parseInt(minutes);\r\n    \r\n        // Convert hours and minutes to time in minutes\r\n        time = (hours * 60) + minutes; \r\n    \r\n        let rounded = Math.round(time / minutesToRound) * minutesToRound;\r\n        let rHr = ''+Math.floor(rounded / 60)\r\n        let rMin = ''+ rounded % 60\r\n    \r\n        return rHr.padStart(2, '0')+':'+rMin.padStart(2, '0')\r\n    }\r\n    render() {\r\n        let { staffList = [], tstaffList = [], roomList, sourceList, formFields, headerDetails, cartData, postFields, updateFields, duration,startDuration } = this.state;\r\n        let { value = {}, data = {} } = cartData;\r\n        let { Item, Price, work_point } = value;\r\n        return (\r\n            <div className=\"row new-cart treatment-done\">\r\n                <div className=\"col-12\">\r\n                    <p className=\"fs-18 font-700 mb-3 title\">Treatment Done</p>\r\n                </div>\r\n                <div className=\"col-6 mb-2\">\r\n                    <label className=\"text-left text-black common-label-text \">\r\n                        Item\r\n                    </label>\r\n                    <div className=\"input-group mb-2\">\r\n                        {Item}\r\n                    </div>\r\n                    <label className=\"text-left text-black common-label-text \">\r\n                        Price\r\n                    </label>\r\n                    <div className=\"input-group mb-2\">\r\n                        {Price}\r\n                    </div>\r\n                    <label className=\"text-left text-black common-label-text \">\r\n                        Work Point\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <NormalInput\r\n                            value={postFields.work_point}\r\n                            name=\"work_point\"\r\n                            onChange={this.handlePostChange}\r\n                            className={`customer-name ${!postFields.work_point ? \"required\":\"\"}`}\r\n                            disabled={true}\r\n                        />\r\n                        \r\n                    </div>\r\n                    <label className=\"text-left text-black common-label-text \">\r\n                        Sessions\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <NormalInput\r\n                            value={postFields.times}\r\n                            name=\"times\"\r\n                            onChange={this.handlePostChange}\r\n                            className={`customer-name ${!postFields.times ? \"required\":\"\"}`}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6 mb-2\">\r\n\r\n                 \r\n                </div>\r\n                \r\n                <div className={`col-12 cart-item emp-image`}>\r\n                        <div className={`staff-listing d-flex emp-list`}>\r\n                            <div className=\"forward-button cursor-pointer\" onClick={this.handleBack}>\r\n                                <svg width=\"6\" height=\"10\" viewBox=\"0 0 6 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M5 0.5L1 5L5 9.5\" stroke=\"#888888\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg>\r\n                            </div>\r\n                            {\r\n                                staffList.length>0 ? staffList.map((staff) => {\r\n                                    return (\r\n                                    <div className=\"mx-1 staff-list cursor-pointer emp\" key={staff.id} onClick={() => this.handleSelect_Staff(staff)}>\r\n                                        <img className=\"img\" src={staff.emp_pic} alt=''/>\r\n                                        <p>{staff.display_name}</p>\r\n                                    </div>\r\n                                    )\r\n                                }):\"\"\r\n                            }\r\n\r\n                        <div className=\"back-button cursor-pointer\" onClick={this.handleNext}>\r\n                            <svg width=\"5\" height=\"10\" viewBox=\"0 0 5 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0.5 9.5L4.5 5L0.5 0.5\" stroke=\"#888888\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`col-12 cart-item`}>\r\n                    <div className={`item-list`}>\r\n\r\n                        <div className=\"table\">\r\n                            <TableWrapper\r\n                                headerDetails={headerDetails}\r\n                                queryHandler={this.handlePagination}\r\n                            // pageMeta={pageMeta}\r\n                            // isEmpty={tstaffList.length === 0 ? true:false}\r\n                            >\r\n                               \r\n                                {tstaffList.length > 0 ? tstaffList.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n\r\n                                            <td className=\"position-relative status-type\"><span className={``}></span><div className=\"d-flex align-items-center justify-content-center  fs-20\">{item.helper_name}</div></td>\r\n                                            <td><div className=\"d-flex align-items-center justify-content-center\">\r\n                                            <td >\r\n                                                <NormalInput \r\n                                                    onChange={(event)=>this.handleUpdatestaff(event, item, index)}\r\n                                                    name=\"wp1\"\r\n                                                    type=\"number\"\r\n                                                    min=\"0\"\r\n                                                    max={postFields.work_point}\r\n                                                    value={item.wp1} />\r\n                                            </td>\r\n                                                </div></td>\r\n\r\n                                            <td>\r\n                                            {this.state.hideNotNeededControls==\"true\" &&\r\n                                                <div className={`${tstaffList.length > 0 ? \"d-flex\":\"display-none\"} align-items-center justify-content-center`}>\r\n                                                    <div className=\"input-group\">\r\n                                                        <NormalSelect\r\n                                                            // placeholder=\"Enter here\"\r\n                                                            options={startDuration}\r\n                                                            value={item.appt_fr_time}\r\n                                                            name=\"appt_fr_time\"\r\n                                                            onChange={(event)=>this.handleUpdatestaff(event, item, index)}\r\n                                                            className=\"customer-name py-0\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                            </td>\r\n                                            <td>\r\n                                            {\r\n                                            this.state.hideNotNeededControls==\"true\" &&\r\n                                                <div className=\"d-flex align-items-center justify-content-center\">{item.appt_to_time}</div>\r\n                                            } \r\n                                            </td>\r\n                                          \r\n                                            <td>\r\n                                                                                                \r\n                                            { tstaffList.length > 0 ?\r\n                                                <div className={`${tstaffList.length > 0 ? \"d-flex\":\"display-none\"} align-items-center justify-content-center`}>\r\n                                                     {\r\n                                            this.state.hideNotNeededControls==\"true\" &&\r\n                                                    <div className=\"input-group\">\r\n                                                        <NormalSelect\r\n                                                            // placeholder=\"Enter here\"\r\n                                                            options={duration}\r\n                                                            value={item.add_duration}\r\n                                                            name=\"add_duration\"\r\n                                                            onChange={(event)=>this.handleUpdatestaff(event, item, index)}\r\n                                                            className=\"customer-name p-0\"\r\n                                                        />\r\n                                                    \r\n                                                    </div>\r\n                                                    }\r\n                                                </div>:\"\"\r\n                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }) : \"\"\r\n                                }\r\n\r\n                            </TableWrapper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mb-2\">\r\n                {this.state.hideNotNeededControls==\"true\" &&\r\n                    <div className=\"row\">\r\n                   <div className=\"col-4\">\r\n                    <label className=\"text-left text-black common-label-text \">\r\n                        Room\r\n                    </label>\r\n\r\n                    <div className=\"input-group\">\r\n                    <NormalSelect\r\n                            // placeholder=\"Enter here\"\r\n                            options={roomList}\r\n                            value={updateFields.Room}\r\n                            name=\"Room\"\r\n                            onChange={this.handleUpdateChange}\r\n                            className=\"customer-name py-0\"\r\n                            // disabled={formFields.Room}\r\n                        />\r\n\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                    <label className=\"text-left text-black common-label-text \">\r\n                        Source\r\n                    </label>\r\n\r\n                    <div className=\"input-group\">\r\n                    <NormalSelect\r\n                            // placeholder=\"Enter here\"\r\n                            options={sourceList}\r\n                            value={updateFields.Source}\r\n                            name=\"Source\"\r\n                            onChange={this.handleUpdateChange}\r\n                            className=\"customer-name py-0\"\r\n                            // disabled={formFields.Source}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-4\">\r\n                    <label className=\"text-left text-black common-label-text \">\r\n                    New Remark\r\n                    </label>\r\n\r\n                    <div className=\"input-group\">\r\n                    <NormalInput\r\n                            // placeholder=\"Enter here\"\r\n                            // options={siteList}\r\n                            value={updateFields.new_remark}\r\n                            name=\"new_remark\"\r\n                            onChange={this.handleUpdateChange}\r\n                            className=\"customer-name\"\r\n                            // disabled={formFields.new_remark}\r\n                        />\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n                }\r\n                </div>\r\n                \r\n                <div className=\"col-12 pt-4 action-bar\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 d-flex\">\r\n                            <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-line\"\r\n                                label=\"Clear Line\"\r\n                                outline={false}\r\n                                onClick={this.handleClearLine}\r\n                            />\r\n                            <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-all\"\r\n                                label=\"Clear All\"\r\n                                outline={false}\r\n                                onClick={this.handleClearAll}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 text-right\">\r\n\r\n                            <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\" fs-15 confirm\"\r\n                                label=\"Confirm\"\r\n                                outline={false}\r\n                                onClick={this.handleSubmit}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selected_cstomer: state.common.selected_cstomer,\r\n    basicApptDetail: state.appointment.basicApptDetail,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        // getCustomer,\r\n        getCommonApi,\r\n        updateForm,\r\n        commonCreateApi,\r\n        commonPatchApi,\r\n        commonDeleteApi\r\n    }, dispatch)\r\n}\r\n\r\nexport const TreatmentDone = connect(mapStateToProps, mapDispatchToProps)(TreatmentDoneClass)"]},"metadata":{},"sourceType":"module"}