{"ast":null,"code":"/**\r\n * DevExtreme (ui/drawer/ui.drawer.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _element = require(\"../../core/element\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _position = require(\"../../core/utils/position\");\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\n\nvar _empty_template = require(\"../../core/templates/empty_template\");\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _uiDrawerRenderingStrategy = _interopRequireDefault(require(\"./ui.drawer.rendering.strategy.push\"));\n\nvar _uiDrawerRenderingStrategy2 = _interopRequireDefault(require(\"./ui.drawer.rendering.strategy.shrink\"));\n\nvar _uiDrawerRenderingStrategy3 = _interopRequireDefault(require(\"./ui.drawer.rendering.strategy.overlap\"));\n\nvar _uiDrawer = require(\"./ui.drawer.animation\");\n\nvar _click = require(\"../../events/click\");\n\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _visibility_change = require(\"../../events/visibility_change\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DRAWER_CLASS = \"dx-drawer\";\nvar DRAWER_WRAPPER_CLASS = \"dx-drawer-wrapper\";\nvar DRAWER_PANEL_CONTENT_CLASS = \"dx-drawer-panel-content\";\nvar DRAWER_VIEW_CONTENT_CLASS = \"dx-drawer-content\";\nvar DRAWER_SHADER_CLASS = \"dx-drawer-shader\";\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\nvar OPENED_STATE_CLASS = \"dx-drawer-opened\";\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\nvar PANEL_TEMPLATE_NAME = \"panel\";\n\nvar Drawer = _ui.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      position: \"left\",\n      opened: false,\n      minSize: null,\n      maxSize: null,\n      shading: false,\n      template: PANEL_TEMPLATE_NAME,\n      openedStateMode: \"shrink\",\n      revealMode: \"slide\",\n      animationEnabled: true,\n      animationDuration: 400,\n      closeOnOutsideClick: false,\n      contentTemplate: ANONYMOUS_TEMPLATE_NAME,\n      target: void 0\n    });\n  },\n  _setDeprecatedOptions: function () {\n    this.callBase();\n    (0, _extend.extend)(this._deprecatedOptions, {\n      target: {\n        since: \"20.1\",\n        message: \"Functionality associated with this option is not intended for the Drawer widget.\"\n      }\n    });\n  },\n  _init: function () {\n    this.callBase();\n\n    this._initStrategy();\n\n    this.$element().addClass(DRAWER_CLASS);\n    this._animations = [];\n    this._whenAnimationCompleted = void 0;\n    this._whenPanelContentRendered = void 0;\n    this._whenPanelContentRefreshed = void 0;\n    this._$wrapper = (0, _renderer.default)(\"<div>\").addClass(DRAWER_WRAPPER_CLASS);\n    this._$viewContentWrapper = (0, _renderer.default)(\"<div>\").addClass(DRAWER_VIEW_CONTENT_CLASS);\n\n    this._$wrapper.append(this._$viewContentWrapper);\n\n    this.$element().append(this._$wrapper);\n  },\n  _initStrategy: function () {\n    switch (this.option(\"openedStateMode\")) {\n      case \"push\":\n        this._strategy = new _uiDrawerRenderingStrategy.default(this);\n        break;\n\n      case \"shrink\":\n        this._strategy = new _uiDrawerRenderingStrategy2.default(this);\n        break;\n\n      case \"overlap\":\n        this._strategy = new _uiDrawerRenderingStrategy3.default(this);\n        break;\n\n      default:\n        this._strategy = new _uiDrawerRenderingStrategy.default(this);\n    }\n  },\n  _getAnonymousTemplateName: function () {\n    return ANONYMOUS_TEMPLATE_NAME;\n  },\n  _initTemplates: function () {\n    var defaultTemplates = {};\n    defaultTemplates[PANEL_TEMPLATE_NAME] = new _empty_template.EmptyTemplate();\n    defaultTemplates[ANONYMOUS_TEMPLATE_NAME] = new _empty_template.EmptyTemplate();\n\n    this._templateManager.addDefaultTemplates(defaultTemplates);\n\n    this.callBase();\n  },\n  _viewContentWrapperClickHandler: function (e) {\n    var closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\n\n    if ((0, _type.isFunction)(closeOnOutsideClick)) {\n      closeOnOutsideClick = closeOnOutsideClick(e);\n    }\n\n    if (closeOnOutsideClick && this.option(\"opened\")) {\n      this.stopAnimations();\n\n      if (this.option(\"shading\")) {\n        e.preventDefault();\n      }\n\n      this.hide();\n    }\n  },\n  _initMarkup: function () {\n    this.callBase();\n\n    this._toggleOpenedStateClass(this.option(\"opened\"));\n\n    this._renderPanelContentWrapper();\n\n    this._refreshOpenedStateModeClass();\n\n    this._refreshRevealModeClass();\n\n    this._renderShader();\n\n    this._whenPanelContentRendered = new _deferred.Deferred();\n\n    this._strategy.renderPanelContent(this._whenPanelContentRendered);\n\n    this._strategy.onPanelContentRendered();\n\n    this._renderViewContent();\n\n    _events_engine.default.off(this._$viewContentWrapper, _click.name);\n\n    _events_engine.default.on(this._$viewContentWrapper, _click.name, this._viewContentWrapperClickHandler.bind(this));\n\n    this._refreshPositionClass();\n\n    this._refreshWrapperChildrenOrder();\n  },\n  _render: function () {\n    var _this = this;\n\n    this._initMinMaxSize();\n\n    this.callBase();\n\n    this._whenPanelContentRendered.always(function () {\n      _this._initMinMaxSize();\n\n      _this._strategy.refreshPanelElementSize(\"slide\" === _this.option(\"revealMode\") || !_this.isHorizontalDirection());\n\n      _this._renderPosition(_this.option(\"opened\"), false);\n\n      _this._removePanelManualPosition();\n    });\n  },\n  _removePanelManualPosition: function () {\n    if (this._$panelContentWrapper.attr(\"manualposition\")) {\n      this._$panelContentWrapper.removeAttr(\"manualPosition\");\n\n      this._$panelContentWrapper.css({\n        position: \"\",\n        top: \"\",\n        left: \"\",\n        right: \"\",\n        bottom: \"\"\n      });\n    }\n  },\n  _renderPanelContentWrapper: function () {\n    this._$panelContentWrapper = (0, _renderer.default)(\"<div>\").addClass(DRAWER_PANEL_CONTENT_CLASS);\n    var position = this.calcTargetPosition();\n\n    if (\"push\" === this.option(\"openedStateMode\") && [\"top\", \"bottom\"].indexOf(position) > -1) {\n      this._$panelContentWrapper.addClass(DRAWER_PANEL_CONTENT_CLASS + \"-push-top-or-bottom\");\n    }\n\n    if (\"overlap\" !== this.option(\"openedStateMode\") && !this.option(\"opened\") && !this.option(\"minSize\")) {\n      this._$panelContentWrapper.attr(\"manualposition\", true);\n\n      this._$panelContentWrapper.css({\n        position: \"absolute\",\n        top: \"-10000px\",\n        left: \"-10000px\",\n        right: \"auto\",\n        bottom: \"auto\"\n      });\n    }\n\n    this._$wrapper.append(this._$panelContentWrapper);\n  },\n  _refreshOpenedStateModeClass: function (prevOpenedStateMode) {\n    if (prevOpenedStateMode) {\n      this.$element().removeClass(DRAWER_CLASS + \"-\" + prevOpenedStateMode);\n    }\n\n    this.$element().addClass(DRAWER_CLASS + \"-\" + this.option(\"openedStateMode\"));\n  },\n  _refreshPositionClass: function (prevPosition) {\n    if (prevPosition) {\n      this.$element().removeClass(DRAWER_CLASS + \"-\" + prevPosition);\n    }\n\n    this.$element().addClass(DRAWER_CLASS + \"-\" + this.calcTargetPosition());\n  },\n  _refreshWrapperChildrenOrder: function () {\n    var position = this.calcTargetPosition();\n\n    if (this._strategy.isViewContentFirst(position, this.option(\"rtlEnabled\"))) {\n      this._$wrapper.prepend(this._$viewContentWrapper);\n    } else {\n      this._$wrapper.prepend(this._$panelContentWrapper);\n    }\n  },\n  _refreshRevealModeClass: function (prevRevealMode) {\n    if (prevRevealMode) {\n      this.$element().removeClass(DRAWER_CLASS + \"-\" + prevRevealMode);\n    }\n\n    this.$element().addClass(DRAWER_CLASS + \"-\" + this.option(\"revealMode\"));\n  },\n  _renderViewContent: function () {\n    var contentTemplateOption = this.option(\"contentTemplate\");\n\n    var contentTemplate = this._getTemplate(contentTemplateOption);\n\n    if (contentTemplate) {\n      var $viewTemplate = contentTemplate.render({\n        container: this.viewContent(),\n        noModel: true,\n        transclude: this._templateManager.anonymousTemplateName === contentTemplateOption\n      });\n\n      if ($viewTemplate.hasClass(\"ng-scope\")) {\n        (0, _renderer.default)(this._$viewContentWrapper).children().not(\".\".concat(DRAWER_SHADER_CLASS)).replaceWith($viewTemplate);\n      }\n    }\n  },\n  _renderShader: function () {\n    this._$shader = this._$shader || (0, _renderer.default)(\"<div>\").addClass(DRAWER_SHADER_CLASS);\n\n    this._$shader.appendTo(this.viewContent());\n\n    this._toggleShaderVisibility(this.option(\"opened\"));\n  },\n  _initSize: function () {\n    this._initMinMaxSize();\n  },\n  _initMinMaxSize: function () {\n    var realPanelSize = this.isHorizontalDirection() ? this.getRealPanelWidth() : this.getRealPanelHeight();\n    this._maxSize = this.option(\"maxSize\") || realPanelSize;\n    this._minSize = this.option(\"minSize\") || 0;\n  },\n  calcTargetPosition: function () {\n    var position = this.option(\"position\");\n    var rtl = this.option(\"rtlEnabled\");\n    var result = position;\n\n    if (\"before\" === position) {\n      result = rtl ? \"right\" : \"left\";\n    } else {\n      if (\"after\" === position) {\n        result = rtl ? \"left\" : \"right\";\n      }\n    }\n\n    return result;\n  },\n  getOverlayTarget: function () {\n    return this._options.silent(\"target\") || this._$wrapper;\n  },\n  getOverlay: function () {\n    return this._overlay;\n  },\n  getMaxSize: function () {\n    return this._maxSize;\n  },\n  getMinSize: function () {\n    return this._minSize;\n  },\n  getRealPanelWidth: function () {\n    if ((0, _window.hasWindow)()) {\n      if ((0, _type.isDefined)(this.option(\"templateSize\"))) {\n        return this.option(\"templateSize\");\n      } else {\n        return (0, _position.getBoundingRect)(this._getPanelTemplateElement()).width;\n      }\n    } else {\n      return 0;\n    }\n  },\n  getRealPanelHeight: function () {\n    if ((0, _window.hasWindow)()) {\n      if ((0, _type.isDefined)(this.option(\"templateSize\"))) {\n        return this.option(\"templateSize\");\n      } else {\n        return (0, _position.getBoundingRect)(this._getPanelTemplateElement()).height;\n      }\n    } else {\n      return 0;\n    }\n  },\n  _getPanelTemplateElement: function () {\n    var $panelContent = this._strategy.getPanelContent();\n\n    var $result = $panelContent;\n\n    if ($panelContent.children().length) {\n      $result = $panelContent.children().eq(0);\n\n      if ($panelContent.hasClass(\"dx-overlay-content\") && $result.hasClass(\"dx-template-wrapper\") && $result.children().length) {\n        $result = $result.children().eq(0);\n      }\n    }\n\n    return $result.get(0);\n  },\n  getElementHeight: function ($element) {\n    var $children = $element.children();\n    return $children.length ? (0, _position.getBoundingRect)($children.eq(0).get(0)).height : (0, _position.getBoundingRect)($element.get(0)).height;\n  },\n  isHorizontalDirection: function () {\n    var position = this.calcTargetPosition();\n    return \"left\" === position || \"right\" === position;\n  },\n  stopAnimations: function (jumpToEnd) {\n    _fx.default.stop(this._$shader, jumpToEnd);\n\n    _fx.default.stop((0, _renderer.default)(this.content()), jumpToEnd);\n\n    _fx.default.stop((0, _renderer.default)(this.viewContent()), jumpToEnd);\n\n    var overlay = this.getOverlay();\n\n    if (overlay) {\n      _fx.default.stop((0, _renderer.default)(overlay.$content()), jumpToEnd);\n    }\n  },\n  setZIndex: function (zIndex) {\n    this._$shader.css(\"zIndex\", zIndex - 1);\n\n    this._$panelContentWrapper.css(\"zIndex\", zIndex);\n  },\n  resizeContent: function () {\n    this.resizeViewContent;\n  },\n  resizeViewContent: function () {\n    (0, _visibility_change.triggerResizeEvent)(this.viewContent());\n  },\n  _isInvertedPosition: function () {\n    var position = this.calcTargetPosition();\n    return \"right\" === position || \"bottom\" === position;\n  },\n  _renderPosition: function (isDrawerOpened, animate, jumpToEnd) {\n    this.stopAnimations(jumpToEnd);\n    this._animations = [];\n\n    if (!(0, _window.hasWindow)()) {\n      return;\n    }\n\n    animate = (0, _type.isDefined)(animate) ? animate && this.option(\"animationEnabled\") : this.option(\"animationEnabled\");\n\n    if (isDrawerOpened) {\n      this._toggleShaderVisibility(isDrawerOpened);\n    }\n\n    this._strategy.renderPosition(isDrawerOpened, animate);\n\n    this._strategy.renderShaderVisibility(isDrawerOpened, animate, this.option(\"animationDuration\"));\n  },\n  _animationCompleteHandler: function () {\n    this.resizeViewContent();\n\n    if (this._whenAnimationCompleted) {\n      this._whenAnimationCompleted.resolve();\n\n      this._animations = [];\n    }\n  },\n  _getPositionCorrection: function () {\n    return this._isInvertedPosition() ? -1 : 1;\n  },\n  _dispose: function () {\n    _uiDrawer.animation.complete((0, _renderer.default)(this.viewContent()));\n\n    this.callBase();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._dimensionChanged();\n    }\n  },\n  _dimensionChanged: function () {\n    this._initMinMaxSize();\n\n    this._strategy.refreshPanelElementSize(\"slide\" === this.option(\"revealMode\"));\n\n    this._renderPosition(this.option(\"opened\"), false);\n  },\n  _toggleShaderVisibility: function (visible) {\n    if (this.option(\"shading\")) {\n      this._$shader.toggleClass(INVISIBLE_STATE_CLASS, !visible);\n\n      this._$shader.css(\"visibility\", visible ? \"visible\" : \"hidden\");\n    } else {\n      this._$shader.toggleClass(INVISIBLE_STATE_CLASS, true);\n    }\n  },\n  _toggleOpenedStateClass: function (opened) {\n    this.$element().toggleClass(OPENED_STATE_CLASS, opened);\n  },\n  _refreshPanel: function () {\n    var _this2 = this;\n\n    (0, _renderer.default)(this.viewContent()).css(\"paddingLeft\", 0);\n    (0, _renderer.default)(this.viewContent()).css(\"paddingRight\", 0);\n    (0, _renderer.default)(this.viewContent()).css(\"paddingTop\", 0);\n    (0, _renderer.default)(this.viewContent()).css(\"paddingBottom\", 0);\n    (0, _renderer.default)(this.viewContent()).css(\"left\", 0);\n    (0, _renderer.default)(this.viewContent()).css(\"transform\", \"translate(0px, 0px)\");\n    (0, _renderer.default)(this.viewContent()).removeClass(\"dx-theme-background-color\");\n\n    this._removePanelContentWrapper();\n\n    this._removeOverlay();\n\n    this._renderPanelContentWrapper();\n\n    this._refreshWrapperChildrenOrder();\n\n    this._whenPanelContentRefreshed = new _deferred.Deferred();\n\n    this._strategy.renderPanelContent(this._whenPanelContentRefreshed);\n\n    this._strategy.onPanelContentRendered();\n\n    if ((0, _window.hasWindow)()) {\n      this._whenPanelContentRefreshed.always(function () {\n        _this2._strategy.refreshPanelElementSize(\"slide\" === _this2.option(\"revealMode\"));\n\n        _this2._renderPosition(_this2.option(\"opened\"), false, true);\n\n        _this2._removePanelManualPosition();\n      });\n    }\n  },\n  _clean: function () {\n    this._cleanFocusState();\n\n    this._removePanelContentWrapper();\n\n    this._removeOverlay();\n  },\n  _removePanelContentWrapper: function () {\n    if (this._$panelContentWrapper) {\n      this._$panelContentWrapper.remove();\n    }\n  },\n  _removeOverlay: function () {\n    if (this._overlay) {\n      this._overlay.dispose();\n\n      delete this._overlay;\n      delete this._$panelContentWrapper;\n    }\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"width\":\n        this.callBase(args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"opened\":\n        this._renderPosition(args.value);\n\n        this._toggleOpenedStateClass(args.value);\n\n        break;\n\n      case \"position\":\n        this._refreshPositionClass(args.previousValue);\n\n        this._refreshWrapperChildrenOrder();\n\n        this._invalidate();\n\n        break;\n\n      case \"contentTemplate\":\n      case \"template\":\n        this._invalidate();\n\n        break;\n\n      case \"openedStateMode\":\n      case \"target\":\n        this._initStrategy();\n\n        this._refreshOpenedStateModeClass(args.previousValue);\n\n        this._refreshPanel();\n\n        break;\n\n      case \"minSize\":\n      case \"maxSize\":\n        this._initMinMaxSize();\n\n        this._renderPosition(this.option(\"opened\"), false);\n\n        break;\n\n      case \"revealMode\":\n        this._refreshRevealModeClass(args.previousValue);\n\n        this._refreshPanel();\n\n        break;\n\n      case \"shading\":\n        this._toggleShaderVisibility(this.option(\"opened\"));\n\n        break;\n\n      case \"animationEnabled\":\n      case \"animationDuration\":\n      case \"closeOnOutsideClick\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  content: function () {\n    return (0, _element.getPublicElement)(this._$panelContentWrapper);\n  },\n  viewContent: function () {\n    return (0, _element.getPublicElement)(this._$viewContentWrapper);\n  },\n  show: function () {\n    return this.toggle(true);\n  },\n  hide: function () {\n    return this.toggle(false);\n  },\n  toggle: function (opened) {\n    var targetOpened = void 0 === opened ? !this.option(\"opened\") : opened;\n    this._whenAnimationCompleted = new _deferred.Deferred();\n    this.option(\"opened\", targetOpened);\n    return this._whenAnimationCompleted.promise();\n  }\n});\n\n(0, _component_registrator.default)(\"dxDrawer\", Drawer);\nvar _default = Drawer;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/drawer/ui.drawer.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_events_engine","_type","_element","_component_registrator","_extend","_position","_ui","_empty_template","_window","_uiDrawerRenderingStrategy","_uiDrawerRenderingStrategy2","_uiDrawerRenderingStrategy3","_uiDrawer","_click","_fx","_deferred","_visibility_change","obj","__esModule","DRAWER_CLASS","DRAWER_WRAPPER_CLASS","DRAWER_PANEL_CONTENT_CLASS","DRAWER_VIEW_CONTENT_CLASS","DRAWER_SHADER_CLASS","INVISIBLE_STATE_CLASS","OPENED_STATE_CLASS","ANONYMOUS_TEMPLATE_NAME","PANEL_TEMPLATE_NAME","Drawer","inherit","_getDefaultOptions","extend","callBase","position","opened","minSize","maxSize","shading","template","openedStateMode","revealMode","animationEnabled","animationDuration","closeOnOutsideClick","contentTemplate","target","_setDeprecatedOptions","_deprecatedOptions","since","message","_init","_initStrategy","$element","addClass","_animations","_whenAnimationCompleted","_whenPanelContentRendered","_whenPanelContentRefreshed","_$wrapper","_$viewContentWrapper","append","option","_strategy","_getAnonymousTemplateName","_initTemplates","defaultTemplates","EmptyTemplate","_templateManager","addDefaultTemplates","_viewContentWrapperClickHandler","e","isFunction","stopAnimations","preventDefault","hide","_initMarkup","_toggleOpenedStateClass","_renderPanelContentWrapper","_refreshOpenedStateModeClass","_refreshRevealModeClass","_renderShader","Deferred","renderPanelContent","onPanelContentRendered","_renderViewContent","off","name","on","bind","_refreshPositionClass","_refreshWrapperChildrenOrder","_render","_this","_initMinMaxSize","always","refreshPanelElementSize","isHorizontalDirection","_renderPosition","_removePanelManualPosition","_$panelContentWrapper","attr","removeAttr","css","top","left","right","bottom","calcTargetPosition","indexOf","prevOpenedStateMode","removeClass","prevPosition","isViewContentFirst","prepend","prevRevealMode","contentTemplateOption","_getTemplate","$viewTemplate","render","container","viewContent","noModel","transclude","anonymousTemplateName","hasClass","children","not","concat","replaceWith","_$shader","appendTo","_toggleShaderVisibility","_initSize","realPanelSize","getRealPanelWidth","getRealPanelHeight","_maxSize","_minSize","rtl","result","getOverlayTarget","_options","silent","getOverlay","_overlay","getMaxSize","getMinSize","hasWindow","isDefined","getBoundingRect","_getPanelTemplateElement","width","height","$panelContent","getPanelContent","$result","length","eq","get","getElementHeight","$children","jumpToEnd","stop","content","overlay","$content","setZIndex","zIndex","resizeContent","resizeViewContent","triggerResizeEvent","_isInvertedPosition","isDrawerOpened","animate","renderPosition","renderShaderVisibility","_animationCompleteHandler","resolve","_getPositionCorrection","_dispose","animation","complete","_visibilityChanged","visible","_dimensionChanged","toggleClass","_refreshPanel","_this2","_removePanelContentWrapper","_removeOverlay","_clean","_cleanFocusState","remove","dispose","_optionChanged","args","value","previousValue","_invalidate","getPublicElement","show","toggle","targetOpened","promise","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/drawer/ui.drawer.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _element = require(\"../../core/element\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _empty_template = require(\"../../core/templates/empty_template\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _uiDrawerRenderingStrategy = _interopRequireDefault(require(\"./ui.drawer.rendering.strategy.push\"));\r\nvar _uiDrawerRenderingStrategy2 = _interopRequireDefault(require(\"./ui.drawer.rendering.strategy.shrink\"));\r\nvar _uiDrawerRenderingStrategy3 = _interopRequireDefault(require(\"./ui.drawer.rendering.strategy.overlap\"));\r\nvar _uiDrawer = require(\"./ui.drawer.animation\");\r\nvar _click = require(\"../../events/click\");\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _visibility_change = require(\"../../events/visibility_change\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DRAWER_CLASS = \"dx-drawer\";\r\nvar DRAWER_WRAPPER_CLASS = \"dx-drawer-wrapper\";\r\nvar DRAWER_PANEL_CONTENT_CLASS = \"dx-drawer-panel-content\";\r\nvar DRAWER_VIEW_CONTENT_CLASS = \"dx-drawer-content\";\r\nvar DRAWER_SHADER_CLASS = \"dx-drawer-shader\";\r\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\r\nvar OPENED_STATE_CLASS = \"dx-drawer-opened\";\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar PANEL_TEMPLATE_NAME = \"panel\";\r\nvar Drawer = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            position: \"left\",\r\n            opened: false,\r\n            minSize: null,\r\n            maxSize: null,\r\n            shading: false,\r\n            template: PANEL_TEMPLATE_NAME,\r\n            openedStateMode: \"shrink\",\r\n            revealMode: \"slide\",\r\n            animationEnabled: true,\r\n            animationDuration: 400,\r\n            closeOnOutsideClick: false,\r\n            contentTemplate: ANONYMOUS_TEMPLATE_NAME,\r\n            target: void 0\r\n        })\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._deprecatedOptions, {\r\n            target: {\r\n                since: \"20.1\",\r\n                message: \"Functionality associated with this option is not intended for the Drawer widget.\"\r\n            }\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initStrategy();\r\n        this.$element().addClass(DRAWER_CLASS);\r\n        this._animations = [];\r\n        this._whenAnimationCompleted = void 0;\r\n        this._whenPanelContentRendered = void 0;\r\n        this._whenPanelContentRefreshed = void 0;\r\n        this._$wrapper = (0, _renderer.default)(\"<div>\").addClass(DRAWER_WRAPPER_CLASS);\r\n        this._$viewContentWrapper = (0, _renderer.default)(\"<div>\").addClass(DRAWER_VIEW_CONTENT_CLASS);\r\n        this._$wrapper.append(this._$viewContentWrapper);\r\n        this.$element().append(this._$wrapper)\r\n    },\r\n    _initStrategy: function() {\r\n        switch (this.option(\"openedStateMode\")) {\r\n            case \"push\":\r\n                this._strategy = new _uiDrawerRenderingStrategy.default(this);\r\n                break;\r\n            case \"shrink\":\r\n                this._strategy = new _uiDrawerRenderingStrategy2.default(this);\r\n                break;\r\n            case \"overlap\":\r\n                this._strategy = new _uiDrawerRenderingStrategy3.default(this);\r\n                break;\r\n            default:\r\n                this._strategy = new _uiDrawerRenderingStrategy.default(this)\r\n        }\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initTemplates: function() {\r\n        var defaultTemplates = {};\r\n        defaultTemplates[PANEL_TEMPLATE_NAME] = new _empty_template.EmptyTemplate;\r\n        defaultTemplates[ANONYMOUS_TEMPLATE_NAME] = new _empty_template.EmptyTemplate;\r\n        this._templateManager.addDefaultTemplates(defaultTemplates);\r\n        this.callBase()\r\n    },\r\n    _viewContentWrapperClickHandler: function(e) {\r\n        var closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n        if ((0, _type.isFunction)(closeOnOutsideClick)) {\r\n            closeOnOutsideClick = closeOnOutsideClick(e)\r\n        }\r\n        if (closeOnOutsideClick && this.option(\"opened\")) {\r\n            this.stopAnimations();\r\n            if (this.option(\"shading\")) {\r\n                e.preventDefault()\r\n            }\r\n            this.hide()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._toggleOpenedStateClass(this.option(\"opened\"));\r\n        this._renderPanelContentWrapper();\r\n        this._refreshOpenedStateModeClass();\r\n        this._refreshRevealModeClass();\r\n        this._renderShader();\r\n        this._whenPanelContentRendered = new _deferred.Deferred;\r\n        this._strategy.renderPanelContent(this._whenPanelContentRendered);\r\n        this._strategy.onPanelContentRendered();\r\n        this._renderViewContent();\r\n        _events_engine.default.off(this._$viewContentWrapper, _click.name);\r\n        _events_engine.default.on(this._$viewContentWrapper, _click.name, this._viewContentWrapperClickHandler.bind(this));\r\n        this._refreshPositionClass();\r\n        this._refreshWrapperChildrenOrder()\r\n    },\r\n    _render: function() {\r\n        var _this = this;\r\n        this._initMinMaxSize();\r\n        this.callBase();\r\n        this._whenPanelContentRendered.always(function() {\r\n            _this._initMinMaxSize();\r\n            _this._strategy.refreshPanelElementSize(\"slide\" === _this.option(\"revealMode\") || !_this.isHorizontalDirection());\r\n            _this._renderPosition(_this.option(\"opened\"), false);\r\n            _this._removePanelManualPosition()\r\n        })\r\n    },\r\n    _removePanelManualPosition: function() {\r\n        if (this._$panelContentWrapper.attr(\"manualposition\")) {\r\n            this._$panelContentWrapper.removeAttr(\"manualPosition\");\r\n            this._$panelContentWrapper.css({\r\n                position: \"\",\r\n                top: \"\",\r\n                left: \"\",\r\n                right: \"\",\r\n                bottom: \"\"\r\n            })\r\n        }\r\n    },\r\n    _renderPanelContentWrapper: function() {\r\n        this._$panelContentWrapper = (0, _renderer.default)(\"<div>\").addClass(DRAWER_PANEL_CONTENT_CLASS);\r\n        var position = this.calcTargetPosition();\r\n        if (\"push\" === this.option(\"openedStateMode\") && [\"top\", \"bottom\"].indexOf(position) > -1) {\r\n            this._$panelContentWrapper.addClass(DRAWER_PANEL_CONTENT_CLASS + \"-push-top-or-bottom\")\r\n        }\r\n        if (\"overlap\" !== this.option(\"openedStateMode\") && !this.option(\"opened\") && !this.option(\"minSize\")) {\r\n            this._$panelContentWrapper.attr(\"manualposition\", true);\r\n            this._$panelContentWrapper.css({\r\n                position: \"absolute\",\r\n                top: \"-10000px\",\r\n                left: \"-10000px\",\r\n                right: \"auto\",\r\n                bottom: \"auto\"\r\n            })\r\n        }\r\n        this._$wrapper.append(this._$panelContentWrapper)\r\n    },\r\n    _refreshOpenedStateModeClass: function(prevOpenedStateMode) {\r\n        if (prevOpenedStateMode) {\r\n            this.$element().removeClass(DRAWER_CLASS + \"-\" + prevOpenedStateMode)\r\n        }\r\n        this.$element().addClass(DRAWER_CLASS + \"-\" + this.option(\"openedStateMode\"))\r\n    },\r\n    _refreshPositionClass: function(prevPosition) {\r\n        if (prevPosition) {\r\n            this.$element().removeClass(DRAWER_CLASS + \"-\" + prevPosition)\r\n        }\r\n        this.$element().addClass(DRAWER_CLASS + \"-\" + this.calcTargetPosition())\r\n    },\r\n    _refreshWrapperChildrenOrder: function() {\r\n        var position = this.calcTargetPosition();\r\n        if (this._strategy.isViewContentFirst(position, this.option(\"rtlEnabled\"))) {\r\n            this._$wrapper.prepend(this._$viewContentWrapper)\r\n        } else {\r\n            this._$wrapper.prepend(this._$panelContentWrapper)\r\n        }\r\n    },\r\n    _refreshRevealModeClass: function(prevRevealMode) {\r\n        if (prevRevealMode) {\r\n            this.$element().removeClass(DRAWER_CLASS + \"-\" + prevRevealMode)\r\n        }\r\n        this.$element().addClass(DRAWER_CLASS + \"-\" + this.option(\"revealMode\"))\r\n    },\r\n    _renderViewContent: function() {\r\n        var contentTemplateOption = this.option(\"contentTemplate\");\r\n        var contentTemplate = this._getTemplate(contentTemplateOption);\r\n        if (contentTemplate) {\r\n            var $viewTemplate = contentTemplate.render({\r\n                container: this.viewContent(),\r\n                noModel: true,\r\n                transclude: this._templateManager.anonymousTemplateName === contentTemplateOption\r\n            });\r\n            if ($viewTemplate.hasClass(\"ng-scope\")) {\r\n                (0, _renderer.default)(this._$viewContentWrapper).children().not(\".\".concat(DRAWER_SHADER_CLASS)).replaceWith($viewTemplate)\r\n            }\r\n        }\r\n    },\r\n    _renderShader: function() {\r\n        this._$shader = this._$shader || (0, _renderer.default)(\"<div>\").addClass(DRAWER_SHADER_CLASS);\r\n        this._$shader.appendTo(this.viewContent());\r\n        this._toggleShaderVisibility(this.option(\"opened\"))\r\n    },\r\n    _initSize: function() {\r\n        this._initMinMaxSize()\r\n    },\r\n    _initMinMaxSize: function() {\r\n        var realPanelSize = this.isHorizontalDirection() ? this.getRealPanelWidth() : this.getRealPanelHeight();\r\n        this._maxSize = this.option(\"maxSize\") || realPanelSize;\r\n        this._minSize = this.option(\"minSize\") || 0\r\n    },\r\n    calcTargetPosition: function() {\r\n        var position = this.option(\"position\");\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var result = position;\r\n        if (\"before\" === position) {\r\n            result = rtl ? \"right\" : \"left\"\r\n        } else {\r\n            if (\"after\" === position) {\r\n                result = rtl ? \"left\" : \"right\"\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    getOverlayTarget: function() {\r\n        return this._options.silent(\"target\") || this._$wrapper\r\n    },\r\n    getOverlay: function() {\r\n        return this._overlay\r\n    },\r\n    getMaxSize: function() {\r\n        return this._maxSize\r\n    },\r\n    getMinSize: function() {\r\n        return this._minSize\r\n    },\r\n    getRealPanelWidth: function() {\r\n        if ((0, _window.hasWindow)()) {\r\n            if ((0, _type.isDefined)(this.option(\"templateSize\"))) {\r\n                return this.option(\"templateSize\")\r\n            } else {\r\n                return (0, _position.getBoundingRect)(this._getPanelTemplateElement()).width\r\n            }\r\n        } else {\r\n            return 0\r\n        }\r\n    },\r\n    getRealPanelHeight: function() {\r\n        if ((0, _window.hasWindow)()) {\r\n            if ((0, _type.isDefined)(this.option(\"templateSize\"))) {\r\n                return this.option(\"templateSize\")\r\n            } else {\r\n                return (0, _position.getBoundingRect)(this._getPanelTemplateElement()).height\r\n            }\r\n        } else {\r\n            return 0\r\n        }\r\n    },\r\n    _getPanelTemplateElement: function() {\r\n        var $panelContent = this._strategy.getPanelContent();\r\n        var $result = $panelContent;\r\n        if ($panelContent.children().length) {\r\n            $result = $panelContent.children().eq(0);\r\n            if ($panelContent.hasClass(\"dx-overlay-content\") && $result.hasClass(\"dx-template-wrapper\") && $result.children().length) {\r\n                $result = $result.children().eq(0)\r\n            }\r\n        }\r\n        return $result.get(0)\r\n    },\r\n    getElementHeight: function($element) {\r\n        var $children = $element.children();\r\n        return $children.length ? (0, _position.getBoundingRect)($children.eq(0).get(0)).height : (0, _position.getBoundingRect)($element.get(0)).height\r\n    },\r\n    isHorizontalDirection: function() {\r\n        var position = this.calcTargetPosition();\r\n        return \"left\" === position || \"right\" === position\r\n    },\r\n    stopAnimations: function(jumpToEnd) {\r\n        _fx.default.stop(this._$shader, jumpToEnd);\r\n        _fx.default.stop((0, _renderer.default)(this.content()), jumpToEnd);\r\n        _fx.default.stop((0, _renderer.default)(this.viewContent()), jumpToEnd);\r\n        var overlay = this.getOverlay();\r\n        if (overlay) {\r\n            _fx.default.stop((0, _renderer.default)(overlay.$content()), jumpToEnd)\r\n        }\r\n    },\r\n    setZIndex: function(zIndex) {\r\n        this._$shader.css(\"zIndex\", zIndex - 1);\r\n        this._$panelContentWrapper.css(\"zIndex\", zIndex)\r\n    },\r\n    resizeContent: function() {\r\n        this.resizeViewContent\r\n    },\r\n    resizeViewContent: function() {\r\n        (0, _visibility_change.triggerResizeEvent)(this.viewContent())\r\n    },\r\n    _isInvertedPosition: function() {\r\n        var position = this.calcTargetPosition();\r\n        return \"right\" === position || \"bottom\" === position\r\n    },\r\n    _renderPosition: function(isDrawerOpened, animate, jumpToEnd) {\r\n        this.stopAnimations(jumpToEnd);\r\n        this._animations = [];\r\n        if (!(0, _window.hasWindow)()) {\r\n            return\r\n        }\r\n        animate = (0, _type.isDefined)(animate) ? animate && this.option(\"animationEnabled\") : this.option(\"animationEnabled\");\r\n        if (isDrawerOpened) {\r\n            this._toggleShaderVisibility(isDrawerOpened)\r\n        }\r\n        this._strategy.renderPosition(isDrawerOpened, animate);\r\n        this._strategy.renderShaderVisibility(isDrawerOpened, animate, this.option(\"animationDuration\"))\r\n    },\r\n    _animationCompleteHandler: function() {\r\n        this.resizeViewContent();\r\n        if (this._whenAnimationCompleted) {\r\n            this._whenAnimationCompleted.resolve();\r\n            this._animations = []\r\n        }\r\n    },\r\n    _getPositionCorrection: function() {\r\n        return this._isInvertedPosition() ? -1 : 1\r\n    },\r\n    _dispose: function() {\r\n        _uiDrawer.animation.complete((0, _renderer.default)(this.viewContent()));\r\n        this.callBase()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._initMinMaxSize();\r\n        this._strategy.refreshPanelElementSize(\"slide\" === this.option(\"revealMode\"));\r\n        this._renderPosition(this.option(\"opened\"), false)\r\n    },\r\n    _toggleShaderVisibility: function(visible) {\r\n        if (this.option(\"shading\")) {\r\n            this._$shader.toggleClass(INVISIBLE_STATE_CLASS, !visible);\r\n            this._$shader.css(\"visibility\", visible ? \"visible\" : \"hidden\")\r\n        } else {\r\n            this._$shader.toggleClass(INVISIBLE_STATE_CLASS, true)\r\n        }\r\n    },\r\n    _toggleOpenedStateClass: function(opened) {\r\n        this.$element().toggleClass(OPENED_STATE_CLASS, opened)\r\n    },\r\n    _refreshPanel: function() {\r\n        var _this2 = this;\r\n        (0, _renderer.default)(this.viewContent()).css(\"paddingLeft\", 0);\r\n        (0, _renderer.default)(this.viewContent()).css(\"paddingRight\", 0);\r\n        (0, _renderer.default)(this.viewContent()).css(\"paddingTop\", 0);\r\n        (0, _renderer.default)(this.viewContent()).css(\"paddingBottom\", 0);\r\n        (0, _renderer.default)(this.viewContent()).css(\"left\", 0);\r\n        (0, _renderer.default)(this.viewContent()).css(\"transform\", \"translate(0px, 0px)\");\r\n        (0, _renderer.default)(this.viewContent()).removeClass(\"dx-theme-background-color\");\r\n        this._removePanelContentWrapper();\r\n        this._removeOverlay();\r\n        this._renderPanelContentWrapper();\r\n        this._refreshWrapperChildrenOrder();\r\n        this._whenPanelContentRefreshed = new _deferred.Deferred;\r\n        this._strategy.renderPanelContent(this._whenPanelContentRefreshed);\r\n        this._strategy.onPanelContentRendered();\r\n        if ((0, _window.hasWindow)()) {\r\n            this._whenPanelContentRefreshed.always(function() {\r\n                _this2._strategy.refreshPanelElementSize(\"slide\" === _this2.option(\"revealMode\"));\r\n                _this2._renderPosition(_this2.option(\"opened\"), false, true);\r\n                _this2._removePanelManualPosition()\r\n            })\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this._cleanFocusState();\r\n        this._removePanelContentWrapper();\r\n        this._removeOverlay()\r\n    },\r\n    _removePanelContentWrapper: function() {\r\n        if (this._$panelContentWrapper) {\r\n            this._$panelContentWrapper.remove()\r\n        }\r\n    },\r\n    _removeOverlay: function() {\r\n        if (this._overlay) {\r\n            this._overlay.dispose();\r\n            delete this._overlay;\r\n            delete this._$panelContentWrapper\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"opened\":\r\n                this._renderPosition(args.value);\r\n                this._toggleOpenedStateClass(args.value);\r\n                break;\r\n            case \"position\":\r\n                this._refreshPositionClass(args.previousValue);\r\n                this._refreshWrapperChildrenOrder();\r\n                this._invalidate();\r\n                break;\r\n            case \"contentTemplate\":\r\n            case \"template\":\r\n                this._invalidate();\r\n                break;\r\n            case \"openedStateMode\":\r\n            case \"target\":\r\n                this._initStrategy();\r\n                this._refreshOpenedStateModeClass(args.previousValue);\r\n                this._refreshPanel();\r\n                break;\r\n            case \"minSize\":\r\n            case \"maxSize\":\r\n                this._initMinMaxSize();\r\n                this._renderPosition(this.option(\"opened\"), false);\r\n                break;\r\n            case \"revealMode\":\r\n                this._refreshRevealModeClass(args.previousValue);\r\n                this._refreshPanel();\r\n                break;\r\n            case \"shading\":\r\n                this._toggleShaderVisibility(this.option(\"opened\"));\r\n                break;\r\n            case \"animationEnabled\":\r\n            case \"animationDuration\":\r\n            case \"closeOnOutsideClick\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    content: function() {\r\n        return (0, _element.getPublicElement)(this._$panelContentWrapper)\r\n    },\r\n    viewContent: function() {\r\n        return (0, _element.getPublicElement)(this._$viewContentWrapper)\r\n    },\r\n    show: function() {\r\n        return this.toggle(true)\r\n    },\r\n    hide: function() {\r\n        return this.toggle(false)\r\n    },\r\n    toggle: function(opened) {\r\n        var targetOpened = void 0 === opened ? !this.option(\"opened\") : opened;\r\n        this._whenAnimationCompleted = new _deferred.Deferred;\r\n        this.option(\"opened\", targetOpened);\r\n        return this._whenAnimationCompleted.promise()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxDrawer\", Drawer);\r\nvar _default = Drawer;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}