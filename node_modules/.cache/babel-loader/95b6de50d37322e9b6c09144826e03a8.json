{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Backend\\\\Employee master\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, TableWrapper, NormalCheckbox, NormalInput } from \"component/common\";\nimport \"./style.scss\";\nimport { AiOutlinePlus, AiOutlineMinus } from \"react-icons/ai\";\nimport { withTranslation } from \"react-i18next\";\nimport { EmpLevels, NewEmpLevels, updateCommon } from \"redux/actions/Backend\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Toast } from \"service/toast\";\nexport class EmployeemasterClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      EmployeeDetails: [{\n        label: \"Code\",\n        divClass: \"justify-content-end\"\n      }, {\n        label: \"Description\"\n      }, {\n        label: \"Sequence\",\n        divClass: \"justify-content-end\"\n      }, {\n        label: \"Active\"\n      }],\n      sequence: null,\n      isoption: false,\n      iscreation: false,\n      issite: false,\n      islist: false,\n      staffList: [],\n      code: null,\n      desc: null,\n      checked: true,\n      spa: true,\n      edit: false,\n      sequenceedit: null,\n      codeedit: null,\n      descedit: null,\n      checkededit: true,\n      spaedit: true\n    };\n\n    this.componentDidMount = () => {\n      this.Listofemployees({});\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.Listofemployees = async () => {\n      this.updateState({\n        is_loading: true\n      });\n      await this.props.EmpLevels().then(res => {\n        console.log(res);\n        let {\n          staffList,\n          code\n        } = this.state;\n        staffList = res;\n        console.log(staffList);\n        code = res[res.length - 1].levelCode;\n        code = Number(code) + 1;\n        this.setState({\n          staffList,\n          is_loading: false,\n          code\n        });\n        console.log(staffList.length);\n      });\n    };\n\n    this.handleedit = async itemcode => {\n      let {\n        edit,\n        codeedit,\n        descedit,\n        sequenceedit,\n        spaedit,\n        checkededit,\n        temp\n      } = this.state;\n      edit = true;\n      this.setState({\n        edit\n      });\n      console.log(edit);\n      await this.props.EmpLevels().then(res => {\n        console.log(res);\n        let objIndex = res.findIndex(obj => obj.levelCode == itemcode);\n        temp = res[objIndex];\n        this.setState({\n          temp\n        });\n        codeedit = temp.levelCode;\n        descedit = temp.levelDesc;\n        sequenceedit = temp.levelSequence;\n        spaedit = temp.levelSpa;\n        checkededit = temp.levelIsActive;\n        this.setState({\n          codeedit,\n          descedit,\n          sequenceedit,\n          spaedit,\n          checkededit\n        });\n      });\n      this.employeecontent();\n    };\n\n    this.handleupdates = async () => {\n      let {\n        edit,\n        desc,\n        checked,\n        spa,\n        sequence\n      } = this.state;\n      let descJson = {\n        levelSequence: this.state.sequenceedit,\n        minTarget: 0,\n        fromSalary: 0,\n        toSalary: 0,\n        levelCode: this.state.codeedit,\n        levelDesc: this.state.descedit,\n        groupCode: \"\",\n        levelSpa: this.state.spaedit,\n        getGroupComm: true,\n        levelIsActive: this.state.checkededit\n      };\n      await this.props.updateCommon(`EmpLevels/update?where=%7B%22levelCode%22%20%3A${this.state.codeedit}%7D\n    `, descJson).then(data => {\n        this.Listofemployees({});\n        Toast({\n          type: \"success\",\n          message: \"Updated Successfully\"\n        });\n      });\n      edit = false;\n      desc = \"\";\n      sequence = \"\";\n      spa = true;\n      checked = true;\n      this.setState({\n        edit,\n        desc,\n        sequence,\n        spa,\n        checked\n      });\n      this.employeecontent();\n    };\n\n    this.Addnew = async () => {\n      let {\n        code,\n        desc,\n        sequence,\n        spa,\n        checked\n      } = this.state;\n\n      if (code == null || desc == null) {\n        Toast({\n          type: \"error\",\n          message: \"Please check required fields\"\n        });\n      } else {\n        let newemp = {\n          levelSequence: sequence,\n          minTarget: 0,\n          fromSalary: 0,\n          toSalary: 0,\n          levelCode: code,\n          levelDesc: desc,\n          groupCode: \"\",\n          levelSpa: spa,\n          getGroupComm: true,\n          levelIsActive: checked\n        };\n        await this.props.NewEmpLevels(newemp).then(data => {\n          this.Listofemployees();\n          Toast({\n            type: \"success\",\n            message: \"Successfully Added\"\n          });\n          code = \"\";\n          sequence = \"\";\n          desc = \"\";\n          checked = true;\n          spa = true;\n          this.setState({\n            code,\n            desc,\n            sequence,\n            spa,\n            checked\n          });\n        }).catch(e => console.log(e));\n      }\n    };\n\n    this.temp = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      console.log(value, name);\n      let {\n        code,\n        desc,\n        sequence,\n        spa,\n        checked,\n        codeedit,\n        descedit,\n        sequenceedit,\n        spaedit,\n        checkededit\n      } = this.state;\n\n      if (name == \"code\") {\n        code = value;\n        this.setState({\n          code\n        });\n      }\n\n      if (name == \"desc\") {\n        desc = value;\n        this.setState({\n          desc\n        });\n      }\n\n      if (name == \"sequence\") {\n        sequence = value;\n        this.setState({\n          sequence\n        });\n      }\n\n      if (name == \"spa\") {\n        spa = value;\n        this.setState({\n          spa\n        });\n      }\n\n      if (name == \"checked\") {\n        checked = value;\n        this.setState({\n          checked\n        });\n      }\n\n      if (name == \"codeedit\") {\n        codeedit = value;\n        this.setState({\n          codeedit\n        });\n      }\n\n      if (name == \"descedit\") {\n        descedit = value;\n        this.setState({\n          descedit\n        });\n      }\n\n      if (name == \"sequenceedit\") {\n        sequenceedit = value;\n        this.setState({\n          sequenceedit\n        });\n      }\n\n      if (name == \"spaedit\") {\n        spaedit = value;\n        this.setState({\n          spaedit\n        });\n      }\n\n      if (name == \"checkededit\") {\n        checkededit = value;\n        this.setState({\n          checkededit\n        });\n      }\n    };\n  }\n\n  employeecontent() {\n    this.setState({\n      iscreation: !this.state.iscreation\n    });\n  }\n\n  employeelistcontent() {\n    this.setState({\n      islist: !this.state.islist\n    });\n  }\n\n  render() {\n    let {\n      EmployeeDetails,\n      pageMeta,\n      staffList,\n      is_loading,\n      code,\n      desc,\n      iscreation,\n      islist,\n      sequence,\n      spa,\n      checked,\n      edit,\n      codeedit,\n      descedit,\n      sequenceedit,\n      checkededit,\n      spaedit\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid focreason\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, t(\"Employee Master\")), edit == false ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex  justify-content-between p-3 foc\",\n      onClick: () => this.employeecontent(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, t(\"Employee Level Creation\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, iscreation == false ? /*#__PURE__*/React.createElement(AiOutlinePlus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(AiOutlineMinus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 62\n      }\n    }))), iscreation == true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid roomcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }, t(\"Code\")), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: code,\n      name: \"code\",\n      onChange: this.temp,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, t(\"Description\")), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: desc,\n      name: \"desc\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      label: \"Add\",\n      onClick: () => this.Addnew(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }, t(\"Sequence\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: sequence,\n      name: \"sequence\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      checked: spa,\n      name: \"spa\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 27\n      }\n    }, t(\"Allow to view all SPA\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      checked: checked,\n      name: \"checked\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 27\n      }\n    }, t(\"Active\"))))))) : \"\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex  justify-content-between p-3 foc\",\n      onClick: () => this.employeecontent(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    }, t(\"Employee Level Creation\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, iscreation == false ? /*#__PURE__*/React.createElement(AiOutlinePlus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(AiOutlineMinus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 62\n      }\n    }))), iscreation == true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid roomcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }, t(\"Code\")), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: codeedit,\n      name: \"codeedit\",\n      onChange: this.temp,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 25\n      }\n    }, t(\"Description\")), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 25\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: descedit,\n      name: \"descedit\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      label: \"Update\",\n      onClick: () => this.handleupdates(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 25\n      }\n    }, t(\"Sequence\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: sequenceedit,\n      name: \"sequenceedit\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      checked: spaedit,\n      name: \"spaedit\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 27\n      }\n    }, t(\"Allow to view all SPA\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      checked: checkededit,\n      name: \"checkededit\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 27\n      }\n    }, t(\"Active\"))))))) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex  justify-content-between p-3 mt-5 foc\",\n      onClick: () => this.employeelistcontent(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }\n    }, t(\"Employee Level List\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }\n    }, islist == false ? /*#__PURE__*/React.createElement(AiOutlinePlus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 34\n      }\n    }) : /*#__PURE__*/React.createElement(AiOutlineMinus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 54\n      }\n    }))), islist == true ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-table-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 19\n      }\n    }, t(\"List of Employee Level\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: EmployeeDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 23\n      }\n    }, is_loading ? /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 35\n      }\n    }, \"Loading...\"))))) : staffList.length > 0 ? staffList.map(({\n      levelCode,\n      levelDesc,\n      levelSequence,\n      levelIsActive\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right text-success cursor-pointer\",\n        onClick: () => this.handleedit(levelCode),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 37\n        }\n      }, levelCode)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 37\n        }\n      }, levelDesc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 37\n        }\n      }, levelSequence)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 37\n        }\n      }, levelIsActive == true ? \"Yes\" : \"No\")));\n    }) : null)))))) : \"\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    EmpLevels,\n    NewEmpLevels,\n    updateCommon\n  }, dispatch);\n};\n\nexport const Employeemaster = withTranslation()(connect(null, mapDispatchToProps)(EmployeemasterClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Backend/Employee master/index.js"],"names":["React","Component","NormalButton","TableWrapper","NormalCheckbox","NormalInput","AiOutlinePlus","AiOutlineMinus","withTranslation","EmpLevels","NewEmpLevels","updateCommon","connect","bindActionCreators","Toast","EmployeemasterClass","state","EmployeeDetails","label","divClass","sequence","isoption","iscreation","issite","islist","staffList","code","desc","checked","spa","edit","sequenceedit","codeedit","descedit","checkededit","spaedit","componentDidMount","Listofemployees","updateState","data","isMounted","setState","is_loading","props","then","res","console","log","length","levelCode","Number","handleedit","itemcode","temp","objIndex","findIndex","obj","levelDesc","levelSequence","levelSpa","levelIsActive","employeecontent","handleupdates","descJson","minTarget","fromSalary","toSalary","groupCode","getGroupComm","type","message","Addnew","newemp","catch","e","target","value","name","employeelistcontent","render","pageMeta","t","color","width","handlePagination","map","index","mapDispatchToProps","dispatch","Employeemaster"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalButton,\r\n  TableWrapper,\r\n  NormalCheckbox,\r\n  NormalInput,\r\n} from \"component/common\";\r\nimport \"./style.scss\";\r\nimport { AiOutlinePlus, AiOutlineMinus } from \"react-icons/ai\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { EmpLevels, NewEmpLevels, updateCommon } from \"redux/actions/Backend\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nexport class EmployeemasterClass extends Component {\r\n  state = {\r\n    EmployeeDetails: [\r\n      { label: \"Code\", divClass: \"justify-content-end\" },\r\n      { label: \"Description\" },\r\n      { label: \"Sequence\", divClass: \"justify-content-end\" },\r\n      { label: \"Active\" },\r\n    ],\r\n    sequence: null,\r\n    isoption: false,\r\n    iscreation: false,\r\n    issite: false,\r\n    islist: false,\r\n    staffList: [],\r\n    code: null,\r\n    desc: null,\r\n    checked: true,\r\n    spa: true,\r\n    edit: false,\r\n    sequenceedit: null,\r\n    codeedit: null,\r\n    descedit: null,\r\n    checkededit: true,\r\n    spaedit: true,\r\n  };\r\n\r\n  employeecontent() {\r\n    this.setState({\r\n      iscreation: !this.state.iscreation,\r\n    });\r\n  }\r\n\r\n  employeelistcontent() {\r\n    this.setState({\r\n      islist: !this.state.islist,\r\n    });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.Listofemployees({});\r\n  };\r\n\r\n  updateState = (data) => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  Listofemployees = async () => {\r\n    this.updateState({ is_loading: true });\r\n    await this.props.EmpLevels().then((res) => {\r\n      console.log(res);\r\n      let { staffList, code } = this.state;\r\n\r\n      staffList = res;\r\n      console.log(staffList);\r\n      code = res[res.length - 1].levelCode;\r\n      code = Number(code) + 1;\r\n      this.setState({\r\n        staffList,\r\n        is_loading: false,\r\n        code,\r\n      });\r\n      console.log(staffList.length);\r\n    });\r\n  };\r\n\r\n  handleedit = async (itemcode) => {\r\n    let { edit, codeedit, descedit, sequenceedit, spaedit, checkededit, temp } =\r\n      this.state;\r\n    edit = true;\r\n    this.setState({ edit });\r\n    console.log(edit);\r\n    await this.props.EmpLevels().then((res) => {\r\n      console.log(res);\r\n\r\n      let objIndex = res.findIndex((obj) => obj.levelCode == itemcode);\r\n      temp = res[objIndex];\r\n      this.setState({\r\n        temp,\r\n      });\r\n      codeedit = temp.levelCode;\r\n      descedit = temp.levelDesc;\r\n      sequenceedit = temp.levelSequence;\r\n      spaedit = temp.levelSpa;\r\n      checkededit = temp.levelIsActive;\r\n      this.setState({\r\n        codeedit,\r\n        descedit,\r\n        sequenceedit,\r\n        spaedit,\r\n        checkededit,\r\n      });\r\n    });\r\n    this.employeecontent();\r\n  };\r\n  handleupdates = async () => {\r\n    let { edit, desc, checked, spa, sequence } = this.state;\r\n    let descJson = {\r\n      levelSequence: this.state.sequenceedit,\r\n      minTarget: 0,\r\n      fromSalary: 0,\r\n      toSalary: 0,\r\n      levelCode: this.state.codeedit,\r\n      levelDesc: this.state.descedit,\r\n      groupCode: \"\",\r\n      levelSpa: this.state.spaedit,\r\n      getGroupComm: true,\r\n      levelIsActive: this.state.checkededit,\r\n    };\r\n    await this.props\r\n      .updateCommon(\r\n        `EmpLevels/update?where=%7B%22levelCode%22%20%3A${this.state.codeedit}%7D\r\n    `,\r\n        descJson\r\n      )\r\n      .then((data) => {\r\n        this.Listofemployees({});\r\n        Toast({\r\n          type: \"success\",\r\n          message: \"Updated Successfully\",\r\n        });\r\n      });\r\n    edit = false;\r\n    desc = \"\";\r\n    sequence = \"\";\r\n    spa = true;\r\n    checked = true;\r\n\r\n    this.setState({ edit, desc, sequence, spa, checked });\r\n    this.employeecontent();\r\n  };\r\n\r\n  Addnew = async () => {\r\n    let { code, desc, sequence, spa, checked } = this.state;\r\n    if (code == null || desc == null) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Please check required fields\",\r\n      });\r\n    } else {\r\n      let newemp = {\r\n        levelSequence: sequence,\r\n        minTarget: 0,\r\n        fromSalary: 0,\r\n        toSalary: 0,\r\n        levelCode: code,\r\n        levelDesc: desc,\r\n        groupCode: \"\",\r\n        levelSpa: spa,\r\n        getGroupComm: true,\r\n        levelIsActive: checked,\r\n      };\r\n      await this.props\r\n        .NewEmpLevels(newemp)\r\n        .then((data) => {\r\n          this.Listofemployees();\r\n          Toast({\r\n            type: \"success\",\r\n            message: \"Successfully Added\",\r\n          });\r\n          code = \"\";\r\n          sequence = \"\";\r\n          desc = \"\";\r\n          checked = true;\r\n          spa = true;\r\n          this.setState({ code, desc, sequence, spa, checked });\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n  };\r\n\r\n  temp = ({ target: { value, name } }) => {\r\n    console.log(value, name);\r\n    let {\r\n      code,\r\n      desc,\r\n      sequence,\r\n      spa,\r\n      checked,\r\n      codeedit,\r\n      descedit,\r\n      sequenceedit,\r\n      spaedit,\r\n      checkededit,\r\n    } = this.state;\r\n    if (name == \"code\") {\r\n      code = value;\r\n      this.setState({ code });\r\n    }\r\n    if (name == \"desc\") {\r\n      desc = value;\r\n      this.setState({ desc });\r\n    }\r\n    if (name == \"sequence\") {\r\n      sequence = value;\r\n      this.setState({ sequence });\r\n    }\r\n    if (name == \"spa\") {\r\n      spa = value;\r\n      this.setState({ spa });\r\n    }\r\n    if (name == \"checked\") {\r\n      checked = value;\r\n      this.setState({ checked });\r\n    }\r\n    if (name == \"codeedit\") {\r\n      codeedit = value;\r\n      this.setState({ codeedit });\r\n    }\r\n    if (name == \"descedit\") {\r\n      descedit = value;\r\n      this.setState({ descedit });\r\n    }\r\n    if (name == \"sequenceedit\") {\r\n      sequenceedit = value;\r\n      this.setState({ sequenceedit });\r\n    }\r\n    if (name == \"spaedit\") {\r\n      spaedit = value;\r\n      this.setState({ spaedit });\r\n    }\r\n    if (name == \"checkededit\") {\r\n      checkededit = value;\r\n      this.setState({ checkededit });\r\n    }\r\n  };\r\n  render() {\r\n    let {\r\n      EmployeeDetails,\r\n      pageMeta,\r\n      staffList,\r\n      is_loading,\r\n      code,\r\n      desc,\r\n      iscreation,\r\n      islist,\r\n      sequence,\r\n      spa,\r\n      checked,\r\n      edit,\r\n      codeedit,\r\n      descedit,\r\n      sequenceedit,\r\n      checkededit,\r\n      spaedit,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid focreason\">\r\n          <h4>{t(\"Employee Master\")}</h4>\r\n          {edit == false ? (\r\n            <>\r\n              <div\r\n                className=\"d-flex  justify-content-between p-3 foc\"\r\n                onClick={() => this.employeecontent()}\r\n              >\r\n                <p>{t(\"Employee Level Creation\")}</p>\r\n                <div className=\"icons\">\r\n                  {iscreation == false ? <AiOutlinePlus /> : <AiOutlineMinus />}\r\n                </div>\r\n              </div>\r\n              {iscreation == true ? (\r\n                <div className=\"container-fluid roomcontent\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6 \">\r\n                      <div className=\"mt-3\">\r\n                        <span>{t(\"Code\")}</span>\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            value={code}\r\n                            name=\"code\"\r\n                            onChange={this.temp}\r\n                            disabled={true}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <span>{t(\"Description\")}</span>\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            value={desc}\r\n                            name=\"desc\"\r\n                            onChange={this.temp}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"mt-3\" style={{ width: 100 }}>\r\n                        <NormalButton\r\n                          mainbg={true}\r\n                          label={\"Add\"}\r\n                          onClick={() => this.Addnew()}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 \">\r\n                      <div className=\"mt-3\">\r\n                        <p>{t(\"Sequence\")}</p>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            value={sequence}\r\n                            name=\"sequence\"\r\n                            onChange={this.temp}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <div className=\"d-flex input-group\">\r\n                          <NormalCheckbox\r\n                            checked={spa}\r\n                            name=\"spa\"\r\n                            onChange={this.temp}\r\n                          />\r\n                          <p>{t(\"Allow to view all SPA\")}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <div className=\"d-flex input-group\">\r\n                          <NormalCheckbox\r\n                            checked={checked}\r\n                            name=\"checked\"\r\n                            onChange={this.temp}\r\n                          />\r\n                          <p>{t(\"Active\")}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div\r\n                className=\"d-flex  justify-content-between p-3 foc\"\r\n                onClick={() => this.employeecontent()}\r\n              >\r\n                <p>{t(\"Employee Level Creation\")}</p>\r\n                <div className=\"icons\">\r\n                  {iscreation == false ? <AiOutlinePlus /> : <AiOutlineMinus />}\r\n                </div>\r\n              </div>\r\n              {iscreation == true ? (\r\n                <div className=\"container-fluid roomcontent\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6 \">\r\n                      <div className=\"mt-3\">\r\n                        <span>{t(\"Code\")}</span>\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            value={codeedit}\r\n                            name=\"codeedit\"\r\n                            onChange={this.temp}\r\n                            disabled={true}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <span>{t(\"Description\")}</span>\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            value={descedit}\r\n                            name=\"descedit\"\r\n                            onChange={this.temp}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"mt-3\" style={{ width: 100 }}>\r\n                        <NormalButton\r\n                          mainbg={true}\r\n                          label={\"Update\"}\r\n                          onClick={() => this.handleupdates()}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 \">\r\n                      <div className=\"mt-3\">\r\n                        <p>{t(\"Sequence\")}</p>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            value={sequenceedit}\r\n                            name=\"sequenceedit\"\r\n                            onChange={this.temp}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <div className=\"d-flex input-group\">\r\n                          <NormalCheckbox\r\n                            checked={spaedit}\r\n                            name=\"spaedit\"\r\n                            onChange={this.temp}\r\n                          />\r\n                          <p>{t(\"Allow to view all SPA\")}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <div className=\"d-flex input-group\">\r\n                          <NormalCheckbox\r\n                            checked={checkededit}\r\n                            name=\"checkededit\"\r\n                            onChange={this.temp}\r\n                          />\r\n                          <p>{t(\"Active\")}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          <div\r\n            className=\"d-flex  justify-content-between p-3 mt-5 foc\"\r\n            onClick={() => this.employeelistcontent()}\r\n          >\r\n            <p>{t(\"Employee Level List\")}</p>\r\n            <div className=\"icons\">\r\n              {islist == false ? <AiOutlinePlus /> : <AiOutlineMinus />}\r\n            </div>\r\n          </div>\r\n          {islist == true ? (\r\n            <div>\r\n              <div className=\"col-12 mt-1\">\r\n                <div className=\"tab-table-content\">\r\n                  <p className=\"mt-3\">{t(\"List of Employee Level\")}</p>\r\n                  <div className=\"py-4\">\r\n                    <div className=\"table-container\">\r\n                      <TableWrapper\r\n                        headerDetails={EmployeeDetails}\r\n                        queryHandler={this.handlePagination}\r\n                        pageMeta={pageMeta}\r\n                      >\r\n                        {is_loading ? (\r\n                          <tr>\r\n                            <td colSpan=\"7\">\r\n                              <div class=\"d-flex mt-5 align-items-center justify-content-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                  <span class=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        ) : staffList.length > 0 ? (\r\n                          staffList.map(\r\n                            (\r\n                              {\r\n                                levelCode,\r\n                                levelDesc,\r\n                                levelSequence,\r\n                                levelIsActive,\r\n                              },\r\n                              index\r\n                            ) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td>\r\n                                    <div\r\n                                      className=\"text-right text-success cursor-pointer\"\r\n                                      onClick={() => this.handleedit(levelCode)}\r\n                                    >\r\n                                      {levelCode}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"text-left\">{levelDesc}</div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"text-right\">\r\n                                      {levelSequence}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"text-left\">\r\n                                      {levelIsActive == true ? \"Yes\" : \"No\"}\r\n                                    </div>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            }\r\n                          )\r\n                        ) : null}\r\n                      </TableWrapper>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      EmpLevels,\r\n      NewEmpLevels,\r\n      updateCommon,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const Employeemaster = withTranslation()(\r\n  connect(null, mapDispatchToProps)(EmployeemasterClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}