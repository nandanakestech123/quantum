{"ast":null,"code":"/**\r\n * DevExtreme (viz/gauges/bar_gauge.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.dxBarGauge = void 0;\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _object = require(\"../../core/utils/object\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _extend2 = require(\"../../core/utils/extend\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _base_gauge = require(\"./base_gauge\");\n\nvar _circular_gauge = _interopRequireDefault(require(\"./circular_gauge\"));\n\nvar _legend = require(\"../components/legend\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar PI_DIV_180 = Math.PI / 180;\nvar _abs = Math.abs;\nvar _round = Math.round;\nvar _floor = Math.floor;\nvar _min = Math.min;\nvar _max = Math.max;\nvar _getSampleText = _base_gauge.getSampleText;\nvar _formatValue = _base_gauge.formatValue;\nvar _compareArrays = _base_gauge.compareArrays;\nvar _isArray = Array.isArray;\nvar _convertAngleToRendererSpace = _utils.convertAngleToRendererSpace;\nvar _getCosAndSin = _utils.getCosAndSin;\nvar _patchFontOptions = _utils.patchFontOptions;\nvar _Number = Number;\nvar _isFinite = isFinite;\nvar _noop = _common.noop;\nvar _extend = _extend2.extend;\nvar OPTION_VALUES = \"values\";\nvar BarWrapper;\n\nvar dxBarGauge = _base_gauge.dxBaseGauge.inherit({\n  _rootClass: \"dxbg-bar-gauge\",\n  _themeSection: \"barGauge\",\n  _fontFields: [\"label.font\", \"legend.font\", \"legend.title.font\", \"legend.title.subtitle.font\"],\n  _initCore: function () {\n    var that = this;\n    that.callBase.apply(that, arguments);\n    that._barsGroup = that._renderer.g().attr({\n      \"class\": \"dxbg-bars\"\n    }).linkOn(that._renderer.root, \"bars\");\n    that._values = [];\n    that._context = {\n      renderer: that._renderer,\n      translator: that._translator,\n      tracker: that._tracker,\n      group: that._barsGroup\n    };\n\n    that._animateStep = function (pos) {\n      var bars = that._bars;\n      var i;\n      var ii;\n\n      for (i = 0, ii = bars.length; i < ii; ++i) {\n        bars[i].animate(pos);\n      }\n    };\n\n    that._animateComplete = function () {\n      that._bars.forEach(function (bar) {\n        return bar.endAnimation();\n      });\n\n      that._checkOverlap();\n    };\n  },\n  _disposeCore: function () {\n    var that = this;\n\n    that._barsGroup.linkOff();\n\n    that._barsGroup = that._values = that._context = that._animateStep = that._animateComplete = null;\n    that.callBase.apply(that, arguments);\n  },\n  _setupDomainCore: function () {\n    var that = this;\n    var startValue = that.option(\"startValue\");\n    var endValue = that.option(\"endValue\");\n    _isFinite(startValue) || (startValue = 0);\n    _isFinite(endValue) || (endValue = 100);\n\n    that._translator.setDomain(startValue, endValue);\n\n    that._baseValue = that._translator.adjust(that.option(\"baseValue\"));\n    _isFinite(that._baseValue) || (that._baseValue = startValue < endValue ? startValue : endValue);\n  },\n  _getDefaultSize: function () {\n    return {\n      width: 300,\n      height: 300\n    };\n  },\n  _setupCodomain: _circular_gauge.default.prototype._setupCodomain,\n  _getApproximateScreenRange: function () {\n    var that = this;\n    var sides = that._area.sides;\n    var width = that._canvas.width / (sides.right - sides.left);\n    var height = that._canvas.height / (sides.down - sides.up);\n    var r = width < height ? width : height;\n    return -that._translator.getCodomainRange() * r * PI_DIV_180;\n  },\n  _setupAnimationSettings: function () {\n    var that = this;\n    that.callBase.apply(that, arguments);\n\n    if (that._animationSettings) {\n      that._animationSettings.step = that._animateStep;\n      that._animationSettings.complete = that._animateComplete;\n    }\n  },\n  _cleanContent: function () {\n    var that = this;\n\n    that._barsGroup.linkRemove();\n\n    that._animationSettings && that._barsGroup.stopAnimation();\n\n    that._barsGroup.clear();\n  },\n  _renderContent: function () {\n    var that = this;\n    var labelOptions = that.option(\"label\");\n    var text;\n    var bBox;\n    var context = that._context;\n\n    that._barsGroup.linkAppend();\n\n    context.textEnabled = void 0 === labelOptions || labelOptions && (!(\"visible\" in labelOptions) || labelOptions.visible);\n\n    if (context.textEnabled) {\n      context.textColor = labelOptions && labelOptions.font && labelOptions.font.color || null;\n      labelOptions = _extend(true, {}, that._themeManager.theme().label, labelOptions);\n      context.formatOptions = {\n        format: void 0 !== labelOptions.format ? labelOptions.format : that._defaultFormatOptions,\n        customizeText: labelOptions.customizeText\n      };\n      context.textOptions = {\n        align: \"center\"\n      };\n      context.fontStyles = _patchFontOptions(_extend({}, that._themeManager.theme().label.font, labelOptions.font, {\n        color: null\n      }));\n      that._textIndent = labelOptions.indent > 0 ? _Number(labelOptions.indent) : 0;\n      context.lineWidth = labelOptions.connectorWidth > 0 ? _Number(labelOptions.connectorWidth) : 0;\n      context.lineColor = labelOptions.connectorColor || null;\n      text = that._renderer.text(_getSampleText(that._translator, context.formatOptions), 0, 0).attr(context.textOptions).css(context.fontStyles).append(that._barsGroup);\n      bBox = text.getBBox();\n      text.remove();\n      context.textY = bBox.y;\n      context.textWidth = bBox.width;\n      context.textHeight = bBox.height;\n    }\n\n    _circular_gauge.default.prototype._applyMainLayout.call(that);\n\n    that._renderBars();\n  },\n  _measureMainElements: function () {\n    var result = {\n      maxRadius: this._area.radius\n    };\n\n    if (this._context.textEnabled) {\n      result.horizontalMargin = this._context.textWidth;\n      result.verticalMargin = this._context.textHeight;\n      result.inverseHorizontalMargin = this._context.textWidth / 2;\n      result.inverseVerticalMargin = this._context.textHeight / 2;\n    }\n\n    return result;\n  },\n  _renderBars: function () {\n    var that = this;\n\n    var options = _extend({}, that._themeManager.theme(), that.option());\n\n    var radius;\n    var area = that._area;\n    var relativeInnerRadius = options.relativeInnerRadius > 0 && options.relativeInnerRadius < 1 ? _Number(options.relativeInnerRadius) : .1;\n    radius = area.radius;\n\n    if (that._context.textEnabled) {\n      that._textIndent = _round(_min(that._textIndent, radius / 2));\n      radius -= that._textIndent;\n    }\n\n    that._outerRadius = _floor(radius);\n    that._innerRadius = _floor(radius * relativeInnerRadius);\n    that._barSpacing = options.barSpacing > 0 ? _Number(options.barSpacing) : 0;\n\n    _extend(that._context, {\n      backgroundColor: options.backgroundColor,\n      x: area.x,\n      y: area.y,\n      startAngle: area.startCoord,\n      endAngle: area.endCoord,\n      baseAngle: that._translator.translate(that._baseValue)\n    });\n\n    that._arrangeBars();\n  },\n  _arrangeBars: function () {\n    var that = this;\n    var radius = that._outerRadius - that._innerRadius;\n    var context = that._context;\n    var i;\n    var count = that._bars.length;\n\n    that._beginValueChanging();\n\n    context.barSize = count > 0 ? _max((radius - (count - 1) * that._barSpacing) / count, 1) : 0;\n    var spacing = count > 1 ? _max(_min((radius - count * context.barSize) / (count - 1), that._barSpacing), 0) : 0;\n\n    var _count = _min(_floor((radius + spacing) / context.barSize), count);\n\n    that._setBarsCount(count);\n\n    radius = that._outerRadius;\n    context.textRadius = radius;\n    context.textIndent = that._textIndent;\n\n    that._palette.reset();\n\n    var unitOffset = context.barSize + spacing;\n\n    var colors = that._palette.generateColors(_count);\n\n    for (i = 0; i < _count; ++i, radius -= unitOffset) {\n      that._bars[i].arrange({\n        radius: radius,\n        color: colors[i]\n      });\n    }\n\n    for (var _i = _count; _i < count; _i++) {\n      that._bars[_i].hide();\n    }\n\n    if (that._animationSettings && !that._noAnimation) {\n      that._animateBars();\n    } else {\n      that._updateBars();\n    }\n\n    that._endValueChanging();\n  },\n  _setBarsCount: function () {\n    var that = this;\n\n    if (that._bars.length > 0) {\n      if (that._dummyBackground) {\n        that._dummyBackground.dispose();\n\n        that._dummyBackground = null;\n      }\n    } else {\n      if (!that._dummyBackground) {\n        that._dummyBackground = that._renderer.arc().attr({\n          \"stroke-linejoin\": \"round\"\n        });\n      }\n\n      that._dummyBackground.attr({\n        x: that._context.x,\n        y: that._context.y,\n        outerRadius: that._outerRadius,\n        innerRadius: that._innerRadius,\n        startAngle: that._context.endAngle,\n        endAngle: that._context.startAngle,\n        fill: that._context.backgroundColor\n      }).append(that._barsGroup);\n    }\n  },\n  _updateBars: function () {\n    this._bars.forEach(function (bar) {\n      return bar.applyValue();\n    });\n\n    this._checkOverlap();\n  },\n  _checkOverlap: function () {\n    var that = this;\n    var bars = that._bars;\n    var overlapStrategy = (0, _utils.normalizeEnum)(that._getOption(\"resolveLabelOverlapping\", true));\n\n    if (\"none\" === overlapStrategy) {\n      return;\n    }\n\n    var sortedBars = bars.concat().sort(function (a, b) {\n      return a.getValue() - b.getValue();\n    });\n    var currentIndex = 0;\n    var nextIndex = 1;\n\n    while (currentIndex < sortedBars.length && nextIndex < sortedBars.length) {\n      var current = sortedBars[currentIndex];\n      var next = sortedBars[nextIndex];\n\n      if (current.checkIntersect(next)) {\n        next.hideLabel();\n        nextIndex++;\n      } else {\n        currentIndex = nextIndex;\n        nextIndex = currentIndex + 1;\n      }\n    }\n  },\n  _animateBars: function () {\n    var that = this;\n    var i;\n    var ii = that._bars.length;\n\n    if (ii > 0) {\n      for (i = 0; i < ii; ++i) {\n        that._bars[i].beginAnimation();\n      }\n\n      that._barsGroup.animate({\n        _: 0\n      }, that._animationSettings);\n    }\n  },\n  _buildNodes: function () {\n    var that = this;\n\n    var options = that._options.silent();\n\n    that._palette = that._themeManager.createPalette(options.palette, {\n      useHighlight: true,\n      extensionMode: options.paletteExtensionMode\n    });\n\n    that._palette.reset();\n\n    that._bars = that._bars || [];\n    that._animationSettings && that._barsGroup.stopAnimation();\n\n    var barValues = that._values.filter(_isFinite);\n\n    var count = barValues.length;\n\n    if (that._bars.length > count) {\n      var ii = that._bars.length;\n\n      for (var i = count; i < ii; ++i) {\n        that._bars[i].dispose();\n      }\n\n      that._bars.splice(count, ii - count);\n    } else {\n      if (that._bars.length < count) {\n        for (var _i2 = that._bars.length; _i2 < count; ++_i2) {\n          that._bars.push(new BarWrapper(_i2, that._context));\n        }\n      }\n    }\n\n    that._bars.forEach(function (bar, index) {\n      bar.update({\n        color: that._palette.getNextColor(count),\n        value: barValues[index]\n      });\n    });\n  },\n  _updateValues: function (values) {\n    var that = this;\n    var list = _isArray(values) && values || _isFinite(values) && [values] || [];\n    var i;\n    var ii = list.length;\n    var value;\n    that._values.length = ii;\n\n    for (i = 0; i < ii; ++i) {\n      value = list[i];\n      that._values[i] = value = _Number(_isFinite(value) ? value : that._values[i]);\n    }\n\n    if (!that._resizing) {\n      if (!_compareArrays(that._values, that.option(OPTION_VALUES))) {\n        that.option(OPTION_VALUES, that._values.slice());\n      }\n    }\n\n    this._change([\"NODES\"]);\n  },\n  values: function (arg) {\n    if (void 0 !== arg) {\n      this._updateValues(arg);\n\n      return this;\n    } else {\n      return this._values.slice(0);\n    }\n  },\n  _optionChangesMap: {\n    backgroundColor: \"MOSTLY_TOTAL\",\n    relativeInnerRadius: \"MOSTLY_TOTAL\",\n    barSpacing: \"MOSTLY_TOTAL\",\n    label: \"MOSTLY_TOTAL\",\n    resolveLabelOverlapping: \"MOSTLY_TOTAL\",\n    palette: \"MOSTLY_TOTAL\",\n    paletteExtensionMode: \"MOSTLY_TOTAL\",\n    values: \"VALUES\"\n  },\n  _change_VALUES: function () {\n    this._updateValues(this.option(OPTION_VALUES));\n  },\n  _factory: (0, _object.clone)(_base_gauge.dxBaseGauge.prototype._factory),\n  _optionChangesOrder: [\"VALUES\", \"NODES\"],\n  _initialChanges: [\"VALUES\"],\n  _change_NODES: function () {\n    this._buildNodes();\n  },\n  _change_MOSTLY_TOTAL: function () {\n    this._change([\"NODES\"]);\n\n    this.callBase();\n  },\n  _proxyData: [],\n  _getLegendData: function () {\n    var that = this;\n    var formatOptions = {};\n\n    var options = that._options.silent();\n\n    var labelFormatOptions = (options.label || {}).format;\n    var legendFormatOptions = (options.legend || {}).itemTextFormat;\n\n    if (legendFormatOptions) {\n      formatOptions.format = legendFormatOptions;\n    } else {\n      formatOptions.format = labelFormatOptions || that._defaultFormatOptions;\n    }\n\n    return (this._bars || []).map(function (b) {\n      return {\n        id: b.index,\n        item: {\n          value: b.getValue(),\n          color: b.getColor(),\n          index: b.index\n        },\n        text: _formatValue(b.getValue(), formatOptions),\n        visible: true,\n        states: {\n          normal: {\n            fill: b.getColor()\n          }\n        }\n      };\n    });\n  }\n});\n\nexports.dxBarGauge = dxBarGauge;\n\nBarWrapper = function (index, context) {\n  var that = this;\n  that._context = context;\n  that._tracker = context.renderer.arc().attr({\n    \"stroke-linejoin\": \"round\"\n  });\n  that.index = index;\n};\n\n_extend(BarWrapper.prototype, {\n  dispose: function () {\n    var that = this;\n\n    that._background.dispose();\n\n    that._bar.dispose();\n\n    if (that._context.textEnabled) {\n      that._line.dispose();\n\n      that._text.dispose();\n    }\n\n    that._context.tracker.detach(that._tracker);\n\n    that._context = that._settings = that._background = that._bar = that._line = that._text = that._tracker = null;\n    return that;\n  },\n  arrange: function (options) {\n    var that = this;\n    var context = that._context;\n    this._visible = true;\n    context.tracker.attach(that._tracker, that, {\n      index: that.index\n    });\n    that._background = context.renderer.arc().attr({\n      \"stroke-linejoin\": \"round\",\n      fill: context.backgroundColor\n    }).append(context.group);\n    that._settings = that._settings || {\n      x: context.x,\n      y: context.y,\n      startAngle: context.baseAngle,\n      endAngle: context.baseAngle\n    };\n    that._bar = context.renderer.arc().attr(_extend({\n      \"stroke-linejoin\": \"round\"\n    }, that._settings)).append(context.group);\n\n    if (context.textEnabled) {\n      that._line = context.renderer.path([], \"line\").attr({\n        \"stroke-width\": context.lineWidth\n      }).append(context.group);\n      that._text = context.renderer.text().css(context.fontStyles).attr(context.textOptions).append(context.group);\n    }\n\n    that._angle = isFinite(that._angle) ? that._angle : context.baseAngle;\n    that._settings.outerRadius = options.radius;\n    that._settings.innerRadius = options.radius - context.barSize;\n    that._settings.x = context.x;\n    that._settings.y = context.y;\n\n    that._background.attr(_extend({}, that._settings, {\n      startAngle: context.endAngle,\n      endAngle: context.startAngle,\n      fill: that._context.backgroundColor\n    }));\n\n    that._bar.attr({\n      x: context.x,\n      y: context.y,\n      outerRadius: that._settings.outerRadius,\n      innerRadius: that._settings.innerRadius,\n      fill: that._color\n    });\n\n    that._tracker.attr(that._settings);\n\n    if (context.textEnabled) {\n      that._line.attr({\n        points: [context.x, context.y - that._settings.innerRadius, context.x, context.y - context.textRadius - context.textIndent],\n        stroke: context.lineColor || that._color\n      }).sharp();\n\n      that._text.css({\n        fill: context.textColor || that._color\n      });\n    }\n\n    return that;\n  },\n  getTooltipParameters: function () {\n    var that = this;\n\n    var cosSin = _getCosAndSin((that._angle + that._context.baseAngle) / 2);\n\n    return {\n      x: _round(that._context.x + (that._settings.outerRadius + that._settings.innerRadius) / 2 * cosSin.cos),\n      y: _round(that._context.y - (that._settings.outerRadius + that._settings.innerRadius) / 2 * cosSin.sin),\n      offset: 0,\n      color: that._color,\n      value: that._value\n    };\n  },\n  setAngle: function (angle) {\n    var that = this;\n    var context = that._context;\n    var settings = that._settings;\n    var cosSin;\n    that._angle = angle;\n    setAngles(settings, context.baseAngle, angle);\n\n    that._bar.attr(settings);\n\n    that._tracker.attr(settings);\n\n    if (context.textEnabled) {\n      cosSin = _getCosAndSin(angle);\n      var indent = context.textIndent;\n      var radius = context.textRadius + indent;\n      var x = context.x + radius * cosSin.cos;\n      var y = context.y - radius * cosSin.sin;\n      var halfWidth = .5 * context.textWidth;\n      var textHeight = context.textHeight;\n      var textY = context.textY;\n\n      if (_abs(x - context.x) > indent) {\n        x += x < context.x ? -halfWidth : halfWidth;\n      }\n\n      if (_abs(y - context.y) <= indent) {\n        y -= textY + .5 * textHeight;\n      } else {\n        y -= y < context.y ? textY + textHeight : textY;\n      }\n\n      var text = _formatValue(that._value, context.formatOptions, {\n        index: that.index\n      });\n\n      var visibility = \"\" === text ? \"hidden\" : null;\n\n      that._text.attr({\n        text: text,\n        x: x,\n        y: y,\n        visibility: visibility\n      });\n\n      that._line.attr({\n        visibility: visibility\n      });\n\n      that._line.rotate(_convertAngleToRendererSpace(angle), context.x, context.y);\n    }\n\n    return that;\n  },\n  hideLabel: function () {\n    this._text.attr({\n      visibility: \"hidden\"\n    });\n\n    this._line.attr({\n      visibility: \"hidden\"\n    });\n  },\n  checkIntersect: function (anotherBar) {\n    var coords = this.calculateLabelCoords();\n    var anotherCoords = anotherBar.calculateLabelCoords();\n\n    if (!coords || !anotherCoords) {\n      return false;\n    }\n\n    var width = Math.max(0, Math.min(coords.bottomRight.x, anotherCoords.bottomRight.x) - Math.max(coords.topLeft.x, anotherCoords.topLeft.x));\n    var height = Math.max(0, Math.min(coords.bottomRight.y, anotherCoords.bottomRight.y) - Math.max(coords.topLeft.y, anotherCoords.topLeft.y));\n    return width * height !== 0;\n  },\n  calculateLabelCoords: function () {\n    if (!this._text) {\n      return;\n    }\n\n    var box = this._text.getBBox();\n\n    return {\n      topLeft: {\n        x: box.x,\n        y: box.y\n      },\n      bottomRight: {\n        x: box.x + box.width,\n        y: box.y + box.height\n      }\n    };\n  },\n  _processValue: function (value) {\n    return this._context.translator.translate(this._context.translator.adjust(value));\n  },\n  applyValue: function () {\n    if (!this._visible) {\n      return this;\n    }\n\n    return this.setAngle(this._processValue(this.getValue()));\n  },\n  update: function (_ref) {\n    var color = _ref.color,\n        value = _ref.value;\n    this._color = color;\n    this._value = value;\n  },\n  hide: function () {\n    this._visible = false;\n  },\n  getColor: function () {\n    return this._color;\n  },\n  getValue: function () {\n    return this._value;\n  },\n  beginAnimation: function () {\n    if (!this._visible) {\n      return this;\n    }\n\n    var that = this;\n\n    var angle = this._processValue(this.getValue());\n\n    if (!compareFloats(that._angle, angle)) {\n      that._start = that._angle;\n      that._delta = angle - that._angle;\n\n      that._tracker.attr({\n        visibility: \"hidden\"\n      });\n\n      if (that._context.textEnabled) {\n        that._line.attr({\n          visibility: \"hidden\"\n        });\n\n        that._text.attr({\n          visibility: \"hidden\"\n        });\n      }\n    } else {\n      that.animate = _noop;\n      that.setAngle(that._angle);\n    }\n  },\n  animate: function (pos) {\n    if (!this._visible) {\n      return this;\n    }\n\n    var that = this;\n    that._angle = that._start + that._delta * pos;\n    setAngles(that._settings, that._context.baseAngle, that._angle);\n\n    that._bar.attr(that._settings);\n  },\n  endAnimation: function () {\n    var that = this;\n\n    if (void 0 !== that._delta) {\n      if (compareFloats(that._angle, that._start + that._delta)) {\n        that._tracker.attr({\n          visibility: null\n        });\n\n        that.setAngle(that._angle);\n      }\n    } else {\n      delete that.animate;\n    }\n\n    delete that._start;\n    delete that._delta;\n  }\n});\n\nfunction setAngles(target, angle1, angle2) {\n  target.startAngle = angle1 < angle2 ? angle1 : angle2;\n  target.endAngle = angle1 < angle2 ? angle2 : angle1;\n}\n\nfunction compareFloats(value1, value2) {\n  return _abs(value1 - value2) < 1e-4;\n}\n\n(0, _component_registrator.default)(\"dxBarGauge\", dxBarGauge);\ndxBarGauge.addPlugin(_legend.plugin);","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/gauges/bar_gauge.js"],"names":["exports","dxBarGauge","_component_registrator","_interopRequireDefault","require","_object","_common","_extend2","_utils","_base_gauge","_circular_gauge","_legend","obj","__esModule","PI_DIV_180","Math","PI","_abs","abs","_round","round","_floor","floor","_min","min","_max","max","_getSampleText","getSampleText","_formatValue","formatValue","_compareArrays","compareArrays","_isArray","Array","isArray","_convertAngleToRendererSpace","convertAngleToRendererSpace","_getCosAndSin","getCosAndSin","_patchFontOptions","patchFontOptions","_Number","Number","_isFinite","isFinite","_noop","noop","_extend","extend","OPTION_VALUES","BarWrapper","dxBaseGauge","inherit","_rootClass","_themeSection","_fontFields","_initCore","that","callBase","apply","arguments","_barsGroup","_renderer","g","attr","linkOn","root","_values","_context","renderer","translator","_translator","tracker","_tracker","group","_animateStep","pos","bars","_bars","i","ii","length","animate","_animateComplete","forEach","bar","endAnimation","_checkOverlap","_disposeCore","linkOff","_setupDomainCore","startValue","option","endValue","setDomain","_baseValue","adjust","_getDefaultSize","width","height","_setupCodomain","default","prototype","_getApproximateScreenRange","sides","_area","_canvas","right","left","down","up","r","getCodomainRange","_setupAnimationSettings","_animationSettings","step","complete","_cleanContent","linkRemove","stopAnimation","clear","_renderContent","labelOptions","text","bBox","context","linkAppend","textEnabled","visible","textColor","font","color","_themeManager","theme","label","formatOptions","format","_defaultFormatOptions","customizeText","textOptions","align","fontStyles","_textIndent","indent","lineWidth","connectorWidth","lineColor","connectorColor","css","append","getBBox","remove","textY","y","textWidth","textHeight","_applyMainLayout","call","_renderBars","_measureMainElements","result","maxRadius","radius","horizontalMargin","verticalMargin","inverseHorizontalMargin","inverseVerticalMargin","options","area","relativeInnerRadius","_outerRadius","_innerRadius","_barSpacing","barSpacing","backgroundColor","x","startAngle","startCoord","endAngle","endCoord","baseAngle","translate","_arrangeBars","count","_beginValueChanging","barSize","spacing","_count","_setBarsCount","textRadius","textIndent","_palette","reset","unitOffset","colors","generateColors","arrange","_i","hide","_noAnimation","_animateBars","_updateBars","_endValueChanging","_dummyBackground","dispose","arc","outerRadius","innerRadius","fill","applyValue","overlapStrategy","normalizeEnum","_getOption","sortedBars","concat","sort","a","b","getValue","currentIndex","nextIndex","current","next","checkIntersect","hideLabel","beginAnimation","_","_buildNodes","_options","silent","createPalette","palette","useHighlight","extensionMode","paletteExtensionMode","barValues","filter","splice","_i2","push","index","update","getNextColor","value","_updateValues","values","list","_resizing","slice","_change","arg","_optionChangesMap","resolveLabelOverlapping","_change_VALUES","_factory","clone","_optionChangesOrder","_initialChanges","_change_NODES","_change_MOSTLY_TOTAL","_proxyData","_getLegendData","labelFormatOptions","legendFormatOptions","legend","itemTextFormat","map","id","item","getColor","states","normal","_background","_bar","_line","_text","detach","_settings","_visible","attach","path","_angle","_color","points","stroke","sharp","getTooltipParameters","cosSin","cos","sin","offset","_value","setAngle","angle","settings","setAngles","halfWidth","visibility","rotate","anotherBar","coords","calculateLabelCoords","anotherCoords","bottomRight","topLeft","box","_processValue","_ref","compareFloats","_start","_delta","target","angle1","angle2","value1","value2","addPlugin","plugin"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/gauges/bar_gauge.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.dxBarGauge = void 0;\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _object = require(\"../../core/utils/object\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _extend2 = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _base_gauge = require(\"./base_gauge\");\r\nvar _circular_gauge = _interopRequireDefault(require(\"./circular_gauge\"));\r\nvar _legend = require(\"../components/legend\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PI_DIV_180 = Math.PI / 180;\r\nvar _abs = Math.abs;\r\nvar _round = Math.round;\r\nvar _floor = Math.floor;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _getSampleText = _base_gauge.getSampleText;\r\nvar _formatValue = _base_gauge.formatValue;\r\nvar _compareArrays = _base_gauge.compareArrays;\r\nvar _isArray = Array.isArray;\r\nvar _convertAngleToRendererSpace = _utils.convertAngleToRendererSpace;\r\nvar _getCosAndSin = _utils.getCosAndSin;\r\nvar _patchFontOptions = _utils.patchFontOptions;\r\nvar _Number = Number;\r\nvar _isFinite = isFinite;\r\nvar _noop = _common.noop;\r\nvar _extend = _extend2.extend;\r\nvar OPTION_VALUES = \"values\";\r\nvar BarWrapper;\r\nvar dxBarGauge = _base_gauge.dxBaseGauge.inherit({\r\n    _rootClass: \"dxbg-bar-gauge\",\r\n    _themeSection: \"barGauge\",\r\n    _fontFields: [\"label.font\", \"legend.font\", \"legend.title.font\", \"legend.title.subtitle.font\"],\r\n    _initCore: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        that._barsGroup = that._renderer.g().attr({\r\n            \"class\": \"dxbg-bars\"\r\n        }).linkOn(that._renderer.root, \"bars\");\r\n        that._values = [];\r\n        that._context = {\r\n            renderer: that._renderer,\r\n            translator: that._translator,\r\n            tracker: that._tracker,\r\n            group: that._barsGroup\r\n        };\r\n        that._animateStep = function(pos) {\r\n            var bars = that._bars;\r\n            var i;\r\n            var ii;\r\n            for (i = 0, ii = bars.length; i < ii; ++i) {\r\n                bars[i].animate(pos)\r\n            }\r\n        };\r\n        that._animateComplete = function() {\r\n            that._bars.forEach(function(bar) {\r\n                return bar.endAnimation()\r\n            });\r\n            that._checkOverlap()\r\n        }\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        that._barsGroup.linkOff();\r\n        that._barsGroup = that._values = that._context = that._animateStep = that._animateComplete = null;\r\n        that.callBase.apply(that, arguments)\r\n    },\r\n    _setupDomainCore: function() {\r\n        var that = this;\r\n        var startValue = that.option(\"startValue\");\r\n        var endValue = that.option(\"endValue\");\r\n        _isFinite(startValue) || (startValue = 0);\r\n        _isFinite(endValue) || (endValue = 100);\r\n        that._translator.setDomain(startValue, endValue);\r\n        that._baseValue = that._translator.adjust(that.option(\"baseValue\"));\r\n        _isFinite(that._baseValue) || (that._baseValue = startValue < endValue ? startValue : endValue)\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 300,\r\n            height: 300\r\n        }\r\n    },\r\n    _setupCodomain: _circular_gauge.default.prototype._setupCodomain,\r\n    _getApproximateScreenRange: function() {\r\n        var that = this;\r\n        var sides = that._area.sides;\r\n        var width = that._canvas.width / (sides.right - sides.left);\r\n        var height = that._canvas.height / (sides.down - sides.up);\r\n        var r = width < height ? width : height;\r\n        return -that._translator.getCodomainRange() * r * PI_DIV_180\r\n    },\r\n    _setupAnimationSettings: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        if (that._animationSettings) {\r\n            that._animationSettings.step = that._animateStep;\r\n            that._animationSettings.complete = that._animateComplete\r\n        }\r\n    },\r\n    _cleanContent: function() {\r\n        var that = this;\r\n        that._barsGroup.linkRemove();\r\n        that._animationSettings && that._barsGroup.stopAnimation();\r\n        that._barsGroup.clear()\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        var labelOptions = that.option(\"label\");\r\n        var text;\r\n        var bBox;\r\n        var context = that._context;\r\n        that._barsGroup.linkAppend();\r\n        context.textEnabled = void 0 === labelOptions || labelOptions && (!(\"visible\" in labelOptions) || labelOptions.visible);\r\n        if (context.textEnabled) {\r\n            context.textColor = labelOptions && labelOptions.font && labelOptions.font.color || null;\r\n            labelOptions = _extend(true, {}, that._themeManager.theme().label, labelOptions);\r\n            context.formatOptions = {\r\n                format: void 0 !== labelOptions.format ? labelOptions.format : that._defaultFormatOptions,\r\n                customizeText: labelOptions.customizeText\r\n            };\r\n            context.textOptions = {\r\n                align: \"center\"\r\n            };\r\n            context.fontStyles = _patchFontOptions(_extend({}, that._themeManager.theme().label.font, labelOptions.font, {\r\n                color: null\r\n            }));\r\n            that._textIndent = labelOptions.indent > 0 ? _Number(labelOptions.indent) : 0;\r\n            context.lineWidth = labelOptions.connectorWidth > 0 ? _Number(labelOptions.connectorWidth) : 0;\r\n            context.lineColor = labelOptions.connectorColor || null;\r\n            text = that._renderer.text(_getSampleText(that._translator, context.formatOptions), 0, 0).attr(context.textOptions).css(context.fontStyles).append(that._barsGroup);\r\n            bBox = text.getBBox();\r\n            text.remove();\r\n            context.textY = bBox.y;\r\n            context.textWidth = bBox.width;\r\n            context.textHeight = bBox.height\r\n        }\r\n        _circular_gauge.default.prototype._applyMainLayout.call(that);\r\n        that._renderBars()\r\n    },\r\n    _measureMainElements: function() {\r\n        var result = {\r\n            maxRadius: this._area.radius\r\n        };\r\n        if (this._context.textEnabled) {\r\n            result.horizontalMargin = this._context.textWidth;\r\n            result.verticalMargin = this._context.textHeight;\r\n            result.inverseHorizontalMargin = this._context.textWidth / 2;\r\n            result.inverseVerticalMargin = this._context.textHeight / 2\r\n        }\r\n        return result\r\n    },\r\n    _renderBars: function() {\r\n        var that = this;\r\n        var options = _extend({}, that._themeManager.theme(), that.option());\r\n        var radius;\r\n        var area = that._area;\r\n        var relativeInnerRadius = options.relativeInnerRadius > 0 && options.relativeInnerRadius < 1 ? _Number(options.relativeInnerRadius) : .1;\r\n        radius = area.radius;\r\n        if (that._context.textEnabled) {\r\n            that._textIndent = _round(_min(that._textIndent, radius / 2));\r\n            radius -= that._textIndent\r\n        }\r\n        that._outerRadius = _floor(radius);\r\n        that._innerRadius = _floor(radius * relativeInnerRadius);\r\n        that._barSpacing = options.barSpacing > 0 ? _Number(options.barSpacing) : 0;\r\n        _extend(that._context, {\r\n            backgroundColor: options.backgroundColor,\r\n            x: area.x,\r\n            y: area.y,\r\n            startAngle: area.startCoord,\r\n            endAngle: area.endCoord,\r\n            baseAngle: that._translator.translate(that._baseValue)\r\n        });\r\n        that._arrangeBars()\r\n    },\r\n    _arrangeBars: function() {\r\n        var that = this;\r\n        var radius = that._outerRadius - that._innerRadius;\r\n        var context = that._context;\r\n        var i;\r\n        var count = that._bars.length;\r\n        that._beginValueChanging();\r\n        context.barSize = count > 0 ? _max((radius - (count - 1) * that._barSpacing) / count, 1) : 0;\r\n        var spacing = count > 1 ? _max(_min((radius - count * context.barSize) / (count - 1), that._barSpacing), 0) : 0;\r\n        var _count = _min(_floor((radius + spacing) / context.barSize), count);\r\n        that._setBarsCount(count);\r\n        radius = that._outerRadius;\r\n        context.textRadius = radius;\r\n        context.textIndent = that._textIndent;\r\n        that._palette.reset();\r\n        var unitOffset = context.barSize + spacing;\r\n        var colors = that._palette.generateColors(_count);\r\n        for (i = 0; i < _count; ++i, radius -= unitOffset) {\r\n            that._bars[i].arrange({\r\n                radius: radius,\r\n                color: colors[i]\r\n            })\r\n        }\r\n        for (var _i = _count; _i < count; _i++) {\r\n            that._bars[_i].hide()\r\n        }\r\n        if (that._animationSettings && !that._noAnimation) {\r\n            that._animateBars()\r\n        } else {\r\n            that._updateBars()\r\n        }\r\n        that._endValueChanging()\r\n    },\r\n    _setBarsCount: function() {\r\n        var that = this;\r\n        if (that._bars.length > 0) {\r\n            if (that._dummyBackground) {\r\n                that._dummyBackground.dispose();\r\n                that._dummyBackground = null\r\n            }\r\n        } else {\r\n            if (!that._dummyBackground) {\r\n                that._dummyBackground = that._renderer.arc().attr({\r\n                    \"stroke-linejoin\": \"round\"\r\n                })\r\n            }\r\n            that._dummyBackground.attr({\r\n                x: that._context.x,\r\n                y: that._context.y,\r\n                outerRadius: that._outerRadius,\r\n                innerRadius: that._innerRadius,\r\n                startAngle: that._context.endAngle,\r\n                endAngle: that._context.startAngle,\r\n                fill: that._context.backgroundColor\r\n            }).append(that._barsGroup)\r\n        }\r\n    },\r\n    _updateBars: function() {\r\n        this._bars.forEach(function(bar) {\r\n            return bar.applyValue()\r\n        });\r\n        this._checkOverlap()\r\n    },\r\n    _checkOverlap: function() {\r\n        var that = this;\r\n        var bars = that._bars;\r\n        var overlapStrategy = (0, _utils.normalizeEnum)(that._getOption(\"resolveLabelOverlapping\", true));\r\n        if (\"none\" === overlapStrategy) {\r\n            return\r\n        }\r\n        var sortedBars = bars.concat().sort(function(a, b) {\r\n            return a.getValue() - b.getValue()\r\n        });\r\n        var currentIndex = 0;\r\n        var nextIndex = 1;\r\n        while (currentIndex < sortedBars.length && nextIndex < sortedBars.length) {\r\n            var current = sortedBars[currentIndex];\r\n            var next = sortedBars[nextIndex];\r\n            if (current.checkIntersect(next)) {\r\n                next.hideLabel();\r\n                nextIndex++\r\n            } else {\r\n                currentIndex = nextIndex;\r\n                nextIndex = currentIndex + 1\r\n            }\r\n        }\r\n    },\r\n    _animateBars: function() {\r\n        var that = this;\r\n        var i;\r\n        var ii = that._bars.length;\r\n        if (ii > 0) {\r\n            for (i = 0; i < ii; ++i) {\r\n                that._bars[i].beginAnimation()\r\n            }\r\n            that._barsGroup.animate({\r\n                _: 0\r\n            }, that._animationSettings)\r\n        }\r\n    },\r\n    _buildNodes: function() {\r\n        var that = this;\r\n        var options = that._options.silent();\r\n        that._palette = that._themeManager.createPalette(options.palette, {\r\n            useHighlight: true,\r\n            extensionMode: options.paletteExtensionMode\r\n        });\r\n        that._palette.reset();\r\n        that._bars = that._bars || [];\r\n        that._animationSettings && that._barsGroup.stopAnimation();\r\n        var barValues = that._values.filter(_isFinite);\r\n        var count = barValues.length;\r\n        if (that._bars.length > count) {\r\n            var ii = that._bars.length;\r\n            for (var i = count; i < ii; ++i) {\r\n                that._bars[i].dispose()\r\n            }\r\n            that._bars.splice(count, ii - count)\r\n        } else {\r\n            if (that._bars.length < count) {\r\n                for (var _i2 = that._bars.length; _i2 < count; ++_i2) {\r\n                    that._bars.push(new BarWrapper(_i2, that._context))\r\n                }\r\n            }\r\n        }\r\n        that._bars.forEach(function(bar, index) {\r\n            bar.update({\r\n                color: that._palette.getNextColor(count),\r\n                value: barValues[index]\r\n            })\r\n        })\r\n    },\r\n    _updateValues: function(values) {\r\n        var that = this;\r\n        var list = _isArray(values) && values || _isFinite(values) && [values] || [];\r\n        var i;\r\n        var ii = list.length;\r\n        var value;\r\n        that._values.length = ii;\r\n        for (i = 0; i < ii; ++i) {\r\n            value = list[i];\r\n            that._values[i] = value = _Number(_isFinite(value) ? value : that._values[i])\r\n        }\r\n        if (!that._resizing) {\r\n            if (!_compareArrays(that._values, that.option(OPTION_VALUES))) {\r\n                that.option(OPTION_VALUES, that._values.slice())\r\n            }\r\n        }\r\n        this._change([\"NODES\"])\r\n    },\r\n    values: function(arg) {\r\n        if (void 0 !== arg) {\r\n            this._updateValues(arg);\r\n            return this\r\n        } else {\r\n            return this._values.slice(0)\r\n        }\r\n    },\r\n    _optionChangesMap: {\r\n        backgroundColor: \"MOSTLY_TOTAL\",\r\n        relativeInnerRadius: \"MOSTLY_TOTAL\",\r\n        barSpacing: \"MOSTLY_TOTAL\",\r\n        label: \"MOSTLY_TOTAL\",\r\n        resolveLabelOverlapping: \"MOSTLY_TOTAL\",\r\n        palette: \"MOSTLY_TOTAL\",\r\n        paletteExtensionMode: \"MOSTLY_TOTAL\",\r\n        values: \"VALUES\"\r\n    },\r\n    _change_VALUES: function() {\r\n        this._updateValues(this.option(OPTION_VALUES))\r\n    },\r\n    _factory: (0, _object.clone)(_base_gauge.dxBaseGauge.prototype._factory),\r\n    _optionChangesOrder: [\"VALUES\", \"NODES\"],\r\n    _initialChanges: [\"VALUES\"],\r\n    _change_NODES: function() {\r\n        this._buildNodes()\r\n    },\r\n    _change_MOSTLY_TOTAL: function() {\r\n        this._change([\"NODES\"]);\r\n        this.callBase()\r\n    },\r\n    _proxyData: [],\r\n    _getLegendData: function() {\r\n        var that = this;\r\n        var formatOptions = {};\r\n        var options = that._options.silent();\r\n        var labelFormatOptions = (options.label || {}).format;\r\n        var legendFormatOptions = (options.legend || {}).itemTextFormat;\r\n        if (legendFormatOptions) {\r\n            formatOptions.format = legendFormatOptions\r\n        } else {\r\n            formatOptions.format = labelFormatOptions || that._defaultFormatOptions\r\n        }\r\n        return (this._bars || []).map(function(b) {\r\n            return {\r\n                id: b.index,\r\n                item: {\r\n                    value: b.getValue(),\r\n                    color: b.getColor(),\r\n                    index: b.index\r\n                },\r\n                text: _formatValue(b.getValue(), formatOptions),\r\n                visible: true,\r\n                states: {\r\n                    normal: {\r\n                        fill: b.getColor()\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n});\r\nexports.dxBarGauge = dxBarGauge;\r\nBarWrapper = function(index, context) {\r\n    var that = this;\r\n    that._context = context;\r\n    that._tracker = context.renderer.arc().attr({\r\n        \"stroke-linejoin\": \"round\"\r\n    });\r\n    that.index = index\r\n};\r\n_extend(BarWrapper.prototype, {\r\n    dispose: function() {\r\n        var that = this;\r\n        that._background.dispose();\r\n        that._bar.dispose();\r\n        if (that._context.textEnabled) {\r\n            that._line.dispose();\r\n            that._text.dispose()\r\n        }\r\n        that._context.tracker.detach(that._tracker);\r\n        that._context = that._settings = that._background = that._bar = that._line = that._text = that._tracker = null;\r\n        return that\r\n    },\r\n    arrange: function(options) {\r\n        var that = this;\r\n        var context = that._context;\r\n        this._visible = true;\r\n        context.tracker.attach(that._tracker, that, {\r\n            index: that.index\r\n        });\r\n        that._background = context.renderer.arc().attr({\r\n            \"stroke-linejoin\": \"round\",\r\n            fill: context.backgroundColor\r\n        }).append(context.group);\r\n        that._settings = that._settings || {\r\n            x: context.x,\r\n            y: context.y,\r\n            startAngle: context.baseAngle,\r\n            endAngle: context.baseAngle\r\n        };\r\n        that._bar = context.renderer.arc().attr(_extend({\r\n            \"stroke-linejoin\": \"round\"\r\n        }, that._settings)).append(context.group);\r\n        if (context.textEnabled) {\r\n            that._line = context.renderer.path([], \"line\").attr({\r\n                \"stroke-width\": context.lineWidth\r\n            }).append(context.group);\r\n            that._text = context.renderer.text().css(context.fontStyles).attr(context.textOptions).append(context.group)\r\n        }\r\n        that._angle = isFinite(that._angle) ? that._angle : context.baseAngle;\r\n        that._settings.outerRadius = options.radius;\r\n        that._settings.innerRadius = options.radius - context.barSize;\r\n        that._settings.x = context.x;\r\n        that._settings.y = context.y;\r\n        that._background.attr(_extend({}, that._settings, {\r\n            startAngle: context.endAngle,\r\n            endAngle: context.startAngle,\r\n            fill: that._context.backgroundColor\r\n        }));\r\n        that._bar.attr({\r\n            x: context.x,\r\n            y: context.y,\r\n            outerRadius: that._settings.outerRadius,\r\n            innerRadius: that._settings.innerRadius,\r\n            fill: that._color\r\n        });\r\n        that._tracker.attr(that._settings);\r\n        if (context.textEnabled) {\r\n            that._line.attr({\r\n                points: [context.x, context.y - that._settings.innerRadius, context.x, context.y - context.textRadius - context.textIndent],\r\n                stroke: context.lineColor || that._color\r\n            }).sharp();\r\n            that._text.css({\r\n                fill: context.textColor || that._color\r\n            })\r\n        }\r\n        return that\r\n    },\r\n    getTooltipParameters: function() {\r\n        var that = this;\r\n        var cosSin = _getCosAndSin((that._angle + that._context.baseAngle) / 2);\r\n        return {\r\n            x: _round(that._context.x + (that._settings.outerRadius + that._settings.innerRadius) / 2 * cosSin.cos),\r\n            y: _round(that._context.y - (that._settings.outerRadius + that._settings.innerRadius) / 2 * cosSin.sin),\r\n            offset: 0,\r\n            color: that._color,\r\n            value: that._value\r\n        }\r\n    },\r\n    setAngle: function(angle) {\r\n        var that = this;\r\n        var context = that._context;\r\n        var settings = that._settings;\r\n        var cosSin;\r\n        that._angle = angle;\r\n        setAngles(settings, context.baseAngle, angle);\r\n        that._bar.attr(settings);\r\n        that._tracker.attr(settings);\r\n        if (context.textEnabled) {\r\n            cosSin = _getCosAndSin(angle);\r\n            var indent = context.textIndent;\r\n            var radius = context.textRadius + indent;\r\n            var x = context.x + radius * cosSin.cos;\r\n            var y = context.y - radius * cosSin.sin;\r\n            var halfWidth = .5 * context.textWidth;\r\n            var textHeight = context.textHeight;\r\n            var textY = context.textY;\r\n            if (_abs(x - context.x) > indent) {\r\n                x += x < context.x ? -halfWidth : halfWidth\r\n            }\r\n            if (_abs(y - context.y) <= indent) {\r\n                y -= textY + .5 * textHeight\r\n            } else {\r\n                y -= y < context.y ? textY + textHeight : textY\r\n            }\r\n            var text = _formatValue(that._value, context.formatOptions, {\r\n                index: that.index\r\n            });\r\n            var visibility = \"\" === text ? \"hidden\" : null;\r\n            that._text.attr({\r\n                text: text,\r\n                x: x,\r\n                y: y,\r\n                visibility: visibility\r\n            });\r\n            that._line.attr({\r\n                visibility: visibility\r\n            });\r\n            that._line.rotate(_convertAngleToRendererSpace(angle), context.x, context.y)\r\n        }\r\n        return that\r\n    },\r\n    hideLabel: function() {\r\n        this._text.attr({\r\n            visibility: \"hidden\"\r\n        });\r\n        this._line.attr({\r\n            visibility: \"hidden\"\r\n        })\r\n    },\r\n    checkIntersect: function(anotherBar) {\r\n        var coords = this.calculateLabelCoords();\r\n        var anotherCoords = anotherBar.calculateLabelCoords();\r\n        if (!coords || !anotherCoords) {\r\n            return false\r\n        }\r\n        var width = Math.max(0, Math.min(coords.bottomRight.x, anotherCoords.bottomRight.x) - Math.max(coords.topLeft.x, anotherCoords.topLeft.x));\r\n        var height = Math.max(0, Math.min(coords.bottomRight.y, anotherCoords.bottomRight.y) - Math.max(coords.topLeft.y, anotherCoords.topLeft.y));\r\n        return width * height !== 0\r\n    },\r\n    calculateLabelCoords: function() {\r\n        if (!this._text) {\r\n            return\r\n        }\r\n        var box = this._text.getBBox();\r\n        return {\r\n            topLeft: {\r\n                x: box.x,\r\n                y: box.y\r\n            },\r\n            bottomRight: {\r\n                x: box.x + box.width,\r\n                y: box.y + box.height\r\n            }\r\n        }\r\n    },\r\n    _processValue: function(value) {\r\n        return this._context.translator.translate(this._context.translator.adjust(value))\r\n    },\r\n    applyValue: function() {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        return this.setAngle(this._processValue(this.getValue()))\r\n    },\r\n    update: function(_ref) {\r\n        var color = _ref.color,\r\n            value = _ref.value;\r\n        this._color = color;\r\n        this._value = value\r\n    },\r\n    hide: function() {\r\n        this._visible = false\r\n    },\r\n    getColor: function() {\r\n        return this._color\r\n    },\r\n    getValue: function() {\r\n        return this._value\r\n    },\r\n    beginAnimation: function() {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        var that = this;\r\n        var angle = this._processValue(this.getValue());\r\n        if (!compareFloats(that._angle, angle)) {\r\n            that._start = that._angle;\r\n            that._delta = angle - that._angle;\r\n            that._tracker.attr({\r\n                visibility: \"hidden\"\r\n            });\r\n            if (that._context.textEnabled) {\r\n                that._line.attr({\r\n                    visibility: \"hidden\"\r\n                });\r\n                that._text.attr({\r\n                    visibility: \"hidden\"\r\n                })\r\n            }\r\n        } else {\r\n            that.animate = _noop;\r\n            that.setAngle(that._angle)\r\n        }\r\n    },\r\n    animate: function(pos) {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        var that = this;\r\n        that._angle = that._start + that._delta * pos;\r\n        setAngles(that._settings, that._context.baseAngle, that._angle);\r\n        that._bar.attr(that._settings)\r\n    },\r\n    endAnimation: function() {\r\n        var that = this;\r\n        if (void 0 !== that._delta) {\r\n            if (compareFloats(that._angle, that._start + that._delta)) {\r\n                that._tracker.attr({\r\n                    visibility: null\r\n                });\r\n                that.setAngle(that._angle)\r\n            }\r\n        } else {\r\n            delete that.animate\r\n        }\r\n        delete that._start;\r\n        delete that._delta\r\n    }\r\n});\r\n\r\nfunction setAngles(target, angle1, angle2) {\r\n    target.startAngle = angle1 < angle2 ? angle1 : angle2;\r\n    target.endAngle = angle1 < angle2 ? angle2 : angle1\r\n}\r\n\r\nfunction compareFloats(value1, value2) {\r\n    return _abs(value1 - value2) < 1e-4\r\n}(0, _component_registrator.default)(\"dxBarGauge\", dxBarGauge);\r\ndxBarGauge.addPlugin(_legend.plugin);\r\n"]},"metadata":{},"sourceType":"script"}