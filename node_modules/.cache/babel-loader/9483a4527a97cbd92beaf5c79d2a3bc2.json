{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\CustomerPlus\\\\CustomerDetailsPlus\\\\Details\\\\AddPhotoPopup.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalButton, NormalSelect } from \"component/common\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Webcam from \"react-webcam\";\nimport { withTranslation } from \"react-i18next\";\nimport { addDiagosisPhoto, updateDiagosisPhoto } from \"redux/actions/customerPlus\";\nexport class AddPhotoPopupClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: null,\n      isCameraAvailable: true,\n      remarks: \"\",\n      layoutData: \"\",\n      brushRadius: \"2\",\n      diagnosis_code: null,\n      brushColor: \"yellow\",\n      brushColorOptions: [{\n        label: \"Yellow\",\n        value: \"yellow\"\n      }, {\n        label: \"Red\",\n        value: \"red\"\n      }, {\n        label: \"White\",\n        value: \"white\"\n      }, {\n        label: \"Black\",\n        value: \"black\"\n      }, {\n        label: \"Green\",\n        value: \"green\"\n      }, {\n        label: \"Blue\",\n        value: \"blue\"\n      }],\n      isMounted: true\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.setRef = webcam => {\n      this.webcam = webcam;\n    };\n\n    this.capture = () => {\n      const imageSrc = this.webcam.getScreenshot();\n      this.updateState({\n        image: imageSrc\n      });\n    };\n\n    this.handleChange = e => {\n      this.updateState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = async () => {\n      function dataURLtoFile(dataurl, filename) {\n        var arr = dataurl.split(\",\"),\n            mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]),\n            n = bstr.length,\n            u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        return new File([u8arr], filename, {\n          type: mime\n        });\n      }\n\n      let {\n        remarks,\n        image,\n        diagnosis_code\n      } = this.state;\n      let {\n        cust_no,\n        onDone\n      } = this.props;\n      let pic_data1 = `${this.canvasDraw.getSaveData()}`;\n      let formData = new FormData();\n      formData.append(\"remarks\", remarks);\n      formData.append(\"cust_no\", cust_no);\n      formData.append(\"pic_data1\", pic_data1);\n\n      if (diagnosis_code == null) {\n        formData.append(\"diagnosis_date\", new Date().toISOString());\n        formData.append(\"date_pic_take\", new Date().toISOString());\n        formData.append(\"pic_path\", dataURLtoFile(image, `${Date.now().toLocaleString(\"en-GB\")}.jpeg`));\n        await this.props.addDiagosisPhoto(formData);\n      } else {\n        await this.props.updateDiagosisPhoto(diagnosis_code, formData);\n      }\n\n      onDone();\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentWillMount() {\n    navigator.getMedia = navigator.mediaDevices.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }, () => {\n      this.updateState({\n        isCameraAvailable: true\n      });\n    }, () => {\n      this.updateState({\n        isCameraAvailable: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    let {\n      image,\n      remarks,\n      layoutData,\n      diagnosis_code\n    } = this.props;\n    console.log(this.props);\n\n    if (image && remarks) {\n      this.updateState({\n        image,\n        remarks,\n        layoutData,\n        diagnosis_code\n      });\n    }\n\n    document.getElementById(\"get_file\").onclick = function () {\n      document.getElementById(\"my_file\").click();\n    };\n  }\n\n  render() {\n    let {\n      image,\n      isCameraAvailable,\n      remarks,\n      brushRadius,\n      brushColor,\n      brushColorOptions,\n      layoutData\n    } = this.state;\n    const videoConstraints = {\n      width: 1280,\n      height: 720,\n      facingMode: \"user\"\n    };\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mb-4 mt-2 product-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, t(\"Add Photo\"))), image == null ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Done\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }))), image == null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, isCameraAvailable ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Webcam, {\n      audio: false,\n      ref: this.setRef,\n      screenshotFormat: \"image/jpeg\",\n      width: \"100%\",\n      videoConstraints: videoConstraints,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Capture\",\n      onClick: () => this.capture(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: \"get_file\",\n      value: \"Browse\",\n      className: \"btn cursor-pointer mainbg-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"my_file\",\n      className: \"d-none\",\n      accept: \"image/*\",\n      onChange: e => {\n        if (e.target.value || e.target.value != null) {\n          var reader = new FileReader();\n\n          reader.onload = e => {\n            this.updateState({\n              image: e.target.result\n            });\n          };\n\n          reader.readAsDataURL(e.target.files[0]);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12  mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CanvasDraw, {\n      imgSrc: this.state.image,\n      ref: ref => this.canvasDraw = ref,\n      brushRadius: brushRadius,\n      brushColor: brushColor,\n      saveData: layoutData && JSON.stringify(layoutData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, t(\"Brush Radius\")), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"col-12\",\n      type: \"range\",\n      min: \"1\",\n      max: \"20\",\n      value: brushRadius,\n      onChange: e => this.updateState({\n        brushRadius: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, t(\"Brush Color\")), /*#__PURE__*/React.createElement(NormalSelect, {\n      options: brushColorOptions,\n      value: brushColor,\n      onChange: e => this.updateState({\n        brushColor: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Clear\",\n      onClick: () => {\n        this.canvasDraw.clear();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, t(\"Remarks\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter remarks\",\n      value: remarks,\n      name: \"remarks\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    addDiagosisPhoto,\n    updateDiagosisPhoto\n  }, dispatch);\n};\n\nexport const AddPhotoPopup = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(AddPhotoPopupClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/CustomerPlus/CustomerDetailsPlus/Details/AddPhotoPopup.js"],"names":["React","Component","NormalInput","NormalButton","NormalSelect","CanvasDraw","connect","bindActionCreators","Webcam","withTranslation","addDiagosisPhoto","updateDiagosisPhoto","AddPhotoPopupClass","state","image","isCameraAvailable","remarks","layoutData","brushRadius","diagnosis_code","brushColor","brushColorOptions","label","value","isMounted","updateState","data","setState","setRef","webcam","capture","imageSrc","getScreenshot","handleChange","e","target","name","handleSubmit","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","cust_no","onDone","props","pic_data1","canvasDraw","getSaveData","formData","FormData","append","Date","toISOString","now","toLocaleString","componentWillUnmount","componentWillMount","navigator","getMedia","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","video","componentDidMount","console","log","document","getElementById","onclick","click","render","videoConstraints","width","height","facingMode","t","reader","FileReader","onload","result","readAsDataURL","files","ref","JSON","stringify","clear","mapStateToProps","mapDispatchToProps","dispatch","AddPhotoPopup"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NormalInput, NormalButton, NormalSelect } from \"component/common\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Webcam from \"react-webcam\";\nimport { withTranslation } from \"react-i18next\";\nimport {\n  addDiagosisPhoto,\n  updateDiagosisPhoto,\n} from \"redux/actions/customerPlus\";\n\nexport class AddPhotoPopupClass extends Component {\n  state = {\n    image: null,\n    isCameraAvailable: true,\n    remarks: \"\",\n    layoutData: \"\",\n    brushRadius: \"2\",\n    diagnosis_code: null,\n    brushColor: \"yellow\",\n    brushColorOptions: [\n      { label: \"Yellow\", value: \"yellow\" },\n      { label: \"Red\", value: \"red\" },\n      { label: \"White\", value: \"white\" },\n      { label: \"Black\", value: \"black\" },\n      { label: \"Green\", value: \"green\" },\n      { label: \"Blue\", value: \"blue\" },\n    ],\n    isMounted: true,\n  };\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  updateState = data => {\n    if (this.state.isMounted) this.setState(data);\n  };\n\n  componentWillMount() {\n    navigator.getMedia =\n      navigator.mediaDevices.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n\n    navigator.mediaDevices.getUserMedia(\n      { video: true },\n      () => {\n        this.updateState({ isCameraAvailable: true });\n      },\n      () => {\n        this.updateState({ isCameraAvailable: false });\n      }\n    );\n  }\n\n  componentDidMount() {\n    let { image, remarks, layoutData, diagnosis_code } = this.props;\n    console.log(this.props);\n    if (image && remarks) {\n      this.updateState({ image, remarks, layoutData, diagnosis_code });\n    }\n    document.getElementById(\"get_file\").onclick = function () {\n      document.getElementById(\"my_file\").click();\n    };\n  }\n\n  setRef = webcam => {\n    this.webcam = webcam;\n  };\n\n  capture = () => {\n    const imageSrc = this.webcam.getScreenshot();\n    this.updateState({ image: imageSrc });\n  };\n\n  handleChange = e => {\n    this.updateState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = async () => {\n    function dataURLtoFile(dataurl, filename) {\n      var arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], filename, { type: mime });\n    }\n\n    let { remarks, image, diagnosis_code } = this.state;\n    let { cust_no, onDone } = this.props;\n    let pic_data1 = `${this.canvasDraw.getSaveData()}`;\n\n    let formData = new FormData();\n    formData.append(\"remarks\", remarks);\n    formData.append(\"cust_no\", cust_no);\n    formData.append(\"pic_data1\", pic_data1);\n\n    if (diagnosis_code == null) {\n      formData.append(\"diagnosis_date\", new Date().toISOString());\n      formData.append(\"date_pic_take\", new Date().toISOString());\n      formData.append(\n        \"pic_path\",\n        dataURLtoFile(image, `${Date.now().toLocaleString(\"en-GB\")}.jpeg`)\n      );\n      await this.props.addDiagosisPhoto(formData);\n    } else {\n      await this.props.updateDiagosisPhoto(diagnosis_code, formData);\n    }\n    onDone();\n  };\n\n  render() {\n    let {\n      image,\n      isCameraAvailable,\n      remarks,\n      brushRadius,\n      brushColor,\n      brushColorOptions,\n      layoutData,\n    } = this.state;\n    const videoConstraints = {\n      width: 1280,\n      height: 720,\n      facingMode: \"user\",\n    };\n    let { t } = this.props;\n    return (\n      <>\n        <div className=\"container-fluid mb-4 mt-2 product-details\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4>{t(\"Add Photo\")}</h4>\n            </div>\n            {image == null ? null : (\n              <div className=\"col-6\">\n                <NormalButton\n                  mainbg={true}\n                  className=\"col-12 fs-15 \"\n                  label=\"Done\"\n                  onClick={() => this.handleSubmit()}\n                />\n              </div>\n            )}\n          </div>\n          {image == null ? (\n            <div className=\"row pl-5 pr-5 mt-4\">\n              {isCameraAvailable ? (\n                <>\n                  <div className=\"col-12\">\n                    <Webcam\n                      audio={false}\n                      ref={this.setRef}\n                      screenshotFormat=\"image/jpeg\"\n                      width={\"100%\"}\n                      videoConstraints={videoConstraints}\n                    />\n                  </div>\n                  <div className=\"col-12 mb-4\">\n                    <NormalButton\n                      mainbg={true}\n                      className=\"col-12 fs-15 \"\n                      label=\"Capture\"\n                      onClick={() => this.capture()}\n                    />\n                  </div>\n                </>\n              ) : null}\n              <div className=\"col-12\">\n                <input\n                  type=\"button\"\n                  id=\"get_file\"\n                  value=\"Browse\"\n                  className=\"btn cursor-pointer mainbg-btn\"\n                />\n                <input\n                  type=\"file\"\n                  id=\"my_file\"\n                  className=\"d-none\"\n                  accept=\"image/*\"\n                  onChange={e => {\n                    if (e.target.value || e.target.value != null) {\n                      var reader = new FileReader();\n                      reader.onload = e => {\n                        this.updateState({ image: e.target.result });\n                      };\n                      reader.readAsDataURL(e.target.files[0]);\n                    }\n                  }}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"row pl-5 pr-5 mt-4\">\n              <div className=\"col-12  mb-4\">\n                <div class=\"d-flex mt-5 align-items-center justify-content-center\">\n                  <CanvasDraw\n                    imgSrc={this.state.image}\n                    ref={ref => (this.canvasDraw = ref)}\n                    brushRadius={brushRadius}\n                    brushColor={brushColor}\n                    saveData={layoutData && JSON.stringify(layoutData)}\n                  />\n                </div>\n              </div>\n              <div className=\"col-12 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\n                  {t(\"Brush Radius\")}\n                </label>\n                <input\n                  className=\"col-12\"\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"20\"\n                  value={brushRadius}\n                  onChange={e =>\n                    this.updateState({ brushRadius: e.target.value })\n                  }\n                />\n              </div>\n              <div className=\"col-12 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\n                  {t(\"Brush Color\")}\n                </label>\n                <NormalSelect\n                  options={brushColorOptions}\n                  value={brushColor}\n                  onChange={e =>\n                    this.updateState({ brushColor: e.target.value })\n                  }\n                />\n              </div>\n              <div className=\"col-12 mb-4\">\n                <NormalButton\n                  mainbg={true}\n                  className=\"col-12 fs-15 \"\n                  label=\"Clear\"\n                  onClick={() => {\n                    this.canvasDraw.clear();\n                  }}\n                />\n              </div>\n              <div className=\"col-12 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\n                  {t(\"Remarks\")}\n                </label>\n                <div className=\"input-group\">\n                  <NormalInput\n                    placeholder=\"Enter remarks\"\n                    value={remarks}\n                    name=\"remarks\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      addDiagosisPhoto,\n      updateDiagosisPhoto,\n    },\n    dispatch\n  );\n};\n\nexport const AddPhotoPopup = withTranslation()(\n  connect(mapStateToProps, mapDispatchToProps)(AddPhotoPopupClass)\n);\n"]},"metadata":{},"sourceType":"module"}