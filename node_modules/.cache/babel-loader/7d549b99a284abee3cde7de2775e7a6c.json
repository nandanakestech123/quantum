{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/timeZoneCalculator.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.TimeZoneCalculator = exports.PathTimeZoneConversion = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar toMs = _date.default.dateToMilliseconds;\nvar PathTimeZoneConversion = {\n  fromSourceToAppointment: \"toAppointment\",\n  fromAppointmentToSource: \"fromAppointment\",\n  fromSourceToGrid: \"toGrid\",\n  fromGridToSource: \"fromGrid\"\n};\nexports.PathTimeZoneConversion = PathTimeZoneConversion;\n\nvar TimeZoneCalculator = function () {\n  function TimeZoneCalculator(options) {\n    _classCallCheck(this, TimeZoneCalculator);\n\n    this.options = options;\n  }\n\n  _createClass(TimeZoneCalculator, [{\n    key: \"createDate\",\n    value: function (sourceDate, info) {\n      var date = new Date(sourceDate);\n\n      switch (info.path) {\n        case PathTimeZoneConversion.fromSourceToAppointment:\n          return this._getConvertedDate(date, info.appointmentTimeZone, true);\n\n        case PathTimeZoneConversion.fromAppointmentToSource:\n          return this._getConvertedDate(date, info.appointmentTimeZone, true, true);\n\n        case PathTimeZoneConversion.fromSourceToGrid:\n          return this._getConvertedDate(date, info.appointmentTimeZone, false);\n\n        case PathTimeZoneConversion.fromGridToSource:\n          return this._getConvertedDate(date, info.appointmentTimeZone, false, true);\n      }\n\n      throw new Error(\"not specified pathTimeZoneConversion\");\n    }\n  }, {\n    key: \"getOffsets\",\n    value: function (date, appointmentTimezone) {\n      var clientOffset = -this._getClientOffset(date) / toMs(\"hour\");\n\n      var commonOffset = this._getCommonOffset(date);\n\n      var appointmentOffset = this._getAppointmentOffset(date, appointmentTimezone);\n\n      return {\n        client: clientOffset,\n        common: !(0, _type.isDefined)(commonOffset) ? clientOffset : commonOffset,\n        appointment: \"number\" !== typeof appointmentOffset ? clientOffset : appointmentOffset\n      };\n    }\n  }, {\n    key: \"_getClientOffset\",\n    value: function (date) {\n      return this.options.getClientOffset(date);\n    }\n  }, {\n    key: \"_getCommonOffset\",\n    value: function (date) {\n      return this.options.getCommonOffset(date);\n    }\n  }, {\n    key: \"_getAppointmentOffset\",\n    value: function (date, appointmentTimezone) {\n      return this.options.getAppointmentOffset(date, appointmentTimezone);\n    }\n  }, {\n    key: \"_getConvertedDate\",\n    value: function (date, appointmentTimezone, useAppointmentTimeZone, isBack) {\n      var newDate = new Date(date.getTime());\n      var offsets = this.getOffsets(newDate, appointmentTimezone);\n\n      if (useAppointmentTimeZone && !!appointmentTimezone) {\n        return this._getConvertedDateByOffsets(date, offsets.client, offsets.appointment, isBack);\n      }\n\n      return this._getConvertedDateByOffsets(date, offsets.client, offsets.common, isBack);\n    }\n  }, {\n    key: \"_getConvertedDateByOffsets\",\n    value: function (date, clientOffset, targetOffset, isBack) {\n      var direction = isBack ? -1 : 1;\n      var utcDate = date.getTime() - direction * clientOffset * toMs(\"hour\");\n      return new Date(utcDate + direction * targetOffset * toMs(\"hour\"));\n    }\n  }]);\n\n  return TimeZoneCalculator;\n}();\n\nexports.TimeZoneCalculator = TimeZoneCalculator;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/scheduler/timeZoneCalculator.js"],"names":["exports","TimeZoneCalculator","PathTimeZoneConversion","_type","require","_date","_interopRequireDefault","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","toMs","default","dateToMilliseconds","fromSourceToAppointment","fromAppointmentToSource","fromSourceToGrid","fromGridToSource","options","value","sourceDate","info","date","Date","path","_getConvertedDate","appointmentTimeZone","Error","appointmentTimezone","clientOffset","_getClientOffset","commonOffset","_getCommonOffset","appointmentOffset","_getAppointmentOffset","client","common","isDefined","appointment","getClientOffset","getCommonOffset","getAppointmentOffset","useAppointmentTimeZone","isBack","newDate","getTime","offsets","getOffsets","_getConvertedDateByOffsets","targetOffset","direction","utcDate"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/timeZoneCalculator.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.TimeZoneCalculator = exports.PathTimeZoneConversion = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar PathTimeZoneConversion = {\r\n    fromSourceToAppointment: \"toAppointment\",\r\n    fromAppointmentToSource: \"fromAppointment\",\r\n    fromSourceToGrid: \"toGrid\",\r\n    fromGridToSource: \"fromGrid\"\r\n};\r\nexports.PathTimeZoneConversion = PathTimeZoneConversion;\r\nvar TimeZoneCalculator = function() {\r\n    function TimeZoneCalculator(options) {\r\n        _classCallCheck(this, TimeZoneCalculator);\r\n        this.options = options\r\n    }\r\n    _createClass(TimeZoneCalculator, [{\r\n        key: \"createDate\",\r\n        value: function(sourceDate, info) {\r\n            var date = new Date(sourceDate);\r\n            switch (info.path) {\r\n                case PathTimeZoneConversion.fromSourceToAppointment:\r\n                    return this._getConvertedDate(date, info.appointmentTimeZone, true);\r\n                case PathTimeZoneConversion.fromAppointmentToSource:\r\n                    return this._getConvertedDate(date, info.appointmentTimeZone, true, true);\r\n                case PathTimeZoneConversion.fromSourceToGrid:\r\n                    return this._getConvertedDate(date, info.appointmentTimeZone, false);\r\n                case PathTimeZoneConversion.fromGridToSource:\r\n                    return this._getConvertedDate(date, info.appointmentTimeZone, false, true)\r\n            }\r\n            throw new Error(\"not specified pathTimeZoneConversion\")\r\n        }\r\n    }, {\r\n        key: \"getOffsets\",\r\n        value: function(date, appointmentTimezone) {\r\n            var clientOffset = -this._getClientOffset(date) / toMs(\"hour\");\r\n            var commonOffset = this._getCommonOffset(date);\r\n            var appointmentOffset = this._getAppointmentOffset(date, appointmentTimezone);\r\n            return {\r\n                client: clientOffset,\r\n                common: !(0, _type.isDefined)(commonOffset) ? clientOffset : commonOffset,\r\n                appointment: \"number\" !== typeof appointmentOffset ? clientOffset : appointmentOffset\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getClientOffset\",\r\n        value: function(date) {\r\n            return this.options.getClientOffset(date)\r\n        }\r\n    }, {\r\n        key: \"_getCommonOffset\",\r\n        value: function(date) {\r\n            return this.options.getCommonOffset(date)\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentOffset\",\r\n        value: function(date, appointmentTimezone) {\r\n            return this.options.getAppointmentOffset(date, appointmentTimezone)\r\n        }\r\n    }, {\r\n        key: \"_getConvertedDate\",\r\n        value: function(date, appointmentTimezone, useAppointmentTimeZone, isBack) {\r\n            var newDate = new Date(date.getTime());\r\n            var offsets = this.getOffsets(newDate, appointmentTimezone);\r\n            if (useAppointmentTimeZone && !!appointmentTimezone) {\r\n                return this._getConvertedDateByOffsets(date, offsets.client, offsets.appointment, isBack)\r\n            }\r\n            return this._getConvertedDateByOffsets(date, offsets.client, offsets.common, isBack)\r\n        }\r\n    }, {\r\n        key: \"_getConvertedDateByOffsets\",\r\n        value: function(date, clientOffset, targetOffset, isBack) {\r\n            var direction = isBack ? -1 : 1;\r\n            var utcDate = date.getTime() - direction * clientOffset * toMs(\"hour\");\r\n            return new Date(utcDate + direction * targetOffset * toMs(\"hour\"))\r\n        }\r\n    }]);\r\n    return TimeZoneCalculator\r\n}();\r\nexports.TimeZoneCalculator = TimeZoneCalculator;\r\n"]},"metadata":{},"sourceType":"script"}