{"ast":null,"code":"import helpers from \"./Helper\";\nimport { axiosInstance, logout } from \"./utilities\";\nexport var api = async function ({\n  method = \"get\",\n  api,\n  body,\n  status = false,\n  token = \"\",\n  baseURL = \"normal\"\n}) {\n  return await new Promise((resolve, reject) => {\n    // setting token\n    // localStorage.getItem('AuthTypeId')\n    //   ? (axiosInstance.defaults.headers.common['user-type'] = localStorage.getItem('AuthTypeId'))\n    //   : '';\n    // if (!!localStorage.getItem(\"AuthTypeId\"))\n    //   axiosInstance.defaults.headers.common[\"user-type\"] = localStorage.getItem(\n    //     \"AuthTypeId\"\n    //   );\n    if (!!localStorage.getItem(\"AuthToken\")) axiosInstance.defaults.headers.common[\"Authorization\"] = 'token ' + localStorage.getItem(\"AuthToken\");\n    axiosInstance.defaults.crossDomain = true; // axiosInstance.defaults.headers.common[\n    //   'Accept'\n    // ] = 'application/json';\n    // axiosInstance.defaults.headers.common[\n    //   'Content-Type'\n    // ] = 'multipart/form-data';\n    // axiosInstance.defaults.headers.post['Content-Type'] = 'application/json';\n\n    axiosInstance[method](`${getServiceUrl(baseURL)}${api}`, body ? body : \"\").then(data => {\n      resolve(statusHelper(status, data));\n    }).catch(error => {\n      try {\n        if (error.response) {\n          reject(statusHelper(status, error.response));\n        } else {\n          reject(error);\n        }\n      } catch (err) {\n        console.log(err);\n        reject(err);\n      }\n    });\n  });\n};\n\nvar statusHelper = (status, data) => {\n  if (data.status === 401 || data.status === 403) {\n    logout();\n  }\n\n  if (status) {\n    return {\n      status: data.status,\n      ...data.data\n    };\n  } else {\n    return data.data;\n  }\n};\n\nlet getServiceUrl = baseURL => {\n  let finalURL = \"\";\n\n  switch (baseURL) {\n    case \"normal\":\n      finalURL = helpers.getUrl() + 'api/'; //live\n      // finalURL = \"http://52.60.58.9:8000/api/\";\n\n      break;\n\n    case \"token\":\n      finalURL = helpers.getUrl() + 'api/'; //live\n      // finalURL = \"http://52.60.58.9:8000/api/\";\n\n      break;\n\n    default:\n      finalURL = helpers.getUrl() + 'api/';\n    //live\n    // finalURL = \"http://52.60.58.9:8000/api/\";\n  }\n\n  return finalURL;\n};\n\nexport function getUrl() {\n  return \"test\";\n}","map":{"version":3,"sources":["E:/newfrontend/webfe/src/service/api.js"],"names":["helpers","axiosInstance","logout","api","method","body","status","token","baseURL","Promise","resolve","reject","localStorage","getItem","defaults","headers","common","crossDomain","getServiceUrl","then","data","statusHelper","catch","error","response","err","console","log","finalURL","getUrl"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,SAASC,aAAT,EAAwBC,MAAxB,QAAsC,aAAtC;AAEA,OAAO,IAAIC,GAAG,GAAG,gBAAe;AAC9BC,EAAAA,MAAM,GAAG,KADqB;AAE9BD,EAAAA,GAF8B;AAG9BE,EAAAA,IAH8B;AAI9BC,EAAAA,MAAM,GAAG,KAJqB;AAK9BC,EAAAA,KAAK,GAAG,EALsB;AAM9BC,EAAAA,OAAO,GAAG;AANoB,CAAf,EAOd;AACD,SAAO,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,CAAC,CAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAN,EACAZ,aAAa,CAACa,QAAd,CAAuBC,OAAvB,CAA+BC,MAA/B,CACE,eADF,IAEI,WAASJ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAFb;AAIAZ,IAAAA,aAAa,CAACa,QAAd,CAAuBG,WAAvB,GAAqC,IAArC,CAd4C,CAgB5C;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAhB,IAAAA,aAAa,CAACG,MAAD,CAAb,CAAuB,GAAEc,aAAa,CAACV,OAAD,CAAU,GAAEL,GAAI,EAAtD,EAAyDE,IAAI,GAAGA,IAAH,GAAU,EAAvE,EACGc,IADH,CACQC,IAAI,IAAI;AACZV,MAAAA,OAAO,CAACW,YAAY,CAACf,MAAD,EAASc,IAAT,CAAb,CAAP;AACD,KAHH,EAIGE,KAJH,CAISC,KAAK,IAAI;AACd,UAAI;AACF,YAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBb,UAAAA,MAAM,CAACU,YAAY,CAACf,MAAD,EAASiB,KAAK,CAACC,QAAf,CAAb,CAAN;AACD,SAFD,MAEO;AACLb,UAAAA,MAAM,CAACY,KAAD,CAAN;AACD;AACF,OAND,CAME,OAAOE,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAd,QAAAA,MAAM,CAACc,GAAD,CAAN;AACD;AACF,KAfH;AAgBD,GAzCY,CAAb;AA0CD,CAlDM;;AAoDP,IAAIJ,YAAY,GAAG,CAACf,MAAD,EAASc,IAAT,KAAkB;AACnC,MAAIA,IAAI,CAACd,MAAL,KAAgB,GAAhB,IAAuBc,IAAI,CAACd,MAAL,KAAgB,GAA3C,EAAgD;AAC9CJ,IAAAA,MAAM;AACP;;AACD,MAAII,MAAJ,EAAY;AACV,WAAO;AACLA,MAAAA,MAAM,EAAEc,IAAI,CAACd,MADR;AAEL,SAAGc,IAAI,CAACA;AAFH,KAAP;AAID,GALD,MAKO;AACL,WAAOA,IAAI,CAACA,IAAZ;AACD;AACF,CAZD;;AAcA,IAAIF,aAAa,GAAGV,OAAO,IAAI;AAE7B,MAAIoB,QAAQ,GAAG,EAAf;;AACA,UAAQpB,OAAR;AACI,SAAK,QAAL;AACAoB,MAAAA,QAAQ,GAAG5B,OAAO,CAAC6B,MAAR,KAAkB,MAA7B,CADA,CACqC;AACnC;;AACA;;AACF,SAAK,OAAL;AACED,MAAAA,QAAQ,GAAG5B,OAAO,CAAC6B,MAAR,KAAkB,MAA7B,CADF,CACuC;AACrC;;AACA;;AACJ;AACED,MAAAA,QAAQ,GAAG5B,OAAO,CAAC6B,MAAR,KAAkB,MAA7B;AAAsC;AACtC;AAXJ;;AAcA,SAAOD,QAAP;AACD,CAlBD;;AAoBA,OAAO,SAASC,MAAT,GAAiB;AACtB,SAAO,MAAP;AACD","sourcesContent":["import helpers from \"./Helper\";\r\nimport { axiosInstance, logout } from \"./utilities\";\r\n\r\nexport var api = async function({\r\n  method = \"get\",\r\n  api,\r\n  body,\r\n  status = false,\r\n  token = \"\",\r\n  baseURL = \"normal\"\r\n}) {\r\n  return await new Promise((resolve, reject) => {\r\n    // setting token\r\n    // localStorage.getItem('AuthTypeId')\r\n    //   ? (axiosInstance.defaults.headers.common['user-type'] = localStorage.getItem('AuthTypeId'))\r\n    //   : '';\r\n    // if (!!localStorage.getItem(\"AuthTypeId\"))\r\n    //   axiosInstance.defaults.headers.common[\"user-type\"] = localStorage.getItem(\r\n    //     \"AuthTypeId\"\r\n    //   );\r\n    if (!!localStorage.getItem(\"AuthToken\"))\r\n    axiosInstance.defaults.headers.common[\r\n      \"Authorization\"\r\n    ] = 'token '+localStorage.getItem(\"AuthToken\");\r\n\r\n    axiosInstance.defaults.crossDomain = true;\r\n\r\n    // axiosInstance.defaults.headers.common[\r\n    //   'Accept'\r\n    // ] = 'application/json';\r\n\r\n    // axiosInstance.defaults.headers.common[\r\n    //   'Content-Type'\r\n    // ] = 'multipart/form-data';\r\n    // axiosInstance.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\n    axiosInstance[method](`${getServiceUrl(baseURL)}${api}`, body ? body : \"\")\r\n      .then(data => {\r\n        resolve(statusHelper(status, data));\r\n      })\r\n      .catch(error => {\r\n        try {\r\n          if (error.response) {\r\n            reject(statusHelper(status, error.response));\r\n          } else {\r\n            reject(error);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          reject(err);\r\n        }\r\n      });\r\n  });\r\n};\r\n\r\nvar statusHelper = (status, data) => {\r\n  if (data.status === 401 || data.status === 403) {\r\n    logout();\r\n  }\r\n  if (status) {\r\n    return {\r\n      status: data.status,\r\n      ...data.data\r\n    };\r\n  } else {\r\n    return data.data;\r\n  }\r\n};\r\n\r\nlet getServiceUrl = baseURL => {\r\n\r\n  let finalURL = \"\";\r\n  switch (baseURL) {\r\n      case \"normal\":\r\n      finalURL = helpers.getUrl() +'api/'; //live\r\n        // finalURL = \"http://52.60.58.9:8000/api/\";\r\n        break;\r\n      case \"token\": \r\n        finalURL = helpers.getUrl() +'api/'; //live\r\n        // finalURL = \"http://52.60.58.9:8000/api/\";\r\n        break;\r\n    default:\r\n      finalURL = helpers.getUrl() +'api/' ; //live\r\n      // finalURL = \"http://52.60.58.9:8000/api/\";\r\n  }\r\n\r\n  return finalURL;\r\n};\r\n\r\nexport function getUrl(){\r\n  return \"test\";\r\n}\r\n"]},"metadata":{},"sourceType":"module"}