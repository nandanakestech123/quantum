{"ast":null,"code":"import _classCallCheck from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{NormalButton,NormalSelect,TableWrapper}from\"component/common\";import{getTcmApi,tcmCreateApi}from\"redux/actions/TCM\";import{connect}from\"react-redux\";import{bindActionCreators}from\"redux\";import _ from\"lodash\";import{withTranslation}from\"react-i18next\";import{dateFormat}from\"service/helperFunctions\";import{PDFViewer,PDFDownloadLink,BlobProvider}from\"@react-pdf/renderer\";import MedicalCertificate from\"../Report/MedicalCertificate\";import Receipt from\"../Report/Receipt\";export var TCMCustomerListClass=/*#__PURE__*/function(_React$Component){_inherits(TCMCustomerListClass,_React$Component);var _super=_createSuper(TCMCustomerListClass);function TCMCustomerListClass(){var _this;_classCallCheck(this,TCMCustomerListClass);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={headerDetails:[{label:\"Customer Code\"},{label:\"Customer Name\"},{label:\"Contact\"},{label:\"Gender\"},{label:\"Appointment Timing\"},{label:\"Location\"},{label:\"Physician\"},{label:\"Status\"},{label:\"\",width:\"100px\"}],tcmCustomerList:[],pageMeta:{},active:false,currentIndex:-1,isPrintPdfClick:false,accountHeader:{},tcmPrescriptionMain:[],MedicalCertificateResult:[],isMedicalCertificateClick:false};_this.queryHandler=function(data){var payload={siteCode:_this.props.tokenDetails.site_code,date:dateFormat(new Date(),\"yyyy-mm-dd\")};_this.props.tcmCreateApi(\"tcmCustomerListFronDesk/\",payload).then(function(res){console.log(res,\"dsfdfaafg\");var result=res.result,success=res.success;var tcmCustomerList=_this.state.tcmCustomerList;if(success==\"1\"&&result){tcmCustomerList=result;_this.setState({tcmCustomerList:tcmCustomerList});}});};_this.getSiteBaseTitle=function(){_this.props.getTcmApi(\"getInvoiceTitle/?siteCode=\".concat(_this.props.tokenDetails.site_code)).then(function(res){console.log(res,\"invoicetitle\");var result=res.result,success=res.success;if(success==\"1\"&&result){_this.setState({accountHeader:result});}});};_this.getMedicalCertificate=function(data){_this.props.getTcmApi(\"tcmMedicalCertificate/?MCNo=\".concat(data)).then(function(res){var result=res.result,success=res.success;console.log(res,\"Mcnumber repsonse\");if(success==\"1\"&&result){_this.getSiteBaseTitle();_this.setState({MedicalCertificateResult:result,isMedicalCertificateClick:true});}});};_this.handlePrintPdfFormat=function(url){var tcmPrescriptionMain=_this.state.tcmPrescriptionMain;_this.setState({isPrintPdfClick:false});var a=document.createElement(\"a\");a.setAttribute(\"download\",\"\".concat(tcmPrescriptionMain[0].prescriptionNo,\".pdf\"));a.setAttribute(\"href\",url);a.click();window.open(url);};_this.handleReceipt=function(data){_this.props.getTcmApi(\"tcmPrescriptionReceipt/?PrescriptionNo=\".concat(data.prescriptionNo)).then(function(res){var result=res.result,success=res.success;if(success==\"1\"&&result){_this.getSiteBaseTitle();_this.setState({tcmPrescriptionMain:result,isPrintPdfClick:true});}});};_this.handleMedicalReceiptPdfFormat=function(url){var a=document.createElement(\"a\");a.setAttribute(\"download\",\"\".concat(\"MedicalCertificate\",\".pdf\"));a.setAttribute(\"href\",url);a.click();_this.setState({isMedicalCertificateClick:false});window.open(url);};return _this;}_createClass(TCMCustomerListClass,[{key:\"componentDidMount\",value:function componentDidMount(){this.queryHandler({});this.getSiteBaseTitle();}// api call for list\n},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,headerDetails=_this$state.headerDetails,tcmCustomerList=_this$state.tcmCustomerList,isPrintPdfClick=_this$state.isPrintPdfClick,accountHeader=_this$state.accountHeader,tcmPrescriptionMain=_this$state.tcmPrescriptionMain,isMedicalCertificateClick=_this$state.isMedicalCertificateClick,MedicalCertificateResult=_this$state.MedicalCertificateResult;var t=this.props.t;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"table-container table-responsive mt-3\"},/*#__PURE__*/React.createElement(TableWrapper,{headerDetails:headerDetails// queryHandler={this.handlePagination}\n// pageMeta={pageMeta}\n},tcmCustomerList.length>0?tcmCustomerList.map(function(data,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},data.customerCode)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},data.customerName)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},data.contactNo)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},data.gender)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},data.apptDate)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},data.location)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},data.physician)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},data.apptStatus)),/*#__PURE__*/React.createElement(\"td\",{className:\"position-relative\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center\"},/*#__PURE__*/React.createElement(NormalButton,{className:\"fs-12\",label:\"Receipt\",mainbgrev:true,onClick:function onClick(){return _this2.handleReceipt(data);},disabled:String(data.apptStatus).toUpperCase()===\"DONE\"?false:true}),/*#__PURE__*/React.createElement(NormalButton,{className:\"fs-12 ml-2\",label:\"MC\",mainbgrev:true// onClick={() => this.getMedicalCertificate(\"MC100051\")}\n,onClick:function onClick(){return _this2.getMedicalCertificate(data.MCNo);},disabled:String(data.apptStatus).toUpperCase()===\"DONE\"?false:true}))));}):null),isPrintPdfClick?/*#__PURE__*/React.createElement(PDFDownloadLink,{document:/*#__PURE__*/React.createElement(Receipt,{MainInfo:this.state.tcmPrescriptionMain,accountHeader:this.state.accountHeader,landscape:false})},function(_ref){var blob=_ref.blob,url=_ref.url,loading=_ref.loading,error=_ref.error;return!loading&&url?_this2.handlePrintPdfFormat(url):null;}):null,isMedicalCertificateClick?/*#__PURE__*/React.createElement(PDFDownloadLink,{document:/*#__PURE__*/React.createElement(MedicalCertificate,{CertificateData:this.state.MedicalCertificateResult,HeaderDetail:this.state.accountHeader,landscape:false})},function(_ref2){var blob=_ref2.blob,url=_ref2.url,loading=_ref2.loading,error=_ref2.error;return!loading&&url?_this2.handleMedicalReceiptPdfFormat(url):null;}):null));}}]);return TCMCustomerListClass;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{// filter: state.dashboard\ntokenDetails:state.authStore.tokenDetails};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({getTcmApi:getTcmApi,tcmCreateApi:tcmCreateApi},dispatch);};export var TCMCustomerList=withTranslation()(connect(mapStateToProps,mapDispatchToProps)(TCMCustomerListClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/TCM/TCMCustomerList/index.js"],"names":["React","NormalButton","NormalSelect","TableWrapper","getTcmApi","tcmCreateApi","connect","bindActionCreators","_","withTranslation","dateFormat","PDFViewer","PDFDownloadLink","BlobProvider","MedicalCertificate","Receipt","TCMCustomerListClass","state","headerDetails","label","width","tcmCustomerList","pageMeta","active","currentIndex","isPrintPdfClick","accountHeader","tcmPrescriptionMain","MedicalCertificateResult","isMedicalCertificateClick","queryHandler","data","payload","siteCode","props","tokenDetails","site_code","date","Date","then","res","console","log","result","success","setState","getSiteBaseTitle","getMedicalCertificate","handlePrintPdfFormat","url","a","document","createElement","setAttribute","prescriptionNo","click","window","open","handleReceipt","handleMedicalReceiptPdfFormat","t","length","map","index","customerCode","customerName","contactNo","gender","apptDate","location","physician","apptStatus","String","toUpperCase","MCNo","blob","loading","error","Component","mapStateToProps","authStore","mapDispatchToProps","dispatch","TCMCustomerList"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { NormalButton, NormalSelect, TableWrapper } from \"component/common\";\r\nimport { getTcmApi, tcmCreateApi } from \"redux/actions/TCM\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport _ from \"lodash\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { PDFViewer, PDFDownloadLink, BlobProvider } from \"@react-pdf/renderer\";\r\nimport MedicalCertificate from \"../Report/MedicalCertificate\";\r\nimport Receipt from \"../Report/Receipt\";\r\n\r\nexport class TCMCustomerListClass extends React.Component {\r\n  state = {\r\n    headerDetails: [\r\n      { label: \"Customer Code\" },\r\n      { label: \"Customer Name\" },\r\n      { label: \"Contact\" },\r\n      { label: \"Gender\" },\r\n      { label: \"Appointment Timing\" },\r\n      { label: \"Location\" },\r\n      { label: \"Physician\" },\r\n      { label: \"Status\" },\r\n      { label: \"\", width: \"100px\" },\r\n    ],\r\n    tcmCustomerList: [],\r\n    pageMeta: {},\r\n    active: false,\r\n    currentIndex: -1,\r\n    isPrintPdfClick: false,\r\n    accountHeader: {},\r\n    tcmPrescriptionMain: [],\r\n    MedicalCertificateResult: [],\r\n    isMedicalCertificateClick: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.queryHandler({});\r\n    this.getSiteBaseTitle();\r\n  }\r\n\r\n  // api call for list\r\n  queryHandler = data => {\r\n    let payload = {\r\n      siteCode: this.props.tokenDetails.site_code,\r\n      date: dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n    };\r\n    this.props.tcmCreateApi(`tcmCustomerListFronDesk/`, payload).then(res => {\r\n      console.log(res, \"dsfdfaafg\");\r\n      let { result, success } = res;\r\n      let { tcmCustomerList } = this.state;\r\n      if (success == \"1\" && result) {\r\n        tcmCustomerList = result;\r\n        this.setState({\r\n          tcmCustomerList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getSiteBaseTitle = () => {\r\n    this.props\r\n      .getTcmApi(\r\n        `getInvoiceTitle/?siteCode=${this.props.tokenDetails.site_code}`\r\n      )\r\n      .then(res => {\r\n        console.log(res, \"invoicetitle\");\r\n        let { result, success } = res;\r\n        if (success == \"1\" && result) {\r\n          this.setState({\r\n            accountHeader: result,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  getMedicalCertificate = data => {\r\n    this.props.getTcmApi(`tcmMedicalCertificate/?MCNo=${data}`).then(res => {\r\n      let { result, success } = res;\r\n      console.log(res, \"Mcnumber repsonse\");\r\n      if (success == \"1\" && result) {\r\n        this.getSiteBaseTitle();\r\n        this.setState({\r\n          MedicalCertificateResult: result,\r\n          isMedicalCertificateClick: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  handlePrintPdfFormat = url => {\r\n    let { tcmPrescriptionMain } = this.state;\r\n    this.setState({\r\n      isPrintPdfClick: false,\r\n    });\r\n    var a = document.createElement(\"a\");\r\n    a.setAttribute(\"download\", `${tcmPrescriptionMain[0].prescriptionNo}.pdf`);\r\n    a.setAttribute(\"href\", url);\r\n    a.click();\r\n    window.open(url);\r\n  };\r\n  handleReceipt = data => {\r\n    this.props\r\n      .getTcmApi(\r\n        `tcmPrescriptionReceipt/?PrescriptionNo=${data.prescriptionNo}`\r\n      )\r\n      .then(res => {\r\n        let { result, success } = res;\r\n        if (success == \"1\" && result) {\r\n          this.getSiteBaseTitle();\r\n          this.setState({\r\n            tcmPrescriptionMain: result,\r\n            isPrintPdfClick: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  handleMedicalReceiptPdfFormat = url => {\r\n    var a = document.createElement(\"a\");\r\n    a.setAttribute(\"download\", `${`MedicalCertificate`}.pdf`);\r\n    a.setAttribute(\"href\", url);\r\n    a.click();\r\n    this.setState({\r\n      isMedicalCertificateClick: false,\r\n    });\r\n    window.open(url);\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      tcmCustomerList,\r\n      isPrintPdfClick,\r\n      accountHeader,\r\n      tcmPrescriptionMain,\r\n      isMedicalCertificateClick,\r\n      MedicalCertificateResult,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"table-container table-responsive mt-3\">\r\n          <TableWrapper\r\n            headerDetails={headerDetails}\r\n            // queryHandler={this.handlePagination}\r\n            // pageMeta={pageMeta}\r\n          >\r\n            {tcmCustomerList.length > 0\r\n              ? tcmCustomerList.map((data, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {data.customerCode}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {data.customerName}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {data.contactNo}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {data.gender}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {data.apptDate}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {data.location}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {data.physician}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {data.apptStatus}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"position-relative\">\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <NormalButton\r\n                            className=\"fs-12\"\r\n                            label=\"Receipt\"\r\n                            mainbgrev={true}\r\n                            onClick={() => this.handleReceipt(data)}\r\n                            disabled={\r\n                              String(data.apptStatus).toUpperCase() === \"DONE\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                          <NormalButton\r\n                            className=\"fs-12 ml-2\"\r\n                            label=\"MC\"\r\n                            mainbgrev={true}\r\n                            // onClick={() => this.getMedicalCertificate(\"MC100051\")}\r\n                            onClick={() =>\r\n                              this.getMedicalCertificate(data.MCNo)\r\n                            }\r\n                            disabled={\r\n                              String(data.apptStatus).toUpperCase() === \"DONE\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </TableWrapper>\r\n\r\n          {isPrintPdfClick ? (\r\n            <PDFDownloadLink\r\n              document={\r\n                <Receipt\r\n                  MainInfo={this.state.tcmPrescriptionMain}\r\n                  accountHeader={this.state.accountHeader}\r\n                  landscape={false}\r\n                />\r\n              }\r\n            >\r\n              {({ blob, url, loading, error }) =>\r\n                !loading && url ? this.handlePrintPdfFormat(url) : null\r\n              }\r\n            </PDFDownloadLink>\r\n          ) : null}\r\n\r\n          {isMedicalCertificateClick ? (\r\n            <PDFDownloadLink\r\n              document={\r\n                <MedicalCertificate\r\n                  CertificateData={this.state.MedicalCertificateResult}\r\n                  HeaderDetail={this.state.accountHeader}\r\n                  landscape={false}\r\n                />\r\n              }\r\n            >\r\n              {({ blob, url, loading, error }) =>\r\n                !loading && url ? this.handleMedicalReceiptPdfFormat(url) : null\r\n              }\r\n            </PDFDownloadLink>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // filter: state.dashboard\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getTcmApi,\r\n      tcmCreateApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TCMCustomerList = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(TCMCustomerListClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}