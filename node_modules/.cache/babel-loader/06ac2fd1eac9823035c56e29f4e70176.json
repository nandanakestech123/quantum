{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Backend\\\\Itemclassification\\\\Range\\\\Prepaid\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, TableWrapper, InputSearch, NormalSelect } from \"component/common\";\nimport { withTranslation } from \"react-i18next\";\nimport { rangelists } from \"redux/actions/Backend\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport ReactPaginate from \"react-paginate\";\nimport \"../style.scss\";\nexport class ItemclassprepaidClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Code\",\n        divClass: \"justify-content-end\",\n        sortKey: \"itmCode\",\n        enabled: true,\n        id: \"itmCode\",\n        singleClickFunc: () => this.handleSort(\"itmCode\")\n      }, {\n        label: \"Description\",\n        sortKey: \"itmDesc\",\n        enabled: true,\n        id: \"itmDesc\",\n        singleClickFunc: () => this.handleSort(\"itmDesc\")\n      }, {\n        label: \"Brand\",\n        sortKey: \"brand\",\n        enabled: true,\n        id: \"brand\",\n        singleClickFunc: () => this.handleSort(\"brand\")\n      }, {\n        label: \"Active\",\n        sortKey: \"itmStatus\",\n        enabled: true,\n        id: \"itmStatus\",\n        singleClickFunc: () => this.handleSort(\"itmStatus\")\n      }],\n      prepaidList: [],\n      option: [{\n        label: 10,\n        value: 10\n      }, {\n        label: 25,\n        value: 25\n      }, {\n        label: 50,\n        value: 50\n      }, {\n        label: 100,\n        value: 100\n      }],\n      count: 10,\n      is_loading: false,\n      offset: 0,\n      data: [],\n      perPage: 10,\n      currentPage: 0,\n      List: []\n    };\n\n    this.componentDidMount = () => {\n      this.Listofprepaid({});\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.handleSort = (sortkey, order) => {\n      let {\n        List,\n        headerDetails,\n        orderBy\n      } = this.state;\n      this.setState({\n        orderBy: this.state.orderBy == \"asc\" ? \"desc\" : \"asc\"\n      });\n      console.log(\"che\");\n\n      if (orderBy === \"asc\") {\n        List.sort((a, b) => a[sortkey] > b[sortkey] ? 1 : b[sortkey] > a[sortkey] ? -1 : 0);\n      } else {\n        List.sort((a, b) => a[sortkey] < b[sortkey] ? 1 : b[sortkey] < a[sortkey] ? -1 : 0);\n      }\n\n      this.setState({\n        List\n      });\n    };\n\n    this.temp = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        count,\n        perPage\n      } = this.state;\n\n      if (name == \"count\") {\n        count = value;\n        perPage = value;\n        this.setState({\n          count,\n          perPage\n        });\n        console.log(count, perPage);\n        this.Listofprepaid();\n      }\n    };\n\n    this.Listofprepaid = async () => {\n      this.updateState({\n        is_loading: true\n      });\n      await this.props.rangelists().then(res => {\n        console.log(res);\n        let {\n          prepaidList,\n          pageCount,\n          List\n        } = this.state;\n\n        for (let key of res) {\n          if (key.isprepaid == true) {\n            prepaidList.push({\n              itmCode: key.itmCode,\n              itmDesc: key.itmDesc,\n              brand: key.brand,\n              itmStatus: key.itmStatus\n            });\n          }\n        }\n\n        List = prepaidList.slice(this.state.offset, this.state.offset + this.state.perPage);\n        pageCount = Math.ceil(prepaidList.length / this.state.perPage);\n        this.setState({\n          prepaidList,\n          List,\n          pageCount,\n          is_loading: false\n        });\n        console.log(prepaidList.length);\n      });\n    };\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.Listofprepaid();\n      });\n    };\n\n    this.Listofinactiveprepaid = async () => {\n      let {\n        pageCount,\n        List\n      } = this.state;\n      let Listone = [];\n      await this.props.rangelists().then(res => {\n        for (let key of res) {\n          if (key.itmStatus == false) {\n            if (key.isprepaid == true) {\n              Listone.push({\n                itmCode: key.itmCode,\n                itmDesc: key.itmDesc,\n                brand: key.brand,\n                itmStatus: key.itmStatus\n              });\n            }\n          }\n        }\n\n        this.setState({\n          Listone\n        });\n        List = Listone.slice(this.state.offset, this.state.offset + this.state.perPage);\n        pageCount = Math.ceil(Listone.length / this.state.perPage);\n        this.setState({\n          pageCount,\n          is_loading: false,\n          List\n        });\n      });\n    };\n\n    this.Listofactiveprepaid = async () => {\n      let {\n        pageCount,\n        List\n      } = this.state;\n      let Listone = [];\n      await this.props.rangelists().then(res => {\n        for (let key of res) {\n          if (key.itmStatus == true) {\n            if (key.isprepaid == true) {\n              Listone.push({\n                itmCode: key.itmCode,\n                itmDesc: key.itmDesc,\n                brand: key.brand,\n                itmStatus: key.itmStatus\n              });\n            }\n          }\n        }\n\n        this.setState({\n          Listone\n        });\n        List = Listone.slice(this.state.offset, this.state.offset + this.state.perPage);\n        pageCount = Math.ceil(Listone.length / this.state.perPage);\n        this.setState({\n          pageCount,\n          is_loading: false,\n          List\n        });\n      });\n    };\n  }\n\n  render() {\n    let {\n      headerDetails,\n      is_loading,\n      option,\n      List,\n      count\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid department-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"itemmaster-container col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"head-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, t(\"Prepaid Range\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputSearch, {\n      className: \"\",\n      placeholder: t(\"Search\"),\n      onEnter: this.handlesearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 col-3 entries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, t(\"Show\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: option,\n      value: count,\n      onChange: this.temp,\n      name: \"count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }\n    }, t(\"Entries\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" d-flex w-100 col-4 ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      label: \"All\",\n      onClick: this.Listofprepaid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      label: \"Active\",\n      onClick: this.Listofactiveprepaid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      label: \"Inactive\",\n      onClick: this.Listofinactiveprepaid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-table-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, is_loading ? /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }, \"Loading...\"))))) : List.length > 0 ? List.map(({\n      itmCode,\n      itmDesc,\n      brand,\n      itmStatus\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right text-success\",\n        onClick: () => this.props.history.push(`/admin/backend/prepaidId/${itmCode}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 35\n        }\n      }, itmCode)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 35\n        }\n      }, itmDesc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 35\n        }\n      }, brand)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 35\n        }\n      }, itmStatus == true ? \"Yes\" : \"No\")));\n    }) : null))), /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"prev\",\n      nextLabel: \"next\",\n      breakLabel: \"...\",\n      breakClassName: \"break-me\",\n      pageCount: this.state.pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: event => this.handlePageClick(event),\n      containerClassName: \"pagination\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: () => this.props.history.push(`/admin/backend/itemclassification/range/prepaid`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    }, \"+\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    rangelists\n  }, dispatch);\n};\n\nexport const Itemclassprepaid = withTranslation()(connect(null, mapDispatchToProps)(ItemclassprepaidClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Backend/Itemclassification/Range/Prepaid/index.js"],"names":["React","Component","NormalButton","TableWrapper","InputSearch","NormalSelect","withTranslation","rangelists","connect","bindActionCreators","ReactPaginate","ItemclassprepaidClass","state","headerDetails","label","divClass","sortKey","enabled","id","singleClickFunc","handleSort","prepaidList","option","value","count","is_loading","offset","data","perPage","currentPage","List","componentDidMount","Listofprepaid","updateState","isMounted","setState","sortkey","order","orderBy","console","log","sort","a","b","temp","target","name","props","then","res","pageCount","key","isprepaid","push","itmCode","itmDesc","brand","itmStatus","slice","Math","ceil","length","handlePageClick","e","selectedPage","selected","Listofinactiveprepaid","Listone","Listofactiveprepaid","render","t","handlesearch","map","index","history","event","mapDispatchToProps","dispatch","Itemclassprepaid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalButton,\r\n  TableWrapper,\r\n  InputSearch,\r\n  NormalSelect,\r\n} from \"component/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { rangelists } from \"redux/actions/Backend\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"../style.scss\";\r\n\r\nexport class ItemclassprepaidClass extends Component {\r\n  state = {\r\n    headerDetails: [\r\n      {\r\n        label: \"Code\",\r\n        divClass: \"justify-content-end\",\r\n        sortKey: \"itmCode\",\r\n        enabled: true,\r\n        id: \"itmCode\",\r\n        singleClickFunc: () => this.handleSort(\"itmCode\"),\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        sortKey: \"itmDesc\",\r\n        enabled: true,\r\n        id: \"itmDesc\",\r\n        singleClickFunc: () => this.handleSort(\"itmDesc\"),\r\n      },\r\n      {\r\n        label: \"Brand\",\r\n        sortKey: \"brand\",\r\n        enabled: true,\r\n        id: \"brand\",\r\n        singleClickFunc: () => this.handleSort(\"brand\"),\r\n      },\r\n      {\r\n        label: \"Active\",\r\n        sortKey: \"itmStatus\",\r\n        enabled: true,\r\n        id: \"itmStatus\",\r\n        singleClickFunc: () => this.handleSort(\"itmStatus\"),\r\n      },\r\n    ],\r\n\r\n    prepaidList: [],\r\n    option: [\r\n      { label: 10, value: 10 },\r\n      { label: 25, value: 25 },\r\n      { label: 50, value: 50 },\r\n      { label: 100, value: 100 },\r\n    ],\r\n    count: 10,\r\n    is_loading: false,\r\n    offset: 0,\r\n    data: [],\r\n    perPage: 10,\r\n    currentPage: 0,\r\n    List: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.Listofprepaid({});\r\n  };\r\n\r\n  updateState = (data) => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  handleSort = (sortkey, order) => {\r\n    let { List, headerDetails, orderBy } = this.state;\r\n    this.setState({\r\n      orderBy: this.state.orderBy == \"asc\" ? \"desc\" : \"asc\",\r\n    });\r\n    console.log(\"che\");\r\n    if (orderBy === \"asc\") {\r\n      List.sort((a, b) =>\r\n        a[sortkey] > b[sortkey] ? 1 : b[sortkey] > a[sortkey] ? -1 : 0\r\n      );\r\n    } else {\r\n      List.sort((a, b) =>\r\n        a[sortkey] < b[sortkey] ? 1 : b[sortkey] < a[sortkey] ? -1 : 0\r\n      );\r\n    }\r\n    this.setState({\r\n      List,\r\n    });\r\n  };\r\n\r\n  temp = ({ target: { value, name } }) => {\r\n    let { count, perPage } = this.state;\r\n    if (name == \"count\") {\r\n      count = value;\r\n      perPage = value;\r\n      this.setState({ count, perPage });\r\n      console.log(count, perPage);\r\n      this.Listofprepaid();\r\n    }\r\n  };\r\n\r\n  Listofprepaid = async () => {\r\n    this.updateState({ is_loading: true });\r\n    await this.props.rangelists().then((res) => {\r\n      console.log(res);\r\n      let { prepaidList, pageCount, List } = this.state;\r\n      for (let key of res) {\r\n        if (key.isprepaid == true) {\r\n          prepaidList.push({\r\n            itmCode: key.itmCode,\r\n            itmDesc: key.itmDesc,\r\n            brand: key.brand,\r\n            itmStatus: key.itmStatus,\r\n          });\r\n        }\r\n      }\r\n      List = prepaidList.slice(\r\n        this.state.offset,\r\n        this.state.offset + this.state.perPage\r\n      );\r\n      pageCount = Math.ceil(prepaidList.length / this.state.perPage);\r\n      this.setState({\r\n        prepaidList,\r\n        List,\r\n        pageCount,\r\n        is_loading: false,\r\n      });\r\n      console.log(prepaidList.length);\r\n    });\r\n  };\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState(\r\n      {\r\n        currentPage: selectedPage,\r\n        offset: offset,\r\n      },\r\n      () => {\r\n        this.Listofprepaid();\r\n      }\r\n    );\r\n  };\r\n\r\n  Listofinactiveprepaid = async () => {\r\n    let { pageCount, List } = this.state;\r\n    let Listone = [];\r\n    await this.props.rangelists().then((res) => {\r\n      for (let key of res) {\r\n        if (key.itmStatus == false) {\r\n          if (key.isprepaid == true) {\r\n            Listone.push({\r\n              itmCode: key.itmCode,\r\n              itmDesc: key.itmDesc,\r\n              brand: key.brand,\r\n              itmStatus: key.itmStatus,\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      this.setState({ Listone });\r\n\r\n      List = Listone.slice(\r\n        this.state.offset,\r\n        this.state.offset + this.state.perPage\r\n      );\r\n      pageCount = Math.ceil(Listone.length / this.state.perPage);\r\n      this.setState({\r\n        pageCount,\r\n        is_loading: false,\r\n        List,\r\n      });\r\n    });\r\n  };\r\n\r\n  Listofactiveprepaid = async () => {\r\n    let { pageCount, List } = this.state;\r\n    let Listone = [];\r\n    await this.props.rangelists().then((res) => {\r\n      for (let key of res) {\r\n        if (key.itmStatus == true) {\r\n          if (key.isprepaid == true) {\r\n            Listone.push({\r\n              itmCode: key.itmCode,\r\n              itmDesc: key.itmDesc,\r\n              brand: key.brand,\r\n              itmStatus: key.itmStatus,\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      this.setState({ Listone });\r\n\r\n      List = Listone.slice(\r\n        this.state.offset,\r\n        this.state.offset + this.state.perPage\r\n      );\r\n      pageCount = Math.ceil(Listone.length / this.state.perPage);\r\n      this.setState({\r\n        pageCount,\r\n        is_loading: false,\r\n        List,\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    let { headerDetails, is_loading, option, List, count } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid department-container\">\r\n          <div className=\"row\">\r\n            <div className={\"itemmaster-container col-12\"}>\r\n              <div className=\"row align-items-center\">\r\n                <div className=\"col-md-2\">\r\n                  <h4 className=\"head-label\">{t(\"Prepaid Range\")}</h4>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <div className=\"w-100 col-8\">\r\n                      <InputSearch\r\n                        className=\"\"\r\n                        placeholder={t(\"Search\")}\r\n                        onEnter={this.handlesearch}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex w-100 col-3 entries\">\r\n                      <p className=\"mt-2\">{t(\"Show\")}</p>\r\n                      <div className=\"p-1\">\r\n                        <NormalSelect\r\n                          options={option}\r\n                          value={count}\r\n                          onChange={this.temp}\r\n                          name=\"count\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"mt-2\">{t(\"Entries\")}</p>\r\n                    </div>\r\n                    <div className=\" d-flex w-100 col-4 ml-3\">\r\n                      <div className=\"p-1\">\r\n                        <NormalButton\r\n                          mainbg={true}\r\n                          label={\"All\"}\r\n                          onClick={this.Listofprepaid}\r\n                        />\r\n                      </div>\r\n                      <div className=\"p-1\">\r\n                        <NormalButton\r\n                          mainbg={true}\r\n                          label={\"Active\"}\r\n                          onClick={this.Listofactiveprepaid}\r\n                        />\r\n                      </div>\r\n                      <div className=\"p-1\">\r\n                        <NormalButton\r\n                          mainbg={true}\r\n                          label={\"Inactive\"}\r\n                          onClick={this.Listofinactiveprepaid}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tab-table-content\">\r\n                <div className=\"py-4\">\r\n                  <div className=\"table-container\">\r\n                    <TableWrapper headerDetails={headerDetails}>\r\n                      {is_loading ? (\r\n                        <tr>\r\n                          <td colSpan=\"7\">\r\n                            <div class=\"d-flex mt-5 align-items-center justify-content-center\">\r\n                              <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      ) : List.length > 0 ? (\r\n                        List.map(\r\n                          ({ itmCode, itmDesc, brand, itmStatus }, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>\r\n                                  <div\r\n                                    className=\"text-right text-success\"\r\n                                    onClick={() =>\r\n                                      this.props.history.push(\r\n                                        `/admin/backend/prepaidId/${itmCode}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    {itmCode}\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"text-left\">{itmDesc}</div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"text-left\">{brand}</div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"text-left\">\r\n                                    {itmStatus == true ? \"Yes\" : \"No\"}\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        )\r\n                      ) : null}\r\n                    </TableWrapper>\r\n                  </div>\r\n                </div>\r\n                <ReactPaginate\r\n                  previousLabel={\"prev\"}\r\n                  nextLabel={\"next\"}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"break-me\"}\r\n                  pageCount={this.state.pageCount}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={5}\r\n                  onPageChange={(event) => this.handlePageClick(event)}\r\n                  containerClassName={\"pagination\"}\r\n                  subContainerClassName={\"pages pagination\"}\r\n                  activeClassName={\"active\"}\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"icon\"\r\n                onClick={() =>\r\n                  this.props.history.push(\r\n                    `/admin/backend/itemclassification/range/prepaid`\r\n                  )\r\n                }\r\n              >\r\n                +\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      rangelists,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const Itemclassprepaid = withTranslation()(\r\n  connect(null, mapDispatchToProps)(ItemclassprepaidClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}