{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\TransactionHistory\\\\ChangeStaff.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalButton, NormalModal, NormalCheckbox } from \"component/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, commonCreateApi, commonDeleteApi } from \"redux/actions/common\";\nimport closeIcon from \"assets/images/close.png\";\nimport \"./style.scss\";\nimport { Toast } from \"service/toast\";\nimport { StaffList } from \"../Cart/cart/StaffList\";\nimport { withTranslation } from \"react-i18next\";\nimport { ChangeCourseTD } from \"./ChangeCourseTD\";\nimport { ChangeStaffTD } from \"./ChangeStaffTD\";\nexport class ChangeStaffClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_list: [],\n      item_status_options: [],\n      staffListPopup: false,\n      selectedAddStaffIndex: null,\n      staffList: [],\n      limit: 6,\n      page: 1,\n      meta: {},\n      sourceList: [],\n      selectedAddStaffType: 1,\n      activeRow: 0,\n      isOpenTreatmentDone: false,\n      SelectedItem: []\n    };\n\n    this.getStafflist = data => {\n      let {\n        page,\n        limit,\n        selectedAddStaffType\n      } = this.state;\n      this.props.getCommonApi(`empcartlist/?sales_staff=${selectedAddStaffType}&page=${page}&limit=${limit}`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(key, \"sdfgsdfgsdfgdfg sdfgsdfgsdfg\");\n        let {\n          staffList\n        } = this.state;\n        let {\n          meta\n        } = this.state;\n        staffList = [];\n        meta = {};\n        staffList = data;\n        meta = data.meta.pagination;\n        console.log(meta, \"metalist\");\n        this.setState({\n          staffList,\n          meta\n        });\n      });\n    };\n\n    this.handleNext = async () => {\n      let {\n        page\n      } = this.state;\n      page = page + 1;\n      await this.setState({\n        page\n      });\n\n      if (page > 0) {\n        this.getStafflist();\n      }\n    };\n\n    this.handleBack = async () => {\n      let {\n        page\n      } = this.state;\n      page = page - 1;\n      await this.setState({\n        page\n      });\n\n      if (page > 0) {\n        this.getStafflist();\n      }\n    };\n\n    this.getStaffSelectionList = () => {\n      let {\n        data_list\n      } = this.state;\n      let {\n        TransactionId\n      } = this.props;\n      this.props.getCommonApi(`changestaffs/?sa_transacno=${TransactionId}`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          console.log(key, \"cartstaffselectionpopuplist\");\n          data_list = data;\n          await this.setState({\n            data_list\n          });\n\n          if (this.state.data_list.length > 0) {\n            this.setState({\n              activeRow: this.state.data_list[0].id\n            });\n            document.getElementById(this.state.data_list[0].id).classList.toggle(\"d-none\");\n          }\n        }\n      });\n    };\n\n    this.handleStaffChange = async (e, index1, index2) => {\n      let {\n        data_list\n      } = this.state;\n      let data = this.state.data_list[index1].data[index2];\n\n      if ([e.target.name] == \"work\") {\n        if (this.state.data_list[index1][\"type\"].toUpperCase() == \"SALES\" && this.state.data_list[index1][\"div\"] == \"3\" || this.state.data_list[index1][\"type\"].toUpperCase() == \"DEPOSIT\" && this.state.data_list[index1][\"div\"] == \"3\") {\n          data[[e.target.name]] = e.target.value;\n          await this.setState({\n            data\n          });\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Work staff not allowed for Product\"\n          });\n        }\n      } else if ([e.target.name] == \"sales_percentage\") {\n        data[[e.target.name]] = e.target.value;\n        data[[\"priceSalesFlag\"]] = true;\n        await this.setState({\n          data\n        });\n        data_list[index1][\"updateSalesCalcFlag\"] = true;\n        await this.setState({\n          data_list\n        });\n      } else if ([e.target.name] == \"work_percentage\") {\n        data[[e.target.name]] = e.target.value;\n        data[[\"priceWorkFlag\"]] = true;\n        await this.setState({\n          data\n        });\n        data_list[index1][\"updateWorkCalcFlag\"] = true;\n        await this.setState({\n          data_list\n        });\n      } else {\n        data[[e.target.name]] = e.target.value;\n        await this.setState({\n          data\n        });\n      }\n    };\n\n    this.handleAccordion = async (id, index) => {\n      let {\n        data_list\n      } = this.state;\n      await this.setState({\n        activeRow: id\n      });\n      let elements = document.getElementsByClassName(\"accordion\");\n\n      for (let i = 0; i < elements.length; i++) {\n        elements[i].classList.add(\"d-none\");\n      }\n\n      document.getElementById(id).classList.toggle(\"d-none\");\n      console.log(elements);\n      let data = data_list[index].data;\n      let salesPercentCount = data.filter(acc => acc.sales === true && acc.priceSalesFlag == true).length;\n\n      if (salesPercentCount > 0) {\n        data_list[index][\"updateSalesCalcFlag\"] = true;\n        await this.setState({\n          data\n        });\n      } else {\n        data_list[index][\"updateSalesCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n\n      let workPercentCount = data.filter(acc => acc.work === true && acc.priceWorkFlag == true).length;\n\n      if (workPercentCount > 0) {\n        data_list[index][\"updateWorkCalcFlag\"] = true;\n        await this.setState({\n          data\n        });\n      } else {\n        data_list[index][\"updateWorkCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleSelectedStaff = async item => {\n      this.handleEmployeePopup();\n      let {\n        selectedAddStaffIndex,\n        selectedAddStaffType,\n        data_list\n      } = this.state;\n      let data = this.state.data_list[selectedAddStaffIndex].data;\n      let filter = data.find(acc => acc.emp_id === item.id);\n\n      if (filter) {\n        if (filter.work && selectedAddStaffType == 0) {\n          Toast({\n            type: \"error\",\n            message: \"This staff already found in work staff list\"\n          });\n        }\n\n        if (filter.sales && selectedAddStaffType == 1) {\n          Toast({\n            type: \"error\",\n            message: \"This staff already found in sales staff list\"\n          });\n        } else if (!filter.sales && selectedAddStaffType == 1) {\n          filter.sales = true;\n          this.handleSalesStaffCalc(selectedAddStaffIndex);\n        } else {\n          filter.work = true;\n          this.handleWorkStaffCalc(selectedAddStaffIndex);\n        }\n      } else {\n        data.push({\n          work: selectedAddStaffType == 0 ? true : false,\n          sales: selectedAddStaffType == 1 ? true : false,\n          staff: item.emp_name,\n          emp_id: item.id,\n          sales_percentage: 0,\n          sales_amount: 0,\n          sp: 0,\n          work_percentage: 0,\n          work_amount: 0,\n          wp: 0,\n          tmp_workid: null,\n          tmp_saleid: null\n        });\n        await this.setState({\n          data\n        });\n        selectedAddStaffType == 0 ? this.handleWorkStaffCalc(selectedAddStaffIndex) : this.handleSalesStaffCalc(selectedAddStaffIndex);\n        this.setState({\n          selectedAddStaffIndex: null,\n          selectedAddStaffType: null\n        });\n      }\n    };\n\n    this.handleEmployeePopup = () => {\n      this.setState(prevState => ({\n        staffListPopup: !prevState.staffListPopup\n      }));\n    };\n\n    this.handleAddNewStaff = async (index, type, item) => {\n      if (type == 0) {\n        if (item[\"type\"].toUpperCase() == \"SALES\" && item[\"div\"] == \"3\" || item[\"type\"].toUpperCase() == \"DEPOSIT\" && item[\"div\"] == \"3\") {\n          await this.setState({\n            selectedAddStaffIndex: index,\n            selectedAddStaffType: type,\n            staffList: [],\n            meta: {},\n            page: 1\n          });\n          this.getStafflist();\n          this.setState({\n            staffListPopup: true\n          });\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Work Staff not allowed for Product\"\n          });\n        }\n      } else {\n        await this.setState({\n          selectedAddStaffIndex: index,\n          selectedAddStaffType: type,\n          staffList: [],\n          meta: {},\n          page: 1\n        });\n        this.getStafflist();\n        this.setState({\n          staffListPopup: true\n        });\n      }\n    };\n\n    this.handlePostAction = () => {\n      let {\n        data_list\n      } = this.state;\n\n      for (let value of data_list) {\n        let type = value.type;\n        let div = value.div;\n        let transamt = Number(value.trans_amt).toFixed(2);\n        let work_amount = Number(value.work_amount).toFixed(2);\n        let sales_point = Number(value.sales_point);\n        let work_point = Number(value.work_point);\n        let salesPercent = 0;\n        let salesAmount = Number(0);\n        let salesPoint = Number(0);\n        let workPercent = Number(0);\n        let workAmount = Number(0);\n        let workPoint = Number(0);\n\n        for (let line of value.data) {\n          salesPercent += Number(line.sales_percentage);\n          salesAmount += Number(line.sales_amount);\n          salesPoint += Number(line.sp);\n          workPercent += Number(line.work_percentage);\n          workAmount += Number(line.work_amount);\n          workPoint += Number(line.wp); // if (line.work) {\n          //   if (\n          //     Number(line.work_amount) <= 0 ||\n          //     line.work_amount == null ||\n          //     line.work_percentage == null ||\n          //     Number(line.work_percentage) <= 0\n          //   ) {\n          //     Toast({\n          //       type: \"error\",\n          //       message:\n          //         \"Please check Work Staff Amount or Percentage should not be empty or Zero\",\n          //     });\n          //     return false;\n          //   }\n          // }\n          // if (line.sales) {\n          //   if (\n          //     Number(line.sales_amount) <= 0 ||\n          //     line.sales_amount == null ||\n          //     line.sales_percentage == null ||\n          //     Number(line.sales_percentage) <= 0\n          //   ) {\n          //     Toast({\n          //       type: \"error\",\n          //       message:\n          //         \"Please check Sales Staff Amount or Percentage should not be empty or Zero\",\n          //     });\n          //     return false;\n          //   }\n          // }\n        }\n\n        if (workPercent > 100 || workAmount > transamt) {\n          Toast({\n            type: \"error\",\n            message: \"Please check Work Staff Amount or Percentage should be less than Maximum\"\n          });\n          return false;\n        } else if (div == \"3\" && type.toUpperCase() == \"DEPOSIT\" && workAmount > work_amount) {\n          Toast({\n            type: \"error\",\n            message: \"Please check Work amount is should be equal to Max Work Amount\"\n          });\n          return false;\n        } else if (salesPercent > 100 || salesAmount > transamt) {\n          Toast({\n            type: \"error\",\n            message: \"Please check Sales Amount or percentage should be less than max Amount\"\n          });\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = () => {\n      let {\n        data_list\n      } = this.state;\n      let {\n        TransactionId\n      } = this.props;\n      console.log(data_list, \"staff selection submit list\");\n      let result = this.handlePostAction();\n\n      if (result) {\n        console.log(data_list, \"savedataforstaffselection\");\n        this.props.commonCreateApi(`changestaffs/staffs/?sa_transacno=${TransactionId}`, data_list).then(key => {\n          console.log(key, \"resultset of staffselection\");\n          let {\n            status,\n            data\n          } = key;\n\n          if (status == 200) {\n            this.props.handleModal();\n          }\n        });\n      }\n    };\n\n    this.handleSalesStaffCalc = async index => {\n      let {\n        data_list\n      } = this.state;\n      let salesStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.sales) {\n          salesStaffCount += 1;\n        }\n      }\n\n      let sales_percent = Number(100 / salesStaffCount).toFixed(2);\n      let totalsale = sales_percent * salesStaffCount;\n      let diff_sales_percent = Number(100 - totalsale).toFixed(2);\n      let sales_amount = Number(data_list[index][\"trans_amt\"] / salesStaffCount).toFixed(2);\n      let diff_sales_amount = Number(data_list[index][\"trans_amt\"] - sales_amount * salesStaffCount).toFixed(2);\n      let salespoints = Number(data_list[index][\"sales_point\"] / salesStaffCount).toFixed(2);\n      let diff_salespoints = Number(data_list[index][\"sales_point\"] - salespoints * salesStaffCount).toFixed(2);\n      let data = data_list[index].data;\n      let salesLength = data.filter(acc => acc.sales === true).length;\n      let i = 0;\n      let j = 1;\n\n      for (let dataLine of data_list[index].data) {\n        if (dataLine.sales) {\n          if (j == salesLength) {\n            let percent = Number(sales_percent) + Number(diff_sales_percent);\n            let amt = Number(sales_amount) + Number(diff_sales_amount);\n            let sp = Number(salespoints) + Number(diff_salespoints);\n            data[i][\"sales_percentage\"] = Number(percent).toFixed(2);\n            data[i][\"sales_amount\"] = Number(amt).toFixed(2);\n            data[i][\"sp\"] = Number(sp).toFixed(2);\n            data[i][\"priceSalesFlag\"] = false;\n            await this.setState({\n              data\n            });\n          } else {\n            data[i][\"sales_percentage\"] = sales_percent;\n            data[i][\"sales_amount\"] = sales_amount;\n            data[i][\"sp\"] = salespoints;\n            data[i][\"priceSalesFlag\"] = false;\n            await this.setState({\n              data\n            });\n          }\n\n          j++;\n        }\n\n        i++;\n      }\n\n      data_list[index][\"updateSalesCalcFlag\"] = false;\n      await this.setState({\n        data_list\n      });\n    };\n\n    this.handleWorkStaffCalc = async index => {\n      let {\n        data_list\n      } = this.state;\n      let workStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.work) {\n          workStaffCount += 1;\n        }\n      }\n\n      let work_percent = Number(100 / workStaffCount).toFixed(2);\n      let totalwork = work_percent * workStaffCount;\n      let diff_work_percent = Number(100 - totalwork).toFixed(2);\n      let work_amount = \"\";\n      let diff_work_amount = \"\";\n\n      if (data_list[index].div == \"3\" && data_list[index].type.toUpperCase() == \"DEPOSIT\") {\n        work_amount = Number(data_list[index][\"work_amount\"] / workStaffCount).toFixed(2);\n        diff_work_amount = Number(data_list[index][\"work_amount\"] - work_amount * workStaffCount).toFixed(2);\n      } else {\n        work_amount = Number(data_list[index][\"trans_amt\"] / workStaffCount).toFixed(2);\n        diff_work_amount = Number(data_list[index][\"trans_amt\"] - work_amount * workStaffCount).toFixed(2);\n      }\n\n      let workpoints = Number(data_list[index][\"work_point\"] / workStaffCount).toFixed(2);\n      let diff_workpoints = Number(data_list[index][\"work_point\"] - workpoints * workStaffCount).toFixed(2);\n      let data = data_list[index].data;\n      let i = 0;\n      let j = 1;\n      let workLength = data.filter(acc => acc.work === true).length;\n\n      for (let line of data_list[index].data) {\n        if (line.work) {\n          if (j == workLength) {\n            let percent = Number(work_percent) + Number(diff_work_percent);\n            let amt = Number(work_amount) + Number(diff_work_amount);\n            let wp = Number(workpoints) + Number(diff_workpoints);\n            data[i][\"work_percentage\"] = Number(percent).toFixed(2);\n            data[i][\"work_amount\"] = Number(amt).toFixed(2);\n            data[i][\"priceWorkFlag\"] = false;\n            data[i][\"wp\"] = Number(wp).toFixed(2);\n            await this.setState({\n              data\n            });\n          } else {\n            data[i][\"work_percentage\"] = work_percent;\n            data[i][\"work_amount\"] = work_amount;\n            data[i][\"priceWorkFlag\"] = false;\n            data[i][\"wp\"] = workpoints;\n            await this.setState({\n              data\n            });\n          }\n\n          j++;\n        }\n\n        i++;\n      }\n\n      data_list[index][\"updateWorkCalcFlag\"] = false;\n      await this.setState({\n        data_list\n      });\n    };\n\n    this.handleDeleteStaff = async (e, index1, index2) => {\n      let data = this.state.data_list[index1].data[index2];\n      let cartId = this.state.data_list[index1].id;\n      let Workid = 0;\n      let Saleid = 0;\n\n      if (data.tmp_workid == null) {\n        Workid = 0;\n      } else {\n        Workid = data.tmp_workid;\n      }\n\n      if (data.tmp_saleid == null) {\n        Saleid = 0;\n      } else {\n        Saleid = data.tmp_saleid;\n      }\n\n      let body = {\n        sales: data.sales,\n        work: data.work,\n        cart_id: Number(cartId),\n        tmp_workid: Number(Workid),\n        tmp_saleid: Number(Saleid)\n      };\n      console.log(body, \"selected row Item for delete\");\n\n      if (Number(Saleid) > 0 || Number(Workid) > 0) {\n        await this.props.commonCreateApi(`cartpopup/staffsdelete/`, body).then(res => {\n          let {\n            status\n          } = res;\n\n          if (status == \"200\") {\n            console.log(res, \"staffselectionpoppupdeleteresponse\");\n            let {\n              data_list\n            } = this.state;\n            data_list[index1].data.splice(index2, 1);\n            this.setState({\n              data_list\n            });\n\n            if (data.sales && data.work) {\n              this.handleWorkStaffCalc(index1);\n              this.handleSalesStaffCalc(index1);\n            } else if (data.sales && !data.work) {\n              this.handleSalesStaffCalc(index1);\n            } else if (!data.sales && data.work) {\n              this.handleWorkStaffCalc(index1);\n            } //this.getStaffSelectionList();\n\n          }\n        });\n      } else {\n        let {\n          data_list\n        } = this.state;\n        data_list[index1].data.splice(index2, 1);\n        this.setState({\n          data_list\n        });\n\n        if (data.sales && data.work) {\n          this.handleWorkStaffCalc(index1);\n          this.handleSalesStaffCalc(index1);\n        } else if (data.sales && !data.work) {\n          this.handleSalesStaffCalc(index1);\n        } else if (!data.sales && data.work) {\n          this.handleWorkStaffCalc(index1);\n        }\n      }\n    };\n\n    this.handleWorkPercentFocusOut = async (index, index2) => {\n      let {\n        data_list\n      } = this.state;\n      let workStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.work) {\n          workStaffCount += 1;\n        }\n      }\n\n      if (Number(data_list[index].data[index2][\"work_percentage\"]) <= 100) {\n        let ModifiedWork_percent = Number(data_list[index].data[index2][\"work_percentage\"]).toFixed(2);\n        let ModifiedWork_amount = 0;\n        let ModifiedWorkpoints = Number(ModifiedWork_percent / 100 * data_list[index][\"work_point\"]).toFixed(2);\n        let totalwork = Number(Number(100).toFixed(2) - Number(ModifiedWork_percent).toFixed(2)).toFixed(2);\n        let work_percent = Number(totalwork / (workStaffCount - 1)).toFixed(2);\n        let diff_work_percent = Number(totalwork - work_percent * (workStaffCount - 1)).toFixed(2);\n        let work_amount = 0;\n        let diff_work_amount = 0;\n        let totalWorkAmount = 0;\n        let totalWorkPoint = Number(Number(data_list[index][\"work_point\"]).toFixed(2) - Number(ModifiedWorkpoints).toFixed(2)).toFixed(2);\n        let workpoints = Number(totalWorkPoint / (workStaffCount - 1)).toFixed(2);\n        let diff_workpoints = Number(totalWorkPoint - workpoints * (workStaffCount - 1)).toFixed(2);\n\n        if (data_list[index].div == \"3\" && data_list[index].type.toUpperCase() == \"DEPOSIT\") {\n          ModifiedWork_amount = Number(ModifiedWork_percent / 100 * data_list[index][\"work_amount\"]).toFixed(2);\n          totalWorkAmount = Number(Number(data_list[index][\"work_amount\"]).toFixed(2) - Number(ModifiedWork_amount).toFixed(2)).toFixed(2);\n          work_amount = Number(totalWorkAmount / (workStaffCount - 1)).toFixed(2);\n          diff_work_amount = Number(totalWorkAmount - work_amount * (workStaffCount - 1)).toFixed(2);\n        } else {\n          ModifiedWork_amount = Number(ModifiedWork_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n          totalWorkAmount = Number(Number(data_list[index][\"trans_amt\"]).toFixed(2) - Number(ModifiedWork_amount).toFixed(2)).toFixed(2);\n          work_amount = Number(totalWorkAmount / (workStaffCount - 1)).toFixed(2);\n          diff_work_amount = Number(totalWorkAmount - work_amount * (workStaffCount - 1)).toFixed(2);\n        }\n\n        let data = data_list[index].data;\n        data_list[index].data[index2][\"work_percentage\"] = Number(ModifiedWork_percent).toFixed(2);\n        data_list[index].data[index2][\"work_amount\"] = Number(ModifiedWork_amount).toFixed(2);\n        data_list[index].data[index2][\"wp\"] = Number(ModifiedWorkpoints).toFixed(2);\n        await this.setState({\n          data\n        });\n        let workLength = data.filter(acc => acc.work === true && acc.staff !== data_list[index].data[index2][\"staff\"]).length;\n        let workData = data.filter(acc => acc.work === true && acc.staff !== data_list[index].data[index2][\"staff\"]);\n\n        if (workData) {\n          let i = 0;\n          let j = 1;\n\n          for (let line of data_list[index].data) {\n            if (line.work) {\n              if (data_list[index].data[index2][\"staff\"] === line.staff) {\n                data[i][\"work_percentage\"] = ModifiedWork_percent;\n                data[i][\"work_amount\"] = ModifiedWork_amount;\n                data[i][\"wp\"] = ModifiedWorkpoints;\n                await this.setState({\n                  data\n                });\n              } else {\n                if (j == workLength) {\n                  let percent = Number(work_percent) + Number(diff_work_percent);\n                  let amt = Number(work_amount) + Number(diff_work_amount);\n                  let wp = Number(workpoints) + Number(diff_workpoints);\n                  data[i][\"work_percentage\"] = Number(percent).toFixed(2);\n                  data[i][\"work_amount\"] = Number(amt).toFixed(2);\n                  data[i][\"wp\"] = Number(wp).toFixed(2);\n                  await this.setState({\n                    data\n                  });\n                } else {\n                  data[i][\"work_percentage\"] = work_percent;\n                  data[i][\"work_amount\"] = work_amount;\n                  data[i][\"wp\"] = workpoints;\n                  await this.setState({\n                    data\n                  });\n                }\n\n                j++;\n              }\n            }\n\n            i++;\n          }\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please enter valid percentage\"\n        });\n      }\n    };\n\n    this.handleSalesStaffPriceChange = async (e, index, index1) => {\n      let {\n        data_list\n      } = this.state;\n      let data = data_list[index].data[index1];\n      data[\"priceSalesFlag\"] = e.target.value;\n      await this.setState({\n        data\n      });\n      let salesPercentCount = data_list[index].data.filter(acc => acc.sales === true && acc.priceSalesFlag == true).length;\n\n      if (salesPercentCount > 0) {\n        data_list[index][\"updateSalesCalcFlag\"] = true;\n        await this.setState({\n          data_list\n        });\n      } else {\n        data_list[index][\"updateSalesCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleWorkStaffPriceChange = async (e, index, index1) => {\n      let {\n        data_list\n      } = this.state;\n      let data = data_list[index].data[index1];\n      data[\"priceWorkFlag\"] = e.target.value;\n      await this.setState({\n        data\n      });\n      let workPercentCount = data_list[index].data.filter(acc => acc.work === true && acc.priceWorkFlag == true).length;\n\n      if (workPercentCount > 0) {\n        data_list[index][\"updateWorkCalcFlag\"] = true;\n        await this.setState({\n          data_list\n        });\n      } else {\n        data_list[index][\"updateWorkCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleSalesPercentCalcUpdate = async index => {\n      let {\n        data_list\n      } = this.state;\n      let salesStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.sales) {\n          salesStaffCount += 1;\n        }\n      }\n\n      let data = data_list[index].data;\n      let salesPercentChange = data.filter(acc => acc.sales === true && acc.priceSalesFlag == true);\n      let salesStaffBalancePercent = 0;\n\n      if (salesPercentChange) {\n        for (let percentLine of salesPercentChange) {\n          if (percentLine.sales) {\n            salesStaffBalancePercent += Number(percentLine.sales_percentage);\n          }\n        }\n      }\n\n      if (salesPercentChange && salesStaffBalancePercent > 100) {\n        Toast({\n          type: \"error\",\n          message: \"Percentage should be less than 100\"\n        });\n      } else {\n        let salesPercentCount = data.filter(acc => acc.sales === true && acc.priceSalesFlag == true).length;\n        let ModifiedSales_percent = Number(100 - salesStaffBalancePercent).toFixed(2);\n        let Modifiedsales_amount = Number(ModifiedSales_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n        let Modifiedsalespoints = Number(ModifiedSales_percent / 100 * data_list[index][\"sales_point\"]).toFixed(2);\n        let sales_percent = Number(ModifiedSales_percent / (salesStaffCount - salesPercentCount)).toFixed(2);\n        let diff_sales_percent = Number(ModifiedSales_percent - sales_percent * (salesStaffCount - salesPercentCount)).toFixed(2);\n        let sales_amount = Number(Modifiedsales_amount / (salesStaffCount - salesPercentCount)).toFixed(2);\n        let diff_sales_amount = Number(Modifiedsales_amount - sales_amount * (salesStaffCount - salesPercentCount)).toFixed(2);\n        let salespoints = Number(Modifiedsalespoints / (salesStaffCount - salesPercentCount)).toFixed(2);\n        let diff_salespoints = Number(Modifiedsalespoints - salespoints * (salesStaffCount - salesPercentCount)).toFixed(2);\n        let i = 0;\n        let j = 1;\n\n        for (let dataLine of data_list[index].data) {\n          if (dataLine.sales) {\n            if (dataLine.priceSalesFlag) {\n              let LineSales_percent = Number(dataLine.sales_percentage).toFixed(2);\n              let Linesales_amount = Number(LineSales_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n              let Linesalespoints = Number(LineSales_percent / 100 * data_list[index][\"sales_point\"]).toFixed(2);\n              data[i][\"sales_percentage\"] = LineSales_percent;\n              data[i][\"sales_amount\"] = Linesales_amount;\n              data[i][\"sp\"] = Linesalespoints;\n              data[i][\"priceSalesFlag\"] = false;\n              await this.setState({\n                data\n              });\n            } else {\n              if (j == salesPercentCount) {\n                let percent = Number(sales_percent) + Number(diff_sales_percent);\n                let amt = Number(sales_amount) + Number(diff_sales_amount);\n                let sp = Number(salespoints) + Number(diff_salespoints);\n                data[i][\"sales_percentage\"] = Number(percent).toFixed(2);\n                data[i][\"sales_amount\"] = Number(amt).toFixed(2);\n                data[i][\"sp\"] = Number(sp).toFixed(2);\n                data[i][\"priceSalesFlag\"] = false;\n                await this.setState({\n                  data\n                });\n              } else {\n                data[i][\"sales_percentage\"] = sales_percent;\n                data[i][\"sales_amount\"] = sales_amount;\n                data[i][\"sp\"] = salespoints;\n                data[i][\"priceSalesFlag\"] = false;\n                await this.setState({\n                  data\n                });\n              }\n\n              j++;\n            }\n          }\n\n          i++;\n        }\n\n        data_list[index][\"updateSalesCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleWorkPercentCalcUpdate = async index => {\n      let {\n        data_list\n      } = this.state;\n      let WorkStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.work) {\n          WorkStaffCount += 1;\n        }\n      }\n\n      let data = data_list[index].data;\n      let workPercentChange = data.filter(acc => acc.work === true && acc.priceWorkFlag == true);\n      let workStaffBalancePercent = 0;\n\n      if (workPercentChange) {\n        for (let percentLine of workPercentChange) {\n          if (percentLine.work) {\n            workStaffBalancePercent += Number(percentLine.work_percentage);\n          }\n        }\n      }\n\n      if (workPercentChange && workStaffBalancePercent > 100) {\n        Toast({\n          type: \"error\",\n          message: \"Percentage should be less than 100\"\n        });\n      } else {\n        let workPercentCount = data.filter(acc => acc.work === true && acc.priceWorkFlag == true).length;\n        let ModifiedWork_percent = Number(100 - workStaffBalancePercent).toFixed(2);\n        let ModifiedWork_amount = 0;\n\n        if (data_list[index].div == \"3\" && data_list[index].type.toUpperCase() == \"DEPOSIT\") {\n          ModifiedWork_amount = Number(ModifiedWork_percent / 100 * data_list[index][\"work_amount\"]).toFixed(2);\n        } else {\n          ModifiedWork_amount = Number(ModifiedWork_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n        }\n\n        let ModifiedWorkpoints = Number(ModifiedWork_percent / 100 * data_list[index][\"work_point\"]).toFixed(2);\n        let work_percent = Number(ModifiedWork_percent / (WorkStaffCount - workPercentCount)).toFixed(2);\n        let diff_work_percent = Number(ModifiedWork_percent - work_percent * (WorkStaffCount - workPercentCount)).toFixed(2);\n        let work_amount = Number(ModifiedWork_amount / (WorkStaffCount - workPercentCount)).toFixed(2);\n        let diff_work_amount = Number(ModifiedWork_amount - work_amount * (WorkStaffCount - workPercentCount)).toFixed(2);\n        let workpoints = Number(ModifiedWorkpoints / (WorkStaffCount - workPercentCount)).toFixed(2);\n        let diff_workpoints = Number(ModifiedWorkpoints - workpoints * (WorkStaffCount - workPercentCount)).toFixed(2);\n        let i = 0;\n        let j = 1;\n\n        for (let dataLine of data_list[index].data) {\n          if (dataLine.work) {\n            if (dataLine.priceWorkFlag) {\n              let LineWork_percent = Number(dataLine.work_percentage).toFixed(2);\n              let LineWork_amount = 0;\n\n              if (data_list[index].div == \"3\" && data_list[index].type.toUpperCase() == \"DEPOSIT\") {\n                LineWork_amount = Number(LineWork_percent / 100 * data_list[index][\"work_amount\"]).toFixed(2);\n              } else {\n                LineWork_amount = Number(LineWork_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n              }\n\n              let Lineworkspoints = Number(LineWork_percent / 100 * data_list[index][\"work_point\"]).toFixed(2);\n              data[i][\"work_percentage\"] = LineWork_percent;\n              data[i][\"work_amount\"] = LineWork_amount;\n              data[i][\"wp\"] = Lineworkspoints;\n              data[i][\"priceWorkFlag\"] = false;\n              await this.setState({\n                data\n              });\n            } else {\n              if (j == workPercentCount) {\n                let percent = Number(work_percent) + Number(diff_work_percent);\n                let amt = Number(work_amount) + Number(diff_work_amount);\n                let wp = Number(workpoints) + Number(diff_workpoints);\n                data[i][\"work_percentage\"] = Number(percent).toFixed(2);\n                data[i][\"work_amount\"] = Number(amt).toFixed(2);\n                data[i][\"wp\"] = Number(wp).toFixed(2);\n                data[i][\"priceWorkFlag\"] = false;\n                await this.setState({\n                  data\n                });\n              } else {\n                data[i][\"work_percentage\"] = work_percent;\n                data[i][\"work_amount\"] = work_amount;\n                data[i][\"wp\"] = workpoints;\n                data[i][\"priceWorkFlag\"] = false;\n                await this.setState({\n                  data\n                });\n              }\n\n              j++;\n            }\n          }\n\n          i++;\n        }\n\n        data_list[index][\"updateWorkCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleTreatmentDone = async data => {\n      await this.setState({\n        SelectedItem: data\n      });\n      this.setState({\n        isOpenTreatmentDone: true\n      });\n    };\n\n    this.handleDialog = async () => {\n      let {\n        isOpenTreatmentDone\n      } = this.state;\n      isOpenTreatmentDone = false;\n      await this.setState({\n        isOpenTreatmentDone\n      });\n      this.getStaffSelectionList();\n    };\n  }\n\n  componentDidMount() {\n    this.getStaffSelectionList();\n  }\n\n  render() {\n    let {\n      data_list,\n      staffListPopup,\n      staffList,\n      meta,\n      activeRow,\n      isOpenTreatmentDone,\n      SelectedItem\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mb-4 mt-2 product-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 15\n      }\n    }, t(\"Staff Selection\"))), data_list && data_list.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: false,\n      className: \"col-12 fs-15 submit-btn\",\n      label: \"Done\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 19\n      }\n    }))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-3 pr-5 mt-2 fw-500 h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 13\n      }\n    }, `Item`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 13\n      }\n    }, `Qty`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 13\n      }\n    }, `Unit Price`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 13\n      }\n    }, `Disc $`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 13\n      }\n    }, `D/Price`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 13\n      }\n    }, `Amount`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 13\n      }\n    }, `Deposit`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4 overflow-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 11\n      }\n    }, data_list && data_list.length > 0 && data_list.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row  mb-2\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `row rounded p-2 accordion-menu border staff ${activeRow == item.id ? \"border-primary\" : \"\"}`,\n        onClick: () => this.handleAccordion(item.id, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 23\n        }\n      }, item.itemdesc), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 23\n        }\n      }, item.quantity), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 23\n        }\n      }, item.price), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 23\n        }\n      }, item.totl_disc), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 23\n        }\n      }, item.discount_price), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 23\n        }\n      }, item.trans_amt), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 23\n        }\n      }, item.deposit)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row  rounded bg-light p-1 d-none accordion\",\n        id: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table\",\n        style: {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"border-top-0 border-bottom-0 salesstaff-background\",\n        colSpan: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 fs-15 fw-500\",\n        label: \"Add\",\n        onClick: () => this.handleAddNewStaff(index, 1, item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-left border-top-0 border-bottom-0 salesstaff-background\",\n        colSpan: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 35\n        }\n      }, t(\"Sales staff\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 35\n        }\n      }, item.updateSalesCalcFlag ? /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 top-0\",\n        label: \"Calc\",\n        onClick: () => this.handleSalesPercentCalcUpdate(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 39\n        }\n      }) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 top-0\",\n        label: \"Auto\",\n        onClick: () => this.handleSalesStaffCalc(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"border-top-0 border-bottom-0 workstaff-background\",\n        colSpan: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 fs-15 fw-500\",\n        label: \"Add\",\n        onClick: () => this.handleAddNewStaff(index, 0, item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-top-0 border-bottom-0 workstaff-background\",\n        colSpan: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 35\n        }\n      }, t(\"Work staff\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 35\n        }\n      }, item.updateWorkCalcFlag ? /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 top-0\",\n        label: \"Calc\",\n        onClick: () => this.handleWorkPercentCalcUpdate(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 39\n        }\n      }) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12\",\n        label: \"Auto\",\n        onClick: () => this.handleWorkStaffCalc(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"th\", {\n        rowSpan: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 33\n        }\n      }, Number(item.sessiondone) > 0 && String(item.type).toUpperCase() === \"DEPOSIT\" && Number(item.div) === 3 ? /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12\",\n        label: \"TD\",\n        onClick: () => this.handleTreatmentDone(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 37\n        }\n      }) : \"\", Number(item.td_session) > 0 && String(item.type).toUpperCase() === \"SALES\" ? /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12\",\n        label: \"TD\",\n        onClick: () => this.handleTreatmentDone(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 37\n        }\n      }) : \"\"))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1243,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 salesstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 31\n        }\n      }, t(\"Staff\")), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 salesstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 31\n        }\n      }, \"% (\", `100`, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 salesstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 31\n        }\n      }, \"$ (\", item.trans_amt, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 salesstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 31\n        }\n      }, \"SP (\", item.sales_point, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 workstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 31\n        }\n      }, t(\"Staff\")), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 workstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274,\n          columnNumber: 31\n        }\n      }, \"% (\", `100`, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 workstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 31\n        }\n      }, \"$ (\", item.type.toUpperCase() == \"DEPOSIT\" && item.div == \"3\" ? item.work_amount : item.trans_amt, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-top-0 border-bottom-0 workstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 31\n        }\n      }, t(\"WP\"), \" (\", item.work_point, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        rowSpan: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1297,\n          columnNumber: 31\n        }\n      }, t(\"Action\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1300,\n          columnNumber: 27\n        }\n      }, data_list[index].data.length <= 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1302,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 33\n        }\n      }, t(\"No record found\"))) : null, data_list[index].data.map((data, index2) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center d-none workstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n          type: \"checkbox\",\n          checked: data.sales,\n          name: \"sales\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1315,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center d-none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1324,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n          type: \"checkbox\",\n          checked: data.work,\n          name: \"work\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1328,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right salesstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"text-left text-black common-label-text pb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1341,\n            columnNumber: 37\n          }\n        }, data.staff)), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right salesstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-nowrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1349,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1350,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"sales_percentage\",\n          type: \"number\",\n          value: data.sales && data.sales_percentage ? data.sales_percentage : \"\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.sales ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1351,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1369,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n          type: \"checkbox\",\n          checked: data.priceSalesFlag ? true : false,\n          name: \"priceSalesFlag\",\n          onChange: e => this.handleSalesStaffPriceChange(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1370,\n            columnNumber: 41\n          }\n        })))), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right salesstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"sales_amount\",\n          type: \"number\",\n          value: data.sales && data.sales_amount ? data.sales_amount : \"\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.sales ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1391,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right salesstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1405,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"sp\",\n          type: \"number\",\n          value: data.sp,\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.sales ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1409,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right workstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"text-left text-black common-label-text pb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1423,\n            columnNumber: 37\n          }\n        }, data.staff)), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right workstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-nowrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1431,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1432,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"work_percentage\",\n          type: \"number\",\n          value: data.work && data.work_percentage ? data.work_percentage : \"\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.work ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1433,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n          type: \"checkbox\",\n          checked: data.priceWorkFlag ? true : false,\n          name: \"priceWorkFlag\",\n          onChange: e => this.handleWorkStaffPriceChange(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1452,\n            columnNumber: 41\n          }\n        })))), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right workstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"work_amount\",\n          type: \"number\",\n          value: data.work && data.work_amount ? data.work_amount : \"\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.work ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1473,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center workstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"wp\",\n          type: \"number\",\n          value: data.wp,\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.work ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1491,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1501,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-12 p-0 fs-18 text-center cursor-pointer\",\n          onClick: e => this.handleDeleteStaff(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1502,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"icon-delete\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1508,\n            columnNumber: 39\n          }\n        }))));\n      }))))));\n    })), data_list && data_list.length <= 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 13\n      }\n    }, t(\"No Record Found\")) : null, /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"stock-memo-staff-listing\",\n      style: {\n        minWidth: \"75%\"\n      },\n      modal: staffListPopup,\n      handleModal: this.handleEmployeePopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1525,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleEmployeePopup,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1531,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StaffList, {\n      staffList: staffList,\n      meta: meta,\n      handleNext: () => this.handleNext(),\n      handleBack: () => this.handleBack(),\n      handleSelectedStaff: item => this.handleSelectedStaff(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-modal\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: isOpenTreatmentDone,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1551,\n        columnNumber: 13\n      }\n    }), String(SelectedItem.type).toUpperCase() === \"DEPOSIT\" && Number(SelectedItem.div) === 3 ? /*#__PURE__*/React.createElement(ChangeCourseTD //id={cartId}\n    , {\n      cartId: SelectedItem.id,\n      treatmentId: SelectedItem.treatment_ids,\n      sessionCount: SelectedItem.sessiondone,\n      depositAmt: SelectedItem.deposit,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1559,\n        columnNumber: 15\n      }\n    }) : \"\", String(SelectedItem.type).toUpperCase() === \"SALES\" ? /*#__PURE__*/React.createElement(ChangeStaffTD, {\n      id: SelectedItem.treatment_ids,\n      session: SelectedItem.td_session,\n      cartId: SelectedItem.id,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1571,\n        columnNumber: 15\n      }\n    }) : \"\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  basicApptDetail: state.appointment.basicApptDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonCreateApi,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const ChangeStaff = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ChangeStaffClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/TransactionHistory/ChangeStaff.js"],"names":["React","Component","NormalInput","NormalButton","NormalModal","NormalCheckbox","connect","bindActionCreators","getCommonApi","commonCreateApi","commonDeleteApi","closeIcon","Toast","StaffList","withTranslation","ChangeCourseTD","ChangeStaffTD","ChangeStaffClass","state","data_list","item_status_options","staffListPopup","selectedAddStaffIndex","staffList","limit","page","meta","sourceList","selectedAddStaffType","activeRow","isOpenTreatmentDone","SelectedItem","getStafflist","data","props","then","key","status","console","log","pagination","setState","handleNext","handleBack","getStaffSelectionList","TransactionId","length","id","document","getElementById","classList","toggle","handleStaffChange","e","index1","index2","target","name","toUpperCase","value","type","message","handleAccordion","index","elements","getElementsByClassName","i","add","salesPercentCount","filter","acc","sales","priceSalesFlag","workPercentCount","work","priceWorkFlag","handleSelectedStaff","item","handleEmployeePopup","find","emp_id","handleSalesStaffCalc","handleWorkStaffCalc","push","staff","emp_name","sales_percentage","sales_amount","sp","work_percentage","work_amount","wp","tmp_workid","tmp_saleid","prevState","handleAddNewStaff","handlePostAction","div","transamt","Number","trans_amt","toFixed","sales_point","work_point","salesPercent","salesAmount","salesPoint","workPercent","workAmount","workPoint","line","handleSubmit","result","handleModal","salesStaffCount","sales_percent","totalsale","diff_sales_percent","diff_sales_amount","salespoints","diff_salespoints","salesLength","j","dataLine","percent","amt","workStaffCount","work_percent","totalwork","diff_work_percent","diff_work_amount","workpoints","diff_workpoints","workLength","handleDeleteStaff","cartId","Workid","Saleid","body","cart_id","res","splice","handleWorkPercentFocusOut","ModifiedWork_percent","ModifiedWork_amount","ModifiedWorkpoints","totalWorkAmount","totalWorkPoint","workData","handleSalesStaffPriceChange","handleWorkStaffPriceChange","handleSalesPercentCalcUpdate","salesPercentChange","salesStaffBalancePercent","percentLine","ModifiedSales_percent","Modifiedsales_amount","Modifiedsalespoints","LineSales_percent","Linesales_amount","Linesalespoints","handleWorkPercentCalcUpdate","WorkStaffCount","workPercentChange","workStaffBalancePercent","LineWork_percent","LineWork_amount","Lineworkspoints","handleTreatmentDone","handleDialog","componentDidMount","render","t","map","itemdesc","quantity","price","totl_disc","discount_price","deposit","marginRight","updateSalesCalcFlag","updateWorkCalcFlag","sessiondone","String","td_session","minWidth","treatment_ids","mapStateToProps","basicApptDetail","appointment","mapDispatchToProps","dispatch","ChangeStaff"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalInput,\r\n  NormalButton,\r\n  NormalModal,\r\n  NormalCheckbox,\r\n} from \"component/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  commonCreateApi,\r\n  commonDeleteApi,\r\n} from \"redux/actions/common\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport \"./style.scss\";\r\nimport { Toast } from \"service/toast\";\r\nimport { StaffList } from \"../Cart/cart/StaffList\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { ChangeCourseTD } from \"./ChangeCourseTD\";\r\nimport { ChangeStaffTD } from \"./ChangeStaffTD\";\r\n\r\nexport class ChangeStaffClass extends Component {\r\n  state = {\r\n    data_list: [],\r\n    item_status_options: [],\r\n    staffListPopup: false,\r\n    selectedAddStaffIndex: null,\r\n    staffList: [],\r\n    limit: 6,\r\n    page: 1,\r\n    meta: {},\r\n    sourceList: [],\r\n    selectedAddStaffType: 1,\r\n    activeRow: 0,\r\n    isOpenTreatmentDone: false,\r\n    SelectedItem: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getStaffSelectionList();\r\n  }\r\n  getStafflist = data => {\r\n    let { page, limit, selectedAddStaffType } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `empcartlist/?sales_staff=${selectedAddStaffType}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        console.log(key, \"sdfgsdfgsdfgdfg sdfgsdfgsdfg\");\r\n        let { staffList } = this.state;\r\n        let { meta } = this.state;\r\n        staffList = [];\r\n        meta = {};\r\n        staffList = data;\r\n        meta = data.meta.pagination;\r\n        console.log(meta, \"metalist\");\r\n        this.setState({\r\n          staffList,\r\n          meta,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleNext = async () => {\r\n    let { page } = this.state;\r\n    page = page + 1;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    if (page > 0) {\r\n      this.getStafflist();\r\n    }\r\n  };\r\n\r\n  handleBack = async () => {\r\n    let { page } = this.state;\r\n    page = page - 1;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    if (page > 0) {\r\n      this.getStafflist();\r\n    }\r\n  };\r\n\r\n  getStaffSelectionList = () => {\r\n    let { data_list } = this.state;\r\n    let { TransactionId } = this.props;\r\n    this.props\r\n      .getCommonApi(`changestaffs/?sa_transacno=${TransactionId}`)\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          console.log(key, \"cartstaffselectionpopuplist\");\r\n          data_list = data;\r\n          await this.setState({\r\n            data_list,\r\n          });\r\n\r\n          if (this.state.data_list.length > 0) {\r\n            this.setState({\r\n              activeRow: this.state.data_list[0].id,\r\n            });\r\n            document\r\n              .getElementById(this.state.data_list[0].id)\r\n              .classList.toggle(\"d-none\");\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  handleStaffChange = async (e, index1, index2) => {\r\n    let { data_list } = this.state;\r\n    let data = this.state.data_list[index1].data[index2];\r\n    if ([e.target.name] == \"work\") {\r\n      if (\r\n        (this.state.data_list[index1][\"type\"].toUpperCase() == \"SALES\" &&\r\n          this.state.data_list[index1][\"div\"] == \"3\") ||\r\n        (this.state.data_list[index1][\"type\"].toUpperCase() == \"DEPOSIT\" &&\r\n          this.state.data_list[index1][\"div\"] == \"3\")\r\n      ) {\r\n        data[[e.target.name]] = e.target.value;\r\n        await this.setState({ data });\r\n      } else {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Work staff not allowed for Product\",\r\n        });\r\n      }\r\n    } else if ([e.target.name] == \"sales_percentage\") {\r\n      data[[e.target.name]] = e.target.value;\r\n      data[[\"priceSalesFlag\"]] = true;\r\n      await this.setState({ data });\r\n\r\n      data_list[index1][\"updateSalesCalcFlag\"] = true;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    } else if ([e.target.name] == \"work_percentage\") {\r\n      data[[e.target.name]] = e.target.value;\r\n      data[[\"priceWorkFlag\"]] = true;\r\n      await this.setState({ data });\r\n\r\n      data_list[index1][\"updateWorkCalcFlag\"] = true;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    } else {\r\n      data[[e.target.name]] = e.target.value;\r\n      await this.setState({ data });\r\n    }\r\n  };\r\n\r\n  handleAccordion = async (id, index) => {\r\n    let { data_list } = this.state;\r\n    await this.setState({\r\n      activeRow: id,\r\n    });\r\n    let elements = document.getElementsByClassName(\"accordion\");\r\n    for (let i = 0; i < elements.length; i++) {\r\n      elements[i].classList.add(\"d-none\");\r\n    }\r\n    document.getElementById(id).classList.toggle(\"d-none\");\r\n    console.log(elements);\r\n    let data = data_list[index].data;\r\n    let salesPercentCount = data.filter(\r\n      acc => acc.sales === true && acc.priceSalesFlag == true\r\n    ).length;\r\n    if (salesPercentCount > 0) {\r\n      data_list[index][\"updateSalesCalcFlag\"] = true;\r\n      await this.setState({\r\n        data,\r\n      });\r\n    } else {\r\n      data_list[index][\"updateSalesCalcFlag\"] = false;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    }\r\n\r\n    let workPercentCount = data.filter(\r\n      acc => acc.work === true && acc.priceWorkFlag == true\r\n    ).length;\r\n    if (workPercentCount > 0) {\r\n      data_list[index][\"updateWorkCalcFlag\"] = true;\r\n      await this.setState({\r\n        data,\r\n      });\r\n    } else {\r\n      data_list[index][\"updateWorkCalcFlag\"] = false;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSelectedStaff = async item => {\r\n    this.handleEmployeePopup();\r\n    let { selectedAddStaffIndex, selectedAddStaffType, data_list } = this.state;\r\n    let data = this.state.data_list[selectedAddStaffIndex].data;\r\n\r\n    let filter = data.find(acc => acc.emp_id === item.id);\r\n    if (filter) {\r\n      if (filter.work && selectedAddStaffType == 0) {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"This staff already found in work staff list\",\r\n        });\r\n      }\r\n      if (filter.sales && selectedAddStaffType == 1) {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"This staff already found in sales staff list\",\r\n        });\r\n      } else if (!filter.sales && selectedAddStaffType == 1) {\r\n        filter.sales = true;\r\n        this.handleSalesStaffCalc(selectedAddStaffIndex);\r\n      } else {\r\n        filter.work = true;\r\n        this.handleWorkStaffCalc(selectedAddStaffIndex);\r\n      }\r\n    } else {\r\n      data.push({\r\n        work: selectedAddStaffType == 0 ? true : false,\r\n        sales: selectedAddStaffType == 1 ? true : false,\r\n        staff: item.emp_name,\r\n        emp_id: item.id,\r\n        sales_percentage: 0,\r\n        sales_amount: 0,\r\n        sp: 0,\r\n        work_percentage: 0,\r\n        work_amount: 0,\r\n        wp: 0,\r\n        tmp_workid: null,\r\n        tmp_saleid: null,\r\n      });\r\n      await this.setState({ data });\r\n\r\n      selectedAddStaffType == 0\r\n        ? this.handleWorkStaffCalc(selectedAddStaffIndex)\r\n        : this.handleSalesStaffCalc(selectedAddStaffIndex);\r\n\r\n      this.setState({\r\n        selectedAddStaffIndex: null,\r\n        selectedAddStaffType: null,\r\n      });\r\n    }\r\n  };\r\n  handleEmployeePopup = () => {\r\n    this.setState(prevState => ({\r\n      staffListPopup: !prevState.staffListPopup,\r\n    }));\r\n  };\r\n  handleAddNewStaff = async (index, type, item) => {\r\n    if (type == 0) {\r\n      if (\r\n        (item[\"type\"].toUpperCase() == \"SALES\" && item[\"div\"] == \"3\") ||\r\n        (item[\"type\"].toUpperCase() == \"DEPOSIT\" && item[\"div\"] == \"3\")\r\n      ) {\r\n        await this.setState({\r\n          selectedAddStaffIndex: index,\r\n          selectedAddStaffType: type,\r\n          staffList: [],\r\n          meta: {},\r\n          page: 1,\r\n        });\r\n        this.getStafflist();\r\n        this.setState({\r\n          staffListPopup: true,\r\n        });\r\n      } else {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Work Staff not allowed for Product\",\r\n        });\r\n      }\r\n    } else {\r\n      await this.setState({\r\n        selectedAddStaffIndex: index,\r\n        selectedAddStaffType: type,\r\n        staffList: [],\r\n        meta: {},\r\n        page: 1,\r\n      });\r\n      this.getStafflist();\r\n      this.setState({\r\n        staffListPopup: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handlePostAction = () => {\r\n    let { data_list } = this.state;\r\n\r\n    for (let value of data_list) {\r\n      let type = value.type;\r\n      let div = value.div;\r\n      let transamt = Number(value.trans_amt).toFixed(2);\r\n      let work_amount = Number(value.work_amount).toFixed(2);\r\n      let sales_point = Number(value.sales_point);\r\n      let work_point = Number(value.work_point);\r\n      let salesPercent = 0;\r\n      let salesAmount = Number(0);\r\n      let salesPoint = Number(0);\r\n      let workPercent = Number(0);\r\n      let workAmount = Number(0);\r\n      let workPoint = Number(0);\r\n      for (let line of value.data) {\r\n        salesPercent += Number(line.sales_percentage);\r\n        salesAmount += Number(line.sales_amount);\r\n        salesPoint += Number(line.sp);\r\n        workPercent += Number(line.work_percentage);\r\n        workAmount += Number(line.work_amount);\r\n        workPoint += Number(line.wp);\r\n\r\n        // if (line.work) {\r\n        //   if (\r\n        //     Number(line.work_amount) <= 0 ||\r\n        //     line.work_amount == null ||\r\n        //     line.work_percentage == null ||\r\n        //     Number(line.work_percentage) <= 0\r\n        //   ) {\r\n        //     Toast({\r\n        //       type: \"error\",\r\n        //       message:\r\n        //         \"Please check Work Staff Amount or Percentage should not be empty or Zero\",\r\n        //     });\r\n        //     return false;\r\n        //   }\r\n        // }\r\n        // if (line.sales) {\r\n        //   if (\r\n        //     Number(line.sales_amount) <= 0 ||\r\n        //     line.sales_amount == null ||\r\n        //     line.sales_percentage == null ||\r\n        //     Number(line.sales_percentage) <= 0\r\n        //   ) {\r\n        //     Toast({\r\n        //       type: \"error\",\r\n        //       message:\r\n        //         \"Please check Sales Staff Amount or Percentage should not be empty or Zero\",\r\n        //     });\r\n        //     return false;\r\n        //   }\r\n        // }\r\n      }\r\n      if (workPercent > 100 || workAmount > transamt) {\r\n        Toast({\r\n          type: \"error\",\r\n          message:\r\n            \"Please check Work Staff Amount or Percentage should be less than Maximum\",\r\n        });\r\n        return false;\r\n      } else if (\r\n        div == \"3\" &&\r\n        type.toUpperCase() == \"DEPOSIT\" &&\r\n        workAmount > work_amount\r\n      ) {\r\n        Toast({\r\n          type: \"error\",\r\n          message:\r\n            \"Please check Work amount is should be equal to Max Work Amount\",\r\n        });\r\n        return false;\r\n      } else if (salesPercent > 100 || salesAmount > transamt) {\r\n        Toast({\r\n          type: \"error\",\r\n          message:\r\n            \"Please check Sales Amount or percentage should be less than max Amount\",\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    let { data_list } = this.state;\r\n    let { TransactionId } = this.props;\r\n    console.log(data_list, \"staff selection submit list\");\r\n    let result = this.handlePostAction();\r\n    if (result) {\r\n      console.log(data_list, \"savedataforstaffselection\");\r\n      this.props\r\n        .commonCreateApi(\r\n          `changestaffs/staffs/?sa_transacno=${TransactionId}`,\r\n          data_list\r\n        )\r\n        .then(key => {\r\n          console.log(key, \"resultset of staffselection\");\r\n          let { status, data } = key;\r\n          if (status == 200) {\r\n            this.props.handleModal();\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleSalesStaffCalc = async index => {\r\n    let { data_list } = this.state;\r\n    let salesStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.sales) {\r\n        salesStaffCount += 1;\r\n      }\r\n    }\r\n    let sales_percent = Number(100 / salesStaffCount).toFixed(2);\r\n    let totalsale = sales_percent * salesStaffCount;\r\n    let diff_sales_percent = Number(100 - totalsale).toFixed(2);\r\n    let sales_amount = Number(\r\n      data_list[index][\"trans_amt\"] / salesStaffCount\r\n    ).toFixed(2);\r\n    let diff_sales_amount = Number(\r\n      data_list[index][\"trans_amt\"] - sales_amount * salesStaffCount\r\n    ).toFixed(2);\r\n    let salespoints = Number(\r\n      data_list[index][\"sales_point\"] / salesStaffCount\r\n    ).toFixed(2);\r\n    let diff_salespoints = Number(\r\n      data_list[index][\"sales_point\"] - salespoints * salesStaffCount\r\n    ).toFixed(2);\r\n    let data = data_list[index].data;\r\n    let salesLength = data.filter(acc => acc.sales === true).length;\r\n    let i = 0;\r\n    let j = 1;\r\n    for (let dataLine of data_list[index].data) {\r\n      if (dataLine.sales) {\r\n        if (j == salesLength) {\r\n          let percent = Number(sales_percent) + Number(diff_sales_percent);\r\n          let amt = Number(sales_amount) + Number(diff_sales_amount);\r\n          let sp = Number(salespoints) + Number(diff_salespoints);\r\n          data[i][\"sales_percentage\"] = Number(percent).toFixed(2);\r\n          data[i][\"sales_amount\"] = Number(amt).toFixed(2);\r\n          data[i][\"sp\"] = Number(sp).toFixed(2);\r\n          data[i][\"priceSalesFlag\"] = false;\r\n          await this.setState({ data });\r\n        } else {\r\n          data[i][\"sales_percentage\"] = sales_percent;\r\n          data[i][\"sales_amount\"] = sales_amount;\r\n          data[i][\"sp\"] = salespoints;\r\n          data[i][\"priceSalesFlag\"] = false;\r\n          await this.setState({ data });\r\n        }\r\n        j++;\r\n      }\r\n      i++;\r\n    }\r\n    data_list[index][\"updateSalesCalcFlag\"] = false;\r\n    await this.setState({\r\n      data_list,\r\n    });\r\n  };\r\n  handleWorkStaffCalc = async index => {\r\n    let { data_list } = this.state;\r\n\r\n    let workStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.work) {\r\n        workStaffCount += 1;\r\n      }\r\n    }\r\n\r\n    let work_percent = Number(100 / workStaffCount).toFixed(2);\r\n    let totalwork = work_percent * workStaffCount;\r\n    let diff_work_percent = Number(100 - totalwork).toFixed(2);\r\n    let work_amount = \"\";\r\n    let diff_work_amount = \"\";\r\n    if (\r\n      data_list[index].div == \"3\" &&\r\n      data_list[index].type.toUpperCase() == \"DEPOSIT\"\r\n    ) {\r\n      work_amount = Number(\r\n        data_list[index][\"work_amount\"] / workStaffCount\r\n      ).toFixed(2);\r\n      diff_work_amount = Number(\r\n        data_list[index][\"work_amount\"] - work_amount * workStaffCount\r\n      ).toFixed(2);\r\n    } else {\r\n      work_amount = Number(\r\n        data_list[index][\"trans_amt\"] / workStaffCount\r\n      ).toFixed(2);\r\n      diff_work_amount = Number(\r\n        data_list[index][\"trans_amt\"] - work_amount * workStaffCount\r\n      ).toFixed(2);\r\n    }\r\n    let workpoints = Number(\r\n      data_list[index][\"work_point\"] / workStaffCount\r\n    ).toFixed(2);\r\n    let diff_workpoints = Number(\r\n      data_list[index][\"work_point\"] - workpoints * workStaffCount\r\n    ).toFixed(2);\r\n    let data = data_list[index].data;\r\n    let i = 0;\r\n    let j = 1;\r\n    let workLength = data.filter(acc => acc.work === true).length;\r\n    for (let line of data_list[index].data) {\r\n      if (line.work) {\r\n        if (j == workLength) {\r\n          let percent = Number(work_percent) + Number(diff_work_percent);\r\n          let amt = Number(work_amount) + Number(diff_work_amount);\r\n          let wp = Number(workpoints) + Number(diff_workpoints);\r\n\r\n          data[i][\"work_percentage\"] = Number(percent).toFixed(2);\r\n\r\n          data[i][\"work_amount\"] = Number(amt).toFixed(2);\r\n          data[i][\"priceWorkFlag\"] = false;\r\n          data[i][\"wp\"] = Number(wp).toFixed(2);\r\n          await this.setState({ data });\r\n        } else {\r\n          data[i][\"work_percentage\"] = work_percent;\r\n          data[i][\"work_amount\"] = work_amount;\r\n          data[i][\"priceWorkFlag\"] = false;\r\n          data[i][\"wp\"] = workpoints;\r\n          await this.setState({ data });\r\n        }\r\n        j++;\r\n      }\r\n      i++;\r\n    }\r\n    data_list[index][\"updateWorkCalcFlag\"] = false;\r\n    await this.setState({\r\n      data_list,\r\n    });\r\n  };\r\n\r\n  handleDeleteStaff = async (e, index1, index2) => {\r\n    let data = this.state.data_list[index1].data[index2];\r\n    let cartId = this.state.data_list[index1].id;\r\n    let Workid = 0;\r\n    let Saleid = 0;\r\n    if (data.tmp_workid == null) {\r\n      Workid = 0;\r\n    } else {\r\n      Workid = data.tmp_workid;\r\n    }\r\n    if (data.tmp_saleid == null) {\r\n      Saleid = 0;\r\n    } else {\r\n      Saleid = data.tmp_saleid;\r\n    }\r\n\r\n    let body = {\r\n      sales: data.sales,\r\n      work: data.work,\r\n      cart_id: Number(cartId),\r\n      tmp_workid: Number(Workid),\r\n      tmp_saleid: Number(Saleid),\r\n    };\r\n    console.log(body, \"selected row Item for delete\");\r\n    if (Number(Saleid) > 0 || Number(Workid) > 0) {\r\n      await this.props\r\n        .commonCreateApi(`cartpopup/staffsdelete/`, body)\r\n        .then(res => {\r\n          let { status } = res;\r\n          if (status == \"200\") {\r\n            console.log(res, \"staffselectionpoppupdeleteresponse\");\r\n            let { data_list } = this.state;\r\n            data_list[index1].data.splice(index2, 1);\r\n            this.setState({ data_list });\r\n            if (data.sales && data.work) {\r\n              this.handleWorkStaffCalc(index1);\r\n              this.handleSalesStaffCalc(index1);\r\n            } else if (data.sales && !data.work) {\r\n              this.handleSalesStaffCalc(index1);\r\n            } else if (!data.sales && data.work) {\r\n              this.handleWorkStaffCalc(index1);\r\n            }\r\n            //this.getStaffSelectionList();\r\n          }\r\n        });\r\n    } else {\r\n      let { data_list } = this.state;\r\n      data_list[index1].data.splice(index2, 1);\r\n      this.setState({ data_list });\r\n      if (data.sales && data.work) {\r\n        this.handleWorkStaffCalc(index1);\r\n        this.handleSalesStaffCalc(index1);\r\n      } else if (data.sales && !data.work) {\r\n        this.handleSalesStaffCalc(index1);\r\n      } else if (!data.sales && data.work) {\r\n        this.handleWorkStaffCalc(index1);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleWorkPercentFocusOut = async (index, index2) => {\r\n    let { data_list } = this.state;\r\n\r\n    let workStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.work) {\r\n        workStaffCount += 1;\r\n      }\r\n    }\r\n    if (Number(data_list[index].data[index2][\"work_percentage\"]) <= 100) {\r\n      let ModifiedWork_percent = Number(\r\n        data_list[index].data[index2][\"work_percentage\"]\r\n      ).toFixed(2);\r\n      let ModifiedWork_amount = 0;\r\n      let ModifiedWorkpoints = Number(\r\n        (ModifiedWork_percent / 100) * data_list[index][\"work_point\"]\r\n      ).toFixed(2);\r\n\r\n      let totalwork = Number(\r\n        Number(100).toFixed(2) - Number(ModifiedWork_percent).toFixed(2)\r\n      ).toFixed(2);\r\n      let work_percent = Number(totalwork / (workStaffCount - 1)).toFixed(2);\r\n\r\n      let diff_work_percent = Number(\r\n        totalwork - work_percent * (workStaffCount - 1)\r\n      ).toFixed(2);\r\n\r\n      let work_amount = 0;\r\n      let diff_work_amount = 0;\r\n      let totalWorkAmount = 0;\r\n      let totalWorkPoint = Number(\r\n        Number(data_list[index][\"work_point\"]).toFixed(2) -\r\n          Number(ModifiedWorkpoints).toFixed(2)\r\n      ).toFixed(2);\r\n      let workpoints = Number(totalWorkPoint / (workStaffCount - 1)).toFixed(2);\r\n      let diff_workpoints = Number(\r\n        totalWorkPoint - workpoints * (workStaffCount - 1)\r\n      ).toFixed(2);\r\n\r\n      if (\r\n        data_list[index].div == \"3\" &&\r\n        data_list[index].type.toUpperCase() == \"DEPOSIT\"\r\n      ) {\r\n        ModifiedWork_amount = Number(\r\n          (ModifiedWork_percent / 100) * data_list[index][\"work_amount\"]\r\n        ).toFixed(2);\r\n\r\n        totalWorkAmount = Number(\r\n          Number(data_list[index][\"work_amount\"]).toFixed(2) -\r\n            Number(ModifiedWork_amount).toFixed(2)\r\n        ).toFixed(2);\r\n        work_amount = Number(totalWorkAmount / (workStaffCount - 1)).toFixed(2);\r\n        diff_work_amount = Number(\r\n          totalWorkAmount - work_amount * (workStaffCount - 1)\r\n        ).toFixed(2);\r\n      } else {\r\n        ModifiedWork_amount = Number(\r\n          (ModifiedWork_percent / 100) * data_list[index][\"trans_amt\"]\r\n        ).toFixed(2);\r\n\r\n        totalWorkAmount = Number(\r\n          Number(data_list[index][\"trans_amt\"]).toFixed(2) -\r\n            Number(ModifiedWork_amount).toFixed(2)\r\n        ).toFixed(2);\r\n        work_amount = Number(totalWorkAmount / (workStaffCount - 1)).toFixed(2);\r\n        diff_work_amount = Number(\r\n          totalWorkAmount - work_amount * (workStaffCount - 1)\r\n        ).toFixed(2);\r\n      }\r\n\r\n      let data = data_list[index].data;\r\n\r\n      data_list[index].data[index2][\"work_percentage\"] =\r\n        Number(ModifiedWork_percent).toFixed(2);\r\n      data_list[index].data[index2][\"work_amount\"] =\r\n        Number(ModifiedWork_amount).toFixed(2);\r\n      data_list[index].data[index2][\"wp\"] =\r\n        Number(ModifiedWorkpoints).toFixed(2);\r\n      await this.setState({ data });\r\n\r\n      let workLength = data.filter(\r\n        acc =>\r\n          acc.work === true &&\r\n          acc.staff !== data_list[index].data[index2][\"staff\"]\r\n      ).length;\r\n      let workData = data.filter(\r\n        acc =>\r\n          acc.work === true &&\r\n          acc.staff !== data_list[index].data[index2][\"staff\"]\r\n      );\r\n      if (workData) {\r\n        let i = 0;\r\n        let j = 1;\r\n\r\n        for (let line of data_list[index].data) {\r\n          if (line.work) {\r\n            if (data_list[index].data[index2][\"staff\"] === line.staff) {\r\n              data[i][\"work_percentage\"] = ModifiedWork_percent;\r\n              data[i][\"work_amount\"] = ModifiedWork_amount;\r\n              data[i][\"wp\"] = ModifiedWorkpoints;\r\n              await this.setState({ data });\r\n            } else {\r\n              if (j == workLength) {\r\n                let percent = Number(work_percent) + Number(diff_work_percent);\r\n                let amt = Number(work_amount) + Number(diff_work_amount);\r\n                let wp = Number(workpoints) + Number(diff_workpoints);\r\n\r\n                data[i][\"work_percentage\"] = Number(percent).toFixed(2);\r\n\r\n                data[i][\"work_amount\"] = Number(amt).toFixed(2);\r\n\r\n                data[i][\"wp\"] = Number(wp).toFixed(2);\r\n                await this.setState({ data });\r\n              } else {\r\n                data[i][\"work_percentage\"] = work_percent;\r\n                data[i][\"work_amount\"] = work_amount;\r\n                data[i][\"wp\"] = workpoints;\r\n                await this.setState({ data });\r\n              }\r\n              j++;\r\n            }\r\n          }\r\n          i++;\r\n        }\r\n      }\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Please enter valid percentage\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSalesStaffPriceChange = async (e, index, index1) => {\r\n    let { data_list } = this.state;\r\n    let data = data_list[index].data[index1];\r\n\r\n    data[\"priceSalesFlag\"] = e.target.value;\r\n    await this.setState({\r\n      data,\r\n    });\r\n    let salesPercentCount = data_list[index].data.filter(\r\n      acc => acc.sales === true && acc.priceSalesFlag == true\r\n    ).length;\r\n    if (salesPercentCount > 0) {\r\n      data_list[index][\"updateSalesCalcFlag\"] = true;\r\n      await this.setState({ data_list });\r\n    } else {\r\n      data_list[index][\"updateSalesCalcFlag\"] = false;\r\n      await this.setState({ data_list });\r\n    }\r\n  };\r\n\r\n  handleWorkStaffPriceChange = async (e, index, index1) => {\r\n    let { data_list } = this.state;\r\n    let data = data_list[index].data[index1];\r\n\r\n    data[\"priceWorkFlag\"] = e.target.value;\r\n    await this.setState({\r\n      data,\r\n    });\r\n    let workPercentCount = data_list[index].data.filter(\r\n      acc => acc.work === true && acc.priceWorkFlag == true\r\n    ).length;\r\n    if (workPercentCount > 0) {\r\n      data_list[index][\"updateWorkCalcFlag\"] = true;\r\n      await this.setState({ data_list });\r\n    } else {\r\n      data_list[index][\"updateWorkCalcFlag\"] = false;\r\n      await this.setState({ data_list });\r\n    }\r\n  };\r\n  handleSalesPercentCalcUpdate = async index => {\r\n    let { data_list } = this.state;\r\n\r\n    let salesStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.sales) {\r\n        salesStaffCount += 1;\r\n      }\r\n    }\r\n    let data = data_list[index].data;\r\n    let salesPercentChange = data.filter(\r\n      acc => acc.sales === true && acc.priceSalesFlag == true\r\n    );\r\n    let salesStaffBalancePercent = 0;\r\n    if (salesPercentChange) {\r\n      for (let percentLine of salesPercentChange) {\r\n        if (percentLine.sales) {\r\n          salesStaffBalancePercent += Number(percentLine.sales_percentage);\r\n        }\r\n      }\r\n    }\r\n    if (salesPercentChange && salesStaffBalancePercent > 100) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Percentage should be less than 100\",\r\n      });\r\n    } else {\r\n      let salesPercentCount = data.filter(\r\n        acc => acc.sales === true && acc.priceSalesFlag == true\r\n      ).length;\r\n      let ModifiedSales_percent = Number(\r\n        100 - salesStaffBalancePercent\r\n      ).toFixed(2);\r\n      let Modifiedsales_amount = Number(\r\n        (ModifiedSales_percent / 100) * data_list[index][\"trans_amt\"]\r\n      ).toFixed(2);\r\n      let Modifiedsalespoints = Number(\r\n        (ModifiedSales_percent / 100) * data_list[index][\"sales_point\"]\r\n      ).toFixed(2);\r\n\r\n      let sales_percent = Number(\r\n        ModifiedSales_percent / (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let diff_sales_percent = Number(\r\n        ModifiedSales_percent -\r\n          sales_percent * (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let sales_amount = Number(\r\n        Modifiedsales_amount / (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n      let diff_sales_amount = Number(\r\n        Modifiedsales_amount -\r\n          sales_amount * (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let salespoints = Number(\r\n        Modifiedsalespoints / (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n      let diff_salespoints = Number(\r\n        Modifiedsalespoints -\r\n          salespoints * (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let i = 0;\r\n      let j = 1;\r\n      for (let dataLine of data_list[index].data) {\r\n        if (dataLine.sales) {\r\n          if (dataLine.priceSalesFlag) {\r\n            let LineSales_percent = Number(dataLine.sales_percentage).toFixed(\r\n              2\r\n            );\r\n            let Linesales_amount = Number(\r\n              (LineSales_percent / 100) * data_list[index][\"trans_amt\"]\r\n            ).toFixed(2);\r\n            let Linesalespoints = Number(\r\n              (LineSales_percent / 100) * data_list[index][\"sales_point\"]\r\n            ).toFixed(2);\r\n\r\n            data[i][\"sales_percentage\"] = LineSales_percent;\r\n            data[i][\"sales_amount\"] = Linesales_amount;\r\n            data[i][\"sp\"] = Linesalespoints;\r\n            data[i][\"priceSalesFlag\"] = false;\r\n            await this.setState({ data });\r\n          } else {\r\n            if (j == salesPercentCount) {\r\n              let percent = Number(sales_percent) + Number(diff_sales_percent);\r\n              let amt = Number(sales_amount) + Number(diff_sales_amount);\r\n              let sp = Number(salespoints) + Number(diff_salespoints);\r\n              data[i][\"sales_percentage\"] = Number(percent).toFixed(2);\r\n              data[i][\"sales_amount\"] = Number(amt).toFixed(2);\r\n              data[i][\"sp\"] = Number(sp).toFixed(2);\r\n              data[i][\"priceSalesFlag\"] = false;\r\n              await this.setState({ data });\r\n            } else {\r\n              data[i][\"sales_percentage\"] = sales_percent;\r\n              data[i][\"sales_amount\"] = sales_amount;\r\n              data[i][\"sp\"] = salespoints;\r\n              data[i][\"priceSalesFlag\"] = false;\r\n              await this.setState({ data });\r\n            }\r\n            j++;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      data_list[index][\"updateSalesCalcFlag\"] = false;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleWorkPercentCalcUpdate = async index => {\r\n    let { data_list } = this.state;\r\n\r\n    let WorkStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.work) {\r\n        WorkStaffCount += 1;\r\n      }\r\n    }\r\n    let data = data_list[index].data;\r\n    let workPercentChange = data.filter(\r\n      acc => acc.work === true && acc.priceWorkFlag == true\r\n    );\r\n    let workStaffBalancePercent = 0;\r\n    if (workPercentChange) {\r\n      for (let percentLine of workPercentChange) {\r\n        if (percentLine.work) {\r\n          workStaffBalancePercent += Number(percentLine.work_percentage);\r\n        }\r\n      }\r\n    }\r\n    if (workPercentChange && workStaffBalancePercent > 100) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Percentage should be less than 100\",\r\n      });\r\n    } else {\r\n      let workPercentCount = data.filter(\r\n        acc => acc.work === true && acc.priceWorkFlag == true\r\n      ).length;\r\n      let ModifiedWork_percent = Number(100 - workStaffBalancePercent).toFixed(\r\n        2\r\n      );\r\n      let ModifiedWork_amount = 0;\r\n      if (\r\n        data_list[index].div == \"3\" &&\r\n        data_list[index].type.toUpperCase() == \"DEPOSIT\"\r\n      ) {\r\n        ModifiedWork_amount = Number(\r\n          (ModifiedWork_percent / 100) * data_list[index][\"work_amount\"]\r\n        ).toFixed(2);\r\n      } else {\r\n        ModifiedWork_amount = Number(\r\n          (ModifiedWork_percent / 100) * data_list[index][\"trans_amt\"]\r\n        ).toFixed(2);\r\n      }\r\n      let ModifiedWorkpoints = Number(\r\n        (ModifiedWork_percent / 100) * data_list[index][\"work_point\"]\r\n      ).toFixed(2);\r\n\r\n      let work_percent = Number(\r\n        ModifiedWork_percent / (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let diff_work_percent = Number(\r\n        ModifiedWork_percent -\r\n          work_percent * (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let work_amount = Number(\r\n        ModifiedWork_amount / (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n      let diff_work_amount = Number(\r\n        ModifiedWork_amount - work_amount * (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let workpoints = Number(\r\n        ModifiedWorkpoints / (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n      let diff_workpoints = Number(\r\n        ModifiedWorkpoints - workpoints * (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let i = 0;\r\n      let j = 1;\r\n      for (let dataLine of data_list[index].data) {\r\n        if (dataLine.work) {\r\n          if (dataLine.priceWorkFlag) {\r\n            let LineWork_percent = Number(dataLine.work_percentage).toFixed(2);\r\n            let LineWork_amount = 0;\r\n            if (\r\n              data_list[index].div == \"3\" &&\r\n              data_list[index].type.toUpperCase() == \"DEPOSIT\"\r\n            ) {\r\n              LineWork_amount = Number(\r\n                (LineWork_percent / 100) * data_list[index][\"work_amount\"]\r\n              ).toFixed(2);\r\n            } else {\r\n              LineWork_amount = Number(\r\n                (LineWork_percent / 100) * data_list[index][\"trans_amt\"]\r\n              ).toFixed(2);\r\n            }\r\n\r\n            let Lineworkspoints = Number(\r\n              (LineWork_percent / 100) * data_list[index][\"work_point\"]\r\n            ).toFixed(2);\r\n\r\n            data[i][\"work_percentage\"] = LineWork_percent;\r\n            data[i][\"work_amount\"] = LineWork_amount;\r\n            data[i][\"wp\"] = Lineworkspoints;\r\n            data[i][\"priceWorkFlag\"] = false;\r\n            await this.setState({ data });\r\n          } else {\r\n            if (j == workPercentCount) {\r\n              let percent = Number(work_percent) + Number(diff_work_percent);\r\n              let amt = Number(work_amount) + Number(diff_work_amount);\r\n              let wp = Number(workpoints) + Number(diff_workpoints);\r\n              data[i][\"work_percentage\"] = Number(percent).toFixed(2);\r\n              data[i][\"work_amount\"] = Number(amt).toFixed(2);\r\n              data[i][\"wp\"] = Number(wp).toFixed(2);\r\n              data[i][\"priceWorkFlag\"] = false;\r\n              await this.setState({ data });\r\n            } else {\r\n              data[i][\"work_percentage\"] = work_percent;\r\n              data[i][\"work_amount\"] = work_amount;\r\n              data[i][\"wp\"] = workpoints;\r\n              data[i][\"priceWorkFlag\"] = false;\r\n              await this.setState({ data });\r\n            }\r\n            j++;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      data_list[index][\"updateWorkCalcFlag\"] = false;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleTreatmentDone = async data => {\r\n    await this.setState({ SelectedItem: data });\r\n    this.setState({ isOpenTreatmentDone: true });\r\n  };\r\n\r\n  handleDialog = async () => {\r\n    let { isOpenTreatmentDone } = this.state;\r\n    isOpenTreatmentDone = false;\r\n    await this.setState({\r\n      isOpenTreatmentDone,\r\n    });\r\n    this.getStaffSelectionList();\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      data_list,\r\n      staffListPopup,\r\n      staffList,\r\n      meta,\r\n      activeRow,\r\n      isOpenTreatmentDone,\r\n      SelectedItem,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid mb-4 mt-2 product-details\">\r\n          <div className=\"row\">\r\n            <div className=\"col-8\">\r\n              <h4>{t(\"Staff Selection\")}</h4>\r\n            </div>\r\n            {data_list && data_list.length > 0 ? (\r\n              <>\r\n                <div className=\"col-md-2\"></div>\r\n                <div className=\"col-md-2\">\r\n                  <NormalButton\r\n                    mainbg={false}\r\n                    className=\"col-12 fs-15 submit-btn\"\r\n                    label=\"Done\"\r\n                    onClick={() => this.handleSubmit()}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"row pl-3 pr-5 mt-2 fw-500 h6\">\r\n            <div className=\"col-3\">{`Item`}</div>\r\n            <div className=\"col-1 text-center\">{`Qty`}</div>\r\n            <div className=\"col text-right\">{`Unit Price`}</div>\r\n            <div className=\"col text-right\">{`Disc $`}</div>\r\n            <div className=\"col text-right\">{`D/Price`}</div>\r\n            <div className=\"col text-right\">{`Amount`}</div>\r\n            <div className=\"col text-right\">{`Deposit`}</div>\r\n          </div>\r\n          <div className=\"row pl-5 pr-5 mt-4 overflow-auto\">\r\n            {data_list &&\r\n              data_list.length > 0 &&\r\n              data_list.map((item, index) => {\r\n                return (\r\n                  <div className=\"row  mb-2\" key={index}>\r\n                    <div\r\n                      className={`row rounded p-2 accordion-menu border staff ${\r\n                        activeRow == item.id ? \"border-primary\" : \"\"\r\n                      }`}\r\n                      onClick={() => this.handleAccordion(item.id, index)}\r\n                    >\r\n                      <div className=\"col-3\">{item.itemdesc}</div>\r\n                      <div className=\"col-1 text-center\">\r\n                        {item.quantity}\r\n                        {/* <NormalInput\r\n                          name=\"quantity\"\r\n                          type=\"number\"\r\n                          value={item.quantity}\r\n                          onChange={e => this.handleChange(e, index)}\r\n                        /> */}\r\n                      </div>\r\n                      <div className=\"col text-right\">{item.price}</div>\r\n                      <div className=\"col text-right\">{item.totl_disc}</div>\r\n                      <div className=\"col text-right\">\r\n                        {item.discount_price}\r\n                      </div>\r\n                      <div className=\"col text-right\">{item.trans_amt}</div>\r\n                      <div className=\"col text-right\">{item.deposit}</div>\r\n                    </div>\r\n                    <div\r\n                      className=\"row  rounded bg-light p-1 d-none accordion\"\r\n                      id={item.id}\r\n                    >\r\n                      <div className=\"mb-3\">\r\n                        <table className=\"table\" style={{ marginRight: 10 }}>\r\n                          <thead>\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"border-top-0 border-bottom-0 salesstaff-background\"\r\n                                colSpan=\"1\"\r\n                              >\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12 fs-15 fw-500\"\r\n                                      label=\"Add\"\r\n                                      onClick={() =>\r\n                                        this.handleAddNewStaff(index, 1, item)\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-left border-top-0 border-bottom-0 salesstaff-background\"\r\n                                colSpan=\"3\"\r\n                              >\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-6\">\r\n                                    {t(\"Sales staff\")}\r\n                                  </div>\r\n\r\n                                  <div className=\"col\">\r\n                                    {item.updateSalesCalcFlag ? (\r\n                                      <NormalButton\r\n                                        mainbg={true}\r\n                                        className=\"col-12 top-0\"\r\n                                        label=\"Calc\"\r\n                                        onClick={() =>\r\n                                          this.handleSalesPercentCalcUpdate(\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"col\">\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12 top-0\"\r\n                                      label=\"Auto\"\r\n                                      onClick={() =>\r\n                                        this.handleSalesStaffCalc(index)\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"border-top-0 border-bottom-0 workstaff-background\"\r\n                                colSpan=\"1\"\r\n                              >\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12 fs-15 fw-500\"\r\n                                      label=\"Add\"\r\n                                      onClick={() =>\r\n                                        this.handleAddNewStaff(index, 0, item)\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-top-0 border-bottom-0 workstaff-background\"\r\n                                colSpan=\"3\"\r\n                              >\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-5\">{t(\"Work staff\")}</div>\r\n                                  <div className=\"col\">\r\n                                    {item.updateWorkCalcFlag ? (\r\n                                      <NormalButton\r\n                                        mainbg={true}\r\n                                        className=\"col-12 top-0\"\r\n                                        label=\"Calc\"\r\n                                        onClick={() =>\r\n                                          this.handleWorkPercentCalcUpdate(\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"col\">\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12\"\r\n                                      label=\"Auto\"\r\n                                      onClick={() =>\r\n                                        this.handleWorkStaffCalc(index)\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </th>\r\n                              <th rowSpan=\"1\">\r\n                                <div className=\"col\">\r\n                                  {Number(item.sessiondone) > 0 &&\r\n                                  String(item.type).toUpperCase() ===\r\n                                    \"DEPOSIT\" &&\r\n                                  Number(item.div) === 3 ? (\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12\"\r\n                                      label=\"TD\"\r\n                                      onClick={() =>\r\n                                        this.handleTreatmentDone(item)\r\n                                      }\r\n                                    />\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n\r\n                                  {Number(item.td_session) > 0 &&\r\n                                  String(item.type).toUpperCase() ===\r\n                                    \"SALES\" ? (\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12\"\r\n                                      label=\"TD\"\r\n                                      onClick={() =>\r\n                                        this.handleTreatmentDone(item)\r\n                                      }\r\n                                    />\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </div>\r\n                              </th>\r\n                            </tr>\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 salesstaff-background\"\r\n                              >\r\n                                {t(\"Staff\")}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 salesstaff-background\"\r\n                              >\r\n                                % ({`100`})\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 salesstaff-background\"\r\n                              >\r\n                                $ ({item.trans_amt})\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 salesstaff-background\"\r\n                              >\r\n                                SP ({item.sales_point})\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 workstaff-background\"\r\n                              >\r\n                                {t(\"Staff\")}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 workstaff-background\"\r\n                              >\r\n                                % ({`100`})\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 workstaff-background\"\r\n                              >\r\n                                $ (\r\n                                {item.type.toUpperCase() == \"DEPOSIT\" &&\r\n                                item.div == \"3\"\r\n                                  ? item.work_amount\r\n                                  : item.trans_amt}\r\n                                )\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-top-0 border-bottom-0 workstaff-background\"\r\n                              >\r\n                                {t(\"WP\")} ({item.work_point})\r\n                              </th>\r\n                              <th rowSpan=\"1\">{t(\"Action\")}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {data_list[index].data.length <= 0 ? (\r\n                              <tr>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                  {t(\"No record found\")}\r\n                                </div>\r\n                              </tr>\r\n                            ) : null}\r\n                            {data_list[index].data.map((data, index2) => {\r\n                              return (\r\n                                <tr key={index2}>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center d-none workstaff-background\"\r\n                                  >\r\n                                    <NormalCheckbox\r\n                                      type=\"checkbox\"\r\n                                      checked={data.sales}\r\n                                      name=\"sales\"\r\n                                      onChange={e =>\r\n                                        this.handleStaffChange(e, index, index2)\r\n                                      }\r\n                                    />\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center d-none\"\r\n                                  >\r\n                                    <NormalCheckbox\r\n                                      type=\"checkbox\"\r\n                                      checked={data.work}\r\n                                      name=\"work\"\r\n                                      onChange={e =>\r\n                                        this.handleStaffChange(e, index, index2)\r\n                                      }\r\n                                    />\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center border-right salesstaff-background\"\r\n                                  >\r\n                                    <label className=\"text-left text-black common-label-text pb-2\">\r\n                                      {data.staff}\r\n                                    </label>\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center border-right salesstaff-background\"\r\n                                  >\r\n                                    <div className=\"d-flex flex-nowrap\">\r\n                                      <div className=\"col-9\">\r\n                                        <NormalInput\r\n                                          name=\"sales_percentage\"\r\n                                          type=\"number\"\r\n                                          value={\r\n                                            data.sales && data.sales_percentage\r\n                                              ? data.sales_percentage\r\n                                              : \"\"\r\n                                          }\r\n                                          onChange={e =>\r\n                                            this.handleStaffChange(\r\n                                              e,\r\n                                              index,\r\n                                              index2\r\n                                            )\r\n                                          }\r\n                                          disabled={data.sales ? false : true}\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-3\">\r\n                                        <NormalCheckbox\r\n                                          type=\"checkbox\"\r\n                                          checked={\r\n                                            data.priceSalesFlag ? true : false\r\n                                          }\r\n                                          name=\"priceSalesFlag\"\r\n                                          onChange={e =>\r\n                                            this.handleSalesStaffPriceChange(\r\n                                              e,\r\n                                              index,\r\n                                              index2\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center border-right salesstaff-background\"\r\n                                  >\r\n                                    <NormalInput\r\n                                      name=\"sales_amount\"\r\n                                      type=\"number\"\r\n                                      value={\r\n                                        data.sales && data.sales_amount\r\n                                          ? data.sales_amount\r\n                                          : \"\"\r\n                                      }\r\n                                      onChange={e =>\r\n                                        this.handleStaffChange(e, index, index2)\r\n                                      }\r\n                                      disabled={data.sales ? false : true}\r\n                                    />\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center border-right salesstaff-background\"\r\n                                  >\r\n                                    <NormalInput\r\n                                      name=\"sp\"\r\n                                      type=\"number\"\r\n                                      value={data.sp}\r\n                                      onChange={e =>\r\n                                        this.handleStaffChange(e, index, index2)\r\n                                      }\r\n                                      disabled={data.sales ? false : true}\r\n                                    />\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center border-right workstaff-background\"\r\n                                  >\r\n                                    <label className=\"text-left text-black common-label-text pb-2\">\r\n                                      {data.staff}\r\n                                    </label>\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center border-right workstaff-background\"\r\n                                  >\r\n                                    <div className=\"d-flex flex-nowrap\">\r\n                                      <div className=\"col-9\">\r\n                                        <NormalInput\r\n                                          name=\"work_percentage\"\r\n                                          type=\"number\"\r\n                                          value={\r\n                                            data.work && data.work_percentage\r\n                                              ? data.work_percentage\r\n                                              : \"\"\r\n                                          }\r\n                                          onChange={e =>\r\n                                            this.handleStaffChange(\r\n                                              e,\r\n                                              index,\r\n                                              index2\r\n                                            )\r\n                                          }\r\n                                          disabled={data.work ? false : true}\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-3\">\r\n                                        <NormalCheckbox\r\n                                          type=\"checkbox\"\r\n                                          checked={\r\n                                            data.priceWorkFlag ? true : false\r\n                                          }\r\n                                          name=\"priceWorkFlag\"\r\n                                          onChange={e =>\r\n                                            this.handleWorkStaffPriceChange(\r\n                                              e,\r\n                                              index,\r\n                                              index2\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center border-right workstaff-background\"\r\n                                  >\r\n                                    <NormalInput\r\n                                      name=\"work_amount\"\r\n                                      type=\"number\"\r\n                                      value={\r\n                                        data.work && data.work_amount\r\n                                          ? data.work_amount\r\n                                          : \"\"\r\n                                      }\r\n                                      onChange={e =>\r\n                                        this.handleStaffChange(e, index, index2)\r\n                                      }\r\n                                      disabled={data.work ? false : true}\r\n                                    />\r\n                                  </th>\r\n                                  <th\r\n                                    scope=\"col\"\r\n                                    className=\"text-center workstaff-background\"\r\n                                  >\r\n                                    <NormalInput\r\n                                      name=\"wp\"\r\n                                      type=\"number\"\r\n                                      value={data.wp}\r\n                                      onChange={e =>\r\n                                        this.handleStaffChange(e, index, index2)\r\n                                      }\r\n                                      disabled={data.work ? false : true}\r\n                                    />\r\n                                  </th>\r\n                                  <th>\r\n                                    <div\r\n                                      className=\"col-12 p-0 fs-18 text-center cursor-pointer\"\r\n                                      onClick={e =>\r\n                                        this.handleDeleteStaff(e, index, index2)\r\n                                      }\r\n                                    >\r\n                                      <span className=\"icon-delete\"></span>\r\n                                    </div>\r\n                                  </th>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          {data_list && data_list.length <= 0 ? (\r\n            <div className=\"row pl-5 pr-5 mt-4\">{t(\"No Record Found\")}</div>\r\n          ) : null}\r\n          <NormalModal\r\n            className={\"stock-memo-staff-listing\"}\r\n            style={{ minWidth: \"75%\" }}\r\n            modal={staffListPopup}\r\n            handleModal={this.handleEmployeePopup}\r\n          >\r\n            <img\r\n              onClick={this.handleEmployeePopup}\r\n              className=\"close\"\r\n              src={closeIcon}\r\n              alt=\"\"\r\n            />\r\n            <StaffList\r\n              staffList={staffList}\r\n              meta={meta}\r\n              handleNext={() => this.handleNext()}\r\n              handleBack={() => this.handleBack()}\r\n              handleSelectedStaff={item => this.handleSelectedStaff(item)}\r\n            />\r\n          </NormalModal>\r\n          <NormalModal\r\n            className={\"transaction-done-modal\"}\r\n            style={{ minWidth: \"60%\" }}\r\n            modal={isOpenTreatmentDone}\r\n            handleModal={this.handleDialog}\r\n          >\r\n            <img\r\n              onClick={this.handleDialog}\r\n              className=\"close cursor-pointer\"\r\n              src={closeIcon}\r\n              alt=\"\"\r\n            />\r\n            {String(SelectedItem.type).toUpperCase() === \"DEPOSIT\" &&\r\n            Number(SelectedItem.div) === 3 ? (\r\n              <ChangeCourseTD\r\n                //id={cartId}\r\n                cartId={SelectedItem.id}\r\n                treatmentId={SelectedItem.treatment_ids}\r\n                sessionCount={SelectedItem.sessiondone}\r\n                depositAmt={SelectedItem.deposit}\r\n                handleModal={this.handleDialog}\r\n              ></ChangeCourseTD>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {String(SelectedItem.type).toUpperCase() === \"SALES\" ? (\r\n              <ChangeStaffTD\r\n                id={SelectedItem.treatment_ids}\r\n                session={SelectedItem.td_session}\r\n                cartId={SelectedItem.id}\r\n                handleModal={this.handleDialog}\r\n              ></ChangeStaffTD>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </NormalModal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonCreateApi,\r\n      commonDeleteApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const ChangeStaff = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(ChangeStaffClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}