{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 20.2.5\n * Build date: Fri Jan 15 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionsManager = void 0;\n\nvar comparer_1 = require(\"./configuration/comparer\");\n\nvar tree_1 = require(\"./configuration/tree\");\n\nvar utils_1 = require(\"./configuration/utils\");\n\nvar helpers_1 = require(\"./helpers\");\n\nvar OptionsManager = function () {\n  function OptionsManager(templatesManager) {\n    this.guards = {};\n    this.isUpdating = false;\n    this.templatesManager = templatesManager;\n    this.onOptionChanged = this.onOptionChanged.bind(this);\n    this.wrapOptionValue = this.wrapOptionValue.bind(this);\n  }\n\n  OptionsManager.prototype.setInstance = function (instance, config, subscribableOptions) {\n    this.instance = instance;\n    this.currentConfig = config;\n    this.subscribableOptions = new Set(subscribableOptions);\n  };\n\n  OptionsManager.prototype.getInitialOptions = function (rootNode) {\n    var _this = this;\n\n    var config = tree_1.buildConfig(rootNode, false);\n    Object.keys(config.templates).forEach(function (key) {\n      _this.templatesManager.add(key, config.templates[key]);\n    });\n    var options = {};\n    Object.keys(config.options).forEach(function (key) {\n      options[key] = _this.wrapOptionValue(key, config.options[key]);\n    });\n\n    if (this.templatesManager.templatesCount > 0) {\n      options.integrationOptions = {\n        templates: this.templatesManager.templates\n      };\n    }\n\n    return options;\n  };\n\n  OptionsManager.prototype.update = function (config) {\n    var _this = this;\n\n    var changes = comparer_1.getChanges(config, this.currentConfig);\n\n    if (!changes.options && !changes.templates && !changes.removedOptions.length) {\n      return;\n    }\n\n    this.instance.beginUpdate();\n    this.isUpdating = true;\n    changes.removedOptions.forEach(function (optionName) {\n      _this.resetOption(optionName);\n    });\n    Object.keys(changes.templates).forEach(function (key) {\n      _this.templatesManager.add(key, changes.templates[key]);\n    });\n\n    if (this.templatesManager.templatesCount > 0) {\n      this.setValue('integrationOptions', {\n        templates: this.templatesManager.templates\n      });\n    }\n\n    Object.keys(changes.options).forEach(function (key) {\n      _this.setValue(key, changes.options[key]);\n    });\n    this.isUpdating = false;\n    this.instance.endUpdate();\n    this.currentConfig = config;\n  };\n\n  OptionsManager.prototype.onOptionChanged = function (e) {\n    var _this = this;\n\n    if (this.isUpdating) {\n      return;\n    }\n\n    var valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n\n    if (!valueDescriptor || valueDescriptor.value !== e.value) {\n      this.callOptionChangeHandler(e.fullName, e.value);\n    }\n\n    valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n\n    if (!valueDescriptor) {\n      return;\n    }\n\n    var value = valueDescriptor.value,\n        type = valueDescriptor.type;\n\n    if (type === tree_1.ValueType.Complex) {\n      Object.keys(value).forEach(function (key) {\n        if (value[key] === e.value[key]) {\n          return;\n        }\n\n        _this.setGuard(utils_1.mergeNameParts(e.fullName, key), value[key]);\n      });\n    } else {\n      if (value === e.value) {\n        return;\n      }\n\n      this.setGuard(e.fullName, value);\n    }\n  };\n\n  OptionsManager.prototype.dispose = function () {\n    var _this = this;\n\n    Object.keys(this.guards).forEach(function (optionName) {\n      window.clearTimeout(_this.guards[optionName]);\n      delete _this.guards[optionName];\n    });\n  };\n\n  OptionsManager.prototype.isOptionSubscribable = function (optionName) {\n    return this.subscribableOptions.has(optionName);\n  };\n\n  OptionsManager.prototype.callOptionChangeHandler = function (optionName, optionValue) {\n    if (!this.isOptionSubscribable(optionName)) {\n      return;\n    }\n\n    var parts = optionName.split('.');\n    var propName = parts[parts.length - 1];\n\n    if (propName.startsWith('on')) {\n      return;\n    }\n\n    var eventName = \"on\" + helpers_1.capitalizeFirstLetter(propName) + \"Change\";\n    parts[parts.length - 1] = eventName;\n    var changeEvent = tree_1.findValue(this.currentConfig, parts);\n\n    if (!changeEvent) {\n      return;\n    }\n\n    if (typeof changeEvent.value !== 'function') {\n      throw new Error(\"Invalid value for the \" + eventName + \" property.\\n                \" + eventName + \" must be a function.\");\n    }\n\n    changeEvent.value(optionValue);\n  };\n\n  OptionsManager.prototype.wrapOptionValue = function (name, value) {\n    var _this = this;\n\n    if (name.substr(0, 2) === 'on' && typeof value === 'function') {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        if (!_this.isUpdating) {\n          value.apply(void 0, args);\n        }\n      };\n    }\n\n    return value;\n  };\n\n  OptionsManager.prototype.setGuard = function (optionName, optionValue) {\n    var _this = this;\n\n    if (this.guards[optionName] !== undefined) {\n      return;\n    }\n\n    var guardId = window.setTimeout(function () {\n      _this.setValue(optionName, optionValue);\n\n      window.clearTimeout(guardId);\n      delete _this.guards[optionName];\n    });\n    this.guards[optionName] = guardId;\n  };\n\n  OptionsManager.prototype.resetOption = function (name) {\n    this.instance.resetOption(name);\n  };\n\n  OptionsManager.prototype.setValue = function (name, value) {\n    if (this.guards[name]) {\n      window.clearTimeout(this.guards[name]);\n      delete this.guards[name];\n    }\n\n    this.instance.option(name, this.wrapOptionValue(name, value));\n  };\n\n  return OptionsManager;\n}();\n\nexports.OptionsManager = OptionsManager;","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/node_modules/devextreme-react/core/options-manager.js"],"names":["Object","defineProperty","exports","value","OptionsManager","comparer_1","require","tree_1","utils_1","helpers_1","templatesManager","guards","isUpdating","onOptionChanged","bind","wrapOptionValue","prototype","setInstance","instance","config","subscribableOptions","currentConfig","Set","getInitialOptions","rootNode","_this","buildConfig","keys","templates","forEach","key","add","options","templatesCount","integrationOptions","update","changes","getChanges","removedOptions","length","beginUpdate","optionName","resetOption","setValue","endUpdate","e","valueDescriptor","findValue","fullName","split","callOptionChangeHandler","type","ValueType","Complex","setGuard","mergeNameParts","dispose","window","clearTimeout","isOptionSubscribable","has","optionValue","parts","propName","startsWith","eventName","capitalizeFirstLetter","changeEvent","Error","name","substr","args","_i","arguments","apply","undefined","guardId","setTimeout","option"],"mappings":"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","sourcesContent":["/*!\n * devextreme-react\n * Version: 20.2.5\n * Build date: Fri Jan 15 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsManager = void 0;\nvar comparer_1 = require(\"./configuration/comparer\");\nvar tree_1 = require(\"./configuration/tree\");\nvar utils_1 = require(\"./configuration/utils\");\nvar helpers_1 = require(\"./helpers\");\nvar OptionsManager = /** @class */ (function () {\n    function OptionsManager(templatesManager) {\n        this.guards = {};\n        this.isUpdating = false;\n        this.templatesManager = templatesManager;\n        this.onOptionChanged = this.onOptionChanged.bind(this);\n        this.wrapOptionValue = this.wrapOptionValue.bind(this);\n    }\n    OptionsManager.prototype.setInstance = function (instance, config, subscribableOptions) {\n        this.instance = instance;\n        this.currentConfig = config;\n        this.subscribableOptions = new Set(subscribableOptions);\n    };\n    OptionsManager.prototype.getInitialOptions = function (rootNode) {\n        var _this = this;\n        var config = tree_1.buildConfig(rootNode, false);\n        Object.keys(config.templates).forEach(function (key) {\n            _this.templatesManager.add(key, config.templates[key]);\n        });\n        var options = {};\n        Object.keys(config.options).forEach(function (key) {\n            options[key] = _this.wrapOptionValue(key, config.options[key]);\n        });\n        if (this.templatesManager.templatesCount > 0) {\n            options.integrationOptions = {\n                templates: this.templatesManager.templates,\n            };\n        }\n        return options;\n    };\n    OptionsManager.prototype.update = function (config) {\n        var _this = this;\n        var changes = comparer_1.getChanges(config, this.currentConfig);\n        if (!changes.options && !changes.templates && !changes.removedOptions.length) {\n            return;\n        }\n        this.instance.beginUpdate();\n        this.isUpdating = true;\n        changes.removedOptions.forEach(function (optionName) {\n            _this.resetOption(optionName);\n        });\n        Object.keys(changes.templates).forEach(function (key) {\n            _this.templatesManager.add(key, changes.templates[key]);\n        });\n        if (this.templatesManager.templatesCount > 0) {\n            this.setValue('integrationOptions', {\n                templates: this.templatesManager.templates,\n            });\n        }\n        Object.keys(changes.options).forEach(function (key) {\n            _this.setValue(key, changes.options[key]);\n        });\n        this.isUpdating = false;\n        this.instance.endUpdate();\n        this.currentConfig = config;\n    };\n    OptionsManager.prototype.onOptionChanged = function (e) {\n        var _this = this;\n        if (this.isUpdating) {\n            return;\n        }\n        var valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n        if (!valueDescriptor || valueDescriptor.value !== e.value) {\n            this.callOptionChangeHandler(e.fullName, e.value);\n        }\n        valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n        if (!valueDescriptor) {\n            return;\n        }\n        var value = valueDescriptor.value, type = valueDescriptor.type;\n        if (type === tree_1.ValueType.Complex) {\n            Object.keys(value).forEach(function (key) {\n                if (value[key] === e.value[key]) {\n                    return;\n                }\n                _this.setGuard(utils_1.mergeNameParts(e.fullName, key), value[key]);\n            });\n        }\n        else {\n            if (value === e.value) {\n                return;\n            }\n            this.setGuard(e.fullName, value);\n        }\n    };\n    OptionsManager.prototype.dispose = function () {\n        var _this = this;\n        Object.keys(this.guards).forEach(function (optionName) {\n            window.clearTimeout(_this.guards[optionName]);\n            delete _this.guards[optionName];\n        });\n    };\n    OptionsManager.prototype.isOptionSubscribable = function (optionName) {\n        return this.subscribableOptions.has(optionName);\n    };\n    OptionsManager.prototype.callOptionChangeHandler = function (optionName, optionValue) {\n        if (!this.isOptionSubscribable(optionName)) {\n            return;\n        }\n        var parts = optionName.split('.');\n        var propName = parts[parts.length - 1];\n        if (propName.startsWith('on')) {\n            return;\n        }\n        var eventName = \"on\" + helpers_1.capitalizeFirstLetter(propName) + \"Change\";\n        parts[parts.length - 1] = eventName;\n        var changeEvent = tree_1.findValue(this.currentConfig, parts);\n        if (!changeEvent) {\n            return;\n        }\n        if (typeof changeEvent.value !== 'function') {\n            throw new Error(\"Invalid value for the \" + eventName + \" property.\\n                \" + eventName + \" must be a function.\");\n        }\n        changeEvent.value(optionValue);\n    };\n    OptionsManager.prototype.wrapOptionValue = function (name, value) {\n        var _this = this;\n        if (name.substr(0, 2) === 'on' && typeof value === 'function') {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (!_this.isUpdating) {\n                    value.apply(void 0, args);\n                }\n            };\n        }\n        return value;\n    };\n    OptionsManager.prototype.setGuard = function (optionName, optionValue) {\n        var _this = this;\n        if (this.guards[optionName] !== undefined) {\n            return;\n        }\n        var guardId = window.setTimeout(function () {\n            _this.setValue(optionName, optionValue);\n            window.clearTimeout(guardId);\n            delete _this.guards[optionName];\n        });\n        this.guards[optionName] = guardId;\n    };\n    OptionsManager.prototype.resetOption = function (name) {\n        this.instance.resetOption(name);\n    };\n    OptionsManager.prototype.setValue = function (name, value) {\n        if (this.guards[name]) {\n            window.clearTimeout(this.guards[name]);\n            delete this.guards[name];\n        }\n        this.instance.option(name, this.wrapOptionValue(name, value));\n    };\n    return OptionsManager;\n}());\nexports.OptionsManager = OptionsManager;\n"]},"metadata":{},"sourceType":"script"}