{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Report\\\\Account\\\\TreatmentAccount\\\\PrepaidMainTableReport\\\\PrepaidTableHeader.js\";\nimport React from \"react\";\nimport { Text, View, StyleSheet, Font } from \"@react-pdf/renderer\";\nFont.registerHyphenationCallback(word => {\n  const middle = Math.floor(word.length / 2);\n  const parts = word.length === 1 ? [word] : [word.substr(0, middle), word.substr(middle)]; // Check console to see words parts\n\n  console.log(word, parts);\n  return parts;\n});\nconst borderColor = \"#90e5fc\";\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    borderBottomColor: \"#bff0fd\",\n    backgroundColor: \"#bff0fd\",\n    borderBottomWidth: 1,\n    alignItems: \"center\",\n    height: 31,\n    textAlign: \"center\",\n    flexGrow: 1,\n    fontSize: \"10px\"\n  },\n  description: {\n    width: \"20%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1\n  },\n  date: {\n    width: \"10%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  purchase: {\n    width: \"13%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  status: {\n    width: \"13%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1\n  },\n  type: {\n    width: \"13%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  prepaid: {\n    width: \"15%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1\n  },\n  payment: {\n    width: \"10%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1\n  }\n});\nexport class PrepaidTableHeader extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: styles.prepaid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, `Prepaid #`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.prepaid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, `Payment #`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, `Description`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, `Last Update`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.purchase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, `Purchase Date`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, `Type`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, `Expiry Date`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, `Expiry Status`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.payment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, `Prepaid`), /*#__PURE__*/React.createElement(Text, {\n      style: styles.payment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, `Balance`));\n  }\n\n}","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Report/Account/TreatmentAccount/PrepaidMainTableReport/PrepaidTableHeader.js"],"names":["React","Text","View","StyleSheet","Font","registerHyphenationCallback","word","middle","Math","floor","length","parts","substr","console","log","borderColor","styles","create","container","display","flexDirection","borderBottomColor","backgroundColor","borderBottomWidth","alignItems","height","textAlign","flexGrow","fontSize","description","width","borderRightColor","borderRightWidth","date","purchase","status","type","prepaid","payment","PrepaidTableHeader","Component","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Text, View, StyleSheet, Font } from \"@react-pdf/renderer\";\r\nFont.registerHyphenationCallback(word => {\r\n  const middle = Math.floor(word.length / 2);\r\n  const parts =\r\n    word.length === 1 ? [word] : [word.substr(0, middle), word.substr(middle)];\r\n\r\n  // Check console to see words parts\r\n  console.log(word, parts);\r\n\r\n  return parts;\r\n});\r\nconst borderColor = \"#90e5fc\";\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    borderBottomColor: \"#bff0fd\",\r\n    backgroundColor: \"#bff0fd\",\r\n    borderBottomWidth: 1,\r\n    alignItems: \"center\",\r\n    height: 31,\r\n    textAlign: \"center\",\r\n    flexGrow: 1,\r\n    fontSize: \"10px\",\r\n  },\r\n  description: {\r\n    width: \"20%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n  },\r\n  date: {\r\n    width: \"10%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  purchase: {\r\n    width: \"13%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  status: {\r\n    width: \"13%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n  },\r\n  type: {\r\n    width: \"13%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  prepaid: {\r\n    width: \"15%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n  },\r\n  payment: {\r\n    width: \"10%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n  },\r\n});\r\n\r\nexport class PrepaidTableHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={styles.container} fixed>\r\n        <Text style={styles.prepaid}>{`Prepaid #`}</Text>\r\n        <Text style={styles.prepaid}>{`Payment #`}</Text>\r\n        <Text style={styles.description}>{`Description`}</Text>\r\n        <Text style={styles.date}>{`Last Update`}</Text>\r\n        <Text style={styles.purchase}>{`Purchase Date`}</Text>\r\n        <Text style={styles.type}>{`Type`}</Text>\r\n        <Text style={styles.status}>{`Expiry Date`}</Text>\r\n        <Text style={styles.status}>{`Expiry Status`}</Text>\r\n        <Text style={styles.payment}>{`Prepaid`}</Text>\r\n        <Text style={styles.payment}>{`Balance`}</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}