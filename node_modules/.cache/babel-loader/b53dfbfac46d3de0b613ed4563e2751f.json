{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.utils.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.sendRequest = sendRequest;\nexports.findField = findField;\nexports.formatValue = formatValue;\nexports.getCompareFunction = getCompareFunction;\nexports.createPath = createPath;\nexports.foreachDataLevel = foreachDataLevel;\nexports.mergeArraysByMaxValue = mergeArraysByMaxValue;\nexports.getExpandedLevel = getExpandedLevel;\nexports.discoverObjectFields = discoverObjectFields;\nexports.getFieldsDataType = getFieldsDataType;\nexports.setDefaultFieldValueFormatting = setDefaultFieldValueFormatting;\nexports.getFiltersByPath = getFiltersByPath;\nexports.capitalizeFirstLetter = capitalizeFirstLetter;\nexports.storeDrillDownMixin = exports.foreachTreeAsync = exports.foreachTree = exports.setFieldProperty = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _ajax = _interopRequireDefault(require(\"../../core/utils/ajax\"));\n\nvar _data = require(\"../../core/utils/data\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\n\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\n\nvar _data_source = require(\"../../data/data_source/data_source\");\n\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar setFieldProperty = function (field, property, value, isInitialization) {\n  var initProperties = field._initProperties = field._initProperties || {};\n  var initValue = isInitialization ? value : field[property];\n\n  if (!Object.prototype.hasOwnProperty.call(initProperties, property) || isInitialization) {\n    initProperties[property] = initValue;\n  }\n\n  field[property] = value;\n};\n\nexports.setFieldProperty = setFieldProperty;\n\nfunction sendRequest(options) {\n  return _ajax.default.sendRequest(options);\n}\n\nvar foreachTreeAsyncDate = new Date();\n\nfunction createForeachTreeFunc(isAsync) {\n  var foreachTreeFunc = function foreachTreeFunc(items, callback, parentAtFirst, members, index, isChildrenProcessing) {\n    members = members || [];\n    items = items || [];\n    var i;\n    var deferred;\n    index = index || 0;\n\n    function createForeachTreeAsyncHandler(deferred, i, isChildrenProcessing) {\n      (0, _deferred.when)(foreachTreeFunc(items, callback, parentAtFirst, members, i, isChildrenProcessing)).done(deferred.resolve);\n    }\n\n    for (i = index; i < items.length; i++) {\n      if (isAsync && i > index && i % 1e4 === 0 && new Date() - foreachTreeAsyncDate >= 300) {\n        foreachTreeAsyncDate = new Date();\n        deferred = new _deferred.Deferred();\n        setTimeout(createForeachTreeAsyncHandler(deferred, i, false), 0);\n        return deferred;\n      }\n\n      var item = items[i];\n\n      if (!isChildrenProcessing) {\n        members.unshift(item);\n\n        if (parentAtFirst && false === callback(members, i)) {\n          return;\n        }\n\n        if (item.children) {\n          var childrenDeferred = foreachTreeFunc(item.children, callback, parentAtFirst, members);\n\n          if (isAsync && childrenDeferred) {\n            deferred = new _deferred.Deferred();\n            childrenDeferred.done(createForeachTreeAsyncHandler(deferred, i, true));\n            return deferred;\n          }\n        }\n      }\n\n      isChildrenProcessing = false;\n\n      if (!parentAtFirst && false === callback(members, i)) {\n        return;\n      }\n\n      members.shift();\n\n      if (items[i] !== item) {\n        i--;\n      }\n    }\n  };\n\n  return foreachTreeFunc;\n}\n\nvar foreachTree = createForeachTreeFunc(false);\nexports.foreachTree = foreachTree;\nvar foreachTreeAsync = createForeachTreeFunc(true);\nexports.foreachTreeAsync = foreachTreeAsync;\n\nfunction findField(fields, id) {\n  if (fields && (0, _type.isDefined)(id)) {\n    for (var i = 0; i < fields.length; i++) {\n      var field = fields[i];\n\n      if (field.name === id || field.caption === id || field.dataField === id || field.index === id) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n\nfunction formatValue(value, options) {\n  var valueText = value === value && _format_helper.default.format(value, options.format);\n\n  var formatObject = {\n    value: value,\n    valueText: valueText || \"\"\n  };\n  return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText;\n}\n\nfunction getCompareFunction(valueSelector) {\n  return function (a, b) {\n    var result = 0;\n    var valueA = valueSelector(a);\n    var valueB = valueSelector(b);\n    var aIsDefined = (0, _type.isDefined)(valueA);\n    var bIsDefined = (0, _type.isDefined)(valueB);\n\n    if (aIsDefined && bIsDefined) {\n      if (valueA > valueB) {\n        result = 1;\n      } else {\n        if (valueA < valueB) {\n          result = -1;\n        }\n      }\n    }\n\n    if (aIsDefined && !bIsDefined) {\n      result = 1;\n    }\n\n    if (!aIsDefined && bIsDefined) {\n      result = -1;\n    }\n\n    return result;\n  };\n}\n\nfunction createPath(items) {\n  var result = [];\n\n  for (var i = items.length - 1; i >= 0; i--) {\n    result.push(items[i].key || items[i].value);\n  }\n\n  return result;\n}\n\nfunction foreachDataLevel(data, callback, index, childrenField) {\n  index = index || 0;\n  childrenField = childrenField || \"children\";\n\n  if (data.length) {\n    callback(data, index);\n  }\n\n  for (var i = 0; i < data.length; i++) {\n    var item = data[i];\n\n    if (item[childrenField] && item[childrenField].length) {\n      foreachDataLevel(item[childrenField], callback, index + 1, childrenField);\n    }\n  }\n}\n\nfunction mergeArraysByMaxValue(values1, values2) {\n  var result = [];\n\n  for (var i = 0; i < values1.length; i++) {\n    result.push(Math.max(values1[i] || 0, values2[i] || 0));\n  }\n\n  return result;\n}\n\nfunction getExpandedLevel(options, axisName) {\n  var dimensions = options[axisName];\n  var expandLevel = 0;\n  var expandedPaths = (\"columns\" === axisName ? options.columnExpandedPaths : options.rowExpandedPaths) || [];\n\n  if (options.headerName === axisName) {\n    expandLevel = options.path.length;\n  } else {\n    if (options.headerName && options.headerName !== axisName && options.oppositePath) {\n      expandLevel = options.oppositePath.length;\n    } else {\n      (0, _iterator.each)(expandedPaths, function (_, path) {\n        expandLevel = Math.max(expandLevel, path.length);\n      });\n    }\n  }\n\n  while (dimensions[expandLevel + 1] && dimensions[expandLevel].expanded) {\n    expandLevel++;\n  }\n\n  return expandLevel;\n}\n\nfunction createGroupFields(item) {\n  return (0, _iterator.map)([\"year\", \"quarter\", \"month\"], function (value, index) {\n    return (0, _extend.extend)({}, item, {\n      groupInterval: value,\n      groupIndex: index\n    });\n  });\n}\n\nfunction parseFields(dataSource, fieldsList, path, fieldsDataType) {\n  var result = [];\n  Object.keys(fieldsList || []).forEach(function (field) {\n    if (field && 0 === field.indexOf(\"__\")) {\n      return;\n    }\n\n    var dataIndex = 1;\n    var currentPath = path.length ? path + \".\" + field : field;\n    var dataType = fieldsDataType[currentPath];\n    var getter = (0, _data.compileGetter)(currentPath);\n    var value = fieldsList[field];\n    var items;\n\n    while (!(0, _type.isDefined)(value) && dataSource[dataIndex]) {\n      value = getter(dataSource[dataIndex]);\n      dataIndex++;\n    }\n\n    if (!dataType && (0, _type.isDefined)(value)) {\n      dataType = (0, _type.type)(value);\n    }\n\n    items = [{\n      dataField: currentPath,\n      dataType: dataType,\n      groupName: \"date\" === dataType ? field : void 0,\n      groupInterval: void 0,\n      displayFolder: path\n    }];\n\n    if (\"date\" === dataType) {\n      items = items.concat(createGroupFields(items[0]));\n    } else {\n      if (\"object\" === dataType) {\n        items = parseFields(dataSource, value, currentPath, fieldsDataType);\n      }\n    }\n\n    result.push.apply(result, items);\n  });\n  return result;\n}\n\nfunction discoverObjectFields(items, fields) {\n  var fieldsDataType = getFieldsDataType(fields);\n  return parseFields(items, items[0], \"\", fieldsDataType);\n}\n\nfunction getFieldsDataType(fields) {\n  var result = {};\n  (0, _iterator.each)(fields, function (_, field) {\n    result[field.dataField] = result[field.dataField] || field.dataType;\n  });\n  return result;\n}\n\nvar DATE_INTERVAL_FORMATS = {\n  month: function (value) {\n    return _date.default.getMonthNames()[value - 1];\n  },\n  quarter: function (value) {\n    return _date.default.format(new Date(2e3, 3 * value - 1), \"quarter\");\n  },\n  dayOfWeek: function (value) {\n    return _date.default.getDayNames()[value];\n  }\n};\n\nfunction setDefaultFieldValueFormatting(field) {\n  if (\"date\" === field.dataType) {\n    if (!field.format) {\n      setFieldProperty(field, \"format\", DATE_INTERVAL_FORMATS[field.groupInterval]);\n    }\n  } else {\n    if (\"number\" === field.dataType) {\n      var groupInterval = (0, _type.isNumeric)(field.groupInterval) && field.groupInterval > 0 && field.groupInterval;\n\n      if (groupInterval && !field.customizeText) {\n        setFieldProperty(field, \"customizeText\", function (formatObject) {\n          var secondValue = formatObject.value + groupInterval;\n\n          var secondValueText = _format_helper.default.format(secondValue, field.format);\n\n          return formatObject.valueText && secondValueText ? formatObject.valueText + \" - \" + secondValueText : \"\";\n        });\n      }\n    }\n  }\n}\n\nfunction getFiltersByPath(fields, path) {\n  var result = [];\n  path = path || [];\n\n  for (var i = 0; i < path.length; i++) {\n    result.push((0, _extend.extend)({}, fields[i], {\n      groupIndex: null,\n      groupName: null,\n      filterType: \"include\",\n      filterValues: [path[i]]\n    }));\n  }\n\n  return result;\n}\n\nvar storeDrillDownMixin = {\n  createDrillDownDataSource: function (descriptions, params) {\n    var items = this.getDrillDownItems(descriptions, params);\n    var arrayStore;\n\n    function createCustomStoreMethod(methodName) {\n      return function (options) {\n        var d;\n\n        if (arrayStore) {\n          d = arrayStore[methodName](options);\n        } else {\n          d = new _deferred.Deferred();\n          (0, _deferred.when)(items).done(function (data) {\n            var arrayStore = new _array_store.default(data);\n            arrayStore[methodName](options).done(d.resolve).fail(d.reject);\n          }).fail(d.reject);\n        }\n\n        return d;\n      };\n    }\n\n    var dataSource = new _data_source.DataSource({\n      load: createCustomStoreMethod(\"load\"),\n      totalCount: createCustomStoreMethod(\"totalCount\"),\n      key: this.key()\n    });\n    return dataSource;\n  }\n};\nexports.storeDrillDownMixin = storeDrillDownMixin;\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/ui.pivot_grid.utils.js"],"names":["exports","sendRequest","findField","formatValue","getCompareFunction","createPath","foreachDataLevel","mergeArraysByMaxValue","getExpandedLevel","discoverObjectFields","getFieldsDataType","setDefaultFieldValueFormatting","getFiltersByPath","capitalizeFirstLetter","storeDrillDownMixin","foreachTreeAsync","foreachTree","setFieldProperty","_type","require","_ajax","_interopRequireDefault","_data","_iterator","_extend","_date","_format_helper","_data_source","_array_store","_deferred","obj","__esModule","field","property","value","isInitialization","initProperties","_initProperties","initValue","Object","prototype","hasOwnProperty","call","options","default","foreachTreeAsyncDate","Date","createForeachTreeFunc","isAsync","foreachTreeFunc","items","callback","parentAtFirst","members","index","isChildrenProcessing","i","deferred","createForeachTreeAsyncHandler","when","done","resolve","length","Deferred","setTimeout","item","unshift","children","childrenDeferred","shift","fields","id","isDefined","name","caption","dataField","valueText","format","formatObject","customizeText","valueSelector","a","b","result","valueA","valueB","aIsDefined","bIsDefined","push","key","data","childrenField","values1","values2","Math","max","axisName","dimensions","expandLevel","expandedPaths","columnExpandedPaths","rowExpandedPaths","headerName","path","oppositePath","each","_","expanded","createGroupFields","map","extend","groupInterval","groupIndex","parseFields","dataSource","fieldsList","fieldsDataType","keys","forEach","indexOf","dataIndex","currentPath","dataType","getter","compileGetter","type","groupName","displayFolder","concat","apply","DATE_INTERVAL_FORMATS","month","getMonthNames","quarter","dayOfWeek","getDayNames","isNumeric","secondValue","secondValueText","filterType","filterValues","createDrillDownDataSource","descriptions","params","getDrillDownItems","arrayStore","createCustomStoreMethod","methodName","d","fail","reject","DataSource","load","totalCount","string","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.utils.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.sendRequest = sendRequest;\r\nexports.findField = findField;\r\nexports.formatValue = formatValue;\r\nexports.getCompareFunction = getCompareFunction;\r\nexports.createPath = createPath;\r\nexports.foreachDataLevel = foreachDataLevel;\r\nexports.mergeArraysByMaxValue = mergeArraysByMaxValue;\r\nexports.getExpandedLevel = getExpandedLevel;\r\nexports.discoverObjectFields = discoverObjectFields;\r\nexports.getFieldsDataType = getFieldsDataType;\r\nexports.setDefaultFieldValueFormatting = setDefaultFieldValueFormatting;\r\nexports.getFiltersByPath = getFiltersByPath;\r\nexports.capitalizeFirstLetter = capitalizeFirstLetter;\r\nexports.storeDrillDownMixin = exports.foreachTreeAsync = exports.foreachTree = exports.setFieldProperty = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _ajax = _interopRequireDefault(require(\"../../core/utils/ajax\"));\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\r\nvar _data_source = require(\"../../data/data_source/data_source\");\r\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar setFieldProperty = function(field, property, value, isInitialization) {\r\n    var initProperties = field._initProperties = field._initProperties || {};\r\n    var initValue = isInitialization ? value : field[property];\r\n    if (!Object.prototype.hasOwnProperty.call(initProperties, property) || isInitialization) {\r\n        initProperties[property] = initValue\r\n    }\r\n    field[property] = value\r\n};\r\nexports.setFieldProperty = setFieldProperty;\r\n\r\nfunction sendRequest(options) {\r\n    return _ajax.default.sendRequest(options)\r\n}\r\nvar foreachTreeAsyncDate = new Date;\r\n\r\nfunction createForeachTreeFunc(isAsync) {\r\n    var foreachTreeFunc = function foreachTreeFunc(items, callback, parentAtFirst, members, index, isChildrenProcessing) {\r\n        members = members || [];\r\n        items = items || [];\r\n        var i;\r\n        var deferred;\r\n        index = index || 0;\r\n\r\n        function createForeachTreeAsyncHandler(deferred, i, isChildrenProcessing) {\r\n            (0, _deferred.when)(foreachTreeFunc(items, callback, parentAtFirst, members, i, isChildrenProcessing)).done(deferred.resolve)\r\n        }\r\n        for (i = index; i < items.length; i++) {\r\n            if (isAsync && i > index && i % 1e4 === 0 && new Date - foreachTreeAsyncDate >= 300) {\r\n                foreachTreeAsyncDate = new Date;\r\n                deferred = new _deferred.Deferred;\r\n                setTimeout(createForeachTreeAsyncHandler(deferred, i, false), 0);\r\n                return deferred\r\n            }\r\n            var item = items[i];\r\n            if (!isChildrenProcessing) {\r\n                members.unshift(item);\r\n                if (parentAtFirst && false === callback(members, i)) {\r\n                    return\r\n                }\r\n                if (item.children) {\r\n                    var childrenDeferred = foreachTreeFunc(item.children, callback, parentAtFirst, members);\r\n                    if (isAsync && childrenDeferred) {\r\n                        deferred = new _deferred.Deferred;\r\n                        childrenDeferred.done(createForeachTreeAsyncHandler(deferred, i, true));\r\n                        return deferred\r\n                    }\r\n                }\r\n            }\r\n            isChildrenProcessing = false;\r\n            if (!parentAtFirst && false === callback(members, i)) {\r\n                return\r\n            }\r\n            members.shift();\r\n            if (items[i] !== item) {\r\n                i--\r\n            }\r\n        }\r\n    };\r\n    return foreachTreeFunc\r\n}\r\nvar foreachTree = createForeachTreeFunc(false);\r\nexports.foreachTree = foreachTree;\r\nvar foreachTreeAsync = createForeachTreeFunc(true);\r\nexports.foreachTreeAsync = foreachTreeAsync;\r\n\r\nfunction findField(fields, id) {\r\n    if (fields && (0, _type.isDefined)(id)) {\r\n        for (var i = 0; i < fields.length; i++) {\r\n            var field = fields[i];\r\n            if (field.name === id || field.caption === id || field.dataField === id || field.index === id) {\r\n                return i\r\n            }\r\n        }\r\n    }\r\n    return -1\r\n}\r\n\r\nfunction formatValue(value, options) {\r\n    var valueText = value === value && _format_helper.default.format(value, options.format);\r\n    var formatObject = {\r\n        value: value,\r\n        valueText: valueText || \"\"\r\n    };\r\n    return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText\r\n}\r\n\r\nfunction getCompareFunction(valueSelector) {\r\n    return function(a, b) {\r\n        var result = 0;\r\n        var valueA = valueSelector(a);\r\n        var valueB = valueSelector(b);\r\n        var aIsDefined = (0, _type.isDefined)(valueA);\r\n        var bIsDefined = (0, _type.isDefined)(valueB);\r\n        if (aIsDefined && bIsDefined) {\r\n            if (valueA > valueB) {\r\n                result = 1\r\n            } else {\r\n                if (valueA < valueB) {\r\n                    result = -1\r\n                }\r\n            }\r\n        }\r\n        if (aIsDefined && !bIsDefined) {\r\n            result = 1\r\n        }\r\n        if (!aIsDefined && bIsDefined) {\r\n            result = -1\r\n        }\r\n        return result\r\n    }\r\n}\r\n\r\nfunction createPath(items) {\r\n    var result = [];\r\n    for (var i = items.length - 1; i >= 0; i--) {\r\n        result.push(items[i].key || items[i].value)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction foreachDataLevel(data, callback, index, childrenField) {\r\n    index = index || 0;\r\n    childrenField = childrenField || \"children\";\r\n    if (data.length) {\r\n        callback(data, index)\r\n    }\r\n    for (var i = 0; i < data.length; i++) {\r\n        var item = data[i];\r\n        if (item[childrenField] && item[childrenField].length) {\r\n            foreachDataLevel(item[childrenField], callback, index + 1, childrenField)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mergeArraysByMaxValue(values1, values2) {\r\n    var result = [];\r\n    for (var i = 0; i < values1.length; i++) {\r\n        result.push(Math.max(values1[i] || 0, values2[i] || 0))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getExpandedLevel(options, axisName) {\r\n    var dimensions = options[axisName];\r\n    var expandLevel = 0;\r\n    var expandedPaths = (\"columns\" === axisName ? options.columnExpandedPaths : options.rowExpandedPaths) || [];\r\n    if (options.headerName === axisName) {\r\n        expandLevel = options.path.length\r\n    } else {\r\n        if (options.headerName && options.headerName !== axisName && options.oppositePath) {\r\n            expandLevel = options.oppositePath.length\r\n        } else {\r\n            (0, _iterator.each)(expandedPaths, function(_, path) {\r\n                expandLevel = Math.max(expandLevel, path.length)\r\n            })\r\n        }\r\n    }\r\n    while (dimensions[expandLevel + 1] && dimensions[expandLevel].expanded) {\r\n        expandLevel++\r\n    }\r\n    return expandLevel\r\n}\r\n\r\nfunction createGroupFields(item) {\r\n    return (0, _iterator.map)([\"year\", \"quarter\", \"month\"], function(value, index) {\r\n        return (0, _extend.extend)({}, item, {\r\n            groupInterval: value,\r\n            groupIndex: index\r\n        })\r\n    })\r\n}\r\n\r\nfunction parseFields(dataSource, fieldsList, path, fieldsDataType) {\r\n    var result = [];\r\n    Object.keys(fieldsList || []).forEach(function(field) {\r\n        if (field && 0 === field.indexOf(\"__\")) {\r\n            return\r\n        }\r\n        var dataIndex = 1;\r\n        var currentPath = path.length ? path + \".\" + field : field;\r\n        var dataType = fieldsDataType[currentPath];\r\n        var getter = (0, _data.compileGetter)(currentPath);\r\n        var value = fieldsList[field];\r\n        var items;\r\n        while (!(0, _type.isDefined)(value) && dataSource[dataIndex]) {\r\n            value = getter(dataSource[dataIndex]);\r\n            dataIndex++\r\n        }\r\n        if (!dataType && (0, _type.isDefined)(value)) {\r\n            dataType = (0, _type.type)(value)\r\n        }\r\n        items = [{\r\n            dataField: currentPath,\r\n            dataType: dataType,\r\n            groupName: \"date\" === dataType ? field : void 0,\r\n            groupInterval: void 0,\r\n            displayFolder: path\r\n        }];\r\n        if (\"date\" === dataType) {\r\n            items = items.concat(createGroupFields(items[0]))\r\n        } else {\r\n            if (\"object\" === dataType) {\r\n                items = parseFields(dataSource, value, currentPath, fieldsDataType)\r\n            }\r\n        }\r\n        result.push.apply(result, items)\r\n    });\r\n    return result\r\n}\r\n\r\nfunction discoverObjectFields(items, fields) {\r\n    var fieldsDataType = getFieldsDataType(fields);\r\n    return parseFields(items, items[0], \"\", fieldsDataType)\r\n}\r\n\r\nfunction getFieldsDataType(fields) {\r\n    var result = {};\r\n    (0, _iterator.each)(fields, function(_, field) {\r\n        result[field.dataField] = result[field.dataField] || field.dataType\r\n    });\r\n    return result\r\n}\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return _date.default.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return _date.default.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    },\r\n    dayOfWeek: function(value) {\r\n        return _date.default.getDayNames()[value]\r\n    }\r\n};\r\n\r\nfunction setDefaultFieldValueFormatting(field) {\r\n    if (\"date\" === field.dataType) {\r\n        if (!field.format) {\r\n            setFieldProperty(field, \"format\", DATE_INTERVAL_FORMATS[field.groupInterval])\r\n        }\r\n    } else {\r\n        if (\"number\" === field.dataType) {\r\n            var groupInterval = (0, _type.isNumeric)(field.groupInterval) && field.groupInterval > 0 && field.groupInterval;\r\n            if (groupInterval && !field.customizeText) {\r\n                setFieldProperty(field, \"customizeText\", function(formatObject) {\r\n                    var secondValue = formatObject.value + groupInterval;\r\n                    var secondValueText = _format_helper.default.format(secondValue, field.format);\r\n                    return formatObject.valueText && secondValueText ? formatObject.valueText + \" - \" + secondValueText : \"\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getFiltersByPath(fields, path) {\r\n    var result = [];\r\n    path = path || [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        result.push((0, _extend.extend)({}, fields[i], {\r\n            groupIndex: null,\r\n            groupName: null,\r\n            filterType: \"include\",\r\n            filterValues: [path[i]]\r\n        }))\r\n    }\r\n    return result\r\n}\r\nvar storeDrillDownMixin = {\r\n    createDrillDownDataSource: function(descriptions, params) {\r\n        var items = this.getDrillDownItems(descriptions, params);\r\n        var arrayStore;\r\n\r\n        function createCustomStoreMethod(methodName) {\r\n            return function(options) {\r\n                var d;\r\n                if (arrayStore) {\r\n                    d = arrayStore[methodName](options)\r\n                } else {\r\n                    d = new _deferred.Deferred;\r\n                    (0, _deferred.when)(items).done(function(data) {\r\n                        var arrayStore = new _array_store.default(data);\r\n                        arrayStore[methodName](options).done(d.resolve).fail(d.reject)\r\n                    }).fail(d.reject)\r\n                }\r\n                return d\r\n            }\r\n        }\r\n        var dataSource = new _data_source.DataSource({\r\n            load: createCustomStoreMethod(\"load\"),\r\n            totalCount: createCustomStoreMethod(\"totalCount\"),\r\n            key: this.key()\r\n        });\r\n        return dataSource\r\n    }\r\n};\r\nexports.storeDrillDownMixin = storeDrillDownMixin;\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}