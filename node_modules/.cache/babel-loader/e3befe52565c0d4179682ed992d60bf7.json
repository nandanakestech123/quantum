{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\BillOps\\\\billOps.js\";\nimport React, { Component } from 'react';\nimport './style.scss';\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper } from 'component/common';\nimport { dateFormat } from 'service/helperFunctions';\nimport _ from 'lodash';\nimport { history } from 'helpers';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport { VoidPaidTrans } from './voidPaidTrans.js';\nexport class BillOpsClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tstaffList: [{}],\n      headerDetails: [{\n        label: 'Date',\n        sortKey: false,\n        width: \"60px\"\n      }, {\n        label: 'Treatment',\n        width: \"120px\"\n      }, {\n        label: 'Trans Ref',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Discription',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Type',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Exp Date',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Amount',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Status',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Rev',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Treat No',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Limit',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Sel Staff',\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: 'Staff',\n        sortKey: false,\n        width: \"55px\"\n      }],\n      // cartData: {},\n      yearList: [],\n      selectedYear: new Date().getFullYear(),\n      isOpenTreatmentDone: false,\n      tsStaff: {},\n      workPoint: 0,\n      isOpenReversal: false,\n      menuItems: [{\n        to: '/admin/catalog',\n        label: \"Suspend Bill\",\n        id: \"suspendBill\"\n      }, {\n        to: '/admin/catalog',\n        label: \"Recall Sus Bill\",\n        id: \"recallSusBill\"\n      }, {\n        to: '/admin/catalog',\n        label: \"Recall Tran\",\n        id: \"reacallBill\"\n      }, {\n        to: '/admin/catalog',\n        label: \"Reprint Bill\",\n        id: \"reprint\"\n      }, {\n        to: '/admin/catalog',\n        label: \"Void itam/bill\",\n        id: \"VoidItemBill\"\n      }, {\n        to: '/admin/catalog',\n        label: \"Void Paid Trans\",\n        id: \"voidPaidTrns\"\n      }],\n      activeMenu: \"voidPaidTrns\"\n    };\n\n    this.componentWillMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }\n        }, message),\n        autoForceUpdate: this\n      }); // this.props.getCommonApi('treatmentdone/Year/').then((key) => {\n      //     let { status, data } = key;\n      //     let { yearList } = this.state;\n      //     for (let value of data) {\n      //         yearList.push({ value: value, label: value })\n      //     }\n      //     this.setState({ yearList })\n      // })\n      // this.getCart();\n    };\n\n    this.getCart = () => {\n      console.log(this.props, \"sfgdfsgdfghgf\");\n      let {\n        roomList,\n        sourceList,\n        staffList,\n        cartData,\n        duration,\n        tstaffList,\n        selectedYear\n      } = this.state;\n      this.props.getCommonApi(`treatmentdone/?year=${selectedYear}&cust_id=${this.props.basicApptDetail.custId}`).then(key => {\n        cartData = key;\n        tstaffList = key.data;\n        this.setState({\n          tstaffList\n        });\n      });\n    };\n\n    this.handleYearChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        selectedYear\n      } = this.state;\n      selectedYear = value;\n      await this.setState({\n        selectedYear\n      });\n      this.getCart();\n    };\n\n    this.getDataFromRes = data => {\n      let {\n        formFields,\n        cartData,\n        updateFields,\n        postFields\n      } = this.state;\n      formFields['Item'] = data.value.Item;\n      formFields['Price'] = data.value.Price;\n      formFields['Room'] = data.value.Room;\n      updateFields['Room'] = data.value.Room;\n      formFields['Source'] = data.value.Source;\n      updateFields['Source'] = data.value.Source;\n      formFields['add_duration'] = data.value.add_duration;\n      formFields['new_remark'] = data.value.new_remark;\n      updateFields['new_remark'] = data.value.new_remark;\n      postFields['times'] = data.value.times;\n      postFields['work_point'] = data.value.work_point;\n      this.setState({\n        formFields,\n        updateFields,\n        postFields\n      });\n    };\n\n    this.handleSubmit = id => {};\n\n    this.handleDialog = () => {\n      this.setState({\n        isOpenTreatmentDone: false,\n        isOpenReversal: false\n      });\n    };\n\n    this.handleSearch = event => {\n      event.persist();\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          this.props.getCommonApi(`custappt/?search=${searchString}`).then(key => {\n            let {\n              status,\n              data\n            } = key;\n\n            if (status === 200) {\n              // for (let value of data) {\n              //     customerList.push({ value: value.id, label: value.emp_name })\n              // }\n              this.setState({\n                customerOption: data\n              });\n            }\n          });\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleSelectCustomer = async data => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"custId\"] = data.id;\n      formFields[\"custName\"] = data.cust_name;\n      this.setState({\n        formFields,\n        isOpenCustomer: false,\n        customerOption: []\n      });\n      await this.props.updateForm('basicApptDetail', formFields);\n      console.log(this.props.basicApptDetail, \"sdfsadfasdf\");\n    };\n\n    this.handleCheckout = () => {\n      let {\n        isOpenPayment\n      } = this.state;\n      isOpenPayment = true;\n      this.setState({\n        isOpenPayment\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      }); // this.props.updateForm('customerDetail', formFields)\n      // await this.props.updateForm('appointmentCustomerDetail', formFields)\n    };\n\n    this.handleMenu = (item, index) => {};\n  }\n\n  render() {\n    let {\n      tstaffList = [],\n      menuItems = [],\n      activeMenu,\n      selectedYear,\n      yearList,\n      isOpenTreatmentDone,\n      headerDetails,\n      tsStaff,\n      isOpenReversal,\n      treatmentIds\n    } = this.state;\n    let {\n      basicApptDetail\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row treatment-done-new p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 font-700 mb-3 title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, \"Transaction Detail\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"fs-15 clear-line\",\n      label: \"Back\",\n      outline: false,\n      onClick: () => history.push(`/admin/cart`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, menuItems.length > 0 ? menuItems.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `menus fs-14 mr-4 ${activeMenu === data.id ? \"active\" : \"\"}`,\n        onClick: () => this.handleMenu(data.id, data.label),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 41\n        }\n      }, data.label);\n    }) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VoidPaidTrans, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonCreateApi,\n    commonPatchApi,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const BillOps = connect(mapStateToProps, mapDispatchToProps)(BillOpsClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Cart/BillOps/billOps.js"],"names":["React","Component","NormalButton","NormalInput","NormalSelect","InputSearch","NormalModal","TableWrapper","dateFormat","_","history","connect","bindActionCreators","getCommonApi","updateForm","commonCreateApi","commonDeleteApi","commonPatchApi","SimpleReactValidator","VoidPaidTrans","BillOpsClass","state","tstaffList","headerDetails","label","sortKey","width","yearList","selectedYear","Date","getFullYear","isOpenTreatmentDone","tsStaff","workPoint","isOpenReversal","menuItems","to","id","activeMenu","componentWillMount","validator","element","message","autoForceUpdate","getCart","console","log","props","roomList","sourceList","staffList","cartData","duration","basicApptDetail","custId","then","key","data","setState","handleYearChange","target","value","name","getDataFromRes","formFields","updateFields","postFields","Item","Price","Room","Source","add_duration","new_remark","times","work_point","handleSubmit","handleDialog","handleSearch","event","persist","debouncedFn","debounce","searchString","status","customerOption","handleSelectCustomer","cust_name","isOpenCustomer","handleCheckout","isOpenPayment","handleChange","handleMenu","item","index","render","treatmentIds","push","length","map","mapStateToProps","selected_cstomer","common","appointment","mapDispatchToProps","dispatch","BillOps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper } from 'component/common';\r\nimport { dateFormat } from 'service/helperFunctions';\r\nimport _ from 'lodash';\r\nimport { history } from 'helpers';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\"\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { VoidPaidTrans } from './voidPaidTrans.js';\r\n\r\n\r\nexport class BillOpsClass extends Component {\r\n    state = {\r\n        tstaffList: [{}],\r\n        headerDetails: [\r\n            { label: 'Date', sortKey: false, width: \"60px\" },\r\n            { label: 'Treatment', width: \"120px\" },\r\n            { label: 'Trans Ref', sortKey: false, width: \"55px\" },\r\n            { label: 'Discription', sortKey: false, width: \"55px\" },\r\n            { label: 'Type', sortKey: false, width: \"55px\" },\r\n            { label: 'Exp Date', sortKey: false, width: \"55px\" },\r\n            { label: 'Amount', sortKey: false, width: \"55px\" },\r\n            { label: 'Status', sortKey: false, width: \"55px\" },\r\n            { label: 'Rev', sortKey: false, width: \"55px\" },\r\n            { label: 'Treat No', sortKey: false, width: \"55px\" },\r\n            { label: 'Limit', sortKey: false, width: \"55px\" },\r\n            { label: 'Sel Staff', sortKey: false, width: \"55px\" },\r\n            { label: 'Staff', sortKey: false, width: \"55px\" },\r\n        ],\r\n        // cartData: {},\r\n        yearList: [],\r\n        selectedYear: new Date().getFullYear(),\r\n        isOpenTreatmentDone: false,\r\n        tsStaff: {},\r\n        workPoint: 0,\r\n        isOpenReversal: false,\r\n        menuItems: [\r\n            { to: '/admin/catalog', label: \"Suspend Bill\", id: \"suspendBill\" },\r\n            { to: '/admin/catalog', label: \"Recall Sus Bill\", id: \"recallSusBill\" },\r\n            { to: '/admin/catalog', label: \"Recall Tran\", id: \"reacallBill\" },\r\n            { to: '/admin/catalog', label: \"Reprint Bill\", id: \"reprint\" },\r\n            { to: '/admin/catalog', label: \"Void itam/bill\", id: \"VoidItemBill\" },\r\n            { to: '/admin/catalog', label: \"Void Paid Trans\", id: \"voidPaidTrns\" }\r\n        ],\r\n        activeMenu: \"voidPaidTrns\",\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.validator = new SimpleReactValidator({\r\n            element: message => <span className=\"error-message text-danger validNo fs14\">{message}</span>,\r\n            autoForceUpdate: this,\r\n        });\r\n        // this.props.getCommonApi('treatmentdone/Year/').then((key) => {\r\n        //     let { status, data } = key;\r\n        //     let { yearList } = this.state;\r\n        //     for (let value of data) {\r\n        //         yearList.push({ value: value, label: value })\r\n        //     }\r\n        //     this.setState({ yearList })\r\n        // })\r\n\r\n        // this.getCart();\r\n\r\n    }\r\n\r\n    getCart = () => {\r\n        console.log(this.props, \"sfgdfsgdfghgf\")\r\n        let { roomList, sourceList, staffList, cartData, duration, tstaffList, selectedYear } = this.state;\r\n        this.props.getCommonApi(`treatmentdone/?year=${selectedYear}&cust_id=${this.props.basicApptDetail.custId}`).then((key) => {\r\n            cartData = key;\r\n            tstaffList = key.data;\r\n            this.setState({ tstaffList });\r\n        })\r\n    }\r\n\r\n    handleYearChange = async ({ target: { value, name } }) => {\r\n        let { selectedYear } = this.state;\r\n        selectedYear = value;\r\n        await this.setState({\r\n            selectedYear\r\n        })\r\n        this.getCart();\r\n    }\r\n\r\n    getDataFromRes = (data) => {\r\n        let { formFields, cartData, updateFields, postFields } = this.state;\r\n        formFields['Item'] = data.value.Item;\r\n        formFields['Price'] = data.value.Price;\r\n        formFields['Room'] = data.value.Room;\r\n        updateFields['Room'] = data.value.Room;\r\n        formFields['Source'] = data.value.Source;\r\n        updateFields['Source'] = data.value.Source;\r\n        formFields['add_duration'] = data.value.add_duration;\r\n        formFields['new_remark'] = data.value.new_remark;\r\n        updateFields['new_remark'] = data.value.new_remark;\r\n        postFields['times'] = data.value.times;\r\n        postFields['work_point'] = data.value.work_point;\r\n        this.setState({\r\n            formFields,\r\n            updateFields,\r\n            postFields\r\n        })\r\n    }\r\n\r\n\r\n    // getYearList = (data) => {\r\n    //     let date = new Date().getFullYear();\r\n\r\n    //     let { yearList } = this.state;\r\n    //     for (let i = date; i > 1970; i--) {\r\n    //         yearList.push({ label: i, value: i });\r\n    //     }\r\n    //     this.setState({\r\n    //         yearList\r\n    //     })\r\n    // }\r\n\r\n    handleSubmit = (id) => {\r\n\r\n    }\r\n\r\n    handleDialog = () => {\r\n        this.setState({\r\n            isOpenTreatmentDone: false,\r\n            isOpenReversal: false\r\n        });\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        event.persist();\r\n\r\n        if (!this.debouncedFn) {\r\n            this.debouncedFn = _.debounce(() => {\r\n                let searchString = event.target.value;\r\n                this.props.getCommonApi(`custappt/?search=${searchString}`).then((key) => {\r\n\r\n                    let { status, data } = key;\r\n                    if (status === 200) {\r\n                        // for (let value of data) {\r\n                        //     customerList.push({ value: value.id, label: value.emp_name })\r\n                        // }\r\n                        this.setState({ customerOption: data })\r\n                    }\r\n                })\r\n            }, 500);\r\n        }\r\n        this.debouncedFn();\r\n    }\r\n\r\n    handleSelectCustomer = async (data) => {\r\n        let { formFields } = this.state;\r\n        formFields[\"custId\"] = data.id;\r\n        formFields[\"custName\"] = data.cust_name;\r\n        this.setState({ formFields, isOpenCustomer: false, customerOption: [] });\r\n        await this.props.updateForm('basicApptDetail', formFields)\r\n        console.log(this.props.basicApptDetail, \"sdfsadfasdf\")\r\n    }\r\n\r\n\r\n    handleCheckout = () => {\r\n        let { isOpenPayment } = this.state;\r\n        isOpenPayment = true;\r\n        this.setState({ isOpenPayment });\r\n    }\r\n\r\n    handleChange = async ({ target: { value, name } }) => {\r\n        let { formFields } = this.state;\r\n        formFields[name] = value;\r\n        await this.setState({\r\n            formFields,\r\n        });\r\n        // this.props.updateForm('customerDetail', formFields)\r\n        // await this.props.updateForm('appointmentCustomerDetail', formFields)\r\n    };\r\n\r\n\r\n    handleMenu = (item, index) => {\r\n\r\n    }\r\n\r\n    render() {\r\n        let { tstaffList = [], menuItems = [], activeMenu, selectedYear, yearList, isOpenTreatmentDone, headerDetails, tsStaff, isOpenReversal, treatmentIds } = this.state;\r\n        let { basicApptDetail } = this.props;\r\n        return (\r\n            <>\r\n                <div className=\"row treatment-done-new p-3\">\r\n                    <div className=\"col-12 header\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-10\">\r\n                                <p className=\"fs-18 font-700 mb-3 title\">Transaction Detail</p>\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                            <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-line\"\r\n                                label=\"Back\"\r\n                                outline={false}\r\n                                onClick={()=>history.push(`/admin/cart`)}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex mb-4\">\r\n                            {\r\n                                menuItems.length > 0 ? menuItems.map((data, index) => {\r\n                                    return (\r\n\r\n                                        <div className={`menus fs-14 mr-4 ${activeMenu === data.id ? \"active\" : \"\"}`} onClick={() => this.handleMenu(data.id, data.label)}>{data.label}</div>\r\n\r\n                                    )\r\n                                }) : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <VoidPaidTrans></VoidPaidTrans>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selected_cstomer: state.common.selected_cstomer,\r\n    basicApptDetail: state.appointment.basicApptDetail,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        // getCustomer,\r\n        getCommonApi,\r\n        updateForm,\r\n        commonCreateApi,\r\n        commonPatchApi,\r\n        commonDeleteApi\r\n    }, dispatch)\r\n}\r\n\r\nexport const BillOps = connect(mapStateToProps, mapDispatchToProps)(BillOpsClass)"]},"metadata":{},"sourceType":"module"}