{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Quantum\\\\Quotation\\\\ListQuotation\\\\index.js\";\nimport React from \"react\";\nimport { Toast } from \"service/toast\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { NormalButton, NormalDate, TableWrapper, NormalMultiSelect } from \"component/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { withTranslation } from \"react-i18next\";\nimport { NormalInput, NormalDateTime } from \"component/common\";\nimport { Link } from \"react-router-dom\";\nimport updateBtn from \"assets/images/edit1.png\";\nimport deleteBtn from \"assets/images/delete1.png\";\nimport { getProject, deleteProject } from \"redux/actions/project\";\nimport { history } from \"helpers\";\nexport class ListQuotationClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Date\"\n      }, {\n        label: \"Quotation Number\"\n      }, {\n        label: \"Customer Name\"\n      }, {\n        label: \"Project Name\"\n      }, {\n        label: \"Total Amount\"\n      }, {\n        label: \"Status\"\n      }],\n      quotationList: [],\n      pageMeta: {// chunk: 10,\n        // page: 1,\n        // total: 10,\n        // totalPages: 2,\n        // chunk: 2,\n        // page: 1,\n        // total: 8,\n        // totalPages: 4,\n      },\n      formField: {\n        fromDate: new Date(),\n        toDate: new Date(),\n        custName: \"\",\n        quoNumber: \"\",\n        projectName: \"\",\n        status: \"\"\n      },\n      active: false,\n      currentIndex: -1,\n      page: 1,\n      // limit: 10,\n      limit: 5,\n      isLoading: true,\n      isOpenvoidCheckout: false,\n      // is_loading: false,\n      isMounted: true // salesCollectionHeader: [\n      //   { label: \"Sales Collection\" },\n      //   { label: \"Before Tax\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Qty\" },\n      // ],\n      // nonSalesCollectionHeader: [\n      //   { label: \"Non Sales Collection\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Qty\" },\n      // ],\n      // deptSalesHeader: [{ label: \"Dept Sales\" }, { label: \"Amount\" }],\n      // salesTransactionHeader: [\n      //   { label: \"Sales Transaction\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Paid\" },\n      //   { label: \"Outstanding\" },\n      // ],\n      // ARTransactionHeader: [{ label: \"AR Transaction\" }, { label: \"Amount\" }],\n      // TreatmentDoneHeader: [\n      //   { label: \"Customer\" },\n      //   { label: \"Customer Reference\" },\n      //   { label: \"Treatment Done\" },\n      //   { label: \"Description\" },\n      //   { label: \"Staff\" },\n      //   { label: \"Amount\" },\n      // DayDate: new Date(),\n      // runDayEnd: false,\n      // reportDate: \"\",\n      // sales_collec: null,\n      // sales_trasac: null,\n      // ar_trasac: null,\n      // treatment_done: null,\n      // dept_sales: null,\n\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.getQuotations = () => {\n      this.updateState({\n        isLoading: true\n      });\n      let {\n        quotationList,\n        pageMeta,\n        formField,\n        page,\n        limit\n      } = this.state;\n      let {\n        fromDate,\n        toDate,\n        custName,\n        quoNumber,\n        projectName,\n        status\n      } = formField;\n      let From = new Date();\n\n      if (fromDate && fromDate !== \"\") {\n        From = fromDate;\n      } else {\n        this.setState({\n          fromDate: From\n        });\n      }\n\n      let To = new Date();\n\n      if (toDate && toDate !== \"\") {\n        To = toDate;\n      } else {\n        this.setState({\n          toDate: To\n        });\n      }\n\n      this.props.getCommonApi(`quotationlist/?searchfrom=${dateFormat(From, \"yyyy-mm-dd\")}&searchto=${dateFormat(To, \"yyyy-mm-dd\")}&searchtitle=${projectName}&searchstatus=${status}&searchname=${custName}&searchnumber=${quoNumber}&page=${page}&limit=${limit}`).then(async res => {\n        console.log(res, \"dsfdfaafg\");\n        await this.setState({\n          quotationList: []\n        });\n        quotationList = res.data.dataList; // pageMeta = res.data.meta.pagination;\n\n        pageMeta = res.data.pagination; // pageMeta = {per_page:5, current_page:1, total:2, total_pages:4}\n\n        this.setState({\n          quotationList,\n          pageMeta\n        });\n        this.updateState({\n          isLoading: false\n        }); // this.setState({ quotationList });\n\n        console.log(\"res.data\", res.data);\n        console.log(\"quotationList\", quotationList);\n        console.log(\"pageMeta\", pageMeta);\n      });\n    };\n\n    this.handlePagination = async pageNo => {\n      let {\n        page\n      } = this.state;\n      page = pageNo.page;\n      await this.setState({\n        page\n      });\n      this.getQuotations();\n    };\n\n    this.handleClick = key => {\n      if (!this.state.active) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      this.setState(prevState => ({\n        active: !prevState.active,\n        currentIndex: key\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleClick();\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formField\n      } = this.state;\n      formField[name] = value;\n      await this.setState({\n        formField\n      });\n    };\n\n    this.handleDatePick = async (name, value) => {\n      let {\n        formField\n      } = this.state;\n      formField[name] = value;\n      await this.setState({\n        formField\n      });\n    };\n\n    this.handleSearch = () => {\n      this.getQuotations();\n    };\n  }\n\n  componentDidMount() {\n    let From = new Date();\n    let {\n      formField\n    } = this.state;\n    let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\n    formField[\"fromDate\"] = firstdayMonth;\n    this.setState({\n      formField\n    });\n    this.getQuotations(); // this.queryHandler({});\n  }\n\n  // seach change with api call\n  // handlesearch = event => {\n  //   event.persist();\n  //   if (!this.debouncedFn) {\n  //     this.debouncedFn = _.debounce(() => {\n  //       let searchString = event.target.value;\n  //       let data = { search: searchString };\n  //       this.queryHandler(data);\n  //     }, 500);\n  //   }\n  //   this.debouncedFn();\n  // };\n  // getProject = async data => {\n  //   this.updateState({ isLoading: true });\n  //   let { search } = this.state;\n  //   let { page = 1, limit = 10 } = data;\n  //   await this.props\n  //     .getProject(`?page=${page}&limit=${limit}&search=${search}`)\n  //     .then(res => {\n  //       let { data } = res;\n  //       console.log(data);\n  //       //  let { customerDetails } = this.props;\n  //       this.updateState({\n  //         customerList: data.dataList,\n  //         meta: data.meta?.pagination,\n  //         isLoading: false,\n  //       });\n  //     });\n  // };\n  // api call for staff\n  // queryHandler = async data => {\n  //   this.updateState({ is_loading: true });\n  //   let { page = 1, limit = 10 } = data;\n  //   await this.props.getProject(\n  //     `?page=${page}&limit=${limit}`\n  //   );\n  //   let { projectDetails } = this.props;\n  //   let { quotationList, pageMeta } = this.state;\n  //   quotationList = projectDetails.data;\n  //   pageMeta = projectDetails.meta?.pagination;\n  //   this.updateState({\n  //     quotationList,\n  //     pageMeta,\n  //     is_loading: false,\n  //   });\n  // };\n  // // delete api call for staff\n  // handleDeleteProject = id => {\n  //   this.props.deleteProject(`${id}/`).then(res => this.queryHandler({}));\n  // };\n  render() {\n    let {\n      headerDetails,\n      pageMeta,\n      quotationList,\n      formField,\n      isLoading\n    } = this.state; // quotationList = [{\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"}]\n    // console.log(quotationList)\n\n    let {\n      fromDate,\n      toDate,\n      custName,\n      quoNumber,\n      projectName,\n      status\n    } = formField;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-section col-md-12 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label-head mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }\n    }, t(\"Quotation Listing\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row m-0 filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }, t(\"From Date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      inputcol: \"p-0 inTime\",\n      value: fromDate ? new Date(fromDate) : new Date(),\n      name: \"fromDate\" //className=\"dob-pick\"\n      ,\n      showYearDropdown: true,\n      dateFormat: \"dd/MM/yyyy\",\n      maxDate: new Date(toDate),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }, t(\"Customer Name\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: custName,\n      name: \"custName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, t(\"Quotation Number\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: quoNumber,\n      name: \"quoNumber\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 15\n      }\n    }, t(\"To Date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      inputcol: \"p-0 inTime\",\n      value: toDate ? new Date(toDate) : new Date(),\n      name: \"toDate\" // className=\"dob-pick\"\n      ,\n      showYearDropdown: true,\n      dateFormat: \"dd/MM/yyyy\",\n      minDate: new Date(fromDate),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 15\n      }\n    }, t(\"Project Name\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: projectName,\n      name: \"projectName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 15\n      }\n    }, t(\"Status\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: status,\n      name: \"status\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"py-3\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Search\",\n      outline: false,\n      onClick: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"pb-3\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Add Quotation\",\n      outline: false,\n      onClick: () => history.push(\"quantum/quotation/add\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 15\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 27\n      }\n    }, t(\"Loading...\")))))) : quotationList ? quotationList.map((item, index) => {\n      let {\n        id,\n        status,\n        title,\n        quotation_number,\n        created_at,\n        in_charge,\n        total_amount\n      } = item;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 27\n        }\n      }, created_at)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `quantum/quotation/${id}/edit`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 29\n        }\n      }, quotation_number))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 27\n        }\n      }, in_charge)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 27\n        }\n      }, title)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 27\n        }\n      }, total_amount)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 27\n        }\n      }, status)));\n    }) : null)))));\n  }\n\n} // const mapStateToProps = state => ({\n//   projectDetail: state.project.projectDetail,\n// });\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi // deleteProject,\n    // getProject\n\n  }, dispatch);\n};\n\nexport const ListQuotation = withTranslation()(connect(null, mapDispatchToProps)(ListQuotationClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Quantum/Quotation/ListQuotation/index.js"],"names":["React","Toast","connect","bindActionCreators","getCommonApi","NormalButton","NormalDate","TableWrapper","NormalMultiSelect","dateFormat","withTranslation","NormalInput","NormalDateTime","Link","updateBtn","deleteBtn","getProject","deleteProject","history","ListQuotationClass","Component","state","headerDetails","label","quotationList","pageMeta","formField","fromDate","Date","toDate","custName","quoNumber","projectName","status","active","currentIndex","page","limit","isLoading","isOpenvoidCheckout","isMounted","updateState","data","setState","getQuotations","From","To","props","then","res","console","log","dataList","pagination","handlePagination","pageNo","handleClick","key","document","addEventListener","handleOutsideClick","removeEventListener","prevState","e","node","contains","target","handleChange","value","name","handleDatePick","handleSearch","componentDidMount","firstdayMonth","getFullYear","getMonth","render","t","push","map","item","index","id","title","quotation_number","created_at","in_charge","total_amount","mapDispatchToProps","dispatch","ListQuotation"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Toast } from \"service/toast\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi } from \"redux/actions/common\";\r\nimport {\r\n  NormalButton,\r\n  NormalDate,\r\n  TableWrapper,\r\n  NormalMultiSelect,\r\n} from \"component/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { NormalInput, NormalDateTime } from \"component/common\";\r\nimport { Link } from \"react-router-dom\";\r\nimport updateBtn from \"assets/images/edit1.png\";\r\nimport deleteBtn from \"assets/images/delete1.png\";\r\nimport { getProject, deleteProject } from \"redux/actions/project\";\r\nimport { history } from \"helpers\";\r\n\r\nexport class ListQuotationClass extends React.Component {\r\n  state = {\r\n    headerDetails: [\r\n      { label: \"Date\" },\r\n      { label: \"Quotation Number\" },\r\n      { label: \"Customer Name\" },\r\n      { label: \"Project Name\" },\r\n      { label: \"Total Amount\" },\r\n      { label: \"Status\" },\r\n    ],\r\n\r\n    quotationList: [],\r\n    pageMeta: {\r\n      // chunk: 10,\r\n      // page: 1,\r\n      // total: 10,\r\n      // totalPages: 2,\r\n      // chunk: 2,\r\n      // page: 1,\r\n      // total: 8,\r\n      // totalPages: 4,\r\n    },\r\n\r\n    formField: {\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      custName: \"\",\r\n      quoNumber: \"\",\r\n      projectName: \"\",\r\n      status: \"\",\r\n    },\r\n\r\n    active: false,\r\n    currentIndex: -1,\r\n    page: 1,\r\n    // limit: 10,\r\n    limit: 5,\r\n    isLoading: true,\r\n    isOpenvoidCheckout: false,\r\n    // is_loading: false,\r\n    isMounted: true,\r\n\r\n    // salesCollectionHeader: [\r\n    //   { label: \"Sales Collection\" },\r\n    //   { label: \"Before Tax\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Qty\" },\r\n    // ],\r\n    // nonSalesCollectionHeader: [\r\n    //   { label: \"Non Sales Collection\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Qty\" },\r\n    // ],\r\n    // deptSalesHeader: [{ label: \"Dept Sales\" }, { label: \"Amount\" }],\r\n    // salesTransactionHeader: [\r\n    //   { label: \"Sales Transaction\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Paid\" },\r\n    //   { label: \"Outstanding\" },\r\n    // ],\r\n    // ARTransactionHeader: [{ label: \"AR Transaction\" }, { label: \"Amount\" }],\r\n    // TreatmentDoneHeader: [\r\n    //   { label: \"Customer\" },\r\n    //   { label: \"Customer Reference\" },\r\n    //   { label: \"Treatment Done\" },\r\n    //   { label: \"Description\" },\r\n    //   { label: \"Staff\" },\r\n    //   { label: \"Amount\" },\r\n    // DayDate: new Date(),\r\n    // runDayEnd: false,\r\n    // reportDate: \"\",\r\n    // sales_collec: null,\r\n    // sales_trasac: null,\r\n    // ar_trasac: null,\r\n    // treatment_done: null,\r\n    // dept_sales: null,\r\n  };\r\n\r\n  // componentWillUnmount() {\r\n  //   this.state.isMounted = false;\r\n  // }\r\n\r\n  updateState = data => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let From = new Date();\r\n    let { formField } = this.state;\r\n    let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\r\n    formField[\"fromDate\"] = firstdayMonth;\r\n    this.setState({\r\n      formField,\r\n    });\r\n\r\n    this.getQuotations();\r\n    // this.queryHandler({});\r\n  }\r\n\r\n  getQuotations = () => {\r\n    this.updateState({ isLoading: true });\r\n    let { quotationList, pageMeta, formField, page, limit } = this.state;\r\n    let { fromDate, toDate, custName, quoNumber, projectName, status } =\r\n      formField;\r\n\r\n    let From = new Date();\r\n    if (fromDate && fromDate !== \"\") {\r\n      From = fromDate;\r\n    } else {\r\n      this.setState({ fromDate: From });\r\n    }\r\n    let To = new Date();\r\n    if (toDate && toDate !== \"\") {\r\n      To = toDate;\r\n    } else {\r\n      this.setState({ toDate: To });\r\n    }\r\n    this.props\r\n      .getCommonApi(\r\n        `quotationlist/?searchfrom=${dateFormat(\r\n          From,\r\n          \"yyyy-mm-dd\"\r\n        )}&searchto=${dateFormat(\r\n          To,\r\n          \"yyyy-mm-dd\"\r\n        )}&searchtitle=${projectName}&searchstatus=${status}&searchname=${custName}&searchnumber=${quoNumber}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(async res => {\r\n        console.log(res, \"dsfdfaafg\");\r\n        await this.setState({ quotationList: [] });\r\n        quotationList = res.data.dataList;\r\n        // pageMeta = res.data.meta.pagination;\r\n        pageMeta = res.data.pagination;\r\n        // pageMeta = {per_page:5, current_page:1, total:2, total_pages:4}\r\n        this.setState({ quotationList, pageMeta });\r\n        this.updateState({\r\n          isLoading: false,\r\n        });\r\n        // this.setState({ quotationList });\r\n        console.log(\"res.data\", res.data);\r\n        console.log(\"quotationList\", quotationList);\r\n        console.log(\"pageMeta\", pageMeta);\r\n      });\r\n  };\r\n\r\n  handlePagination = async pageNo => {\r\n    let { page } = this.state;\r\n    page = pageNo.page;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    this.getQuotations();\r\n  };\r\n  // pagination\r\n  // handlePagination = page => {\r\n  //   this.queryHandler(page);\r\n  // };\r\n\r\n  handleClick = key => {\r\n    if (!this.state.active) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      active: !prevState.active,\r\n      currentIndex: key,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleClick();\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formField } = this.state;\r\n    formField[name] = value;\r\n    await this.setState({\r\n      formField,\r\n    });\r\n  };\r\n\r\n  handleDatePick = async (name, value) => {\r\n    let { formField } = this.state;\r\n    formField[name] = value;\r\n    await this.setState({\r\n      formField,\r\n    });\r\n  };\r\n\r\n  handleSearch = () => {\r\n    this.getQuotations();\r\n  };\r\n\r\n  // seach change with api call\r\n  // handlesearch = event => {\r\n  //   event.persist();\r\n\r\n  //   if (!this.debouncedFn) {\r\n  //     this.debouncedFn = _.debounce(() => {\r\n  //       let searchString = event.target.value;\r\n  //       let data = { search: searchString };\r\n  //       this.queryHandler(data);\r\n  //     }, 500);\r\n  //   }\r\n  //   this.debouncedFn();\r\n  // };\r\n\r\n  // getProject = async data => {\r\n  //   this.updateState({ isLoading: true });\r\n  //   let { search } = this.state;\r\n  //   let { page = 1, limit = 10 } = data;\r\n  //   await this.props\r\n  //     .getProject(`?page=${page}&limit=${limit}&search=${search}`)\r\n  //     .then(res => {\r\n  //       let { data } = res;\r\n  //       console.log(data);\r\n  //       //  let { customerDetails } = this.props;\r\n  //       this.updateState({\r\n  //         customerList: data.dataList,\r\n  //         meta: data.meta?.pagination,\r\n  //         isLoading: false,\r\n  //       });\r\n  //     });\r\n  // };\r\n\r\n  // api call for staff\r\n  // queryHandler = async data => {\r\n  //   this.updateState({ is_loading: true });\r\n  //   let { page = 1, limit = 10 } = data;\r\n  //   await this.props.getProject(\r\n  //     `?page=${page}&limit=${limit}`\r\n  //   );\r\n  //   let { projectDetails } = this.props;\r\n  //   let { quotationList, pageMeta } = this.state;\r\n  //   quotationList = projectDetails.data;\r\n  //   pageMeta = projectDetails.meta?.pagination;\r\n  //   this.updateState({\r\n  //     quotationList,\r\n  //     pageMeta,\r\n  //     is_loading: false,\r\n  //   });\r\n  // };\r\n\r\n  // // delete api call for staff\r\n  // handleDeleteProject = id => {\r\n  //   this.props.deleteProject(`${id}/`).then(res => this.queryHandler({}));\r\n  // };\r\n\r\n  render() {\r\n    let { headerDetails, pageMeta, quotationList, formField, isLoading } =\r\n      this.state;\r\n\r\n    // quotationList = [{\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"}]\r\n    // console.log(quotationList)\r\n\r\n    let { fromDate, toDate, custName, quoNumber, projectName, status } =\r\n      formField;\r\n\r\n    let { t } = this.props;\r\n\r\n    return (\r\n      <div className=\"project-section col-md-12 align-items-center\">\r\n        <div className=\"col-md-12 d-flex\">\r\n          <p className=\"label-head mb-4\">{t(\"Quotation Listing\")}</p>\r\n        </div>\r\n\r\n        <div className=\"row m-0 filter\">\r\n          <div className=\"col-md-5 col-12\">\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                {t(\"From Date\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalDateTime\r\n                  onChange={this.handleDatePick}\r\n                  inputcol=\"p-0 inTime\"\r\n                  value={fromDate ? new Date(fromDate) : new Date()}\r\n                  name=\"fromDate\"\r\n                  //className=\"dob-pick\"\r\n                  showYearDropdown={true}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  maxDate={new Date(toDate)}\r\n                  showDisabledMonthNavigation\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                {t(\"Customer Name\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalInput\r\n                  value={custName}\r\n                  name=\"custName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                {t(\"Quotation Number\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalInput\r\n                  value={quoNumber}\r\n                  name=\"quoNumber\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-5 col-12\">\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                {t(\"To Date\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalDateTime\r\n                  onChange={this.handleDatePick}\r\n                  inputcol=\"p-0 inTime\"\r\n                  value={toDate ? new Date(toDate) : new Date()}\r\n                  name=\"toDate\"\r\n                  // className=\"dob-pick\"\r\n                  showYearDropdown={true}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  minDate={new Date(fromDate)}\r\n                  showDisabledMonthNavigation\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                {t(\"Project Name\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalInput\r\n                  value={projectName}\r\n                  name=\"projectName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                {t(\"Status\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalInput\r\n                  value={status}\r\n                  name=\"status\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-2 col-12\">\r\n            <NormalButton\r\n              buttonClass={\"py-3\"}\r\n              mainbg={true}\r\n              className=\"confirm\"\r\n              label=\"Search\"\r\n              outline={false}\r\n              onClick={this.handleSearch}\r\n            />\r\n\r\n            <NormalButton\r\n              buttonClass={\"pb-3\"}\r\n              mainbg={true}\r\n              className=\"confirm\"\r\n              label=\"Add Quotation\"\r\n              outline={false}\r\n              onClick={() => history.push(\"quantum/quotation/add\")}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"project-table\">\r\n          <div className=\"py-4\">\r\n            <div className=\"table-container\">\r\n              <TableWrapper\r\n                headerDetails={headerDetails}\r\n                queryHandler={this.handlePagination}\r\n                pageMeta={pageMeta}\r\n              >\r\n                {isLoading ? (\r\n                  <tr>\r\n                    <td colSpan=\"7\">\r\n                      <div class=\"d-flex mt-5 align-items-center justify-content-center\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                          <span class=\"sr-only\">{t(\"Loading...\")}</span>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : quotationList ? (\r\n                  quotationList.map((item, index) => {\r\n                    let {\r\n                      id,\r\n                      status,\r\n                      title,\r\n                      quotation_number,\r\n                      created_at,\r\n                      in_charge,\r\n                      total_amount,\r\n                    } = item;\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {created_at}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            <Link to={`quantum/quotation/${id}/edit`}>\r\n                              {quotation_number}\r\n                            </Link>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {in_charge}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {title}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {total_amount}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {status}\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                ) : null}\r\n              </TableWrapper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   projectDetail: state.project.projectDetail,\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      // deleteProject,\r\n      // getProject\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const ListQuotation = withTranslation()(\r\n  connect(null, mapDispatchToProps)(ListQuotationClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}