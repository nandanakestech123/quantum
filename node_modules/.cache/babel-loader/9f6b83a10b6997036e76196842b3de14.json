{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.export.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.DataProvider = exports.ExportMixin = void 0;\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\n\nvar _number = _interopRequireDefault(require(\"../../localization/number\"));\n\nvar _exporter = require(\"../../exporter\");\n\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.export_mixin\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DEFAULT_DATA_TYPE = \"string\";\nvar COLUMN_HEADER_STYLE_ID = 0;\nvar ROW_HEADER_STYLE_ID = 1;\nvar DATA_STYLE_OFFSET = 2;\nvar DEFAUL_COLUMN_WIDTH = 100;\nvar ExportMixin = (0, _extend.extend)({}, _uiGrid_core.default, {\n  exportToExcel: function () {\n    var that = this;\n    (0, _exporter.export)(that.getDataProvider(), {\n      fileName: that.option(\"export.fileName\"),\n      proxyUrl: that.option(\"export.proxyUrl\"),\n      format: \"EXCEL\",\n      rtlEnabled: that.option(\"rtlEnabled\"),\n      ignoreErrors: that.option(\"export.ignoreExcelErrors\"),\n      exportingAction: that._actions.onExporting,\n      exportedAction: that._actions.onExported,\n      fileSavingAction: that._actions.onFileSaving\n    }, _exporter.excel.getData);\n  },\n  _getLength: function (items) {\n    var i;\n    var itemCount = items[0].length;\n    var cellCount = 0;\n\n    for (i = 0; i < itemCount; i++) {\n      cellCount += items[0][i].colspan || 1;\n    }\n\n    return cellCount;\n  },\n  _correctCellsInfoItemLengths: function (cellsInfo, expectedLength) {\n    for (var i = 0; i < cellsInfo.length; i++) {\n      while (cellsInfo[i].length < expectedLength) {\n        cellsInfo[i].push({});\n      }\n    }\n\n    return cellsInfo;\n  },\n  _calculateCellInfoItemLength: function (columnsRow) {\n    var result = 0;\n\n    for (var columnIndex = 0; columnIndex < columnsRow.length; columnIndex++) {\n      result += (0, _type.isDefined)(columnsRow[columnIndex].colspan) ? columnsRow[columnIndex].colspan : 1;\n    }\n\n    return result;\n  },\n  _getAllItems: function (columnsInfo, rowsInfoItems, cellsInfo) {\n    var cellIndex;\n    var rowIndex;\n    var correctedCellsInfo = cellsInfo;\n\n    var rowsLength = this._getLength(rowsInfoItems);\n\n    var headerRowsCount = columnsInfo.length;\n\n    if (columnsInfo.length > 0 && columnsInfo[0].length > 0 && cellsInfo.length > 0 && 0 === cellsInfo[0].length) {\n      var cellInfoItemLength = this._calculateCellInfoItemLength(columnsInfo[0]);\n\n      if (cellInfoItemLength > 0) {\n        correctedCellsInfo = this._correctCellsInfoItemLengths(cellsInfo, cellInfoItemLength);\n      }\n    }\n\n    var sourceItems = columnsInfo.concat(correctedCellsInfo);\n\n    for (rowIndex = 0; rowIndex < rowsInfoItems.length; rowIndex++) {\n      for (cellIndex = rowsInfoItems[rowIndex].length - 1; cellIndex >= 0; cellIndex--) {\n        if (!(0, _type.isDefined)(sourceItems[rowIndex + headerRowsCount])) {\n          sourceItems[rowIndex + headerRowsCount] = [];\n        }\n\n        sourceItems[rowIndex + headerRowsCount].splice(0, 0, (0, _extend.extend)({}, rowsInfoItems[rowIndex][cellIndex]));\n      }\n    }\n\n    sourceItems[0].splice(0, 0, (0, _extend.extend)({}, this._getEmptyCell(), {\n      alignment: this._options.rtlEnabled ? \"right\" : \"left\",\n      colspan: rowsLength,\n      rowspan: headerRowsCount\n    }));\n    return this._prepareItems(sourceItems);\n  },\n  getDataProvider: function () {\n    var that = this;\n    var dataController = this._dataController;\n    var items = new _deferred.Deferred();\n    dataController.beginLoading();\n    setTimeout(function () {\n      var columnsInfo = (0, _extend.extend)(true, [], dataController.getColumnsInfo(true));\n      var rowsInfoItems = (0, _extend.extend)(true, [], dataController.getRowsInfo(true));\n      var cellsInfo = dataController.getCellsInfo(true);\n      items.resolve(that._getAllItems(columnsInfo, rowsInfoItems, cellsInfo));\n      dataController.endLoading();\n    });\n    return new DataProvider({\n      items: items,\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      dataFields: this.getDataSource().getAreaFields(\"data\"),\n      customizeExcelCell: this.option(\"export.customizeExcelCell\"),\n      rowsArea: this._rowsArea,\n      columnsArea: this._columnsArea\n    });\n  }\n});\nexports.ExportMixin = ExportMixin;\n\nfunction getCellDataType(field) {\n  if (field && field.customizeText) {\n    return \"string\";\n  }\n\n  if (field.dataType) {\n    return field.dataType;\n  }\n\n  if (field.format) {\n    if (1 === _number.default.parse(_format_helper.default.format(1, field.format))) {\n      return \"number\";\n    }\n\n    if (_format_helper.default.format(new Date(), field.format)) {\n      return \"date\";\n    }\n  }\n\n  return DEFAULT_DATA_TYPE;\n}\n\nvar DataProvider = _class.default.inherit({\n  ctor: function (options) {\n    this._options = options;\n    this._styles = [];\n  },\n  ready: function () {\n    var that = this;\n    var options = that._options;\n    var dataFields = options.dataFields;\n    return (0, _deferred.when)(options.items).done(function (items) {\n      var headerSize = items[0][0].rowspan;\n      var columns = items[headerSize - 1];\n      var dataItemStyle = {\n        alignment: options.rtlEnabled ? \"left\" : \"right\"\n      };\n      that._styles = [{\n        alignment: \"center\",\n        dataType: \"string\"\n      }, {\n        alignment: options.rtlEnabled ? \"right\" : \"left\",\n        dataType: \"string\"\n      }];\n\n      if (dataFields.length) {\n        dataFields.forEach(function (dataField) {\n          that._styles.push((0, _extend.extend)({}, dataItemStyle, {\n            format: dataField.format,\n            dataType: getCellDataType(dataField)\n          }));\n        });\n      } else {\n        that._styles.push(dataItemStyle);\n      }\n\n      (0, _iterator.each)(columns, function (columnIndex, column) {\n        column.width = DEFAUL_COLUMN_WIDTH;\n      });\n      options.columns = columns;\n      options.items = items;\n    });\n  },\n  getColumns: function () {\n    return this._options.columns;\n  },\n  getColumnsWidths: function () {\n    var colsArea = this._options.columnsArea;\n    var rowsArea = this._options.rowsArea;\n    var columns = this._options.columns;\n    var useDefaultWidth = !(0, _window.hasWindow)() || \"virtual\" === colsArea.option(\"scrolling.mode\") || colsArea.element().is(\":hidden\");\n    return useDefaultWidth ? columns.map(function (_) {\n      return DEFAUL_COLUMN_WIDTH;\n    }) : rowsArea.getColumnsWidth().concat(colsArea.getColumnsWidth());\n  },\n  getRowsCount: function () {\n    return this._options.items.length;\n  },\n  getGroupLevel: function () {\n    return 0;\n  },\n  getCellMerging: function (rowIndex, cellIndex) {\n    var items = this._options.items;\n    var item = items[rowIndex] && items[rowIndex][cellIndex];\n    return item ? {\n      colspan: item.colspan - 1,\n      rowspan: item.rowspan - 1\n    } : {\n      colspan: 0,\n      rowspan: 0\n    };\n  },\n  getFrozenArea: function () {\n    var items = this._options.items;\n    return {\n      x: items[0][0].colspan,\n      y: items[0][0].rowspan\n    };\n  },\n  getCellType: function (rowIndex, cellIndex) {\n    var style = this._styles[this.getStyleId(rowIndex, cellIndex)];\n\n    return style && style.dataType || \"string\";\n  },\n  getCellData: function (rowIndex, cellIndex, isExcelJS) {\n    var result = {};\n    var items = this._options.items;\n    var item = items[rowIndex] && items[rowIndex][cellIndex] || {};\n\n    if (isExcelJS) {\n      result.cellSourceData = item;\n\n      var areaName = this._tryGetAreaName(items, item, rowIndex, cellIndex);\n\n      if (areaName) {\n        result.cellSourceData.area = areaName;\n      }\n\n      result.cellSourceData.rowIndex = rowIndex;\n      result.cellSourceData.columnIndex = cellIndex;\n    }\n\n    if (\"string\" === this.getCellType(rowIndex, cellIndex)) {\n      result.value = item.text;\n    } else {\n      result.value = item.value;\n    }\n\n    if (result.cellSourceData && result.cellSourceData.isWhiteSpace) {\n      result.value = \"\";\n    }\n\n    return result;\n  },\n  _tryGetAreaName: function (items, item, rowIndex, cellIndex) {\n    var columnHeaderSize = items[0][0].rowspan;\n    var rowHeaderSize = items[0][0].colspan;\n\n    if (cellIndex >= rowHeaderSize && rowIndex < columnHeaderSize) {\n      return \"column\";\n    } else {\n      if (rowIndex >= columnHeaderSize && cellIndex < rowHeaderSize) {\n        return \"row\";\n      } else {\n        if ((0, _type.isDefined)(item.dataIndex)) {\n          return \"data\";\n        }\n      }\n    }\n  },\n  getStyles: function () {\n    return this._styles;\n  },\n  getStyleId: function (rowIndex, cellIndex) {\n    var items = this._options.items;\n    var columnHeaderSize = items[0][0].rowspan;\n    var rowHeaderSize = items[0][0].colspan;\n    var item = items[rowIndex] && items[rowIndex][cellIndex] || {};\n\n    if (0 === cellIndex && 0 === rowIndex) {\n      return COLUMN_HEADER_STYLE_ID;\n    } else {\n      if (cellIndex >= rowHeaderSize && rowIndex < columnHeaderSize) {\n        return COLUMN_HEADER_STYLE_ID;\n      } else {\n        if (rowIndex >= columnHeaderSize && cellIndex < rowHeaderSize) {\n          return ROW_HEADER_STYLE_ID;\n        }\n      }\n    }\n\n    return DATA_STYLE_OFFSET + (item.dataIndex || 0);\n  },\n  hasCustomizeExcelCell: function () {\n    return (0, _type.isDefined)(this._options.customizeExcelCell);\n  },\n  customizeExcelCell: function (e) {\n    if (this._options.customizeExcelCell) {\n      this._options.customizeExcelCell(e);\n    }\n  }\n});\n\nexports.DataProvider = DataProvider;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/ui.pivot_grid.export.js"],"names":["exports","DataProvider","ExportMixin","_class","_interopRequireDefault","require","_type","_extend","_iterator","_window","_format_helper","_number","_exporter","_uiGrid_core","_deferred","obj","__esModule","DEFAULT_DATA_TYPE","COLUMN_HEADER_STYLE_ID","ROW_HEADER_STYLE_ID","DATA_STYLE_OFFSET","DEFAUL_COLUMN_WIDTH","extend","default","exportToExcel","that","export","getDataProvider","fileName","option","proxyUrl","format","rtlEnabled","ignoreErrors","exportingAction","_actions","onExporting","exportedAction","onExported","fileSavingAction","onFileSaving","excel","getData","_getLength","items","i","itemCount","length","cellCount","colspan","_correctCellsInfoItemLengths","cellsInfo","expectedLength","push","_calculateCellInfoItemLength","columnsRow","result","columnIndex","isDefined","_getAllItems","columnsInfo","rowsInfoItems","cellIndex","rowIndex","correctedCellsInfo","rowsLength","headerRowsCount","cellInfoItemLength","sourceItems","concat","splice","_getEmptyCell","alignment","_options","rowspan","_prepareItems","dataController","_dataController","Deferred","beginLoading","setTimeout","getColumnsInfo","getRowsInfo","getCellsInfo","resolve","endLoading","dataFields","getDataSource","getAreaFields","customizeExcelCell","rowsArea","_rowsArea","columnsArea","_columnsArea","getCellDataType","field","customizeText","dataType","parse","Date","inherit","ctor","options","_styles","ready","when","done","headerSize","columns","dataItemStyle","forEach","dataField","each","column","width","getColumns","getColumnsWidths","colsArea","useDefaultWidth","hasWindow","element","is","map","_","getColumnsWidth","getRowsCount","getGroupLevel","getCellMerging","item","getFrozenArea","x","y","getCellType","style","getStyleId","getCellData","isExcelJS","cellSourceData","areaName","_tryGetAreaName","area","value","text","isWhiteSpace","columnHeaderSize","rowHeaderSize","dataIndex","getStyles","hasCustomizeExcelCell","e"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAAlD;;AACA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAnC;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,2BAAD,CAAvB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIK,cAAc,GAAGN,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA3C;;AACA,IAAIM,OAAO,GAAGP,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAApC;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAIQ,YAAY,GAAGT,sBAAsB,CAACC,OAAO,CAAC,wCAAD,CAAR,CAAzC;;AACA,IAAIS,SAAS,GAAGT,OAAO,CAAC,2BAAD,CAAvB;;AAEA,SAASD,sBAAT,CAAgCW,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AACD,IAAIE,iBAAiB,GAAG,QAAxB;AACA,IAAIC,sBAAsB,GAAG,CAA7B;AACA,IAAIC,mBAAmB,GAAG,CAA1B;AACA,IAAIC,iBAAiB,GAAG,CAAxB;AACA,IAAIC,mBAAmB,GAAG,GAA1B;AACA,IAAInB,WAAW,GAAG,CAAC,GAAGK,OAAO,CAACe,MAAZ,EAAoB,EAApB,EAAwBT,YAAY,CAACU,OAArC,EAA8C;AAC5DC,EAAAA,aAAa,EAAE,YAAW;AACtB,QAAIC,IAAI,GAAG,IAAX;AACA,KAAC,GAAGb,SAAS,CAACc,MAAd,EAAsBD,IAAI,CAACE,eAAL,EAAtB,EAA8C;AAC1CC,MAAAA,QAAQ,EAAEH,IAAI,CAACI,MAAL,CAAY,iBAAZ,CADgC;AAE1CC,MAAAA,QAAQ,EAAEL,IAAI,CAACI,MAAL,CAAY,iBAAZ,CAFgC;AAG1CE,MAAAA,MAAM,EAAE,OAHkC;AAI1CC,MAAAA,UAAU,EAAEP,IAAI,CAACI,MAAL,CAAY,YAAZ,CAJ8B;AAK1CI,MAAAA,YAAY,EAAER,IAAI,CAACI,MAAL,CAAY,0BAAZ,CAL4B;AAM1CK,MAAAA,eAAe,EAAET,IAAI,CAACU,QAAL,CAAcC,WANW;AAO1CC,MAAAA,cAAc,EAAEZ,IAAI,CAACU,QAAL,CAAcG,UAPY;AAQ1CC,MAAAA,gBAAgB,EAAEd,IAAI,CAACU,QAAL,CAAcK;AARU,KAA9C,EASG5B,SAAS,CAAC6B,KAAV,CAAgBC,OATnB;AAUH,GAb2D;AAc5DC,EAAAA,UAAU,EAAE,UAASC,KAAT,EAAgB;AACxB,QAAIC,CAAJ;AACA,QAAIC,SAAS,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,MAAzB;AACA,QAAIC,SAAS,GAAG,CAAhB;;AACA,SAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,SAAhB,EAA2BD,CAAC,EAA5B,EAAgC;AAC5BG,MAAAA,SAAS,IAAIJ,KAAK,CAAC,CAAD,CAAL,CAASC,CAAT,EAAYI,OAAZ,IAAuB,CAApC;AACH;;AACD,WAAOD,SAAP;AACH,GAtB2D;AAuB5DE,EAAAA,4BAA4B,EAAE,UAASC,SAAT,EAAoBC,cAApB,EAAoC;AAC9D,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,SAAS,CAACJ,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvC,aAAOM,SAAS,CAACN,CAAD,CAAT,CAAaE,MAAb,GAAsBK,cAA7B,EAA6C;AACzCD,QAAAA,SAAS,CAACN,CAAD,CAAT,CAAaQ,IAAb,CAAkB,EAAlB;AACH;AACJ;;AACD,WAAOF,SAAP;AACH,GA9B2D;AA+B5DG,EAAAA,4BAA4B,EAAE,UAASC,UAAT,EAAqB;AAC/C,QAAIC,MAAM,GAAG,CAAb;;AACA,SAAK,IAAIC,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGF,UAAU,CAACR,MAAnD,EAA2DU,WAAW,EAAtE,EAA0E;AACtED,MAAAA,MAAM,IAAI,CAAC,GAAGlD,KAAK,CAACoD,SAAV,EAAqBH,UAAU,CAACE,WAAD,CAAV,CAAwBR,OAA7C,IAAwDM,UAAU,CAACE,WAAD,CAAV,CAAwBR,OAAhF,GAA0F,CAApG;AACH;;AACD,WAAOO,MAAP;AACH,GArC2D;AAsC5DG,EAAAA,YAAY,EAAE,UAASC,WAAT,EAAsBC,aAAtB,EAAqCV,SAArC,EAAgD;AAC1D,QAAIW,SAAJ;AACA,QAAIC,QAAJ;AACA,QAAIC,kBAAkB,GAAGb,SAAzB;;AACA,QAAIc,UAAU,GAAG,KAAKtB,UAAL,CAAgBkB,aAAhB,CAAjB;;AACA,QAAIK,eAAe,GAAGN,WAAW,CAACb,MAAlC;;AACA,QAAIa,WAAW,CAACb,MAAZ,GAAqB,CAArB,IAA0Ba,WAAW,CAAC,CAAD,CAAX,CAAeb,MAAf,GAAwB,CAAlD,IAAuDI,SAAS,CAACJ,MAAV,GAAmB,CAA1E,IAA+E,MAAMI,SAAS,CAAC,CAAD,CAAT,CAAaJ,MAAtG,EAA8G;AAC1G,UAAIoB,kBAAkB,GAAG,KAAKb,4BAAL,CAAkCM,WAAW,CAAC,CAAD,CAA7C,CAAzB;;AACA,UAAIO,kBAAkB,GAAG,CAAzB,EAA4B;AACxBH,QAAAA,kBAAkB,GAAG,KAAKd,4BAAL,CAAkCC,SAAlC,EAA6CgB,kBAA7C,CAArB;AACH;AACJ;;AACD,QAAIC,WAAW,GAAGR,WAAW,CAACS,MAAZ,CAAmBL,kBAAnB,CAAlB;;AACA,SAAKD,QAAQ,GAAG,CAAhB,EAAmBA,QAAQ,GAAGF,aAAa,CAACd,MAA5C,EAAoDgB,QAAQ,EAA5D,EAAgE;AAC5D,WAAKD,SAAS,GAAGD,aAAa,CAACE,QAAD,CAAb,CAAwBhB,MAAxB,GAAiC,CAAlD,EAAqDe,SAAS,IAAI,CAAlE,EAAqEA,SAAS,EAA9E,EAAkF;AAC9E,YAAI,CAAC,CAAC,GAAGxD,KAAK,CAACoD,SAAV,EAAqBU,WAAW,CAACL,QAAQ,GAAGG,eAAZ,CAAhC,CAAL,EAAoE;AAChEE,UAAAA,WAAW,CAACL,QAAQ,GAAGG,eAAZ,CAAX,GAA0C,EAA1C;AACH;;AACDE,QAAAA,WAAW,CAACL,QAAQ,GAAGG,eAAZ,CAAX,CAAwCI,MAAxC,CAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAAC,GAAG/D,OAAO,CAACe,MAAZ,EAAoB,EAApB,EAAwBuC,aAAa,CAACE,QAAD,CAAb,CAAwBD,SAAxB,CAAxB,CAArD;AACH;AACJ;;AACDM,IAAAA,WAAW,CAAC,CAAD,CAAX,CAAeE,MAAf,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAAC,GAAG/D,OAAO,CAACe,MAAZ,EAAoB,EAApB,EAAwB,KAAKiD,aAAL,EAAxB,EAA8C;AACtEC,MAAAA,SAAS,EAAE,KAAKC,QAAL,CAAczC,UAAd,GAA2B,OAA3B,GAAqC,MADsB;AAEtEiB,MAAAA,OAAO,EAAEgB,UAF6D;AAGtES,MAAAA,OAAO,EAAER;AAH6D,KAA9C,CAA5B;AAKA,WAAO,KAAKS,aAAL,CAAmBP,WAAnB,CAAP;AACH,GAjE2D;AAkE5DzC,EAAAA,eAAe,EAAE,YAAW;AACxB,QAAIF,IAAI,GAAG,IAAX;AACA,QAAImD,cAAc,GAAG,KAAKC,eAA1B;AACA,QAAIjC,KAAK,GAAG,IAAI9B,SAAS,CAACgE,QAAd,EAAZ;AACAF,IAAAA,cAAc,CAACG,YAAf;AACAC,IAAAA,UAAU,CAAC,YAAW;AAClB,UAAIpB,WAAW,GAAG,CAAC,GAAGrD,OAAO,CAACe,MAAZ,EAAoB,IAApB,EAA0B,EAA1B,EAA8BsD,cAAc,CAACK,cAAf,CAA8B,IAA9B,CAA9B,CAAlB;AACA,UAAIpB,aAAa,GAAG,CAAC,GAAGtD,OAAO,CAACe,MAAZ,EAAoB,IAApB,EAA0B,EAA1B,EAA8BsD,cAAc,CAACM,WAAf,CAA2B,IAA3B,CAA9B,CAApB;AACA,UAAI/B,SAAS,GAAGyB,cAAc,CAACO,YAAf,CAA4B,IAA5B,CAAhB;AACAvC,MAAAA,KAAK,CAACwC,OAAN,CAAc3D,IAAI,CAACkC,YAAL,CAAkBC,WAAlB,EAA+BC,aAA/B,EAA8CV,SAA9C,CAAd;AACAyB,MAAAA,cAAc,CAACS,UAAf;AACH,KANS,CAAV;AAOA,WAAO,IAAIpF,YAAJ,CAAiB;AACpB2C,MAAAA,KAAK,EAAEA,KADa;AAEpBZ,MAAAA,UAAU,EAAE,KAAKH,MAAL,CAAY,YAAZ,CAFQ;AAGpByD,MAAAA,UAAU,EAAE,KAAKC,aAAL,GAAqBC,aAArB,CAAmC,MAAnC,CAHQ;AAIpBC,MAAAA,kBAAkB,EAAE,KAAK5D,MAAL,CAAY,2BAAZ,CAJA;AAKpB6D,MAAAA,QAAQ,EAAE,KAAKC,SALK;AAMpBC,MAAAA,WAAW,EAAE,KAAKC;AANE,KAAjB,CAAP;AAQH;AAtF2D,CAA9C,CAAlB;AAwFA7F,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AAEA,SAAS4F,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,MAAIA,KAAK,IAAIA,KAAK,CAACC,aAAnB,EAAkC;AAC9B,WAAO,QAAP;AACH;;AACD,MAAID,KAAK,CAACE,QAAV,EAAoB;AAChB,WAAOF,KAAK,CAACE,QAAb;AACH;;AACD,MAAIF,KAAK,CAAChE,MAAV,EAAkB;AACd,QAAI,MAAMpB,OAAO,CAACY,OAAR,CAAgB2E,KAAhB,CAAsBxF,cAAc,CAACa,OAAf,CAAuBQ,MAAvB,CAA8B,CAA9B,EAAiCgE,KAAK,CAAChE,MAAvC,CAAtB,CAAV,EAAiF;AAC7E,aAAO,QAAP;AACH;;AACD,QAAIrB,cAAc,CAACa,OAAf,CAAuBQ,MAAvB,CAA8B,IAAIoE,IAAJ,EAA9B,EAAwCJ,KAAK,CAAChE,MAA9C,CAAJ,EAA2D;AACvD,aAAO,MAAP;AACH;AACJ;;AACD,SAAOd,iBAAP;AACH;;AACD,IAAIhB,YAAY,GAAGE,MAAM,CAACoB,OAAP,CAAe6E,OAAf,CAAuB;AACtCC,EAAAA,IAAI,EAAE,UAASC,OAAT,EAAkB;AACpB,SAAK7B,QAAL,GAAgB6B,OAAhB;AACA,SAAKC,OAAL,GAAe,EAAf;AACH,GAJqC;AAKtCC,EAAAA,KAAK,EAAE,YAAW;AACd,QAAI/E,IAAI,GAAG,IAAX;AACA,QAAI6E,OAAO,GAAG7E,IAAI,CAACgD,QAAnB;AACA,QAAIa,UAAU,GAAGgB,OAAO,CAAChB,UAAzB;AACA,WAAO,CAAC,GAAGxE,SAAS,CAAC2F,IAAd,EAAoBH,OAAO,CAAC1D,KAA5B,EAAmC8D,IAAnC,CAAwC,UAAS9D,KAAT,EAAgB;AAC3D,UAAI+D,UAAU,GAAG/D,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAY8B,OAA7B;AACA,UAAIkC,OAAO,GAAGhE,KAAK,CAAC+D,UAAU,GAAG,CAAd,CAAnB;AACA,UAAIE,aAAa,GAAG;AAChBrC,QAAAA,SAAS,EAAE8B,OAAO,CAACtE,UAAR,GAAqB,MAArB,GAA8B;AADzB,OAApB;AAGAP,MAAAA,IAAI,CAAC8E,OAAL,GAAe,CAAC;AACZ/B,QAAAA,SAAS,EAAE,QADC;AAEZyB,QAAAA,QAAQ,EAAE;AAFE,OAAD,EAGZ;AACCzB,QAAAA,SAAS,EAAE8B,OAAO,CAACtE,UAAR,GAAqB,OAArB,GAA+B,MAD3C;AAECiE,QAAAA,QAAQ,EAAE;AAFX,OAHY,CAAf;;AAOA,UAAIX,UAAU,CAACvC,MAAf,EAAuB;AACnBuC,QAAAA,UAAU,CAACwB,OAAX,CAAmB,UAASC,SAAT,EAAoB;AACnCtF,UAAAA,IAAI,CAAC8E,OAAL,CAAalD,IAAb,CAAkB,CAAC,GAAG9C,OAAO,CAACe,MAAZ,EAAoB,EAApB,EAAwBuF,aAAxB,EAAuC;AACrD9E,YAAAA,MAAM,EAAEgF,SAAS,CAAChF,MADmC;AAErDkE,YAAAA,QAAQ,EAAEH,eAAe,CAACiB,SAAD;AAF4B,WAAvC,CAAlB;AAIH,SALD;AAMH,OAPD,MAOO;AACHtF,QAAAA,IAAI,CAAC8E,OAAL,CAAalD,IAAb,CAAkBwD,aAAlB;AACH;;AAAA,OAAC,GAAGrG,SAAS,CAACwG,IAAd,EAAoBJ,OAApB,EAA6B,UAASnD,WAAT,EAAsBwD,MAAtB,EAA8B;AACxDA,QAAAA,MAAM,CAACC,KAAP,GAAe7F,mBAAf;AACH,OAFA;AAGDiF,MAAAA,OAAO,CAACM,OAAR,GAAkBA,OAAlB;AACAN,MAAAA,OAAO,CAAC1D,KAAR,GAAgBA,KAAhB;AACH,KA3BM,CAAP;AA4BH,GArCqC;AAsCtCuE,EAAAA,UAAU,EAAE,YAAW;AACnB,WAAO,KAAK1C,QAAL,CAAcmC,OAArB;AACH,GAxCqC;AAyCtCQ,EAAAA,gBAAgB,EAAE,YAAW;AACzB,QAAIC,QAAQ,GAAG,KAAK5C,QAAL,CAAcmB,WAA7B;AACA,QAAIF,QAAQ,GAAG,KAAKjB,QAAL,CAAciB,QAA7B;AACA,QAAIkB,OAAO,GAAG,KAAKnC,QAAL,CAAcmC,OAA5B;AACA,QAAIU,eAAe,GAAG,CAAC,CAAC,GAAG7G,OAAO,CAAC8G,SAAZ,GAAD,IAA6B,cAAcF,QAAQ,CAACxF,MAAT,CAAgB,gBAAhB,CAA3C,IAAgFwF,QAAQ,CAACG,OAAT,GAAmBC,EAAnB,CAAsB,SAAtB,CAAtG;AACA,WAAOH,eAAe,GAAGV,OAAO,CAACc,GAAR,CAAY,UAASC,CAAT,EAAY;AAC7C,aAAOtG,mBAAP;AACH,KAFwB,CAAH,GAEjBqE,QAAQ,CAACkC,eAAT,GAA2BvD,MAA3B,CAAkCgD,QAAQ,CAACO,eAAT,EAAlC,CAFL;AAGH,GAjDqC;AAkDtCC,EAAAA,YAAY,EAAE,YAAW;AACrB,WAAO,KAAKpD,QAAL,CAAc7B,KAAd,CAAoBG,MAA3B;AACH,GApDqC;AAqDtC+E,EAAAA,aAAa,EAAE,YAAW;AACtB,WAAO,CAAP;AACH,GAvDqC;AAwDtCC,EAAAA,cAAc,EAAE,UAAShE,QAAT,EAAmBD,SAAnB,EAA8B;AAC1C,QAAIlB,KAAK,GAAG,KAAK6B,QAAL,CAAc7B,KAA1B;AACA,QAAIoF,IAAI,GAAGpF,KAAK,CAACmB,QAAD,CAAL,IAAmBnB,KAAK,CAACmB,QAAD,CAAL,CAAgBD,SAAhB,CAA9B;AACA,WAAOkE,IAAI,GAAG;AACV/E,MAAAA,OAAO,EAAE+E,IAAI,CAAC/E,OAAL,GAAe,CADd;AAEVyB,MAAAA,OAAO,EAAEsD,IAAI,CAACtD,OAAL,GAAe;AAFd,KAAH,GAGP;AACAzB,MAAAA,OAAO,EAAE,CADT;AAEAyB,MAAAA,OAAO,EAAE;AAFT,KAHJ;AAOH,GAlEqC;AAmEtCuD,EAAAA,aAAa,EAAE,YAAW;AACtB,QAAIrF,KAAK,GAAG,KAAK6B,QAAL,CAAc7B,KAA1B;AACA,WAAO;AACHsF,MAAAA,CAAC,EAAEtF,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAYK,OADZ;AAEHkF,MAAAA,CAAC,EAAEvF,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAY8B;AAFZ,KAAP;AAIH,GAzEqC;AA0EtC0D,EAAAA,WAAW,EAAE,UAASrE,QAAT,EAAmBD,SAAnB,EAA8B;AACvC,QAAIuE,KAAK,GAAG,KAAK9B,OAAL,CAAa,KAAK+B,UAAL,CAAgBvE,QAAhB,EAA0BD,SAA1B,CAAb,CAAZ;;AACA,WAAOuE,KAAK,IAAIA,KAAK,CAACpC,QAAf,IAA2B,QAAlC;AACH,GA7EqC;AA8EtCsC,EAAAA,WAAW,EAAE,UAASxE,QAAT,EAAmBD,SAAnB,EAA8B0E,SAA9B,EAAyC;AAClD,QAAIhF,MAAM,GAAG,EAAb;AACA,QAAIZ,KAAK,GAAG,KAAK6B,QAAL,CAAc7B,KAA1B;AACA,QAAIoF,IAAI,GAAGpF,KAAK,CAACmB,QAAD,CAAL,IAAmBnB,KAAK,CAACmB,QAAD,CAAL,CAAgBD,SAAhB,CAAnB,IAAiD,EAA5D;;AACA,QAAI0E,SAAJ,EAAe;AACXhF,MAAAA,MAAM,CAACiF,cAAP,GAAwBT,IAAxB;;AACA,UAAIU,QAAQ,GAAG,KAAKC,eAAL,CAAqB/F,KAArB,EAA4BoF,IAA5B,EAAkCjE,QAAlC,EAA4CD,SAA5C,CAAf;;AACA,UAAI4E,QAAJ,EAAc;AACVlF,QAAAA,MAAM,CAACiF,cAAP,CAAsBG,IAAtB,GAA6BF,QAA7B;AACH;;AACDlF,MAAAA,MAAM,CAACiF,cAAP,CAAsB1E,QAAtB,GAAiCA,QAAjC;AACAP,MAAAA,MAAM,CAACiF,cAAP,CAAsBhF,WAAtB,GAAoCK,SAApC;AACH;;AACD,QAAI,aAAa,KAAKsE,WAAL,CAAiBrE,QAAjB,EAA2BD,SAA3B,CAAjB,EAAwD;AACpDN,MAAAA,MAAM,CAACqF,KAAP,GAAeb,IAAI,CAACc,IAApB;AACH,KAFD,MAEO;AACHtF,MAAAA,MAAM,CAACqF,KAAP,GAAeb,IAAI,CAACa,KAApB;AACH;;AACD,QAAIrF,MAAM,CAACiF,cAAP,IAAyBjF,MAAM,CAACiF,cAAP,CAAsBM,YAAnD,EAAiE;AAC7DvF,MAAAA,MAAM,CAACqF,KAAP,GAAe,EAAf;AACH;;AACD,WAAOrF,MAAP;AACH,GApGqC;AAqGtCmF,EAAAA,eAAe,EAAE,UAAS/F,KAAT,EAAgBoF,IAAhB,EAAsBjE,QAAtB,EAAgCD,SAAhC,EAA2C;AACxD,QAAIkF,gBAAgB,GAAGpG,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAY8B,OAAnC;AACA,QAAIuE,aAAa,GAAGrG,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAYK,OAAhC;;AACA,QAAIa,SAAS,IAAImF,aAAb,IAA8BlF,QAAQ,GAAGiF,gBAA7C,EAA+D;AAC3D,aAAO,QAAP;AACH,KAFD,MAEO;AACH,UAAIjF,QAAQ,IAAIiF,gBAAZ,IAAgClF,SAAS,GAAGmF,aAAhD,EAA+D;AAC3D,eAAO,KAAP;AACH,OAFD,MAEO;AACH,YAAI,CAAC,GAAG3I,KAAK,CAACoD,SAAV,EAAqBsE,IAAI,CAACkB,SAA1B,CAAJ,EAA0C;AACtC,iBAAO,MAAP;AACH;AACJ;AACJ;AACJ,GAnHqC;AAoHtCC,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,KAAK5C,OAAZ;AACH,GAtHqC;AAuHtC+B,EAAAA,UAAU,EAAE,UAASvE,QAAT,EAAmBD,SAAnB,EAA8B;AACtC,QAAIlB,KAAK,GAAG,KAAK6B,QAAL,CAAc7B,KAA1B;AACA,QAAIoG,gBAAgB,GAAGpG,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAY8B,OAAnC;AACA,QAAIuE,aAAa,GAAGrG,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAYK,OAAhC;AACA,QAAI+E,IAAI,GAAGpF,KAAK,CAACmB,QAAD,CAAL,IAAmBnB,KAAK,CAACmB,QAAD,CAAL,CAAgBD,SAAhB,CAAnB,IAAiD,EAA5D;;AACA,QAAI,MAAMA,SAAN,IAAmB,MAAMC,QAA7B,EAAuC;AACnC,aAAO7C,sBAAP;AACH,KAFD,MAEO;AACH,UAAI4C,SAAS,IAAImF,aAAb,IAA8BlF,QAAQ,GAAGiF,gBAA7C,EAA+D;AAC3D,eAAO9H,sBAAP;AACH,OAFD,MAEO;AACH,YAAI6C,QAAQ,IAAIiF,gBAAZ,IAAgClF,SAAS,GAAGmF,aAAhD,EAA+D;AAC3D,iBAAO9H,mBAAP;AACH;AACJ;AACJ;;AACD,WAAOC,iBAAiB,IAAI4G,IAAI,CAACkB,SAAL,IAAkB,CAAtB,CAAxB;AACH,GAxIqC;AAyItCE,EAAAA,qBAAqB,EAAE,YAAW;AAC9B,WAAO,CAAC,GAAG9I,KAAK,CAACoD,SAAV,EAAqB,KAAKe,QAAL,CAAcgB,kBAAnC,CAAP;AACH,GA3IqC;AA4ItCA,EAAAA,kBAAkB,EAAE,UAAS4D,CAAT,EAAY;AAC5B,QAAI,KAAK5E,QAAL,CAAcgB,kBAAlB,EAAsC;AAClC,WAAKhB,QAAL,CAAcgB,kBAAd,CAAiC4D,CAAjC;AACH;AACJ;AAhJqC,CAAvB,CAAnB;;AAkJArJ,OAAO,CAACC,YAAR,GAAuBA,YAAvB","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.export.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.DataProvider = exports.ExportMixin = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\r\nvar _number = _interopRequireDefault(require(\"../../localization/number\"));\r\nvar _exporter = require(\"../../exporter\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.export_mixin\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DEFAULT_DATA_TYPE = \"string\";\r\nvar COLUMN_HEADER_STYLE_ID = 0;\r\nvar ROW_HEADER_STYLE_ID = 1;\r\nvar DATA_STYLE_OFFSET = 2;\r\nvar DEFAUL_COLUMN_WIDTH = 100;\r\nvar ExportMixin = (0, _extend.extend)({}, _uiGrid_core.default, {\r\n    exportToExcel: function() {\r\n        var that = this;\r\n        (0, _exporter.export)(that.getDataProvider(), {\r\n            fileName: that.option(\"export.fileName\"),\r\n            proxyUrl: that.option(\"export.proxyUrl\"),\r\n            format: \"EXCEL\",\r\n            rtlEnabled: that.option(\"rtlEnabled\"),\r\n            ignoreErrors: that.option(\"export.ignoreExcelErrors\"),\r\n            exportingAction: that._actions.onExporting,\r\n            exportedAction: that._actions.onExported,\r\n            fileSavingAction: that._actions.onFileSaving\r\n        }, _exporter.excel.getData)\r\n    },\r\n    _getLength: function(items) {\r\n        var i;\r\n        var itemCount = items[0].length;\r\n        var cellCount = 0;\r\n        for (i = 0; i < itemCount; i++) {\r\n            cellCount += items[0][i].colspan || 1\r\n        }\r\n        return cellCount\r\n    },\r\n    _correctCellsInfoItemLengths: function(cellsInfo, expectedLength) {\r\n        for (var i = 0; i < cellsInfo.length; i++) {\r\n            while (cellsInfo[i].length < expectedLength) {\r\n                cellsInfo[i].push({})\r\n            }\r\n        }\r\n        return cellsInfo\r\n    },\r\n    _calculateCellInfoItemLength: function(columnsRow) {\r\n        var result = 0;\r\n        for (var columnIndex = 0; columnIndex < columnsRow.length; columnIndex++) {\r\n            result += (0, _type.isDefined)(columnsRow[columnIndex].colspan) ? columnsRow[columnIndex].colspan : 1\r\n        }\r\n        return result\r\n    },\r\n    _getAllItems: function(columnsInfo, rowsInfoItems, cellsInfo) {\r\n        var cellIndex;\r\n        var rowIndex;\r\n        var correctedCellsInfo = cellsInfo;\r\n        var rowsLength = this._getLength(rowsInfoItems);\r\n        var headerRowsCount = columnsInfo.length;\r\n        if (columnsInfo.length > 0 && columnsInfo[0].length > 0 && cellsInfo.length > 0 && 0 === cellsInfo[0].length) {\r\n            var cellInfoItemLength = this._calculateCellInfoItemLength(columnsInfo[0]);\r\n            if (cellInfoItemLength > 0) {\r\n                correctedCellsInfo = this._correctCellsInfoItemLengths(cellsInfo, cellInfoItemLength)\r\n            }\r\n        }\r\n        var sourceItems = columnsInfo.concat(correctedCellsInfo);\r\n        for (rowIndex = 0; rowIndex < rowsInfoItems.length; rowIndex++) {\r\n            for (cellIndex = rowsInfoItems[rowIndex].length - 1; cellIndex >= 0; cellIndex--) {\r\n                if (!(0, _type.isDefined)(sourceItems[rowIndex + headerRowsCount])) {\r\n                    sourceItems[rowIndex + headerRowsCount] = []\r\n                }\r\n                sourceItems[rowIndex + headerRowsCount].splice(0, 0, (0, _extend.extend)({}, rowsInfoItems[rowIndex][cellIndex]))\r\n            }\r\n        }\r\n        sourceItems[0].splice(0, 0, (0, _extend.extend)({}, this._getEmptyCell(), {\r\n            alignment: this._options.rtlEnabled ? \"right\" : \"left\",\r\n            colspan: rowsLength,\r\n            rowspan: headerRowsCount\r\n        }));\r\n        return this._prepareItems(sourceItems)\r\n    },\r\n    getDataProvider: function() {\r\n        var that = this;\r\n        var dataController = this._dataController;\r\n        var items = new _deferred.Deferred;\r\n        dataController.beginLoading();\r\n        setTimeout(function() {\r\n            var columnsInfo = (0, _extend.extend)(true, [], dataController.getColumnsInfo(true));\r\n            var rowsInfoItems = (0, _extend.extend)(true, [], dataController.getRowsInfo(true));\r\n            var cellsInfo = dataController.getCellsInfo(true);\r\n            items.resolve(that._getAllItems(columnsInfo, rowsInfoItems, cellsInfo));\r\n            dataController.endLoading()\r\n        });\r\n        return new DataProvider({\r\n            items: items,\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            dataFields: this.getDataSource().getAreaFields(\"data\"),\r\n            customizeExcelCell: this.option(\"export.customizeExcelCell\"),\r\n            rowsArea: this._rowsArea,\r\n            columnsArea: this._columnsArea\r\n        })\r\n    }\r\n});\r\nexports.ExportMixin = ExportMixin;\r\n\r\nfunction getCellDataType(field) {\r\n    if (field && field.customizeText) {\r\n        return \"string\"\r\n    }\r\n    if (field.dataType) {\r\n        return field.dataType\r\n    }\r\n    if (field.format) {\r\n        if (1 === _number.default.parse(_format_helper.default.format(1, field.format))) {\r\n            return \"number\"\r\n        }\r\n        if (_format_helper.default.format(new Date, field.format)) {\r\n            return \"date\"\r\n        }\r\n    }\r\n    return DEFAULT_DATA_TYPE\r\n}\r\nvar DataProvider = _class.default.inherit({\r\n    ctor: function(options) {\r\n        this._options = options;\r\n        this._styles = []\r\n    },\r\n    ready: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var dataFields = options.dataFields;\r\n        return (0, _deferred.when)(options.items).done(function(items) {\r\n            var headerSize = items[0][0].rowspan;\r\n            var columns = items[headerSize - 1];\r\n            var dataItemStyle = {\r\n                alignment: options.rtlEnabled ? \"left\" : \"right\"\r\n            };\r\n            that._styles = [{\r\n                alignment: \"center\",\r\n                dataType: \"string\"\r\n            }, {\r\n                alignment: options.rtlEnabled ? \"right\" : \"left\",\r\n                dataType: \"string\"\r\n            }];\r\n            if (dataFields.length) {\r\n                dataFields.forEach(function(dataField) {\r\n                    that._styles.push((0, _extend.extend)({}, dataItemStyle, {\r\n                        format: dataField.format,\r\n                        dataType: getCellDataType(dataField)\r\n                    }))\r\n                })\r\n            } else {\r\n                that._styles.push(dataItemStyle)\r\n            }(0, _iterator.each)(columns, function(columnIndex, column) {\r\n                column.width = DEFAUL_COLUMN_WIDTH\r\n            });\r\n            options.columns = columns;\r\n            options.items = items\r\n        })\r\n    },\r\n    getColumns: function() {\r\n        return this._options.columns\r\n    },\r\n    getColumnsWidths: function() {\r\n        var colsArea = this._options.columnsArea;\r\n        var rowsArea = this._options.rowsArea;\r\n        var columns = this._options.columns;\r\n        var useDefaultWidth = !(0, _window.hasWindow)() || \"virtual\" === colsArea.option(\"scrolling.mode\") || colsArea.element().is(\":hidden\");\r\n        return useDefaultWidth ? columns.map(function(_) {\r\n            return DEFAUL_COLUMN_WIDTH\r\n        }) : rowsArea.getColumnsWidth().concat(colsArea.getColumnsWidth())\r\n    },\r\n    getRowsCount: function() {\r\n        return this._options.items.length\r\n    },\r\n    getGroupLevel: function() {\r\n        return 0\r\n    },\r\n    getCellMerging: function(rowIndex, cellIndex) {\r\n        var items = this._options.items;\r\n        var item = items[rowIndex] && items[rowIndex][cellIndex];\r\n        return item ? {\r\n            colspan: item.colspan - 1,\r\n            rowspan: item.rowspan - 1\r\n        } : {\r\n            colspan: 0,\r\n            rowspan: 0\r\n        }\r\n    },\r\n    getFrozenArea: function() {\r\n        var items = this._options.items;\r\n        return {\r\n            x: items[0][0].colspan,\r\n            y: items[0][0].rowspan\r\n        }\r\n    },\r\n    getCellType: function(rowIndex, cellIndex) {\r\n        var style = this._styles[this.getStyleId(rowIndex, cellIndex)];\r\n        return style && style.dataType || \"string\"\r\n    },\r\n    getCellData: function(rowIndex, cellIndex, isExcelJS) {\r\n        var result = {};\r\n        var items = this._options.items;\r\n        var item = items[rowIndex] && items[rowIndex][cellIndex] || {};\r\n        if (isExcelJS) {\r\n            result.cellSourceData = item;\r\n            var areaName = this._tryGetAreaName(items, item, rowIndex, cellIndex);\r\n            if (areaName) {\r\n                result.cellSourceData.area = areaName\r\n            }\r\n            result.cellSourceData.rowIndex = rowIndex;\r\n            result.cellSourceData.columnIndex = cellIndex\r\n        }\r\n        if (\"string\" === this.getCellType(rowIndex, cellIndex)) {\r\n            result.value = item.text\r\n        } else {\r\n            result.value = item.value\r\n        }\r\n        if (result.cellSourceData && result.cellSourceData.isWhiteSpace) {\r\n            result.value = \"\"\r\n        }\r\n        return result\r\n    },\r\n    _tryGetAreaName: function(items, item, rowIndex, cellIndex) {\r\n        var columnHeaderSize = items[0][0].rowspan;\r\n        var rowHeaderSize = items[0][0].colspan;\r\n        if (cellIndex >= rowHeaderSize && rowIndex < columnHeaderSize) {\r\n            return \"column\"\r\n        } else {\r\n            if (rowIndex >= columnHeaderSize && cellIndex < rowHeaderSize) {\r\n                return \"row\"\r\n            } else {\r\n                if ((0, _type.isDefined)(item.dataIndex)) {\r\n                    return \"data\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    getStyles: function() {\r\n        return this._styles\r\n    },\r\n    getStyleId: function(rowIndex, cellIndex) {\r\n        var items = this._options.items;\r\n        var columnHeaderSize = items[0][0].rowspan;\r\n        var rowHeaderSize = items[0][0].colspan;\r\n        var item = items[rowIndex] && items[rowIndex][cellIndex] || {};\r\n        if (0 === cellIndex && 0 === rowIndex) {\r\n            return COLUMN_HEADER_STYLE_ID\r\n        } else {\r\n            if (cellIndex >= rowHeaderSize && rowIndex < columnHeaderSize) {\r\n                return COLUMN_HEADER_STYLE_ID\r\n            } else {\r\n                if (rowIndex >= columnHeaderSize && cellIndex < rowHeaderSize) {\r\n                    return ROW_HEADER_STYLE_ID\r\n                }\r\n            }\r\n        }\r\n        return DATA_STYLE_OFFSET + (item.dataIndex || 0)\r\n    },\r\n    hasCustomizeExcelCell: function() {\r\n        return (0, _type.isDefined)(this._options.customizeExcelCell)\r\n    },\r\n    customizeExcelCell: function(e) {\r\n        if (this._options.customizeExcelCell) {\r\n            this._options.customizeExcelCell(e)\r\n        }\r\n    }\r\n});\r\nexports.DataProvider = DataProvider;\r\n"]},"metadata":{},"sourceType":"script"}