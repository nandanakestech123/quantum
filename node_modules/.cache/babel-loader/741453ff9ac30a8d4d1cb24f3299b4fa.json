{"ast":null,"code":"import _objectSpread from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{QuotationActionType}from\"redux/actions/actionType\";import{quotation}from\"../../service/apiVariables\";export var updateQuotation=function updateQuotation(id,body){return function(dispatch,getState,_ref){var api=_ref.api,Toast=_ref.Toast;return new Promise(function(resolve,reject){quotation.updateQuotation.addQuery={key:\"id\",payload:id};api(_objectSpread(_objectSpread({},quotation.updateQuotation),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:\"success\",message:message});}else{reject(Toast({type:\"error\",message:message}));}}).catch(function(_ref2){var message=_ref2.message;reject(Toast({type:\"error\",message:message}));});});};};export var createQuotation=function createQuotation(body){return function(dispatch,getState,_ref3){var api=_ref3.api,Toast=_ref3.Toast;return new Promise(function(resolve,reject){api(_objectSpread(_objectSpread({},quotation.addQuotation),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status,data=response.data;if(status===200){// dispatch({ type: StaffActionType.getStaffDetail, payload: data });\nToast({type:\"success\",message:message});}else{reject(Toast({type:\"error\",message:message}));}}).catch(function(_ref4){var message=_ref4.message;reject(Toast({type:\"error\",message:message}));});});};};// get customer action\nexport var getQuotation=function getQuotation(id){return function(dispatch,getState,_ref5){var api=_ref5.api,Toast=_ref5.Toast;return new Promise(function(resolve,reject){quotation.getQuotation.addQuery={key:\"id\",payload:id};api(_objectSpread({},quotation.getQuotation)).then(function(response){resolve(response);var message=response.message,status=response.status,data=response.data;if(status===200){dispatch({type:QuotationActionType.getQuotationListing,payload:data});// Toast({ type: 'success', message })\n}else{reject(Toast({type:\"error\",message:message}));}}).catch(function(_ref6){var message=_ref6.message;reject(Toast({type:\"error\",message:message}));});});};};export var deleteQuotation=function deleteQuotation(id,body){return function(dispatch,getState,_ref7){var api=_ref7.api,Toast=_ref7.Toast;return new Promise(function(resolve,reject){quotation.deleteQuotation.addQuery={key:\"id\",payload:id};api(_objectSpread(_objectSpread({},quotation.deleteQuotation),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:\"success\",message:message});}else{reject(Toast({type:\"error\",message:message}));}}).catch(function(_ref8){var message=_ref8.message;reject(Toast({type:\"error\",message:message}));});});};};","map":{"version":3,"sources":["E:/newfrontend/webfe/src/redux/actions/quotation.js"],"names":["QuotationActionType","quotation","updateQuotation","id","body","dispatch","getState","api","Toast","Promise","resolve","reject","addQuery","key","payload","then","response","message","status","type","catch","createQuotation","addQuotation","data","getQuotation","getQuotationListing","deleteQuotation"],"mappings":"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","sourcesContent":["import { QuotationActionType } from \"redux/actions/actionType\";\r\nimport { quotation } from \"../../service/apiVariables\";\r\n\r\n\r\nexport const updateQuotation =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      quotation.updateQuotation.addQuery = { key: \"id\", payload: id };\r\n      api({ ...quotation.updateQuotation, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n          let { message, status } = response;\r\n          if (status === 200) {\r\n            // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n            Toast({ type: \"success\", message });\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const createQuotation =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...quotation.addQuotation, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n          let { message, status, data } = response;\r\n          if (status === 200) {\r\n            // dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n            Toast({ type: \"success\", message });\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n\r\n// get customer action\r\nexport const getQuotation =\r\n  (id) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n        quotation.getQuotation.addQuery = { key: \"id\", payload: id };\r\n\r\n      api({ ...quotation.getQuotation })\r\n        .then((response) => {\r\n          resolve(response);\r\n          let { message, status, data } = response;\r\n          if (status === 200) {\r\n            dispatch({\r\n              type: QuotationActionType.getQuotationListing,\r\n              payload: data,\r\n            });\r\n            // Toast({ type: 'success', message })\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n  export const deleteQuotation =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      quotation.deleteQuotation.addQuery = { key: \"id\", payload: id };\r\n      api({ ...quotation.deleteQuotation, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n          let { message, status } = response;\r\n          if (status === 200) {\r\n            // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n            Toast({ type: \"success\", message });\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };"]},"metadata":{},"sourceType":"module"}