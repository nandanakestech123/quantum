{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Project\\\\AddProject\\\\quotation.js\";\nimport React from \"react\";\nimport { Toast } from \"service/toast\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { NormalButton, NormalDate, TableWrapper } from \"component/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { withTranslation } from \"react-i18next\";\nimport { NormalInput, NormalDateTime } from \"component/common\";\nimport { Link } from \"react-router-dom\";\nexport class QuotationClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Date\"\n      }, {\n        label: \"Quotation Number\"\n      }, {\n        label: \"Total Amount\"\n      }, {\n        label: \"Status\"\n      }, {\n        label: \"Prepared By\"\n      }],\n      quotationList: [],\n      pageMeta: {// chunk: 10,\n        // page: 1,\n        // total: 10,\n        // totalPages: 2,\n        // chunk: 2,\n        // page: 1,\n        // total: 8,\n        // totalPages: 4,\n      },\n      // formField: {\n      //   date: \"\",\n      //   quotation:\"\",\n      //   user:\"\",\n      // },\n      active: false,\n      currentIndex: -1,\n      page: 1,\n      // limit: 10,\n      limit: 2,\n      isOpenvoidCheckout: false // is_loading: false,\n      // isMounted: true,\n      // salesCollectionHeader: [\n      //   { label: \"Sales Collection\" },\n      //   { label: \"Before Tax\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Qty\" },\n      // ],\n      // nonSalesCollectionHeader: [\n      //   { label: \"Non Sales Collection\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Qty\" },\n      // ],\n      // deptSalesHeader: [{ label: \"Dept Sales\" }, { label: \"Amount\" }],\n      // salesTransactionHeader: [\n      //   { label: \"Sales Transaction\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Paid\" },\n      //   { label: \"Outstanding\" },\n      // ],\n      // ARTransactionHeader: [{ label: \"AR Transaction\" }, { label: \"Amount\" }],\n      // TreatmentDoneHeader: [\n      //   { label: \"Customer\" },\n      //   { label: \"Customer Reference\" },\n      //   { label: \"Treatment Done\" },\n      //   { label: \"Description\" },\n      //   { label: \"Staff\" },\n      //   { label: \"Amount\" },\n      // DayDate: new Date(),\n      // runDayEnd: false,\n      // reportDate: \"\",\n      // sales_collec: null,\n      // sales_trasac: null,\n      // ar_trasac: null,\n      // treatment_done: null,\n      // dept_sales: null,\n\n    };\n\n    this.getQuotation = () => {\n      let {\n        quotationList,\n        pageMeta,\n        page,\n        limit\n      } = this.state; // let { fromDate, toDate, custName, quoNumber, projectName, status } = formField;\n\n      this.props.getCommonApi(`quotationlist/?searchprojectid=${this.props.fk_id}&page=${page}&limit=${limit}`).then(async res => {\n        console.log(res, \"dsfdfaafg\");\n        await this.setState({\n          quotationList: []\n        });\n        quotationList = res.data.dataList; // pageMeta = res.data.meta.pagination;\n\n        pageMeta = res.data.pagination; // pageMeta = {per_page:5, current_page:1, total:2, total_pages:4}\n\n        this.setState({\n          quotationList,\n          pageMeta\n        }); // this.setState({ quotationList });\n\n        console.log('res.data', res.data);\n        console.log('quotationList', quotationList);\n        console.log('pageMeta', pageMeta);\n      });\n    };\n\n    this.handlePagination = async pageNo => {\n      let {\n        page\n      } = this.state;\n      page = pageNo.page;\n      await this.setState({\n        page\n      });\n      this.getQuotation();\n    };\n\n    this.handleClick = key => {\n      if (!this.state.active) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      this.setState(prevState => ({\n        active: !prevState.active,\n        currentIndex: key\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleClick();\n    };\n  }\n\n  // componentWillUnmount() {\n  //   this.state.isMounted = false;\n  // }\n  // updateState = data => {\n  //   if (this.state.isMounted) this.setState(data);\n  // };\n  componentDidMount() {\n    // let From = new Date();\n    // let { formField } = this.state;\n    // let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\n    // formField[\"fromDate\"] = firstdayMonth;\n    // this.setState({\n    //   formField,\n    // });\n    this.getQuotation(); // this.queryHandler({});\n  }\n\n  //   handleChange = async ({ target: { value, name } }) => {\n  //     let { formField } = this.state;\n  //     formField[name] = value;\n  //     await this.setState({\n  //       formField,\n  //     });\n  //   };\n  //   handleDatePick = async (name, value) => {\n  //     let { formField } = this.state;\n  //     formField[name] = value;\n  //     await this.setState({\n  //       formField,\n  //     });\n  //   };\n  // seach change with api call\n  // handlesearch = event => {\n  //   event.persist();\n  //   if (!this.debouncedFn) {\n  //     this.debouncedFn = _.debounce(() => {\n  //       let searchString = event.target.value;\n  //       let data = { search: searchString };\n  //       this.queryHandler(data);\n  //     }, 500);\n  //   }\n  //   this.debouncedFn();\n  // };\n  // getProject = async data => {\n  //   this.updateState({ isLoading: true });\n  //   let { search } = this.state;\n  //   let { page = 1, limit = 10 } = data;\n  //   await this.props\n  //     .getProject(`?page=${page}&limit=${limit}&search=${search}`)\n  //     .then(res => {\n  //       let { data } = res;\n  //       console.log(data);\n  //       //  let { customerDetails } = this.props;\n  //       this.updateState({\n  //         customerList: data.dataList,\n  //         meta: data.meta?.pagination,\n  //         isLoading: false,\n  //       });\n  //     });\n  // };\n  // api call for staff\n  // queryHandler = async data => {\n  //   this.updateState({ is_loading: true });\n  //   let { page = 1, limit = 10 } = data;\n  //   await this.props.getProject(\n  //     `?page=${page}&limit=${limit}`\n  //   );\n  //   let { projectDetails } = this.props;\n  //   let { quotationList, pageMeta } = this.state;\n  //   quotationList = projectDetails.data;\n  //   pageMeta = projectDetails.meta?.pagination;\n  //   this.updateState({\n  //     quotationList,\n  //     pageMeta,\n  //     is_loading: false,\n  //   });\n  // };\n  // // delete api call for staff\n  // handleDeleteProject = id => {\n  //   this.props.deleteProject(`${id}/`).then(res => this.queryHandler({}));\n  // };\n  render() {\n    let {\n      headerDetails,\n      pageMeta,\n      quotationList\n    } = this.state; // quotationList = [{\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"}]\n    // console.log(quotationList)\n    // let { fromDate, toDate, custName, quoNumber, projectName, status } = formField;\n\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, quotationList ? quotationList.map((item, index) => {\n      let {\n        created_at,\n        quotation_number,\n        total_amount,\n        status,\n        in_charge,\n        id\n      } = item;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 29\n        }\n      }, created_at)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/admin/quotation/${id}/editQuotation`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 31\n        }\n      }, quotation_number))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 29\n        }\n      }, total_amount)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }\n      }, status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 29\n        }\n      }, in_charge)));\n    }) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 mt-5 float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/admin/quotation/add',\n        state: {\n          projectFk: this.props.fk_id\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2 mb-3\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Add\",\n      outline: false // onClick={this.props.history.push({\n      //   pathname: '/admin/quotation/add',\n      //   state: { projectFk: this.props.fk_id }\n      // })}               \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    })))));\n  }\n\n} // const mapStateToProps = state => ({\n//   projectDetail: state.project.projectDetail,\n// });\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi // deleteProject,\n    // getProject\n\n  }, dispatch);\n};\n\nexport const Quotation = withTranslation()(connect(null, mapDispatchToProps)(QuotationClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Project/AddProject/quotation.js"],"names":["React","Toast","connect","bindActionCreators","getCommonApi","NormalButton","NormalDate","TableWrapper","dateFormat","withTranslation","NormalInput","NormalDateTime","Link","QuotationClass","Component","state","headerDetails","label","quotationList","pageMeta","active","currentIndex","page","limit","isOpenvoidCheckout","getQuotation","props","fk_id","then","res","console","log","setState","data","dataList","pagination","handlePagination","pageNo","handleClick","key","document","addEventListener","handleOutsideClick","removeEventListener","prevState","e","node","contains","target","componentDidMount","render","t","map","item","index","created_at","quotation_number","total_amount","status","in_charge","id","pathname","projectFk","mapDispatchToProps","dispatch","Quotation"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Toast } from \"service/toast\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi } from \"redux/actions/common\";\r\nimport { NormalButton, NormalDate, TableWrapper } from \"component/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { NormalInput, NormalDateTime } from \"component/common\";\r\nimport { Link } from \"react-router-dom\"; \r\n\r\nexport class QuotationClass extends React.Component {\r\n  state = {\r\n    headerDetails: [\r\n        { label: \"Date\" },\r\n        { label: \"Quotation Number\" },\r\n        { label: \"Total Amount\" },\r\n        { label: \"Status\" },\r\n        { label: \"Prepared By\" },\r\n    ],\r\n    \r\n    quotationList: [],\r\n    pageMeta: {\r\n      // chunk: 10,\r\n      // page: 1,\r\n      // total: 10,\r\n      // totalPages: 2,\r\n\r\n      // chunk: 2,\r\n      // page: 1,\r\n      // total: 8,\r\n      // totalPages: 4,\r\n    },\r\n\r\n    // formField: {\r\n    //   date: \"\",\r\n    //   quotation:\"\",\r\n    //   user:\"\",\r\n    // },\r\n    \r\n    active: false,\r\n    currentIndex: -1,\r\n    page: 1,\r\n    // limit: 10,\r\n    limit: 2,\r\n    isOpenvoidCheckout: false,\r\n    // is_loading: false,\r\n    // isMounted: true,\r\n\r\n    \r\n\r\n    // salesCollectionHeader: [\r\n    //   { label: \"Sales Collection\" },\r\n    //   { label: \"Before Tax\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Qty\" },\r\n    // ],\r\n    // nonSalesCollectionHeader: [\r\n    //   { label: \"Non Sales Collection\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Qty\" },\r\n    // ],\r\n    // deptSalesHeader: [{ label: \"Dept Sales\" }, { label: \"Amount\" }],\r\n    // salesTransactionHeader: [\r\n    //   { label: \"Sales Transaction\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Paid\" },\r\n    //   { label: \"Outstanding\" },\r\n    // ],\r\n    // ARTransactionHeader: [{ label: \"AR Transaction\" }, { label: \"Amount\" }],\r\n    // TreatmentDoneHeader: [\r\n    //   { label: \"Customer\" },\r\n    //   { label: \"Customer Reference\" },\r\n    //   { label: \"Treatment Done\" },\r\n    //   { label: \"Description\" },\r\n    //   { label: \"Staff\" },\r\n    //   { label: \"Amount\" },\r\n    // DayDate: new Date(),\r\n    // runDayEnd: false,\r\n    // reportDate: \"\",\r\n    // sales_collec: null,\r\n    // sales_trasac: null,\r\n    // ar_trasac: null,\r\n    // treatment_done: null,\r\n    // dept_sales: null,\r\n  };\r\n\r\n  // componentWillUnmount() {\r\n  //   this.state.isMounted = false;\r\n  // }\r\n\r\n  // updateState = data => {\r\n  //   if (this.state.isMounted) this.setState(data);\r\n  // };\r\n\r\n  componentDidMount() {\r\n    // let From = new Date();\r\n    // let { formField } = this.state;\r\n    // let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\r\n    // formField[\"fromDate\"] = firstdayMonth;\r\n    // this.setState({\r\n    //   formField,\r\n    // });\r\n\r\n    this.getQuotation();\r\n    // this.queryHandler({});\r\n  }\r\n\r\n  \r\n\r\n  getQuotation = () => {\r\n    let { quotationList, pageMeta, page, limit } = this.state;\r\n    // let { fromDate, toDate, custName, quoNumber, projectName, status } = formField;\r\n\r\n    this.props\r\n    .getCommonApi(\r\n      `quotationlist/?searchprojectid=${this.props.fk_id}&page=${page}&limit=${limit}`\r\n    )\r\n      .then(async res => {\r\n        console.log(res, \"dsfdfaafg\");\r\n        await this.setState({ quotationList: [] });\r\n        quotationList = res.data.dataList;\r\n        // pageMeta = res.data.meta.pagination;\r\n        pageMeta = res.data.pagination;\r\n        // pageMeta = {per_page:5, current_page:1, total:2, total_pages:4}\r\n        this.setState({ quotationList, pageMeta });\r\n        // this.setState({ quotationList });\r\n        console.log('res.data',res.data)\r\n        console.log('quotationList',quotationList)\r\n        console.log('pageMeta',pageMeta)\r\n      });\r\n  };\r\n\r\n  handlePagination = async pageNo => {\r\n    let { page } = this.state;\r\n    page = pageNo.page;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    this.getQuotation();\r\n  };\r\n  // pagination\r\n  // handlePagination = page => {\r\n  //   this.queryHandler(page);\r\n  // };\r\n\r\n  handleClick = key => {\r\n    if (!this.state.active) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      active: !prevState.active,\r\n      currentIndex: key,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleClick();\r\n  };\r\n\r\n//   handleChange = async ({ target: { value, name } }) => {\r\n//     let { formField } = this.state;\r\n//     formField[name] = value;\r\n//     await this.setState({\r\n//       formField,\r\n//     });\r\n//   };\r\n\r\n//   handleDatePick = async (name, value) => {\r\n//     let { formField } = this.state;\r\n//     formField[name] = value;\r\n//     await this.setState({\r\n//       formField,\r\n//     });\r\n//   };\r\n\r\n\r\n  // seach change with api call\r\n  // handlesearch = event => {\r\n  //   event.persist();\r\n\r\n  //   if (!this.debouncedFn) {\r\n  //     this.debouncedFn = _.debounce(() => {\r\n  //       let searchString = event.target.value;\r\n  //       let data = { search: searchString };\r\n  //       this.queryHandler(data);\r\n  //     }, 500);\r\n  //   }\r\n  //   this.debouncedFn();\r\n  // };\r\n\r\n  // getProject = async data => {\r\n  //   this.updateState({ isLoading: true });\r\n  //   let { search } = this.state;\r\n  //   let { page = 1, limit = 10 } = data;\r\n  //   await this.props\r\n  //     .getProject(`?page=${page}&limit=${limit}&search=${search}`)\r\n  //     .then(res => {\r\n  //       let { data } = res;\r\n  //       console.log(data);\r\n  //       //  let { customerDetails } = this.props;\r\n  //       this.updateState({\r\n  //         customerList: data.dataList,\r\n  //         meta: data.meta?.pagination,\r\n  //         isLoading: false,\r\n  //       });\r\n  //     });\r\n  // };\r\n\r\n  // api call for staff\r\n  // queryHandler = async data => {\r\n  //   this.updateState({ is_loading: true });\r\n  //   let { page = 1, limit = 10 } = data;\r\n  //   await this.props.getProject(\r\n  //     `?page=${page}&limit=${limit}`\r\n  //   );\r\n  //   let { projectDetails } = this.props;\r\n  //   let { quotationList, pageMeta } = this.state;\r\n  //   quotationList = projectDetails.data;\r\n  //   pageMeta = projectDetails.meta?.pagination;\r\n  //   this.updateState({\r\n  //     quotationList,\r\n  //     pageMeta,\r\n  //     is_loading: false,\r\n  //   });\r\n  // };\r\n\r\n  // // delete api call for staff\r\n  // handleDeleteProject = id => {\r\n  //   this.props.deleteProject(`${id}/`).then(res => this.queryHandler({}));\r\n  // };\r\n  \r\n  \r\n\r\n  render() {\r\n    let { headerDetails, pageMeta, quotationList } = \r\n      this.state;\r\n\r\n    \r\n\r\n    // quotationList = [{\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"},\r\n    // {\"projectTitle\":\"project1\", \"custName\":\"cust1\", \"status\":\"Pending\"}]\r\n    // console.log(quotationList)\r\n\r\n    // let { fromDate, toDate, custName, quoNumber, projectName, status } = formField;\r\n    \r\n    let {t} =this.props;\r\n    \r\n    return (\r\n          <div className=\"py-4\">\r\n            <div className=\"table-container\">\r\n              <TableWrapper\r\n                headerDetails={headerDetails}\r\n                queryHandler={this.handlePagination}\r\n                pageMeta={pageMeta}\r\n              >\r\n                {quotationList\r\n                  ? quotationList.map((item, index) => {\r\n                      let {\r\n                        created_at,\r\n                        quotation_number,\r\n                        total_amount,\r\n                        status,\r\n                        in_charge,\r\n                        id\r\n                      } = item;\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              { created_at }\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            \r\n                            <div className=\"d-flex align-items-center justify-content-center\" >\r\n                              <Link to={`/admin/quotation/${id}/editQuotation`}>                             \r\n                                { quotation_number }                            \r\n                              </Link>\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              { total_amount }\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              { status }\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              { in_charge }\r\n                            </div>\r\n                          </td>\r\n                          \r\n                                   \r\n                        </tr>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </TableWrapper>\r\n\r\n              <div className=\"col-2 mt-5 float-right\">\r\n                <Link to={{\r\n                  pathname: '/admin/quotation/add',\r\n                  state: { projectFk: this.props.fk_id }\r\n                }}>\r\n                  <NormalButton\r\n                    buttonClass={\"mx-2 mb-3\"}\r\n                    mainbg={true}\r\n                    className=\"confirm\"\r\n                    label=\"Add\"\r\n                    outline={false}\r\n                    // onClick={this.props.history.push({\r\n                    //   pathname: '/admin/quotation/add',\r\n                    //   state: { projectFk: this.props.fk_id }\r\n                    // })}               \r\n                  />\r\n                </Link>            \r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   projectDetail: state.project.projectDetail,\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      // deleteProject,\r\n      // getProject\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const Quotation =withTranslation()( connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(QuotationClass));\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}