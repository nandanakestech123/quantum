{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\common\\\\Plugins\\\\NewScheduler.js\";\nimport React, { Component, PureComponent } from \"react\";\nimport \"./devExpressScheduler/Styles.scss\";\nimport Scheduler, { Resource, View } from \"devextreme-react/scheduler\";\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport ResourceCell from \"./devExpressScheduler/ResourceCell\";\nimport fullscreenIcon from \"assets/images/fullScreen.png\";\nimport AppointmentCell from \"./devExpressScheduler/AppointmentCell\";\nimport { InputSearch } from \"../InputSearch\";\nimport _ from \"lodash\";\nimport { NormalButton, NormalSelect, NormalInput, NormalModal } from \"component/common\";\nimport { StaffSorting } from \"../../Admin/NewAppointment/NewListAppointment/modal/StaffSorting\";\nimport { BlockPopup } from \"../../Admin/NewAppointment/NewListAppointment/modal/BlockPopup\";\nimport { PrintModal } from \"../../Admin/NewAppointment/NewListAppointment/modal/PrintModal\";\nimport { Toast } from \"service/toast\";\nimport html2canvas from \"html2canvas\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { getCommonApi, commonPatchApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { TreatmentHistory } from \"component/Admin/NewAppointment/NewListAppointment/modal/TreatmentHistory\";\nimport { UpcomingAppointment } from \"component/Admin/NewAppointment/NewListAppointment/modal/UpcomingAppointment\";\nimport setting from \"assets/images/settings.png\";\nimport { AppointmentSettings } from \"./devExpressScheduler/AppointmentSettings\";\nimport closeIcon from \"assets/images/close.png\";\nimport { history } from \"helpers\";\nimport { withTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nconst groups = [\"id\"];\nconst draggingGroupName = \"appointmentsGroup\";\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\nconst scrolling = {\n  mode: \"virtual\"\n};\nconst views = [{\n  type: \"day\",\n  name: \"day\",\n  groupOrientation: \"Horizontally\",\n  intervalCount: 1\n}, {\n  type: \"week\",\n  name: \"week\",\n  groupOrientation: \"vertical\",\n  intervalCount: 1,\n  maxAppointmentsPerCell: \"unlimited\"\n}, {\n  type: \"month\",\n  name: \"month\",\n  intervalCount: 1,\n  groupOrientation: \"vertical\",\n  maxAppointmentsPerCell: \"unlimited\"\n}];\nconst Dayview = [{\n  type: \"day\",\n  name: \"day\",\n  groupOrientation: \"Horizontally\",\n  intervalCount: 1\n}];\nexport class NewSchedulerModalClass extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedDate: new Date(),\n      selectedView: \"\",\n      DefaultDate: new Date(),\n      DefaultView: \"\",\n      searchtext: \"\",\n      SelectedList: [],\n      isOpenModal: false,\n      isOpenBlockModal: false,\n      appointmentId: 0,\n      SchedulerHeight: \"90%\",\n      isOpenPrintModal: false,\n      formFields: [],\n      groupByList: [{\n        label: \"Group by Staff\",\n        value: \"staff\"\n      }, {\n        label: \"Group by Department\",\n        value: \"department\"\n      }, {\n        label: \"Group by Room\",\n        value: \"room\"\n      }],\n      groupBy: \"staff\",\n      customerNumber: 0,\n      customerId: 0,\n      clickCount: 0,\n      visible: false,\n      customerOption: [],\n      isSettingsClick: false,\n      dayName: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      day: new Date().getDay()\n    };\n\n    this.onEmptyClick = e => {\n      e.cancel = true;\n      let date = new Date(e.cellData.startDate);\n\n      if (e.cellData.groups) {\n        this.props.onEmptyClick(date, e.cellData);\n      }\n    };\n\n    this.onAppointmentDblClick = async e => {\n      e.cancel = true;\n      await this.setState({\n        appointmentId: 0\n      });\n      let date = new Date(e.appointmentData.startDate);\n\n      if (e.appointmentData.status === \"Block\") {\n        await this.setState({\n          appointmentId: e.appointmentData.appt_id\n        });\n        this.handleBlockDialog();\n      } else {\n        this.props.onEmptyClick(date, e.appointmentData);\n        await this.setState({\n          customerId: e.appointmentData.cust_id,\n          custName: e.appointmentData.cust_name,\n          custPhone: e.appointmentData.cust_phone\n        });\n      }\n    };\n\n    this.onAppointmentSingleClick = async e => {\n      e.cancel = true;\n      await sleep(500);\n\n      if (e.appointmentData.status !== \"Block\") {\n        await this.setState({\n          customerId: e.appointmentData.cust_id,\n          custName: e.appointmentData.cust_name,\n          custPhone: e.appointmentData.cust_phone\n        });\n      }\n    };\n\n    this.handleViewChange = async e => {\n      //if (this.props.staffList.length > 0) {\n      await this.setState({\n        selectedView: e\n      });\n      this.handleChange(); //}\n    };\n\n    this.handleDateChange = async e => {\n      let {\n        day\n      } = this.state;\n\n      if (this.state.selectedDate !== e) {\n        await this.setState({\n          selectedDate: e\n        });\n        this.handleChange();\n      }\n\n      day = moment(this.state.selectedDate).day();\n      this.setState({\n        day\n      });\n      console.log(day);\n    };\n\n    this.handleChange = () => {\n      let {\n        selectedDate,\n        selectedView,\n        DefaultDate,\n        DefaultView,\n        searchtext\n      } = this.state;\n      let newDate = new Date();\n      let newMode = \"\";\n      let prevMode = DefaultView;\n      let prevDate = DefaultDate;\n\n      if (selectedView) {\n        newMode = selectedView;\n      } else {\n        newMode = DefaultView;\n      }\n\n      if (selectedDate) {\n        newDate = selectedDate;\n      } else {\n        newDate = selectedDate;\n      }\n\n      this.props.handleChangeFilter(prevMode, prevDate, newMode, newDate, searchtext);\n    };\n\n    this.handleSearch = async event => {\n      event.persist();\n      await this.setState({\n        searchtext: event.target.value\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          this.handleChange();\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleDialog = () => {\n      let {\n        isOpenModal\n      } = this.state;\n      isOpenModal = !isOpenModal;\n      this.setState({\n        isOpenModal\n      });\n    };\n\n    this.handleSettingDialog = () => {\n      let {\n        isSettingsClick\n      } = this.state;\n      isSettingsClick = !isSettingsClick;\n      this.setState({\n        isSettingsClick\n      });\n    };\n\n    this.handleBlockDialog = async () => {\n      await this.setState(prevState => ({\n        isOpenBlockModal: !prevState.isOpenBlockModal\n      }));\n      await this.setState({\n        appointmentId: 0\n      });\n    };\n\n    this.handlePrintDialog = () => {\n      let {\n        isOpenPrintModal\n      } = this.state;\n      isOpenPrintModal = !isOpenPrintModal;\n      this.setState({\n        isOpenPrintModal\n      });\n    };\n\n    this.handleBack = () => {\n      this.props.handleBack();\n    };\n\n    this.handleNext = () => {\n      this.props.handleNext();\n    };\n\n    this.Snap = async () => {\n      await this.setState({\n        SchedulerHeight: \"350%\"\n      });\n      await sleep(2000); //\n\n      window.scrollTo(0, 0);\n      let img = \"\";\n      let base64URL = \"\";\n      html2canvas(document.querySelector(\"#Scheduler\"), {\n        allowTaint: true,\n        useCORS: true,\n        logging: false,\n        scale: 1,\n        removeContainer: true\n      }).then(function (canvas) {\n        img = canvas.toDataURL(\"image/png\", 1);\n        base64URL = img.replace(\"image/png\", \"image/octet-stream\");\n        var byteCharacters = atob(img.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\"));\n        var byteNumbers = new Array(byteCharacters.length);\n\n        for (var i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n\n        var byteArray = new Uint8Array(byteNumbers);\n        var file = new Blob([byteArray], {\n          type: \"image/png\" + \";base64\"\n        });\n        var fileURL = URL.createObjectURL(file);\n        var a = document.createElement(\"a\");\n        a.setAttribute(\"download\", \"myImage.png\");\n        a.setAttribute(\"href\", base64URL);\n        a.click();\n        window.open(fileURL);\n      });\n      window.scrollTo(0, document.documentElement.scrollHeight);\n      await this.setState({\n        SchedulerHeight: \"90%\"\n      });\n    };\n\n    this.getHoursFromDate = date => {\n      let hour = new Date(date).getHours();\n      let minute = new Date(date).getMinutes();\n      let hours = hour > 9 ? hour : \"0\" + hour;\n      let minutes = minute > 9 ? minute : \"0\" + minute;\n      return hours + \":\" + minutes;\n    };\n\n    this.onDragStart = async e => {\n      console.log(e, \"drag start data\");\n\n      if (e.itemData.status === \"Block\") {\n        e.cancel = true;\n      } else if (e.itemData.Merged) {\n        e.cancel = true;\n        Toast({\n          type: \"error\",\n          message: \"Merged appointment not allowed for dragging\"\n        });\n      }\n    };\n\n    this.onDragEnd = async e => {\n      await sleep(500);\n\n      if (e.itemData.appt_id) {\n        let {\n          formFields\n        } = this.state;\n        let startTime = this.getHoursFromDate(e.itemData.startDate);\n        let endTime = this.getHoursFromDate(e.itemData.endDate);\n        let targetStaff = e.itemData.id;\n        this.props.getCommonApi(`appointmentresources/${e.itemData.appt_id}/`).then(async key => {\n          let {\n            status,\n            data\n          } = key;\n          console.log(key, \"drag end data response\");\n          let appt_Date = data.appt_date;\n          let date = appt_Date.split(\"/\");\n          let finaldate = date[2] + \"-\" + date[1] + \"-\" + date[0];\n\n          if (status === 200) {\n            formFields[\"appt_id\"] = e.itemData.appt_id;\n            formFields[\"custName\"] = data.cust_name;\n            formFields[\"appointmentDate\"] = finaldate;\n            formFields[\"bookingStatus\"] = data.booking_status;\n            formFields[\"new_remark\"] = data.ori_remark;\n            formFields[\"customerName\"] = data.cust_id;\n            formFields[\"Source_Codeid\"] = data.source_id;\n            formFields[\"Room_Codeid\"] = data.room_id;\n            formFields[\"sec_status\"] = data.secondary_status;\n            formFields[\"Appt_typeid\"] = data.channel_id;\n            formFields[\"start_time\"] = data ? data.start_time : \"\";\n            formFields[\"end_time\"] = data ? data.end_time : \"\";\n            formFields[\"Item_Codeid\"] = data.Item_Codeid;\n            formFields[\"Item_CodeName\"] = data.item_name;\n            formFields[\"emp_no\"] = data.emp_id;\n            formFields[\"add_duration\"] = data.add_duration;\n            formFields[\"edit_remark\"] = \"\";\n            formFields[\"requesttherapist\"] = data.requesttherapist;\n            formFields[\"recur_days\"] = data.recur_days;\n            formFields[\"recur_qty\"] = data.recur_qty;\n            formFields[\"item_text\"] = data.item_name;\n\n            if (formFields[\"start_time\"] !== startTime || formFields[\"emp_no\"] !== targetStaff) {\n              formFields[\"appointmentDate\"] = e.itemData.endDate;\n              formFields[\"start_time\"] = startTime;\n              formFields[\"end_time\"] = endTime;\n              formFields[\"emp_no\"] = targetStaff;\n              formFields[\"item_text\"] = e.itemData.item_name;\n              formFields[\"recur_days\"] = null;\n              formFields[\"recur_qty\"] = null;\n              await this.setState({\n                formFields\n              });\n              let payload = {\n                appt_date: dateFormat(new Date(e.itemData.endDate), \"yyyy-mm-dd\"),\n                Room_Codeid: data.room_id,\n                appt_status: data.booking_status,\n                sec_status: data.secondary_status,\n                edit_remark: \"\",\n                start_time: startTime,\n                end_time: endTime,\n                item_id: data.Item_Codeid,\n                add_duration: data.add_duration,\n                emp_id: targetStaff,\n                requesttherapist: data.requesttherapist,\n                item_text: e.itemData.item_name,\n                recur_qty: null,\n                recur_days: null\n              };\n              this.props.commonPatchApi(`appointmentresources/${e.itemData.appt_id}/`, payload).then(async res => {});\n            }\n          }\n        });\n      }\n\n      this.props.getAppointmentWithStaff();\n    };\n\n    this.handleTreatmentHistory = () => {\n      let {\n        customerId\n      } = this.state;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isTreatmentHistoryModal: !prevState.isTreatmentHistoryModal,\n          customerNumber: this.state.customerId\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.handleUpcomingAppointment = () => {\n      let {\n        customerId\n      } = this.state;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isUpcomingAppointmentModal: !prevState.isUpcomingAppointmentModal,\n          customerNumber: this.state.customerId\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.handleSearchCustomer = async event => {\n      //    event.persist();\n      let {\n        custName,\n        visible\n      } = this.state;\n      custName = event.target.value;\n      visible = true;\n      await this.setState({\n        custName,\n        visible\n      });\n      console.log(this.state.custName);\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          let {\n            customerList\n          } = this.state;\n          let {\n            basicApptDetail\n          } = this.props;\n          this.search(basicApptDetail);\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = basicApptDetail => {\n      let {\n        custName\n      } = this.state;\n      this.props.getCommonApi(`custappt/?Outlet=${basicApptDetail.branchId ? basicApptDetail.branchId : \"\"}&search=${custName}`).then(key => {\n        // this.props.getCommonApi(`custappt/?search=${custName}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          this.setState({\n            customerOption: data\n          });\n        }\n      });\n    };\n\n    this.handleClick = key => {\n      if (!this.state.visible) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      if (this.state.visible) {\n        let {\n          basicApptDetail\n        } = this.props;\n        this.search(basicApptDetail);\n      }\n\n      this.setState(prevState => ({\n        visible: !prevState.visible\n      }));\n    };\n\n    this.handleSettingClick = key => {\n      this.setState(prevState => ({\n        isSettingsClick: !prevState.isSettingsClick\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleClick();\n    };\n\n    this.handleSelectCustomer = async data => {\n      console.log(data, \"selectCustomer\");\n      await this.setState({\n        customerId: data.id,\n        custName: data.cust_name,\n        custPhone: data.cust_phone1\n      });\n      this.handleClick();\n    };\n\n    this.handleGroupbyChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      if (value == \"\") {\n        value = \"staff\";\n      }\n\n      if (value !== this.state.groupBy) {\n        this.setState({\n          groupBy: value\n        });\n        this.props.groupByAppointment(value);\n      }\n    };\n\n    this.handleFullScreenClose = () => {\n      history.push(\"/admin/newappointment\");\n      this.setState({\n        SchedulerHeight: \"70%\"\n      });\n    };\n\n    this.handleFullScreenOpen = () => {\n      history.push(\"/admin/newappointmentfullscreen\");\n      this.setState({\n        SchedulerHeight: \"100%\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      DefaultDate: this.props.filterDate,\n      DefaultView: this.props.filterType\n    });\n  }\n\n  onContentReady(e) {\n    //sleep(500);\n    console.log(e, \"oncontentreadylog\");\n    const currentHour = new Date().getHours() - 1;\n    e.component.scrollToTime(currentHour, 30, new Date());\n  }\n\n  render() {\n    let {\n      isOpenModal,\n      isOpenBlockModal,\n      appointmentId,\n      SchedulerHeight,\n      isOpenPrintModal,\n      groupBy,\n      isTreatmentHistoryModal,\n      isUpcomingAppointmentModal,\n      customerNumber,\n      visible,\n      customerOption,\n      selectedDate,\n      isSettingsClick,\n      dayName\n    } = this.state;\n    let {\n      filterDate,\n      tokenDetail,\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StaffSorting, {\n      isOpenModal: isOpenModal,\n      handleDialog: this.handleDialog,\n      handleChange: this.handleChange,\n      filterDate: filterDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }\n    }), isOpenBlockModal ? /*#__PURE__*/React.createElement(BlockPopup, {\n      isOpenBlockModal: isOpenBlockModal,\n      handleBlockDialog: this.handleBlockDialog,\n      handleChange: this.handleChange,\n      filterDate: filterDate,\n      appointmentId: appointmentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }\n    }) : \"\", isOpenPrintModal ? /*#__PURE__*/React.createElement(PrintModal, {\n      isOpenPrintModal: isOpenPrintModal,\n      handlePrintDialog: this.handlePrintDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start m-1 p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }\n    }, this.props.meta ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 13\n      }\n    }, this.props.meta.pagination && this.props.meta.pagination.total_pages > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 17\n      }\n    }, this.props.meta.pagination.total_pages < this.props.meta.pagination.current_page || this.props.meta.pagination.current_page > 1 || this.props.meta.pagination.total_pages == this.props.meta.pagination.current_page ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"cursor-pointer dx-button-content disabled\",\n      onClick: this.handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"9\",\n      height: \"15\",\n      viewBox: \"0 0 6 10\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M5 0.5L1 5L5 9.5\",\n      stroke: \"#888888\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 25\n      }\n    }))) : \"\", this.props.meta.pagination.total_pages > this.props.meta.pagination.current_page && this.props.meta.pagination.total_pages !== this.props.meta.pagination.current_page && this.props.meta.pagination.current_page > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"cursor-pointer dx-button-content\",\n      onClick: this.handleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"9\",\n      height: \"15\",\n      viewBox: \"0 0 6 10\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M0.5 9.5L4.5 5L0.5 0.5\",\n      stroke: \"#888888\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 25\n      }\n    }))) : \"\") : \"\") : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0 mr-1\",\n      mainbg: true,\n      className: \"fs-15 submit-btn\",\n      label: `Today`,\n      outline: false,\n      onClick: () => {\n        this.handleDateChange(new Date());\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      className: \"col-md-6 mr-1\",\n      placeholder: \"customer..\",\n      value: this.state.custName,\n      name: \"custName\",\n      onChange: this.handleSearchCustomer,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mr-1\",\n      mainbg: true,\n      className: \"col-12 fs-15 m-0 p-1\",\n      label: \"Upcoming\",\n      onClick: this.handleUpcomingAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mr-1\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"History\",\n      onClick: this.handleTreatmentHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      name: \"selecteddate\",\n      value: dayName[this.state.day] + \" \" + moment(selectedDate).format(\"DD/MM/YYYY\"),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0 mr-1\",\n      mainbg: true,\n      className: \" fs-14 confirm mr-1\",\n      label: t(\"Snap\"),\n      outline: false,\n      onClick: this.Snap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0 mr-1\",\n      mainbg: true,\n      className: \" fs-15 confirm mr-1\",\n      label: `Print`,\n      outline: false,\n      onClick: () => {\n        this.setState({\n          isOpenPrintModal: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0 mr-1\",\n      mainbg: true,\n      className: \" fs-15 confirm mr-1\",\n      label: `Sort`,\n      outline: false,\n      onClick: () => {\n        this.setState({\n          isOpenModal: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0 mr-1\",\n      mainbg: true,\n      className: \"fs-15 confirm\",\n      label: `Block`,\n      outline: false,\n      onClick: () => {\n        this.setState({\n          isOpenBlockModal: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputSearch, {\n      placeholder: \"Search here..\",\n      value: this.state.searchtext,\n      onChange: this.handleSearch,\n      name: \"searchtext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 17\n      }\n    })), String(tokenDetail.role_code).toUpperCase() === \"1\" ? /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleSettingClick,\n      className: \"close cursor-pointer\",\n      src: setting,\n      alt: \"\",\n      width: \"35\",\n      height: \"35\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 17\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-3 pt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: 30\n      },\n      onClick: window.location.pathname == \"/admin/newappointmentfullscreen\" ? this.handleFullScreenClose : this.handleFullScreenOpen,\n      className: \"close cursor-pointer tooltip-img ml-1\",\n      src: fullscreenIcon,\n      alt: \"\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: window.location.pathname == \"/admin/newappointmentfullscreen\" ? \"Exit Fullscreen Mode\" : \"Fullscreen Mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-modal top-up-modal\",\n      style: {\n        minWidth: \"55%\"\n      },\n      modal: isSettingsClick,\n      handleModal: this.handleSettingDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleSettingDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AppointmentSettings, {\n      handleModal: this.handleSettingDialog,\n      handleSettingChange: this.props.handleAppointmentSetting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 17\n      }\n    }))))), isTreatmentHistoryModal ? /*#__PURE__*/React.createElement(TreatmentHistory, {\n      isTreatmentHistoryModal: isTreatmentHistoryModal,\n      handleTreatmentHistory: this.handleTreatmentHistory,\n      customerNumber: this.state.customerNumber,\n      custName: this.state.custName,\n      custPhone: this.state.custPhone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 11\n      }\n    }) : \"\", isUpcomingAppointmentModal ? /*#__PURE__*/React.createElement(UpcomingAppointment, {\n      isUpcomingAppointmentModal: isUpcomingAppointmentModal,\n      handleUpcomingAppointment: this.handleUpcomingAppointment,\n      customerNumber: this.state.customerNumber,\n      custName: this.state.custName,\n      custPhone: this.state.custPhone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 11\n      }\n    }) : \"\", visible ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AppointmentStaffList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customerSearch-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mt-4 table table-header w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 17\n      }\n    }, t(\"Name\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 17\n      }\n    }, t(\"Phone\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 17\n      }\n    }, t(\"Customer Code\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 17\n      }\n    }, t(\"Reference\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 17\n      }\n    }, t(\"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 17\n      }\n    }, t(\"NRIC\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"response-table w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 15\n      }\n    }, customerOption.length > 0 ? customerOption.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row m-0 table-body w-100 border\",\n        onClick: () => this.handleSelectCustomer(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 25\n        }\n      }, item.cust_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 25\n        }\n      }, item.cust_phone1), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 25\n        }\n      }, item.cust_code), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 25\n        }\n      }, item.cust_refer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 25\n        }\n      }, item.cust_email), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 25\n        }\n      }, item.cust_nric));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 19\n      }\n    }, t(\"No Data are available\"))))) : null, /*#__PURE__*/React.createElement(Scheduler, {\n      id: \"Scheduler\",\n      className: \"col-12 m-0 p-0\",\n      height: SchedulerHeight,\n      dataSource: this.props.staffList.length > 0 ? this.props.event : \"\" // views={this.props.staffList.length > 0 ? views : Dayview}\n      ,\n      views: views //onContentReady={this.onContentReady}\n      ,\n      defaultCurrentView: \"day\",\n      currentDate: selectedDate,\n      defaultCurrentDate: new Date(),\n      groups: this.props.staffList.length > 0 ? groups : \"\" // startDayHour={8}\n      // endDayHour={21}\n      // cellDuration={15}\n      ,\n      startDayHour: this.props.SchedulerSetting.startday_hour ? this.props.SchedulerSetting.startday_hour : 8,\n      endDayHour: this.props.SchedulerSetting.endday_hour ? this.props.SchedulerSetting.endday_hour : 21,\n      cellDuration: this.props.SchedulerSetting.cell_duration ? this.props.SchedulerSetting.cell_duration : 15,\n      firstDayOfWeek: 0,\n      showAllDayPanel: false,\n      crossScrollingEnabled: false,\n      resourceCellComponent: ResourceCell,\n      editing: {\n        allowDeleting: false,\n        allowResizing: false,\n        allowUpdating: true,\n        allowDragging: true,\n        allowTaint: true\n      },\n      onAppointmentClick: e => this.onAppointmentSingleClick(e),\n      onAppointmentDblClick: e => this.onAppointmentDblClick(e),\n      onCellClick: e => this.onEmptyClick(e) //dateSerializationFormat=\"yyyy-MM-ddTHH:mm:ssZ\"\n      ,\n      appointmentComponent: AppointmentCell,\n      onCurrentViewChange: this.handleViewChange,\n      onCurrentDateChange: this.handleDateChange,\n      appointmentDragging: {\n        autoScroll: true,\n        scrollSpeed: 25,\n        group: {\n          draggingGroupName\n        },\n        onDragStart: e => this.onDragStart(e),\n        onDragEnd: e => this.onDragEnd(e)\n      },\n      scrolling: scrolling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      type: \"day\",\n      label: t(\"day\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      type: \"week\",\n      label: \"week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      type: \"month\",\n      label: \"month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Resource, {\n      dataSource: this.props.staffList,\n      fieldExpr: \"id\",\n      useColorAsDefault: true,\n      allowMultiple: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  basicApptDetail: state.appointment.basicApptDetail,\n  SchedulerSetting: state.appointment.SchedulerSetting,\n  tokenDetail: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const NewSchedulerModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(NewSchedulerModalClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/common/Plugins/NewScheduler.js"],"names":["React","Component","PureComponent","Scheduler","Resource","View","ResourceCell","fullscreenIcon","AppointmentCell","InputSearch","_","NormalButton","NormalSelect","NormalInput","NormalModal","StaffSorting","BlockPopup","PrintModal","Toast","html2canvas","dateFormat","getCommonApi","commonPatchApi","connect","bindActionCreators","TreatmentHistory","UpcomingAppointment","setting","AppointmentSettings","closeIcon","history","withTranslation","moment","groups","draggingGroupName","sleep","milliseconds","Promise","resolve","setTimeout","scrolling","mode","views","type","name","groupOrientation","intervalCount","maxAppointmentsPerCell","Dayview","NewSchedulerModalClass","state","selectedDate","Date","selectedView","DefaultDate","DefaultView","searchtext","SelectedList","isOpenModal","isOpenBlockModal","appointmentId","SchedulerHeight","isOpenPrintModal","formFields","groupByList","label","value","groupBy","customerNumber","customerId","clickCount","visible","customerOption","isSettingsClick","dayName","day","getDay","onEmptyClick","e","cancel","date","cellData","startDate","props","onAppointmentDblClick","setState","appointmentData","status","appt_id","handleBlockDialog","cust_id","custName","cust_name","custPhone","cust_phone","onAppointmentSingleClick","handleViewChange","handleChange","handleDateChange","console","log","newDate","newMode","prevMode","prevDate","handleChangeFilter","handleSearch","event","persist","target","debouncedFn","debounce","handleDialog","handleSettingDialog","prevState","handlePrintDialog","handleBack","handleNext","Snap","window","scrollTo","img","base64URL","document","querySelector","allowTaint","useCORS","logging","scale","removeContainer","then","canvas","toDataURL","replace","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","file","Blob","fileURL","URL","createObjectURL","a","createElement","setAttribute","click","open","documentElement","scrollHeight","getHoursFromDate","hour","getHours","minute","getMinutes","hours","minutes","onDragStart","itemData","Merged","message","onDragEnd","startTime","endTime","endDate","targetStaff","id","key","data","appt_Date","appt_date","split","finaldate","booking_status","ori_remark","source_id","room_id","secondary_status","channel_id","start_time","end_time","Item_Codeid","item_name","emp_id","add_duration","requesttherapist","recur_days","recur_qty","payload","Room_Codeid","appt_status","sec_status","edit_remark","item_id","item_text","res","getAppointmentWithStaff","handleTreatmentHistory","isTreatmentHistoryModal","handleUpcomingAppointment","isUpcomingAppointmentModal","handleSearchCustomer","customerList","basicApptDetail","search","branchId","handleClick","addEventListener","handleOutsideClick","removeEventListener","handleSettingClick","node","contains","handleSelectCustomer","cust_phone1","handleGroupbyChange","groupByAppointment","handleFullScreenClose","push","handleFullScreenOpen","componentDidMount","filterDate","filterType","onContentReady","currentHour","component","scrollToTime","render","tokenDetail","t","width","height","meta","pagination","total_pages","current_page","format","String","role_code","toUpperCase","location","pathname","minWidth","handleAppointmentSetting","map","item","index","cust_code","cust_refer","cust_email","cust_nric","staffList","SchedulerSetting","startday_hour","endday_hour","cell_duration","allowDeleting","allowResizing","allowUpdating","allowDragging","autoScroll","scrollSpeed","group","mapStateToProps","appointment","authStore","tokenDetails","mapDispatchToProps","dispatch","NewSchedulerModal"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from \"react\";\r\nimport \"./devExpressScheduler/Styles.scss\";\r\nimport Scheduler, { Resource, View } from \"devextreme-react/scheduler\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport ResourceCell from \"./devExpressScheduler/ResourceCell\";\r\nimport fullscreenIcon from \"assets/images/fullScreen.png\";\r\nimport AppointmentCell from \"./devExpressScheduler/AppointmentCell\";\r\nimport { InputSearch } from \"../InputSearch\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  NormalButton,\r\n  NormalSelect,\r\n  NormalInput,\r\n  NormalModal,\r\n} from \"component/common\";\r\nimport { StaffSorting } from \"../../Admin/NewAppointment/NewListAppointment/modal/StaffSorting\";\r\nimport { BlockPopup } from \"../../Admin/NewAppointment/NewListAppointment/modal/BlockPopup\";\r\nimport { PrintModal } from \"../../Admin/NewAppointment/NewListAppointment/modal/PrintModal\";\r\nimport { Toast } from \"service/toast\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { getCommonApi, commonPatchApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { TreatmentHistory } from \"component/Admin/NewAppointment/NewListAppointment/modal/TreatmentHistory\";\r\nimport { UpcomingAppointment } from \"component/Admin/NewAppointment/NewListAppointment/modal/UpcomingAppointment\";\r\nimport setting from \"assets/images/settings.png\";\r\nimport { AppointmentSettings } from \"./devExpressScheduler/AppointmentSettings\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { history } from \"helpers\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\n\r\nconst groups = [\"id\"];\r\nconst draggingGroupName = \"appointmentsGroup\";\r\nconst sleep = milliseconds => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n};\r\nconst scrolling = { mode: \"virtual\" };\r\nconst views = [\r\n  {\r\n    type: \"day\",\r\n    name: \"day\",\r\n    groupOrientation: \"Horizontally\",\r\n    intervalCount: 1,\r\n  },\r\n  {\r\n    type: \"week\",\r\n    name: \"week\",\r\n    groupOrientation: \"vertical\",\r\n    intervalCount: 1,\r\n    maxAppointmentsPerCell: \"unlimited\",\r\n  },\r\n  {\r\n    type: \"month\",\r\n    name: \"month\",\r\n    intervalCount: 1,\r\n    groupOrientation: \"vertical\",\r\n    maxAppointmentsPerCell: \"unlimited\",\r\n  },\r\n];\r\nconst Dayview = [\r\n  {\r\n    type: \"day\",\r\n    name: \"day\",\r\n    groupOrientation: \"Horizontally\",\r\n    intervalCount: 1,\r\n  },\r\n];\r\n\r\nexport class NewSchedulerModalClass extends PureComponent {\r\n  state = {\r\n    selectedDate: new Date(),\r\n    selectedView: \"\",\r\n    DefaultDate: new Date(),\r\n    DefaultView: \"\",\r\n    searchtext: \"\",\r\n    SelectedList: [],\r\n    isOpenModal: false,\r\n    isOpenBlockModal: false,\r\n    appointmentId: 0,\r\n    SchedulerHeight: \"90%\",\r\n    isOpenPrintModal: false,\r\n    formFields: [],\r\n    groupByList: [\r\n      { label: \"Group by Staff\", value: \"staff\" },\r\n      { label: \"Group by Department\", value: \"department\" },\r\n      { label: \"Group by Room\", value: \"room\" },\r\n    ],\r\n    groupBy: \"staff\",\r\n    customerNumber: 0,\r\n    customerId: 0,\r\n    clickCount: 0,\r\n    visible: false,\r\n    customerOption: [],\r\n    isSettingsClick: false,\r\n    dayName :['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n    day:new Date().getDay(),\r\n  };\r\n\r\n  onEmptyClick = e => {\r\n    e.cancel = true;\r\n    let date = new Date(e.cellData.startDate);\r\n    if (e.cellData.groups) {\r\n      this.props.onEmptyClick(date, e.cellData);\r\n    }\r\n  };\r\n\r\n  onAppointmentDblClick = async e => {\r\n    e.cancel = true;\r\n    await this.setState({ appointmentId: 0 });\r\n    let date = new Date(e.appointmentData.startDate);\r\n    if (e.appointmentData.status === \"Block\") {\r\n      await this.setState({ appointmentId: e.appointmentData.appt_id });\r\n      this.handleBlockDialog();\r\n    } else {\r\n      this.props.onEmptyClick(date, e.appointmentData);\r\n      await this.setState({\r\n        customerId: e.appointmentData.cust_id,\r\n        custName: e.appointmentData.cust_name,\r\n        custPhone: e.appointmentData.cust_phone,\r\n      });\r\n    }\r\n  };\r\n\r\n  onAppointmentSingleClick = async e => {\r\n    e.cancel = true;\r\n    await sleep(500);\r\n    if (e.appointmentData.status !== \"Block\") {\r\n      await this.setState({\r\n        customerId: e.appointmentData.cust_id,\r\n        custName: e.appointmentData.cust_name,\r\n        custPhone: e.appointmentData.cust_phone,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      DefaultDate: this.props.filterDate,\r\n      DefaultView: this.props.filterType,\r\n    });\r\n  }\r\n\r\n  handleViewChange = async e => {\r\n    //if (this.props.staffList.length > 0) {\r\n    await this.setState({\r\n      selectedView: e,\r\n    });\r\n    this.handleChange();\r\n    //}\r\n  };\r\n\r\n  handleDateChange = async e => {\r\n    let {day} = this.state;\r\n    if (this.state.selectedDate !== e) {\r\n      await this.setState({\r\n        selectedDate: e,\r\n      });\r\n      this.handleChange();\r\n    }\r\n   day = moment(this.state.selectedDate).day();\r\n    this.setState({day});\r\n    console.log(day)\r\n  };\r\n\r\n  handleChange = () => {\r\n    let { selectedDate, selectedView, DefaultDate, DefaultView, searchtext } =\r\n      this.state;\r\n    let newDate = new Date();\r\n    let newMode = \"\";\r\n    let prevMode = DefaultView;\r\n    let prevDate = DefaultDate;\r\n    if (selectedView) {\r\n      newMode = selectedView;\r\n    } else {\r\n      newMode = DefaultView;\r\n    }\r\n    if (selectedDate) {\r\n      newDate = selectedDate;\r\n    } else {\r\n      newDate = selectedDate;\r\n    }\r\n    this.props.handleChangeFilter(\r\n      prevMode,\r\n      prevDate,\r\n      newMode,\r\n      newDate,\r\n      searchtext\r\n    );\r\n  };\r\n\r\n  onContentReady(e) {\r\n    //sleep(500);\r\n    console.log(e, \"oncontentreadylog\");\r\n    const currentHour = new Date().getHours() - 1;\r\n    e.component.scrollToTime(currentHour, 30, new Date());\r\n  }\r\n\r\n  handleSearch = async event => {\r\n    event.persist();\r\n    await this.setState({ searchtext: event.target.value });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(() => {\r\n        this.handleChange();\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  handleDialog = () => {\r\n    let { isOpenModal } = this.state;\r\n    isOpenModal = !isOpenModal;\r\n    this.setState({\r\n      isOpenModal,\r\n    });\r\n  };\r\n  handleSettingDialog = () => {\r\n    let { isSettingsClick } = this.state;\r\n    isSettingsClick = !isSettingsClick;\r\n    this.setState({\r\n      isSettingsClick,\r\n    });\r\n  };\r\n  handleBlockDialog = async () => {\r\n    await this.setState(prevState => ({\r\n      isOpenBlockModal: !prevState.isOpenBlockModal,\r\n    }));\r\n    await this.setState({ appointmentId: 0 });\r\n  };\r\n  handlePrintDialog = () => {\r\n    let { isOpenPrintModal } = this.state;\r\n    isOpenPrintModal = !isOpenPrintModal;\r\n    this.setState({\r\n      isOpenPrintModal,\r\n    });\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.handleBack();\r\n  };\r\n  handleNext = () => {\r\n    this.props.handleNext();\r\n  };\r\n  Snap = async () => {\r\n    await this.setState({\r\n      SchedulerHeight: \"350%\",\r\n    });\r\n    await sleep(2000); //\r\n    window.scrollTo(0, 0);\r\n    let img = \"\";\r\n    let base64URL = \"\";\r\n\r\n    html2canvas(document.querySelector(\"#Scheduler\"), {\r\n      allowTaint: true,\r\n      useCORS: true,\r\n      logging: false,\r\n      scale: 1,\r\n      removeContainer: true,\r\n    }).then(function (canvas) {\r\n      img = canvas.toDataURL(\"image/png\", 1);\r\n      base64URL = img.replace(\"image/png\", \"image/octet-stream\");\r\n      var byteCharacters = atob(\r\n        img.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\")\r\n      );\r\n      var byteNumbers = new Array(byteCharacters.length);\r\n      for (var i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      var byteArray = new Uint8Array(byteNumbers);\r\n      var file = new Blob([byteArray], { type: \"image/png\" + \";base64\" });\r\n      var fileURL = URL.createObjectURL(file);\r\n      var a = document.createElement(\"a\");\r\n      a.setAttribute(\"download\", \"myImage.png\");\r\n      a.setAttribute(\"href\", base64URL);\r\n      a.click();\r\n      window.open(fileURL);\r\n    });\r\n    window.scrollTo(0, document.documentElement.scrollHeight);\r\n    await this.setState({\r\n      SchedulerHeight: \"90%\",\r\n    });\r\n  };\r\n\r\n  getHoursFromDate = date => {\r\n    let hour = new Date(date).getHours();\r\n    let minute = new Date(date).getMinutes();\r\n    let hours = hour > 9 ? hour : \"0\" + hour;\r\n    let minutes = minute > 9 ? minute : \"0\" + minute;\r\n    return hours + \":\" + minutes;\r\n  };\r\n  // onDragStart = async e => {\r\n  //   if (e.itemData.status === \"Block\") {\r\n  //     e.cancel = true;\r\n  //   } else {\r\n  //     await sleep(300);\r\n  //     this.getDraggedData(e.itemData.appt_id);\r\n  //   }\r\n  // };\r\n  onDragStart = async e => {\r\n    console.log(e, \"drag start data\");\r\n    if (e.itemData.status === \"Block\") {\r\n      e.cancel = true;\r\n    } else if (e.itemData.Merged) {\r\n      e.cancel = true;\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Merged appointment not allowed for dragging\",\r\n      });\r\n    }\r\n  };\r\n\r\n  onDragEnd = async e => {\r\n    await sleep(500);\r\n    if (e.itemData.appt_id) {\r\n      let { formFields } = this.state;\r\n      let startTime = this.getHoursFromDate(e.itemData.startDate);\r\n      let endTime = this.getHoursFromDate(e.itemData.endDate);\r\n      let targetStaff = e.itemData.id;\r\n      this.props\r\n        .getCommonApi(`appointmentresources/${e.itemData.appt_id}/`)\r\n        .then(async key => {\r\n          let { status, data } = key;\r\n          console.log(key, \"drag end data response\");\r\n          let appt_Date = data.appt_date;\r\n          let date = appt_Date.split(\"/\");\r\n          let finaldate = date[2] + \"-\" + date[1] + \"-\" + date[0];\r\n          if (status === 200) {\r\n            formFields[\"appt_id\"] = e.itemData.appt_id;\r\n            formFields[\"custName\"] = data.cust_name;\r\n            formFields[\"appointmentDate\"] = finaldate;\r\n            formFields[\"bookingStatus\"] = data.booking_status;\r\n            formFields[\"new_remark\"] = data.ori_remark;\r\n            formFields[\"customerName\"] = data.cust_id;\r\n            formFields[\"Source_Codeid\"] = data.source_id;\r\n            formFields[\"Room_Codeid\"] = data.room_id;\r\n            formFields[\"sec_status\"] = data.secondary_status;\r\n            formFields[\"Appt_typeid\"] = data.channel_id;\r\n\r\n            formFields[\"start_time\"] = data ? data.start_time : \"\";\r\n            formFields[\"end_time\"] = data ? data.end_time : \"\";\r\n            formFields[\"Item_Codeid\"] = data.Item_Codeid;\r\n            formFields[\"Item_CodeName\"] = data.item_name;\r\n            formFields[\"emp_no\"] = data.emp_id;\r\n            formFields[\"add_duration\"] = data.add_duration;\r\n            formFields[\"edit_remark\"] = \"\";\r\n            formFields[\"requesttherapist\"] = data.requesttherapist;\r\n            formFields[\"recur_days\"] = data.recur_days;\r\n            formFields[\"recur_qty\"] = data.recur_qty;\r\n            formFields[\"item_text\"] = data.item_name;\r\n\r\n            if (\r\n              formFields[\"start_time\"] !== startTime ||\r\n              formFields[\"emp_no\"] !== targetStaff\r\n            ) {\r\n              formFields[\"appointmentDate\"] = e.itemData.endDate;\r\n              formFields[\"start_time\"] = startTime;\r\n              formFields[\"end_time\"] = endTime;\r\n              formFields[\"emp_no\"] = targetStaff;\r\n              formFields[\"item_text\"] = e.itemData.item_name;\r\n              formFields[\"recur_days\"] = null;\r\n              formFields[\"recur_qty\"] = null;\r\n              await this.setState({ formFields });\r\n              let payload = {\r\n                appt_date: dateFormat(\r\n                  new Date(e.itemData.endDate),\r\n                  \"yyyy-mm-dd\"\r\n                ),\r\n                Room_Codeid: data.room_id,\r\n                appt_status: data.booking_status,\r\n                sec_status: data.secondary_status,\r\n                edit_remark: \"\",\r\n                start_time: startTime,\r\n                end_time: endTime,\r\n                item_id: data.Item_Codeid,\r\n                add_duration: data.add_duration,\r\n                emp_id: targetStaff,\r\n                requesttherapist: data.requesttherapist,\r\n                item_text: e.itemData.item_name,\r\n                recur_qty: null,\r\n                recur_days: null,\r\n              };\r\n\r\n              this.props\r\n                .commonPatchApi(\r\n                  `appointmentresources/${e.itemData.appt_id}/`,\r\n                  payload\r\n                )\r\n                .then(async res => {});\r\n            }\r\n          }\r\n        });\r\n    }\r\n    this.props.getAppointmentWithStaff();\r\n  };\r\n\r\n  handleTreatmentHistory = () => {\r\n    let { customerId } = this.state;\r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isTreatmentHistoryModal: !prevState.isTreatmentHistoryModal,\r\n        customerNumber: this.state.customerId,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n  handleUpcomingAppointment = () => {\r\n    let { customerId } = this.state;\r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isUpcomingAppointmentModal: !prevState.isUpcomingAppointmentModal,\r\n        customerNumber: this.state.customerId,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n  handleSearchCustomer = async event => {\r\n    //    event.persist();\r\n    let { custName, visible } = this.state;\r\n    custName = event.target.value;\r\n    visible = true;\r\n    await this.setState({ custName, visible });\r\n    console.log(this.state.custName);\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {\r\n        let { customerList } = this.state;\r\n        let { basicApptDetail } = this.props;\r\n        this.search(basicApptDetail);\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  search = basicApptDetail => {\r\n    let { custName } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `custappt/?Outlet=${\r\n          basicApptDetail.branchId ? basicApptDetail.branchId : \"\"\r\n        }&search=${custName}`\r\n      )\r\n      .then(key => {\r\n        // this.props.getCommonApi(`custappt/?search=${custName}`).then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          this.setState({ customerOption: data });\r\n        }\r\n      });\r\n  };\r\n  handleClick = key => {\r\n    if (!this.state.visible) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    if (this.state.visible) {\r\n      let { basicApptDetail } = this.props;\r\n      this.search(basicApptDetail);\r\n    }\r\n    this.setState(prevState => ({\r\n      visible: !prevState.visible,\r\n    }));\r\n  };\r\n  handleSettingClick = key => {\r\n    this.setState(prevState => ({\r\n      isSettingsClick: !prevState.isSettingsClick,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleClick();\r\n  };\r\n  handleSelectCustomer = async data => {\r\n    console.log(data, \"selectCustomer\");\r\n    await this.setState({\r\n      customerId: data.id,\r\n      custName: data.cust_name,\r\n      custPhone: data.cust_phone1,\r\n    });\r\n    this.handleClick();\r\n  };\r\n  handleGroupbyChange = async ({ target: { value, name } }) => {\r\n    if (value == \"\") {\r\n      value = \"staff\";\r\n    }\r\n    if (value !== this.state.groupBy) {\r\n      this.setState({\r\n        groupBy: value,\r\n      });\r\n      this.props.groupByAppointment(value);\r\n    }\r\n  };\r\n  handleFullScreenClose = () => {\r\n    history.push(\"/admin/newappointment\");\r\n    this.setState({ SchedulerHeight: \"70%\" });\r\n  };\r\n  handleFullScreenOpen = () => {\r\n    history.push(\"/admin/newappointmentfullscreen\");\r\n    this.setState({ SchedulerHeight: \"100%\" });\r\n  };\r\n  render() {\r\n    let {\r\n      isOpenModal,\r\n      isOpenBlockModal,\r\n      appointmentId,\r\n      SchedulerHeight,\r\n      isOpenPrintModal,\r\n      groupBy,\r\n      isTreatmentHistoryModal,\r\n      isUpcomingAppointmentModal,\r\n      customerNumber,\r\n      visible,\r\n      customerOption,\r\n      selectedDate,\r\n      isSettingsClick,\r\n      dayName,\r\n    } = this.state;\r\n    let { filterDate, tokenDetail, t } = this.props;\r\n\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        <StaffSorting\r\n          isOpenModal={isOpenModal}\r\n          handleDialog={this.handleDialog}\r\n          handleChange={this.handleChange}\r\n          filterDate={filterDate}\r\n        />\r\n        {isOpenBlockModal ? (\r\n          <BlockPopup\r\n            isOpenBlockModal={isOpenBlockModal}\r\n            handleBlockDialog={this.handleBlockDialog}\r\n            handleChange={this.handleChange}\r\n            filterDate={filterDate}\r\n            appointmentId={appointmentId}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {isOpenPrintModal ? (\r\n          <PrintModal\r\n            isOpenPrintModal={isOpenPrintModal}\r\n            handlePrintDialog={this.handlePrintDialog}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div className=\"d-flex justify-content-start m-1 p-1\">\r\n          {this.props.meta ? (\r\n            <div className=\"col-md-1 col-12 text-right\">\r\n              {this.props.meta.pagination &&\r\n              this.props.meta.pagination.total_pages > 1 ? (\r\n                <div>\r\n                  {this.props.meta.pagination.total_pages <\r\n                    this.props.meta.pagination.current_page ||\r\n                  this.props.meta.pagination.current_page > 1 ||\r\n                  this.props.meta.pagination.total_pages ==\r\n                    this.props.meta.pagination.current_page ? (\r\n                    <button\r\n                      className=\"cursor-pointer dx-button-content disabled\"\r\n                      onClick={this.handleBack}\r\n                    >\r\n                      <svg\r\n                        width=\"9\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 6 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M5 0.5L1 5L5 9.5\"\r\n                          stroke=\"#888888\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {/* <span className=\"dx-button-staff-content\"> Staff </span> */}\r\n                  {this.props.meta.pagination.total_pages >\r\n                    this.props.meta.pagination.current_page &&\r\n                  this.props.meta.pagination.total_pages !==\r\n                    this.props.meta.pagination.current_page &&\r\n                  this.props.meta.pagination.current_page > 0 ? (\r\n                    <button\r\n                      className=\"cursor-pointer dx-button-content\"\r\n                      onClick={this.handleNext}\r\n                    >\r\n                      <svg\r\n                        width=\"9\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 6 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M0.5 9.5L4.5 5L0.5 0.5\"\r\n                          stroke=\"#888888\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"col-md-1\">\r\n            <NormalButton\r\n              buttonClass={\"p-0 mr-1\"}\r\n              mainbg={true}\r\n              className=\"fs-15 submit-btn\"\r\n              label={`Today`}\r\n              outline={false}\r\n              onClick={() => {\r\n                this.handleDateChange(new Date());\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-12\">\r\n            <div className=\"d-flex flex-nowrap\">\r\n              <NormalInput\r\n                className=\"col-md-6 mr-1\"\r\n                placeholder=\"customer..\"\r\n                value={this.state.custName}\r\n                name=\"custName\"\r\n                onChange={this.handleSearchCustomer}\r\n                onClick={this.handleClick}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"mr-1\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 m-0 p-1\"\r\n                label=\"Upcoming\"\r\n                onClick={this.handleUpcomingAppointment}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"mr-1\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"History\"\r\n                onClick={this.handleTreatmentHistory}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-2 w-100\">\r\n            {/*<NormalSelect\r\n              options={this.state.groupByList}\r\n              placeholderrequired={`false`}\r\n              value={this.state.groupBy}\r\n              name=\"groupBy\"\r\n              onChange={this.handleGroupbyChange}\r\n              className=\"status py-1\"\r\n              label={t(\"Group by Staff\")}\r\n            />*/}\r\n            <NormalInput\r\n            name = \"selecteddate\"\r\n            value = {dayName[this.state.day]  + \" \" + moment(selectedDate).format(\"DD/MM/YYYY\")}\r\n            disabled ={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-5 col-12\">\r\n            <div className=\"d-flex flex-nowrap\">\r\n              <NormalButton\r\n                buttonClass={\"p-0 mr-1\"}\r\n                mainbg={true}\r\n                className=\" fs-14 confirm mr-1\"\r\n                label={t(\"Snap\")}\r\n                outline={false}\r\n                onClick={this.Snap}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"p-0 mr-1\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm mr-1\"\r\n                label={`Print`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenPrintModal: true });\r\n                }}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"p-0 mr-1\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm mr-1\"\r\n                label={`Sort`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenModal: true });\r\n                }}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"p-0 mr-1\"}\r\n                mainbg={true}\r\n                className=\"fs-15 confirm\"\r\n                label={`Block`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenBlockModal: true });\r\n                }}\r\n              />\r\n\r\n              <div className=\"col-md-4\">\r\n                <InputSearch\r\n                  placeholder=\"Search here..\"\r\n                  value={this.state.searchtext}\r\n                  onChange={this.handleSearch}\r\n                  name=\"searchtext\"\r\n                />\r\n              </div>\r\n              {String(tokenDetail.role_code).toUpperCase() === \"1\" ? (\r\n                <img\r\n                  onClick={this.handleSettingClick}\r\n                  className=\"close cursor-pointer\"\r\n                  src={setting}\r\n                  alt=\"\"\r\n                  width=\"35\"\r\n                  height=\"35\"\r\n                />\r\n              ) : null}\r\n              <div className=\"ml-3 pt-1\">\r\n                <img\r\n                  style={{ width: 30 }}\r\n                  onClick={\r\n                    window.location.pathname ==\r\n                    \"/admin/newappointmentfullscreen\"\r\n                      ? this.handleFullScreenClose\r\n                      : this.handleFullScreenOpen\r\n                  }\r\n                  className=\"close cursor-pointer tooltip-img ml-1\"\r\n                  src={fullscreenIcon}\r\n                  alt=\"\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"bottom\"\r\n                  title={\r\n                    window.location.pathname ==\r\n                    \"/admin/newappointmentfullscreen\"\r\n                      ? \"Exit Fullscreen Mode\"\r\n                      : \"Fullscreen Mode\"\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <NormalModal\r\n                className={\"transaction-done-modal top-up-modal\"}\r\n                style={{ minWidth: \"55%\" }}\r\n                modal={isSettingsClick}\r\n                handleModal={this.handleSettingDialog}\r\n              >\r\n                <img\r\n                  onClick={this.handleSettingDialog}\r\n                  className=\"close cursor-pointer\"\r\n                  src={closeIcon}\r\n                  alt=\"\"\r\n                />\r\n                <AppointmentSettings\r\n                  handleModal={this.handleSettingDialog}\r\n                  handleSettingChange={this.props.handleAppointmentSetting}\r\n                />\r\n              </NormalModal>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {isTreatmentHistoryModal ? (\r\n          <TreatmentHistory\r\n            isTreatmentHistoryModal={isTreatmentHistoryModal}\r\n            handleTreatmentHistory={this.handleTreatmentHistory}\r\n            customerNumber={this.state.customerNumber}\r\n            custName={this.state.custName}\r\n            custPhone={this.state.custPhone}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {isUpcomingAppointmentModal ? (\r\n          <UpcomingAppointment\r\n            isUpcomingAppointmentModal={isUpcomingAppointmentModal}\r\n            handleUpcomingAppointment={this.handleUpcomingAppointment}\r\n            customerNumber={this.state.customerNumber}\r\n            custName={this.state.custName}\r\n            custPhone={this.state.custPhone}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {visible ? (\r\n          <div className=\"AppointmentStaffList\">\r\n            <div className=\"customerSearch-block\">\r\n              <div className=\"d-flex mt-4 table table-header w-100 m-0\">\r\n                <div className=\"col-2\">{t(\"Name\")}</div>\r\n                <div className=\"col-2\">{t(\"Phone\")}</div>\r\n                <div className=\"col-2\">{t(\"Customer Code\")}</div>\r\n                <div className=\"col-2\">{t(\"Reference\")}</div>\r\n                <div className=\"col-3\">{t(\"Email\")}</div>\r\n                <div className=\"col-1\">{t(\"NRIC\")}</div>\r\n              </div>\r\n              <div className=\"response-table w-100\">\r\n                {customerOption.length > 0 ? (\r\n                  customerOption.map((item, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"row m-0 table-body w-100 border\"\r\n                        onClick={() => this.handleSelectCustomer(item)}\r\n                        key={index}\r\n                      >\r\n                        <div className=\"col-2\">{item.cust_name}</div>\r\n                        <div className=\"col-2\">{item.cust_phone1}</div>\r\n                        <div className=\"col-2\">{item.cust_code}</div>\r\n                        <div className=\"col-2\">{item.cust_refer}</div>\r\n                        <div className=\"col-3\">{item.cust_email}</div>\r\n                        <div className=\"col-1\">{item.cust_nric}</div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div className=\"text-center w-100\">\r\n                    {t(\"No Data are available\")}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <Scheduler\r\n          id=\"Scheduler\"\r\n          className=\"col-12 m-0 p-0\"\r\n          height={SchedulerHeight}\r\n          dataSource={this.props.staffList.length > 0 ? this.props.event : \"\"}\r\n          // views={this.props.staffList.length > 0 ? views : Dayview}\r\n          views={views}\r\n          //onContentReady={this.onContentReady}\r\n          defaultCurrentView=\"day\"\r\n          currentDate={selectedDate}\r\n          defaultCurrentDate={new Date()}\r\n          groups={this.props.staffList.length > 0 ? groups : \"\"}\r\n          // startDayHour={8}\r\n          // endDayHour={21}\r\n          // cellDuration={15}\r\n          startDayHour={\r\n            this.props.SchedulerSetting.startday_hour\r\n              ? this.props.SchedulerSetting.startday_hour\r\n              : 8\r\n          }\r\n          endDayHour={\r\n            this.props.SchedulerSetting.endday_hour\r\n              ? this.props.SchedulerSetting.endday_hour\r\n              : 21\r\n          }\r\n          cellDuration={\r\n            this.props.SchedulerSetting.cell_duration\r\n              ? this.props.SchedulerSetting.cell_duration\r\n              : 15\r\n          }\r\n          firstDayOfWeek={0}\r\n          showAllDayPanel={false}\r\n          crossScrollingEnabled={false}\r\n          resourceCellComponent={ResourceCell}\r\n          editing={{\r\n            allowDeleting: false,\r\n            allowResizing: false,\r\n            allowUpdating: true,\r\n            allowDragging: true,\r\n            allowTaint: true,\r\n          }}\r\n          onAppointmentClick={e => this.onAppointmentSingleClick(e)}\r\n          onAppointmentDblClick={e => this.onAppointmentDblClick(e)}\r\n          onCellClick={e => this.onEmptyClick(e)}\r\n          //dateSerializationFormat=\"yyyy-MM-ddTHH:mm:ssZ\"\r\n          appointmentComponent={AppointmentCell}\r\n          onCurrentViewChange={this.handleViewChange}\r\n          onCurrentDateChange={this.handleDateChange}\r\n          appointmentDragging={{\r\n            autoScroll: true,\r\n            scrollSpeed: 25,\r\n            group: { draggingGroupName },\r\n            onDragStart: e => this.onDragStart(e),\r\n            onDragEnd: e => this.onDragEnd(e),\r\n          }}\r\n          scrolling={scrolling}\r\n        >\r\n          <View type=\"day\" label={t(\"day\")} />\r\n          <View type=\"week\" label=\"week\" />\r\n          <View type=\"month\" label=\"month\" />\r\n          <Resource\r\n            dataSource={this.props.staffList}\r\n            fieldExpr=\"id\"\r\n            useColorAsDefault={true}\r\n            allowMultiple={false}\r\n          />\r\n        </Scheduler>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  SchedulerSetting: state.appointment.SchedulerSetting,\r\n  tokenDetail: state.authStore.tokenDetails,\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const NewSchedulerModal = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(NewSchedulerModalClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}