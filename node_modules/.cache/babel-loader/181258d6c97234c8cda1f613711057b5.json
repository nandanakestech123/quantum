{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Staff\\\\AddStaff\\\\index.js\";\nimport React, { Component } from 'react';\nimport \"./style.scss\";\nimport { Link } from 'react-router-dom';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { NormalInput, NormalSelect, NormalButton, NormalDate, NormalMultiSelect, NormalDateTime } from 'component/common';\nimport { displayImg, dateFormat } from 'service/helperFunctions';\nimport { DragFileUpload } from '../../../common';\nimport { createStaff, getStaff, updateStaff } from 'redux/actions/staff';\nimport { getBranch, getJobtitle, getShift, getSkills, getCommonApi } from 'redux/actions/common';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { FormGroup, Label, Input } from 'reactstrap';\nexport class AddStaffClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        emp_name: '',\n        emp_phone1: '',\n        emp_joindate: '',\n        defaultSiteCodeid: '',\n        skills_list: '',\n        emp_address: '',\n        Emp_sexesid: '',\n        shift: [],\n        emp_dob: '',\n        EMP_TYPEid: '',\n        emp_pic: \"\",\n        is_login: false,\n        pw_password: \"\",\n        LEVEL_ItmIDid: \"\",\n        emp_email: \"\"\n      },\n      imageArray: [],\n      jobOption: [],\n      shiftOptions: [],\n      locationOption: [],\n      sexOption: [{\n        value: 1,\n        label: \"Male\"\n      }, {\n        value: 2,\n        label: \"Female\"\n      }],\n      skillsOptions: [],\n      selectedSkills: [],\n      levelList: []\n    };\n\n    this.getStaffDetail = async () => {\n      let {\n        selectedSkills,\n        formFields\n      } = this.state;\n      await this.props.getStaff(`${this.props.match.params.id}/`).then(res => {\n        this.setDataFromStore();\n      });\n      await this.props.getShift(`?employee=${this.props.match.params.id}`).then(() => {\n        this.getDatafromStore('shift');\n        let {\n          skillsList\n        } = this.props; // for (let key of skillsList) {\n        //     for (let value of formFields.skills_list) {\n        //         if (key.id === value) {\n        //             selectedSkills.push({ value: key.value, label: key.label })\n        //         }\n        //     }\n        // }\n\n        this.getDefaultSkills();\n      });\n      this.setState({\n        selectedSkills\n      });\n    };\n\n    this.getDefaultSkills = () => {\n      let {\n        selectedSkills,\n        formFields,\n        skillsOptions\n      } = this.state;\n      selectedSkills = [];\n\n      for (let value of formFields.skills_list) {\n        console.log(selectedSkills, \"dfssfgsdfgsdfg\", value, skillsOptions);\n\n        for (let key of skillsOptions) {\n          if (key.value === value) {\n            console.log(selectedSkills, \"dfssfgsdfgsdfg =========\", key, value);\n            selectedSkills.push({\n              value: key.value,\n              label: key.label\n            });\n          }\n        }\n      }\n\n      this.setState({\n        selectedSkills\n      });\n    };\n\n    this.getDatafromStore = async type => {\n      let {\n        branchList,\n        jobtitleList,\n        shiftList,\n        skillsList\n      } = this.props;\n      let {\n        jobOption,\n        shiftOptions,\n        locationOption,\n        skillsOptions\n      } = this.state;\n\n      if (type === 'jobtitle') {\n        for (let key of jobtitleList) {\n          jobOption.push({\n            label: key.level_desc,\n            value: key.id\n          });\n        }\n      } else if (type === 'branch') {\n        for (let key of branchList) {\n          locationOption.push({\n            label: key.itemsite_desc,\n            value: key.id\n          });\n        }\n      } else if (type === 'shift') {\n        for (let key of shiftList) {\n          shiftOptions.push({\n            label: key.shift_name,\n            value: key.id\n          });\n        }\n      } else if (type === 'skills') {\n        for (let key of skillsList) {\n          skillsOptions.push({\n            value: key.id,\n            label: key.item_desc\n          });\n        }\n      }\n\n      await this.setState({\n        locationOption,\n        jobOption,\n        shiftOptions,\n        skillsOptions\n      });\n      this.getDefaultSkills();\n    };\n\n    this.setDataFromStore = () => {\n      let {\n        staffDetail\n      } = this.props;\n      let {\n        formFields\n      } = this.state; // console.log(\"ufjdfjssd staff\", staffDetail, formFields)\n\n      formFields['emp_name'] = staffDetail.emp_name;\n      formFields['emp_phone1'] = staffDetail.emp_phone1;\n      formFields['emp_joindate'] = new Date(staffDetail.emp_joindate);\n      formFields['defaultSiteCodeid'] = staffDetail.defaultSiteCodeid;\n      formFields['skills_list'] = staffDetail.skills;\n      formFields['emp_address'] = staffDetail.emp_address;\n      formFields['Emp_sexesid'] = staffDetail.Emp_sexesid;\n      formFields['shift'] = staffDetail.shift;\n      formFields['emp_dob'] = new Date(staffDetail.emp_dob);\n      formFields['EMP_TYPEid'] = staffDetail.EMP_TYPEid;\n      formFields['emp_pic'] = staffDetail.emp_pic;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleDatePick = async (name, value) => {\n      console.log(name, value, \"sdfgdfhfshg\", dateFormat(new Date())); // dateFormat(new Date())\n\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value; // formFields[name] = value;\n\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.handleInput = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value === true ? 1 : value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleImageUpload = file => {\n      let {\n        formFields\n      } = this.state;\n      formFields['emp_pic'] = file;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.removepostImage = (e, name) => {\n      let {\n        staffImage\n      } = this.state.formFields;\n      let index = staffImage.indexOf(name);\n\n      if (index === 0) {\n        staffImage.shift();\n      } else {\n        staffImage.pop();\n      }\n\n      this.setState({\n        staffImage\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.validator.allValid()) {\n        let {\n          formFields\n        } = this.state;\n        const formData = new FormData();\n        formData.append('emp_name', formFields.emp_name);\n        formData.append('emp_phone1', formFields.emp_phone1);\n        formData.append('emp_joindate', dateFormat(formFields.emp_joindate)); // if (formFields.defaultSiteCodeid === \"\") {\n\n        formData.append('defaultSiteCodeid', formFields.defaultSiteCodeid); // }\n\n        formData.append('skills_list', formFields.skills_list);\n        formData.append('emp_address', formFields.emp_address);\n        formData.append('Emp_sexesid', formFields.Emp_sexesid); // formData.append('shift', formFields.shift)\n\n        formData.append('emp_dob', dateFormat(formFields.emp_dob));\n        formData.append('EMP_TYPEid', formFields.EMP_TYPEid);\n        formData.append('is_login', formFields.is_login);\n        formData.append('pw_password', formFields.pw_password);\n        formData.append('LEVEL_ItmIDid', formFields.LEVEL_ItmIDid);\n        formData.append('emp_pic', formFields.emp_pic);\n        formData.append('emp_email', formFields.emp_email);\n\n        if (this.props.match.params.id) {\n          this.props.updateStaff(`${this.props.match.params.id}/`, formData).then(res => {\n            console.log(res);\n\n            if (res.status === 200) {\n              this.props.history.push(`/admin/staff/${res.data.id}/staffDetails`);\n            }\n          });\n        } else {\n          this.props.createStaff(formData).then(res => {\n            console.log(res);\n\n            if (res.status === 201) {\n              this.props.history.push(`/admin/staff`);\n            }\n          });\n        }\n      } else {\n        this.validator.showMessages();\n      }\n    };\n\n    this.handleMultiSelect = data => {\n      let {\n        formFields\n      } = this.state;\n      let list = [];\n\n      for (let key of data) {\n        list.push(key.value);\n      }\n\n      formFields['skills_list'] = list;\n      this.setState({\n        formFields\n      });\n      console.log(formFields, \"oyokkjk\");\n    };\n\n    this.handleChangeBox = event => {\n      let formFields = Object.assign({}, this.state.formFields);\n      console.log(formFields, \"oyokkjk\", event.target.name, event.target);\n      formFields[event.target.name] = event.target.checked;\n      this.setState({\n        formFields\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      validators: {\n        contactNumber: {\n          message: 'The :attribute must be a valid format.',\n          rule: (val, params, validator) => {\n            return validator.helpers.testRegex(val, /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/) && params.indexOf(val) === -1;\n          },\n          messageReplace: (message, params) => message.replace('', this.helpers.toSentence(params)),\n          required: true\n        }\n      },\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      }, message),\n      autoForceUpdate: this\n    }); // branch option api \n\n    this.props.getCommonApi(\"branchlist/\").then(res => {\n      let {\n        locationOption\n      } = this.state;\n\n      for (let key of res.data) {\n        locationOption.push({\n          value: key.id,\n          label: key.itemsite_desc\n        });\n      }\n\n      this.setState({\n        locationOption\n      });\n    }); // level option api \n\n    this.props.getCommonApi(\"securities/\").then(res => {\n      let {\n        levelList\n      } = this.state;\n\n      for (let key of res.data) {\n        levelList.push({\n          value: key.id,\n          label: key.level_name\n        });\n      }\n\n      this.setState({\n        levelList\n      });\n    }); // jobtitle option api\n\n    this.props.getJobtitle().then(() => {\n      this.getDatafromStore('jobtitle');\n    }); // get api for staff while\n\n    if (this.props.match.params.id) {\n      this.getStaffDetail();\n    } // skills option api\n\n\n    this.props.getSkills().then(() => {\n      this.getDatafromStore('skills');\n    });\n  } // get api for staff\n\n\n  render() {\n    let {\n      formFields,\n      jobOption,\n      shiftOptions,\n      locationOption,\n      sexOption,\n      skillsOptions,\n      selectedSkills,\n      levelList\n    } = this.state;\n    let {\n      emp_name,\n      emp_email,\n      emp_phone1,\n      emp_joindate,\n      defaultSiteCodeid,\n      skills_list,\n      emp_address,\n      Emp_sexesid,\n      shift,\n      emp_dob,\n      EMP_TYPEid,\n      emp_pic,\n      is_login,\n      pw_password,\n      LEVEL_ItmIDid\n    } = formFields;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-5 container create-staff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-label-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, \"Staffs \"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-right mx-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }, \"Add \", this.props.match.params.id ? \"Edit\" : \"New\", \" Staff\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"staff-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    }, \"Staff Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: emp_name,\n      name: \"emp_name\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 37\n      }\n    })), this.validator.message('staff name', emp_name, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 33\n      }\n    }, \"Job Title\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: jobOption,\n      value: EMP_TYPEid,\n      name: \"EMP_TYPEid\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 37\n      }\n    })), this.validator.message('job tilte', EMP_TYPEid, 'required')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 33\n      }\n    }, \"Skills\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 33\n      }\n    }, !this.props.match.params.id ? skillsOptions.length > 0 ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      name: \"skills_list\",\n      className: `staff-skills-select ${skills_list !== \"\" ? \"overflow-y-set\" : \"\"}`,\n      options: skillsOptions,\n      handleMultiSelect: this.handleMultiSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 96\n      }\n    }) : \"\" : skillsOptions.length > 0 && selectedSkills.length > 0 ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      name: \"skills_list\",\n      value: selectedSkills.length > 0 ? selectedSkills : [],\n      className: `staff-skills-select ${skills_list !== \"\" ? \"overflow-y-set\" : \"\"}`,\n      options: skillsOptions,\n      handleMultiSelect: this.handleMultiSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 97\n      }\n    }) : \"\"), this.validator.message('skills', skills_list, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 33\n      }\n    }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: emp_phone1,\n      name: \"emp_phone1\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 37\n      }\n    })), this.validator.message('phone number', emp_phone1, 'required')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 33\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: emp_address,\n      name: \"emp_address\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 37\n      }\n    })), this.validator.message('address', emp_address, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 33\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: sexOption,\n      value: Emp_sexesid,\n      name: \"Emp_sexesid\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 37\n      }\n    })), this.validator.message('Emp_sexesid', Emp_sexesid, 'required')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 33\n      }\n    }, \"DOB\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      inputcol: \"p-0 inTime\" // value={outTime}\n      ,\n      value: emp_dob // label=\"inTime\"\n      ,\n      name: \"emp_dob\",\n      className: \"dob-pick\",\n      showYearDropdown: true,\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 37\n      }\n    })), this.validator.message('date of birth', emp_dob, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 33\n      }\n    }, \"Starting Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      inputcol: \"p-0 inTime\" // value={outTime}\n      ,\n      value: emp_joindate // label=\"inTime\"\n      ,\n      name: \"emp_joindate\",\n      className: \"dob-pick\",\n      showYearDropdown: true,\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 37\n      }\n    })), this.validator.message('Joined date', emp_joindate, 'required')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 33\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: emp_email,\n      name: \"emp_email\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 37\n      }\n    })), this.validator.message('emp_email', emp_email, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 33\n      }\n    }, \"Branch / Location\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: locationOption,\n      value: defaultSiteCodeid,\n      name: \"defaultSiteCodeid\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 37\n      }\n    })), this.validator.message('defaultSiteCodeid', defaultSiteCodeid, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      onChange: this.handleChangeBox,\n      checked: is_login,\n      name: \"is_login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 41\n      }\n    }), ' ', \" Is Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 29\n      }\n    }), is_login ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 37\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: pw_password,\n      name: \"pw_password\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 41\n      }\n    }))) : \"\", is_login ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 37\n      }\n    }, \"Category Level\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: levelList,\n      value: LEVEL_ItmIDid,\n      name: \"LEVEL_ItmIDid\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 41\n      }\n    }))) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 25\n      }\n    }, \"Upload Staff Photo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DragFileUpload, {\n      className: `file-uploader size-sm ${emp_pic ? \"\" : 'no-img'}`,\n      label: \"Upload Thumbnail\",\n      handleFileUpload: this.handleImageUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 25\n      }\n    }, emp_pic ? /*#__PURE__*/React.createElement(React.Fragment, null, console.log(typeof emp_pic, \"kjusytdifshwosdhfs\"), typeof emp_pic == 'string' ? /*#__PURE__*/React.createElement(\"img\", {\n      src: emp_pic,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 71\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: displayImg(emp_pic),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 102\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploader-content text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 41\n      }\n    }, \"Upload Image\"))), this.validator.message('emp_pic', emp_pic, 'required'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border-bottom-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-5 d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/admin/staff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Cancel\",\n      danger: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(),\n      label: \"Save\",\n      success: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  branchList: state.common.branchList,\n  jobtitleList: state.common.jobtitleList,\n  shiftList: state.common.shiftList,\n  skillsList: state.common.skillsList,\n  staffDetail: state.staff.staffDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    createStaff,\n    getBranch,\n    getJobtitle,\n    getShift,\n    getSkills,\n    getStaff,\n    updateStaff,\n    getCommonApi\n  }, dispatch);\n};\n\nexport const AddStaff = connect(mapStateToProps, mapDispatchToProps)(AddStaffClass);","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Staff/AddStaff/index.js"],"names":["React","Component","Link","SimpleReactValidator","NormalInput","NormalSelect","NormalButton","NormalDate","NormalMultiSelect","NormalDateTime","displayImg","dateFormat","DragFileUpload","createStaff","getStaff","updateStaff","getBranch","getJobtitle","getShift","getSkills","getCommonApi","connect","bindActionCreators","FormGroup","Label","Input","AddStaffClass","state","formFields","emp_name","emp_phone1","emp_joindate","defaultSiteCodeid","skills_list","emp_address","Emp_sexesid","shift","emp_dob","EMP_TYPEid","emp_pic","is_login","pw_password","LEVEL_ItmIDid","emp_email","imageArray","jobOption","shiftOptions","locationOption","sexOption","value","label","skillsOptions","selectedSkills","levelList","getStaffDetail","props","match","params","id","then","res","setDataFromStore","getDatafromStore","skillsList","getDefaultSkills","setState","console","log","key","push","type","branchList","jobtitleList","shiftList","level_desc","itemsite_desc","shift_name","item_desc","staffDetail","Date","skills","handleChange","target","name","Object","assign","handleDatePick","handleInput","handleImageUpload","file","removepostImage","e","staffImage","index","indexOf","pop","handleSubmit","validator","allValid","formData","FormData","append","status","history","data","showMessages","handleMultiSelect","list","handleChangeBox","event","checked","componentWillMount","validators","contactNumber","message","rule","val","helpers","testRegex","messageReplace","replace","toSentence","required","element","autoForceUpdate","level_name","render","length","mapStateToProps","common","staff","mapDispatchToProps","dispatch","AddStaff"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./style.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { NormalInput, NormalSelect, NormalButton, NormalDate, NormalMultiSelect, NormalDateTime } from 'component/common';\r\nimport { displayImg, dateFormat } from 'service/helperFunctions';\r\nimport { DragFileUpload } from '../../../common';\r\nimport { createStaff, getStaff, updateStaff } from 'redux/actions/staff'\r\nimport { getBranch, getJobtitle, getShift, getSkills, getCommonApi } from 'redux/actions/common'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nexport class AddStaffClass extends Component {\r\n    state = {\r\n        formFields: {\r\n            emp_name: '',\r\n            emp_phone1: '',\r\n            emp_joindate: '',\r\n            defaultSiteCodeid: '',\r\n            skills_list: '',\r\n            emp_address: '',\r\n            Emp_sexesid: '',\r\n            shift: [],\r\n            emp_dob: '',\r\n            EMP_TYPEid: '',\r\n            emp_pic: \"\",\r\n            is_login: false,\r\n            pw_password: \"\",\r\n            LEVEL_ItmIDid: \"\",\r\n            emp_email: \"\"\r\n        },\r\n        imageArray: [],\r\n        jobOption: [],\r\n        shiftOptions: [],\r\n        locationOption: [],\r\n        sexOption: [\r\n            { value: 1, label: \"Male\" },\r\n            { value: 2, label: \"Female\" }\r\n        ],\r\n        skillsOptions: [],\r\n        selectedSkills: [],\r\n        levelList: []\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.validator = new SimpleReactValidator({\r\n            validators: {\r\n                contactNumber: {\r\n                    message: 'The :attribute must be a valid format.',\r\n                    rule: (val, params, validator) => {\r\n                        return validator.helpers.testRegex(val, /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/) && params.indexOf(val) === -1\r\n                    },\r\n                    messageReplace: (message, params) => message.replace('', this.helpers.toSentence(params)),\r\n                    required: true\r\n                },\r\n            },\r\n            element: message => <span className=\"error-message text-danger validNo fs14\">{message}</span>,\r\n            autoForceUpdate: this,\r\n        });\r\n\r\n        // branch option api \r\n        this.props.getCommonApi(\"branchlist/\").then((res) => {\r\n            let { locationOption } = this.state;\r\n            for (let key of res.data) {\r\n                locationOption.push({ value: key.id, label: key.itemsite_desc })\r\n            }\r\n            this.setState({ locationOption })\r\n        });\r\n\r\n        // level option api \r\n        this.props.getCommonApi(\"securities/\").then((res) => {\r\n            let { levelList } = this.state;\r\n            for (let key of res.data) {\r\n                levelList.push({ value: key.id, label: key.level_name })\r\n            }\r\n            this.setState({ levelList })\r\n        });\r\n\r\n        // jobtitle option api\r\n        this.props.getJobtitle().then(() => {\r\n            this.getDatafromStore('jobtitle');\r\n        });\r\n\r\n        // get api for staff while\r\n        if (this.props.match.params.id) {\r\n            this.getStaffDetail();\r\n        }\r\n\r\n        // skills option api\r\n        this.props.getSkills().then(() => {\r\n            this.getDatafromStore('skills');\r\n        });\r\n    }\r\n\r\n    // get api for staff\r\n    getStaffDetail = async () => {\r\n\r\n        let { selectedSkills, formFields } = this.state;\r\n        await this.props.getStaff(`${this.props.match.params.id}/`).then((res) => {\r\n            this.setDataFromStore();\r\n        })\r\n        await this.props.getShift(`?employee=${this.props.match.params.id}`).then(() => {\r\n            this.getDatafromStore('shift');\r\n            let { skillsList } = this.props;\r\n            // for (let key of skillsList) {\r\n            //     for (let value of formFields.skills_list) {\r\n            //         if (key.id === value) {\r\n            //             selectedSkills.push({ value: key.value, label: key.label })\r\n            //         }\r\n            //     }\r\n            // }\r\n            this.getDefaultSkills();\r\n        });\r\n        this.setState({ selectedSkills })\r\n\r\n    }\r\n\r\n    getDefaultSkills = () => {\r\n        let { selectedSkills, formFields, skillsOptions } = this.state;\r\n        selectedSkills = []\r\n        for (let value of formFields.skills_list) {\r\n            console.log(selectedSkills, \"dfssfgsdfgsdfg\", value, skillsOptions)\r\n            for (let key of skillsOptions) {\r\n\r\n                if (key.value === value) {\r\n                    console.log(selectedSkills, \"dfssfgsdfgsdfg =========\", key, value)\r\n                    selectedSkills.push({ value: key.value, label: key.label })\r\n                }\r\n            }\r\n        }\r\n        this.setState({ selectedSkills })\r\n    }\r\n\r\n    // set dropdown data from response\r\n    getDatafromStore = async (type) => {\r\n        let { branchList, jobtitleList, shiftList, skillsList } = this.props;\r\n        let { jobOption, shiftOptions, locationOption, skillsOptions } = this.state;\r\n        if (type === 'jobtitle') {\r\n            for (let key of jobtitleList) {\r\n                jobOption.push({ label: key.level_desc, value: key.id })\r\n            }\r\n        } else if (type === 'branch') {\r\n            for (let key of branchList) {\r\n                locationOption.push({ label: key.itemsite_desc, value: key.id })\r\n            }\r\n        } else if (type === 'shift') {\r\n            for (let key of shiftList) {\r\n                shiftOptions.push({ label: key.shift_name, value: key.id })\r\n            }\r\n        } else if (type === 'skills') {\r\n            for (let key of skillsList) {\r\n                skillsOptions.push({ value: key.id, label: key.item_desc })\r\n            }\r\n        }\r\n        await this.setState({\r\n            locationOption,\r\n            jobOption,\r\n            shiftOptions,\r\n            skillsOptions\r\n        })\r\n        this.getDefaultSkills();\r\n    }\r\n\r\n    // set data to formfield from response while edit\r\n    setDataFromStore = () => {\r\n        let { staffDetail } = this.props;\r\n        let { formFields } = this.state;\r\n        // console.log(\"ufjdfjssd staff\", staffDetail, formFields)\r\n        formFields['emp_name'] = staffDetail.emp_name;\r\n        formFields['emp_phone1'] = staffDetail.emp_phone1;\r\n        formFields['emp_joindate'] = new Date(staffDetail.emp_joindate);\r\n        formFields['defaultSiteCodeid'] = staffDetail.defaultSiteCodeid;\r\n        formFields['skills_list'] = staffDetail.skills;\r\n        formFields['emp_address'] = staffDetail.emp_address;\r\n        formFields['Emp_sexesid'] = staffDetail.Emp_sexesid;\r\n        formFields['shift'] = staffDetail.shift;\r\n        formFields['emp_dob'] = new Date(staffDetail.emp_dob);\r\n        formFields['EMP_TYPEid'] = staffDetail.EMP_TYPEid;\r\n        formFields['emp_pic'] = staffDetail.emp_pic;\r\n        this.setState({ formFields })\r\n    }\r\n\r\n    handleChange = ({ target: { value, name } }) => {\r\n        let formFields = Object.assign({}, this.state.formFields);\r\n\r\n        formFields[name] = value;\r\n\r\n        this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n    handleDatePick = async (name, value) => {\r\n        console.log(name, value, \"sdfgdfhfshg\", dateFormat(new Date()))\r\n        // dateFormat(new Date())\r\n        let { formFields } = this.state;\r\n        formFields[name] = value;\r\n        // formFields[name] = value;\r\n        await this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n    handleInput = ({ target: { name, value } }) => {\r\n\r\n        let formFields = Object.assign({}, this.state.formFields)\r\n        formFields[name] = (value === true ? 1 : value);\r\n        this.setState({\r\n            formFields\r\n        })\r\n\r\n    }\r\n\r\n    // upload imag to formfield\r\n    handleImageUpload = (file) => {\r\n        let { formFields } = this.state;\r\n        formFields['emp_pic'] = file;\r\n        this.setState({\r\n            formFields\r\n        })\r\n    }\r\n\r\n    // remove image to formfield\r\n    removepostImage = (e, name) => {\r\n        let { staffImage } = this.state.formFields;\r\n        let index = staffImage.indexOf(name);\r\n        if (index === 0) {\r\n            staffImage.shift();\r\n        } else {\r\n            staffImage.pop();\r\n        }\r\n        this.setState({\r\n            staffImage\r\n        })\r\n    }\r\n\r\n    // submit to create/update staff\r\n    handleSubmit = () => {\r\n        if (this.validator.allValid()) {\r\n            let { formFields } = this.state;\r\n            const formData = new FormData();\r\n            formData.append('emp_name', formFields.emp_name)\r\n            formData.append('emp_phone1', formFields.emp_phone1)\r\n            formData.append('emp_joindate', dateFormat(formFields.emp_joindate))\r\n            // if (formFields.defaultSiteCodeid === \"\") {\r\n            formData.append('defaultSiteCodeid', formFields.defaultSiteCodeid)\r\n            // }\r\n            formData.append('skills_list', formFields.skills_list)\r\n            formData.append('emp_address', formFields.emp_address)\r\n            formData.append('Emp_sexesid', formFields.Emp_sexesid)\r\n            // formData.append('shift', formFields.shift)\r\n            formData.append('emp_dob', dateFormat(formFields.emp_dob))\r\n            formData.append('EMP_TYPEid', formFields.EMP_TYPEid)\r\n            formData.append('is_login', formFields.is_login)\r\n            formData.append('pw_password', formFields.pw_password)\r\n            formData.append('LEVEL_ItmIDid', formFields.LEVEL_ItmIDid)\r\n            formData.append('emp_pic', formFields.emp_pic)\r\n            formData.append('emp_email', formFields.emp_email)\r\n            if (this.props.match.params.id) {\r\n                this.props.updateStaff(`${this.props.match.params.id}/`, formData).then((res) => {\r\n                    console.log(res)\r\n                    if (res.status === 200) {\r\n                        this.props.history.push(`/admin/staff/${res.data.id}/staffDetails`);\r\n                    }\r\n                })\r\n            } else {\r\n                this.props.createStaff(formData).then((res) => {\r\n                    console.log(res)\r\n                    if (res.status === 201) {\r\n                        this.props.history.push(`/admin/staff`);\r\n                    }\r\n                })\r\n            }\r\n\r\n        } else {\r\n            this.validator.showMessages();\r\n        }\r\n    };\r\n\r\n    handleMultiSelect = (data) => {\r\n        let { formFields } = this.state;\r\n        let list = []\r\n        for (let key of data) {\r\n            list.push(key.value);\r\n        }\r\n        formFields['skills_list'] = list;\r\n        this.setState({ formFields });\r\n        console.log(formFields, \"oyokkjk\")\r\n    }\r\n\r\n    handleChangeBox = (event) => {\r\n        let formFields = Object.assign({}, this.state.formFields);\r\n        console.log(formFields, \"oyokkjk\", event.target.name, event.target)\r\n        formFields[event.target.name] = event.target.checked;\r\n\r\n        this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { formFields, jobOption, shiftOptions, locationOption, sexOption, skillsOptions, selectedSkills, levelList } = this.state;\r\n\r\n        let { emp_name, emp_email, emp_phone1, emp_joindate, defaultSiteCodeid, skills_list, emp_address, Emp_sexesid, shift, emp_dob, EMP_TYPEid, emp_pic, is_login, pw_password, LEVEL_ItmIDid } = formFields;\r\n        return (\r\n            <div className=\"px-5 container create-staff\">\r\n                {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Staff</p> */}\r\n                <div className=\"head-label-nav\">\r\n                    <p className=\"category\">Staffs </p>\r\n                    <i className=\"icon-right mx-md-3\"></i>\r\n                    <p className=\"sub-category\">Add {this.props.match.params.id ? \"Edit\" : \"New\"} Staff</p>\r\n                </div>\r\n                <div className=\"staff-detail\">\r\n                    <div className=\"form-group mb-4 pb-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Staff Name\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    <NormalInput\r\n                                        placeholder=\"Enter here\"\r\n                                        value={emp_name}\r\n                                        name=\"emp_name\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                {this.validator.message('staff name', emp_name, 'required')}\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Job Title\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    <NormalSelect\r\n                                        options={jobOption}\r\n                                        value={EMP_TYPEid}\r\n                                        name=\"EMP_TYPEid\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                {this.validator.message('job tilte', EMP_TYPEid, 'required')}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-4 pb-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Skills\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    {/* <NormalSelect\r\n                                        options={skillsOptions}\r\n                                        value={skills_list}\r\n                                        name=\"skills_list\"\r\n                                        onChange={this.handleChange}\r\n                                    /> */}\r\n                                    {!this.props.match.params.id ? (skillsOptions.length > 0 ? <NormalMultiSelect name=\"skills_list\" className={`staff-skills-select ${skills_list !== \"\" ? \"overflow-y-set\" : \"\"}`} options={skillsOptions} handleMultiSelect={this.handleMultiSelect}></NormalMultiSelect> : \"\") : (\r\n                                        skillsOptions.length > 0 && selectedSkills.length > 0 ? <NormalMultiSelect name=\"skills_list\" value={selectedSkills.length > 0 ? selectedSkills : []} className={`staff-skills-select ${skills_list !== \"\" ? \"overflow-y-set\" : \"\"}`} options={skillsOptions} handleMultiSelect={this.handleMultiSelect}></NormalMultiSelect> : \"\"\r\n                                    )\r\n                                    }\r\n                                </div>\r\n                                {this.validator.message('skills', skills_list, 'required')}\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Contact Number\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    <NormalInput\r\n                                        placeholder=\"Enter here\"\r\n                                        value={emp_phone1}\r\n                                        name=\"emp_phone1\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                {this.validator.message('phone number', emp_phone1, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-4 pb-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Address\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    <NormalInput\r\n                                        placeholder=\"Enter here\"\r\n                                        value={emp_address}\r\n                                        name=\"emp_address\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                {this.validator.message('address', emp_address, 'required')}\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Gender\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    <NormalSelect\r\n                                        // placeholder=\"Enter here\"\r\n                                        options={sexOption}\r\n                                        value={Emp_sexesid}\r\n                                        name=\"Emp_sexesid\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                {this.validator.message('Emp_sexesid', Emp_sexesid, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-4 pb-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    DOB\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    {/* <NormalDate\r\n                                        value={emp_dob}\r\n                                        name=\"emp_dob\"\r\n                                        type=\"date\"\r\n                                        onChange={this.handleChange}\r\n                                    /> */}\r\n                                    <NormalDateTime\r\n                                        onChange={this.handleDatePick}\r\n                                        inputcol=\"p-0 inTime\"\r\n                                        // value={outTime}\r\n                                        value={emp_dob}\r\n                                        // label=\"inTime\"\r\n                                        name=\"emp_dob\"\r\n                                        className=\"dob-pick\"\r\n                                        showYearDropdown={true}\r\n                                        dateFormat=\"dd/MM/yyyy\" />\r\n                                </div>\r\n                                {this.validator.message('date of birth', emp_dob, 'required')}\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Starting Date\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    {/* <NormalDate\r\n                                        value={emp_joindate}\r\n                                        name=\"emp_joindate\"\r\n                                        type=\"date\"\r\n                                        onChange={this.handleChange}\r\n\r\n                                    /> */}\r\n                                    <NormalDateTime\r\n                                        onChange={this.handleDatePick}\r\n                                        inputcol=\"p-0 inTime\"\r\n                                        // value={outTime}\r\n                                        value={emp_joindate}\r\n                                        // label=\"inTime\"\r\n                                        name=\"emp_joindate\"\r\n                                        className=\"dob-pick\"\r\n                                        showYearDropdown={true}\r\n                                        dateFormat=\"dd/MM/yyyy\" />\r\n\r\n                                </div>\r\n                                {this.validator.message('Joined date', emp_joindate, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-4 pb-2\">\r\n                        <div className=\"row\">\r\n                            {/* <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Shift\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    <NormalSelect\r\n                                        options={shiftOptions}\r\n                                        value={shift}\r\n                                        name=\"shift\"\r\n                                        disabled={!this.props.match.params.id ? true : false}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                 {this.validator.message('shift', shift, 'required')} \r\n                            </div> */}\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Email\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    <NormalInput\r\n                                        placeholder=\"Enter here\"\r\n                                        value={emp_email}\r\n                                        name=\"emp_email\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                {this.validator.message('emp_email', emp_email, 'required')}\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                    Branch / Location\r\n                            </label>\r\n                                <div className=\"input-group\">\r\n                                    <NormalSelect\r\n                                        options={locationOption}\r\n                                        value={defaultSiteCodeid}\r\n                                        name=\"defaultSiteCodeid\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                {this.validator.message('defaultSiteCodeid', defaultSiteCodeid, 'required')}\r\n                            </div>\r\n\r\n                            <div className=\"col-6 my-5\">\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            onChange={this.handleChangeBox}\r\n                                            checked={is_login}\r\n                                            name=\"is_login\" />{' '} Is Login\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n\r\n                            </div>\r\n                            {\r\n                                is_login ? <div className=\"col-6\">\r\n                                    <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                        Password\r\n                            </label>\r\n                                    <div className=\"input-group\">\r\n                                        <NormalInput\r\n                                            placeholder=\"Enter here\"\r\n                                            value={pw_password}\r\n                                            name=\"pw_password\"\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div> : \"\"\r\n                            }\r\n\r\n                            {\r\n                                is_login ? <div className=\"col-6\">\r\n                                    <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                                        Category Level\r\n                            </label>\r\n                                    <div className=\"input-group\">\r\n                                        <NormalSelect\r\n                                            options={levelList}\r\n                                            value={LEVEL_ItmIDid}\r\n                                            name=\"LEVEL_ItmIDid\"\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div> : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-4 pb-2\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                            Upload Staff Photo\r\n                    </label>\r\n                        <div className=\"col-md-12 p-0\">\r\n                        <DragFileUpload\r\n                                className={`file-uploader size-sm ${emp_pic ? \"\" : 'no-img'}`}\r\n                                label=\"Upload Thumbnail\"\r\n                                handleFileUpload={this.handleImageUpload}\r\n                            >\r\n                                {emp_pic ?\r\n                                    <>\r\n                                        {console.log(typeof emp_pic, \"kjusytdifshwosdhfs\")}\r\n                                        {typeof emp_pic == 'string' ? <img src={emp_pic} alt=\"\" /> : <img src={displayImg(emp_pic)} alt=\"\" />}\r\n\r\n                                    </> :\r\n                                    <div className=\"uploader-content text-center\">\r\n                                        <span>Upload Image</span>\r\n                                    </div>\r\n                                }\r\n                            </DragFileUpload>\r\n                            {/* <img src={emp_pic} alt=\"\" /> */}\r\n                            {this.validator.message('emp_pic', emp_pic, 'required')}\r\n                            {/*                             \r\n                            <div className=\"d-flex flex-wrap image-upload\">\r\n                                <div className=\"p-0\" >\r\n                                    <label for=\"imageUpload\" class=\"btn cursor-pointer\">Upload Image</label>\r\n                                    <input type=\"file\" onChange={this.uploadImageFiles} id=\"imageUpload\" accept=\"image/*\" className=\"d-none\"></input>\r\n                                </div>\r\n                                {(emp_pic || []).map(url => (\r\n                                    <>\r\n                                        <div className=\"position-relative image-folder\">\r\n                                            <img src={url} alt=\"...\" className=\"image-upload position-relative\" />\r\n                                            <div className=\"close-icon\">\r\n                                                <span className=\"icon-close fs-10\" onClick={(e) => this.removepostImage(e, url)}></span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                ))}\r\n                            </div> */}\r\n                            {/* <DragFileUpload /> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"border-bottom-line\"></div>\r\n                    <div className=\"pt-5 d-flex justify-content-center\">\r\n                        <div className=\"col-2\">\r\n                            <Link to=\"/admin/staff\">\r\n                                <NormalButton label=\"Cancel\" danger={true} className=\"mr-2 col-12\" />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <NormalButton onClick={() => this.handleSubmit()} label=\"Save\" success={true} className=\"mr-2 col-12\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    branchList: state.common.branchList,\r\n    jobtitleList: state.common.jobtitleList,\r\n    shiftList: state.common.shiftList,\r\n    skillsList: state.common.skillsList,\r\n    staffDetail: state.staff.staffDetail\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        createStaff,\r\n        getBranch,\r\n        getJobtitle,\r\n        getShift,\r\n        getSkills,\r\n        getStaff,\r\n        updateStaff,\r\n        getCommonApi\r\n    }, dispatch)\r\n}\r\n\r\nexport const AddStaff = connect(mapStateToProps, mapDispatchToProps)(AddStaffClass)"]},"metadata":{},"sourceType":"module"}