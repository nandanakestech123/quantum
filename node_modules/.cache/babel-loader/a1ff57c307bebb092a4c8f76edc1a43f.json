{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\StaffPlus\\\\StaffSchedule\\\\index.js\";\nimport React from \"react\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Navigation } from \"react-minimal-side-navigation\";\nimport { getJobtitle, getCommonApi } from \"redux/actions/common\";\nimport { getStaffPlus, getStaffSchedule, getAllEmpSchedule, updateStaffPlusSchedule } from \"redux/actions/staffPlus\";\nimport { NormalSelect, NormalInput, Pagination, NormalButton } from \"component/common\";\nimport { ScheduleTable } from \"./SheduleTable\";\nimport { CalenderTable } from \"./CalenderTable\";\nimport { BigCalander } from \"./BigCalander\";\nimport { withTranslation } from \"react-i18next\";\n\nclass StaffScheduleClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentMenu: \"/indi\",\n      startMonth: new Date(),\n      endMonth: new Date(),\n      selectedMonth: new Date(),\n      fullScheduleMonth: new Date(),\n      formFields: {\n        ws: [],\n        ws_id: \"\",\n        altws: [],\n        altws_id: \"\",\n        cal_data: [],\n        status: \"All\",\n        staff_data: []\n      },\n      pageMeta: {},\n      jobOption_selected: \"\",\n      jobOption: [],\n      staffList_selected: \"\",\n      staffList: [],\n      siteOptions: [],\n      filteredSiteOptions: [],\n      selected_site: \"\",\n      fullSchedule_selected_site: \"\",\n      isLoading: true,\n      isMounted: true,\n      scheduleOptions: [],\n      isMounted: true\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.getDatafromStore = async () => {\n      await this.props.getJobtitle();\n      let scheduleRes = await this.props.getCommonApi(\"WorkScheduleHours/\");\n      let siteRes = await this.props.getCommonApi(\"branchlist/\");\n      let {\n        jobtitleList\n      } = this.props;\n      let {\n        jobOption,\n        jobOption_selected,\n        siteOptions,\n        filteredSiteOptions,\n        scheduleOptions\n      } = this.state;\n\n      for (let key of jobtitleList) {\n        jobOption.push({\n          label: key.level_desc,\n          value: key.id\n        });\n      }\n\n      for (let key of siteRes.data) {\n        siteOptions.push({\n          value: key.itemsite_code,\n          label: key.itemsite_desc\n        });\n      }\n\n      for (let key of scheduleRes.schedules) {\n        scheduleOptions.push({\n          id: key.id,\n          value: key.itm_code,\n          label: key.itm_desc,\n          color: key.itm_color,\n          shortDesc: key.shortDesc\n        });\n      }\n\n      this.updateState({\n        jobOption,\n        jobOption_selected,\n        siteOptions,\n        filteredSiteOptions,\n        scheduleOptions,\n        isLoading: false\n      });\n    };\n\n    this.updateStaffList = async () => {\n      this.updateState({\n        isLoading: true\n      });\n      let {\n        staffList,\n        staffList_selected,\n        formFields,\n        selected_site\n      } = this.state;\n      formFields.ws = [];\n      formFields.altws = [];\n      formFields.cal_data = [];\n      formFields.staff_data = [];\n      staffList_selected = \"\";\n      selected_site = \"\";\n      staffList = [];\n\n      if (this.state.jobOption_selected != \"\") {\n        await this.props.getStaffPlus(`?limit=100&EMP_TYPEid=${this.state.jobOption_selected}`);\n        let {\n          staffPlusDetail\n        } = this.props;\n        staffPlusDetail.dataList.forEach(key => {\n          staffList.push({\n            label: key.emp_name,\n            value: key.emp_code,\n            sites: key.site_list.map(e => e.site_code)\n          });\n        });\n      }\n\n      this.updateState({\n        staffList,\n        formFields,\n        staffList_selected,\n        selected_site,\n        isLoading: false\n      });\n    };\n\n    this.updateSiteList = () => {\n      let {\n        staffList_selected,\n        staffList,\n        filteredSiteOptions,\n        siteOptions,\n        selected_site,\n        formFields\n      } = this.state;\n      selected_site = \"\";\n      formFields.ws = [];\n      formFields.altws = [];\n      formFields.cal_data = [];\n      filteredSiteOptions = [];\n      let selected = staffList.find(e => e.value == staffList_selected);\n      filteredSiteOptions = siteOptions.filter(e => selected.sites.some(val => val == e.value));\n      this.updateState({\n        filteredSiteOptions,\n        formFields,\n        selected_site\n      });\n    };\n\n    this.getScheduleData = async () => {\n      let {\n        startMonth,\n        endMonth,\n        jobOption_selected,\n        selected_site,\n        staffList_selected,\n        formFields\n      } = this.state;\n      if (selected_site == \"\" || staffList_selected == \"\" || jobOption_selected == \"\") return;\n      let startDate = new Date(startMonth);\n      let d = startDate.getDate();\n      let day = d < 10 ? \"0\" + d : d;\n      let a = startDate.getMonth() + 1;\n      let month = a < 10 ? \"0\" + a : a;\n      let year = startDate.getFullYear();\n      startDate = `${year}-${month}-${1}`;\n      let endDate = new Date(endMonth);\n      endDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 0);\n      d = endDate.getDate();\n      day = d < 10 ? \"0\" + d : d;\n      a = endDate.getMonth() + 1;\n      month = a < 10 ? \"0\" + a : a;\n      year = endDate.getFullYear();\n      endDate = `${year}-${month}-${day}`;\n      this.updateState({\n        isLoading: true\n      });\n      await this.props.getStaffSchedule(`?emp_code=${staffList_selected}&site_code=${selected_site}&start=${startDate}&end=${endDate}`);\n      let {\n        weekSchedule,\n        altWeekSchedule,\n        monthlySchedule\n      } = this.props.staffSchedule;\n      formFields.ws_id = weekSchedule.id;\n      formFields.ws.monday = weekSchedule.monday;\n      formFields.ws.tuesday = weekSchedule.tuesday;\n      formFields.ws.wednesday = weekSchedule.wednesday;\n      formFields.ws.thursday = weekSchedule.thursday;\n      formFields.ws.friday = weekSchedule.friday;\n      formFields.ws.saturday = weekSchedule.saturday;\n      formFields.ws.sunday = weekSchedule.sunday;\n      formFields.altws_id = altWeekSchedule.id;\n      formFields.altws.monday = altWeekSchedule.monday;\n      formFields.altws.tuesday = altWeekSchedule.tuesday;\n      formFields.altws.wednesday = altWeekSchedule.wednesday;\n      formFields.altws.thursday = altWeekSchedule.thursday;\n      formFields.altws.friday = altWeekSchedule.friday;\n      formFields.altws.saturday = altWeekSchedule.saturday;\n      formFields.altws.sunday = altWeekSchedule.sunday;\n      formFields.cal_data = monthlySchedule;\n      this.updateState({\n        formFields,\n        isLoading: false\n      });\n    };\n\n    this.getFullScheduleData = async (page = 1) => {\n      let {\n        fullSchedule_selected_site,\n        fullScheduleMonth,\n        formFields,\n        pageMeta\n      } = this.state;\n      formFields.staff_data = [];\n\n      if (fullSchedule_selected_site == \"\") {\n        return this.updateState({\n          formFields\n        });\n      }\n\n      this.updateState({\n        isLoading: true\n      });\n      let date = new Date(fullScheduleMonth);\n      let month = date.getMonth() + 1;\n      let year = date.getFullYear();\n      await this.props.getAllEmpSchedule(`?siteCode=${fullSchedule_selected_site}&limit=10&year=${year}&month=${month}&page=${page}`);\n      let {\n        staffAllEmpSchedule\n      } = this.props;\n      pageMeta = staffAllEmpSchedule.pagination;\n      formFields.staff_data = staffAllEmpSchedule.fullSchedule;\n      this.updateState({\n        formFields,\n        pageMeta,\n        isLoading: false\n      });\n    };\n\n    this.onJobChanged = e => {\n      this.state.jobOption_selected = e.target.value;\n      this.updateState({});\n      this.updateStaffList();\n    };\n\n    this.onStaffChanged = e => {\n      this.state.staffList_selected = e.target.value;\n      this.updateState({});\n      this.updateSiteList();\n    };\n\n    this.onSiteChange = e => {\n      this.state.selected_site = e.target.value;\n      this.updateState({});\n      this.getScheduleData();\n    };\n\n    this.onSiteOptionChange = e => {\n      this.state.selected_site = e.target.value;\n      this.updateState({});\n      this.getFullScheduleData({});\n    };\n\n    this.onFullScheduleMonthChange = () => {\n      this.getFullScheduleData({});\n    };\n\n    this.onFullScheduleSiteChange = e => {\n      this.state.fullSchedule_selected_site = e.target.value;\n      this.updateState({});\n      this.getFullScheduleData({});\n    };\n\n    this.onApplyWSToMonthlySchedule = () => {\n      debugger;\n      let {\n        ws,\n        cal_data\n      } = this.state.formFields;\n\n      for (let key of cal_data) {\n        var date = new Date(key.itm_date);\n        var day = date.getDay();\n\n        switch (day) {\n          case 0:\n            key.itm_type = ws.sunday;\n            break;\n\n          case 1:\n            key.itm_type = ws.monday;\n            break;\n\n          case 2:\n            key.itm_type = ws.tuesday;\n            break;\n\n          case 3:\n            key.itm_type = ws.wednesday;\n            break;\n\n          case 4:\n            key.itm_type = ws.thursday;\n            break;\n\n          case 5:\n            key.itm_type = ws.friday;\n            break;\n\n          case 6:\n            key.itm_type = ws.saturday;\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      this.updateState({\n        cal_data\n      });\n    };\n\n    this.onApplyALTWSToMonthlySchedule = () => {\n      debugger;\n      let {\n        altws,\n        cal_data\n      } = this.state.formFields;\n\n      for (let key of cal_data) {\n        var date = new Date(key.itm_date);\n        var day = date.getDay();\n\n        switch (day) {\n          case 0:\n            key.itm_type = altws.sunday;\n            break;\n\n          case 1:\n            key.itm_type = altws.monday;\n            break;\n\n          case 2:\n            key.itm_type = altws.tuesday;\n            break;\n\n          case 3:\n            key.itm_type = altws.wednesday;\n            break;\n\n          case 4:\n            key.itm_type = altws.thursday;\n            break;\n\n          case 5:\n            key.itm_type = altws.friday;\n            break;\n\n          case 6:\n            key.itm_type = altws.saturday;\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      this.updateState({\n        cal_data\n      });\n    };\n\n    this.onSubmit = async () => {\n      let {\n        formFields\n      } = this.state;\n      if (formFields.cal_data.length == 0) return;\n      this.updateState({\n        isLoading: true\n      });\n      var data = {\n        monthlySchedule: {},\n        weekSchedule: {},\n        altWeekSchedule: {}\n      };\n      data.monthlySchedule = formFields.cal_data;\n      data.weekSchedule.id = formFields.ws_id;\n      data.weekSchedule.monday = formFields.ws.monday;\n      data.weekSchedule.tuesday = formFields.ws.tuesday;\n      data.weekSchedule.wednesday = formFields.ws.wednesday;\n      data.weekSchedule.thursday = formFields.ws.thursday;\n      data.weekSchedule.friday = formFields.ws.friday;\n      data.weekSchedule.saturday = formFields.ws.saturday;\n      data.weekSchedule.sunday = formFields.ws.sunday;\n      data.altWeekSchedule.id = formFields.altws_id;\n      data.altWeekSchedule.monday = formFields.altws.monday;\n      data.altWeekSchedule.tuesday = formFields.altws.tuesday;\n      data.altWeekSchedule.wednesday = formFields.altws.wednesday;\n      data.altWeekSchedule.thursday = formFields.altws.thursday;\n      data.altWeekSchedule.friday = formFields.altws.friday;\n      data.altWeekSchedule.saturday = formFields.altws.saturday;\n      data.altWeekSchedule.sunday = formFields.altws.sunday;\n\n      try {\n        await this.props.updateStaffPlusSchedule(JSON.stringify(data));\n      } catch (error) {\n        console.log(error);\n        this.updateState({\n          isLoading: false\n        });\n      }\n\n      this.updateState({\n        isLoading: false\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentWillMount() {\n    const queryParams = new URLSearchParams(window.location.search);\n    const menu = queryParams.get(\"menu\");\n    if (menu) if (menu == \"full\" || menu == \"indi\") this.updateState({\n      currentMenu: \"/\" + menu\n    });\n    const date = new Date();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const year = date.getFullYear();\n    this.updateState({\n      selectedMonth: `${year}-${month}`,\n      startMonth: `${year}-${month}`,\n      endMonth: `${year}-${month}`,\n      fullScheduleMonth: `${year}-${month}`\n    });\n    this.getDatafromStore();\n  }\n\n  render() {\n    let {\n      currentMenu,\n      formFields,\n      startMonth,\n      endMonth,\n      jobOption,\n      jobOption_selected,\n      staffList_selected,\n      staffList,\n      filteredSiteOptions,\n      isLoading,\n      selected_site,\n      fullSchedule_selected_site,\n      siteOptions,\n      selectedMonth,\n      scheduleOptions,\n      fullScheduleMonth,\n      pageMeta\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    let {\n      ws,\n      altws,\n      cal_data,\n      staff_data\n    } = formFields;\n\n    const handleMenuSelection = value => {\n      if (value === \"/full\") this.getFullScheduleData();\n      this.updateState({\n        currentMenu: value\n      });\n    };\n\n    const handleMonthChange = e => {\n      this.state[e.target.name] = e.target.value;\n\n      if (e.target.name == \"startMonth\") {\n        this.state.endMonth = this.state.startMonth;\n        this.state.selectedMonth = this.state.startMonth;\n      } else if (e.target.name == \"endMonth\") this.state.selectedMonth = this.state.startMonth;\n\n      if (e.target.name != \"selectedMonth\") this.getScheduleData();\n      this.updateState({});\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-lg-2 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      activeItemId: currentMenu,\n      onSelect: ({\n        itemId\n      }) => handleMenuSelection(itemId),\n      items: [{\n        title: t(\"Individual Schedule\"),\n        itemId: \"/indi\"\n      }, {\n        title: t(\"Full Schedule\"),\n        itemId: \"/full\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }\n    })), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 19\n      }\n    }, \"Loading...\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 19\n      }\n    }, t((currentMenu == \"/indi\" ? \"Individual\" : \"Full\") + \" Schedule\")))), currentMenu == \"/indi\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 25\n      }\n    }, t(\"Employee Type\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: jobOption,\n      value: jobOption_selected,\n      onChange: this.onJobChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 25\n      }\n    }, t(\"Staff\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: staffList,\n      value: staffList_selected,\n      onChange: this.onStaffChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 25\n      }\n    }, t(\"Site List\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: filteredSiteOptions,\n      value: selected_site,\n      onChange: this.onSiteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 25\n      }\n    }, t(\"Work Schedule\")), /*#__PURE__*/React.createElement(ScheduleTable, {\n      data: ws,\n      altws_data: altws,\n      optionList: scheduleOptions,\n      onChange: data => {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"ws\"] = data;\n        this.updateState({\n          formFields\n        });\n      },\n      onAltChange: data => {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"altws\"] = data;\n        this.updateState({\n          formFields\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 25\n      }\n    })))), cal_data.length == 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Apply WS to Monthly Schedule\",\n      mainbg: true,\n      onClick: this.onApplyWSToMonthlySchedule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Apply ALTWS to Monthly Schedule\",\n      mainbg: true,\n      onClick: this.onApplyALTWSToMonthlySchedule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 25\n      }\n    }, t(\"Start Year and Month\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"month\",\n      value: startMonth,\n      name: \"startMonth\",\n      onChange: handleMonthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 25\n      }\n    }, t(\"End Year and Month\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"month\",\n      value: endMonth,\n      min: startMonth,\n      name: \"endMonth\",\n      onChange: handleMonthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 25\n      }\n    }, t(\"Selected Year and Month\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"month\",\n      value: selectedMonth,\n      min: startMonth,\n      max: endMonth,\n      name: \"selectedMonth\",\n      onChange: handleMonthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CalenderTable, {\n      data: cal_data,\n      date: selectedMonth,\n      optionList: scheduleOptions,\n      onChange: data => {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"cal_data\"] = data;\n        this.updateState({\n          formFields\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 27\n      }\n    }))))), cal_data.length == 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-sm-12 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Save\",\n      success: true,\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 27\n      }\n    }))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 25\n      }\n    }, t(\"Site\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: siteOptions,\n      value: fullSchedule_selected_site,\n      name: \"fullSchedule_selected_site\",\n      onChange: this.onFullScheduleSiteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8 col-md-4 col-xm-8 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 25\n      }\n    }, t(\"Year and Month\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"month\",\n      value: fullScheduleMonth,\n      onChange: e => {\n        this.state.fullScheduleMonth = e.target.value;\n        this.updateState({});\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col pt-4 mt-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Load\",\n      mainbg: true,\n      onClick: this.onFullScheduleMonthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BigCalander, {\n      date: fullScheduleMonth,\n      data: staff_data,\n      options: scheduleOptions,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 27\n      }\n    })), pageMeta && /*#__PURE__*/React.createElement(Pagination, {\n      handlePagination: this.getFullScheduleData,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 15\n      }\n    }, scheduleOptions.map(e => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"20px\",\n          height: \"20px\",\n          marginRight: \"2px\",\n          backgroundColor: `${e.color}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 25\n        }\n      }), t(e.shortDesc), \" - \", t(e.label)));\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  jobtitleList: state.common.jobtitleList,\n  staffPlusDetail: state.staffPlus.staffPlusDetail,\n  staffSchedule: state.staffPlus.staffPlusSchedule,\n  staffAllEmpSchedule: state.staffPlus.staffPlusAllEmpSchedule\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getJobtitle,\n    getStaffPlus,\n    getCommonApi,\n    getStaffSchedule,\n    getAllEmpSchedule,\n    updateStaffPlusSchedule\n  }, dispatch);\n};\n\nexport const StaffSchedule = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(StaffScheduleClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/StaffPlus/StaffSchedule/index.js"],"names":["React","connect","bindActionCreators","Navigation","getJobtitle","getCommonApi","getStaffPlus","getStaffSchedule","getAllEmpSchedule","updateStaffPlusSchedule","NormalSelect","NormalInput","Pagination","NormalButton","ScheduleTable","CalenderTable","BigCalander","withTranslation","StaffScheduleClass","Component","state","currentMenu","startMonth","Date","endMonth","selectedMonth","fullScheduleMonth","formFields","ws","ws_id","altws","altws_id","cal_data","status","staff_data","pageMeta","jobOption_selected","jobOption","staffList_selected","staffList","siteOptions","filteredSiteOptions","selected_site","fullSchedule_selected_site","isLoading","isMounted","scheduleOptions","updateState","data","setState","getDatafromStore","props","scheduleRes","siteRes","jobtitleList","key","push","label","level_desc","value","id","itemsite_code","itemsite_desc","schedules","itm_code","itm_desc","color","itm_color","shortDesc","updateStaffList","staffPlusDetail","dataList","forEach","emp_name","emp_code","sites","site_list","map","e","site_code","updateSiteList","selected","find","filter","some","val","getScheduleData","startDate","d","getDate","day","a","getMonth","month","year","getFullYear","endDate","weekSchedule","altWeekSchedule","monthlySchedule","staffSchedule","monday","tuesday","wednesday","thursday","friday","saturday","sunday","getFullScheduleData","page","date","staffAllEmpSchedule","pagination","fullSchedule","onJobChanged","target","onStaffChanged","onSiteChange","onSiteOptionChange","onFullScheduleMonthChange","onFullScheduleSiteChange","onApplyWSToMonthlySchedule","itm_date","getDay","itm_type","onApplyALTWSToMonthlySchedule","onSubmit","length","JSON","stringify","error","console","log","componentWillUnmount","componentWillMount","queryParams","URLSearchParams","window","location","search","menu","get","slice","render","t","handleMenuSelection","handleMonthChange","name","itemId","title","width","height","marginRight","backgroundColor","mapStateToProps","common","staffPlus","staffPlusSchedule","staffPlusAllEmpSchedule","mapDispatchToProps","dispatch","StaffSchedule"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Navigation } from \"react-minimal-side-navigation\";\r\nimport { getJobtitle, getCommonApi } from \"redux/actions/common\";\r\nimport {\r\n  getStaffPlus,\r\n  getStaffSchedule,\r\n  getAllEmpSchedule,\r\n  updateStaffPlusSchedule,\r\n} from \"redux/actions/staffPlus\";\r\nimport {\r\n  NormalSelect,\r\n  NormalInput,\r\n  Pagination,\r\n  NormalButton,\r\n} from \"component/common\";\r\nimport { ScheduleTable } from \"./SheduleTable\";\r\nimport { CalenderTable } from \"./CalenderTable\";\r\nimport { BigCalander } from \"./BigCalander\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nclass StaffScheduleClass extends React.Component {\r\n  state = {\r\n    currentMenu: \"/indi\",\r\n    startMonth: new Date(),\r\n    endMonth: new Date(),\r\n    selectedMonth: new Date(),\r\n    fullScheduleMonth: new Date(),\r\n    formFields: {\r\n      ws: [],\r\n      ws_id: \"\",\r\n      altws: [],\r\n      altws_id: \"\",\r\n      cal_data: [],\r\n      status: \"All\",\r\n      staff_data: [],\r\n    },\r\n    pageMeta: {},\r\n    jobOption_selected: \"\",\r\n    jobOption: [],\r\n    staffList_selected: \"\",\r\n    staffList: [],\r\n    siteOptions: [],\r\n    filteredSiteOptions: [],\r\n    selected_site: \"\",\r\n    fullSchedule_selected_site: \"\",\r\n    isLoading: true,\r\n    isMounted: true,\r\n    scheduleOptions: [],\r\n    isMounted: true,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.isMounted = false;\r\n  }\r\n\r\n  updateState = data => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  componentWillMount() {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const menu = queryParams.get(\"menu\");\r\n    if (menu)\r\n      if (menu == \"full\" || menu == \"indi\")\r\n        this.updateState({ currentMenu: \"/\" + menu });\r\n    const date = new Date();\r\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    const year = date.getFullYear();\r\n\r\n    this.updateState({\r\n      selectedMonth: `${year}-${month}`,\r\n      startMonth: `${year}-${month}`,\r\n      endMonth: `${year}-${month}`,\r\n      fullScheduleMonth: `${year}-${month}`,\r\n    });\r\n    this.getDatafromStore();\r\n  }\r\n\r\n  getDatafromStore = async () => {\r\n    await this.props.getJobtitle();\r\n    let scheduleRes = await this.props.getCommonApi(\"WorkScheduleHours/\");\r\n    let siteRes = await this.props.getCommonApi(\"branchlist/\");\r\n    let { jobtitleList } = this.props;\r\n    let {\r\n      jobOption,\r\n      jobOption_selected,\r\n      siteOptions,\r\n      filteredSiteOptions,\r\n      scheduleOptions,\r\n    } = this.state;\r\n    for (let key of jobtitleList) {\r\n      jobOption.push({ label: key.level_desc, value: key.id });\r\n    }\r\n    for (let key of siteRes.data) {\r\n      siteOptions.push({ value: key.itemsite_code, label: key.itemsite_desc });\r\n    }\r\n    for (let key of scheduleRes.schedules) {\r\n      scheduleOptions.push({\r\n        id: key.id,\r\n        value: key.itm_code,\r\n        label: key.itm_desc,\r\n        color: key.itm_color,\r\n        shortDesc: key.shortDesc,\r\n      });\r\n    }\r\n\r\n    this.updateState({\r\n      jobOption,\r\n      jobOption_selected,\r\n      siteOptions,\r\n      filteredSiteOptions,\r\n      scheduleOptions,\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  updateStaffList = async () => {\r\n    this.updateState({ isLoading: true });\r\n    let { staffList, staffList_selected, formFields, selected_site } =\r\n      this.state;\r\n    formFields.ws = [];\r\n    formFields.altws = [];\r\n    formFields.cal_data = [];\r\n    formFields.staff_data = [];\r\n    staffList_selected = \"\";\r\n    selected_site = \"\";\r\n    staffList = [];\r\n    if (this.state.jobOption_selected != \"\") {\r\n      await this.props.getStaffPlus(\r\n        `?limit=100&EMP_TYPEid=${this.state.jobOption_selected}`\r\n      );\r\n\r\n      let { staffPlusDetail } = this.props;\r\n\r\n      staffPlusDetail.dataList.forEach(key => {\r\n        staffList.push({\r\n          label: key.emp_name,\r\n          value: key.emp_code,\r\n          sites: key.site_list.map(e => e.site_code),\r\n        });\r\n      });\r\n    }\r\n    this.updateState({\r\n      staffList,\r\n      formFields,\r\n      staffList_selected,\r\n      selected_site,\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  updateSiteList = () => {\r\n    let {\r\n      staffList_selected,\r\n      staffList,\r\n      filteredSiteOptions,\r\n      siteOptions,\r\n      selected_site,\r\n      formFields,\r\n    } = this.state;\r\n    selected_site = \"\";\r\n    formFields.ws = [];\r\n    formFields.altws = [];\r\n    formFields.cal_data = [];\r\n    filteredSiteOptions = [];\r\n    let selected = staffList.find(e => e.value == staffList_selected);\r\n    filteredSiteOptions = siteOptions.filter(e =>\r\n      selected.sites.some(val => val == e.value)\r\n    );\r\n    this.updateState({ filteredSiteOptions, formFields, selected_site });\r\n  };\r\n\r\n  getScheduleData = async () => {\r\n    let {\r\n      startMonth,\r\n      endMonth,\r\n      jobOption_selected,\r\n      selected_site,\r\n      staffList_selected,\r\n      formFields,\r\n    } = this.state;\r\n    if (\r\n      selected_site == \"\" ||\r\n      staffList_selected == \"\" ||\r\n      jobOption_selected == \"\"\r\n    )\r\n      return;\r\n    let startDate = new Date(startMonth);\r\n    let d = startDate.getDate();\r\n    let day = d < 10 ? \"0\" + d : d;\r\n    let a = startDate.getMonth() + 1;\r\n    let month = a < 10 ? \"0\" + a : a;\r\n    let year = startDate.getFullYear();\r\n    startDate = `${year}-${month}-${1}`;\r\n\r\n    let endDate = new Date(endMonth);\r\n    endDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 0);\r\n    d = endDate.getDate();\r\n    day = d < 10 ? \"0\" + d : d;\r\n    a = endDate.getMonth() + 1;\r\n    month = a < 10 ? \"0\" + a : a;\r\n    year = endDate.getFullYear();\r\n    endDate = `${year}-${month}-${day}`;\r\n    this.updateState({ isLoading: true });\r\n    await this.props.getStaffSchedule(\r\n      `?emp_code=${staffList_selected}&site_code=${selected_site}&start=${startDate}&end=${endDate}`\r\n    );\r\n    let { weekSchedule, altWeekSchedule, monthlySchedule } =\r\n      this.props.staffSchedule;\r\n    formFields.ws_id = weekSchedule.id;\r\n    formFields.ws.monday = weekSchedule.monday;\r\n    formFields.ws.tuesday = weekSchedule.tuesday;\r\n    formFields.ws.wednesday = weekSchedule.wednesday;\r\n    formFields.ws.thursday = weekSchedule.thursday;\r\n    formFields.ws.friday = weekSchedule.friday;\r\n    formFields.ws.saturday = weekSchedule.saturday;\r\n    formFields.ws.sunday = weekSchedule.sunday;\r\n    formFields.altws_id = altWeekSchedule.id;\r\n    formFields.altws.monday = altWeekSchedule.monday;\r\n    formFields.altws.tuesday = altWeekSchedule.tuesday;\r\n    formFields.altws.wednesday = altWeekSchedule.wednesday;\r\n    formFields.altws.thursday = altWeekSchedule.thursday;\r\n    formFields.altws.friday = altWeekSchedule.friday;\r\n    formFields.altws.saturday = altWeekSchedule.saturday;\r\n    formFields.altws.sunday = altWeekSchedule.sunday;\r\n    formFields.cal_data = monthlySchedule;\r\n    this.updateState({ formFields, isLoading: false });\r\n  };\r\n\r\n  getFullScheduleData = async (page = 1) => {\r\n    let {\r\n      fullSchedule_selected_site,\r\n      fullScheduleMonth,\r\n      formFields,\r\n      pageMeta,\r\n    } = this.state;\r\n    formFields.staff_data = [];\r\n    if (fullSchedule_selected_site == \"\") {\r\n      return this.updateState({ formFields });\r\n    }\r\n    this.updateState({ isLoading: true });\r\n    let date = new Date(fullScheduleMonth);\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n    await this.props.getAllEmpSchedule(\r\n      `?siteCode=${fullSchedule_selected_site}&limit=10&year=${year}&month=${month}&page=${page}`\r\n    );\r\n    let { staffAllEmpSchedule } = this.props;\r\n    pageMeta = staffAllEmpSchedule.pagination;\r\n    formFields.staff_data = staffAllEmpSchedule.fullSchedule;\r\n    this.updateState({ formFields, pageMeta, isLoading: false });\r\n  };\r\n\r\n  onJobChanged = e => {\r\n    this.state.jobOption_selected = e.target.value;\r\n    this.updateState({});\r\n    this.updateStaffList();\r\n  };\r\n\r\n  onStaffChanged = e => {\r\n    this.state.staffList_selected = e.target.value;\r\n    this.updateState({});\r\n    this.updateSiteList();\r\n  };\r\n\r\n  onSiteChange = e => {\r\n    this.state.selected_site = e.target.value;\r\n    this.updateState({});\r\n    this.getScheduleData();\r\n  };\r\n\r\n  onSiteOptionChange = e => {\r\n    this.state.selected_site = e.target.value;\r\n    this.updateState({});\r\n    this.getFullScheduleData({});\r\n  };\r\n\r\n  onFullScheduleMonthChange = () => {\r\n    this.getFullScheduleData({});\r\n  };\r\n\r\n  onFullScheduleSiteChange = e => {\r\n    this.state.fullSchedule_selected_site = e.target.value;\r\n    this.updateState({});\r\n    this.getFullScheduleData({});\r\n  };\r\n\r\n  onApplyWSToMonthlySchedule = () => {\r\n    debugger;\r\n\r\n    let { ws, cal_data } = this.state.formFields;\r\n    for (let key of cal_data) {\r\n      var date = new Date(key.itm_date);\r\n      var day = date.getDay();\r\n      switch (day) {\r\n        case 0:\r\n          key.itm_type = ws.sunday;\r\n          break;\r\n        case 1:\r\n          key.itm_type = ws.monday;\r\n          break;\r\n        case 2:\r\n          key.itm_type = ws.tuesday;\r\n          break;\r\n        case 3:\r\n          key.itm_type = ws.wednesday;\r\n          break;\r\n        case 4:\r\n          key.itm_type = ws.thursday;\r\n          break;\r\n        case 5:\r\n          key.itm_type = ws.friday;\r\n          break;\r\n        case 6:\r\n          key.itm_type = ws.saturday;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    this.updateState({ cal_data });\r\n  };\r\n\r\n  onApplyALTWSToMonthlySchedule = () => {\r\n    debugger;\r\n    let { altws, cal_data } = this.state.formFields;\r\n    for (let key of cal_data) {\r\n      var date = new Date(key.itm_date);\r\n      var day = date.getDay();\r\n      switch (day) {\r\n        case 0:\r\n          key.itm_type = altws.sunday;\r\n          break;\r\n        case 1:\r\n          key.itm_type = altws.monday;\r\n          break;\r\n        case 2:\r\n          key.itm_type = altws.tuesday;\r\n          break;\r\n        case 3:\r\n          key.itm_type = altws.wednesday;\r\n          break;\r\n        case 4:\r\n          key.itm_type = altws.thursday;\r\n          break;\r\n        case 5:\r\n          key.itm_type = altws.friday;\r\n          break;\r\n        case 6:\r\n          key.itm_type = altws.saturday;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    this.updateState({ cal_data });\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    let { formFields } = this.state;\r\n    if (formFields.cal_data.length == 0) return;\r\n    this.updateState({ isLoading: true });\r\n    var data = { monthlySchedule: {}, weekSchedule: {}, altWeekSchedule: {} };\r\n    data.monthlySchedule = formFields.cal_data;\r\n    data.weekSchedule.id = formFields.ws_id;\r\n    data.weekSchedule.monday = formFields.ws.monday;\r\n    data.weekSchedule.tuesday = formFields.ws.tuesday;\r\n    data.weekSchedule.wednesday = formFields.ws.wednesday;\r\n    data.weekSchedule.thursday = formFields.ws.thursday;\r\n    data.weekSchedule.friday = formFields.ws.friday;\r\n    data.weekSchedule.saturday = formFields.ws.saturday;\r\n    data.weekSchedule.sunday = formFields.ws.sunday;\r\n    data.altWeekSchedule.id = formFields.altws_id;\r\n    data.altWeekSchedule.monday = formFields.altws.monday;\r\n    data.altWeekSchedule.tuesday = formFields.altws.tuesday;\r\n    data.altWeekSchedule.wednesday = formFields.altws.wednesday;\r\n    data.altWeekSchedule.thursday = formFields.altws.thursday;\r\n    data.altWeekSchedule.friday = formFields.altws.friday;\r\n    data.altWeekSchedule.saturday = formFields.altws.saturday;\r\n    data.altWeekSchedule.sunday = formFields.altws.sunday;\r\n    try {\r\n      await this.props.updateStaffPlusSchedule(JSON.stringify(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.updateState({ isLoading: false });\r\n    }\r\n    this.updateState({ isLoading: false });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      currentMenu,\r\n      formFields,\r\n      startMonth,\r\n      endMonth,\r\n      jobOption,\r\n      jobOption_selected,\r\n      staffList_selected,\r\n      staffList,\r\n      filteredSiteOptions,\r\n      isLoading,\r\n      selected_site,\r\n      fullSchedule_selected_site,\r\n      siteOptions,\r\n      selectedMonth,\r\n      scheduleOptions,\r\n      fullScheduleMonth,\r\n      pageMeta,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    let { ws, altws, cal_data, staff_data } = formFields;\r\n\r\n    const handleMenuSelection = value => {\r\n      if (value === \"/full\") this.getFullScheduleData();\r\n      this.updateState({ currentMenu: value });\r\n    };\r\n\r\n    const handleMonthChange = e => {\r\n      this.state[e.target.name] = e.target.value;\r\n      if (e.target.name == \"startMonth\") {\r\n        this.state.endMonth = this.state.startMonth;\r\n        this.state.selectedMonth = this.state.startMonth;\r\n      } else if (e.target.name == \"endMonth\")\r\n        this.state.selectedMonth = this.state.startMonth;\r\n      if (e.target.name != \"selectedMonth\") this.getScheduleData();\r\n      this.updateState({});\r\n    };\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-2 mb-4\">\r\n            <Navigation\r\n              activeItemId={currentMenu}\r\n              onSelect={({ itemId }) => handleMenuSelection(itemId)}\r\n              items={[\r\n                {\r\n                  title: t(\"Individual Schedule\"),\r\n                  itemId: \"/indi\",\r\n                },\r\n                {\r\n                  title: t(\"Full Schedule\"),\r\n                  itemId: \"/full\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n          {isLoading ? (\r\n            <div className=\"col\">\r\n              <div class=\"d-flex mt-5 align-items-center justify-content-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"col-lg-10 col-md-12\">\r\n              <div className=\"row align-items-center\">\r\n                <div className=\"col-md-8 mb-4\">\r\n                  <h3>\r\n                    {t(\r\n                      (currentMenu == \"/indi\" ? \"Individual\" : \"Full\") +\r\n                        \" Schedule\"\r\n                    )}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              {currentMenu == \"/indi\" ? (\r\n                <>\r\n                  <div className=\"form-group mb-4 pb-2\">\r\n                    <div className=\"d-flex flex-wrap\">\r\n                      <div className=\"col-12 col-md-4\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"Employee Type\")}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <NormalSelect\r\n                            options={jobOption}\r\n                            value={jobOption_selected}\r\n                            onChange={this.onJobChanged}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12 col-md-4\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"Staff\")}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <NormalSelect\r\n                            options={staffList}\r\n                            value={staffList_selected}\r\n                            onChange={this.onStaffChanged}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12 col-md-4\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"Site List\")}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <NormalSelect\r\n                            options={filteredSiteOptions}\r\n                            value={selected_site}\r\n                            onChange={this.onSiteChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-4 pb-2\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"Work Schedule\")}\r\n                        </label>\r\n                        <ScheduleTable\r\n                          data={ws}\r\n                          altws_data={altws}\r\n                          optionList={scheduleOptions}\r\n                          onChange={data => {\r\n                            let { formFields } = this.state;\r\n                            formFields[\"ws\"] = data;\r\n                            this.updateState({\r\n                              formFields,\r\n                            });\r\n                          }}\r\n                          onAltChange={data => {\r\n                            let { formFields } = this.state;\r\n                            formFields[\"altws\"] = data;\r\n                            this.updateState({\r\n                              formFields,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {cal_data.length == 0 ? null : (\r\n                    <div className=\"form-group mb-4 pb-2\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm-12 mb-2\">\r\n                          <NormalButton\r\n                            label=\"Apply WS to Monthly Schedule\"\r\n                            mainbg={true}\r\n                            onClick={this.onApplyWSToMonthlySchedule}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                          <NormalButton\r\n                            label=\"Apply ALTWS to Monthly Schedule\"\r\n                            mainbg={true}\r\n                            onClick={this.onApplyALTWSToMonthlySchedule}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-4 pb-2\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4 mb-4\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"Start Year and Month\")}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            type=\"month\"\r\n                            value={startMonth}\r\n                            name=\"startMonth\"\r\n                            onChange={handleMonthChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4 mb-4\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"End Year and Month\")}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            type=\"month\"\r\n                            value={endMonth}\r\n                            min={startMonth}\r\n                            name=\"endMonth\"\r\n                            onChange={handleMonthChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4 mb-4\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"Selected Year and Month\")}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            type=\"month\"\r\n                            value={selectedMonth}\r\n                            min={startMonth}\r\n                            max={endMonth}\r\n                            name=\"selectedMonth\"\r\n                            onChange={handleMonthChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"input-group\">\r\n                          <CalenderTable\r\n                            data={cal_data}\r\n                            date={selectedMonth}\r\n                            optionList={scheduleOptions}\r\n                            onChange={data => {\r\n                              let { formFields } = this.state;\r\n                              formFields[\"cal_data\"] = data;\r\n                              this.updateState({\r\n                                formFields,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {cal_data.length == 0 ? null : (\r\n                    <div className=\"form-group mb-4 pb-2\">\r\n                      <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"col-md-3 col-sm-12 p-0\">\r\n                          <NormalButton\r\n                            label=\"Save\"\r\n                            success={true}\r\n                            onClick={this.onSubmit}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"form-group mb-4 pb-2\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 mb-4\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"Site\")}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <NormalSelect\r\n                            options={siteOptions}\r\n                            value={fullSchedule_selected_site}\r\n                            name=\"fullSchedule_selected_site\"\r\n                            onChange={this.onFullScheduleSiteChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-4 pb-2\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8 col-md-4 col-xm-8 mb-4\">\r\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                          {t(\"Year and Month\")}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <NormalInput\r\n                            type=\"month\"\r\n                            value={fullScheduleMonth}\r\n                            onChange={e => {\r\n                              this.state.fullScheduleMonth = e.target.value;\r\n                              this.updateState({});\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col pt-4 mt-4 mb-4\">\r\n                        <div className=\"input-group\">\r\n                          <NormalButton\r\n                            label=\"Load\"\r\n                            mainbg={true}\r\n                            onClick={this.onFullScheduleMonthChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"input-group\">\r\n                          <BigCalander\r\n                            date={fullScheduleMonth}\r\n                            data={staff_data}\r\n                            options={scheduleOptions}\r\n                            disabled={true}\r\n                          />\r\n                        </div>\r\n                        {pageMeta && (\r\n                          <Pagination\r\n                            handlePagination={this.getFullScheduleData}\r\n                            pageMeta={pageMeta}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div className=\"d-flex flex-wrap \">\r\n                {scheduleOptions.map(e => {\r\n                  return (\r\n                    <div className=\"col-md-2 col-6\">\r\n                      <div className=\"d-flex w-100\">\r\n                        <div\r\n                          style={{\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            marginRight: \"2px\",\r\n                            backgroundColor: `${e.color}`,\r\n                          }}\r\n                        />\r\n                        {t(e.shortDesc)} - {t(e.label)}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  jobtitleList: state.common.jobtitleList,\r\n  staffPlusDetail: state.staffPlus.staffPlusDetail,\r\n  staffSchedule: state.staffPlus.staffPlusSchedule,\r\n  staffAllEmpSchedule: state.staffPlus.staffPlusAllEmpSchedule,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getJobtitle,\r\n      getStaffPlus,\r\n      getCommonApi,\r\n      getStaffSchedule,\r\n      getAllEmpSchedule,\r\n      updateStaffPlusSchedule,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const StaffSchedule = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(StaffScheduleClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}