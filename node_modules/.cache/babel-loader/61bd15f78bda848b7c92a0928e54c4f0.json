{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\CustomerPlus\\\\AddCustomerPlus\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCustomerPlusSettings, updateCustomerPlus, CreateCustomerPlus, getCustomerPlus } from \"redux/actions/customerPlus\";\nimport { NormalInput, NormalDate, NormalDateTime, NormalSelect, NormalMultiSelect, NormalButton } from \"component/common\";\nexport class AddCustomerPlusClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {},\n      fields: [{\n        id: 1,\n        field_name: \"cust_dob\",\n        display_field_name: \"Customer DOB\",\n        visible_in_registration: true,\n        visible_in_listing: true,\n        visible_in_profile: true,\n        mandatory: true,\n        data_type: \"Dat\",\n        selection: null\n      }],\n      isLoading: true,\n      isMounted: true\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.loadData = async () => {\n      await this.props.getCustomerPlusSettings(\"details\");\n      this.state.fields = this.props.customerPlusSettings.filter(e => e.visible_in_registration);\n      this.state.formFields = this.state.fields.reduce((map, obj) => {\n        map[obj.field_name] = \"\";\n        return map;\n      }, {});\n\n      if (this.props.match.params.id) {\n        await this.props.getCustomerPlus(this.props.match.params.id);\n        this.state.formFields = this.props.customerPlusDetail;\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleSubmit = async type => {\n      if (!this.validator.allValid()) return this.validator.showMessages();\n      this.setState({\n        isLoading: true\n      });\n      console.log(this.state.formFields);\n\n      try {\n        this.state.fields.filter(e => e.data_type == \"date\" || e.data_type == \"datetime\").forEach(e => {\n          if (this.state.formFields[e.field_name]) {\n            let date = new Date(this.state.formFields[e.field_name]);\n            let d = date.getDate();\n            let day = d < 10 ? \"0\" + d : d;\n            let a = date.getMonth() + 1;\n            let month = a < 10 ? \"0\" + a : a;\n            let year = date.getFullYear();\n            this.state.formFields[e.field_name] = `${year}-${month}-${day}`;\n          }\n        });\n\n        if (this.props.match.params.id) {\n          await this.props.updateCustomerPlus(this.props.match.params.id + \"/\", JSON.stringify(this.state.formFields));\n\n          if (type === \"catalog\") {\n            this.props.history.push(`/admin/cart`);\n          } else this.props.history.push(`/admin/customer/${this.props.match.params.id}/details`);\n        } else {\n          await this.props.CreateCustomerPlus(JSON.stringify(this.state.formFields));\n\n          if (type === \"catalog\") {\n            this.props.history.push(`/admin/cart`);\n          } else this.props.history.push(`/admin/customerPlus`);\n        }\n      } catch (e) {}\n\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleCancel = () => {\n      if (this.props.match.params.id) {\n        this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`);\n      } else {\n        this.props.history.push(`/admin/customerplus`);\n      }\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleMultiSelect = (field, e) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[field] = e;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleChangeBox = event => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[event.target.name] = event.target.checked;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleDatePick = async (name, value) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.renderFields = () => {\n      return this.state.fields.map(e => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pb-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"text-left text-black common-label-text fs-17 pb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, e.display_field_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, e.data_type == \"text\" ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"Enter here\",\n        value: this.state.formFields[e.field_name],\n        name: e.field_name,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }) : e.data_type == \"date\" ? /*#__PURE__*/React.createElement(NormalDate, {\n        onChange: this.handleDatePick,\n        value: this.state.formFields[e.field_name] ? new Date(this.state.formFields[e.field_name]) : new Date(),\n        name: e.field_name,\n        showYearDropdown: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }) : e.data_type == \"datetime\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n        onChange: this.handleDatePick,\n        value: this.state.formFields[e.field_name] ? new Date(this.state.formFields[e.field_name]) : new Date(),\n        name: e.field_name,\n        showYearDropdown: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }) : e.data_type == \"selection\" ? /*#__PURE__*/React.createElement(NormalSelect, {\n        options: e.selection,\n        value: this.state.formFields[e.field_name],\n        name: e.field_name,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }) : e.data_type == \"multiSelect\" ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n        options: e.selection,\n        defaultValue: this.state.formFields[e.field_name],\n        name: e.field_name,\n        handleMultiSelect: e => this.handleMultiSelect(e.field_name, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }) : e.data_type == \"boolean\" ? /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.formFields[e.field_name],\n        name: e.field_name,\n        onClick: this.handleChangeBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }) : e.data_type == \"number\" ? /*#__PURE__*/React.createElement(NormalInput, {\n        type: \"number\",\n        placeholder: \"Enter here\",\n        value: this.state.formFields[e.field_name],\n        name: e.field_name,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }) : \"NO FILED RENDER DATA FOUND\"), e.mandatory ? this.validator.message(e.display_field_name, e.field_name, \"required\") : null));\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      validators: {},\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n    this.loadData();\n  }\n\n  render() {\n    let {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer-section container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-label-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }, \"Customer Plus\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-right mx-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, this.props.match.params.id ? \"Edit\" : \"Add\", \" New Customer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, \"Loading...\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, this.renderFields()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: this.handleCancel,\n      label: \"CANCEL\",\n      danger: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(),\n      label: \"SAVE\",\n      success: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(\"catalog\"),\n      label: \"SAVE & CATALOG\",\n      success: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerPlusDetail: state.customerPlus.customerPlusDetail,\n  customerPlusSettings: state.customerPlus.customerPlusSettings\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCustomerPlusSettings,\n    updateCustomerPlus,\n    CreateCustomerPlus,\n    getCustomerPlus\n  }, dispatch);\n};\n\nexport const AddCustomerPlus = connect(mapStateToProps, mapDispatchToProps)(AddCustomerPlusClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/CustomerPlus/AddCustomerPlus/index.js"],"names":["React","Component","Link","SimpleReactValidator","connect","bindActionCreators","getCustomerPlusSettings","updateCustomerPlus","CreateCustomerPlus","getCustomerPlus","NormalInput","NormalDate","NormalDateTime","NormalSelect","NormalMultiSelect","NormalButton","AddCustomerPlusClass","state","formFields","fields","id","field_name","display_field_name","visible_in_registration","visible_in_listing","visible_in_profile","mandatory","data_type","selection","isLoading","isMounted","updateState","data","setState","loadData","props","customerPlusSettings","filter","e","reduce","map","obj","match","params","customerPlusDetail","handleSubmit","type","validator","allValid","showMessages","console","log","forEach","date","Date","d","getDate","day","a","getMonth","month","year","getFullYear","JSON","stringify","history","push","handleCancel","handleChange","target","value","name","Object","assign","handleMultiSelect","field","handleChangeBox","event","checked","handleDatePick","renderFields","message","componentWillUnmount","componentWillMount","validators","element","autoForceUpdate","render","mapStateToProps","customerPlus","mapDispatchToProps","dispatch","AddCustomerPlus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  getCustomerPlusSettings,\n  updateCustomerPlus,\n  CreateCustomerPlus,\n  getCustomerPlus,\n} from \"redux/actions/customerPlus\";\nimport {\n  NormalInput,\n  NormalDate,\n  NormalDateTime,\n  NormalSelect,\n  NormalMultiSelect,\n  NormalButton,\n} from \"component/common\";\n\nexport class AddCustomerPlusClass extends Component {\n  state = {\n    formFields: {},\n    fields: [\n      {\n        id: 1,\n        field_name: \"cust_dob\",\n        display_field_name: \"Customer DOB\",\n        visible_in_registration: true,\n        visible_in_listing: true,\n        visible_in_profile: true,\n        mandatory: true,\n        data_type: \"Dat\",\n        selection: null,\n      },\n    ],\n    isLoading: true,\n    isMounted: true,\n  };\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  updateState = (data) => {\n    if (this.state.isMounted) this.setState(data);\n  };\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      validators: {},\n      element: (message) => (\n        <span className=\"error-message text-danger validNo fs14\">\n          {message}\n        </span>\n      ),\n      autoForceUpdate: this,\n    });\n    this.loadData();\n  }\n\n  loadData = async () => {\n    await this.props.getCustomerPlusSettings(\"details\");\n    this.state.fields = this.props.customerPlusSettings.filter(\n      (e) => e.visible_in_registration\n    );\n    this.state.formFields = this.state.fields.reduce((map, obj) => {\n      map[obj.field_name] = \"\";\n      return map;\n    }, {});\n    if (this.props.match.params.id) {\n      await this.props.getCustomerPlus(this.props.match.params.id);\n      this.state.formFields = this.props.customerPlusDetail;\n    }\n    this.setState({ isLoading: false });\n  };\n\n  handleSubmit = async (type) => {\n    if (!this.validator.allValid()) return this.validator.showMessages();\n    this.setState({ isLoading: true });\n    console.log(this.state.formFields);\n    try {\n      this.state.fields\n        .filter((e) => e.data_type == \"date\" || e.data_type == \"datetime\")\n        .forEach((e) => {\n          if (this.state.formFields[e.field_name]) {\n            let date = new Date(this.state.formFields[e.field_name]);\n            let d = date.getDate();\n            let day = d < 10 ? \"0\" + d : d;\n            let a = date.getMonth() + 1;\n            let month = a < 10 ? \"0\" + a : a;\n            let year = date.getFullYear();\n            this.state.formFields[e.field_name] = `${year}-${month}-${day}`;\n          }\n        });\n      if (this.props.match.params.id) {\n        await this.props.updateCustomerPlus(\n          this.props.match.params.id + \"/\",\n          JSON.stringify(this.state.formFields)\n        );\n        if (type === \"catalog\") {\n          this.props.history.push(`/admin/cart`);\n        } else\n          this.props.history.push(\n            `/admin/customer/${this.props.match.params.id}/details`\n          );\n      } else {\n        await this.props.CreateCustomerPlus(\n          JSON.stringify(this.state.formFields)\n        );\n        if (type === \"catalog\") {\n          this.props.history.push(`/admin/cart`);\n        } else this.props.history.push(`/admin/customerPlus`);\n      }\n    } catch (e) {}\n    this.setState({ isLoading: false });\n  };\n\n  handleCancel = () => {\n    if (this.props.match.params.id) {\n      this.props.history.push(\n        `/admin/customerplus/${this.props.match.params.id}/details`\n      );\n    } else {\n      this.props.history.push(`/admin/customerplus`);\n    }\n  };\n\n  handleChange = ({ target: { value, name } }) => {\n    let formFields = Object.assign({}, this.state.formFields);\n\n    formFields[name] = value;\n\n    this.setState({\n      formFields,\n    });\n  };\n\n  handleMultiSelect = (field, e) => {\n    let formFields = Object.assign({}, this.state.formFields);\n\n    formFields[field] = e;\n\n    this.setState({\n      formFields,\n    });\n  };\n\n  handleChangeBox = (event) => {\n    let formFields = Object.assign({}, this.state.formFields);\n\n    formFields[event.target.name] = event.target.checked;\n\n    this.setState({\n      formFields,\n    });\n  };\n\n  handleDatePick = async (name, value) => {\n    let { formFields } = this.state;\n    formFields[name] = value;\n    await this.setState({\n      formFields,\n    });\n  };\n\n  renderFields = () => {\n    return this.state.fields.map((e) => (\n      <div className=\"pb-md-4\">\n        <label className=\"text-left text-black common-label-text fs-17 pb-2\">\n          {e.display_field_name}\n        </label>\n        <div className=\"input-group py-3\">\n          {e.data_type == \"text\" ? (\n            <NormalInput\n              placeholder=\"Enter here\"\n              value={this.state.formFields[e.field_name]}\n              name={e.field_name}\n              onChange={this.handleChange}\n            />\n          ) : e.data_type == \"date\" ? (\n            <NormalDate\n              onChange={this.handleDatePick}\n              value={\n                this.state.formFields[e.field_name]\n                  ? new Date(this.state.formFields[e.field_name])\n                  : new Date()\n              }\n              name={e.field_name}\n              showYearDropdown={true}\n            />\n          ) : e.data_type == \"datetime\" ? (\n            <NormalDateTime\n              onChange={this.handleDatePick}\n              value={\n                this.state.formFields[e.field_name]\n                  ? new Date(this.state.formFields[e.field_name])\n                  : new Date()\n              }\n              name={e.field_name}\n              showYearDropdown={true}\n            />\n          ) : e.data_type == \"selection\" ? (\n            <NormalSelect\n              options={e.selection}\n              value={this.state.formFields[e.field_name]}\n              name={e.field_name}\n              onChange={this.handleChange}\n            />\n          ) : e.data_type == \"multiSelect\" ? (\n            <NormalMultiSelect\n              options={e.selection}\n              defaultValue={this.state.formFields[e.field_name]}\n              name={e.field_name}\n              handleMultiSelect={(e) => this.handleMultiSelect(e.field_name, e)}\n            />\n          ) : e.data_type == \"boolean\" ? (\n            <input\n              type=\"checkbox\"\n              checked={this.state.formFields[e.field_name]}\n              name={e.field_name}\n              onClick={this.handleChangeBox}\n            />\n          ) : e.data_type == \"number\" ? (\n            <NormalInput\n              type=\"number\"\n              placeholder=\"Enter here\"\n              value={this.state.formFields[e.field_name]}\n              name={e.field_name}\n              onChange={this.handleChange}\n            />\n          ) : (\n            \"NO FILED RENDER DATA FOUND\"\n          )}\n        </div>\n        {e.mandatory\n          ? this.validator.message(\n              e.display_field_name,\n              e.field_name,\n              \"required\"\n            )\n          : null}\n      </div>\n    ));\n  };\n\n  render() {\n    let { isLoading } = this.state;\n    return (\n      <div className=\"create-customer-section container\">\n        {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Customer</p> */}\n        <div className=\"create-customer\">\n          <div className=\"head-label-nav\">\n            <p className=\"category\">Customer Plus</p>\n            <i className=\"icon-right mx-md-3\"></i>\n            <p className=\"sub-category\">\n              {this.props.match.params.id ? \"Edit\" : \"Add\"} New Customer\n            </p>\n          </div>\n          <div className=\"customer-detail\">\n            {isLoading ? (\n              <div class=\"d-flex mt-5 align-items-center justify-content-center\">\n                <div class=\"spinner-border\" role=\"status\">\n                  <span class=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"form-group mb-4 pb-2\">\n                  {this.renderFields()}\n                </div>\n                <div className=\"row d-flex justify-content-center\">\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\n                    <NormalButton\n                      onClick={this.handleCancel}\n                      label=\"CANCEL\"\n                      danger={true}\n                      className=\"mr-2 col-12\"\n                    />\n                  </div>\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\n                    <NormalButton\n                      onClick={() => this.handleSubmit()}\n                      label=\"SAVE\"\n                      success={true}\n                      className=\"mr-2 col-12\"\n                    />\n                  </div>\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\n                    <NormalButton\n                      onClick={() => this.handleSubmit(\"catalog\")}\n                      label=\"SAVE & CATALOG\"\n                      success={true}\n                      className=\"mr-2 col-12\"\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customerPlusDetail: state.customerPlus.customerPlusDetail,\n  customerPlusSettings: state.customerPlus.customerPlusSettings,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getCustomerPlusSettings,\n      updateCustomerPlus,\n      CreateCustomerPlus,\n      getCustomerPlus,\n    },\n    dispatch\n  );\n};\n\nexport const AddCustomerPlus = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddCustomerPlusClass);\n"]},"metadata":{},"sourceType":"module"}