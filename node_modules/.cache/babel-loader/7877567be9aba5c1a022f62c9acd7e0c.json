{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Reports\\\\Types\\\\ProductSalesReport.js\";\nimport { NormalButton, NormalDateTime, NormalMultiSelect, NormalSelect } from \"component/common\";\nimport React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { getReport, updateReport } from \"redux/actions/reports\";\nimport { Viewer, Designer } from \"@grapecity/activereports-react\";\nimport \"../style.scss\";\nimport { Fragment } from \"react\";\n\nclass ProductSalesReportClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedSites: \"\",\n      siteOptions: [],\n      selectedSiteGroup: \"\",\n      siteGroupOptions: [],\n      isEdit: false,\n      isMounted: true,\n      isLoading: true,\n      start: Date.now(),\n      end: Date.now(),\n      data: null\n    };\n\n    this.updateState = state => {\n      if (this.state.isMounted) this.setState(state);\n    };\n\n    this.getData = async () => {\n      let {\n        siteOptions,\n        siteGroupOptions\n      } = this.state;\n      await this.props.getReport(\"ProductSale\");\n      let branchRes = await this.props.getCommonApi(\"branchlist/\");\n      let siteGroupRes = await this.props.getCommonApi(\"site_group_list/\");\n\n      for (let key of branchRes.data) {\n        siteOptions.push({\n          value: key.itemsite_code,\n          label: key.itemsite_desc\n        });\n      }\n\n      for (let key of siteGroupRes.data.groups) {\n        siteGroupOptions.push({\n          value: key.code,\n          label: key.description\n        });\n      }\n\n      this.updateState({\n        siteOptions,\n        siteGroupOptions,\n        isLoading: false\n      });\n    };\n\n    this.getFormatedDate = input => {\n      let date = new Date(input);\n      let d = date.getDate();\n      let day = d < 10 ? \"0\" + d : d;\n      let a = date.getMonth() + 1;\n      let month = a < 10 ? \"0\" + a : a;\n      let year = date.getFullYear();\n      return `${year}-${month}-${day}`;\n    };\n\n    this.handleChanges = e => {\n      this.state[e.target.name] = e.target.value;\n      this.updateState({});\n    };\n\n    this.handleMultiSelect = (data = []) => {\n      if (data.length == 0) return this.updateState({\n        selectedSites: \"\"\n      });\n      let {\n        selectedSites\n      } = this.state;\n      selectedSites = [];\n      data.forEach(element => {\n        selectedSites.push(element.value);\n      });\n      selectedSites = selectedSites.reduce((a, e) => a + \",\" + e);\n      this.updateState({\n        selectedSites\n      });\n    };\n\n    this.handleDatePick = (name, value) => {\n      this.state[name] = value;\n\n      if (name === \"start\") {\n        let start = new Date(value);\n        let end = new Date(this.state.end);\n        if (end < start) this.state.end = this.state.start;\n      }\n\n      this.updateState({});\n    };\n\n    this.onRun = async () => {\n      this.updateState({\n        isLoading: true\n      });\n      let {\n        data,\n        selectedSites,\n        selectedSiteGroup,\n        start,\n        end\n      } = this.state;\n      let additionalParams = \"\";\n      if (selectedSiteGroup) additionalParams = `&siteGroup=${selectedSiteGroup}`;else additionalParams = `&siteCodes=${selectedSites}`;\n      let res = await this.props.getCommonApi(`ProductSale?start=${this.getFormatedDate(start)}&end=${this.getFormatedDate(end)}${additionalParams}`);\n      console.log(res);\n      data = res.data;\n      this.updateState({\n        data,\n        isLoading: false\n      });\n    };\n\n    this.onSaveReport = async info => {\n      this.updateReport({\n        isLoading: true\n      });\n      await this.props.updateReport(\"\", info.definition);\n      this.updateReport({\n        isLoading: false\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    let {\n      t,\n      report\n    } = this.props;\n    if (report.DataSources) report.DataSources[0].ConnectionProperties.ConnectString = `jsondata=${JSON.stringify({\n      data: this.state.data\n    })}`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid report-types\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, t(\"Product Sales Report\")))), this.state.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Loading...\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-lg-2 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: t(\"Run\"),\n      mainbg: \"true\",\n      onClick: this.onRun,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-lg-3 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: this.state.isEdit ? t(\"Switch to View Mode\") : t(\"Switch to Edit Mode\"),\n      mainbg: \"true\",\n      onClick: () => this.updateState({\n        isEdit: !this.state.isEdit\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, t(\"From Date\")), /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      value: this.state.start,\n      name: \"start\",\n      showYearDropdown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, t(\"To Date\")), /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      value: this.state.end,\n      minDate: this.state.start,\n      name: \"end\",\n      showYearDropdown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, t(\"Site Group\")), /*#__PURE__*/React.createElement(NormalSelect, {\n      onChange: this.handleChanges,\n      options: this.state.siteGroupOptions,\n      value: this.state.selectedSiteGroup,\n      name: \"selectedSiteGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, t(\"Sites\")), /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      handleMultiSelect: this.handleMultiSelect,\n      options: this.state.siteOptions,\n      value: this.state.selectedSites,\n      name: \"selectedSites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, this.state.data ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"designer-host\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Designer, {\n      report: {\n        displayName: t(\"report\"),\n        definition: report\n      },\n      language: localStorage.getItem(\"lang\"),\n      onSave: this.onSaveReport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 23\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"viewer-host\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Viewer, {\n      report: {\n        Uri: report\n      },\n      availableExports: [],\n      sidebarVisible: true,\n      language: localStorage.getItem(\"lang\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }))) : null)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  report: state.reporting.reportLayout\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    getReport,\n    updateReport\n  }, dispatch);\n};\n\nexport const ProductSalesReport = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ProductSalesReportClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Reports/Types/ProductSalesReport.js"],"names":["NormalButton","NormalDateTime","NormalMultiSelect","NormalSelect","React","Component","withTranslation","connect","bindActionCreators","getCommonApi","getReport","updateReport","Viewer","Designer","Fragment","ProductSalesReportClass","state","selectedSites","siteOptions","selectedSiteGroup","siteGroupOptions","isEdit","isMounted","isLoading","start","Date","now","end","data","updateState","setState","getData","props","branchRes","siteGroupRes","key","push","value","itemsite_code","label","itemsite_desc","groups","code","description","getFormatedDate","input","date","d","getDate","day","a","getMonth","month","year","getFullYear","handleChanges","e","target","name","handleMultiSelect","length","forEach","element","reduce","handleDatePick","onRun","additionalParams","res","console","log","onSaveReport","info","definition","componentWillUnmount","componentDidMount","render","t","report","DataSources","ConnectionProperties","ConnectString","JSON","stringify","displayName","localStorage","getItem","Uri","mapStateToProps","reporting","reportLayout","mapDispatchToProps","dispatch","ProductSalesReport"],"mappings":";AAAA,SACEA,YADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,YAJF,QAKO,kBALP;AAMA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,uBAAxC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,gCAAjC;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,uBAAN,SAAsCV,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC9CW,KAD8C,GACtC;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,iBAAiB,EAAE,EAHb;AAINC,MAAAA,gBAAgB,EAAE,EAJZ;AAKNC,MAAAA,MAAM,EAAE,KALF;AAMNC,MAAAA,SAAS,EAAE,IANL;AAONC,MAAAA,SAAS,EAAE,IAPL;AAQNC,MAAAA,KAAK,EAAEC,IAAI,CAACC,GAAL,EARD;AASNC,MAAAA,GAAG,EAAEF,IAAI,CAACC,GAAL,EATC;AAUNE,MAAAA,IAAI,EAAE;AAVA,KADsC;;AAAA,SAc9CC,WAd8C,GAc/Bb,KAAD,IAAW;AACvB,UAAI,KAAKA,KAAL,CAAWM,SAAf,EAA0B,KAAKQ,QAAL,CAAcd,KAAd;AAC3B,KAhB6C;;AAAA,SA0B9Ce,OA1B8C,GA0BpC,YAAY;AACpB,UAAI;AAAEb,QAAAA,WAAF;AAAeE,QAAAA;AAAf,UAAoC,KAAKJ,KAA7C;AACA,YAAM,KAAKgB,KAAL,CAAWtB,SAAX,CAAqB,aAArB,CAAN;AACA,UAAIuB,SAAS,GAAG,MAAM,KAAKD,KAAL,CAAWvB,YAAX,CAAwB,aAAxB,CAAtB;AACA,UAAIyB,YAAY,GAAG,MAAM,KAAKF,KAAL,CAAWvB,YAAX,CAAwB,kBAAxB,CAAzB;;AACA,WAAK,IAAI0B,GAAT,IAAgBF,SAAS,CAACL,IAA1B,EAAgC;AAC9BV,QAAAA,WAAW,CAACkB,IAAZ,CAAiB;AACfC,UAAAA,KAAK,EAAEF,GAAG,CAACG,aADI;AAEfC,UAAAA,KAAK,EAAEJ,GAAG,CAACK;AAFI,SAAjB;AAID;;AACD,WAAK,IAAIL,GAAT,IAAgBD,YAAY,CAACN,IAAb,CAAkBa,MAAlC,EAA0C;AACxCrB,QAAAA,gBAAgB,CAACgB,IAAjB,CAAsB;AAAEC,UAAAA,KAAK,EAAEF,GAAG,CAACO,IAAb;AAAmBH,UAAAA,KAAK,EAAEJ,GAAG,CAACQ;AAA9B,SAAtB;AACD;;AACD,WAAKd,WAAL,CAAiB;AACfX,QAAAA,WADe;AAEfE,QAAAA,gBAFe;AAGfG,QAAAA,SAAS,EAAE;AAHI,OAAjB;AAKD,KA7C6C;;AAAA,SA+C9CqB,eA/C8C,GA+C3BC,KAAD,IAAW;AAC3B,UAAIC,IAAI,GAAG,IAAIrB,IAAJ,CAASoB,KAAT,CAAX;AACA,UAAIE,CAAC,GAAGD,IAAI,CAACE,OAAL,EAAR;AACA,UAAIC,GAAG,GAAGF,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA7B;AACA,UAAIG,CAAC,GAAGJ,IAAI,CAACK,QAAL,KAAkB,CAA1B;AACA,UAAIC,KAAK,GAAGF,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA/B;AACA,UAAIG,IAAI,GAAGP,IAAI,CAACQ,WAAL,EAAX;AACA,aAAQ,GAAED,IAAK,IAAGD,KAAM,IAAGH,GAAI,EAA/B;AACD,KAvD6C;;AAAA,SAyD9CM,aAzD8C,GAyD7BC,CAAD,IAAO;AACrB,WAAKxC,KAAL,CAAWwC,CAAC,CAACC,MAAF,CAASC,IAApB,IAA4BF,CAAC,CAACC,MAAF,CAASpB,KAArC;AACA,WAAKR,WAAL,CAAiB,EAAjB;AACD,KA5D6C;;AAAA,SA8D9C8B,iBA9D8C,GA8D1B,CAAC/B,IAAI,GAAG,EAAR,KAAe;AACjC,UAAIA,IAAI,CAACgC,MAAL,IAAe,CAAnB,EAAsB,OAAO,KAAK/B,WAAL,CAAiB;AAAEZ,QAAAA,aAAa,EAAE;AAAjB,OAAjB,CAAP;AACtB,UAAI;AAAEA,QAAAA;AAAF,UAAoB,KAAKD,KAA7B;AACAC,MAAAA,aAAa,GAAG,EAAhB;AACAW,MAAAA,IAAI,CAACiC,OAAL,CAAcC,OAAD,IAAa;AACxB7C,QAAAA,aAAa,CAACmB,IAAd,CAAmB0B,OAAO,CAACzB,KAA3B;AACD,OAFD;AAGApB,MAAAA,aAAa,GAAGA,aAAa,CAAC8C,MAAd,CAAqB,CAACb,CAAD,EAAIM,CAAJ,KAAUN,CAAC,GAAG,GAAJ,GAAUM,CAAzC,CAAhB;AACA,WAAK3B,WAAL,CAAiB;AAAEZ,QAAAA;AAAF,OAAjB;AACD,KAvE6C;;AAAA,SAyE9C+C,cAzE8C,GAyE7B,CAACN,IAAD,EAAOrB,KAAP,KAAiB;AAChC,WAAKrB,KAAL,CAAW0C,IAAX,IAAmBrB,KAAnB;;AACA,UAAIqB,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAIlC,KAAK,GAAG,IAAIC,IAAJ,CAASY,KAAT,CAAZ;AACA,YAAIV,GAAG,GAAG,IAAIF,IAAJ,CAAS,KAAKT,KAAL,CAAWW,GAApB,CAAV;AACA,YAAIA,GAAG,GAAGH,KAAV,EAAiB,KAAKR,KAAL,CAAWW,GAAX,GAAiB,KAAKX,KAAL,CAAWQ,KAA5B;AAClB;;AACD,WAAKK,WAAL,CAAiB,EAAjB;AACD,KAjF6C;;AAAA,SAmF9CoC,KAnF8C,GAmFtC,YAAY;AAClB,WAAKpC,WAAL,CAAiB;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAjB;AACA,UAAI;AAAEK,QAAAA,IAAF;AAAQX,QAAAA,aAAR;AAAuBE,QAAAA,iBAAvB;AAA0CK,QAAAA,KAA1C;AAAiDG,QAAAA;AAAjD,UAAyD,KAAKX,KAAlE;AACA,UAAIkD,gBAAgB,GAAG,EAAvB;AACA,UAAI/C,iBAAJ,EAAuB+C,gBAAgB,GAAI,cAAa/C,iBAAkB,EAAnD,CAAvB,KACK+C,gBAAgB,GAAI,cAAajD,aAAc,EAA/C;AACL,UAAIkD,GAAG,GAAG,MAAM,KAAKnC,KAAL,CAAWvB,YAAX,CACb,qBAAoB,KAAKmC,eAAL,CACnBpB,KADmB,CAEnB,QAAO,KAAKoB,eAAL,CAAqBjB,GAArB,CAA0B,GAAEuC,gBAAiB,EAHxC,CAAhB;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAvC,MAAAA,IAAI,GAAGuC,GAAG,CAACvC,IAAX;AACA,WAAKC,WAAL,CAAiB;AAAED,QAAAA,IAAF;AAAQL,QAAAA,SAAS,EAAE;AAAnB,OAAjB;AACD,KAjG6C;;AAAA,SAmG9C+C,YAnG8C,GAmG/B,MAAOC,IAAP,IAAgB;AAC7B,WAAK5D,YAAL,CAAkB;AAAEY,QAAAA,SAAS,EAAE;AAAb,OAAlB;AACA,YAAM,KAAKS,KAAL,CAAWrB,YAAX,CAAwB,EAAxB,EAA4B4D,IAAI,CAACC,UAAjC,CAAN;AACA,WAAK7D,YAAL,CAAkB;AAAEY,QAAAA,SAAS,EAAE;AAAb,OAAlB;AACD,KAvG6C;AAAA;;AAkB9CkD,EAAAA,oBAAoB,GAAG;AACrB,SAAKzD,KAAL,CAAWM,SAAX,GAAuB,KAAvB;AACD;;AAEDoD,EAAAA,iBAAiB,GAAG;AAClB,SAAK3C,OAAL;AACD;;AAiFD4C,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAgB,KAAK7C,KAAzB;AAEA,QAAI6C,MAAM,CAACC,WAAX,EACED,MAAM,CAACC,WAAP,CAAmB,CAAnB,EAAsBC,oBAAtB,CAA2CC,aAA3C,GAA4D,YAAWC,IAAI,CAACC,SAAL,CACrE;AAAEtD,MAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWY;AAAnB,KADqE,CAErE,EAFF;AAGF,wBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKgD,CAAC,CAAC,sBAAD,CAAN,CADF,CADF,CADF,EAMG,KAAK5D,KAAL,CAAWO,SAAX,gBACC;AAAK,MAAA,KAAK,EAAC,uDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADD,gBAOC,uDACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEqD,CAAC,CAAC,KAAD,CADV;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,OAAO,EAAE,KAAKX,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAQE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,KAAK,EACH,KAAKjD,KAAL,CAAWK,MAAX,GACIuD,CAAC,CAAC,qBAAD,CADL,GAEIA,CAAC,CAAC,qBAAD,CAJT;AAME,MAAA,MAAM,EAAC,MANT;AAOE,MAAA,OAAO,EAAE,MACP,KAAK/C,WAAL,CAAiB;AAAER,QAAAA,MAAM,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAAtB,OAAjB,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,eAwBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,mDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuD,CAAC,CAAC,WAAD,CADJ,CADF,eAIE,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,KAAKZ,cADjB;AAEE,MAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWQ,KAFpB;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,gBAAgB,EAAE,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,eAYE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,mDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGoD,CAAC,CAAC,SAAD,CADJ,CADF,eAIE,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,KAAKZ,cADjB;AAEE,MAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWW,GAFpB;AAGE,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWQ,KAHtB;AAIE,MAAA,IAAI,EAAC,KAJP;AAKE,MAAA,gBAAgB,EAAE,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAZF,eAwBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,mDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGoD,CAAC,CAAC,YAAD,CADJ,CADF,eAIE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAE,KAAKrB,aADjB;AAEE,MAAA,OAAO,EAAE,KAAKvC,KAAL,CAAWI,gBAFtB;AAGE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,iBAHpB;AAIE,MAAA,IAAI,EAAC,mBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAxBF,eAmCE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,mDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGyD,CAAC,CAAC,OAAD,CADJ,CADF,eAIE,oBAAC,iBAAD;AACE,MAAA,iBAAiB,EAAE,KAAKjB,iBAD1B;AAEE,MAAA,OAAO,EAAE,KAAK3C,KAAL,CAAWE,WAFtB;AAGE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,aAHpB;AAIE,MAAA,IAAI,EAAC,eAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAnCF,CAxBF,eAuEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvEF,eAwEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWY,IAAX,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWK,MAAX,gBACC;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE;AACN8D,QAAAA,WAAW,EAAEP,CAAC,CAAC,QAAD,CADR;AAENJ,QAAAA,UAAU,EAAEK;AAFN,OADV;AAKE,MAAA,QAAQ,EAAEO,YAAY,CAACC,OAAb,CAAqB,MAArB,CALZ;AAME,MAAA,MAAM,EAAE,KAAKf,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,gBAYC;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,MAAM,EAAE;AAAEgB,QAAAA,GAAG,EAAET;AAAP,OADV;AAEE,MAAA,gBAAgB,EAAE,EAFpB;AAGE,MAAA,cAAc,EAAE,IAHlB;AAIE,MAAA,QAAQ,EAAEO,YAAY,CAACC,OAAb,CAAqB,MAArB,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbJ,CADD,GAwBG,IAzBN,CAxEF,CAbJ,CADF;AAqHD;;AArO6C;;AAuOhD,MAAME,eAAe,GAAIvE,KAAD,KAAY;AAClC6D,EAAAA,MAAM,EAAE7D,KAAK,CAACwE,SAAN,CAAgBC;AADU,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAOnF,kBAAkB,CACvB;AACEC,IAAAA,YADF;AAEEC,IAAAA,SAFF;AAGEC,IAAAA;AAHF,GADuB,EAMvBgF,QANuB,CAAzB;AAQD,CATD;;AAWA,OAAO,MAAMC,kBAAkB,GAAGtF,eAAe,GAC/CC,OAAO,CAACgF,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C3E,uBAA7C,CAD+C,CAA1C","sourcesContent":["import {\n  NormalButton,\n  NormalDateTime,\n  NormalMultiSelect,\n  NormalSelect,\n} from \"component/common\";\nimport React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { getReport, updateReport } from \"redux/actions/reports\";\nimport { Viewer, Designer } from \"@grapecity/activereports-react\";\nimport \"../style.scss\";\nimport { Fragment } from \"react\";\n\nclass ProductSalesReportClass extends Component {\n  state = {\n    selectedSites: \"\",\n    siteOptions: [],\n    selectedSiteGroup: \"\",\n    siteGroupOptions: [],\n    isEdit: false,\n    isMounted: true,\n    isLoading: true,\n    start: Date.now(),\n    end: Date.now(),\n    data: null,\n  };\n\n  updateState = (state) => {\n    if (this.state.isMounted) this.setState(state);\n  };\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = async () => {\n    let { siteOptions, siteGroupOptions } = this.state;\n    await this.props.getReport(\"ProductSale\");\n    let branchRes = await this.props.getCommonApi(\"branchlist/\");\n    let siteGroupRes = await this.props.getCommonApi(\"site_group_list/\");\n    for (let key of branchRes.data) {\n      siteOptions.push({\n        value: key.itemsite_code,\n        label: key.itemsite_desc,\n      });\n    }\n    for (let key of siteGroupRes.data.groups) {\n      siteGroupOptions.push({ value: key.code, label: key.description });\n    }\n    this.updateState({\n      siteOptions,\n      siteGroupOptions,\n      isLoading: false,\n    });\n  };\n\n  getFormatedDate = (input) => {\n    let date = new Date(input);\n    let d = date.getDate();\n    let day = d < 10 ? \"0\" + d : d;\n    let a = date.getMonth() + 1;\n    let month = a < 10 ? \"0\" + a : a;\n    let year = date.getFullYear();\n    return `${year}-${month}-${day}`;\n  };\n\n  handleChanges = (e) => {\n    this.state[e.target.name] = e.target.value;\n    this.updateState({});\n  };\n\n  handleMultiSelect = (data = []) => {\n    if (data.length == 0) return this.updateState({ selectedSites: \"\" });\n    let { selectedSites } = this.state;\n    selectedSites = [];\n    data.forEach((element) => {\n      selectedSites.push(element.value);\n    });\n    selectedSites = selectedSites.reduce((a, e) => a + \",\" + e);\n    this.updateState({ selectedSites });\n  };\n\n  handleDatePick = (name, value) => {\n    this.state[name] = value;\n    if (name === \"start\") {\n      let start = new Date(value);\n      let end = new Date(this.state.end);\n      if (end < start) this.state.end = this.state.start;\n    }\n    this.updateState({});\n  };\n\n  onRun = async () => {\n    this.updateState({ isLoading: true });\n    let { data, selectedSites, selectedSiteGroup, start, end } = this.state;\n    let additionalParams = \"\";\n    if (selectedSiteGroup) additionalParams = `&siteGroup=${selectedSiteGroup}`;\n    else additionalParams = `&siteCodes=${selectedSites}`;\n    let res = await this.props.getCommonApi(\n      `ProductSale?start=${this.getFormatedDate(\n        start\n      )}&end=${this.getFormatedDate(end)}${additionalParams}`\n    );\n    console.log(res);\n    data = res.data;\n    this.updateState({ data, isLoading: false });\n  };\n\n  onSaveReport = async (info) => {\n    this.updateReport({ isLoading: true });\n    await this.props.updateReport(\"\", info.definition);\n    this.updateReport({ isLoading: false });\n  };\n\n  render() {\n    let { t, report } = this.props;\n\n    if (report.DataSources)\n      report.DataSources[0].ConnectionProperties.ConnectString = `jsondata=${JSON.stringify(\n        { data: this.state.data }\n      )}`;\n    return (\n      <div className=\"container-fluid report-types\">\n        <div className=\"row mb-4\">\n          <div className=\"col\">\n            <h3>{t(\"Product Sales Report\")}</h3>\n          </div>\n        </div>\n        {this.state.isLoading ? (\n          <div class=\"d-flex mt-5 align-items-center justify-content-center\">\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-2 mb-4\">\n                <NormalButton\n                  label={t(\"Run\")}\n                  mainbg=\"true\"\n                  onClick={this.onRun}\n                />\n              </div>\n              <div className=\"col-md-4 col-lg-3 mb-4\">\n                <NormalButton\n                  label={\n                    this.state.isEdit\n                      ? t(\"Switch to View Mode\")\n                      : t(\"Switch to Edit Mode\")\n                  }\n                  mainbg=\"true\"\n                  onClick={() =>\n                    this.updateState({ isEdit: !this.state.isEdit })\n                  }\n                />\n              </div>\n            </div>\n            <hr />\n            <div className=\"row\">\n              <div className=\"col-md-4 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-1\">\n                  {t(\"From Date\")}\n                </label>\n                <NormalDateTime\n                  onChange={this.handleDatePick}\n                  value={this.state.start}\n                  name=\"start\"\n                  showYearDropdown={true}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-1\">\n                  {t(\"To Date\")}\n                </label>\n                <NormalDateTime\n                  onChange={this.handleDatePick}\n                  value={this.state.end}\n                  minDate={this.state.start}\n                  name=\"end\"\n                  showYearDropdown={true}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-1\">\n                  {t(\"Site Group\")}\n                </label>\n                <NormalSelect\n                  onChange={this.handleChanges}\n                  options={this.state.siteGroupOptions}\n                  value={this.state.selectedSiteGroup}\n                  name=\"selectedSiteGroup\"\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-1\">\n                  {t(\"Sites\")}\n                </label>\n                <NormalMultiSelect\n                  handleMultiSelect={this.handleMultiSelect}\n                  options={this.state.siteOptions}\n                  value={this.state.selectedSites}\n                  name=\"selectedSites\"\n                />\n              </div>\n            </div>\n            <hr />\n            <div className=\"row mb-4\">\n              {this.state.data ? (\n                <Fragment>\n                  {this.state.isEdit ? (\n                    <div id=\"designer-host\">\n                      <Designer\n                        report={{\n                          displayName: t(\"report\"),\n                          definition: report,\n                        }}\n                        language={localStorage.getItem(\"lang\")}\n                        onSave={this.onSaveReport}\n                      />\n                    </div>\n                  ) : (\n                    <div id=\"viewer-host\">\n                      <Viewer\n                        report={{ Uri: report }}\n                        availableExports={[]}\n                        sidebarVisible={true}\n                        language={localStorage.getItem(\"lang\")}\n                      />\n                    </div>\n                  )}\n                </Fragment>\n              ) : null}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  report: state.reporting.reportLayout,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getCommonApi,\n      getReport,\n      updateReport,\n    },\n    dispatch\n  );\n};\n\nexport const ProductSalesReport = withTranslation()(\n  connect(mapStateToProps, mapDispatchToProps)(ProductSalesReportClass)\n);\n"]},"metadata":{},"sourceType":"module"}