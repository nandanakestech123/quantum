{"ast":null,"code":"/**\r\n * DevExtreme (viz/gauges/linear_indicators.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.textcloud = exports.trianglemarker = exports.circle = exports.rhombus = exports.rectangle = exports.rangebar = exports._default = void 0;\n\nvar _base_indicators = require(\"./base_indicators\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _Number = Number;\n\nvar SimpleIndicator = _base_indicators.BaseIndicator.inherit({\n  _move: function () {\n    var that = this;\n    var delta = that._actualPosition - that._zeroPosition;\n\n    that._rootElement.move(that.vertical ? 0 : delta, that.vertical ? delta : 0);\n\n    that._trackerElement && that._trackerElement.move(that.vertical ? 0 : delta, that.vertical ? delta : 0);\n  },\n  _isEnabled: function () {\n    this.vertical = this._options.vertical;\n    return this._options.length > 0 && this._options.width > 0;\n  },\n  _isVisible: function () {\n    return true;\n  },\n  _getTrackerSettings: function () {\n    var options = this._options;\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var width = options.width / 2;\n    var length = options.length / 2;\n    var p = this._zeroPosition;\n    width > 10 || (width = 10);\n    length > 10 || (length = 10);\n\n    if (this.vertical) {\n      x1 = options.x - length;\n      x2 = options.x + length;\n      y1 = p + width;\n      y2 = p - width;\n    } else {\n      x1 = p - width;\n      x2 = p + width;\n      y1 = options.y + length;\n      y2 = options.y - length;\n    }\n\n    return {\n      points: [x1, y1, x1, y2, x2, y2, x2, y1]\n    };\n  },\n  _render: function () {\n    var that = this;\n    that._zeroPosition = that._translator.getCodomainStart();\n  },\n  _clear: function () {\n    delete this._element;\n  },\n  measure: function (layout) {\n    var p = this.vertical ? layout.x : layout.y;\n    return {\n      min: p - this._options.length / 2,\n      max: p + this._options.length / 2\n    };\n  },\n  getTooltipParameters: function () {\n    var that = this;\n    var options = that._options;\n    var p = that._actualPosition;\n    var parameters = {\n      x: p,\n      y: p,\n      value: that._currentValue,\n      color: options.color,\n      offset: options.width / 2\n    };\n    that.vertical ? parameters.x = options.x : parameters.y = options.y;\n    return parameters;\n  }\n});\n\nvar rectangle = SimpleIndicator.inherit({\n  _render: function () {\n    var that = this;\n    var options = that._options;\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    that.callBase();\n    var p = that._zeroPosition;\n\n    if (that.vertical) {\n      x1 = options.x - options.length / 2;\n      x2 = options.x + options.length / 2;\n      y1 = p + options.width / 2;\n      y2 = p - options.width / 2;\n    } else {\n      x1 = p - options.width / 2;\n      x2 = p + options.width / 2;\n      y1 = options.y + options.length / 2;\n      y2 = options.y - options.length / 2;\n    }\n\n    that._element = that._element || that._renderer.path([], \"area\").append(that._rootElement);\n\n    that._element.attr({\n      points: [x1, y1, x1, y2, x2, y2, x2, y1]\n    });\n  }\n});\nexports.rectangle = rectangle;\nvar rhombus = SimpleIndicator.inherit({\n  _render: function () {\n    var that = this;\n    var options = that._options;\n    var x;\n    var y;\n    var dx;\n    var dy;\n    that.callBase();\n\n    if (that.vertical) {\n      x = options.x;\n      y = that._zeroPosition;\n      dx = options.length / 2 || 0;\n      dy = options.width / 2 || 0;\n    } else {\n      x = that._zeroPosition;\n      y = options.y;\n      dx = options.width / 2 || 0;\n      dy = options.length / 2 || 0;\n    }\n\n    that._element = that._element || that._renderer.path([], \"area\").append(that._rootElement);\n\n    that._element.attr({\n      points: [x - dx, y, x, y - dy, x + dx, y, x, y + dy]\n    });\n  }\n});\nexports.rhombus = rhombus;\nvar circle = SimpleIndicator.inherit({\n  _render: function () {\n    var that = this;\n    var options = that._options;\n    var x;\n    var y;\n    that.callBase();\n\n    if (that.vertical) {\n      x = options.x;\n      y = that._zeroPosition;\n    } else {\n      x = that._zeroPosition;\n      y = options.y;\n    }\n\n    var r = options.length / 2 || 0;\n    that._element = that._element || that._renderer.circle().append(that._rootElement);\n\n    that._element.attr({\n      cx: x,\n      cy: y,\n      r: r\n    });\n  }\n});\nexports.circle = circle;\nvar triangleMarker = SimpleIndicator.inherit({\n  _isEnabled: function () {\n    var that = this;\n    that.vertical = that._options.vertical;\n    that._inverted = that.vertical ? \"right\" === (0, _utils.normalizeEnum)(that._options.horizontalOrientation) : \"bottom\" === (0, _utils.normalizeEnum)(that._options.verticalOrientation);\n    return that._options.length > 0 && that._options.width > 0;\n  },\n  _isVisible: function () {\n    return true;\n  },\n  _render: function () {\n    var that = this;\n    var options = that._options;\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var settings = {\n      stroke: \"none\",\n      \"stroke-width\": 0,\n      \"stroke-linecap\": \"square\"\n    };\n    that.callBase();\n\n    if (that.vertical) {\n      x1 = options.x;\n      y1 = that._zeroPosition;\n      x2 = x1 + _Number(that._inverted ? options.length : -options.length);\n      settings.points = [x1, y1, x2, y1 - options.width / 2, x2, y1 + options.width / 2];\n    } else {\n      y1 = options.y;\n      x1 = that._zeroPosition;\n      y2 = y1 + _Number(that._inverted ? options.length : -options.length);\n      settings.points = [x1, y1, x1 - options.width / 2, y2, x1 + options.width / 2, y2];\n    }\n\n    if (options.space > 0) {\n      settings[\"stroke-width\"] = Math.min(options.space, options.width / 4) || 0;\n      settings.stroke = settings[\"stroke-width\"] > 0 ? options.containerBackgroundColor || \"none\" : \"none\";\n    }\n\n    that._element = that._element || that._renderer.path([], \"area\").append(that._rootElement);\n\n    that._element.attr(settings).sharp();\n  },\n  _getTrackerSettings: function () {\n    var that = this;\n    var options = that._options;\n    var width = options.width / 2;\n\n    var length = _Number(options.length);\n\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var result;\n    width > 10 || (width = 10);\n    length > 20 || (length = 20);\n\n    if (that.vertical) {\n      x1 = x2 = options.x;\n      x2 = x1 + (that._inverted ? length : -length);\n      y1 = that._zeroPosition + width;\n      y2 = that._zeroPosition - width;\n      result = [x1, y1, x2, y1, x2, y2, x1, y2];\n    } else {\n      y1 = options.y;\n      y2 = y1 + (that._inverted ? length : -length);\n      x1 = that._zeroPosition - width;\n      x2 = that._zeroPosition + width;\n      result = [x1, y1, x1, y2, x2, y2, x2, y1];\n    }\n\n    return {\n      points: result\n    };\n  },\n  measure: function (layout) {\n    var that = this;\n\n    var length = _Number(that._options.length);\n\n    var minBound;\n    var maxBound;\n\n    if (that.vertical) {\n      minBound = maxBound = layout.x;\n\n      if (that._inverted) {\n        maxBound = minBound + length;\n      } else {\n        minBound = maxBound - length;\n      }\n    } else {\n      minBound = maxBound = layout.y;\n\n      if (that._inverted) {\n        maxBound = minBound + length;\n      } else {\n        minBound = maxBound - length;\n      }\n    }\n\n    return {\n      min: minBound,\n      max: maxBound,\n      indent: that._options.width / 2\n    };\n  },\n  getTooltipParameters: function () {\n    var that = this;\n    var options = that._options;\n    var s = (that._inverted ? options.length : -options.length) / 2;\n    var parameters = that.callBase();\n    that.vertical ? parameters.x += s : parameters.y += s;\n    parameters.offset = options.length / 2;\n    return parameters;\n  }\n});\nexports.trianglemarker = triangleMarker;\n\nvar textCloud = _base_indicators.BaseTextCloudMarker.inherit({\n  _isEnabled: function () {\n    var that = this;\n    that.vertical = that._options.vertical;\n    that._inverted = that.vertical ? \"right\" === (0, _utils.normalizeEnum)(that._options.horizontalOrientation) : \"bottom\" === (0, _utils.normalizeEnum)(that._options.verticalOrientation);\n    return true;\n  },\n  _isVisible: function () {\n    return true;\n  },\n  _getTextCloudOptions: function () {\n    var that = this;\n    var x = that._actualPosition;\n    var y = that._actualPosition;\n    var type;\n\n    if (that.vertical) {\n      x = that._options.x;\n      type = that._inverted ? \"top-left\" : \"top-right\";\n    } else {\n      y = that._options.y;\n      type = that._inverted ? \"right-top\" : \"right-bottom\";\n    }\n\n    return {\n      x: x,\n      y: y,\n      type: type\n    };\n  },\n  measure: function (layout) {\n    var that = this;\n    var minBound;\n    var maxBound;\n    var arrowLength = _Number(that._options.arrowLength) || 0;\n    var indent;\n\n    that._measureText();\n\n    if (that.vertical) {\n      indent = that._textFullHeight;\n\n      if (that._inverted) {\n        minBound = layout.x;\n        maxBound = layout.x + arrowLength + that._textFullWidth;\n      } else {\n        minBound = layout.x - arrowLength - that._textFullWidth;\n        maxBound = layout.x;\n      }\n    } else {\n      indent = that._textFullWidth;\n\n      if (that._inverted) {\n        minBound = layout.y;\n        maxBound = layout.y + arrowLength + that._textFullHeight;\n      } else {\n        minBound = layout.y - arrowLength - that._textFullHeight;\n        maxBound = layout.y;\n      }\n    }\n\n    return {\n      min: minBound,\n      max: maxBound,\n      indent: indent\n    };\n  }\n});\n\nexports.textcloud = textCloud;\n\nvar rangeBar = _base_indicators.BaseRangeBar.inherit({\n  _isEnabled: function () {\n    var that = this;\n    that.vertical = that._options.vertical;\n    that._inverted = that.vertical ? \"right\" === (0, _utils.normalizeEnum)(that._options.horizontalOrientation) : \"bottom\" === (0, _utils.normalizeEnum)(that._options.verticalOrientation);\n    return that._options.size > 0;\n  },\n  _isVisible: function () {\n    return true;\n  },\n  _createBarItem: function () {\n    return this._renderer.path([], \"area\").append(this._rootElement);\n  },\n  _createTracker: function () {\n    return this._renderer.path([], \"area\");\n  },\n  _setBarSides: function () {\n    var that = this;\n    var options = that._options;\n\n    var size = _Number(options.size);\n\n    var minSide;\n    var maxSide;\n\n    if (that.vertical) {\n      if (that._inverted) {\n        minSide = options.x;\n        maxSide = options.x + size;\n      } else {\n        minSide = options.x - size;\n        maxSide = options.x;\n      }\n    } else {\n      if (that._inverted) {\n        minSide = options.y;\n        maxSide = options.y + size;\n      } else {\n        minSide = options.y - size;\n        maxSide = options.y;\n      }\n    }\n\n    that._minSide = minSide;\n    that._maxSide = maxSide;\n    that._minBound = minSide;\n    that._maxBound = maxSide;\n  },\n  _getSpace: function () {\n    var options = this._options;\n    return options.space > 0 ? _Number(options.space) : 0;\n  },\n  _isTextVisible: function () {\n    var textOptions = this._options.text || {};\n    return textOptions.indent > 0 || textOptions.indent < 0;\n  },\n  _getTextAlign: function () {\n    return this.vertical ? this._options.text.indent > 0 ? \"left\" : \"right\" : \"center\";\n  },\n  _setTextItemsSides: function () {\n    var that = this;\n\n    var indent = _Number(that._options.text.indent);\n\n    if (indent > 0) {\n      that._lineStart = that._maxSide;\n      that._lineEnd = that._maxSide + indent;\n      that._textPosition = that._lineEnd + (that.vertical ? 2 : that._textHeight / 2);\n      that._maxBound = that._textPosition + (that.vertical ? that._textWidth : that._textHeight / 2);\n    } else {\n      if (indent < 0) {\n        that._lineStart = that._minSide;\n        that._lineEnd = that._minSide + indent;\n        that._textPosition = that._lineEnd - (that.vertical ? 2 : that._textHeight / 2);\n        that._minBound = that._textPosition - (that.vertical ? that._textWidth : that._textHeight / 2);\n      }\n    }\n  },\n  _getPositions: function () {\n    var that = this;\n    var startPosition = that._startPosition;\n    var endPosition = that._endPosition;\n    var space = that._space;\n    var basePosition = that._basePosition;\n    var actualPosition = that._actualPosition;\n    var mainPosition1;\n    var mainPosition2;\n    var backPosition1;\n    var backPosition2;\n\n    if (startPosition < endPosition) {\n      if (basePosition < actualPosition) {\n        mainPosition1 = basePosition;\n        mainPosition2 = actualPosition;\n      } else {\n        mainPosition1 = actualPosition;\n        mainPosition2 = basePosition;\n      }\n\n      backPosition1 = mainPosition1 - space;\n      backPosition2 = mainPosition2 + space;\n    } else {\n      if (basePosition > actualPosition) {\n        mainPosition1 = basePosition;\n        mainPosition2 = actualPosition;\n      } else {\n        mainPosition1 = actualPosition;\n        mainPosition2 = basePosition;\n      }\n\n      backPosition1 = mainPosition1 + space;\n      backPosition2 = mainPosition2 - space;\n    }\n\n    return {\n      start: startPosition,\n      end: endPosition,\n      main1: mainPosition1,\n      main2: mainPosition2,\n      back1: backPosition1,\n      back2: backPosition2\n    };\n  },\n  _buildItemSettings: function (from, to) {\n    var that = this;\n    var side1 = that._minSide;\n    var side2 = that._maxSide;\n    var points = that.vertical ? [side1, from, side1, to, side2, to, side2, from] : [from, side1, from, side2, to, side2, to, side1];\n    return {\n      points: points\n    };\n  },\n  _updateTextPosition: function () {\n    var that = this;\n\n    that._text.attr(that.vertical ? {\n      x: that._textPosition,\n      y: that._actualPosition + that._textVerticalOffset\n    } : {\n      x: that._actualPosition,\n      y: that._textPosition + that._textVerticalOffset\n    });\n  },\n  _updateLinePosition: function () {\n    var that = this;\n    var actualPosition = that._actualPosition;\n    var side1;\n    var side2;\n    var points;\n\n    if (that.vertical) {\n      if (that._basePosition >= actualPosition) {\n        side1 = actualPosition;\n        side2 = actualPosition + 2;\n      } else {\n        side1 = actualPosition - 2;\n        side2 = actualPosition;\n      }\n\n      points = [that._lineStart, side1, that._lineStart, side2, that._lineEnd, side2, that._lineEnd, side1];\n    } else {\n      if (that._basePosition <= actualPosition) {\n        side1 = actualPosition - 2;\n        side2 = actualPosition;\n      } else {\n        side1 = actualPosition;\n        side2 = actualPosition + 2;\n      }\n\n      points = [side1, that._lineStart, side1, that._lineEnd, side2, that._lineEnd, side2, that._lineStart];\n    }\n\n    that._line.attr({\n      points: points\n    }).sharp();\n  },\n  _getTooltipPosition: function () {\n    var that = this;\n    var crossCenter = (that._minSide + that._maxSide) / 2;\n    var alongCenter = (that._basePosition + that._actualPosition) / 2;\n    return that.vertical ? {\n      x: crossCenter,\n      y: alongCenter\n    } : {\n      x: alongCenter,\n      y: crossCenter\n    };\n  },\n  measure: function (layout) {\n    var that = this;\n\n    var size = _Number(that._options.size);\n\n    var textIndent = _Number(that._options.text.indent);\n\n    var minBound;\n    var maxBound;\n    var indent;\n\n    that._measureText();\n\n    if (that.vertical) {\n      minBound = maxBound = layout.x;\n\n      if (that._inverted) {\n        maxBound += size;\n      } else {\n        minBound -= size;\n      }\n\n      if (that._hasText) {\n        indent = that._textHeight / 2;\n\n        if (textIndent > 0) {\n          maxBound += textIndent + that._textWidth;\n        }\n\n        if (textIndent < 0) {\n          minBound += textIndent - that._textWidth;\n        }\n      }\n    } else {\n      minBound = maxBound = layout.y;\n\n      if (that._inverted) {\n        maxBound += size;\n      } else {\n        minBound -= size;\n      }\n\n      if (that._hasText) {\n        indent = that._textWidth / 2;\n\n        if (textIndent > 0) {\n          maxBound += textIndent + that._textHeight;\n        }\n\n        if (textIndent < 0) {\n          minBound += textIndent - that._textHeight;\n        }\n      }\n    }\n\n    return {\n      min: minBound,\n      max: maxBound,\n      indent: indent\n    };\n  }\n});\n\nexports.rangebar = exports._default = rangeBar;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/gauges/linear_indicators.js"],"names":["exports","textcloud","trianglemarker","circle","rhombus","rectangle","rangebar","_default","_base_indicators","require","_utils","_Number","Number","SimpleIndicator","BaseIndicator","inherit","_move","that","delta","_actualPosition","_zeroPosition","_rootElement","move","vertical","_trackerElement","_isEnabled","_options","length","width","_isVisible","_getTrackerSettings","options","x1","x2","y1","y2","p","x","y","points","_render","_translator","getCodomainStart","_clear","_element","measure","layout","min","max","getTooltipParameters","parameters","value","_currentValue","color","offset","callBase","_renderer","path","append","attr","dx","dy","r","cx","cy","triangleMarker","_inverted","normalizeEnum","horizontalOrientation","verticalOrientation","settings","stroke","space","Math","containerBackgroundColor","sharp","result","minBound","maxBound","indent","s","textCloud","BaseTextCloudMarker","_getTextCloudOptions","type","arrowLength","_measureText","_textFullHeight","_textFullWidth","rangeBar","BaseRangeBar","size","_createBarItem","_createTracker","_setBarSides","minSide","maxSide","_minSide","_maxSide","_minBound","_maxBound","_getSpace","_isTextVisible","textOptions","text","_getTextAlign","_setTextItemsSides","_lineStart","_lineEnd","_textPosition","_textHeight","_textWidth","_getPositions","startPosition","_startPosition","endPosition","_endPosition","_space","basePosition","_basePosition","actualPosition","mainPosition1","mainPosition2","backPosition1","backPosition2","start","end","main1","main2","back1","back2","_buildItemSettings","from","to","side1","side2","_updateTextPosition","_text","_textVerticalOffset","_updateLinePosition","_line","_getTooltipPosition","crossCenter","alongCenter","textIndent","_hasText"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/gauges/linear_indicators.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.textcloud = exports.trianglemarker = exports.circle = exports.rhombus = exports.rectangle = exports.rangebar = exports._default = void 0;\r\nvar _base_indicators = require(\"./base_indicators\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _Number = Number;\r\nvar SimpleIndicator = _base_indicators.BaseIndicator.inherit({\r\n    _move: function() {\r\n        var that = this;\r\n        var delta = that._actualPosition - that._zeroPosition;\r\n        that._rootElement.move(that.vertical ? 0 : delta, that.vertical ? delta : 0);\r\n        that._trackerElement && that._trackerElement.move(that.vertical ? 0 : delta, that.vertical ? delta : 0)\r\n    },\r\n    _isEnabled: function() {\r\n        this.vertical = this._options.vertical;\r\n        return this._options.length > 0 && this._options.width > 0\r\n    },\r\n    _isVisible: function() {\r\n        return true\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var options = this._options;\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        var width = options.width / 2;\r\n        var length = options.length / 2;\r\n        var p = this._zeroPosition;\r\n        width > 10 || (width = 10);\r\n        length > 10 || (length = 10);\r\n        if (this.vertical) {\r\n            x1 = options.x - length;\r\n            x2 = options.x + length;\r\n            y1 = p + width;\r\n            y2 = p - width\r\n        } else {\r\n            x1 = p - width;\r\n            x2 = p + width;\r\n            y1 = options.y + length;\r\n            y2 = options.y - length\r\n        }\r\n        return {\r\n            points: [x1, y1, x1, y2, x2, y2, x2, y1]\r\n        }\r\n    },\r\n    _render: function() {\r\n        var that = this;\r\n        that._zeroPosition = that._translator.getCodomainStart()\r\n    },\r\n    _clear: function() {\r\n        delete this._element\r\n    },\r\n    measure: function(layout) {\r\n        var p = this.vertical ? layout.x : layout.y;\r\n        return {\r\n            min: p - this._options.length / 2,\r\n            max: p + this._options.length / 2\r\n        }\r\n    },\r\n    getTooltipParameters: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var p = that._actualPosition;\r\n        var parameters = {\r\n            x: p,\r\n            y: p,\r\n            value: that._currentValue,\r\n            color: options.color,\r\n            offset: options.width / 2\r\n        };\r\n        that.vertical ? parameters.x = options.x : parameters.y = options.y;\r\n        return parameters\r\n    }\r\n});\r\nvar rectangle = SimpleIndicator.inherit({\r\n    _render: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        that.callBase();\r\n        var p = that._zeroPosition;\r\n        if (that.vertical) {\r\n            x1 = options.x - options.length / 2;\r\n            x2 = options.x + options.length / 2;\r\n            y1 = p + options.width / 2;\r\n            y2 = p - options.width / 2\r\n        } else {\r\n            x1 = p - options.width / 2;\r\n            x2 = p + options.width / 2;\r\n            y1 = options.y + options.length / 2;\r\n            y2 = options.y - options.length / 2\r\n        }\r\n        that._element = that._element || that._renderer.path([], \"area\").append(that._rootElement);\r\n        that._element.attr({\r\n            points: [x1, y1, x1, y2, x2, y2, x2, y1]\r\n        })\r\n    }\r\n});\r\nexports.rectangle = rectangle;\r\nvar rhombus = SimpleIndicator.inherit({\r\n    _render: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var x;\r\n        var y;\r\n        var dx;\r\n        var dy;\r\n        that.callBase();\r\n        if (that.vertical) {\r\n            x = options.x;\r\n            y = that._zeroPosition;\r\n            dx = options.length / 2 || 0;\r\n            dy = options.width / 2 || 0\r\n        } else {\r\n            x = that._zeroPosition;\r\n            y = options.y;\r\n            dx = options.width / 2 || 0;\r\n            dy = options.length / 2 || 0\r\n        }\r\n        that._element = that._element || that._renderer.path([], \"area\").append(that._rootElement);\r\n        that._element.attr({\r\n            points: [x - dx, y, x, y - dy, x + dx, y, x, y + dy]\r\n        })\r\n    }\r\n});\r\nexports.rhombus = rhombus;\r\nvar circle = SimpleIndicator.inherit({\r\n    _render: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var x;\r\n        var y;\r\n        that.callBase();\r\n        if (that.vertical) {\r\n            x = options.x;\r\n            y = that._zeroPosition\r\n        } else {\r\n            x = that._zeroPosition;\r\n            y = options.y\r\n        }\r\n        var r = options.length / 2 || 0;\r\n        that._element = that._element || that._renderer.circle().append(that._rootElement);\r\n        that._element.attr({\r\n            cx: x,\r\n            cy: y,\r\n            r: r\r\n        })\r\n    }\r\n});\r\nexports.circle = circle;\r\nvar triangleMarker = SimpleIndicator.inherit({\r\n    _isEnabled: function() {\r\n        var that = this;\r\n        that.vertical = that._options.vertical;\r\n        that._inverted = that.vertical ? \"right\" === (0, _utils.normalizeEnum)(that._options.horizontalOrientation) : \"bottom\" === (0, _utils.normalizeEnum)(that._options.verticalOrientation);\r\n        return that._options.length > 0 && that._options.width > 0\r\n    },\r\n    _isVisible: function() {\r\n        return true\r\n    },\r\n    _render: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        var settings = {\r\n            stroke: \"none\",\r\n            \"stroke-width\": 0,\r\n            \"stroke-linecap\": \"square\"\r\n        };\r\n        that.callBase();\r\n        if (that.vertical) {\r\n            x1 = options.x;\r\n            y1 = that._zeroPosition;\r\n            x2 = x1 + _Number(that._inverted ? options.length : -options.length);\r\n            settings.points = [x1, y1, x2, y1 - options.width / 2, x2, y1 + options.width / 2]\r\n        } else {\r\n            y1 = options.y;\r\n            x1 = that._zeroPosition;\r\n            y2 = y1 + _Number(that._inverted ? options.length : -options.length);\r\n            settings.points = [x1, y1, x1 - options.width / 2, y2, x1 + options.width / 2, y2]\r\n        }\r\n        if (options.space > 0) {\r\n            settings[\"stroke-width\"] = Math.min(options.space, options.width / 4) || 0;\r\n            settings.stroke = settings[\"stroke-width\"] > 0 ? options.containerBackgroundColor || \"none\" : \"none\"\r\n        }\r\n        that._element = that._element || that._renderer.path([], \"area\").append(that._rootElement);\r\n        that._element.attr(settings).sharp()\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var width = options.width / 2;\r\n        var length = _Number(options.length);\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        var result;\r\n        width > 10 || (width = 10);\r\n        length > 20 || (length = 20);\r\n        if (that.vertical) {\r\n            x1 = x2 = options.x;\r\n            x2 = x1 + (that._inverted ? length : -length);\r\n            y1 = that._zeroPosition + width;\r\n            y2 = that._zeroPosition - width;\r\n            result = [x1, y1, x2, y1, x2, y2, x1, y2]\r\n        } else {\r\n            y1 = options.y;\r\n            y2 = y1 + (that._inverted ? length : -length);\r\n            x1 = that._zeroPosition - width;\r\n            x2 = that._zeroPosition + width;\r\n            result = [x1, y1, x1, y2, x2, y2, x2, y1]\r\n        }\r\n        return {\r\n            points: result\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        var that = this;\r\n        var length = _Number(that._options.length);\r\n        var minBound;\r\n        var maxBound;\r\n        if (that.vertical) {\r\n            minBound = maxBound = layout.x;\r\n            if (that._inverted) {\r\n                maxBound = minBound + length\r\n            } else {\r\n                minBound = maxBound - length\r\n            }\r\n        } else {\r\n            minBound = maxBound = layout.y;\r\n            if (that._inverted) {\r\n                maxBound = minBound + length\r\n            } else {\r\n                minBound = maxBound - length\r\n            }\r\n        }\r\n        return {\r\n            min: minBound,\r\n            max: maxBound,\r\n            indent: that._options.width / 2\r\n        }\r\n    },\r\n    getTooltipParameters: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var s = (that._inverted ? options.length : -options.length) / 2;\r\n        var parameters = that.callBase();\r\n        that.vertical ? parameters.x += s : parameters.y += s;\r\n        parameters.offset = options.length / 2;\r\n        return parameters\r\n    }\r\n});\r\nexports.trianglemarker = triangleMarker;\r\nvar textCloud = _base_indicators.BaseTextCloudMarker.inherit({\r\n    _isEnabled: function() {\r\n        var that = this;\r\n        that.vertical = that._options.vertical;\r\n        that._inverted = that.vertical ? \"right\" === (0, _utils.normalizeEnum)(that._options.horizontalOrientation) : \"bottom\" === (0, _utils.normalizeEnum)(that._options.verticalOrientation);\r\n        return true\r\n    },\r\n    _isVisible: function() {\r\n        return true\r\n    },\r\n    _getTextCloudOptions: function() {\r\n        var that = this;\r\n        var x = that._actualPosition;\r\n        var y = that._actualPosition;\r\n        var type;\r\n        if (that.vertical) {\r\n            x = that._options.x;\r\n            type = that._inverted ? \"top-left\" : \"top-right\"\r\n        } else {\r\n            y = that._options.y;\r\n            type = that._inverted ? \"right-top\" : \"right-bottom\"\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            type: type\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        var that = this;\r\n        var minBound;\r\n        var maxBound;\r\n        var arrowLength = _Number(that._options.arrowLength) || 0;\r\n        var indent;\r\n        that._measureText();\r\n        if (that.vertical) {\r\n            indent = that._textFullHeight;\r\n            if (that._inverted) {\r\n                minBound = layout.x;\r\n                maxBound = layout.x + arrowLength + that._textFullWidth\r\n            } else {\r\n                minBound = layout.x - arrowLength - that._textFullWidth;\r\n                maxBound = layout.x\r\n            }\r\n        } else {\r\n            indent = that._textFullWidth;\r\n            if (that._inverted) {\r\n                minBound = layout.y;\r\n                maxBound = layout.y + arrowLength + that._textFullHeight\r\n            } else {\r\n                minBound = layout.y - arrowLength - that._textFullHeight;\r\n                maxBound = layout.y\r\n            }\r\n        }\r\n        return {\r\n            min: minBound,\r\n            max: maxBound,\r\n            indent: indent\r\n        }\r\n    }\r\n});\r\nexports.textcloud = textCloud;\r\nvar rangeBar = _base_indicators.BaseRangeBar.inherit({\r\n    _isEnabled: function() {\r\n        var that = this;\r\n        that.vertical = that._options.vertical;\r\n        that._inverted = that.vertical ? \"right\" === (0, _utils.normalizeEnum)(that._options.horizontalOrientation) : \"bottom\" === (0, _utils.normalizeEnum)(that._options.verticalOrientation);\r\n        return that._options.size > 0\r\n    },\r\n    _isVisible: function() {\r\n        return true\r\n    },\r\n    _createBarItem: function() {\r\n        return this._renderer.path([], \"area\").append(this._rootElement)\r\n    },\r\n    _createTracker: function() {\r\n        return this._renderer.path([], \"area\")\r\n    },\r\n    _setBarSides: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var size = _Number(options.size);\r\n        var minSide;\r\n        var maxSide;\r\n        if (that.vertical) {\r\n            if (that._inverted) {\r\n                minSide = options.x;\r\n                maxSide = options.x + size\r\n            } else {\r\n                minSide = options.x - size;\r\n                maxSide = options.x\r\n            }\r\n        } else {\r\n            if (that._inverted) {\r\n                minSide = options.y;\r\n                maxSide = options.y + size\r\n            } else {\r\n                minSide = options.y - size;\r\n                maxSide = options.y\r\n            }\r\n        }\r\n        that._minSide = minSide;\r\n        that._maxSide = maxSide;\r\n        that._minBound = minSide;\r\n        that._maxBound = maxSide\r\n    },\r\n    _getSpace: function() {\r\n        var options = this._options;\r\n        return options.space > 0 ? _Number(options.space) : 0\r\n    },\r\n    _isTextVisible: function() {\r\n        var textOptions = this._options.text || {};\r\n        return textOptions.indent > 0 || textOptions.indent < 0\r\n    },\r\n    _getTextAlign: function() {\r\n        return this.vertical ? this._options.text.indent > 0 ? \"left\" : \"right\" : \"center\"\r\n    },\r\n    _setTextItemsSides: function() {\r\n        var that = this;\r\n        var indent = _Number(that._options.text.indent);\r\n        if (indent > 0) {\r\n            that._lineStart = that._maxSide;\r\n            that._lineEnd = that._maxSide + indent;\r\n            that._textPosition = that._lineEnd + (that.vertical ? 2 : that._textHeight / 2);\r\n            that._maxBound = that._textPosition + (that.vertical ? that._textWidth : that._textHeight / 2)\r\n        } else {\r\n            if (indent < 0) {\r\n                that._lineStart = that._minSide;\r\n                that._lineEnd = that._minSide + indent;\r\n                that._textPosition = that._lineEnd - (that.vertical ? 2 : that._textHeight / 2);\r\n                that._minBound = that._textPosition - (that.vertical ? that._textWidth : that._textHeight / 2)\r\n            }\r\n        }\r\n    },\r\n    _getPositions: function() {\r\n        var that = this;\r\n        var startPosition = that._startPosition;\r\n        var endPosition = that._endPosition;\r\n        var space = that._space;\r\n        var basePosition = that._basePosition;\r\n        var actualPosition = that._actualPosition;\r\n        var mainPosition1;\r\n        var mainPosition2;\r\n        var backPosition1;\r\n        var backPosition2;\r\n        if (startPosition < endPosition) {\r\n            if (basePosition < actualPosition) {\r\n                mainPosition1 = basePosition;\r\n                mainPosition2 = actualPosition\r\n            } else {\r\n                mainPosition1 = actualPosition;\r\n                mainPosition2 = basePosition\r\n            }\r\n            backPosition1 = mainPosition1 - space;\r\n            backPosition2 = mainPosition2 + space\r\n        } else {\r\n            if (basePosition > actualPosition) {\r\n                mainPosition1 = basePosition;\r\n                mainPosition2 = actualPosition\r\n            } else {\r\n                mainPosition1 = actualPosition;\r\n                mainPosition2 = basePosition\r\n            }\r\n            backPosition1 = mainPosition1 + space;\r\n            backPosition2 = mainPosition2 - space\r\n        }\r\n        return {\r\n            start: startPosition,\r\n            end: endPosition,\r\n            main1: mainPosition1,\r\n            main2: mainPosition2,\r\n            back1: backPosition1,\r\n            back2: backPosition2\r\n        }\r\n    },\r\n    _buildItemSettings: function(from, to) {\r\n        var that = this;\r\n        var side1 = that._minSide;\r\n        var side2 = that._maxSide;\r\n        var points = that.vertical ? [side1, from, side1, to, side2, to, side2, from] : [from, side1, from, side2, to, side2, to, side1];\r\n        return {\r\n            points: points\r\n        }\r\n    },\r\n    _updateTextPosition: function() {\r\n        var that = this;\r\n        that._text.attr(that.vertical ? {\r\n            x: that._textPosition,\r\n            y: that._actualPosition + that._textVerticalOffset\r\n        } : {\r\n            x: that._actualPosition,\r\n            y: that._textPosition + that._textVerticalOffset\r\n        })\r\n    },\r\n    _updateLinePosition: function() {\r\n        var that = this;\r\n        var actualPosition = that._actualPosition;\r\n        var side1;\r\n        var side2;\r\n        var points;\r\n        if (that.vertical) {\r\n            if (that._basePosition >= actualPosition) {\r\n                side1 = actualPosition;\r\n                side2 = actualPosition + 2\r\n            } else {\r\n                side1 = actualPosition - 2;\r\n                side2 = actualPosition\r\n            }\r\n            points = [that._lineStart, side1, that._lineStart, side2, that._lineEnd, side2, that._lineEnd, side1]\r\n        } else {\r\n            if (that._basePosition <= actualPosition) {\r\n                side1 = actualPosition - 2;\r\n                side2 = actualPosition\r\n            } else {\r\n                side1 = actualPosition;\r\n                side2 = actualPosition + 2\r\n            }\r\n            points = [side1, that._lineStart, side1, that._lineEnd, side2, that._lineEnd, side2, that._lineStart]\r\n        }\r\n        that._line.attr({\r\n            points: points\r\n        }).sharp()\r\n    },\r\n    _getTooltipPosition: function() {\r\n        var that = this;\r\n        var crossCenter = (that._minSide + that._maxSide) / 2;\r\n        var alongCenter = (that._basePosition + that._actualPosition) / 2;\r\n        return that.vertical ? {\r\n            x: crossCenter,\r\n            y: alongCenter\r\n        } : {\r\n            x: alongCenter,\r\n            y: crossCenter\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        var that = this;\r\n        var size = _Number(that._options.size);\r\n        var textIndent = _Number(that._options.text.indent);\r\n        var minBound;\r\n        var maxBound;\r\n        var indent;\r\n        that._measureText();\r\n        if (that.vertical) {\r\n            minBound = maxBound = layout.x;\r\n            if (that._inverted) {\r\n                maxBound += size\r\n            } else {\r\n                minBound -= size\r\n            }\r\n            if (that._hasText) {\r\n                indent = that._textHeight / 2;\r\n                if (textIndent > 0) {\r\n                    maxBound += textIndent + that._textWidth\r\n                }\r\n                if (textIndent < 0) {\r\n                    minBound += textIndent - that._textWidth\r\n                }\r\n            }\r\n        } else {\r\n            minBound = maxBound = layout.y;\r\n            if (that._inverted) {\r\n                maxBound += size\r\n            } else {\r\n                minBound -= size\r\n            }\r\n            if (that._hasText) {\r\n                indent = that._textWidth / 2;\r\n                if (textIndent > 0) {\r\n                    maxBound += textIndent + that._textHeight\r\n                }\r\n                if (textIndent < 0) {\r\n                    minBound += textIndent - that._textHeight\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            min: minBound,\r\n            max: maxBound,\r\n            indent: indent\r\n        }\r\n    }\r\n});\r\nexports.rangebar = exports._default = rangeBar;\r\n"]},"metadata":{},"sourceType":"script"}