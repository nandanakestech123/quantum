{"ast":null,"code":"/**\r\n * DevExtreme (ui/html_editor/modules/toolbar.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.default = void 0;\n\nvar _devextremeQuill = _interopRequireDefault(require(\"devextreme-quill\"));\n\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\n\nvar _toolbar = _interopRequireDefault(require(\"../../toolbar\"));\n\nrequire(\"../../select_box\");\n\nrequire(\"../../color_box/color_view\");\n\nrequire(\"../../number_box\");\n\nvar _widget_collector = _interopRequireDefault(require(\"./widget_collector\"));\n\nvar _iterator = require(\"../../../core/utils/iterator\");\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _message = _interopRequireDefault(require(\"../../../localization/message\"));\n\nvar _inflector = require(\"../../../core/utils/inflector\");\n\nvar _events_engine = _interopRequireDefault(require(\"../../../events/core/events_engine\"));\n\nvar _index = require(\"../../../events/utils/index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\n    return Array.from(iter);\n  }\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    return _arrayLikeToArray(arr);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar ToolbarModule = {};\n\nif (_devextremeQuill.default) {\n  var BaseModule = _devextremeQuill.default.import(\"core/module\");\n\n  var TOOLBAR_WRAPPER_CLASS = \"dx-htmleditor-toolbar-wrapper\";\n  var TOOLBAR_CLASS = \"dx-htmleditor-toolbar\";\n  var TOOLBAR_FORMAT_WIDGET_CLASS = \"dx-htmleditor-toolbar-format\";\n  var TOOLBAR_SEPARATOR_CLASS = \"dx-htmleditor-toolbar-separator\";\n  var TOOLBAR_MENU_SEPARATOR_CLASS = \"dx-htmleditor-toolbar-menu-separator\";\n  var ACTIVE_FORMAT_CLASS = \"dx-format-active\";\n  var BOX_ITEM_CONTENT_CLASS = \"dx-box-item-content\";\n  var ICON_CLASS = \"dx-icon\";\n  var SELECTION_CHANGE_EVENT = \"selection-change\";\n  var DIALOG_COLOR_CAPTION = \"dxHtmlEditor-dialogColorCaption\";\n  var DIALOG_BACKGROUND_CAPTION = \"dxHtmlEditor-dialogBackgroundCaption\";\n  var DIALOG_LINK_CAPTION = \"dxHtmlEditor-dialogLinkCaption\";\n  var DIALOG_LINK_FIELD_URL = \"dxHtmlEditor-dialogLinkUrlField\";\n  var DIALOG_LINK_FIELD_TEXT = \"dxHtmlEditor-dialogLinkTextField\";\n  var DIALOG_LINK_FIELD_TARGET = \"dxHtmlEditor-dialogLinkTargetField\";\n  var DIALOG_LINK_FIELD_TARGET_CLASS = \"dx-formdialog-field-target\";\n  var DIALOG_IMAGE_CAPTION = \"dxHtmlEditor-dialogImageCaption\";\n  var DIALOG_IMAGE_FIELD_URL = \"dxHtmlEditor-dialogImageUrlField\";\n  var DIALOG_IMAGE_FIELD_ALT = \"dxHtmlEditor-dialogImageAltField\";\n  var DIALOG_IMAGE_FIELD_WIDTH = \"dxHtmlEditor-dialogImageWidthField\";\n  var DIALOG_IMAGE_FIELD_HEIGHT = \"dxHtmlEditor-dialogImageHeightField\";\n  var DIALOG_TABLE_FIELD_COLUMNS = \"dxHtmlEditor-dialogInsertTableRowsField\";\n  var DIALOG_TABLE_FIELD_ROWS = \"dxHtmlEditor-dialogInsertTableColumnsField\";\n  var DIALOG_TABLE_CAPTION = \"dxHtmlEditor-dialogInsertTableCaption\";\n  var TABLE_OPERATIONS = [\"insertTable\", \"insertRowAbove\", \"insertRowBelow\", \"insertColumnLeft\", \"insertColumnRight\", \"deleteColumn\", \"deleteRow\", \"deleteTable\"];\n  var USER_ACTION = \"user\";\n  var SILENT_ACTION = \"silent\";\n\n  var HEADING_TEXT = _message.default.format(\"dxHtmlEditor-heading\");\n\n  var NORMAL_TEXT = _message.default.format(\"dxHtmlEditor-normalText\");\n\n  ToolbarModule = function (_BaseModule) {\n    _inherits(ToolbarModule, _BaseModule);\n\n    var _super = _createSuper(ToolbarModule);\n\n    function ToolbarModule(quill, options) {\n      var _this;\n\n      _classCallCheck(this, ToolbarModule);\n\n      _this = _super.call(this, quill, options);\n      _this._editorInstance = options.editorInstance;\n      _this._toolbarWidgets = new _widget_collector.default();\n      _this._formatHandlers = _this._getFormatHandlers();\n\n      if ((0, _type.isDefined)(options.items)) {\n        _this._addCallbacks();\n\n        _this._renderToolbar();\n\n        _this.quill.on(\"editor-change\", function (eventName) {\n          var isSelectionChanged = eventName === SELECTION_CHANGE_EVENT;\n\n          _this._updateToolbar(isSelectionChanged);\n        });\n      }\n\n      return _this;\n    }\n\n    _createClass(ToolbarModule, [{\n      key: \"_applyFormat\",\n      value: function (formatArgs, event) {\n        var _this$quill;\n\n        this._editorInstance._saveValueChangeEvent(event);\n\n        (_this$quill = this.quill).format.apply(_this$quill, _toConsumableArray(formatArgs));\n      }\n    }, {\n      key: \"_addCallbacks\",\n      value: function () {\n        this._editorInstance.addCleanCallback(this.clean.bind(this));\n\n        this._editorInstance.addContentInitializedCallback(this.updateHistoryWidgets.bind(this));\n      }\n    }, {\n      key: \"_updateToolbar\",\n      value: function (isSelectionChanged) {\n        this.updateFormatWidgets(isSelectionChanged);\n        this.updateHistoryWidgets();\n        this.updateTableWidgets();\n      }\n    }, {\n      key: \"_getDefaultClickHandler\",\n      value: function (formatName) {\n        var _this2 = this;\n\n        return function (_ref) {\n          var event = _ref.event;\n\n          var formats = _this2.quill.getFormat();\n\n          var value = formats[formatName];\n          var newValue = !((0, _type.isBoolean)(value) ? value : (0, _type.isDefined)(value));\n\n          _this2._applyFormat([formatName, newValue, USER_ACTION], event);\n\n          _this2._updateFormatWidget(formatName, newValue, formats);\n        };\n      }\n    }, {\n      key: \"_updateFormatWidget\",\n      value: function (formatName, isApplied, formats) {\n        var widget = this._toolbarWidgets.getByName(formatName);\n\n        if (!widget) {\n          return;\n        }\n\n        if (isApplied) {\n          this._markActiveFormatWidget(formatName, widget, formats);\n        } else {\n          this._resetFormatWidget(formatName, widget);\n\n          if (Object.prototype.hasOwnProperty.call(formatName)) {\n            delete formats[formatName];\n          }\n        }\n\n        this._toggleClearFormatting(isApplied || !(0, _type.isEmptyObject)(formats));\n      }\n    }, {\n      key: \"_getFormatHandlers\",\n      value: function () {\n        var _this3 = this;\n\n        return {\n          clear: function (e) {\n            var range = _this3.quill.getSelection();\n\n            if (range) {\n              _this3.quill.removeFormat(range);\n\n              _this3.updateFormatWidgets();\n            }\n          },\n          link: this._prepareLinkHandler(),\n          image: this._prepareImageHandler(),\n          color: this._prepareColorClickHandler(\"color\"),\n          background: this._prepareColorClickHandler(\"background\"),\n          orderedList: this._prepareShortcutHandler(\"list\", \"ordered\"),\n          bulletList: this._prepareShortcutHandler(\"list\", \"bullet\"),\n          alignLeft: this._prepareShortcutHandler(\"align\", \"left\"),\n          alignCenter: this._prepareShortcutHandler(\"align\", \"center\"),\n          alignRight: this._prepareShortcutHandler(\"align\", \"right\"),\n          alignJustify: this._prepareShortcutHandler(\"align\", \"justify\"),\n          codeBlock: this._getDefaultClickHandler(\"code-block\"),\n          undo: function (_ref2) {\n            var event = _ref2.event;\n\n            _this3._editorInstance._saveValueChangeEvent(event);\n\n            _this3.quill.history.undo();\n          },\n          redo: function (_ref3) {\n            var event = _ref3.event;\n\n            _this3._editorInstance._saveValueChangeEvent(event);\n\n            _this3.quill.history.redo();\n          },\n          increaseIndent: function (_ref4) {\n            var event = _ref4.event;\n\n            _this3._applyFormat([\"indent\", \"+1\", USER_ACTION], event);\n          },\n          decreaseIndent: function (_ref5) {\n            var event = _ref5.event;\n\n            _this3._applyFormat([\"indent\", \"-1\", USER_ACTION], event);\n          },\n          superscript: this._prepareShortcutHandler(\"script\", \"super\"),\n          subscript: this._prepareShortcutHandler(\"script\", \"sub\"),\n          insertTable: this._prepareInsertTableHandler(),\n          insertRowAbove: this._getTableOperationHandler(\"insertRowAbove\"),\n          insertRowBelow: this._getTableOperationHandler(\"insertRowBelow\"),\n          insertColumnLeft: this._getTableOperationHandler(\"insertColumnLeft\"),\n          insertColumnRight: this._getTableOperationHandler(\"insertColumnRight\"),\n          deleteColumn: this._getTableOperationHandler(\"deleteColumn\"),\n          deleteRow: this._getTableOperationHandler(\"deleteRow\"),\n          deleteTable: this._getTableOperationHandler(\"deleteTable\")\n        };\n      }\n    }, {\n      key: \"_prepareShortcutHandler\",\n      value: function (formatName, shortcutValue) {\n        var _this4 = this;\n\n        return function (_ref6) {\n          var event = _ref6.event;\n\n          var formats = _this4.quill.getFormat();\n\n          var value = formats[formatName] === shortcutValue ? false : shortcutValue;\n\n          _this4._applyFormat([formatName, value, USER_ACTION], event);\n\n          _this4.updateFormatWidgets(true);\n        };\n      }\n    }, {\n      key: \"_prepareLinkHandler\",\n      value: function () {\n        var _this5 = this;\n\n        return function () {\n          _this5.quill.focus();\n\n          var selection = _this5.quill.getSelection();\n\n          var hasEmbedContent = _this5._hasEmbedContent(selection);\n\n          var formats = selection ? _this5.quill.getFormat() : {};\n          var formData = {\n            href: formats.link || \"\",\n            text: selection && !hasEmbedContent ? _this5.quill.getText(selection) : \"\",\n            target: Object.prototype.hasOwnProperty.call(formats, \"target\") ? !!formats.target : true\n          };\n\n          _this5._editorInstance.formDialogOption(\"title\", _message.default.format(DIALOG_LINK_CAPTION));\n\n          var promise = _this5._editorInstance.showFormDialog({\n            formData: formData,\n            items: _this5._getLinkFormItems(selection)\n          });\n\n          promise.done(function (formData, event) {\n            if (selection && !hasEmbedContent) {\n              var text = formData.text || formData.href;\n              var index = selection.index,\n                  length = selection.length;\n              formData.text = void 0;\n\n              _this5._editorInstance._saveValueChangeEvent(event);\n\n              length && _this5.quill.deleteText(index, length, SILENT_ACTION);\n\n              _this5.quill.insertText(index, text, \"link\", formData, USER_ACTION);\n\n              _this5.quill.setSelection(index + text.length, 0, USER_ACTION);\n            } else {\n              formData.text = !selection && !formData.text ? formData.href : formData.text;\n\n              _this5._applyFormat([\"link\", formData, USER_ACTION], event);\n            }\n          });\n          promise.fail(function () {\n            _this5.quill.focus();\n          });\n        };\n      }\n    }, {\n      key: \"_hasEmbedContent\",\n      value: function (selection) {\n        return !!selection && this.quill.getText(selection).trim().length < selection.length;\n      }\n    }, {\n      key: \"_getLinkFormItems\",\n      value: function (selection) {\n        return [{\n          dataField: \"href\",\n          label: {\n            text: _message.default.format(DIALOG_LINK_FIELD_URL)\n          }\n        }, {\n          dataField: \"text\",\n          label: {\n            text: _message.default.format(DIALOG_LINK_FIELD_TEXT)\n          },\n          visible: !this._hasEmbedContent(selection)\n        }, {\n          dataField: \"target\",\n          editorType: \"dxCheckBox\",\n          editorOptions: {\n            text: _message.default.format(DIALOG_LINK_FIELD_TARGET)\n          },\n          cssClass: DIALOG_LINK_FIELD_TARGET_CLASS,\n          label: {\n            visible: false\n          }\n        }];\n      }\n    }, {\n      key: \"_prepareImageHandler\",\n      value: function () {\n        var _this6 = this;\n\n        return function () {\n          var formData = _this6.quill.getFormat();\n\n          var isUpdateDialog = Object.prototype.hasOwnProperty.call(formData, \"imageSrc\");\n          var defaultIndex = _this6._defaultPasteIndex;\n\n          if (isUpdateDialog) {\n            var _this6$quill$getForma = _this6.quill.getFormat(defaultIndex - 1, 1),\n                imageSrc = _this6$quill$getForma.imageSrc;\n\n            formData.src = formData.imageSrc;\n            delete formData.imageSrc;\n\n            if (!imageSrc || 0 === defaultIndex) {\n              _this6.quill.setSelection(defaultIndex + 1, 0, SILENT_ACTION);\n            }\n          }\n\n          var formatIndex = _this6._embedFormatIndex;\n\n          _this6._editorInstance.formDialogOption(\"title\", _message.default.format(DIALOG_IMAGE_CAPTION));\n\n          var promise = _this6._editorInstance.showFormDialog({\n            formData: formData,\n            items: _this6._imageFormItems\n          });\n\n          promise.done(function (formData, event) {\n            var index = defaultIndex;\n\n            _this6._editorInstance._saveValueChangeEvent(event);\n\n            if (isUpdateDialog) {\n              index = formatIndex;\n\n              _this6.quill.deleteText(index, 1, SILENT_ACTION);\n            }\n\n            _this6.quill.insertEmbed(index, \"extendedImage\", formData, USER_ACTION);\n\n            _this6.quill.setSelection(index + 1, 0, USER_ACTION);\n          }).always(function () {\n            _this6.quill.focus();\n          });\n        };\n      }\n    }, {\n      key: \"_prepareInsertTableHandler\",\n      value: function () {\n        var _this7 = this;\n\n        return function () {\n          var formats = _this7.quill.getFormat();\n\n          var isTableFocused = Object.prototype.hasOwnProperty.call(formats, \"table\");\n          var formData = {\n            rows: 1,\n            columns: 1\n          };\n\n          if (isTableFocused) {\n            _this7.quill.focus();\n\n            return;\n          }\n\n          _this7._editorInstance.formDialogOption(\"title\", _message.default.format(DIALOG_TABLE_CAPTION));\n\n          var promise = _this7._editorInstance.showFormDialog({\n            formData: formData,\n            items: _this7._insertTableFormItems\n          });\n\n          promise.done(function (formData, event) {\n            _this7.quill.focus();\n\n            var table = _this7.quill.getModule(\"table\");\n\n            if (table) {\n              _this7._editorInstance._saveValueChangeEvent(event);\n\n              var columns = formData.columns,\n                  rows = formData.rows;\n              table.insertTable(columns, rows);\n            }\n          }).always(function () {\n            _this7.quill.focus();\n          });\n        };\n      }\n    }, {\n      key: \"_getTableOperationHandler\",\n      value: function (operationName) {\n        var _this8 = this;\n\n        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          rest[_key - 1] = arguments[_key];\n        }\n\n        return function () {\n          var table = _this8.quill.getModule(\"table\");\n\n          if (!table) {\n            return;\n          }\n\n          _this8.quill.focus();\n\n          return table[operationName].apply(table, rest);\n        };\n      }\n    }, {\n      key: \"_renderToolbar\",\n      value: function () {\n        var _this9 = this;\n\n        var container = this.options.container || this._getContainer();\n\n        this._$toolbar = (0, _renderer.default)(\"<div>\").addClass(TOOLBAR_CLASS).appendTo(container);\n        this._$toolbarContainer = (0, _renderer.default)(container).addClass(TOOLBAR_WRAPPER_CLASS);\n\n        _events_engine.default.on(this._$toolbarContainer, (0, _index.addNamespace)(\"mousedown\", this._editorInstance.NAME), function (e) {\n          e.preventDefault();\n        });\n\n        this.toolbarInstance = this._editorInstance._createComponent(this._$toolbar, _toolbar.default, this.toolbarConfig);\n\n        this._editorInstance.on(\"optionChanged\", function (_ref7) {\n          var name = _ref7.name;\n\n          if (\"readOnly\" === name || \"disabled\" === name) {\n            _this9.toolbarInstance.option(\"disabled\", _this9.isInteractionDisabled);\n          }\n        });\n      }\n    }, {\n      key: \"isMultilineMode\",\n      value: function () {\n        var _this$options$multili;\n\n        return null !== (_this$options$multili = this.options.multiline) && void 0 !== _this$options$multili ? _this$options$multili : true;\n      }\n    }, {\n      key: \"clean\",\n      value: function () {\n        this._toolbarWidgets.clear();\n\n        if (this._$toolbarContainer) {\n          this._$toolbarContainer.empty().removeClass(TOOLBAR_WRAPPER_CLASS);\n        }\n      }\n    }, {\n      key: \"repaint\",\n      value: function () {\n        this.toolbarInstance && this.toolbarInstance.repaint();\n      }\n    }, {\n      key: \"_getContainer\",\n      value: function () {\n        var $container = (0, _renderer.default)(\"<div>\");\n\n        this._editorInstance.$element().prepend($container);\n\n        return $container;\n      }\n    }, {\n      key: \"_prepareToolbarItems\",\n      value: function () {\n        var _this10 = this;\n\n        var resultItems = [];\n        (0, _iterator.each)(this.options.items, function (index, item) {\n          var newItem;\n\n          if ((0, _type.isObject)(item)) {\n            newItem = _this10._handleObjectItem(item);\n          } else {\n            if ((0, _type.isString)(item)) {\n              var buttonItemConfig = _this10._prepareButtonItemConfig(item);\n\n              newItem = _this10._getToolbarItem(buttonItemConfig);\n            }\n          }\n\n          if (newItem) {\n            resultItems.push(newItem);\n          }\n        });\n        return resultItems;\n      }\n    }, {\n      key: \"_handleObjectItem\",\n      value: function (item) {\n        if (item.formatName && item.formatValues && this._isAcceptableItem(item.widget, \"dxSelectBox\")) {\n          var selectItemConfig = this._prepareSelectItemConfig(item);\n\n          return this._getToolbarItem(selectItemConfig);\n        } else {\n          if (item.formatName && this._isAcceptableItem(item.widget, \"dxButton\")) {\n            var defaultButtonItemConfig = this._prepareButtonItemConfig(item.formatName);\n\n            var buttonItemConfig = (0, _extend.extend)(true, defaultButtonItemConfig, item);\n            return this._getToolbarItem(buttonItemConfig);\n          } else {\n            return this._getToolbarItem(item);\n          }\n        }\n      }\n    }, {\n      key: \"_isAcceptableItem\",\n      value: function (widget, acceptableWidgetName) {\n        return !widget || widget === acceptableWidgetName;\n      }\n    }, {\n      key: \"_prepareButtonItemConfig\",\n      value: function (formatName) {\n        var iconName = \"clear\" === formatName ? \"clearformat\" : formatName;\n        var buttonText = (0, _inflector.titleize)(formatName);\n        return {\n          widget: \"dxButton\",\n          formatName: formatName,\n          options: {\n            hint: buttonText,\n            text: buttonText,\n            icon: iconName.toLowerCase(),\n            onClick: this._formatHandlers[formatName] || this._getDefaultClickHandler(formatName),\n            stylingMode: \"text\"\n          },\n          showText: \"inMenu\"\n        };\n      }\n    }, {\n      key: \"_prepareSelectItemConfig\",\n      value: function (item) {\n        var _this11 = this;\n\n        return (0, _extend.extend)(true, {\n          widget: \"dxSelectBox\",\n          formatName: item.formatName,\n          options: {\n            stylingMode: \"filled\",\n            dataSource: item.formatValues,\n            placeholder: (0, _inflector.titleize)(item.formatName),\n            onValueChanged: function (e) {\n              if (!_this11._isReset) {\n                _this11._applyFormat([item.formatName, e.value, USER_ACTION], e.event);\n\n                _this11._setValueSilent(e.component, e.value);\n              }\n            }\n          }\n        }, item);\n      }\n    }, {\n      key: \"_prepareColorClickHandler\",\n      value: function (formatName) {\n        var _this12 = this;\n\n        return function () {\n          var formData = _this12.quill.getFormat();\n\n          var caption = \"color\" === formatName ? DIALOG_COLOR_CAPTION : DIALOG_BACKGROUND_CAPTION;\n\n          _this12._editorInstance.formDialogOption(\"title\", _message.default.format(caption));\n\n          var promise = _this12._editorInstance.showFormDialog({\n            formData: formData,\n            items: [{\n              dataField: formatName,\n              editorType: \"dxColorView\",\n              editorOptions: {\n                onContentReady: function (e) {\n                  (0, _renderer.default)(e.element).closest(\".\".concat(BOX_ITEM_CONTENT_CLASS)).css(\"flexBasis\", \"auto\");\n                },\n                focusStateEnabled: false\n              },\n              label: {\n                visible: false\n              }\n            }]\n          });\n\n          promise.done(function (formData, event) {\n            _this12._applyFormat([formatName, formData[formatName], USER_ACTION], event);\n          });\n          promise.fail(function () {\n            _this12.quill.focus();\n          });\n        };\n      }\n    }, {\n      key: \"_getToolbarItem\",\n      value: function (item) {\n        var _this13 = this;\n\n        var baseItem = {\n          options: {\n            onInitialized: function (e) {\n              if (item.formatName) {\n                e.component.$element().addClass(TOOLBAR_FORMAT_WIDGET_CLASS);\n                e.component.$element().toggleClass(\"dx-\".concat(item.formatName.toLowerCase(), \"-format\"), !!item.formatName);\n\n                _this13._toolbarWidgets.add(item.formatName, e.component);\n              }\n            }\n          }\n        };\n        var multilineItem = this.isMultilineMode() ? {\n          location: \"before\",\n          locateInMenu: \"never\"\n        } : {};\n        return (0, _extend.extend)(true, {\n          location: \"before\",\n          locateInMenu: \"auto\"\n        }, this._getDefaultConfig(item.formatName), item, baseItem, multilineItem);\n      }\n    }, {\n      key: \"_getDefaultItemsConfig\",\n      value: function () {\n        return {\n          header: {\n            options: {\n              displayExpr: function (item) {\n                var isHeaderValue = (0, _type.isDefined)(item) && false !== item;\n                return isHeaderValue ? \"\".concat(HEADING_TEXT, \" \").concat(item) : NORMAL_TEXT;\n              }\n            }\n          },\n          clear: {\n            options: {\n              disabled: true\n            }\n          },\n          undo: {\n            options: {\n              disabled: true\n            }\n          },\n          redo: {\n            options: {\n              disabled: true\n            }\n          },\n          insertRowAbove: {\n            options: {\n              disabled: true\n            }\n          },\n          insertRowBelow: {\n            options: {\n              disabled: true\n            }\n          },\n          insertColumnLeft: {\n            options: {\n              disabled: true\n            }\n          },\n          insertColumnRight: {\n            options: {\n              disabled: true\n            }\n          },\n          deleteRow: {\n            options: {\n              disabled: true\n            }\n          },\n          deleteColumn: {\n            options: {\n              disabled: true\n            }\n          },\n          deleteTable: {\n            options: {\n              disabled: true\n            }\n          },\n          separator: {\n            template: function (data, index, element) {\n              (0, _renderer.default)(element).addClass(TOOLBAR_SEPARATOR_CLASS);\n            },\n            menuItemTemplate: function (data, index, element) {\n              (0, _renderer.default)(element).addClass(TOOLBAR_MENU_SEPARATOR_CLASS);\n            }\n          }\n        };\n      }\n    }, {\n      key: \"_getDefaultConfig\",\n      value: function (formatName) {\n        return this._getDefaultItemsConfig()[formatName];\n      }\n    }, {\n      key: \"updateHistoryWidgets\",\n      value: function () {\n        var historyModule = this.quill.history;\n\n        if (!historyModule) {\n          return;\n        }\n\n        var _historyModule$stack = historyModule.stack,\n            undoOps = _historyModule$stack.undo,\n            redoOps = _historyModule$stack.redo;\n\n        this._updateManipulationWidget(this._toolbarWidgets.getByName(\"undo\"), Boolean(undoOps.length));\n\n        this._updateManipulationWidget(this._toolbarWidgets.getByName(\"redo\"), Boolean(redoOps.length));\n      }\n    }, {\n      key: \"updateTableWidgets\",\n      value: function () {\n        var _this$quill$getFormat,\n            _this14 = this;\n\n        var table = this.quill.getModule(\"table\");\n\n        if (!table) {\n          return;\n        }\n\n        var selection = this.quill.getSelection();\n        var isTableOperationsEnabled = selection && Boolean(null === (_this$quill$getFormat = this.quill.getFormat(selection)) || void 0 === _this$quill$getFormat ? void 0 : _this$quill$getFormat.table);\n        TABLE_OPERATIONS.forEach(function (operationName) {\n          var isInsertTable = \"insertTable\" === operationName;\n\n          var widget = _this14._toolbarWidgets.getByName(operationName);\n\n          _this14._updateManipulationWidget(widget, isInsertTable ? !isTableOperationsEnabled : isTableOperationsEnabled);\n        });\n      }\n    }, {\n      key: \"_updateManipulationWidget\",\n      value: function (widget, isOperationEnabled) {\n        if (!widget) {\n          return;\n        }\n\n        widget.option(\"disabled\", !isOperationEnabled);\n      }\n    }, {\n      key: \"updateFormatWidgets\",\n      value: function (isResetRequired) {\n        var selection = this.quill.getSelection();\n\n        if (!selection) {\n          return;\n        }\n\n        var formats = this.quill.getFormat(selection);\n        var hasFormats = !(0, _type.isEmptyObject)(formats);\n\n        if (!hasFormats || isResetRequired) {\n          this._resetFormatWidgets();\n        }\n\n        for (var formatName in formats) {\n          var widgetName = this._getFormatWidgetName(formatName, formats);\n\n          var formatWidget = this._toolbarWidgets.getByName(widgetName) || this._toolbarWidgets.getByName(formatName);\n\n          if (!formatWidget) {\n            continue;\n          }\n\n          this._markActiveFormatWidget(formatName, formatWidget, formats);\n        }\n\n        this._toggleClearFormatting(hasFormats || selection.length > 1);\n      }\n    }, {\n      key: \"_markActiveFormatWidget\",\n      value: function (name, widget, formats) {\n        if (this._isColorFormat(name)) {\n          this._updateColorWidget(name, formats[name]);\n        }\n\n        if (\"value\" in widget.option()) {\n          this._setValueSilent(widget, formats[name]);\n        } else {\n          widget.$element().addClass(ACTIVE_FORMAT_CLASS);\n        }\n      }\n    }, {\n      key: \"_toggleClearFormatting\",\n      value: function (hasFormats) {\n        var clearWidget = this._toolbarWidgets.getByName(\"clear\");\n\n        if (clearWidget) {\n          clearWidget.option(\"disabled\", !hasFormats);\n        }\n      }\n    }, {\n      key: \"_isColorFormat\",\n      value: function (formatName) {\n        return \"color\" === formatName || \"background\" === formatName;\n      }\n    }, {\n      key: \"_updateColorWidget\",\n      value: function (formatName, color) {\n        var formatWidget = this._toolbarWidgets.getByName(formatName);\n\n        if (!formatWidget) {\n          return;\n        }\n\n        formatWidget.$element().find(\".\".concat(ICON_CLASS)).css(\"borderBottomColor\", color || \"transparent\");\n      }\n    }, {\n      key: \"_getFormatWidgetName\",\n      value: function (formatName, formats) {\n        var widgetName;\n\n        switch (formatName) {\n          case \"align\":\n            widgetName = formatName + (0, _inflector.titleize)(formats[formatName]);\n            break;\n\n          case \"list\":\n            widgetName = formats[formatName] + (0, _inflector.titleize)(formatName);\n            break;\n\n          case \"code-block\":\n            widgetName = \"codeBlock\";\n            break;\n\n          case \"script\":\n            widgetName = formats[formatName] + formatName;\n            break;\n\n          case \"imageSrc\":\n            widgetName = \"image\";\n            break;\n\n          default:\n            widgetName = formatName;\n        }\n\n        return widgetName;\n      }\n    }, {\n      key: \"_setValueSilent\",\n      value: function (widget, value) {\n        this._isReset = true;\n        widget.option(\"value\", value);\n        this._isReset = false;\n      }\n    }, {\n      key: \"_resetFormatWidgets\",\n      value: function () {\n        var _this15 = this;\n\n        this._toolbarWidgets.each(function (name, widget) {\n          _this15._resetFormatWidget(name, widget);\n        });\n      }\n    }, {\n      key: \"_resetFormatWidget\",\n      value: function (name, widget) {\n        widget.$element().removeClass(ACTIVE_FORMAT_CLASS);\n\n        if (this._isColorFormat(name)) {\n          this._updateColorWidget(name);\n        }\n\n        if (\"clear\" === name) {\n          widget.option(\"disabled\", true);\n        }\n\n        if (\"dxSelectBox\" === widget.NAME) {\n          this._setValueSilent(widget, null);\n        }\n      }\n    }, {\n      key: \"addClickHandler\",\n      value: function (formatName, handler) {\n        this._formatHandlers[formatName] = handler;\n\n        var formatWidget = this._toolbarWidgets.getByName(formatName);\n\n        if (formatWidget && \"dxButton\" === formatWidget.NAME) {\n          formatWidget.option(\"onClick\", handler);\n        }\n      }\n    }, {\n      key: \"_insertTableFormItems\",\n      get: function () {\n        return [{\n          dataField: \"columns\",\n          editorType: \"dxNumberBox\",\n          editorOptions: {\n            min: 1\n          },\n          label: {\n            text: _message.default.format(DIALOG_TABLE_FIELD_COLUMNS)\n          }\n        }, {\n          dataField: \"rows\",\n          editorType: \"dxNumberBox\",\n          editorOptions: {\n            min: 1\n          },\n          label: {\n            text: _message.default.format(DIALOG_TABLE_FIELD_ROWS)\n          }\n        }];\n      }\n    }, {\n      key: \"_embedFormatIndex\",\n      get: function () {\n        var selection = this.quill.getSelection();\n\n        if (selection) {\n          if (selection.length) {\n            return selection.index;\n          } else {\n            return selection.index - 1;\n          }\n        } else {\n          return this.quill.getLength();\n        }\n      }\n    }, {\n      key: \"_defaultPasteIndex\",\n      get: function () {\n        var selection = this.quill.getSelection();\n        return (0, _type.isDefined)(null === selection || void 0 === selection ? void 0 : selection.index) ? selection.index : this.quill.getLength();\n      }\n    }, {\n      key: \"_imageFormItems\",\n      get: function () {\n        return [{\n          dataField: \"src\",\n          label: {\n            text: _message.default.format(DIALOG_IMAGE_FIELD_URL)\n          }\n        }, {\n          dataField: \"width\",\n          label: {\n            text: _message.default.format(DIALOG_IMAGE_FIELD_WIDTH)\n          }\n        }, {\n          dataField: \"height\",\n          label: {\n            text: _message.default.format(DIALOG_IMAGE_FIELD_HEIGHT)\n          }\n        }, {\n          dataField: \"alt\",\n          label: {\n            text: _message.default.format(DIALOG_IMAGE_FIELD_ALT)\n          }\n        }];\n      }\n    }, {\n      key: \"toolbarConfig\",\n      get: function () {\n        return {\n          dataSource: this._prepareToolbarItems(),\n          disabled: this.isInteractionDisabled,\n          menuContainer: this._$toolbarContainer,\n          multiline: this.isMultilineMode()\n        };\n      }\n    }, {\n      key: \"isInteractionDisabled\",\n      get: function () {\n        return this._editorInstance.option(\"readOnly\") || this._editorInstance.option(\"disabled\");\n      }\n    }]);\n\n    return ToolbarModule;\n  }(BaseModule);\n}\n\nvar _default = ToolbarModule;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/html_editor/modules/toolbar.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","default","_devextremeQuill","_interopRequireDefault","require","_renderer","_toolbar","_widget_collector","_iterator","_type","_extend","_message","_inflector","_events_engine","_index","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","e","getPrototypeOf","ToolbarModule","BaseModule","import","TOOLBAR_WRAPPER_CLASS","TOOLBAR_CLASS","TOOLBAR_FORMAT_WIDGET_CLASS","TOOLBAR_SEPARATOR_CLASS","TOOLBAR_MENU_SEPARATOR_CLASS","ACTIVE_FORMAT_CLASS","BOX_ITEM_CONTENT_CLASS","ICON_CLASS","SELECTION_CHANGE_EVENT","DIALOG_COLOR_CAPTION","DIALOG_BACKGROUND_CAPTION","DIALOG_LINK_CAPTION","DIALOG_LINK_FIELD_URL","DIALOG_LINK_FIELD_TEXT","DIALOG_LINK_FIELD_TARGET","DIALOG_LINK_FIELD_TARGET_CLASS","DIALOG_IMAGE_CAPTION","DIALOG_IMAGE_FIELD_URL","DIALOG_IMAGE_FIELD_ALT","DIALOG_IMAGE_FIELD_WIDTH","DIALOG_IMAGE_FIELD_HEIGHT","DIALOG_TABLE_FIELD_COLUMNS","DIALOG_TABLE_FIELD_ROWS","DIALOG_TABLE_CAPTION","TABLE_OPERATIONS","USER_ACTION","SILENT_ACTION","HEADING_TEXT","format","NORMAL_TEXT","_BaseModule","_super","quill","options","_this","_editorInstance","editorInstance","_toolbarWidgets","_formatHandlers","_getFormatHandlers","isDefined","items","_addCallbacks","_renderToolbar","on","eventName","isSelectionChanged","_updateToolbar","formatArgs","event","_this$quill","_saveValueChangeEvent","addCleanCallback","clean","bind","addContentInitializedCallback","updateHistoryWidgets","updateFormatWidgets","updateTableWidgets","formatName","_this2","_ref","formats","getFormat","newValue","isBoolean","_applyFormat","_updateFormatWidget","isApplied","widget","getByName","_markActiveFormatWidget","_resetFormatWidget","hasOwnProperty","_toggleClearFormatting","isEmptyObject","_this3","clear","range","getSelection","removeFormat","link","_prepareLinkHandler","image","_prepareImageHandler","color","_prepareColorClickHandler","background","orderedList","_prepareShortcutHandler","bulletList","alignLeft","alignCenter","alignRight","alignJustify","codeBlock","_getDefaultClickHandler","undo","_ref2","history","redo","_ref3","increaseIndent","_ref4","decreaseIndent","_ref5","superscript","subscript","insertTable","_prepareInsertTableHandler","insertRowAbove","_getTableOperationHandler","insertRowBelow","insertColumnLeft","insertColumnRight","deleteColumn","deleteRow","deleteTable","shortcutValue","_this4","_ref6","_this5","focus","selection","hasEmbedContent","_hasEmbedContent","formData","href","text","getText","formDialogOption","promise","showFormDialog","_getLinkFormItems","done","index","deleteText","insertText","setSelection","fail","trim","dataField","label","visible","editorType","editorOptions","cssClass","_this6","isUpdateDialog","defaultIndex","_defaultPasteIndex","_this6$quill$getForma","imageSrc","src","formatIndex","_embedFormatIndex","_imageFormItems","insertEmbed","always","_this7","isTableFocused","rows","columns","_insertTableFormItems","table","getModule","operationName","_this8","_len","rest","_key","_this9","container","_getContainer","_$toolbar","addClass","appendTo","_$toolbarContainer","addNamespace","NAME","preventDefault","toolbarInstance","_createComponent","toolbarConfig","_ref7","option","isInteractionDisabled","_this$options$multili","multiline","empty","removeClass","repaint","$container","$element","prepend","_this10","resultItems","each","item","newItem","isObject","_handleObjectItem","isString","buttonItemConfig","_prepareButtonItemConfig","_getToolbarItem","push","formatValues","_isAcceptableItem","selectItemConfig","_prepareSelectItemConfig","defaultButtonItemConfig","extend","acceptableWidgetName","iconName","buttonText","titleize","hint","icon","toLowerCase","onClick","stylingMode","showText","_this11","dataSource","placeholder","onValueChanged","_isReset","_setValueSilent","component","_this12","caption","onContentReady","element","closest","concat","css","focusStateEnabled","_this13","baseItem","onInitialized","toggleClass","add","multilineItem","isMultilineMode","location","locateInMenu","_getDefaultConfig","header","displayExpr","isHeaderValue","disabled","separator","template","data","menuItemTemplate","_getDefaultItemsConfig","historyModule","_historyModule$stack","stack","undoOps","redoOps","_updateManipulationWidget","Boolean","_this$quill$getFormat","_this14","isTableOperationsEnabled","forEach","isInsertTable","isOperationEnabled","isResetRequired","hasFormats","_resetFormatWidgets","widgetName","_getFormatWidgetName","formatWidget","_isColorFormat","_updateColorWidget","clearWidget","find","_this15","handler","get","min","getLength","_prepareToolbarItems","menuContainer","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/html_editor/modules/toolbar.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _devextremeQuill = _interopRequireDefault(require(\"devextreme-quill\"));\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _toolbar = _interopRequireDefault(require(\"../../toolbar\"));\r\nrequire(\"../../select_box\");\r\nrequire(\"../../color_box/color_view\");\r\nrequire(\"../../number_box\");\r\nvar _widget_collector = _interopRequireDefault(require(\"./widget_collector\"));\r\nvar _iterator = require(\"../../../core/utils/iterator\");\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _message = _interopRequireDefault(require(\"../../../localization/message\"));\r\nvar _inflector = require(\"../../../core/utils/inflector\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../../events/core/events_engine\"));\r\nvar _index = require(\"../../../events/utils/index\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n    if (\"function\" !== typeof superClass && null !== superClass) {\r\n        throw new TypeError(\"Super expression must either be null or a function\")\r\n    }\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n        constructor: {\r\n            value: subClass,\r\n            writable: true,\r\n            configurable: true\r\n        }\r\n    });\r\n    if (superClass) {\r\n        _setPrototypeOf(subClass, superClass)\r\n    }\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\n\r\nfunction _createSuper(Derived) {\r\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n    return function() {\r\n        var result, Super = _getPrototypeOf(Derived);\r\n        if (hasNativeReflectConstruct) {\r\n            var NewTarget = _getPrototypeOf(this).constructor;\r\n            result = Reflect.construct(Super, arguments, NewTarget)\r\n        } else {\r\n            result = Super.apply(this, arguments)\r\n        }\r\n        return _possibleConstructorReturn(this, result)\r\n    }\r\n}\r\n\r\nfunction _possibleConstructorReturn(self, call) {\r\n    if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\r\n        return call\r\n    }\r\n    return _assertThisInitialized(self)\r\n}\r\n\r\nfunction _assertThisInitialized(self) {\r\n    if (void 0 === self) {\r\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")\r\n    }\r\n    return self\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n    if (\"undefined\" === typeof Reflect || !Reflect.construct) {\r\n        return false\r\n    }\r\n    if (Reflect.construct.sham) {\r\n        return false\r\n    }\r\n    if (\"function\" === typeof Proxy) {\r\n        return true\r\n    }\r\n    try {\r\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\r\n        return true\r\n    } catch (e) {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction _getPrototypeOf(o) {\r\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o) {\r\n        return o.__proto__ || Object.getPrototypeOf(o)\r\n    };\r\n    return _getPrototypeOf(o)\r\n}\r\nvar ToolbarModule = {};\r\nif (_devextremeQuill.default) {\r\n    var BaseModule = _devextremeQuill.default.import(\"core/module\");\r\n    var TOOLBAR_WRAPPER_CLASS = \"dx-htmleditor-toolbar-wrapper\";\r\n    var TOOLBAR_CLASS = \"dx-htmleditor-toolbar\";\r\n    var TOOLBAR_FORMAT_WIDGET_CLASS = \"dx-htmleditor-toolbar-format\";\r\n    var TOOLBAR_SEPARATOR_CLASS = \"dx-htmleditor-toolbar-separator\";\r\n    var TOOLBAR_MENU_SEPARATOR_CLASS = \"dx-htmleditor-toolbar-menu-separator\";\r\n    var ACTIVE_FORMAT_CLASS = \"dx-format-active\";\r\n    var BOX_ITEM_CONTENT_CLASS = \"dx-box-item-content\";\r\n    var ICON_CLASS = \"dx-icon\";\r\n    var SELECTION_CHANGE_EVENT = \"selection-change\";\r\n    var DIALOG_COLOR_CAPTION = \"dxHtmlEditor-dialogColorCaption\";\r\n    var DIALOG_BACKGROUND_CAPTION = \"dxHtmlEditor-dialogBackgroundCaption\";\r\n    var DIALOG_LINK_CAPTION = \"dxHtmlEditor-dialogLinkCaption\";\r\n    var DIALOG_LINK_FIELD_URL = \"dxHtmlEditor-dialogLinkUrlField\";\r\n    var DIALOG_LINK_FIELD_TEXT = \"dxHtmlEditor-dialogLinkTextField\";\r\n    var DIALOG_LINK_FIELD_TARGET = \"dxHtmlEditor-dialogLinkTargetField\";\r\n    var DIALOG_LINK_FIELD_TARGET_CLASS = \"dx-formdialog-field-target\";\r\n    var DIALOG_IMAGE_CAPTION = \"dxHtmlEditor-dialogImageCaption\";\r\n    var DIALOG_IMAGE_FIELD_URL = \"dxHtmlEditor-dialogImageUrlField\";\r\n    var DIALOG_IMAGE_FIELD_ALT = \"dxHtmlEditor-dialogImageAltField\";\r\n    var DIALOG_IMAGE_FIELD_WIDTH = \"dxHtmlEditor-dialogImageWidthField\";\r\n    var DIALOG_IMAGE_FIELD_HEIGHT = \"dxHtmlEditor-dialogImageHeightField\";\r\n    var DIALOG_TABLE_FIELD_COLUMNS = \"dxHtmlEditor-dialogInsertTableRowsField\";\r\n    var DIALOG_TABLE_FIELD_ROWS = \"dxHtmlEditor-dialogInsertTableColumnsField\";\r\n    var DIALOG_TABLE_CAPTION = \"dxHtmlEditor-dialogInsertTableCaption\";\r\n    var TABLE_OPERATIONS = [\"insertTable\", \"insertRowAbove\", \"insertRowBelow\", \"insertColumnLeft\", \"insertColumnRight\", \"deleteColumn\", \"deleteRow\", \"deleteTable\"];\r\n    var USER_ACTION = \"user\";\r\n    var SILENT_ACTION = \"silent\";\r\n    var HEADING_TEXT = _message.default.format(\"dxHtmlEditor-heading\");\r\n    var NORMAL_TEXT = _message.default.format(\"dxHtmlEditor-normalText\");\r\n    ToolbarModule = function(_BaseModule) {\r\n        _inherits(ToolbarModule, _BaseModule);\r\n        var _super = _createSuper(ToolbarModule);\r\n\r\n        function ToolbarModule(quill, options) {\r\n            var _this;\r\n            _classCallCheck(this, ToolbarModule);\r\n            _this = _super.call(this, quill, options);\r\n            _this._editorInstance = options.editorInstance;\r\n            _this._toolbarWidgets = new _widget_collector.default;\r\n            _this._formatHandlers = _this._getFormatHandlers();\r\n            if ((0, _type.isDefined)(options.items)) {\r\n                _this._addCallbacks();\r\n                _this._renderToolbar();\r\n                _this.quill.on(\"editor-change\", function(eventName) {\r\n                    var isSelectionChanged = eventName === SELECTION_CHANGE_EVENT;\r\n                    _this._updateToolbar(isSelectionChanged)\r\n                })\r\n            }\r\n            return _this\r\n        }\r\n        _createClass(ToolbarModule, [{\r\n            key: \"_applyFormat\",\r\n            value: function(formatArgs, event) {\r\n                var _this$quill;\r\n                this._editorInstance._saveValueChangeEvent(event);\r\n                (_this$quill = this.quill).format.apply(_this$quill, _toConsumableArray(formatArgs))\r\n            }\r\n        }, {\r\n            key: \"_addCallbacks\",\r\n            value: function() {\r\n                this._editorInstance.addCleanCallback(this.clean.bind(this));\r\n                this._editorInstance.addContentInitializedCallback(this.updateHistoryWidgets.bind(this))\r\n            }\r\n        }, {\r\n            key: \"_updateToolbar\",\r\n            value: function(isSelectionChanged) {\r\n                this.updateFormatWidgets(isSelectionChanged);\r\n                this.updateHistoryWidgets();\r\n                this.updateTableWidgets()\r\n            }\r\n        }, {\r\n            key: \"_getDefaultClickHandler\",\r\n            value: function(formatName) {\r\n                var _this2 = this;\r\n                return function(_ref) {\r\n                    var event = _ref.event;\r\n                    var formats = _this2.quill.getFormat();\r\n                    var value = formats[formatName];\r\n                    var newValue = !((0, _type.isBoolean)(value) ? value : (0, _type.isDefined)(value));\r\n                    _this2._applyFormat([formatName, newValue, USER_ACTION], event);\r\n                    _this2._updateFormatWidget(formatName, newValue, formats)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_updateFormatWidget\",\r\n            value: function(formatName, isApplied, formats) {\r\n                var widget = this._toolbarWidgets.getByName(formatName);\r\n                if (!widget) {\r\n                    return\r\n                }\r\n                if (isApplied) {\r\n                    this._markActiveFormatWidget(formatName, widget, formats)\r\n                } else {\r\n                    this._resetFormatWidget(formatName, widget);\r\n                    if (Object.prototype.hasOwnProperty.call(formatName)) {\r\n                        delete formats[formatName]\r\n                    }\r\n                }\r\n                this._toggleClearFormatting(isApplied || !(0, _type.isEmptyObject)(formats))\r\n            }\r\n        }, {\r\n            key: \"_getFormatHandlers\",\r\n            value: function() {\r\n                var _this3 = this;\r\n                return {\r\n                    clear: function(e) {\r\n                        var range = _this3.quill.getSelection();\r\n                        if (range) {\r\n                            _this3.quill.removeFormat(range);\r\n                            _this3.updateFormatWidgets()\r\n                        }\r\n                    },\r\n                    link: this._prepareLinkHandler(),\r\n                    image: this._prepareImageHandler(),\r\n                    color: this._prepareColorClickHandler(\"color\"),\r\n                    background: this._prepareColorClickHandler(\"background\"),\r\n                    orderedList: this._prepareShortcutHandler(\"list\", \"ordered\"),\r\n                    bulletList: this._prepareShortcutHandler(\"list\", \"bullet\"),\r\n                    alignLeft: this._prepareShortcutHandler(\"align\", \"left\"),\r\n                    alignCenter: this._prepareShortcutHandler(\"align\", \"center\"),\r\n                    alignRight: this._prepareShortcutHandler(\"align\", \"right\"),\r\n                    alignJustify: this._prepareShortcutHandler(\"align\", \"justify\"),\r\n                    codeBlock: this._getDefaultClickHandler(\"code-block\"),\r\n                    undo: function(_ref2) {\r\n                        var event = _ref2.event;\r\n                        _this3._editorInstance._saveValueChangeEvent(event);\r\n                        _this3.quill.history.undo()\r\n                    },\r\n                    redo: function(_ref3) {\r\n                        var event = _ref3.event;\r\n                        _this3._editorInstance._saveValueChangeEvent(event);\r\n                        _this3.quill.history.redo()\r\n                    },\r\n                    increaseIndent: function(_ref4) {\r\n                        var event = _ref4.event;\r\n                        _this3._applyFormat([\"indent\", \"+1\", USER_ACTION], event)\r\n                    },\r\n                    decreaseIndent: function(_ref5) {\r\n                        var event = _ref5.event;\r\n                        _this3._applyFormat([\"indent\", \"-1\", USER_ACTION], event)\r\n                    },\r\n                    superscript: this._prepareShortcutHandler(\"script\", \"super\"),\r\n                    subscript: this._prepareShortcutHandler(\"script\", \"sub\"),\r\n                    insertTable: this._prepareInsertTableHandler(),\r\n                    insertRowAbove: this._getTableOperationHandler(\"insertRowAbove\"),\r\n                    insertRowBelow: this._getTableOperationHandler(\"insertRowBelow\"),\r\n                    insertColumnLeft: this._getTableOperationHandler(\"insertColumnLeft\"),\r\n                    insertColumnRight: this._getTableOperationHandler(\"insertColumnRight\"),\r\n                    deleteColumn: this._getTableOperationHandler(\"deleteColumn\"),\r\n                    deleteRow: this._getTableOperationHandler(\"deleteRow\"),\r\n                    deleteTable: this._getTableOperationHandler(\"deleteTable\")\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_prepareShortcutHandler\",\r\n            value: function(formatName, shortcutValue) {\r\n                var _this4 = this;\r\n                return function(_ref6) {\r\n                    var event = _ref6.event;\r\n                    var formats = _this4.quill.getFormat();\r\n                    var value = formats[formatName] === shortcutValue ? false : shortcutValue;\r\n                    _this4._applyFormat([formatName, value, USER_ACTION], event);\r\n                    _this4.updateFormatWidgets(true)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_prepareLinkHandler\",\r\n            value: function() {\r\n                var _this5 = this;\r\n                return function() {\r\n                    _this5.quill.focus();\r\n                    var selection = _this5.quill.getSelection();\r\n                    var hasEmbedContent = _this5._hasEmbedContent(selection);\r\n                    var formats = selection ? _this5.quill.getFormat() : {};\r\n                    var formData = {\r\n                        href: formats.link || \"\",\r\n                        text: selection && !hasEmbedContent ? _this5.quill.getText(selection) : \"\",\r\n                        target: Object.prototype.hasOwnProperty.call(formats, \"target\") ? !!formats.target : true\r\n                    };\r\n                    _this5._editorInstance.formDialogOption(\"title\", _message.default.format(DIALOG_LINK_CAPTION));\r\n                    var promise = _this5._editorInstance.showFormDialog({\r\n                        formData: formData,\r\n                        items: _this5._getLinkFormItems(selection)\r\n                    });\r\n                    promise.done(function(formData, event) {\r\n                        if (selection && !hasEmbedContent) {\r\n                            var text = formData.text || formData.href;\r\n                            var index = selection.index,\r\n                                length = selection.length;\r\n                            formData.text = void 0;\r\n                            _this5._editorInstance._saveValueChangeEvent(event);\r\n                            length && _this5.quill.deleteText(index, length, SILENT_ACTION);\r\n                            _this5.quill.insertText(index, text, \"link\", formData, USER_ACTION);\r\n                            _this5.quill.setSelection(index + text.length, 0, USER_ACTION)\r\n                        } else {\r\n                            formData.text = !selection && !formData.text ? formData.href : formData.text;\r\n                            _this5._applyFormat([\"link\", formData, USER_ACTION], event)\r\n                        }\r\n                    });\r\n                    promise.fail(function() {\r\n                        _this5.quill.focus()\r\n                    })\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_hasEmbedContent\",\r\n            value: function(selection) {\r\n                return !!selection && this.quill.getText(selection).trim().length < selection.length\r\n            }\r\n        }, {\r\n            key: \"_getLinkFormItems\",\r\n            value: function(selection) {\r\n                return [{\r\n                    dataField: \"href\",\r\n                    label: {\r\n                        text: _message.default.format(DIALOG_LINK_FIELD_URL)\r\n                    }\r\n                }, {\r\n                    dataField: \"text\",\r\n                    label: {\r\n                        text: _message.default.format(DIALOG_LINK_FIELD_TEXT)\r\n                    },\r\n                    visible: !this._hasEmbedContent(selection)\r\n                }, {\r\n                    dataField: \"target\",\r\n                    editorType: \"dxCheckBox\",\r\n                    editorOptions: {\r\n                        text: _message.default.format(DIALOG_LINK_FIELD_TARGET)\r\n                    },\r\n                    cssClass: DIALOG_LINK_FIELD_TARGET_CLASS,\r\n                    label: {\r\n                        visible: false\r\n                    }\r\n                }]\r\n            }\r\n        }, {\r\n            key: \"_prepareImageHandler\",\r\n            value: function() {\r\n                var _this6 = this;\r\n                return function() {\r\n                    var formData = _this6.quill.getFormat();\r\n                    var isUpdateDialog = Object.prototype.hasOwnProperty.call(formData, \"imageSrc\");\r\n                    var defaultIndex = _this6._defaultPasteIndex;\r\n                    if (isUpdateDialog) {\r\n                        var _this6$quill$getForma = _this6.quill.getFormat(defaultIndex - 1, 1),\r\n                            imageSrc = _this6$quill$getForma.imageSrc;\r\n                        formData.src = formData.imageSrc;\r\n                        delete formData.imageSrc;\r\n                        if (!imageSrc || 0 === defaultIndex) {\r\n                            _this6.quill.setSelection(defaultIndex + 1, 0, SILENT_ACTION)\r\n                        }\r\n                    }\r\n                    var formatIndex = _this6._embedFormatIndex;\r\n                    _this6._editorInstance.formDialogOption(\"title\", _message.default.format(DIALOG_IMAGE_CAPTION));\r\n                    var promise = _this6._editorInstance.showFormDialog({\r\n                        formData: formData,\r\n                        items: _this6._imageFormItems\r\n                    });\r\n                    promise.done(function(formData, event) {\r\n                        var index = defaultIndex;\r\n                        _this6._editorInstance._saveValueChangeEvent(event);\r\n                        if (isUpdateDialog) {\r\n                            index = formatIndex;\r\n                            _this6.quill.deleteText(index, 1, SILENT_ACTION)\r\n                        }\r\n                        _this6.quill.insertEmbed(index, \"extendedImage\", formData, USER_ACTION);\r\n                        _this6.quill.setSelection(index + 1, 0, USER_ACTION)\r\n                    }).always(function() {\r\n                        _this6.quill.focus()\r\n                    })\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_prepareInsertTableHandler\",\r\n            value: function() {\r\n                var _this7 = this;\r\n                return function() {\r\n                    var formats = _this7.quill.getFormat();\r\n                    var isTableFocused = Object.prototype.hasOwnProperty.call(formats, \"table\");\r\n                    var formData = {\r\n                        rows: 1,\r\n                        columns: 1\r\n                    };\r\n                    if (isTableFocused) {\r\n                        _this7.quill.focus();\r\n                        return\r\n                    }\r\n                    _this7._editorInstance.formDialogOption(\"title\", _message.default.format(DIALOG_TABLE_CAPTION));\r\n                    var promise = _this7._editorInstance.showFormDialog({\r\n                        formData: formData,\r\n                        items: _this7._insertTableFormItems\r\n                    });\r\n                    promise.done(function(formData, event) {\r\n                        _this7.quill.focus();\r\n                        var table = _this7.quill.getModule(\"table\");\r\n                        if (table) {\r\n                            _this7._editorInstance._saveValueChangeEvent(event);\r\n                            var columns = formData.columns,\r\n                                rows = formData.rows;\r\n                            table.insertTable(columns, rows)\r\n                        }\r\n                    }).always(function() {\r\n                        _this7.quill.focus()\r\n                    })\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_getTableOperationHandler\",\r\n            value: function(operationName) {\r\n                var _this8 = this;\r\n                for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n                    rest[_key - 1] = arguments[_key]\r\n                }\r\n                return function() {\r\n                    var table = _this8.quill.getModule(\"table\");\r\n                    if (!table) {\r\n                        return\r\n                    }\r\n                    _this8.quill.focus();\r\n                    return table[operationName].apply(table, rest)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_renderToolbar\",\r\n            value: function() {\r\n                var _this9 = this;\r\n                var container = this.options.container || this._getContainer();\r\n                this._$toolbar = (0, _renderer.default)(\"<div>\").addClass(TOOLBAR_CLASS).appendTo(container);\r\n                this._$toolbarContainer = (0, _renderer.default)(container).addClass(TOOLBAR_WRAPPER_CLASS);\r\n                _events_engine.default.on(this._$toolbarContainer, (0, _index.addNamespace)(\"mousedown\", this._editorInstance.NAME), function(e) {\r\n                    e.preventDefault()\r\n                });\r\n                this.toolbarInstance = this._editorInstance._createComponent(this._$toolbar, _toolbar.default, this.toolbarConfig);\r\n                this._editorInstance.on(\"optionChanged\", function(_ref7) {\r\n                    var name = _ref7.name;\r\n                    if (\"readOnly\" === name || \"disabled\" === name) {\r\n                        _this9.toolbarInstance.option(\"disabled\", _this9.isInteractionDisabled)\r\n                    }\r\n                })\r\n            }\r\n        }, {\r\n            key: \"isMultilineMode\",\r\n            value: function() {\r\n                var _this$options$multili;\r\n                return null !== (_this$options$multili = this.options.multiline) && void 0 !== _this$options$multili ? _this$options$multili : true\r\n            }\r\n        }, {\r\n            key: \"clean\",\r\n            value: function() {\r\n                this._toolbarWidgets.clear();\r\n                if (this._$toolbarContainer) {\r\n                    this._$toolbarContainer.empty().removeClass(TOOLBAR_WRAPPER_CLASS)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"repaint\",\r\n            value: function() {\r\n                this.toolbarInstance && this.toolbarInstance.repaint()\r\n            }\r\n        }, {\r\n            key: \"_getContainer\",\r\n            value: function() {\r\n                var $container = (0, _renderer.default)(\"<div>\");\r\n                this._editorInstance.$element().prepend($container);\r\n                return $container\r\n            }\r\n        }, {\r\n            key: \"_prepareToolbarItems\",\r\n            value: function() {\r\n                var _this10 = this;\r\n                var resultItems = [];\r\n                (0, _iterator.each)(this.options.items, function(index, item) {\r\n                    var newItem;\r\n                    if ((0, _type.isObject)(item)) {\r\n                        newItem = _this10._handleObjectItem(item)\r\n                    } else {\r\n                        if ((0, _type.isString)(item)) {\r\n                            var buttonItemConfig = _this10._prepareButtonItemConfig(item);\r\n                            newItem = _this10._getToolbarItem(buttonItemConfig)\r\n                        }\r\n                    }\r\n                    if (newItem) {\r\n                        resultItems.push(newItem)\r\n                    }\r\n                });\r\n                return resultItems\r\n            }\r\n        }, {\r\n            key: \"_handleObjectItem\",\r\n            value: function(item) {\r\n                if (item.formatName && item.formatValues && this._isAcceptableItem(item.widget, \"dxSelectBox\")) {\r\n                    var selectItemConfig = this._prepareSelectItemConfig(item);\r\n                    return this._getToolbarItem(selectItemConfig)\r\n                } else {\r\n                    if (item.formatName && this._isAcceptableItem(item.widget, \"dxButton\")) {\r\n                        var defaultButtonItemConfig = this._prepareButtonItemConfig(item.formatName);\r\n                        var buttonItemConfig = (0, _extend.extend)(true, defaultButtonItemConfig, item);\r\n                        return this._getToolbarItem(buttonItemConfig)\r\n                    } else {\r\n                        return this._getToolbarItem(item)\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_isAcceptableItem\",\r\n            value: function(widget, acceptableWidgetName) {\r\n                return !widget || widget === acceptableWidgetName\r\n            }\r\n        }, {\r\n            key: \"_prepareButtonItemConfig\",\r\n            value: function(formatName) {\r\n                var iconName = \"clear\" === formatName ? \"clearformat\" : formatName;\r\n                var buttonText = (0, _inflector.titleize)(formatName);\r\n                return {\r\n                    widget: \"dxButton\",\r\n                    formatName: formatName,\r\n                    options: {\r\n                        hint: buttonText,\r\n                        text: buttonText,\r\n                        icon: iconName.toLowerCase(),\r\n                        onClick: this._formatHandlers[formatName] || this._getDefaultClickHandler(formatName),\r\n                        stylingMode: \"text\"\r\n                    },\r\n                    showText: \"inMenu\"\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_prepareSelectItemConfig\",\r\n            value: function(item) {\r\n                var _this11 = this;\r\n                return (0, _extend.extend)(true, {\r\n                    widget: \"dxSelectBox\",\r\n                    formatName: item.formatName,\r\n                    options: {\r\n                        stylingMode: \"filled\",\r\n                        dataSource: item.formatValues,\r\n                        placeholder: (0, _inflector.titleize)(item.formatName),\r\n                        onValueChanged: function(e) {\r\n                            if (!_this11._isReset) {\r\n                                _this11._applyFormat([item.formatName, e.value, USER_ACTION], e.event);\r\n                                _this11._setValueSilent(e.component, e.value)\r\n                            }\r\n                        }\r\n                    }\r\n                }, item)\r\n            }\r\n        }, {\r\n            key: \"_prepareColorClickHandler\",\r\n            value: function(formatName) {\r\n                var _this12 = this;\r\n                return function() {\r\n                    var formData = _this12.quill.getFormat();\r\n                    var caption = \"color\" === formatName ? DIALOG_COLOR_CAPTION : DIALOG_BACKGROUND_CAPTION;\r\n                    _this12._editorInstance.formDialogOption(\"title\", _message.default.format(caption));\r\n                    var promise = _this12._editorInstance.showFormDialog({\r\n                        formData: formData,\r\n                        items: [{\r\n                            dataField: formatName,\r\n                            editorType: \"dxColorView\",\r\n                            editorOptions: {\r\n                                onContentReady: function(e) {\r\n                                    (0, _renderer.default)(e.element).closest(\".\".concat(BOX_ITEM_CONTENT_CLASS)).css(\"flexBasis\", \"auto\")\r\n                                },\r\n                                focusStateEnabled: false\r\n                            },\r\n                            label: {\r\n                                visible: false\r\n                            }\r\n                        }]\r\n                    });\r\n                    promise.done(function(formData, event) {\r\n                        _this12._applyFormat([formatName, formData[formatName], USER_ACTION], event)\r\n                    });\r\n                    promise.fail(function() {\r\n                        _this12.quill.focus()\r\n                    })\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_getToolbarItem\",\r\n            value: function(item) {\r\n                var _this13 = this;\r\n                var baseItem = {\r\n                    options: {\r\n                        onInitialized: function(e) {\r\n                            if (item.formatName) {\r\n                                e.component.$element().addClass(TOOLBAR_FORMAT_WIDGET_CLASS);\r\n                                e.component.$element().toggleClass(\"dx-\".concat(item.formatName.toLowerCase(), \"-format\"), !!item.formatName);\r\n                                _this13._toolbarWidgets.add(item.formatName, e.component)\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                var multilineItem = this.isMultilineMode() ? {\r\n                    location: \"before\",\r\n                    locateInMenu: \"never\"\r\n                } : {};\r\n                return (0, _extend.extend)(true, {\r\n                    location: \"before\",\r\n                    locateInMenu: \"auto\"\r\n                }, this._getDefaultConfig(item.formatName), item, baseItem, multilineItem)\r\n            }\r\n        }, {\r\n            key: \"_getDefaultItemsConfig\",\r\n            value: function() {\r\n                return {\r\n                    header: {\r\n                        options: {\r\n                            displayExpr: function(item) {\r\n                                var isHeaderValue = (0, _type.isDefined)(item) && false !== item;\r\n                                return isHeaderValue ? \"\".concat(HEADING_TEXT, \" \").concat(item) : NORMAL_TEXT\r\n                            }\r\n                        }\r\n                    },\r\n                    clear: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    undo: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    redo: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    insertRowAbove: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    insertRowBelow: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    insertColumnLeft: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    insertColumnRight: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    deleteRow: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    deleteColumn: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    deleteTable: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    separator: {\r\n                        template: function(data, index, element) {\r\n                            (0, _renderer.default)(element).addClass(TOOLBAR_SEPARATOR_CLASS)\r\n                        },\r\n                        menuItemTemplate: function(data, index, element) {\r\n                            (0, _renderer.default)(element).addClass(TOOLBAR_MENU_SEPARATOR_CLASS)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_getDefaultConfig\",\r\n            value: function(formatName) {\r\n                return this._getDefaultItemsConfig()[formatName]\r\n            }\r\n        }, {\r\n            key: \"updateHistoryWidgets\",\r\n            value: function() {\r\n                var historyModule = this.quill.history;\r\n                if (!historyModule) {\r\n                    return\r\n                }\r\n                var _historyModule$stack = historyModule.stack,\r\n                    undoOps = _historyModule$stack.undo,\r\n                    redoOps = _historyModule$stack.redo;\r\n                this._updateManipulationWidget(this._toolbarWidgets.getByName(\"undo\"), Boolean(undoOps.length));\r\n                this._updateManipulationWidget(this._toolbarWidgets.getByName(\"redo\"), Boolean(redoOps.length))\r\n            }\r\n        }, {\r\n            key: \"updateTableWidgets\",\r\n            value: function() {\r\n                var _this$quill$getFormat, _this14 = this;\r\n                var table = this.quill.getModule(\"table\");\r\n                if (!table) {\r\n                    return\r\n                }\r\n                var selection = this.quill.getSelection();\r\n                var isTableOperationsEnabled = selection && Boolean(null === (_this$quill$getFormat = this.quill.getFormat(selection)) || void 0 === _this$quill$getFormat ? void 0 : _this$quill$getFormat.table);\r\n                TABLE_OPERATIONS.forEach(function(operationName) {\r\n                    var isInsertTable = \"insertTable\" === operationName;\r\n                    var widget = _this14._toolbarWidgets.getByName(operationName);\r\n                    _this14._updateManipulationWidget(widget, isInsertTable ? !isTableOperationsEnabled : isTableOperationsEnabled)\r\n                })\r\n            }\r\n        }, {\r\n            key: \"_updateManipulationWidget\",\r\n            value: function(widget, isOperationEnabled) {\r\n                if (!widget) {\r\n                    return\r\n                }\r\n                widget.option(\"disabled\", !isOperationEnabled)\r\n            }\r\n        }, {\r\n            key: \"updateFormatWidgets\",\r\n            value: function(isResetRequired) {\r\n                var selection = this.quill.getSelection();\r\n                if (!selection) {\r\n                    return\r\n                }\r\n                var formats = this.quill.getFormat(selection);\r\n                var hasFormats = !(0, _type.isEmptyObject)(formats);\r\n                if (!hasFormats || isResetRequired) {\r\n                    this._resetFormatWidgets()\r\n                }\r\n                for (var formatName in formats) {\r\n                    var widgetName = this._getFormatWidgetName(formatName, formats);\r\n                    var formatWidget = this._toolbarWidgets.getByName(widgetName) || this._toolbarWidgets.getByName(formatName);\r\n                    if (!formatWidget) {\r\n                        continue\r\n                    }\r\n                    this._markActiveFormatWidget(formatName, formatWidget, formats)\r\n                }\r\n                this._toggleClearFormatting(hasFormats || selection.length > 1)\r\n            }\r\n        }, {\r\n            key: \"_markActiveFormatWidget\",\r\n            value: function(name, widget, formats) {\r\n                if (this._isColorFormat(name)) {\r\n                    this._updateColorWidget(name, formats[name])\r\n                }\r\n                if (\"value\" in widget.option()) {\r\n                    this._setValueSilent(widget, formats[name])\r\n                } else {\r\n                    widget.$element().addClass(ACTIVE_FORMAT_CLASS)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_toggleClearFormatting\",\r\n            value: function(hasFormats) {\r\n                var clearWidget = this._toolbarWidgets.getByName(\"clear\");\r\n                if (clearWidget) {\r\n                    clearWidget.option(\"disabled\", !hasFormats)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_isColorFormat\",\r\n            value: function(formatName) {\r\n                return \"color\" === formatName || \"background\" === formatName\r\n            }\r\n        }, {\r\n            key: \"_updateColorWidget\",\r\n            value: function(formatName, color) {\r\n                var formatWidget = this._toolbarWidgets.getByName(formatName);\r\n                if (!formatWidget) {\r\n                    return\r\n                }\r\n                formatWidget.$element().find(\".\".concat(ICON_CLASS)).css(\"borderBottomColor\", color || \"transparent\")\r\n            }\r\n        }, {\r\n            key: \"_getFormatWidgetName\",\r\n            value: function(formatName, formats) {\r\n                var widgetName;\r\n                switch (formatName) {\r\n                    case \"align\":\r\n                        widgetName = formatName + (0, _inflector.titleize)(formats[formatName]);\r\n                        break;\r\n                    case \"list\":\r\n                        widgetName = formats[formatName] + (0, _inflector.titleize)(formatName);\r\n                        break;\r\n                    case \"code-block\":\r\n                        widgetName = \"codeBlock\";\r\n                        break;\r\n                    case \"script\":\r\n                        widgetName = formats[formatName] + formatName;\r\n                        break;\r\n                    case \"imageSrc\":\r\n                        widgetName = \"image\";\r\n                        break;\r\n                    default:\r\n                        widgetName = formatName\r\n                }\r\n                return widgetName\r\n            }\r\n        }, {\r\n            key: \"_setValueSilent\",\r\n            value: function(widget, value) {\r\n                this._isReset = true;\r\n                widget.option(\"value\", value);\r\n                this._isReset = false\r\n            }\r\n        }, {\r\n            key: \"_resetFormatWidgets\",\r\n            value: function() {\r\n                var _this15 = this;\r\n                this._toolbarWidgets.each(function(name, widget) {\r\n                    _this15._resetFormatWidget(name, widget)\r\n                })\r\n            }\r\n        }, {\r\n            key: \"_resetFormatWidget\",\r\n            value: function(name, widget) {\r\n                widget.$element().removeClass(ACTIVE_FORMAT_CLASS);\r\n                if (this._isColorFormat(name)) {\r\n                    this._updateColorWidget(name)\r\n                }\r\n                if (\"clear\" === name) {\r\n                    widget.option(\"disabled\", true)\r\n                }\r\n                if (\"dxSelectBox\" === widget.NAME) {\r\n                    this._setValueSilent(widget, null)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"addClickHandler\",\r\n            value: function(formatName, handler) {\r\n                this._formatHandlers[formatName] = handler;\r\n                var formatWidget = this._toolbarWidgets.getByName(formatName);\r\n                if (formatWidget && \"dxButton\" === formatWidget.NAME) {\r\n                    formatWidget.option(\"onClick\", handler)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_insertTableFormItems\",\r\n            get: function() {\r\n                return [{\r\n                    dataField: \"columns\",\r\n                    editorType: \"dxNumberBox\",\r\n                    editorOptions: {\r\n                        min: 1\r\n                    },\r\n                    label: {\r\n                        text: _message.default.format(DIALOG_TABLE_FIELD_COLUMNS)\r\n                    }\r\n                }, {\r\n                    dataField: \"rows\",\r\n                    editorType: \"dxNumberBox\",\r\n                    editorOptions: {\r\n                        min: 1\r\n                    },\r\n                    label: {\r\n                        text: _message.default.format(DIALOG_TABLE_FIELD_ROWS)\r\n                    }\r\n                }]\r\n            }\r\n        }, {\r\n            key: \"_embedFormatIndex\",\r\n            get: function() {\r\n                var selection = this.quill.getSelection();\r\n                if (selection) {\r\n                    if (selection.length) {\r\n                        return selection.index\r\n                    } else {\r\n                        return selection.index - 1\r\n                    }\r\n                } else {\r\n                    return this.quill.getLength()\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_defaultPasteIndex\",\r\n            get: function() {\r\n                var selection = this.quill.getSelection();\r\n                return (0, _type.isDefined)(null === selection || void 0 === selection ? void 0 : selection.index) ? selection.index : this.quill.getLength()\r\n            }\r\n        }, {\r\n            key: \"_imageFormItems\",\r\n            get: function() {\r\n                return [{\r\n                    dataField: \"src\",\r\n                    label: {\r\n                        text: _message.default.format(DIALOG_IMAGE_FIELD_URL)\r\n                    }\r\n                }, {\r\n                    dataField: \"width\",\r\n                    label: {\r\n                        text: _message.default.format(DIALOG_IMAGE_FIELD_WIDTH)\r\n                    }\r\n                }, {\r\n                    dataField: \"height\",\r\n                    label: {\r\n                        text: _message.default.format(DIALOG_IMAGE_FIELD_HEIGHT)\r\n                    }\r\n                }, {\r\n                    dataField: \"alt\",\r\n                    label: {\r\n                        text: _message.default.format(DIALOG_IMAGE_FIELD_ALT)\r\n                    }\r\n                }]\r\n            }\r\n        }, {\r\n            key: \"toolbarConfig\",\r\n            get: function() {\r\n                return {\r\n                    dataSource: this._prepareToolbarItems(),\r\n                    disabled: this.isInteractionDisabled,\r\n                    menuContainer: this._$toolbarContainer,\r\n                    multiline: this.isMultilineMode()\r\n                }\r\n            }\r\n        }, {\r\n            key: \"isInteractionDisabled\",\r\n            get: function() {\r\n                return this._editorInstance.option(\"readOnly\") || this._editorInstance.option(\"disabled\")\r\n            }\r\n        }]);\r\n        return ToolbarModule\r\n    }(BaseModule)\r\n}\r\nvar _default = ToolbarModule;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}