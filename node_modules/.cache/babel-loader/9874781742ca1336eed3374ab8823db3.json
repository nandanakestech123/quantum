{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\CustomerPlus\\\\CustomerDetailsPlus\\\\HoldSection\\\\Hold.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { IssuedStaff } from \"./modal\";\nimport { NormalInput, NormalButton, NormalModal, TableWrapper } from \"component/common\";\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\";\nimport { Toast } from \"service/toast\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { history } from \"helpers\";\nimport { CreateHoldItem } from \"redux/actions/customer\";\nimport { withTranslation } from \"react-i18next\";\nexport class HoldSectionClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: \"\",\n      headerDetails: [{\n        label: \"Date\",\n        sortKey: false,\n        width: \"70px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Transaction #\",\n        width: \"180px\"\n      }, {\n        label: \"Item Name\",\n        sortKey: false,\n        width: \"150px\"\n      }, {\n        label: \"Item Code\",\n        sortKey: false,\n        width: \"150px\"\n      }, {\n        label: \"Qty Hold\",\n        sortKey: false,\n        width: \"100px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Qty issued\",\n        sortKey: false,\n        width: \"100px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Staff issued\",\n        sortKey: false,\n        width: \"100px\"\n      }],\n      accountList: [],\n      accountHeader: {},\n      isIssued: false,\n      isWarning: false,\n      Staffid: 0,\n      holdItem: {},\n      formData: [],\n      downloadlLink: \"\",\n      isPrint: false\n    };\n\n    this.toggle = tab => {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    this.modalclose = () => {\n      this.setState({\n        isIssued: !this.state.isIssued\n      });\n    };\n\n    this.getAccountData = () => {\n      let {\n        accountHeader\n      } = this.state;\n      this.props.getCommonApi(`holditem/?cust_id=${this.props.id}`).then(key => {\n        let {\n          data,\n          header_data\n        } = key;\n        let {\n          accountList\n        } = this.state;\n        accountList = data;\n        accountHeader = header_data;\n        this.setState({\n          accountList,\n          accountHeader\n        });\n      });\n    };\n\n    this.handleissuedstaff = async item => {\n      await this.setState({\n        holdItem: item\n      });\n\n      if (item.onhand) {\n        if (item.check == \"fullpay\") {\n          this.setState({\n            isIssued: !this.state.isIssued\n          });\n        } else {\n          this.setState({\n            isWarning: !this.state.isWarning\n          });\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Stock is not available for this product\"\n        });\n      }\n    };\n\n    this.proceedtoissuedstaff = () => {\n      this.setState({\n        isWarning: !this.state.isWarning,\n        isIssued: !this.state.isIssued\n      });\n    };\n\n    this.denyissuedstaff = () => {\n      this.setState({\n        isWarning: !this.state.isWarning\n      });\n    };\n\n    this.issuedlisttableupdate = holdData => {\n      let {\n        accountList\n      } = this.state;\n      let filterList = accountList.find(account => account.id === holdData.id);\n      filterList[\"qty_issued\"] = holdData.issueQty;\n      filterList[\"staff_issued\"] = holdData.emp_name;\n      filterList[\"emp_id\"] = holdData.emp_id;\n      filterList[\"emp_name\"] = holdData.emp_name;\n      this.setState({ ...this.state.accountList,\n        filterList\n      });\n    };\n\n    this.issuedlistupdate = holdData => {\n      let {\n        formData\n      } = this.state;\n      let filterList = formData.find(account => account.id === holdData.id);\n\n      if (filterList) {\n        filterList[\"id\"] = holdData.id;\n        filterList[\"issued_qty\"] = holdData.issueQty;\n        filterList[\"emp_id\"] = holdData.emp_id;\n        this.setState({ ...this.state.formData,\n          filterList\n        });\n      } else {\n        let data = {};\n        data[\"id\"] = holdData.id;\n        data[\"issued_qty\"] = holdData.issueQty;\n        data[\"emp_id\"] = holdData.emp_id;\n        formData.push(data);\n        this.setState({ ...this.state.formData,\n          formData\n        });\n      }\n    };\n\n    this.handlePrint = () => {\n      this.setState({\n        isPrint: false\n      });\n      window.open(this.state.downloadlLink);\n    };\n\n    this.onSubmit = async () => {\n      let {\n        formData\n      } = this.state;\n\n      if (formData.length > 0) {\n        await this.props.CreateHoldItem(formData).then(async res => {\n          if (res.status === 200) {\n            Toast({\n              type: \"success\",\n              message: res.message\n            });\n            this.setState({\n              downloadlLink: res.data,\n              isPrint: true,\n              formData: []\n            });\n            this.getAccountData();\n          } else {\n            Toast({\n              type: \"error\",\n              message: res.message\n            });\n          }\n        });\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"There is no record to update\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAccountData();\n  }\n\n  render() {\n    let {\n      headerDetails,\n      accountList = [],\n      activeTab,\n      isIssued,\n      isWarning,\n      Staffid,\n      holdItem = {},\n      downloadlLink,\n      isPrint\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatment-account row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, activeTab !== \"detail\" ? /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, accountList && accountList.length > 0 ? accountList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }\n      }, item.sa_date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }\n      }, item.sa_transacno_ref)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }\n      }, item.hi_itemdesc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }\n      }, item.itemno)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }\n      }, item.holditemqty)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => this.handleissuedstaff(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right cursor-pointer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }, item.qty_issued)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => this.handleissuedstaff(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, item.staff_issued)));\n    }) : null) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 d-flex justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onSubmit(),\n      className: `btn outline-btn mx-2 fs-14  text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, t(\"Issued\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 d-flex justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }\n    }, isIssued ? /*#__PURE__*/React.createElement(IssuedStaff, {\n      isIssued: isIssued,\n      key: holdItem.id,\n      toggle: this.modalclose,\n      holdItem: holdItem,\n      handleModal: this.handleissuedstaff,\n      issuedlistupdate: this.issuedlistupdate,\n      issuedlisttableupdate: this.issuedlisttableupdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 d-flex justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, isWarning ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NormalModal, {\n      style: {\n        minWidth: \"25%\"\n      },\n      modal: isWarning,\n      handleModal: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row new-cart issued-staff p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 23\n      }\n    }, t(`Product have outstanding, Are you sure you want to\n                        issued ?`)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.proceedtoissuedstaff(),\n      className: `btn outline-btn mx-2 fs-14  text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }, t(\"Yes\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.denyissuedstaff(),\n      className: `btn outline-btn mx-2 fs-14  text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }\n    }, t(\"No\")))))))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 d-flex justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }\n    }, isPrint ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NormalModal, {\n      style: {\n        minWidth: \"25%\"\n      },\n      modal: isPrint,\n      handleModal: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row new-cart issued-staff p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 23\n      }\n    }, t(`Do you want to print ?`)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handlePrint(),\n      className: `btn outline-btn mx-2 fs-14  text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }\n    }, t(\"Yes\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        isPrint: false\n      }),\n      className: `btn outline-btn mx-2 fs-14  text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, t(\"No\")))))))) : null));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    updateForm,\n    commonCreateApi,\n    commonPatchApi,\n    commonDeleteApi,\n    CreateHoldItem\n  }, dispatch);\n};\n\nexport const Hold = withTranslation()(connect(null, mapDispatchToProps)(HoldSectionClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/CustomerPlus/CustomerDetailsPlus/HoldSection/Hold.js"],"names":["React","Component","IssuedStaff","NormalInput","NormalButton","NormalModal","TableWrapper","getCommonApi","updateForm","commonCreateApi","commonDeleteApi","commonPatchApi","Toast","connect","bindActionCreators","history","CreateHoldItem","withTranslation","HoldSectionClass","state","activeTab","headerDetails","label","sortKey","width","divClass","accountList","accountHeader","isIssued","isWarning","Staffid","holdItem","formData","downloadlLink","isPrint","toggle","tab","setState","modalclose","getAccountData","props","id","then","key","data","header_data","handleissuedstaff","item","onhand","check","type","message","proceedtoissuedstaff","denyissuedstaff","issuedlisttableupdate","holdData","filterList","find","account","issueQty","emp_name","emp_id","issuedlistupdate","push","handlePrint","window","open","onSubmit","length","res","status","componentDidMount","render","t","handlePagination","map","index","sa_date","sa_transacno_ref","hi_itemdesc","itemno","holditemqty","qty_issued","staff_issued","minWidth","mapDispatchToProps","dispatch","Hold"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport { IssuedStaff } from \"./modal\";\r\nimport {\r\n  NormalInput,\r\n  NormalButton,\r\n  NormalModal,\r\n  TableWrapper,\r\n} from \"component/common\";\r\nimport {\r\n  getCommonApi,\r\n  updateForm,\r\n  commonCreateApi,\r\n  commonDeleteApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport { Toast } from \"service/toast\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { history } from \"helpers\";\r\nimport { CreateHoldItem } from \"redux/actions/customer\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class HoldSectionClass extends Component {\r\n  state = {\r\n    activeTab: \"\",\r\n    headerDetails: [\r\n      {\r\n        label: \"Date\",\r\n        sortKey: false,\r\n        width: \"70px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Transaction #\", width: \"180px\" },\r\n      { label: \"Item Name\", sortKey: false, width: \"150px\" },\r\n      { label: \"Item Code\", sortKey: false, width: \"150px\" },\r\n      {\r\n        label: \"Qty Hold\",\r\n        sortKey: false,\r\n        width: \"100px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Qty issued\",\r\n        sortKey: false,\r\n        width: \"100px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Staff issued\", sortKey: false, width: \"100px\" },\r\n    ],\r\n    accountList: [],\r\n    accountHeader: {},\r\n    isIssued: false,\r\n    isWarning: false,\r\n    Staffid: 0,\r\n    holdItem: {},\r\n    formData: [],\r\n    downloadlLink: \"\",\r\n    isPrint: false,\r\n  };\r\n\r\n  toggle = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n    }\r\n  };\r\n  modalclose = () => {\r\n    this.setState({ isIssued: !this.state.isIssued });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAccountData();\r\n  }\r\n\r\n  getAccountData = () => {\r\n    let { accountHeader } = this.state;\r\n    this.props.getCommonApi(`holditem/?cust_id=${this.props.id}`).then(key => {\r\n      let { data, header_data } = key;\r\n      let { accountList } = this.state;\r\n      accountList = data;\r\n      accountHeader = header_data;\r\n      this.setState({ accountList, accountHeader });\r\n    });\r\n  };\r\n\r\n  handleissuedstaff = async item => {\r\n    await this.setState({\r\n      holdItem: item,\r\n    });\r\n\r\n    if (item.onhand) {\r\n      if (item.check == \"fullpay\") {\r\n        this.setState({\r\n          isIssued: !this.state.isIssued,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          isWarning: !this.state.isWarning,\r\n        });\r\n      }\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Stock is not available for this product\",\r\n      });\r\n    }\r\n  };\r\n\r\n  proceedtoissuedstaff = () => {\r\n    this.setState({\r\n      isWarning: !this.state.isWarning,\r\n      isIssued: !this.state.isIssued,\r\n    });\r\n  };\r\n\r\n  denyissuedstaff = () => {\r\n    this.setState({\r\n      isWarning: !this.state.isWarning,\r\n    });\r\n  };\r\n\r\n  issuedlisttableupdate = holdData => {\r\n    let { accountList } = this.state;\r\n    let filterList = accountList.find(account => account.id === holdData.id);\r\n    filterList[\"qty_issued\"] = holdData.issueQty;\r\n    filterList[\"staff_issued\"] = holdData.emp_name;\r\n    filterList[\"emp_id\"] = holdData.emp_id;\r\n    filterList[\"emp_name\"] = holdData.emp_name;\r\n    this.setState({ ...this.state.accountList, filterList });\r\n  };\r\n\r\n  issuedlistupdate = holdData => {\r\n    let { formData } = this.state;\r\n    let filterList = formData.find(account => account.id === holdData.id);\r\n    if (filterList) {\r\n      filterList[\"id\"] = holdData.id;\r\n      filterList[\"issued_qty\"] = holdData.issueQty;\r\n      filterList[\"emp_id\"] = holdData.emp_id;\r\n      this.setState({ ...this.state.formData, filterList });\r\n    } else {\r\n      let data = {};\r\n      data[\"id\"] = holdData.id;\r\n      data[\"issued_qty\"] = holdData.issueQty;\r\n      data[\"emp_id\"] = holdData.emp_id;\r\n      formData.push(data);\r\n      this.setState({ ...this.state.formData, formData });\r\n    }\r\n  };\r\n\r\n  handlePrint = () => {\r\n    this.setState({ isPrint: false });\r\n    window.open(this.state.downloadlLink);\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    let { formData } = this.state;\r\n    if (formData.length > 0) {\r\n      await this.props.CreateHoldItem(formData).then(async res => {\r\n        if (res.status === 200) {\r\n          Toast({ type: \"success\", message: res.message });\r\n          this.setState({\r\n            downloadlLink: res.data,\r\n            isPrint: true,\r\n            formData: [],\r\n          });\r\n          this.getAccountData();\r\n        } else {\r\n          Toast({ type: \"error\", message: res.message });\r\n        }\r\n      });\r\n    } else {\r\n      Toast({ type: \"error\", message: \"There is no record to update\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      accountList = [],\r\n      activeTab,\r\n      isIssued,\r\n      isWarning,\r\n      Staffid,\r\n      holdItem = {},\r\n      downloadlLink,\r\n      isPrint,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <div className=\"treatment-account row mt-3\">\r\n        <div className=\"col-12\">\r\n          <div className=\"table\">\r\n            {activeTab !== \"detail\" ? (\r\n              <TableWrapper\r\n                headerDetails={headerDetails}\r\n                queryHandler={this.handlePagination}\r\n              >\r\n                {accountList && accountList.length > 0\r\n                  ? accountList.map((item, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>\r\n                            <div className=\"text-right\">{item.sa_date}</div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"text-left\">\r\n                              {item.sa_transacno_ref}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"text-left\">{item.hi_itemdesc}</div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"text-left\">{item.itemno}</div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"text-right\">{item.holditemqty}</div>\r\n                          </td>\r\n                          <td onClick={() => this.handleissuedstaff(item)}>\r\n                            <div className=\"text-right cursor-pointer\">\r\n                              {item.qty_issued}\r\n                            </div>\r\n                          </td>\r\n                          <td onClick={() => this.handleissuedstaff(item)}>\r\n                            <div className=\"text-left justify-content-center\">\r\n                              {item.staff_issued}\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </TableWrapper>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 d-flex justify-center\">\r\n          <div className=\"col-4\">\r\n            <button\r\n              onClick={() => this.onSubmit()}\r\n              className={`btn outline-btn mx-2 fs-14  text-capitalize`}\r\n            >\r\n              {t(\"Issued\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 d-flex justify-center\">\r\n          {isIssued ? (\r\n            <IssuedStaff\r\n              isIssued={isIssued}\r\n              key={holdItem.id}\r\n              toggle={this.modalclose}\r\n              holdItem={holdItem}\r\n              handleModal={this.handleissuedstaff}\r\n              issuedlistupdate={this.issuedlistupdate}\r\n              issuedlisttableupdate={this.issuedlisttableupdate}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"col-12 d-flex justify-center\">\r\n          {isWarning ? (\r\n            <>\r\n              <NormalModal\r\n                style={{ minWidth: \"25%\" }}\r\n                modal={isWarning}\r\n                handleModal={this.toggle}\r\n              >\r\n                <div className=\"row new-cart issued-staff p-3\">\r\n                  <div className=\"col-12\">\r\n                    <div>\r\n                      <p>\r\n                        {t(`Product have outstanding, Are you sure you want to\r\n                        issued ?`)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-3\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-3\">\r\n                        <button\r\n                          onClick={() => this.proceedtoissuedstaff()}\r\n                          className={`btn outline-btn mx-2 fs-14  text-capitalize`}\r\n                        >\r\n                          {t(\"Yes\")}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <button\r\n                          onClick={() => this.denyissuedstaff()}\r\n                          className={`btn outline-btn mx-2 fs-14  text-capitalize`}\r\n                        >\r\n                          {t(\"No\")}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </NormalModal>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"col-12 d-flex justify-center\">\r\n          {isPrint ? (\r\n            <>\r\n              <NormalModal\r\n                style={{ minWidth: \"25%\" }}\r\n                modal={isPrint}\r\n                handleModal={this.toggle}\r\n              >\r\n                <div className=\"row new-cart issued-staff p-3\">\r\n                  <div className=\"col-12\">\r\n                    <div>\r\n                      <p>{t(`Do you want to print ?`)}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-3\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-3\">\r\n                        <button\r\n                          onClick={() => this.handlePrint()}\r\n                          className={`btn outline-btn mx-2 fs-14  text-capitalize`}\r\n                        >\r\n                          {t(\"Yes\")}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <button\r\n                          onClick={() => this.setState({ isPrint: false })}\r\n                          className={`btn outline-btn mx-2 fs-14  text-capitalize`}\r\n                        >\r\n                          {t(\"No\")}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </NormalModal>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      updateForm,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n      commonDeleteApi,\r\n      CreateHoldItem,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const Hold = withTranslation()(\r\n  connect(null, mapDispatchToProps)(HoldSectionClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}