{"ast":null,"code":"/**\r\n * DevExtreme (viz/gauges/common.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.createIndicatorCreator = createIndicatorCreator;\nexports.dxGauge = void 0;\n\nvar _base_gauge = require(\"./base_gauge\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _extend2 = require(\"../../core/utils/extend\");\n\nvar _base_axis = require(\"../axes/base_axis\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _isArray = Array.isArray;\nvar _isFinite = isFinite;\nvar _Number = Number;\nvar _min = Math.min;\nvar _max = Math.max;\nvar _extend = _extend2.extend;\nvar _each = _iterator.each;\nvar SHIFT_ANGLE = 90;\nvar OPTION_VALUE = \"value\";\nvar OPTION_SUBVALUES = \"subvalues\";\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 5;\nvar DEFAULT_NUMBER_MULTIPLIERS = [1, 2, 5];\n\nfunction processValue(value, fallbackValue) {\n  if (null === value) {\n    return value;\n  }\n\n  return _isFinite(value) ? _Number(value) : fallbackValue;\n}\n\nfunction parseArrayOfNumbers(arg) {\n  return _isArray(arg) ? arg : (0, _type.isNumeric)(arg) ? [arg] : null;\n}\n\nvar dxGauge = _base_gauge.dxBaseGauge.inherit({\n  _initCore: function () {\n    var that = this;\n    var renderer = that._renderer;\n\n    that._setupValue(that.option(OPTION_VALUE));\n\n    that.__subvalues = parseArrayOfNumbers(that.option(OPTION_SUBVALUES));\n\n    that._setupSubvalues(that.__subvalues);\n\n    selectMode(that);\n    that.callBase.apply(that, arguments);\n    that._rangeContainer = new that._factory.RangeContainer({\n      renderer: renderer,\n      container: renderer.root,\n      translator: that._translator,\n      themeManager: that._themeManager\n    });\n\n    that._initScale();\n\n    that._subvalueIndicatorContainer = that._renderer.g().attr({\n      \"class\": \"dxg-subvalue-indicators\"\n    }).linkOn(that._renderer.root, \"valueIndicator\").enableLinks();\n  },\n  _fontFields: [\"scale.label.font\", \"valueIndicators.rangebar.text.font\", \"valueIndicators.textcloud.text.font\", \"indicator.text.font\"],\n  _initScale: function () {\n    var that = this;\n    that._scaleGroup = that._renderer.g().attr({\n      \"class\": \"dxg-scale\"\n    }).linkOn(that._renderer.root, \"scale\");\n    that._scale = new _base_axis.Axis({\n      incidentOccurred: that._incidentOccurred,\n      renderer: that._renderer,\n      axesContainerGroup: that._scaleGroup,\n      axisType: that._scaleTypes.type,\n      drawingType: that._scaleTypes.drawingType,\n      widgetClass: \"dxg\",\n      getTemplate: function () {}\n    });\n  },\n  _disposeCore: function () {\n    var that = this;\n    that.callBase.apply(that, arguments);\n\n    that._scale.dispose();\n\n    that._scaleGroup.linkOff();\n\n    that._rangeContainer.dispose();\n\n    that._disposeValueIndicators();\n\n    that._subvalueIndicatorContainer.linkOff();\n\n    that._scale = that._scaleGroup = that._rangeContainer = null;\n  },\n  _disposeValueIndicators: function () {\n    var that = this;\n    that._valueIndicator && that._valueIndicator.dispose();\n    that._subvalueIndicatorsSet && that._subvalueIndicatorsSet.dispose();\n    that._valueIndicator = that._subvalueIndicatorsSet = null;\n  },\n  _setupDomainCore: function () {\n    var that = this;\n    var scaleOption = that.option(\"scale\") || {};\n    var startValue = that.option(\"startValue\");\n    var endValue = that.option(\"endValue\");\n    startValue = (0, _type.isNumeric)(startValue) ? _Number(startValue) : (0, _type.isNumeric)(scaleOption.startValue) ? _Number(scaleOption.startValue) : 0;\n    endValue = (0, _type.isNumeric)(endValue) ? _Number(endValue) : (0, _type.isNumeric)(scaleOption.endValue) ? _Number(scaleOption.endValue) : 100;\n    that._baseValue = startValue < endValue ? startValue : endValue;\n\n    that._translator.setDomain(startValue, endValue);\n  },\n  _cleanContent: function () {\n    var that = this;\n\n    that._rangeContainer.clean();\n\n    that._cleanValueIndicators();\n  },\n  _measureScale: function (scaleOptions) {\n    var that = this;\n    var majorTick = scaleOptions.tick;\n    var majorTickEnabled = majorTick.visible && majorTick.length > 0 && majorTick.width > 0;\n    var minorTick = scaleOptions.minorTick;\n    var minorTickEnabled = minorTick.visible && minorTick.length > 0 && minorTick.width > 0;\n    var label = scaleOptions.label;\n    var indentFromTick = Number(label.indentFromTick);\n\n    if (!majorTickEnabled && !minorTickEnabled && !label.visible) {\n      return {};\n    }\n\n    var textParams = that._scale.measureLabels((0, _extend2.extend)({}, that._canvas));\n\n    var layoutValue = that._getScaleLayoutValue();\n\n    var result = {\n      min: layoutValue,\n      max: layoutValue\n    };\n\n    var coefs = that._getTicksCoefficients(scaleOptions);\n\n    var innerCoef = coefs.inner;\n    var outerCoef = coefs.outer;\n\n    if (majorTickEnabled) {\n      result.min = _min(result.min, layoutValue - innerCoef * majorTick.length);\n      result.max = _max(result.max, layoutValue + outerCoef * majorTick.length);\n    }\n\n    if (minorTickEnabled) {\n      result.min = _min(result.min, layoutValue - innerCoef * minorTick.length);\n      result.max = _max(result.max, layoutValue + outerCoef * minorTick.length);\n    }\n\n    label.visible && that._correctScaleIndents(result, indentFromTick, textParams);\n    return result;\n  },\n  _renderContent: function () {\n    var that = this;\n\n    var scaleOptions = that._prepareScaleSettings();\n\n    that._rangeContainer.render(_extend(that._getOption(\"rangeContainer\"), {\n      vertical: that._area.vertical\n    }));\n\n    that._renderScale(scaleOptions);\n\n    that._subvalueIndicatorContainer.linkAppend();\n\n    var elements = (0, _utils.map)([that._rangeContainer].concat(that._prepareValueIndicators()), function (element) {\n      return element && element.enabled ? element : null;\n    });\n\n    that._applyMainLayout(elements, that._measureScale(scaleOptions));\n\n    _each(elements, function (_, element) {\n      element.resize(that._getElementLayout(element.getOffset()));\n    });\n\n    that._shiftScale(that._getElementLayout(0), scaleOptions);\n\n    that._beginValueChanging();\n\n    that._updateActiveElements();\n\n    that._endValueChanging();\n  },\n  _prepareScaleSettings: function () {\n    var that = this;\n    var userOptions = that.option(\"scale\");\n    var scaleOptions = (0, _extend2.extend)(true, {}, that._themeManager.theme(\"scale\"), userOptions);\n    scaleOptions.label.indentFromAxis = 0;\n    scaleOptions.isHorizontal = !that._area.vertical;\n    scaleOptions.forceUserTickInterval |= (0, _type.isDefined)(userOptions) && (0, _type.isDefined)(userOptions.tickInterval) && !(0, _type.isDefined)(userOptions.scaleDivisionFactor);\n    scaleOptions.axisDivisionFactor = scaleOptions.scaleDivisionFactor || that._gridSpacingFactor;\n    scaleOptions.minorAxisDivisionFactor = scaleOptions.minorScaleDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR;\n    scaleOptions.numberMultipliers = DEFAULT_NUMBER_MULTIPLIERS;\n    scaleOptions.tickOrientation = that._getTicksOrientation(scaleOptions);\n\n    if (scaleOptions.label.useRangeColors) {\n      scaleOptions.label.customizeColor = function () {\n        return that._rangeContainer.getColorForValue(this.value);\n      };\n    }\n\n    return scaleOptions;\n  },\n  _renderScale: function (scaleOptions) {\n    var that = this;\n\n    var bounds = that._translator.getDomain();\n\n    var startValue = bounds[0];\n    var endValue = bounds[1];\n\n    var angles = that._translator.getCodomain();\n\n    var invert = !!(startValue > endValue ^ scaleOptions.inverted);\n\n    var min = _min(startValue, endValue);\n\n    var max = _max(startValue, endValue);\n\n    scaleOptions.min = min;\n    scaleOptions.max = max;\n    scaleOptions.startAngle = SHIFT_ANGLE - angles[0];\n    scaleOptions.endAngle = SHIFT_ANGLE - angles[1];\n    scaleOptions.skipViewportExtending = true;\n    scaleOptions.inverted = invert;\n\n    that._scale.updateOptions(scaleOptions);\n\n    that._scale.setBusinessRange({\n      axisType: \"continuous\",\n      dataType: \"numeric\",\n      min: min,\n      max: max,\n      invert: invert\n    });\n\n    that._updateScaleTickIndent(scaleOptions);\n\n    that._scaleGroup.linkAppend();\n\n    that._scale.draw((0, _extend2.extend)({}, that._canvas));\n  },\n  _updateIndicatorSettings: function (settings) {\n    var that = this;\n    settings.currentValue = settings.baseValue = _isFinite(that._translator.translate(settings.baseValue)) ? _Number(settings.baseValue) : that._baseValue;\n    settings.vertical = that._area.vertical;\n\n    if (settings.text && !settings.text.format) {\n      settings.text.format = that._defaultFormatOptions;\n    }\n  },\n  _prepareIndicatorSettings: function (options, defaultTypeField) {\n    var that = this;\n\n    var theme = that._themeManager.theme(\"valueIndicators\");\n\n    var type = (0, _utils.normalizeEnum)(options.type || that._themeManager.theme(defaultTypeField));\n\n    var settings = _extend(true, {}, theme._default, theme[type], options);\n\n    settings.type = type;\n    settings.animation = that._animationSettings;\n    settings.containerBackgroundColor = that._containerBackgroundColor;\n\n    that._updateIndicatorSettings(settings);\n\n    return settings;\n  },\n  _cleanValueIndicators: function () {\n    this._valueIndicator && this._valueIndicator.clean();\n    this._subvalueIndicatorsSet && this._subvalueIndicatorsSet.clean();\n  },\n  _prepareValueIndicators: function () {\n    var that = this;\n\n    that._prepareValueIndicator();\n\n    null !== that.__subvalues && that._prepareSubvalueIndicators();\n    return [that._valueIndicator, that._subvalueIndicatorsSet];\n  },\n  _updateActiveElements: function () {\n    this._updateValueIndicator();\n\n    this._updateSubvalueIndicators();\n  },\n  _prepareValueIndicator: function () {\n    var that = this;\n    var target = that._valueIndicator;\n\n    var settings = that._prepareIndicatorSettings(that.option(\"valueIndicator\") || {}, \"valueIndicatorType\");\n\n    if (target && target.type !== settings.type) {\n      target.dispose();\n      target = null;\n    }\n\n    if (!target) {\n      target = that._valueIndicator = that._createIndicator(settings.type, that._renderer.root, \"dxg-value-indicator\", \"value-indicator\");\n    }\n\n    target.render(settings);\n  },\n  _createSubvalueIndicatorsSet: function () {\n    var that = this;\n    var root = that._subvalueIndicatorContainer;\n    return new ValueIndicatorsSet({\n      createIndicator: function (type, i) {\n        return that._createIndicator(type, root, \"dxg-subvalue-indicator\", \"subvalue-indicator\", i);\n      },\n      createPalette: function (palette) {\n        return that._themeManager.createPalette(palette);\n      }\n    });\n  },\n  _prepareSubvalueIndicators: function () {\n    var that = this;\n    var target = that._subvalueIndicatorsSet;\n\n    var settings = that._prepareIndicatorSettings(that.option(\"subvalueIndicator\") || {}, \"subvalueIndicatorType\");\n\n    if (!target) {\n      target = that._subvalueIndicatorsSet = that._createSubvalueIndicatorsSet();\n    }\n\n    var isRecreate = settings.type !== target.type;\n    target.type = settings.type;\n\n    var dummy = that._createIndicator(settings.type, that._renderer.root);\n\n    if (dummy) {\n      dummy.dispose();\n      target.render(settings, isRecreate);\n    }\n  },\n  _setupValue: function (value) {\n    this.__value = processValue(value, this.__value);\n  },\n  _setupSubvalues: function (subvalues) {\n    var vals = void 0 === subvalues ? this.__subvalues : parseArrayOfNumbers(subvalues);\n    var i;\n    var ii;\n    var list;\n\n    if (null === vals) {\n      return;\n    }\n\n    for (i = 0, ii = vals.length, list = []; i < ii; ++i) {\n      list.push(processValue(vals[i], this.__subvalues[i]));\n    }\n\n    this.__subvalues = list;\n  },\n  _updateValueIndicator: function () {\n    var that = this;\n    that._valueIndicator && that._valueIndicator.value(that.__value, that._noAnimation);\n  },\n  _updateSubvalueIndicators: function () {\n    var that = this;\n    that._subvalueIndicatorsSet && that._subvalueIndicatorsSet.values(that.__subvalues, that._noAnimation);\n  },\n  value: function (arg) {\n    if (void 0 !== arg) {\n      this._changeValue(arg);\n\n      return this;\n    }\n\n    return this.__value;\n  },\n  subvalues: function (arg) {\n    if (void 0 !== arg) {\n      this._changeSubvalues(arg);\n\n      return this;\n    }\n\n    return null !== this.__subvalues ? this.__subvalues.slice() : void 0;\n  },\n  _changeValue: function (value) {\n    var that = this;\n\n    that._setupValue(value);\n\n    that._beginValueChanging();\n\n    that._updateValueIndicator();\n\n    if (that.__value !== that.option(OPTION_VALUE)) {\n      that.option(OPTION_VALUE, that.__value);\n    }\n\n    that._endValueChanging();\n  },\n  _changeSubvalues: function (subvalues) {\n    var that = this;\n\n    if (null !== that.__subvalues) {\n      that._setupSubvalues(subvalues);\n\n      that._beginValueChanging();\n\n      that._updateSubvalueIndicators();\n\n      that._endValueChanging();\n    } else {\n      that.__subvalues = parseArrayOfNumbers(subvalues);\n\n      that._setContentSize();\n\n      that._renderContent();\n    }\n\n    if (!(0, _base_gauge.compareArrays)(that.__subvalues, that.option(OPTION_SUBVALUES))) {\n      that.option(OPTION_SUBVALUES, that.__subvalues);\n    }\n  },\n  _optionChangesMap: {\n    scale: \"DOMAIN\",\n    rangeContainer: \"MOSTLY_TOTAL\",\n    valueIndicator: \"MOSTLY_TOTAL\",\n    subvalueIndicator: \"MOSTLY_TOTAL\",\n    containerBackgroundColor: \"MOSTLY_TOTAL\",\n    value: \"VALUE\",\n    subvalues: \"SUBVALUES\",\n    valueIndicators: \"MOSTLY_TOTAL\"\n  },\n  _customChangesOrder: [\"VALUE\", \"SUBVALUES\"],\n  _change_VALUE: function () {\n    this._changeValue(this.option(OPTION_VALUE));\n  },\n  _change_SUBVALUES: function () {\n    this._changeSubvalues(this.option(OPTION_SUBVALUES));\n  },\n  _applyMainLayout: null,\n  _getElementLayout: null,\n  _createIndicator: function (type, owner, className, trackerType, trackerIndex, _strict) {\n    var that = this;\n\n    var indicator = that._factory.createIndicator({\n      renderer: that._renderer,\n      translator: that._translator,\n      owner: owner,\n      tracker: that._tracker,\n      className: className\n    }, type, _strict);\n\n    if (indicator) {\n      indicator.type = type;\n      indicator._trackerInfo = {\n        type: trackerType,\n        index: trackerIndex\n      };\n    }\n\n    return indicator;\n  },\n  _getApproximateScreenRange: null\n});\n\nexports.dxGauge = dxGauge;\n\nfunction valueGetter(arg) {\n  return arg ? arg.value : null;\n}\n\nfunction setupValues(that, fieldName, optionItems) {\n  var currentValues = that[fieldName];\n  var newValues = _isArray(optionItems) ? (0, _utils.map)(optionItems, valueGetter) : [];\n  var i = 0;\n  var ii = newValues.length;\n  var list = [];\n\n  for (; i < ii; ++i) {\n    list.push(processValue(newValues[i], currentValues[i]));\n  }\n\n  that[fieldName] = list;\n}\n\nfunction selectMode(gauge) {\n  if (void 0 === gauge.option(OPTION_VALUE) && void 0 === gauge.option(OPTION_SUBVALUES)) {\n    if (void 0 !== gauge.option(\"valueIndicators\")) {\n      disableDefaultMode(gauge);\n      selectHardMode(gauge);\n    }\n  }\n}\n\nfunction disableDefaultMode(that) {\n  that.value = that.subvalues = _common.noop;\n  that._setupValue = that._setupSubvalues = that._updateValueIndicator = that._updateSubvalueIndicators = null;\n}\n\nfunction selectHardMode(that) {\n  that._indicatorValues = [];\n  setupValues(that, \"_indicatorValues\", that.option(\"valueIndicators\"));\n  that._valueIndicators = [];\n  var _applyMostlyTotalChange = that._applyMostlyTotalChange;\n\n  that._applyMostlyTotalChange = function () {\n    setupValues(this, \"_indicatorValues\", this.option(\"valueIndicators\"));\n\n    _applyMostlyTotalChange.call(this);\n  };\n\n  that._updateActiveElements = updateActiveElements_hardMode;\n  that._prepareValueIndicators = prepareValueIndicators_hardMode;\n  that._disposeValueIndicators = disposeValueIndicators_hardMode;\n  that._cleanValueIndicators = cleanValueIndicators_hardMode;\n  that.indicatorValue = indicatorValue_hardMode;\n}\n\nfunction updateActiveElements_hardMode() {\n  var that = this;\n\n  _each(that._valueIndicators, function (_, valueIndicator) {\n    valueIndicator.value(that._indicatorValues[valueIndicator.index], that._noAnimation);\n  });\n}\n\nfunction prepareValueIndicators_hardMode() {\n  var that = this;\n  var valueIndicators = that._valueIndicators || [];\n  var userOptions = that.option(\"valueIndicators\");\n  var optionList = [];\n  var i = 0;\n  var ii;\n\n  for (ii = _isArray(userOptions) ? userOptions.length : 0; i < ii; ++i) {\n    optionList.push(userOptions[i]);\n  }\n\n  for (ii = valueIndicators.length; i < ii; ++i) {\n    optionList.push(null);\n  }\n\n  var newValueIndicators = [];\n\n  _each(optionList, function (i, userSettings) {\n    var valueIndicator = valueIndicators[i];\n\n    if (!userSettings) {\n      valueIndicator && valueIndicator.dispose();\n      return;\n    }\n\n    var settings = that._prepareIndicatorSettings(userSettings, \"valueIndicatorType\");\n\n    if (valueIndicator && valueIndicator.type !== settings.type) {\n      valueIndicator.dispose();\n      valueIndicator = null;\n    }\n\n    if (!valueIndicator) {\n      valueIndicator = that._createIndicator(settings.type, that._renderer.root, \"dxg-value-indicator\", \"value-indicator\", i, true);\n    }\n\n    if (valueIndicator) {\n      valueIndicator.index = i;\n      valueIndicator.render(settings);\n      newValueIndicators.push(valueIndicator);\n    }\n  });\n\n  that._valueIndicators = newValueIndicators;\n  return that._valueIndicators;\n}\n\nfunction disposeValueIndicators_hardMode() {\n  _each(this._valueIndicators, function (_, valueIndicator) {\n    valueIndicator.dispose();\n  });\n\n  this._valueIndicators = null;\n}\n\nfunction cleanValueIndicators_hardMode() {\n  _each(this._valueIndicators, function (_, valueIndicator) {\n    valueIndicator.clean();\n  });\n}\n\nfunction indicatorValue_hardMode(index, value) {\n  return accessPointerValue(this, this._valueIndicators, this._indicatorValues, index, value);\n}\n\nfunction accessPointerValue(that, pointers, values, index, value) {\n  if (void 0 !== value) {\n    if (void 0 !== values[index]) {\n      values[index] = processValue(value, values[index]);\n      pointers[index] && pointers[index].value(values[index]);\n    }\n\n    return that;\n  } else {\n    return values[index];\n  }\n}\n\nfunction ValueIndicatorsSet(parameters) {\n  this._parameters = parameters;\n  this._indicators = [];\n}\n\nValueIndicatorsSet.prototype = {\n  constructor: ValueIndicatorsSet,\n  dispose: function () {\n    var that = this;\n\n    _each(that._indicators, function (_, indicator) {\n      indicator.dispose();\n    });\n\n    that._parameters = that._options = that._indicators = that._colorPalette = that._palette = null;\n    return that;\n  },\n  clean: function () {\n    var that = this;\n    that._sample && that._sample.clean().dispose();\n\n    _each(that._indicators, function (_, indicator) {\n      indicator.clean();\n    });\n\n    that._sample = that._options = that._palette = null;\n    return that;\n  },\n  render: function (options, isRecreate) {\n    var that = this;\n    that._options = options;\n    that._sample = that._parameters.createIndicator(that.type);\n\n    that._sample.render(options);\n\n    that.enabled = that._sample.enabled;\n    that._palette = (0, _type.isDefined)(options.palette) ? that._parameters.createPalette(options.palette) : null;\n\n    if (that.enabled) {\n      that._generatePalette(that._indicators.length);\n\n      that._indicators = (0, _utils.map)(that._indicators, function (indicator, i) {\n        if (isRecreate) {\n          indicator.dispose();\n          indicator = that._parameters.createIndicator(that.type, i);\n        }\n\n        indicator.render(that._getIndicatorOptions(i));\n        return indicator;\n      });\n    }\n\n    return that;\n  },\n  getOffset: function () {\n    return this._sample.getOffset();\n  },\n  resize: function (layout) {\n    var that = this;\n    that._layout = layout;\n\n    _each(that._indicators, function (_, indicator) {\n      indicator.resize(layout);\n    });\n\n    return that;\n  },\n  measure: function (layout) {\n    return this._sample.measure(layout);\n  },\n  _getIndicatorOptions: function (index) {\n    var result = this._options;\n\n    if (this._colorPalette) {\n      result = _extend({}, result, {\n        color: this._colorPalette[index]\n      });\n    }\n\n    return result;\n  },\n  _generatePalette: function (count) {\n    var that = this;\n    var colors = null;\n\n    if (that._palette) {\n      that._palette.reset();\n\n      colors = that._palette.generateColors(count, {\n        repeat: true\n      });\n    }\n\n    that._colorPalette = colors;\n  },\n  _adjustIndicatorsCount: function (count) {\n    var that = this;\n    var indicators = that._indicators;\n    var i;\n    var ii;\n    var indicator;\n    var indicatorsLen = indicators.length;\n\n    if (indicatorsLen > count) {\n      for (i = count, ii = indicatorsLen; i < ii; ++i) {\n        indicators[i].clean().dispose();\n      }\n\n      that._indicators = indicators.slice(0, count);\n\n      that._generatePalette(indicators.length);\n    } else {\n      if (indicatorsLen < count) {\n        that._generatePalette(count);\n\n        for (i = indicatorsLen, ii = count; i < ii; ++i) {\n          indicator = that._parameters.createIndicator(that.type, i);\n          indicator.render(that._getIndicatorOptions(i)).resize(that._layout);\n          indicators.push(indicator);\n        }\n      }\n    }\n  },\n  values: function (arg, _noAnimation) {\n    var that = this;\n\n    if (!that.enabled) {\n      return;\n    }\n\n    if (void 0 !== arg) {\n      if (!_isArray(arg)) {\n        arg = _isFinite(arg) ? [Number(arg)] : null;\n      }\n\n      if (arg) {\n        that._adjustIndicatorsCount(arg.length);\n\n        _each(that._indicators, function (i, indicator) {\n          indicator.value(arg[i], _noAnimation);\n        });\n      }\n\n      return that;\n    }\n\n    return (0, _utils.map)(that._indicators, function (indicator) {\n      return indicator.value();\n    });\n  }\n};\n\nfunction createIndicatorCreator(indicators) {\n  return function (parameters, type, _strict) {\n    var indicatorType = indicators[(0, _utils.normalizeEnum)(type)] || !_strict && indicators._default;\n\n    return indicatorType ? new indicatorType(parameters) : null;\n  };\n}","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/gauges/common.js"],"names":["exports","createIndicatorCreator","dxGauge","_base_gauge","require","_type","_iterator","_extend2","_base_axis","_utils","_common","_isArray","Array","isArray","_isFinite","isFinite","_Number","Number","_min","Math","min","_max","max","_extend","extend","_each","each","SHIFT_ANGLE","OPTION_VALUE","OPTION_SUBVALUES","DEFAULT_MINOR_AXIS_DIVISION_FACTOR","DEFAULT_NUMBER_MULTIPLIERS","processValue","value","fallbackValue","parseArrayOfNumbers","arg","isNumeric","dxBaseGauge","inherit","_initCore","that","renderer","_renderer","_setupValue","option","__subvalues","_setupSubvalues","selectMode","callBase","apply","arguments","_rangeContainer","_factory","RangeContainer","container","root","translator","_translator","themeManager","_themeManager","_initScale","_subvalueIndicatorContainer","g","attr","linkOn","enableLinks","_fontFields","_scaleGroup","_scale","Axis","incidentOccurred","_incidentOccurred","axesContainerGroup","axisType","_scaleTypes","type","drawingType","widgetClass","getTemplate","_disposeCore","dispose","linkOff","_disposeValueIndicators","_valueIndicator","_subvalueIndicatorsSet","_setupDomainCore","scaleOption","startValue","endValue","_baseValue","setDomain","_cleanContent","clean","_cleanValueIndicators","_measureScale","scaleOptions","majorTick","tick","majorTickEnabled","visible","length","width","minorTick","minorTickEnabled","label","indentFromTick","textParams","measureLabels","_canvas","layoutValue","_getScaleLayoutValue","result","coefs","_getTicksCoefficients","innerCoef","inner","outerCoef","outer","_correctScaleIndents","_renderContent","_prepareScaleSettings","render","_getOption","vertical","_area","_renderScale","linkAppend","elements","map","concat","_prepareValueIndicators","element","enabled","_applyMainLayout","_","resize","_getElementLayout","getOffset","_shiftScale","_beginValueChanging","_updateActiveElements","_endValueChanging","userOptions","theme","indentFromAxis","isHorizontal","forceUserTickInterval","isDefined","tickInterval","scaleDivisionFactor","axisDivisionFactor","_gridSpacingFactor","minorAxisDivisionFactor","minorScaleDivisionFactor","numberMultipliers","tickOrientation","_getTicksOrientation","useRangeColors","customizeColor","getColorForValue","bounds","getDomain","angles","getCodomain","invert","inverted","startAngle","endAngle","skipViewportExtending","updateOptions","setBusinessRange","dataType","_updateScaleTickIndent","draw","_updateIndicatorSettings","settings","currentValue","baseValue","translate","text","format","_defaultFormatOptions","_prepareIndicatorSettings","options","defaultTypeField","normalizeEnum","_default","animation","_animationSettings","containerBackgroundColor","_containerBackgroundColor","_prepareValueIndicator","_prepareSubvalueIndicators","_updateValueIndicator","_updateSubvalueIndicators","target","_createIndicator","_createSubvalueIndicatorsSet","ValueIndicatorsSet","createIndicator","i","createPalette","palette","isRecreate","dummy","__value","subvalues","vals","ii","list","push","_noAnimation","values","_changeValue","_changeSubvalues","slice","_setContentSize","compareArrays","_optionChangesMap","scale","rangeContainer","valueIndicator","subvalueIndicator","valueIndicators","_customChangesOrder","_change_VALUE","_change_SUBVALUES","owner","className","trackerType","trackerIndex","_strict","indicator","tracker","_tracker","_trackerInfo","index","_getApproximateScreenRange","valueGetter","setupValues","fieldName","optionItems","currentValues","newValues","gauge","disableDefaultMode","selectHardMode","noop","_indicatorValues","_valueIndicators","_applyMostlyTotalChange","call","updateActiveElements_hardMode","prepareValueIndicators_hardMode","disposeValueIndicators_hardMode","cleanValueIndicators_hardMode","indicatorValue","indicatorValue_hardMode","optionList","newValueIndicators","userSettings","accessPointerValue","pointers","parameters","_parameters","_indicators","prototype","constructor","_options","_colorPalette","_palette","_sample","_generatePalette","_getIndicatorOptions","layout","_layout","measure","color","count","colors","reset","generateColors","repeat","_adjustIndicatorsCount","indicators","indicatorsLen","indicatorType"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/gauges/common.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.createIndicatorCreator = createIndicatorCreator;\r\nexports.dxGauge = void 0;\r\nvar _base_gauge = require(\"./base_gauge\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend2 = require(\"../../core/utils/extend\");\r\nvar _base_axis = require(\"../axes/base_axis\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _isArray = Array.isArray;\r\nvar _isFinite = isFinite;\r\nvar _Number = Number;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _extend = _extend2.extend;\r\nvar _each = _iterator.each;\r\nvar SHIFT_ANGLE = 90;\r\nvar OPTION_VALUE = \"value\";\r\nvar OPTION_SUBVALUES = \"subvalues\";\r\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 5;\r\nvar DEFAULT_NUMBER_MULTIPLIERS = [1, 2, 5];\r\n\r\nfunction processValue(value, fallbackValue) {\r\n    if (null === value) {\r\n        return value\r\n    }\r\n    return _isFinite(value) ? _Number(value) : fallbackValue\r\n}\r\n\r\nfunction parseArrayOfNumbers(arg) {\r\n    return _isArray(arg) ? arg : (0, _type.isNumeric)(arg) ? [arg] : null\r\n}\r\nvar dxGauge = _base_gauge.dxBaseGauge.inherit({\r\n    _initCore: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        that._setupValue(that.option(OPTION_VALUE));\r\n        that.__subvalues = parseArrayOfNumbers(that.option(OPTION_SUBVALUES));\r\n        that._setupSubvalues(that.__subvalues);\r\n        selectMode(that);\r\n        that.callBase.apply(that, arguments);\r\n        that._rangeContainer = new that._factory.RangeContainer({\r\n            renderer: renderer,\r\n            container: renderer.root,\r\n            translator: that._translator,\r\n            themeManager: that._themeManager\r\n        });\r\n        that._initScale();\r\n        that._subvalueIndicatorContainer = that._renderer.g().attr({\r\n            \"class\": \"dxg-subvalue-indicators\"\r\n        }).linkOn(that._renderer.root, \"valueIndicator\").enableLinks()\r\n    },\r\n    _fontFields: [\"scale.label.font\", \"valueIndicators.rangebar.text.font\", \"valueIndicators.textcloud.text.font\", \"indicator.text.font\"],\r\n    _initScale: function() {\r\n        var that = this;\r\n        that._scaleGroup = that._renderer.g().attr({\r\n            \"class\": \"dxg-scale\"\r\n        }).linkOn(that._renderer.root, \"scale\");\r\n        that._scale = new _base_axis.Axis({\r\n            incidentOccurred: that._incidentOccurred,\r\n            renderer: that._renderer,\r\n            axesContainerGroup: that._scaleGroup,\r\n            axisType: that._scaleTypes.type,\r\n            drawingType: that._scaleTypes.drawingType,\r\n            widgetClass: \"dxg\",\r\n            getTemplate: function() {}\r\n        })\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        that._scale.dispose();\r\n        that._scaleGroup.linkOff();\r\n        that._rangeContainer.dispose();\r\n        that._disposeValueIndicators();\r\n        that._subvalueIndicatorContainer.linkOff();\r\n        that._scale = that._scaleGroup = that._rangeContainer = null\r\n    },\r\n    _disposeValueIndicators: function() {\r\n        var that = this;\r\n        that._valueIndicator && that._valueIndicator.dispose();\r\n        that._subvalueIndicatorsSet && that._subvalueIndicatorsSet.dispose();\r\n        that._valueIndicator = that._subvalueIndicatorsSet = null\r\n    },\r\n    _setupDomainCore: function() {\r\n        var that = this;\r\n        var scaleOption = that.option(\"scale\") || {};\r\n        var startValue = that.option(\"startValue\");\r\n        var endValue = that.option(\"endValue\");\r\n        startValue = (0, _type.isNumeric)(startValue) ? _Number(startValue) : (0, _type.isNumeric)(scaleOption.startValue) ? _Number(scaleOption.startValue) : 0;\r\n        endValue = (0, _type.isNumeric)(endValue) ? _Number(endValue) : (0, _type.isNumeric)(scaleOption.endValue) ? _Number(scaleOption.endValue) : 100;\r\n        that._baseValue = startValue < endValue ? startValue : endValue;\r\n        that._translator.setDomain(startValue, endValue)\r\n    },\r\n    _cleanContent: function() {\r\n        var that = this;\r\n        that._rangeContainer.clean();\r\n        that._cleanValueIndicators()\r\n    },\r\n    _measureScale: function(scaleOptions) {\r\n        var that = this;\r\n        var majorTick = scaleOptions.tick;\r\n        var majorTickEnabled = majorTick.visible && majorTick.length > 0 && majorTick.width > 0;\r\n        var minorTick = scaleOptions.minorTick;\r\n        var minorTickEnabled = minorTick.visible && minorTick.length > 0 && minorTick.width > 0;\r\n        var label = scaleOptions.label;\r\n        var indentFromTick = Number(label.indentFromTick);\r\n        if (!majorTickEnabled && !minorTickEnabled && !label.visible) {\r\n            return {}\r\n        }\r\n        var textParams = that._scale.measureLabels((0, _extend2.extend)({}, that._canvas));\r\n        var layoutValue = that._getScaleLayoutValue();\r\n        var result = {\r\n            min: layoutValue,\r\n            max: layoutValue\r\n        };\r\n        var coefs = that._getTicksCoefficients(scaleOptions);\r\n        var innerCoef = coefs.inner;\r\n        var outerCoef = coefs.outer;\r\n        if (majorTickEnabled) {\r\n            result.min = _min(result.min, layoutValue - innerCoef * majorTick.length);\r\n            result.max = _max(result.max, layoutValue + outerCoef * majorTick.length)\r\n        }\r\n        if (minorTickEnabled) {\r\n            result.min = _min(result.min, layoutValue - innerCoef * minorTick.length);\r\n            result.max = _max(result.max, layoutValue + outerCoef * minorTick.length)\r\n        }\r\n        label.visible && that._correctScaleIndents(result, indentFromTick, textParams);\r\n        return result\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        var scaleOptions = that._prepareScaleSettings();\r\n        that._rangeContainer.render(_extend(that._getOption(\"rangeContainer\"), {\r\n            vertical: that._area.vertical\r\n        }));\r\n        that._renderScale(scaleOptions);\r\n        that._subvalueIndicatorContainer.linkAppend();\r\n        var elements = (0, _utils.map)([that._rangeContainer].concat(that._prepareValueIndicators()), function(element) {\r\n            return element && element.enabled ? element : null\r\n        });\r\n        that._applyMainLayout(elements, that._measureScale(scaleOptions));\r\n        _each(elements, function(_, element) {\r\n            element.resize(that._getElementLayout(element.getOffset()))\r\n        });\r\n        that._shiftScale(that._getElementLayout(0), scaleOptions);\r\n        that._beginValueChanging();\r\n        that._updateActiveElements();\r\n        that._endValueChanging()\r\n    },\r\n    _prepareScaleSettings: function() {\r\n        var that = this;\r\n        var userOptions = that.option(\"scale\");\r\n        var scaleOptions = (0, _extend2.extend)(true, {}, that._themeManager.theme(\"scale\"), userOptions);\r\n        scaleOptions.label.indentFromAxis = 0;\r\n        scaleOptions.isHorizontal = !that._area.vertical;\r\n        scaleOptions.forceUserTickInterval |= (0, _type.isDefined)(userOptions) && (0, _type.isDefined)(userOptions.tickInterval) && !(0, _type.isDefined)(userOptions.scaleDivisionFactor);\r\n        scaleOptions.axisDivisionFactor = scaleOptions.scaleDivisionFactor || that._gridSpacingFactor;\r\n        scaleOptions.minorAxisDivisionFactor = scaleOptions.minorScaleDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR;\r\n        scaleOptions.numberMultipliers = DEFAULT_NUMBER_MULTIPLIERS;\r\n        scaleOptions.tickOrientation = that._getTicksOrientation(scaleOptions);\r\n        if (scaleOptions.label.useRangeColors) {\r\n            scaleOptions.label.customizeColor = function() {\r\n                return that._rangeContainer.getColorForValue(this.value)\r\n            }\r\n        }\r\n        return scaleOptions\r\n    },\r\n    _renderScale: function(scaleOptions) {\r\n        var that = this;\r\n        var bounds = that._translator.getDomain();\r\n        var startValue = bounds[0];\r\n        var endValue = bounds[1];\r\n        var angles = that._translator.getCodomain();\r\n        var invert = !!(startValue > endValue ^ scaleOptions.inverted);\r\n        var min = _min(startValue, endValue);\r\n        var max = _max(startValue, endValue);\r\n        scaleOptions.min = min;\r\n        scaleOptions.max = max;\r\n        scaleOptions.startAngle = SHIFT_ANGLE - angles[0];\r\n        scaleOptions.endAngle = SHIFT_ANGLE - angles[1];\r\n        scaleOptions.skipViewportExtending = true;\r\n        scaleOptions.inverted = invert;\r\n        that._scale.updateOptions(scaleOptions);\r\n        that._scale.setBusinessRange({\r\n            axisType: \"continuous\",\r\n            dataType: \"numeric\",\r\n            min: min,\r\n            max: max,\r\n            invert: invert\r\n        });\r\n        that._updateScaleTickIndent(scaleOptions);\r\n        that._scaleGroup.linkAppend();\r\n        that._scale.draw((0, _extend2.extend)({}, that._canvas))\r\n    },\r\n    _updateIndicatorSettings: function(settings) {\r\n        var that = this;\r\n        settings.currentValue = settings.baseValue = _isFinite(that._translator.translate(settings.baseValue)) ? _Number(settings.baseValue) : that._baseValue;\r\n        settings.vertical = that._area.vertical;\r\n        if (settings.text && !settings.text.format) {\r\n            settings.text.format = that._defaultFormatOptions\r\n        }\r\n    },\r\n    _prepareIndicatorSettings: function(options, defaultTypeField) {\r\n        var that = this;\r\n        var theme = that._themeManager.theme(\"valueIndicators\");\r\n        var type = (0, _utils.normalizeEnum)(options.type || that._themeManager.theme(defaultTypeField));\r\n        var settings = _extend(true, {}, theme._default, theme[type], options);\r\n        settings.type = type;\r\n        settings.animation = that._animationSettings;\r\n        settings.containerBackgroundColor = that._containerBackgroundColor;\r\n        that._updateIndicatorSettings(settings);\r\n        return settings\r\n    },\r\n    _cleanValueIndicators: function() {\r\n        this._valueIndicator && this._valueIndicator.clean();\r\n        this._subvalueIndicatorsSet && this._subvalueIndicatorsSet.clean()\r\n    },\r\n    _prepareValueIndicators: function() {\r\n        var that = this;\r\n        that._prepareValueIndicator();\r\n        null !== that.__subvalues && that._prepareSubvalueIndicators();\r\n        return [that._valueIndicator, that._subvalueIndicatorsSet]\r\n    },\r\n    _updateActiveElements: function() {\r\n        this._updateValueIndicator();\r\n        this._updateSubvalueIndicators()\r\n    },\r\n    _prepareValueIndicator: function() {\r\n        var that = this;\r\n        var target = that._valueIndicator;\r\n        var settings = that._prepareIndicatorSettings(that.option(\"valueIndicator\") || {}, \"valueIndicatorType\");\r\n        if (target && target.type !== settings.type) {\r\n            target.dispose();\r\n            target = null\r\n        }\r\n        if (!target) {\r\n            target = that._valueIndicator = that._createIndicator(settings.type, that._renderer.root, \"dxg-value-indicator\", \"value-indicator\")\r\n        }\r\n        target.render(settings)\r\n    },\r\n    _createSubvalueIndicatorsSet: function() {\r\n        var that = this;\r\n        var root = that._subvalueIndicatorContainer;\r\n        return new ValueIndicatorsSet({\r\n            createIndicator: function(type, i) {\r\n                return that._createIndicator(type, root, \"dxg-subvalue-indicator\", \"subvalue-indicator\", i)\r\n            },\r\n            createPalette: function(palette) {\r\n                return that._themeManager.createPalette(palette)\r\n            }\r\n        })\r\n    },\r\n    _prepareSubvalueIndicators: function() {\r\n        var that = this;\r\n        var target = that._subvalueIndicatorsSet;\r\n        var settings = that._prepareIndicatorSettings(that.option(\"subvalueIndicator\") || {}, \"subvalueIndicatorType\");\r\n        if (!target) {\r\n            target = that._subvalueIndicatorsSet = that._createSubvalueIndicatorsSet()\r\n        }\r\n        var isRecreate = settings.type !== target.type;\r\n        target.type = settings.type;\r\n        var dummy = that._createIndicator(settings.type, that._renderer.root);\r\n        if (dummy) {\r\n            dummy.dispose();\r\n            target.render(settings, isRecreate)\r\n        }\r\n    },\r\n    _setupValue: function(value) {\r\n        this.__value = processValue(value, this.__value)\r\n    },\r\n    _setupSubvalues: function(subvalues) {\r\n        var vals = void 0 === subvalues ? this.__subvalues : parseArrayOfNumbers(subvalues);\r\n        var i;\r\n        var ii;\r\n        var list;\r\n        if (null === vals) {\r\n            return\r\n        }\r\n        for (i = 0, ii = vals.length, list = []; i < ii; ++i) {\r\n            list.push(processValue(vals[i], this.__subvalues[i]))\r\n        }\r\n        this.__subvalues = list\r\n    },\r\n    _updateValueIndicator: function() {\r\n        var that = this;\r\n        that._valueIndicator && that._valueIndicator.value(that.__value, that._noAnimation)\r\n    },\r\n    _updateSubvalueIndicators: function() {\r\n        var that = this;\r\n        that._subvalueIndicatorsSet && that._subvalueIndicatorsSet.values(that.__subvalues, that._noAnimation)\r\n    },\r\n    value: function(arg) {\r\n        if (void 0 !== arg) {\r\n            this._changeValue(arg);\r\n            return this\r\n        }\r\n        return this.__value\r\n    },\r\n    subvalues: function(arg) {\r\n        if (void 0 !== arg) {\r\n            this._changeSubvalues(arg);\r\n            return this\r\n        }\r\n        return null !== this.__subvalues ? this.__subvalues.slice() : void 0\r\n    },\r\n    _changeValue: function(value) {\r\n        var that = this;\r\n        that._setupValue(value);\r\n        that._beginValueChanging();\r\n        that._updateValueIndicator();\r\n        if (that.__value !== that.option(OPTION_VALUE)) {\r\n            that.option(OPTION_VALUE, that.__value)\r\n        }\r\n        that._endValueChanging()\r\n    },\r\n    _changeSubvalues: function(subvalues) {\r\n        var that = this;\r\n        if (null !== that.__subvalues) {\r\n            that._setupSubvalues(subvalues);\r\n            that._beginValueChanging();\r\n            that._updateSubvalueIndicators();\r\n            that._endValueChanging()\r\n        } else {\r\n            that.__subvalues = parseArrayOfNumbers(subvalues);\r\n            that._setContentSize();\r\n            that._renderContent()\r\n        }\r\n        if (!(0, _base_gauge.compareArrays)(that.__subvalues, that.option(OPTION_SUBVALUES))) {\r\n            that.option(OPTION_SUBVALUES, that.__subvalues)\r\n        }\r\n    },\r\n    _optionChangesMap: {\r\n        scale: \"DOMAIN\",\r\n        rangeContainer: \"MOSTLY_TOTAL\",\r\n        valueIndicator: \"MOSTLY_TOTAL\",\r\n        subvalueIndicator: \"MOSTLY_TOTAL\",\r\n        containerBackgroundColor: \"MOSTLY_TOTAL\",\r\n        value: \"VALUE\",\r\n        subvalues: \"SUBVALUES\",\r\n        valueIndicators: \"MOSTLY_TOTAL\"\r\n    },\r\n    _customChangesOrder: [\"VALUE\", \"SUBVALUES\"],\r\n    _change_VALUE: function() {\r\n        this._changeValue(this.option(OPTION_VALUE))\r\n    },\r\n    _change_SUBVALUES: function() {\r\n        this._changeSubvalues(this.option(OPTION_SUBVALUES))\r\n    },\r\n    _applyMainLayout: null,\r\n    _getElementLayout: null,\r\n    _createIndicator: function(type, owner, className, trackerType, trackerIndex, _strict) {\r\n        var that = this;\r\n        var indicator = that._factory.createIndicator({\r\n            renderer: that._renderer,\r\n            translator: that._translator,\r\n            owner: owner,\r\n            tracker: that._tracker,\r\n            className: className\r\n        }, type, _strict);\r\n        if (indicator) {\r\n            indicator.type = type;\r\n            indicator._trackerInfo = {\r\n                type: trackerType,\r\n                index: trackerIndex\r\n            }\r\n        }\r\n        return indicator\r\n    },\r\n    _getApproximateScreenRange: null\r\n});\r\nexports.dxGauge = dxGauge;\r\n\r\nfunction valueGetter(arg) {\r\n    return arg ? arg.value : null\r\n}\r\n\r\nfunction setupValues(that, fieldName, optionItems) {\r\n    var currentValues = that[fieldName];\r\n    var newValues = _isArray(optionItems) ? (0, _utils.map)(optionItems, valueGetter) : [];\r\n    var i = 0;\r\n    var ii = newValues.length;\r\n    var list = [];\r\n    for (; i < ii; ++i) {\r\n        list.push(processValue(newValues[i], currentValues[i]))\r\n    }\r\n    that[fieldName] = list\r\n}\r\n\r\nfunction selectMode(gauge) {\r\n    if (void 0 === gauge.option(OPTION_VALUE) && void 0 === gauge.option(OPTION_SUBVALUES)) {\r\n        if (void 0 !== gauge.option(\"valueIndicators\")) {\r\n            disableDefaultMode(gauge);\r\n            selectHardMode(gauge)\r\n        }\r\n    }\r\n}\r\n\r\nfunction disableDefaultMode(that) {\r\n    that.value = that.subvalues = _common.noop;\r\n    that._setupValue = that._setupSubvalues = that._updateValueIndicator = that._updateSubvalueIndicators = null\r\n}\r\n\r\nfunction selectHardMode(that) {\r\n    that._indicatorValues = [];\r\n    setupValues(that, \"_indicatorValues\", that.option(\"valueIndicators\"));\r\n    that._valueIndicators = [];\r\n    var _applyMostlyTotalChange = that._applyMostlyTotalChange;\r\n    that._applyMostlyTotalChange = function() {\r\n        setupValues(this, \"_indicatorValues\", this.option(\"valueIndicators\"));\r\n        _applyMostlyTotalChange.call(this)\r\n    };\r\n    that._updateActiveElements = updateActiveElements_hardMode;\r\n    that._prepareValueIndicators = prepareValueIndicators_hardMode;\r\n    that._disposeValueIndicators = disposeValueIndicators_hardMode;\r\n    that._cleanValueIndicators = cleanValueIndicators_hardMode;\r\n    that.indicatorValue = indicatorValue_hardMode\r\n}\r\n\r\nfunction updateActiveElements_hardMode() {\r\n    var that = this;\r\n    _each(that._valueIndicators, function(_, valueIndicator) {\r\n        valueIndicator.value(that._indicatorValues[valueIndicator.index], that._noAnimation)\r\n    })\r\n}\r\n\r\nfunction prepareValueIndicators_hardMode() {\r\n    var that = this;\r\n    var valueIndicators = that._valueIndicators || [];\r\n    var userOptions = that.option(\"valueIndicators\");\r\n    var optionList = [];\r\n    var i = 0;\r\n    var ii;\r\n    for (ii = _isArray(userOptions) ? userOptions.length : 0; i < ii; ++i) {\r\n        optionList.push(userOptions[i])\r\n    }\r\n    for (ii = valueIndicators.length; i < ii; ++i) {\r\n        optionList.push(null)\r\n    }\r\n    var newValueIndicators = [];\r\n    _each(optionList, function(i, userSettings) {\r\n        var valueIndicator = valueIndicators[i];\r\n        if (!userSettings) {\r\n            valueIndicator && valueIndicator.dispose();\r\n            return\r\n        }\r\n        var settings = that._prepareIndicatorSettings(userSettings, \"valueIndicatorType\");\r\n        if (valueIndicator && valueIndicator.type !== settings.type) {\r\n            valueIndicator.dispose();\r\n            valueIndicator = null\r\n        }\r\n        if (!valueIndicator) {\r\n            valueIndicator = that._createIndicator(settings.type, that._renderer.root, \"dxg-value-indicator\", \"value-indicator\", i, true)\r\n        }\r\n        if (valueIndicator) {\r\n            valueIndicator.index = i;\r\n            valueIndicator.render(settings);\r\n            newValueIndicators.push(valueIndicator)\r\n        }\r\n    });\r\n    that._valueIndicators = newValueIndicators;\r\n    return that._valueIndicators\r\n}\r\n\r\nfunction disposeValueIndicators_hardMode() {\r\n    _each(this._valueIndicators, function(_, valueIndicator) {\r\n        valueIndicator.dispose()\r\n    });\r\n    this._valueIndicators = null\r\n}\r\n\r\nfunction cleanValueIndicators_hardMode() {\r\n    _each(this._valueIndicators, function(_, valueIndicator) {\r\n        valueIndicator.clean()\r\n    })\r\n}\r\n\r\nfunction indicatorValue_hardMode(index, value) {\r\n    return accessPointerValue(this, this._valueIndicators, this._indicatorValues, index, value)\r\n}\r\n\r\nfunction accessPointerValue(that, pointers, values, index, value) {\r\n    if (void 0 !== value) {\r\n        if (void 0 !== values[index]) {\r\n            values[index] = processValue(value, values[index]);\r\n            pointers[index] && pointers[index].value(values[index])\r\n        }\r\n        return that\r\n    } else {\r\n        return values[index]\r\n    }\r\n}\r\n\r\nfunction ValueIndicatorsSet(parameters) {\r\n    this._parameters = parameters;\r\n    this._indicators = []\r\n}\r\nValueIndicatorsSet.prototype = {\r\n    constructor: ValueIndicatorsSet,\r\n    dispose: function() {\r\n        var that = this;\r\n        _each(that._indicators, function(_, indicator) {\r\n            indicator.dispose()\r\n        });\r\n        that._parameters = that._options = that._indicators = that._colorPalette = that._palette = null;\r\n        return that\r\n    },\r\n    clean: function() {\r\n        var that = this;\r\n        that._sample && that._sample.clean().dispose();\r\n        _each(that._indicators, function(_, indicator) {\r\n            indicator.clean()\r\n        });\r\n        that._sample = that._options = that._palette = null;\r\n        return that\r\n    },\r\n    render: function(options, isRecreate) {\r\n        var that = this;\r\n        that._options = options;\r\n        that._sample = that._parameters.createIndicator(that.type);\r\n        that._sample.render(options);\r\n        that.enabled = that._sample.enabled;\r\n        that._palette = (0, _type.isDefined)(options.palette) ? that._parameters.createPalette(options.palette) : null;\r\n        if (that.enabled) {\r\n            that._generatePalette(that._indicators.length);\r\n            that._indicators = (0, _utils.map)(that._indicators, function(indicator, i) {\r\n                if (isRecreate) {\r\n                    indicator.dispose();\r\n                    indicator = that._parameters.createIndicator(that.type, i)\r\n                }\r\n                indicator.render(that._getIndicatorOptions(i));\r\n                return indicator\r\n            })\r\n        }\r\n        return that\r\n    },\r\n    getOffset: function() {\r\n        return this._sample.getOffset()\r\n    },\r\n    resize: function(layout) {\r\n        var that = this;\r\n        that._layout = layout;\r\n        _each(that._indicators, function(_, indicator) {\r\n            indicator.resize(layout)\r\n        });\r\n        return that\r\n    },\r\n    measure: function(layout) {\r\n        return this._sample.measure(layout)\r\n    },\r\n    _getIndicatorOptions: function(index) {\r\n        var result = this._options;\r\n        if (this._colorPalette) {\r\n            result = _extend({}, result, {\r\n                color: this._colorPalette[index]\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _generatePalette: function(count) {\r\n        var that = this;\r\n        var colors = null;\r\n        if (that._palette) {\r\n            that._palette.reset();\r\n            colors = that._palette.generateColors(count, {\r\n                repeat: true\r\n            })\r\n        }\r\n        that._colorPalette = colors\r\n    },\r\n    _adjustIndicatorsCount: function(count) {\r\n        var that = this;\r\n        var indicators = that._indicators;\r\n        var i;\r\n        var ii;\r\n        var indicator;\r\n        var indicatorsLen = indicators.length;\r\n        if (indicatorsLen > count) {\r\n            for (i = count, ii = indicatorsLen; i < ii; ++i) {\r\n                indicators[i].clean().dispose()\r\n            }\r\n            that._indicators = indicators.slice(0, count);\r\n            that._generatePalette(indicators.length)\r\n        } else {\r\n            if (indicatorsLen < count) {\r\n                that._generatePalette(count);\r\n                for (i = indicatorsLen, ii = count; i < ii; ++i) {\r\n                    indicator = that._parameters.createIndicator(that.type, i);\r\n                    indicator.render(that._getIndicatorOptions(i)).resize(that._layout);\r\n                    indicators.push(indicator)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    values: function(arg, _noAnimation) {\r\n        var that = this;\r\n        if (!that.enabled) {\r\n            return\r\n        }\r\n        if (void 0 !== arg) {\r\n            if (!_isArray(arg)) {\r\n                arg = _isFinite(arg) ? [Number(arg)] : null\r\n            }\r\n            if (arg) {\r\n                that._adjustIndicatorsCount(arg.length);\r\n                _each(that._indicators, function(i, indicator) {\r\n                    indicator.value(arg[i], _noAnimation)\r\n                })\r\n            }\r\n            return that\r\n        }\r\n        return (0, _utils.map)(that._indicators, function(indicator) {\r\n            return indicator.value()\r\n        })\r\n    }\r\n};\r\n\r\nfunction createIndicatorCreator(indicators) {\r\n    return function(parameters, type, _strict) {\r\n        var indicatorType = indicators[(0, _utils.normalizeEnum)(type)] || !_strict && indicators._default;\r\n        return indicatorType ? new indicatorType(parameters) : null\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}