{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\StaffPlus\\\\StaffSchedule\\\\BigCalander\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nexport class BigCalander extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedMonth: \"\"\n    };\n  }\n\n  componentWillMount() {\n    const date = new Date();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const year = date.getFullYear();\n    this.setState({\n      selectedMonth: `${year}-${month}`\n    });\n  }\n\n  componentDidMount() {\n    for (let staffIndex = 0; staffIndex < this.props.data.length; staffIndex++) {\n      let staff = this.props.data[staffIndex];\n\n      for (let index = 0; index <= (staff === null || staff === void 0 ? void 0 : (_staff$schedules = staff.schedules) === null || _staff$schedules === void 0 ? void 0 : _staff$schedules.length); index++) {\n        var _staff$schedules, _document$getElementB;\n\n        let anchor = (_document$getElementB = document.getElementById(staff.emp_code + index)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.parentElement;\n\n        if (anchor) {\n          anchor.onclick = () => {\n            var _this$props$disabled;\n\n            if ((_this$props$disabled = this.props.disabled) !== null && _this$props$disabled !== void 0 ? _this$props$disabled : false) return;\n            document.getElementById(staff.emp_code + index).classList.toggle(\"show\");\n          };\n        }\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    var tableData = document.getElementsByTagName(\"TD\");\n\n    for (var i = 0; i < tableData.length; i++) {\n      var td = tableData[i];\n      td.onclick = null;\n    }\n\n    for (let staffIndex = 0; staffIndex < this.props.data.length; staffIndex++) {\n      let staff = this.props.data[staffIndex];\n\n      for (let index = 0; index <= staff.schedules.length; index++) {\n        var _document$getElementB2;\n\n        let anchor = (_document$getElementB2 = document.getElementById(staff.name + index)) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.parentElement;\n\n        if (anchor) {\n          anchor.onclick = () => {\n            var _this$props$disabled2;\n\n            if ((_this$props$disabled2 = this.props.disabled) !== null && _this$props$disabled2 !== void 0 ? _this$props$disabled2 : false) return;\n            document.getElementById(staff.name + index).classList.toggle(\"show\");\n          };\n        }\n      }\n    }\n  }\n\n  render() {\n    let {\n      date = this.state.selectedMonth,\n      data = [{\n        emp_name: \"TestTherapist\",\n        emp_code: \"EMP100001\",\n        schedules: [{\n          id: 7971,\n          date: \"2021-06-01T00:00:00\",\n          itm_type: \"100010\"\n        }, {\n          id: 7971,\n          date: \"2021-06-02T00:00:00\",\n          itm_type: \"100010\"\n        }]\n      }],\n      options,\n      onChange,\n      disabled = false\n    } = this.props;\n    console.log(data);\n    let d = new Date(date);\n    let lastDayDate = new Date(d.getFullYear(), d.getMonth() + 1, 0).getDate();\n\n    const handOnOptionClick = (staffIndex, index, value) => {\n      if (disabled) return;\n      data[staffIndex].schedules[index].itm_type = value;\n      onChange(data);\n    };\n\n    const headers = [];\n\n    for (let index = 1; index <= lastDayDate; index++) {\n      headers.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"text-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }\n      }, index));\n    }\n\n    const rows = [];\n\n    for (let staffIndex = 0; staffIndex < data.length; staffIndex++) {\n      let staff = data[staffIndex];\n      rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"table-header-color text-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, staff.emp_name), staff.schedules.map((data, index) => /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          backgroundColor: options.find(val => val.value == data.itm_type) != null ? options.find(val => val.value == data.itm_type).color : \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, options.find(val => val.value == data.itm_type) != null ? options.find(val => val.value == data.itm_type).shortDesc : \"N/A\", /*#__PURE__*/React.createElement(\"div\", {\n        id: staff.emp_code + index,\n        class: \"dropdown-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        onClick: () => handOnOptionClick(staffIndex, index, \"e\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, \"empty\"), /*#__PURE__*/React.createElement(\"label\", {\n        onClick: () => handOnOptionClick(staffIndex, index, \"o\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, \"option 1\"), /*#__PURE__*/React.createElement(\"label\", {\n        onClick: () => handOnOptionClick(staffIndex, index, \"w\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, \"option 2\"))))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"table-header-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Staff\"), headers)), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, rows)));\n  }\n\n}","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/StaffPlus/StaffSchedule/BigCalander/index.js"],"names":["React","Component","BigCalander","state","selectedMonth","componentWillMount","date","Date","month","getMonth","slice","year","getFullYear","setState","componentDidMount","staffIndex","props","data","length","staff","index","schedules","anchor","document","getElementById","emp_code","parentElement","onclick","disabled","classList","toggle","componentDidUpdate","tableData","getElementsByTagName","i","td","name","render","emp_name","id","itm_type","options","onChange","console","log","d","lastDayDate","getDate","handOnOptionClick","value","headers","push","rows","map","backgroundColor","find","val","color","shortDesc"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\n\r\nexport class BigCalander extends Component {\r\n  state = {\r\n    selectedMonth: \"\",\r\n  };\r\n  componentWillMount() {\r\n    const date = new Date();\r\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    const year = date.getFullYear();\r\n\r\n    this.setState({ selectedMonth: `${year}-${month}` });\r\n  }\r\n  componentDidMount() {\r\n    for (\r\n      let staffIndex = 0;\r\n      staffIndex < this.props.data.length;\r\n      staffIndex++\r\n    ) {\r\n      let staff = this.props.data[staffIndex];\r\n      for (let index = 0; index <= staff?.schedules?.length; index++) {\r\n        let anchor = document.getElementById(\r\n          staff.emp_code + index\r\n        )?.parentElement;\r\n        if (anchor) {\r\n          anchor.onclick = () => {\r\n            if (this.props.disabled ?? false) return;\r\n            document\r\n              .getElementById(staff.emp_code + index)\r\n              .classList.toggle(\"show\");\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    var tableData = document.getElementsByTagName(\"TD\");\r\n    for (var i = 0; i < tableData.length; i++) {\r\n      var td = tableData[i];\r\n      td.onclick = null;\r\n    }\r\n\r\n    for (\r\n      let staffIndex = 0;\r\n      staffIndex < this.props.data.length;\r\n      staffIndex++\r\n    ) {\r\n      let staff = this.props.data[staffIndex];\r\n      for (let index = 0; index <= staff.schedules.length; index++) {\r\n        let anchor = document.getElementById(staff.name + index)?.parentElement;\r\n        if (anchor) {\r\n          anchor.onclick = () => {\r\n            if (this.props.disabled ?? false) return;\r\n            document\r\n              .getElementById(staff.name + index)\r\n              .classList.toggle(\"show\");\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let {\r\n      date = this.state.selectedMonth,\r\n      data = [\r\n        {\r\n          emp_name: \"TestTherapist\",\r\n          emp_code: \"EMP100001\",\r\n          schedules: [\r\n            { id: 7971, date: \"2021-06-01T00:00:00\", itm_type: \"100010\" },\r\n            { id: 7971, date: \"2021-06-02T00:00:00\", itm_type: \"100010\" },\r\n          ],\r\n        },\r\n      ],\r\n      options,\r\n      onChange,\r\n      disabled = false,\r\n    } = this.props;\r\n    console.log(data);\r\n    let d = new Date(date);\r\n    let lastDayDate = new Date(d.getFullYear(), d.getMonth() + 1, 0).getDate();\r\n\r\n    const handOnOptionClick = (staffIndex, index, value) => {\r\n      if (disabled) return;\r\n      data[staffIndex].schedules[index].itm_type = value;\r\n      onChange(data);\r\n    };\r\n\r\n    const headers = [];\r\n\r\n    for (let index = 1; index <= lastDayDate; index++) {\r\n      headers.push(<th className=\"text-dark\">{index}</th>);\r\n    }\r\n    const rows = [];\r\n    for (let staffIndex = 0; staffIndex < data.length; staffIndex++) {\r\n      let staff = data[staffIndex];\r\n      rows.push(\r\n        <tr>\r\n          <th className=\"table-header-color text-dark\">{staff.emp_name}</th>\r\n          {staff.schedules.map((data, index) => (\r\n            <td\r\n              style={{\r\n                backgroundColor:\r\n                  options.find((val) => val.value == data.itm_type) != null\r\n                    ? options.find((val) => val.value == data.itm_type).color\r\n                    : \"white\",\r\n              }}\r\n            >\r\n              {options.find((val) => val.value == data.itm_type) != null\r\n                ? options.find((val) => val.value == data.itm_type).shortDesc\r\n                : \"N/A\"}\r\n              <div id={staff.emp_code + index} class=\"dropdown-content\">\r\n                <label\r\n                  onClick={() => handOnOptionClick(staffIndex, index, \"e\")}\r\n                >\r\n                  empty\r\n                </label>\r\n                <label\r\n                  onClick={() => handOnOptionClick(staffIndex, index, \"o\")}\r\n                >\r\n                  option 1\r\n                </label>\r\n                <label\r\n                  onClick={() => handOnOptionClick(staffIndex, index, \"w\")}\r\n                >\r\n                  option 2\r\n                </label>\r\n              </div>\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      );\r\n    }\r\n    return (\r\n      <div class=\"table-responsive\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr className=\"table-header-color\">\r\n              <th className=\"text-dark\">Staff</th>\r\n              {headers}\r\n            </tr>\r\n          </thead>\r\n          <tbody>{rows}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}