{"ast":null,"code":"import _objectSpread from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{CommonActionType}from'redux/actions/actionType';import{common}from'service/apiVariables';import{history}from'../../helpers';import{Toast}from'../../service/toast';// common branch create method\nexport var createBranch=function createBranch(body){return function(dispatch,getState,_ref){var api=_ref.api,Toast=_ref.Toast;return new Promise(function(resolve,reject){api(_objectSpread(_objectSpread({},common.addBranch),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref2){var message=_ref2.message;reject(Toast({type:'error',message:message}));});});};};// common branch update method\nexport var updateBranch=function updateBranch(id,body){return function(dispatch,getState,_ref3){var api=_ref3.api,Toast=_ref3.Toast;return new Promise(function(resolve,reject){common.updateBranch.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},common.updateBranch),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref4){var message=_ref4.message;reject(Toast({type:'error',message:message}));});});};};// common get branch \nexport var getBranch=function getBranch(id){return function(dispatch,getState,_ref5){var api=_ref5.api,Toast=_ref5.Toast;return new Promise(function(resolve,reject){common.getBranch.addQuery={key:'id',payload:id};api(_objectSpread({},common.getBranch)).then(function(response){resolve(response);var message=response.message,data=response.data,status=response.status;if(status===200){dispatch({type:CommonActionType.getBranchList,payload:data});// Toast({ type: 'success', message })\n}else{// reject(Toast({ type: 'error', message }));\n}}).catch(function(_ref6){var message=_ref6.message;reject(Toast({type:'error',message:message}));});});};};// common jobtitle get method\nexport var getJobtitle=function getJobtitle(id){return function(dispatch,getState,_ref7){var api=_ref7.api,Toast=_ref7.Toast;return new Promise(function(resolve,reject){api(_objectSpread({},common.getJobtitle)).then(function(response){resolve(response);var message=response.message,data=response.data,status=response.status;if(status===200){dispatch({type:CommonActionType.getJobtitleList,payload:data});// Toast({ type: 'success', message })\n}else{// reject(Toast({ type: 'error', message }));\n}}).catch(function(_ref8){var message=_ref8.message;reject(Toast({type:'error',message:message}));});});};};// common get shift method\nexport var getShift=function getShift(id){return function(dispatch,getState,_ref9){var api=_ref9.api,Toast=_ref9.Toast;return new Promise(function(resolve,reject){common.getShift.addQuery={key:'id',payload:id};api(_objectSpread({},common.getShift)).then(function(response){resolve(response);var message=response.message,data=response.data,status=response.status;if(status===200){dispatch({type:CommonActionType.getShiftList,payload:data});// Toast({ type: 'success', message })\n}else{// reject(Toast({ type: 'error', message }));\n}}).catch(function(_ref10){var message=_ref10.message;reject(Toast({type:'error',message:message}));});});};};// common get category method\nexport var getCategory=function getCategory(id){return function(dispatch,getState,_ref11){var api=_ref11.api,Toast=_ref11.Toast;return new Promise(function(resolve,reject){api(_objectSpread({},common.getCategory)).then(function(response){resolve(response);var message=response.message,data=response.data,status=response.status;if(status===200){dispatch({type:CommonActionType.getCategoryList,payload:data});// Toast({ type: 'success', message })\n}else{// reject(Toast({ type: 'error', message }));\n}}).catch(function(_ref12){var message=_ref12.message;reject(Toast({type:'error',message:message}));});});};};// get common skills method\nexport var getSkills=function getSkills(id){return function(dispatch,getState,_ref13){var api=_ref13.api,Toast=_ref13.Toast;return new Promise(function(resolve,reject){api(_objectSpread({},common.getSkills)).then(function(response){resolve(response);var message=response.message,data=response.data,status=response.status;if(status===200){dispatch({type:CommonActionType.getSkillsList,payload:data});// Toast({ type: 'success', message })\n}else{// reject(Toast({ type: 'error', message }));\n}}).catch(function(_ref14){var message=_ref14.message;reject(Toast({type:'error',message:message}));});});};};// common get customer method\nexport var getCustomer=function getCustomer(id){return function(dispatch,getState,_ref15){var api=_ref15.api,Toast=_ref15.Toast;return new Promise(function(resolve,reject){api(_objectSpread({},common.getCustomer)).then(function(response){resolve(response);var message=response.message,data=response.data,status=response.status;if(status===200){dispatch({type:CommonActionType.getCustomerList,payload:data});// Toast({ type: 'success', message })\n}else{// reject(Toast({ type: 'error', message }));\n}}).catch(function(_ref16){var message=_ref16.message;reject(Toast({type:'error',message:message}));});});};};// universal get method\nexport var getCommonApi=function getCommonApi(id){return function(dispatch,getState,_ref17){var api=_ref17.api,Toast=_ref17.Toast;return new Promise(function(resolve,reject){common.getCommon.addQuery={key:'id',payload:id};api(_objectSpread({},common.getCommon)).then(function(response){resolve(response);var message=response.message,data=response.data,status=response.status;// if (status === 200) {\n//   Toast({ type: 'success', message })\n// } else {\n//   reject(Toast({ type: 'error', message }));\n// }\n}).catch(function(_ref18){var message=_ref18.message;reject(Toast({type:'error',message:message}));});});};};// universal post method\nexport var commonCreateApi=function commonCreateApi(id,body){return function(dispatch,getState,_ref19){var api=_ref19.api,Toast=_ref19.Toast;return new Promise(function(resolve,reject){common.addCommon.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},common.addCommon),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){Toast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref20){var message=_ref20.message;reject(Toast({type:'error',message:message}));});});};};// universal update method\nexport var commonUpdateApi=function commonUpdateApi(id,body){return function(dispatch,getState,_ref21){var api=_ref21.api,Toast=_ref21.Toast;return new Promise(function(resolve,reject){common.updateCommon.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},common.updateCommon),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){Toast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref22){var message=_ref22.message;reject(Toast({type:'error',message:message}));});});};};// universal update method\nexport var commonPatchApi=function commonPatchApi(id,body){return function(dispatch,getState,_ref23){var api=_ref23.api,Toast=_ref23.Toast;return new Promise(function(resolve,reject){common.commonPatch.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},common.commonPatch),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){Toast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref24){var message=_ref24.message;reject(Toast({type:'error',message:message}));});});};};// universal delete method\nexport var commonDeleteApi=function commonDeleteApi(id,body){return function(dispatch,getState,_ref25){var api=_ref25.api,Toast=_ref25.Toast;return new Promise(function(resolve,reject){common.deleteCommon.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},common.deleteCommon),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){Toast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref26){var message=_ref26.message;reject(Toast({type:'error',message:message}));});});};};// store data action for form field\nexport function updateForm(type,data){return{type:type,payload:data};}","map":{"version":3,"sources":["F:/webfe/src/redux/actions/common.js"],"names":["CommonActionType","common","history","Toast","createBranch","body","dispatch","getState","api","Promise","resolve","reject","addBranch","then","response","message","status","type","catch","updateBranch","id","addQuery","key","payload","getBranch","data","getBranchList","getJobtitle","getJobtitleList","getShift","getShiftList","getCategory","getCategoryList","getSkills","getSkillsList","getCustomer","getCustomerList","getCommonApi","getCommon","commonCreateApi","addCommon","commonUpdateApi","updateCommon","commonPatchApi","commonPatch","commonDeleteApi","deleteCommon","updateForm"],"mappings":"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","sourcesContent":["import { CommonActionType } from 'redux/actions/actionType';\r\nimport { common } from 'service/apiVariables';\r\nimport { history } from '../../helpers';\r\nimport { Toast } from '../../service/toast';\r\n\r\n// common branch create method\r\nexport const createBranch = body => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    api({ ...common.addBranch, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } = response\r\n        if (status === 200) {\r\n          // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// common branch update method\r\nexport const updateBranch = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    common.updateBranch.addQuery = { key: 'id', payload: id };\r\n    api({ ...common.updateBranch, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } = response\r\n        if (status === 200) {\r\n          // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// common get branch \r\nexport const getBranch = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    common.getBranch.addQuery = { key: 'id', payload: id };\r\n    api({ ...common.getBranch })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, data, status } = response\r\n        if (status === 200) {\r\n          dispatch({ type: CommonActionType.getBranchList, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          // reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// common jobtitle get method\r\nexport const getJobtitle = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    api({ ...common.getJobtitle })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, data, status } = response\r\n        if (status === 200) {\r\n          dispatch({ type: CommonActionType.getJobtitleList, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          // reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// common get shift method\r\nexport const getShift = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    common.getShift.addQuery = { key: 'id', payload: id };\r\n    api({ ...common.getShift })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, data, status } = response\r\n        if (status === 200) {\r\n          dispatch({ type: CommonActionType.getShiftList, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          // reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// common get category method\r\nexport const getCategory = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    api({ ...common.getCategory })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, data, status } = response\r\n        if (status === 200) {\r\n          dispatch({ type: CommonActionType.getCategoryList, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          // reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// get common skills method\r\nexport const getSkills = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    api({ ...common.getSkills })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, data, status } = response\r\n        if (status === 200) {\r\n          dispatch({ type: CommonActionType.getSkillsList, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          // reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// common get customer method\r\nexport const getCustomer = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    api({ ...common.getCustomer })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, data, status } = response\r\n        if (status === 200) {\r\n          dispatch({ type: CommonActionType.getCustomerList, payload: data });\r\n          // Toast({ type: 'success', message })\r\n        } else {\r\n          // reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// universal get method\r\nexport const getCommonApi = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    common.getCommon.addQuery = { key: 'id', payload: id };\r\n    api({ ...common.getCommon })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, data, status } = response\r\n        // if (status === 200) {\r\n        //   Toast({ type: 'success', message })\r\n        // } else {\r\n        //   reject(Toast({ type: 'error', message }));\r\n        // }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// universal post method\r\nexport const commonCreateApi = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    common.addCommon.addQuery = { key: 'id', payload: id };\r\n    api({ ...common.addCommon, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } = response\r\n        if (status === 200) {\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// universal update method\r\nexport const commonUpdateApi = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    common.updateCommon.addQuery = { key: 'id', payload: id };\r\n    api({ ...common.updateCommon, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } = response\r\n        if (status === 200) {\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// universal update method\r\nexport const commonPatchApi = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    common.commonPatch.addQuery = { key: 'id', payload: id };\r\n    api({ ...common.commonPatch, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } = response\r\n        if (status === 200) {\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// universal delete method\r\nexport const commonDeleteApi = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    common.deleteCommon.addQuery = { key: 'id', payload: id };\r\n    api({ ...common.deleteCommon, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } = response\r\n        if (status === 200) {\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// store data action for form field\r\nexport function updateForm(type, data) {\r\n  return {\r\n    type: type,\r\n    payload: data\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}