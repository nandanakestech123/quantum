{"ast":null,"code":"const API_ENDPOINT = \"http://103.253.15.184:8107/api/stripepaymentintentconfirm\";\nexport const stripePaymentMethodHandler = async (data, cb) => {\n  const {\n    amount,\n    result,\n    cartid,\n    id,\n    cust_id,\n    cust_stripeid\n  } = data;\n  console.log(\"checking\", result, cartid, amount, id, cust_id, cust_stripeid);\n\n  if (result.error) {\n    // show error in payment form\n    cb(result);\n  } else {\n    const paymentResponse = await stripePayment({\n      PaymentIntentId: id,\n      cardNumber: result.paymentMethod.card.last4,\n      expMonth: result.paymentMethod.card.exp_month,\n      expYear: result.paymentMethod.card.exp_year,\n      cvc: 123,\n      paymentType: [result.paymentMethod.type],\n      payment_method: \"pm_card_visa\",\n      transactionId: cartid,\n      amount: amount * 100,\n      currency: \"sgd\",\n      cust_noid: cust_id,\n      customerId: cust_stripeid\n    });\n    console.log(paymentResponse);\n    cb(paymentResponse);\n  }\n}; // place backend API call for payment\n\nconst stripePayment = async data => {\n  let token_id = localStorage.getItem(\"AuthToken\");\n  console.log(token_id);\n  const res = await fetch(`${API_ENDPOINT}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"token\" + \" \" + token_id\n    },\n    body: JSON.stringify(data)\n  });\n  return await res.json();\n};","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Cart/cart/server.js"],"names":["API_ENDPOINT","stripePaymentMethodHandler","data","cb","amount","result","cartid","id","cust_id","cust_stripeid","console","log","error","paymentResponse","stripePayment","PaymentIntentId","cardNumber","paymentMethod","card","last4","expMonth","exp_month","expYear","exp_year","cvc","paymentType","type","payment_method","transactionId","currency","cust_noid","customerId","token_id","localStorage","getItem","res","fetch","method","headers","Authorization","body","JSON","stringify","json"],"mappings":"AAAA,MAAMA,YAAY,GAChB,2DADF;AAGA,OAAO,MAAMC,0BAA0B,GAAG,OAAOC,IAAP,EAAaC,EAAb,KAAoB;AAC5D,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,EAA1B;AAA8BC,IAAAA,OAA9B;AAAuCC,IAAAA;AAAvC,MAAyDP,IAA/D;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,MAAxB,EAAgCC,MAAhC,EAAwCF,MAAxC,EAAgDG,EAAhD,EAAoDC,OAApD,EAA6DC,aAA7D;;AACA,MAAIJ,MAAM,CAACO,KAAX,EAAkB;AAChB;AACAT,IAAAA,EAAE,CAACE,MAAD,CAAF;AACD,GAHD,MAGO;AACL,UAAMQ,eAAe,GAAG,MAAMC,aAAa,CAAC;AAC1CC,MAAAA,eAAe,EAAER,EADyB;AAE1CS,MAAAA,UAAU,EAAEX,MAAM,CAACY,aAAP,CAAqBC,IAArB,CAA0BC,KAFI;AAG1CC,MAAAA,QAAQ,EAAEf,MAAM,CAACY,aAAP,CAAqBC,IAArB,CAA0BG,SAHM;AAI1CC,MAAAA,OAAO,EAAEjB,MAAM,CAACY,aAAP,CAAqBC,IAArB,CAA0BK,QAJO;AAK1CC,MAAAA,GAAG,EAAE,GALqC;AAM1CC,MAAAA,WAAW,EAAE,CAACpB,MAAM,CAACY,aAAP,CAAqBS,IAAtB,CAN6B;AAO1CC,MAAAA,cAAc,EAAE,cAP0B;AAQ1CC,MAAAA,aAAa,EAAEtB,MAR2B;AAS1CF,MAAAA,MAAM,EAAEA,MAAM,GAAG,GATyB;AAU1CyB,MAAAA,QAAQ,EAAE,KAVgC;AAW1CC,MAAAA,SAAS,EAAEtB,OAX+B;AAY1CuB,MAAAA,UAAU,EAAEtB;AAZ8B,KAAD,CAA3C;AAcAC,IAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ;AACAV,IAAAA,EAAE,CAACU,eAAD,CAAF;AACD;AACF,CAxBM,C,CA0BP;;AACA,MAAMC,aAAa,GAAG,MAAOZ,IAAP,IAAgB;AACpC,MAAI8B,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;AACAxB,EAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AACA,QAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEpC,YAAa,EAAjB,EAAoB;AACzCqC,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,UAAU,GAAV,GAAgBP;AAFxB,KAFgC;AAOzCQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAexC,IAAf;AAPmC,GAApB,CAAvB;AASA,SAAO,MAAMiC,GAAG,CAACQ,IAAJ,EAAb;AACD,CAbD","sourcesContent":["const API_ENDPOINT =\r\n  \"http://103.253.15.184:8107/api/stripepaymentintentconfirm\";\r\n\r\nexport const stripePaymentMethodHandler = async (data, cb) => {\r\n  const { amount, result, cartid, id, cust_id, cust_stripeid } = data;\r\n  console.log(\"checking\", result, cartid, amount, id, cust_id, cust_stripeid);\r\n  if (result.error) {\r\n    // show error in payment form\r\n    cb(result);\r\n  } else {\r\n    const paymentResponse = await stripePayment({\r\n      PaymentIntentId: id,\r\n      cardNumber: result.paymentMethod.card.last4,\r\n      expMonth: result.paymentMethod.card.exp_month,\r\n      expYear: result.paymentMethod.card.exp_year,\r\n      cvc: 123,\r\n      paymentType: [result.paymentMethod.type],\r\n      payment_method: \"pm_card_visa\",\r\n      transactionId: cartid,\r\n      amount: amount * 100,\r\n      currency: \"sgd\",\r\n      cust_noid: cust_id,\r\n      customerId: cust_stripeid,\r\n    });\r\n    console.log(paymentResponse);\r\n    cb(paymentResponse);\r\n  }\r\n};\r\n\r\n// place backend API call for payment\r\nconst stripePayment = async (data) => {\r\n  let token_id = localStorage.getItem(\"AuthToken\");\r\n  console.log(token_id);\r\n  const res = await fetch(`${API_ENDPOINT}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"token\" + \" \" + token_id,\r\n    },\r\n\r\n    body: JSON.stringify(data),\r\n  });\r\n  return await res.json();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}