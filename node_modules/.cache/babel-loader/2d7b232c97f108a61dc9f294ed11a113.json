{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Dashboard\\\\Statistic\\\\AdminStats\\\\NewDashboard\\\\NewQuickChart\\\\index.js\";\nimport { NormalButton } from \"component/common\";\nimport React, { Component } from \"react\";\nimport { LineChart } from \"./Chart\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, commonCreateApi } from \"redux/actions/common\";\nimport { NormalSelect } from \"component/common\";\nexport class NewQuickChartClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transtype: \"Quarterly\",\n      transtypeOptions: [{\n        label: \"Yearly\",\n        value: \"Yearly\"\n      }, {\n        label: \"Quarterly\",\n        value: \"Quarterly\"\n      }],\n      data: [] // data: [\n      //   {\n      //     title: {\n      //       text: \"New Customer\",\n      //     },\n      //     xAxis: {\n      //       categories: [\n      //         \"Jan-2021\",\n      //         \"Feb-2021\",\n      //         \"Mar-2021\",\n      //         \"Apr-2021\",\n      //         \"May-2021\",\n      //         \"Jun-2021\",\n      //         \"Jul-2021\",\n      //         \"Aug-2021\",\n      //         \"Sep-2021\",\n      //         \"Oct-2021\",\n      //         \"Nov-2021\",\n      //         \"Dec-2021\",\n      //       ],\n      //       labels: {\n      //         step: 1,\n      //       },\n      //     },\n      //     yAxis: {\n      //       min: 0,\n      //       title: {\n      //         text: \"\",\n      //       },\n      //       labels: {\n      //         step: 1,\n      //         format: \"{value}\",\n      //       },\n      //     },\n      //     series: [\n      //       {\n      //         name: \"New Customer 1 (Male)\",\n      //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //         color: \"#ffa31a\",\n      //       },\n      //       {\n      //         name: \"New Customer 2 (Male)\",\n      //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //         color: \"#ffa31a\",\n      //       },\n      //       {\n      //         name: \"New Customer (Male)\",\n      //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //         color: \"#ffa31a\",\n      //       },\n      //       {\n      //         name: \"New Customer (Female)\",\n      //         data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //         color: \"#a1cae2\",\n      //       },\n      //       {\n      //         name: \"Dummy Customer (others)\",\n      //         data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //         color: \"#a1cae2\",\n      //       },\n      //     ],\n      //     legend: {\n      //       position: \"bottom\",\n      //       align: \"center\",\n      //     },\n      //     outlinetext: \"Total Number of Customer\",\n      //     outlinevalue: 4,\n      //   },\n      //   {\n      //     title: {\n      //       text: \"Product Sold QTY\",\n      //     },\n      //     xAxis: {\n      //       categories: [\n      //         \"Jan-2021\",\n      //         \"Feb-2021\",\n      //         \"Mar-2021\",\n      //         \"Apr-2021\",\n      //         \"May-2021\",\n      //         \"Jun-2021\",\n      //         \"Jul-2021\",\n      //         \"Aug-2021\",\n      //         \"Sep-2021\",\n      //         \"Oct-2021\",\n      //         \"Nov-2021\",\n      //         \"Dec-2021\",\n      //       ],\n      //       labels: {\n      //         step: 1,\n      //       },\n      //     },\n      //     yAxis: {\n      //       min: 0,\n      //       title: {\n      //         text: \"\",\n      //       },\n      //       labels: {\n      //         step: 1,\n      //         format: \"{value}\",\n      //       },\n      //     },\n      //     series: [\n      //       {\n      //         code: \"100016\",\n      //         name: \"TONG JUM CHEW 锺炎州\",\n      //         color: \"#B7F19C\",\n      //         data: [0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //       },\n      //     ],\n      //     legend: {\n      //       align: \"right\",\n      //       verticalAlign: \"top\",\n      //       layout: \"vertical\",\n      //       x: 0,\n      //       y: 100,\n      //     },\n      //     outlinetext: \"Total Number of Customer\",\n      //     outlinevalue: 4,\n      //   },\n      //   {\n      //     title: {\n      //       text: \"Service Sales Amount\",\n      //     },\n      //     xAxis: {\n      //       categories: [\n      //         \"Jan-2021\",\n      //         \"Feb-2021\",\n      //         \"Mar-2021\",\n      //         \"Apr-2021\",\n      //         \"May-2021\",\n      //         \"Jun-2021\",\n      //         \"Jul-2021\",\n      //         \"Aug-2021\",\n      //         \"Sep-2021\",\n      //         \"Oct-2021\",\n      //         \"Nov-2021\",\n      //         \"Dec-2021\",\n      //       ],\n      //       labels: {\n      //         step: 1,\n      //       },\n      //     },\n      //     yAxis: {\n      //       min: 0,\n      //       title: {\n      //         text: \"\",\n      //       },\n      //       labels: {\n      //         step: 1,\n      //         format: \"{value}\",\n      //       },\n      //     },\n      //     series: [\n      //       {\n      //         code: \"42\",\n      //         name: \"BODY\",\n      //         color: \"#B46966\",\n      //         data: [1000, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //       },\n      //     ],\n      //     legend: {\n      //       align: \"right\",\n      //       verticalAlign: \"top\",\n      //       layout: \"vertical\",\n      //       x: 0,\n      //       y: 100,\n      //     },\n      //   },\n      //   {\n      //     title: {\n      //       text: \"Treatment Done Count\",\n      //     },\n      //     xAxis: {\n      //       categories: [\n      //         \"Jan-2021\",\n      //         \"Feb-2021\",\n      //         \"Mar-2021\",\n      //         \"Apr-2021\",\n      //         \"May-2021\",\n      //         \"Jun-2021\",\n      //         \"Jul-2021\",\n      //         \"Aug-2021\",\n      //         \"Sep-2021\",\n      //         \"Oct-2021\",\n      //         \"Nov-2021\",\n      //         \"Dec-2021\",\n      //       ],\n      //       labels: {\n      //         step: 1,\n      //       },\n      //     },\n      //     yAxis: {\n      //       min: 0,\n      //       title: {\n      //         text: \"\",\n      //       },\n      //       labels: {\n      //         step: 1,\n      //         format: \"{value}\",\n      //       },\n      //     },\n      //     series: [\n      //       {\n      //         code: \"42\",\n      //         name: \"Male\",\n      //         color: \"#B46966\",\n      //         data: [200, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //       },\n      //     ],\n      //     legend: {\n      //       position: \"top\",\n      //       align: \"center\",\n      //     },\n      //   },\n      // ],\n\n    };\n\n    this.getDataByOrder = () => {\n      let {\n        transtype,\n        data\n      } = this.state;\n      this.props.getCommonApi(`dashboardchart/?select=${transtype}`).then(res => {\n        data = res.data;\n        this.setState({\n          data\n        });\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        transtype\n      } = this.state;\n\n      if (transtype != value) {\n        transtype = value;\n        await this.setState({\n          transtype\n        });\n        this.getDataByOrder();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getDataByOrder();\n  }\n\n  render() {\n    const {\n      chartOptions,\n      data,\n      transtype,\n      transtypeOptions\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Line-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end flex-row mt-5 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholderrequired: \"false\",\n      options: transtypeOptions,\n      value: transtype,\n      iconname: \"icon-down-key\",\n      name: \"transtype\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }\n    }, data && data.length > 0 ? data.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 col-md-6 mb-3 p-2\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        height: \"150\",\n        width: \"150\",\n        chartOptions: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center fw-500 p-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }\n      }, item.outlinetext, \" : \", item.outlinevalue)));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, \"No Data are available\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonCreateApi\n  }, dispatch);\n};\n\nexport const NewQuickChart = connect(null, mapDispatchToProps)(NewQuickChartClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Dashboard/Statistic/AdminStats/NewDashboard/NewQuickChart/index.js"],"names":["NormalButton","React","Component","LineChart","connect","bindActionCreators","getCommonApi","commonCreateApi","NormalSelect","NewQuickChartClass","state","transtype","transtypeOptions","label","value","data","getDataByOrder","props","then","res","setState","handleChange","target","name","componentDidMount","render","chartOptions","length","map","item","index","outlinetext","outlinevalue","mapDispatchToProps","dispatch","NewQuickChart"],"mappings":";AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,sBAA9C;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,OAAO,MAAMC,kBAAN,SAAiCP,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAChDQ,KADgD,GACxC;AACNC,MAAAA,SAAS,EAAE,WADL;AAENC,MAAAA,gBAAgB,EAAE,CAChB;AAAEC,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OADgB,EAEhB;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAFgB,CAFZ;AAMNC,MAAAA,IAAI,EAAE,EANA,CAON;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sourcesContent":["import { NormalButton } from \"component/common\";\r\nimport React, { Component } from \"react\";\r\nimport { LineChart } from \"./Chart\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, commonCreateApi } from \"redux/actions/common\";\r\nimport { NormalSelect } from \"component/common\";\r\n\r\nexport class NewQuickChartClass extends Component {\r\n  state = {\r\n    transtype: \"Quarterly\",\r\n    transtypeOptions: [\r\n      { label: \"Yearly\", value: \"Yearly\" },\r\n      { label: \"Quarterly\", value: \"Quarterly\" },\r\n    ],\r\n    data: [],\r\n    // data: [\r\n    //   {\r\n    //     title: {\r\n    //       text: \"New Customer\",\r\n    //     },\r\n    //     xAxis: {\r\n    //       categories: [\r\n    //         \"Jan-2021\",\r\n    //         \"Feb-2021\",\r\n    //         \"Mar-2021\",\r\n    //         \"Apr-2021\",\r\n    //         \"May-2021\",\r\n    //         \"Jun-2021\",\r\n    //         \"Jul-2021\",\r\n    //         \"Aug-2021\",\r\n    //         \"Sep-2021\",\r\n    //         \"Oct-2021\",\r\n    //         \"Nov-2021\",\r\n    //         \"Dec-2021\",\r\n    //       ],\r\n    //       labels: {\r\n    //         step: 1,\r\n    //       },\r\n    //     },\r\n    //     yAxis: {\r\n    //       min: 0,\r\n    //       title: {\r\n    //         text: \"\",\r\n    //       },\r\n    //       labels: {\r\n    //         step: 1,\r\n    //         format: \"{value}\",\r\n    //       },\r\n    //     },\r\n    //     series: [\r\n    //       {\r\n    //         name: \"New Customer 1 (Male)\",\r\n    //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#ffa31a\",\r\n    //       },\r\n    //       {\r\n    //         name: \"New Customer 2 (Male)\",\r\n    //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#ffa31a\",\r\n    //       },\r\n    //       {\r\n    //         name: \"New Customer (Male)\",\r\n    //         data: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#ffa31a\",\r\n    //       },\r\n    //       {\r\n    //         name: \"New Customer (Female)\",\r\n    //         data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#a1cae2\",\r\n    //       },\r\n    //       {\r\n    //         name: \"Dummy Customer (others)\",\r\n    //         data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //         color: \"#a1cae2\",\r\n    //       },\r\n    //     ],\r\n    //     legend: {\r\n    //       position: \"bottom\",\r\n    //       align: \"center\",\r\n    //     },\r\n    //     outlinetext: \"Total Number of Customer\",\r\n    //     outlinevalue: 4,\r\n    //   },\r\n    //   {\r\n    //     title: {\r\n    //       text: \"Product Sold QTY\",\r\n    //     },\r\n    //     xAxis: {\r\n    //       categories: [\r\n    //         \"Jan-2021\",\r\n    //         \"Feb-2021\",\r\n    //         \"Mar-2021\",\r\n    //         \"Apr-2021\",\r\n    //         \"May-2021\",\r\n    //         \"Jun-2021\",\r\n    //         \"Jul-2021\",\r\n    //         \"Aug-2021\",\r\n    //         \"Sep-2021\",\r\n    //         \"Oct-2021\",\r\n    //         \"Nov-2021\",\r\n    //         \"Dec-2021\",\r\n    //       ],\r\n    //       labels: {\r\n    //         step: 1,\r\n    //       },\r\n    //     },\r\n    //     yAxis: {\r\n    //       min: 0,\r\n    //       title: {\r\n    //         text: \"\",\r\n    //       },\r\n    //       labels: {\r\n    //         step: 1,\r\n    //         format: \"{value}\",\r\n    //       },\r\n    //     },\r\n    //     series: [\r\n    //       {\r\n    //         code: \"100016\",\r\n    //         name: \"TONG JUM CHEW 锺炎州\",\r\n    //         color: \"#B7F19C\",\r\n    //         data: [0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //       },\r\n    //     ],\r\n    //     legend: {\r\n    //       align: \"right\",\r\n    //       verticalAlign: \"top\",\r\n    //       layout: \"vertical\",\r\n    //       x: 0,\r\n    //       y: 100,\r\n    //     },\r\n    //     outlinetext: \"Total Number of Customer\",\r\n    //     outlinevalue: 4,\r\n    //   },\r\n    //   {\r\n    //     title: {\r\n    //       text: \"Service Sales Amount\",\r\n    //     },\r\n    //     xAxis: {\r\n    //       categories: [\r\n    //         \"Jan-2021\",\r\n    //         \"Feb-2021\",\r\n    //         \"Mar-2021\",\r\n    //         \"Apr-2021\",\r\n    //         \"May-2021\",\r\n    //         \"Jun-2021\",\r\n    //         \"Jul-2021\",\r\n    //         \"Aug-2021\",\r\n    //         \"Sep-2021\",\r\n    //         \"Oct-2021\",\r\n    //         \"Nov-2021\",\r\n    //         \"Dec-2021\",\r\n    //       ],\r\n    //       labels: {\r\n    //         step: 1,\r\n    //       },\r\n    //     },\r\n    //     yAxis: {\r\n    //       min: 0,\r\n    //       title: {\r\n    //         text: \"\",\r\n    //       },\r\n    //       labels: {\r\n    //         step: 1,\r\n    //         format: \"{value}\",\r\n    //       },\r\n    //     },\r\n    //     series: [\r\n    //       {\r\n    //         code: \"42\",\r\n    //         name: \"BODY\",\r\n    //         color: \"#B46966\",\r\n    //         data: [1000, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //       },\r\n    //     ],\r\n    //     legend: {\r\n    //       align: \"right\",\r\n    //       verticalAlign: \"top\",\r\n    //       layout: \"vertical\",\r\n    //       x: 0,\r\n    //       y: 100,\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     title: {\r\n    //       text: \"Treatment Done Count\",\r\n    //     },\r\n    //     xAxis: {\r\n    //       categories: [\r\n    //         \"Jan-2021\",\r\n    //         \"Feb-2021\",\r\n    //         \"Mar-2021\",\r\n    //         \"Apr-2021\",\r\n    //         \"May-2021\",\r\n    //         \"Jun-2021\",\r\n    //         \"Jul-2021\",\r\n    //         \"Aug-2021\",\r\n    //         \"Sep-2021\",\r\n    //         \"Oct-2021\",\r\n    //         \"Nov-2021\",\r\n    //         \"Dec-2021\",\r\n    //       ],\r\n    //       labels: {\r\n    //         step: 1,\r\n    //       },\r\n    //     },\r\n    //     yAxis: {\r\n    //       min: 0,\r\n    //       title: {\r\n    //         text: \"\",\r\n    //       },\r\n    //       labels: {\r\n    //         step: 1,\r\n    //         format: \"{value}\",\r\n    //       },\r\n    //     },\r\n    //     series: [\r\n    //       {\r\n    //         code: \"42\",\r\n    //         name: \"Male\",\r\n    //         color: \"#B46966\",\r\n    //         data: [200, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    //       },\r\n    //     ],\r\n    //     legend: {\r\n    //       position: \"top\",\r\n    //       align: \"center\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataByOrder();\r\n  }\r\n\r\n  getDataByOrder = () => {\r\n    let { transtype, data } = this.state;\r\n    this.props.getCommonApi(`dashboardchart/?select=${transtype}`).then(res => {\r\n      data = res.data;\r\n      this.setState({\r\n        data,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { transtype } = this.state;\r\n    if (transtype != value) {\r\n      transtype = value;\r\n      await this.setState({\r\n        transtype,\r\n      });\r\n      this.getDataByOrder();\r\n    }\r\n  };\r\n  render() {\r\n    const { chartOptions, data, transtype, transtypeOptions } = this.state;\r\n    return (\r\n      <div className=\"Line-chart\">\r\n        <div className=\"d-flex justify-content-end flex-row mt-5 mb-3\">\r\n          <div className=\"col-md-2 col-12\">\r\n            <NormalSelect\r\n              placeholderrequired=\"false\"\r\n              options={transtypeOptions}\r\n              value={transtype}\r\n              iconname=\"icon-down-key\"\r\n              name=\"transtype\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between flex-wrap\">\r\n          {data && data.length > 0 ? (\r\n            data.map((item, index) => {\r\n              return (\r\n                <div className=\"col-12 col-md-6 mb-3 p-2\" key={index}>\r\n                  <LineChart height=\"150\" width=\"150\" chartOptions={item} />\r\n\r\n                  <div className=\"text-center fw-500 p-1\">\r\n                    <p className=\"text-center\">\r\n                      {item.outlinetext} : {item.outlinevalue}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"text-center w-100\">No Data are available</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonCreateApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const NewQuickChart = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(NewQuickChartClass);\r\n"]},"metadata":{},"sourceType":"module"}