{"ast":null,"code":"import _objectSpread from\"F:\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{PaymentActionType}from'redux/actions/actionType';import{payment}from'../../service/apiVariables';// create payment action\nexport var createPayment=function createPayment(id,body){return function(dispatch,getState,_ref){var api=_ref.api,Toast=_ref.Toast;return new Promise(function(resolve,reject){payment.addPayment.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},payment.addPayment),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref2){var message=_ref2.message;reject(Toast({type:'error',message:message}));});});};};// update payment action\nexport var updatePayment=function updatePayment(id,body){return function(dispatch,getState,_ref3){var api=_ref3.api,Toast=_ref3.Toast;return new Promise(function(resolve,reject){payment.updatePayment.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},payment.updatePayment),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref4){var message=_ref4.message;reject(Toast({type:'error',message:message}));});});};};// delete payment action\nexport var deletePayment=function deletePayment(id,body){return function(dispatch,getState,_ref5){var api=_ref5.api,Toast=_ref5.Toast;return new Promise(function(resolve,reject){payment.deletePayment.addQuery={key:'id',payload:id};api(_objectSpread(_objectSpread({},payment.deletePayment),{},{body:body})).then(function(response){resolve(response);var message=response.message,status=response.status;console.log(\"sadfadfgadfgdf\",response);if(status===200){// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\nToast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(error){console.log(\"sadfadfgadfgdf errorr\",error);reject(error);var message=error.message;Toast({type:'error',message:message});});});};};// get payment action\nexport var getPayment=function getPayment(id){return function(dispatch,getState,_ref6){var api=_ref6.api,Toast=_ref6.Toast;return new Promise(function(resolve,reject){payment.getPayment.addQuery={key:'id',payload:id};api(_objectSpread({},payment.getPayment)).then(function(response){resolve(response);var message=response.message,status=response.status,data=response.data;if(status===200){dispatch({type:PaymentActionType.getPaymentDetail,payload:data});Toast({type:'success',message:message});}else{reject(Toast({type:'error',message:message}));}}).catch(function(_ref7){var message=_ref7.message;reject(Toast({type:'error',message:message}));});});};};","map":{"version":3,"sources":["F:/webfe/src/redux/actions/payment.js"],"names":["PaymentActionType","payment","createPayment","id","body","dispatch","getState","api","Toast","Promise","resolve","reject","addPayment","addQuery","key","payload","then","response","message","status","type","catch","updatePayment","deletePayment","console","log","error","getPayment","data","getPaymentDetail"],"mappings":"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","sourcesContent":["import { PaymentActionType } from 'redux/actions/actionType';\r\nimport { payment } from '../../service/apiVariables'\r\n\r\n// create payment action\r\nexport const createPayment = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    payment.addPayment.addQuery = { key: 'id', payload: id };\r\n    api({ ...payment.addPayment, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } =  response\r\n        if(status===200){\r\n          // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// update payment action\r\nexport const updatePayment = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    payment.updatePayment.addQuery = { key: 'id', payload: id };\r\n    api({ ...payment.updatePayment, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } =  response\r\n        if(status===200){\r\n          // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n// delete payment action\r\nexport const deletePayment = (id, body) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    payment.deletePayment.addQuery = { key: 'id', payload: id };\r\n    api({ ...payment.deletePayment, body })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status } =  response\r\n        console.log(\"sadfadfgadfgdf\", response)\r\n        if(status===200){\r\n          // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"sadfadfgadfgdf errorr\", error)\r\n        reject(error);\r\n        let { message } = error;\r\n        Toast({ type: 'error', message })\r\n      });\r\n  });\r\n};\r\n\r\n// get payment action\r\nexport const getPayment = (id) => (dispatch, getState, { api, Toast }) => {\r\n  return new Promise((resolve, reject) => {\r\n    payment.getPayment.addQuery = { key: 'id', payload: id };\r\n    api({ ...payment.getPayment })\r\n      .then((response) => {\r\n        resolve(response)\r\n        let { message, status, data } =  response\r\n        if(status===200){\r\n          dispatch({ type: PaymentActionType.getPaymentDetail, payload: data });\r\n          Toast({ type: 'success', message })\r\n        } else {\r\n          reject(Toast({ type: 'error', message }));\r\n        }\r\n      })\r\n      .catch(({ message }) => {\r\n        reject(Toast({ type: 'error', message }));\r\n      });\r\n  });\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}