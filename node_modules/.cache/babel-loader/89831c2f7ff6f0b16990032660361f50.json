{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _element = require(\"../../core/element\");\n\nvar _string = require(\"../../core/utils/string\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _click = require(\"../../events/click\");\n\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.utils\"));\n\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\n\nvar _uiPivot_grid2 = require(\"./ui.pivot_grid.data_controller\");\n\nvar _uiPivot_grid3 = require(\"./ui.pivot_grid.data_area\");\n\nvar _uiPivot_grid4 = require(\"./ui.pivot_grid.headers_area\");\n\nvar _size = require(\"../../core/utils/size\");\n\nvar _uiPivot_grid5 = require(\"./ui.pivot_grid.fields_area\");\n\nvar _uiPivot_grid6 = _interopRequireDefault(require(\"./ui.pivot_grid.field_chooser\"));\n\nvar _uiPivot_grid7 = _interopRequireDefault(require(\"./ui.pivot_grid.field_chooser_base\"));\n\nvar _uiPivot_grid8 = require(\"./ui.pivot_grid.export\");\n\nvar _uiPivot_grid9 = _interopRequireDefault(require(\"./ui.pivot_grid.chart_integration\"));\n\nvar _popup = _interopRequireDefault(require(\"../popup\"));\n\nvar _context_menu = _interopRequireDefault(require(\"../context_menu\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar window = (0, _window.getWindow)();\nvar DATA_AREA_CELL_CLASS = \"dx-area-data-cell\";\nvar ROW_AREA_CELL_CLASS = \"dx-area-row-cell\";\nvar COLUMN_AREA_CELL_CLASS = \"dx-area-column-cell\";\nvar DESCRIPTION_AREA_CELL_CLASS = \"dx-area-description-cell\";\nvar BORDERS_CLASS = \"dx-pivotgrid-border\";\nvar PIVOTGRID_CLASS = \"dx-pivotgrid\";\nvar ROW_LINES_CLASS = \"dx-row-lines\";\nvar BOTTOM_ROW_CLASS = \"dx-bottom-row\";\nvar BOTTOM_BORDER_CLASS = \"dx-bottom-border\";\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\nvar FIELDS_CLASS = \"dx-area-fields\";\nvar FIELD_CHOOSER_POPUP_CLASS = \"dx-fieldchooser-popup\";\nvar INCOMPRESSIBLE_FIELDS_CLASS = \"dx-incompressible-fields\";\nvar OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\nvar TR = \"<tr>\";\nvar TD = \"<td>\";\nvar DIV = \"<div>\";\nvar TEST_HEIGHT = 66666;\nvar FIELD_CALCULATED_OPTIONS = [\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"];\n\nfunction getArraySum(array) {\n  var sum = 0;\n  (0, _iterator.each)(array, function (_, value) {\n    sum += value || 0;\n  });\n  return sum;\n}\n\nfunction adjustSizeArray(sizeArray, space) {\n  var delta = space / sizeArray.length;\n\n  for (var i = 0; i < sizeArray.length; i++) {\n    sizeArray[i] -= delta;\n  }\n}\n\nfunction unsubscribeScrollEvents(area) {\n  area.off(\"scroll\").off(\"stop\");\n}\n\nfunction subscribeToScrollEvent(area, handler) {\n  unsubscribeScrollEvents(area);\n  area.on(\"scroll\", handler).on(\"stop\", handler);\n}\n\nvar scrollBarInfoCache = {};\n\nfunction getScrollBarInfo(useNativeScrolling) {\n  if (scrollBarInfoCache[useNativeScrolling]) {\n    return scrollBarInfoCache[useNativeScrolling];\n  }\n\n  var scrollBarWidth = 0;\n  var options = {};\n  var container = (0, _renderer.default)(DIV).css({\n    position: \"absolute\",\n    visibility: \"hidden\",\n    top: -1e3,\n    left: -1e3,\n    width: 100,\n    height: 100\n  }).appendTo(\"body\");\n  var content = (0, _renderer.default)(\"<p>\").css({\n    width: \"100%\",\n    height: 200\n  }).appendTo(container);\n\n  if (\"auto\" !== useNativeScrolling) {\n    options.useNative = !!useNativeScrolling;\n    options.useSimulatedScrollbar = !useNativeScrolling;\n  }\n\n  container.dxScrollable(options);\n  var scrollBarUseNative = container.dxScrollable(\"instance\").option(\"useNative\");\n  scrollBarWidth = scrollBarUseNative ? container.width() - content.width() : 0;\n  container.remove();\n  scrollBarInfoCache[useNativeScrolling] = {\n    scrollBarWidth: scrollBarWidth,\n    scrollBarUseNative: scrollBarUseNative\n  };\n  return scrollBarInfoCache[useNativeScrolling];\n}\n\nfunction getCommonBorderWidth(elements, direction) {\n  var borderStyleNames = \"width\" === direction ? [\"borderLeftWidth\", \"borderRightWidth\"] : [\"borderTopWidth\", \"borderBottomWidth\"];\n  var width = 0;\n  (0, _iterator.each)(elements, function (_, elem) {\n    var computedStyle = window.getComputedStyle(elem.get(0));\n    borderStyleNames.forEach(function (borderStyleName) {\n      width += parseFloat(computedStyle[borderStyleName]) || 0;\n    });\n  });\n  return width;\n}\n\nfunction clickedOnFieldsArea($targetElement) {\n  return $targetElement.closest(\".\" + FIELDS_CLASS).length || $targetElement.find(\".\" + FIELDS_CLASS).length;\n}\n\nvar PivotGrid = _ui.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      scrolling: {\n        timeout: 300,\n        renderingThreshold: 150,\n        minTimeout: 10,\n        mode: \"standard\",\n        useNative: \"auto\",\n        removeInvisiblePages: true,\n        virtualRowHeight: 50,\n        virtualColumnWidth: 100,\n        loadTwoPagesOnStart: true\n      },\n      encodeHtml: true,\n      dataSource: null,\n      activeStateEnabled: false,\n      fieldChooser: {\n        minWidth: 250,\n        minHeight: 250,\n        enabled: true,\n        allowSearch: false,\n        searchTimeout: 500,\n        layout: 0,\n        title: _message.default.format(\"dxPivotGrid-fieldChooserTitle\"),\n        width: 600,\n        height: 600,\n        applyChangesMode: \"instantly\"\n      },\n      onContextMenuPreparing: null,\n      allowSorting: false,\n      allowSortingBySummary: false,\n      allowFiltering: false,\n      allowExpandAll: false,\n      wordWrapEnabled: true,\n      fieldPanel: {\n        showColumnFields: true,\n        showFilterFields: true,\n        showDataFields: true,\n        showRowFields: true,\n        allowFieldDragging: true,\n        visible: false,\n        texts: {\n          columnFieldArea: _message.default.format(\"dxPivotGrid-columnFieldArea\"),\n          rowFieldArea: _message.default.format(\"dxPivotGrid-rowFieldArea\"),\n          filterFieldArea: _message.default.format(\"dxPivotGrid-filterFieldArea\"),\n          dataFieldArea: _message.default.format(\"dxPivotGrid-dataFieldArea\")\n        }\n      },\n      dataFieldArea: \"column\",\n      \"export\": {\n        enabled: false,\n        fileName: \"PivotGrid\",\n        proxyUrl: void 0,\n        ignoreExcelErrors: true\n      },\n      showRowTotals: true,\n      showRowGrandTotals: true,\n      showColumnTotals: true,\n      showColumnGrandTotals: true,\n      hideEmptySummaryCells: true,\n      showTotalsPrior: \"none\",\n      rowHeaderLayout: \"standard\",\n      loadPanel: {\n        enabled: true,\n        text: _message.default.format(\"Loading\"),\n        width: 200,\n        height: 70,\n        showIndicator: true,\n        indicatorSrc: \"\",\n        showPane: true\n      },\n      texts: {\n        grandTotal: _message.default.format(\"dxPivotGrid-grandTotal\"),\n        total: _message.default.getFormatter(\"dxPivotGrid-total\"),\n        noData: _message.default.format(\"dxDataGrid-noDataText\"),\n        showFieldChooser: _message.default.format(\"dxPivotGrid-showFieldChooser\"),\n        expandAll: _message.default.format(\"dxPivotGrid-expandAll\"),\n        collapseAll: _message.default.format(\"dxPivotGrid-collapseAll\"),\n        sortColumnBySummary: _message.default.getFormatter(\"dxPivotGrid-sortColumnBySummary\"),\n        sortRowBySummary: _message.default.getFormatter(\"dxPivotGrid-sortRowBySummary\"),\n        removeAllSorting: _message.default.format(\"dxPivotGrid-removeAllSorting\"),\n        exportToExcel: _message.default.format(\"dxDataGrid-exportToExcel\"),\n        dataNotAvailable: _message.default.format(\"dxPivotGrid-dataNotAvailable\")\n      },\n      onCellClick: null,\n      onCellPrepared: null,\n      showBorders: false,\n      stateStoring: {\n        enabled: false,\n        storageKey: null,\n        type: \"localStorage\",\n        customLoad: null,\n        customSave: null,\n        savingTimeout: 2e3\n      },\n      onExpandValueChanging: null,\n      renderCellCountLimit: 2e4,\n      onExporting: null,\n      onExported: null,\n      onFileSaving: null,\n      headerFilter: {\n        width: 252,\n        height: 325,\n        allowSearch: false,\n        showRelevantValues: false,\n        searchTimeout: 500,\n        texts: {\n          emptyValue: _message.default.format(\"dxDataGrid-headerFilterEmptyValue\"),\n          ok: _message.default.format(\"dxDataGrid-headerFilterOK\"),\n          cancel: _message.default.format(\"dxDataGrid-headerFilterCancel\")\n        }\n      }\n    });\n  },\n  _updateCalculatedOptions: function (fields) {\n    var that = this;\n    (0, _iterator.each)(fields, function (index, field) {\n      (0, _iterator.each)(FIELD_CALCULATED_OPTIONS, function (_, optionName) {\n        var isCalculated = field._initProperties && optionName in field._initProperties && void 0 === field._initProperties[optionName];\n        var needUpdate = void 0 === field[optionName] || isCalculated;\n\n        if (needUpdate) {\n          (0, _uiPivot_grid.setFieldProperty)(field, optionName, that.option(optionName));\n        }\n      });\n    });\n  },\n  _getDataControllerOptions: function () {\n    var that = this;\n    return {\n      component: that,\n      dataSource: that.option(\"dataSource\"),\n      texts: that.option(\"texts\"),\n      showRowTotals: that.option(\"showRowTotals\"),\n      showRowGrandTotals: that.option(\"showRowGrandTotals\"),\n      showColumnTotals: that.option(\"showColumnTotals\"),\n      showTotalsPrior: that.option(\"showTotalsPrior\"),\n      showColumnGrandTotals: that.option(\"showColumnGrandTotals\"),\n      dataFieldArea: that.option(\"dataFieldArea\"),\n      rowHeaderLayout: that.option(\"rowHeaderLayout\"),\n      hideEmptySummaryCells: that.option(\"hideEmptySummaryCells\"),\n      onFieldsPrepared: function (fields) {\n        that._updateCalculatedOptions(fields);\n      }\n    };\n  },\n  _initDataController: function () {\n    var that = this;\n    that._dataController && that._dataController.dispose();\n    that._dataController = new _uiPivot_grid2.DataController(that._getDataControllerOptions());\n\n    if ((0, _window.hasWindow)()) {\n      that._dataController.changed.add(function () {\n        that._render();\n      });\n    }\n\n    that._dataController.scrollChanged.add(function (options) {\n      that._scrollLeft = options.left;\n      that._scrollTop = options.top;\n    });\n\n    that._dataController.loadingChanged.add(function (isLoading) {\n      that._updateLoading();\n    });\n\n    that._dataController.progressChanged.add(that._updateLoading.bind(that));\n\n    that._dataController.dataSourceChanged.add(function () {\n      that._trigger(\"onChanged\");\n    });\n\n    var expandValueChanging = that.option(\"onExpandValueChanging\");\n\n    if (expandValueChanging) {\n      that._dataController.expandValueChanging.add(function (e) {\n        expandValueChanging(e);\n      });\n    }\n  },\n  _init: function () {\n    var that = this;\n    that.callBase();\n\n    that._initDataController();\n\n    that._scrollLeft = that._scrollTop = null;\n\n    that._initActions();\n  },\n  _initActions: function () {\n    var that = this;\n    that._actions = {\n      onChanged: that._createActionByOption(\"onChanged\"),\n      onContextMenuPreparing: that._createActionByOption(\"onContextMenuPreparing\"),\n      onCellClick: that._createActionByOption(\"onCellClick\"),\n      onExporting: that._createActionByOption(\"onExporting\"),\n      onExported: that._createActionByOption(\"onExported\"),\n      onFileSaving: that._createActionByOption(\"onFileSaving\"),\n      onCellPrepared: that._createActionByOption(\"onCellPrepared\")\n    };\n  },\n  _trigger: function (eventName, eventArg) {\n    this._actions[eventName](eventArg);\n  },\n  _optionChanged: function (args) {\n    var that = this;\n\n    if (FIELD_CALCULATED_OPTIONS.indexOf(args.name) >= 0) {\n      var fields = this.getDataSource().fields();\n\n      this._updateCalculatedOptions(fields);\n    }\n\n    switch (args.name) {\n      case \"dataSource\":\n      case \"allowSorting\":\n      case \"allowFiltering\":\n      case \"allowExpandAll\":\n      case \"allowSortingBySummary\":\n      case \"scrolling\":\n      case \"stateStoring\":\n        that._initDataController();\n\n        that._fieldChooserPopup.hide();\n\n        that._renderFieldChooser();\n\n        that._invalidate();\n\n        break;\n\n      case \"texts\":\n      case \"showTotalsPrior\":\n      case \"showRowTotals\":\n      case \"showRowGrandTotals\":\n      case \"showColumnTotals\":\n      case \"showColumnGrandTotals\":\n      case \"hideEmptySummaryCells\":\n      case \"dataFieldArea\":\n        that._dataController.updateViewOptions(that._getDataControllerOptions());\n\n        break;\n\n      case \"useNativeScrolling\":\n      case \"encodeHtml\":\n      case \"renderCellCountLimit\":\n        break;\n\n      case \"rtlEnabled\":\n        that.callBase(args);\n\n        that._renderFieldChooser();\n\n        that._renderContextMenu();\n\n        (0, _window.hasWindow)() && that._renderLoadPanel(that._dataArea.groupElement(), that.$element());\n\n        that._invalidate();\n\n        break;\n\n      case \"export\":\n        that._renderDescriptionArea();\n\n        break;\n\n      case \"onExpandValueChanging\":\n        break;\n\n      case \"onCellClick\":\n      case \"onContextMenuPreparing\":\n      case \"onExporting\":\n      case \"onExported\":\n      case \"onFileSaving\":\n      case \"onCellPrepared\":\n        that._actions[args.name] = that._createActionByOption(args.name);\n        break;\n\n      case \"fieldChooser\":\n        that._renderFieldChooser();\n\n        that._renderDescriptionArea();\n\n        break;\n\n      case \"loadPanel\":\n        if ((0, _window.hasWindow)()) {\n          that._renderLoadPanel(that._dataArea.groupElement(), that.$element());\n\n          that._invalidate();\n        }\n\n        break;\n\n      case \"fieldPanel\":\n        that._renderDescriptionArea();\n\n        that._invalidate();\n\n        break;\n\n      case \"headerFilter\":\n        that._renderFieldChooser();\n\n        that._invalidate();\n\n        break;\n\n      case \"showBorders\":\n        that._tableElement().toggleClass(BORDERS_CLASS, !!args.value);\n\n        that.updateDimensions();\n        break;\n\n      case \"wordWrapEnabled\":\n        that._tableElement().toggleClass(\"dx-word-wrap\", !!args.value);\n\n        that.updateDimensions();\n        break;\n\n      case \"rowHeaderLayout\":\n        that._tableElement().find(\".\" + ROW_AREA_CELL_CLASS).toggleClass(\"dx-area-tree-view\", \"tree\" === args.value);\n\n        that._dataController.updateViewOptions(that._getDataControllerOptions());\n\n        break;\n\n      case \"height\":\n      case \"width\":\n        that._hasHeight = null;\n        that.callBase(args);\n        that.resize();\n        break;\n\n      default:\n        that.callBase(args);\n    }\n  },\n  _updateScrollPosition: function (columnsArea, rowsArea, dataArea) {\n    var that = this;\n    var scrollTop;\n    var scrollLeft;\n    var scrolled = that._scrollTop || that._scrollLeft;\n\n    if (that._scrollUpdating) {\n      return;\n    }\n\n    that._scrollUpdating = true;\n\n    if (rowsArea && !rowsArea.hasScroll() && that._hasHeight) {\n      that._scrollTop = null;\n    }\n\n    if (columnsArea && !columnsArea.hasScroll()) {\n      that._scrollLeft = null;\n    }\n\n    if (null !== that._scrollTop || null !== that._scrollLeft || scrolled || that.option(\"rtlEnabled\")) {\n      scrollTop = that._scrollTop || 0;\n      scrollLeft = that._scrollLeft || 0;\n      dataArea.scrollTo({\n        x: scrollLeft,\n        y: scrollTop\n      });\n      columnsArea.scrollTo(scrollLeft);\n      rowsArea.scrollTo(scrollTop);\n\n      that._dataController.updateWindowScrollPosition(that._scrollTop);\n    }\n\n    that._scrollUpdating = false;\n  },\n  _subscribeToEvents: function (columnsArea, rowsArea, dataArea) {\n    var that = this;\n\n    var scrollHandler = function (e) {\n      var scrollOffset = e.scrollOffset;\n      var leftOffset = (0, _type.isDefined)(scrollOffset.left) ? scrollOffset.left : that._scrollLeft;\n      var topOffset = (0, _type.isDefined)(scrollOffset.top) && that._hasHeight ? scrollOffset.top : that._scrollTop;\n\n      if ((that._scrollLeft || 0) !== (leftOffset || 0) || (that._scrollTop || 0) !== (topOffset || 0)) {\n        that._scrollLeft = leftOffset;\n        that._scrollTop = topOffset;\n\n        that._updateScrollPosition(columnsArea, rowsArea, dataArea);\n\n        if (\"virtual\" === that.option(\"scrolling.mode\")) {\n          that._dataController.setViewportPosition(that._scrollLeft, that._scrollTop);\n        }\n      }\n    };\n\n    (0, _iterator.each)([columnsArea, rowsArea, dataArea], function (_, area) {\n      subscribeToScrollEvent(area, scrollHandler);\n    });\n    !that._hasHeight && that._dataController.subscribeToWindowScrollEvents(dataArea.groupElement());\n  },\n  _clean: _common.noop,\n  _needDelayResizing: function (cellsInfo) {\n    var cellsCount = cellsInfo.length * (cellsInfo.length ? cellsInfo[0].length : 0);\n    return cellsCount > this.option(\"renderCellCountLimit\");\n  },\n  _renderFieldChooser: function () {\n    var that = this;\n    var container = that._pivotGridContainer;\n    var fieldChooserOptions = that.option(\"fieldChooser\") || {};\n    var toolbarItems = \"onDemand\" === fieldChooserOptions.applyChangesMode ? [{\n      toolbar: \"bottom\",\n      location: \"after\",\n      widget: \"dxButton\",\n      options: {\n        text: _message.default.format(\"OK\"),\n        onClick: function (e) {\n          that._fieldChooserPopup.$content().dxPivotGridFieldChooser(\"applyChanges\");\n\n          that._fieldChooserPopup.hide();\n        }\n      }\n    }, {\n      toolbar: \"bottom\",\n      location: \"after\",\n      widget: \"dxButton\",\n      options: {\n        text: _message.default.format(\"Cancel\"),\n        onClick: function (e) {\n          that._fieldChooserPopup.hide();\n        }\n      }\n    }] : [];\n    var fieldChooserComponentOptions = {\n      layout: fieldChooserOptions.layout,\n      texts: fieldChooserOptions.texts || {},\n      dataSource: that.getDataSource(),\n      allowSearch: fieldChooserOptions.allowSearch,\n      searchTimeout: fieldChooserOptions.searchTimeout,\n      width: void 0,\n      height: void 0,\n      headerFilter: that.option(\"headerFilter\"),\n      encodeHtml: that.option(\"encodeHtml\"),\n      applyChangesMode: fieldChooserOptions.applyChangesMode,\n      onContextMenuPreparing: function (e) {\n        that._trigger(\"onContextMenuPreparing\", e);\n      }\n    };\n    var popupOptions = {\n      shading: false,\n      title: fieldChooserOptions.title,\n      width: fieldChooserOptions.width,\n      height: fieldChooserOptions.height,\n      showCloseButton: true,\n      resizeEnabled: true,\n      minWidth: fieldChooserOptions.minWidth,\n      minHeight: fieldChooserOptions.minHeight,\n      toolbarItems: toolbarItems,\n      onResize: function (e) {\n        e.component.$content().dxPivotGridFieldChooser(\"updateDimensions\");\n      },\n      onShown: function (e) {\n        that._createComponent(e.component.content(), _uiPivot_grid6.default, fieldChooserComponentOptions);\n      },\n      onHidden: function (e) {\n        var fieldChooser = e.component.$content().dxPivotGridFieldChooser(\"instance\");\n        fieldChooser.resetTreeView();\n        fieldChooser.cancelChanges();\n      }\n    };\n\n    if (that._fieldChooserPopup) {\n      that._fieldChooserPopup.option(popupOptions);\n\n      that._fieldChooserPopup.$content().dxPivotGridFieldChooser(fieldChooserComponentOptions);\n    } else {\n      that._fieldChooserPopup = that._createComponent((0, _renderer.default)(DIV).addClass(FIELD_CHOOSER_POPUP_CLASS).appendTo(container), _popup.default, popupOptions);\n    }\n  },\n  _renderContextMenu: function () {\n    var that = this;\n    var $container = that._pivotGridContainer;\n\n    if (that._contextMenu) {\n      that._contextMenu.$element().remove();\n    }\n\n    that._contextMenu = that._createComponent((0, _renderer.default)(DIV).appendTo($container), _context_menu.default, {\n      onPositioning: function (actionArgs) {\n        var event = actionArgs.event;\n        actionArgs.cancel = true;\n\n        if (!event) {\n          return;\n        }\n\n        var targetElement = event.target.cellIndex >= 0 ? event.target : (0, _renderer.default)(event.target).closest(\"td\").get(0);\n\n        if (!targetElement) {\n          return;\n        }\n\n        var args = that._createEventArgs(targetElement, event);\n\n        var items = that._getContextMenuItems(args);\n\n        if (items) {\n          actionArgs.component.option(\"items\", items);\n          actionArgs.cancel = false;\n          return;\n        }\n      },\n      onItemClick: function (params) {\n        params.itemData.onItemClick && params.itemData.onItemClick(params);\n      },\n      cssClass: PIVOTGRID_CLASS,\n      target: that.$element()\n    });\n  },\n  _getContextMenuItems: function (e) {\n    var that = this;\n    var items = [];\n    var texts = that.option(\"texts\");\n\n    if (\"row\" === e.area || \"column\" === e.area) {\n      var areaFields = e[e.area + \"Fields\"];\n      var oppositeAreaFields = e[\"column\" === e.area ? \"rowFields\" : \"columnFields\"];\n      var field = e.cell.path && areaFields[e.cell.path.length - 1];\n      var dataSource = that.getDataSource();\n\n      if (field && field.allowExpandAll && e.cell.path.length < e[e.area + \"Fields\"].length && !dataSource.paginate()) {\n        items.push({\n          beginGroup: true,\n          icon: \"none\",\n          text: texts.expandAll,\n          onItemClick: function () {\n            dataSource.expandAll(field.index);\n          }\n        });\n        items.push({\n          text: texts.collapseAll,\n          icon: \"none\",\n          onItemClick: function () {\n            dataSource.collapseAll(field.index);\n          }\n        });\n      }\n\n      if (e.cell.isLast && !dataSource.paginate()) {\n        var sortingBySummaryItemCount = 0;\n        (0, _iterator.each)(oppositeAreaFields, function (index, field) {\n          if (!field.allowSortingBySummary) {\n            return;\n          }\n\n          (0, _iterator.each)(e.dataFields, function (dataIndex, dataField) {\n            if ((0, _type.isDefined)(e.cell.dataIndex) && e.cell.dataIndex !== dataIndex) {\n              return;\n            }\n\n            var showDataFieldCaption = !(0, _type.isDefined)(e.cell.dataIndex) && e.dataFields.length > 1;\n            var textFormat = \"column\" === e.area ? texts.sortColumnBySummary : texts.sortRowBySummary;\n            var checked = (0, _uiPivot_grid.findField)(e.dataFields, field.sortBySummaryField) === dataIndex && (e.cell.path || []).join(\"/\") === (field.sortBySummaryPath || []).join(\"/\");\n            var text = (0, _string.format)(textFormat, showDataFieldCaption ? field.caption + \" - \" + dataField.caption : field.caption);\n            items.push({\n              beginGroup: 0 === sortingBySummaryItemCount,\n              icon: checked ? \"desc\" === field.sortOrder ? \"sortdowntext\" : \"sortuptext\" : \"none\",\n              text: text,\n              onItemClick: function () {\n                dataSource.field(field.index, {\n                  sortBySummaryField: dataField.name || dataField.caption || dataField.dataField,\n                  sortBySummaryPath: e.cell.path,\n                  sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\n                });\n                dataSource.load();\n              }\n            });\n            sortingBySummaryItemCount++;\n          });\n        });\n        (0, _iterator.each)(oppositeAreaFields, function (index, field) {\n          if (!field.allowSortingBySummary || !(0, _type.isDefined)(field.sortBySummaryField)) {\n            return;\n          }\n\n          items.push({\n            beginGroup: 0 === sortingBySummaryItemCount,\n            icon: \"none\",\n            text: texts.removeAllSorting,\n            onItemClick: function () {\n              (0, _iterator.each)(oppositeAreaFields, function (index, field) {\n                dataSource.field(field.index, {\n                  sortBySummaryField: void 0,\n                  sortBySummaryPath: void 0,\n                  sortOrder: void 0\n                });\n              });\n              dataSource.load();\n            }\n          });\n          return false;\n        });\n      }\n    }\n\n    if (that.option(\"fieldChooser.enabled\")) {\n      items.push({\n        beginGroup: true,\n        icon: \"columnchooser\",\n        text: texts.showFieldChooser,\n        onItemClick: function () {\n          that._fieldChooserPopup.show();\n        }\n      });\n    }\n\n    if (that.option(\"export.enabled\")) {\n      items.push({\n        beginGroup: true,\n        icon: \"xlsxfile\",\n        text: texts.exportToExcel,\n        onItemClick: function () {\n          that.exportToExcel();\n        }\n      });\n    }\n\n    e.items = items;\n\n    that._trigger(\"onContextMenuPreparing\", e);\n\n    items = e.items;\n\n    if (items && items.length) {\n      return items;\n    }\n  },\n  _createEventArgs: function (targetElement, dxEvent) {\n    var that = this;\n    var dataSource = that.getDataSource();\n    var args = {\n      rowFields: dataSource.getAreaFields(\"row\"),\n      columnFields: dataSource.getAreaFields(\"column\"),\n      dataFields: dataSource.getAreaFields(\"data\"),\n      event: dxEvent\n    };\n\n    if (clickedOnFieldsArea((0, _renderer.default)(targetElement))) {\n      return (0, _extend.extend)(that._createFieldArgs(targetElement), args);\n    } else {\n      return (0, _extend.extend)(that._createCellArgs(targetElement), args);\n    }\n  },\n  _createFieldArgs: function (targetElement) {\n    var field = (0, _renderer.default)(targetElement).children().data(\"field\");\n    var args = {\n      field: field\n    };\n    return (0, _type.isDefined)(field) ? args : {};\n  },\n  _createCellArgs: function (cellElement) {\n    var $cellElement = (0, _renderer.default)(cellElement);\n    var columnIndex = cellElement.cellIndex;\n    var rowIndex = cellElement.parentElement.rowIndex;\n    var $table = $cellElement.closest(\"table\");\n    var data = $table.data(\"data\");\n    var cell = data && data[rowIndex] && data[rowIndex][columnIndex];\n    var args = {\n      area: $table.data(\"area\"),\n      rowIndex: rowIndex,\n      columnIndex: columnIndex,\n      cellElement: (0, _element.getPublicElement)($cellElement),\n      cell: cell\n    };\n    return args;\n  },\n  _handleCellClick: function (e) {\n    var that = this;\n\n    var args = that._createEventArgs(e.currentTarget, e);\n\n    var cell = args.cell;\n\n    if (!cell || !args.area && (args.rowIndex || args.columnIndex)) {\n      return;\n    }\n\n    that._trigger(\"onCellClick\", args);\n\n    cell && !args.cancel && (0, _type.isDefined)(cell.expanded) && setTimeout(function () {\n      that._dataController[cell.expanded ? \"collapseHeaderItem\" : \"expandHeaderItem\"](args.area, cell.path);\n    });\n  },\n  _getNoDataText: function () {\n    return this.option(\"texts.noData\");\n  },\n  _renderNoDataText: _uiGrid_core.default.renderNoDataText,\n  _renderLoadPanel: _uiGrid_core.default.renderLoadPanel,\n  _updateLoading: function (progress) {\n    var that = this;\n\n    var isLoading = that._dataController.isLoading();\n\n    if (!that._loadPanel) {\n      return;\n    }\n\n    var loadPanelVisible = that._loadPanel.option(\"visible\");\n\n    if (!loadPanelVisible) {\n      that._startLoadingTime = new Date();\n    }\n\n    if (isLoading) {\n      if (progress) {\n        if (new Date() - that._startLoadingTime >= 1e3) {\n          that._loadPanel.option(\"message\", Math.floor(100 * progress) + \"%\");\n        }\n      } else {\n        that._loadPanel.option(\"message\", that.option(\"loadPanel.text\"));\n      }\n    }\n\n    clearTimeout(that._hideLoadingTimeoutID);\n\n    if (loadPanelVisible && !isLoading) {\n      that._hideLoadingTimeoutID = setTimeout(function () {\n        that._loadPanel.option(\"visible\", false);\n\n        that.$element().removeClass(OVERFLOW_HIDDEN_CLASS);\n      });\n    } else {\n      that._loadPanel.option(\"visible\", isLoading);\n\n      that.$element().toggleClass(OVERFLOW_HIDDEN_CLASS, !isLoading);\n    }\n  },\n  _renderDescriptionArea: function () {\n    var _this = this;\n\n    var $element = this.$element();\n    var $descriptionCell = $element.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\n    var $toolbarContainer = (0, _renderer.default)(DIV).addClass(\"dx-pivotgrid-toolbar\");\n    var fieldPanel = this.option(\"fieldPanel\");\n    var $filterHeader = $element.find(\".dx-filter-header\");\n    var $columnHeader = $element.find(\".dx-column-header\");\n    var $targetContainer;\n\n    if (fieldPanel.visible && fieldPanel.showFilterFields) {\n      $targetContainer = $filterHeader;\n    } else {\n      if (fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)) {\n        $targetContainer = $columnHeader;\n      } else {\n        $targetContainer = $descriptionCell;\n      }\n    }\n\n    $columnHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)));\n    $filterHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && fieldPanel.showFilterFields));\n    $descriptionCell.toggleClass(\"dx-pivotgrid-background\", fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields || fieldPanel.showRowFields));\n    this.$element().find(\".dx-pivotgrid-toolbar\").remove();\n    $toolbarContainer.prependTo($targetContainer);\n\n    if (this.option(\"fieldChooser.enabled\")) {\n      var $buttonElement = (0, _renderer.default)(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-field-chooser-button\");\n      var buttonOptions = {\n        icon: \"columnchooser\",\n        hint: this.option(\"texts.showFieldChooser\"),\n        onClick: function () {\n          _this.getFieldChooserPopup().show();\n        }\n      };\n\n      this._createComponent($buttonElement, \"dxButton\", buttonOptions);\n    }\n\n    if (this.option(\"export.enabled\")) {\n      var _$buttonElement = (0, _renderer.default)(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-export-button\");\n\n      var _buttonOptions = {\n        icon: \"xlsxfile\",\n        hint: this.option(\"texts.exportToExcel\"),\n        onClick: function () {\n          _this.exportToExcel();\n        }\n      };\n\n      this._createComponent(_$buttonElement, \"dxButton\", _buttonOptions);\n    }\n  },\n  _detectHasContainerHeight: function () {\n    var that = this;\n    var element = that.$element();\n\n    if ((0, _type.isDefined)(that._hasHeight)) {\n      var height = that.option(\"height\") || that.$element().get(0).style.height;\n\n      if (height && that._hasHeight ^ \"auto\" !== height) {\n        that._hasHeight = null;\n      }\n    }\n\n    if ((0, _type.isDefined)(that._hasHeight) || element.is(\":hidden\")) {\n      return;\n    }\n\n    that._pivotGridContainer.addClass(\"dx-hidden\");\n\n    var testElement = (0, _renderer.default)(DIV).height(TEST_HEIGHT);\n    element.append(testElement);\n    that._hasHeight = element.height() !== TEST_HEIGHT;\n\n    that._pivotGridContainer.removeClass(\"dx-hidden\");\n\n    testElement.remove();\n  },\n  _renderHeaders: function (rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer) {\n    var that = this;\n    var dataSource = that.getDataSource();\n    that._rowFields = that._rowFields || new _uiPivot_grid5.FieldsArea(that, \"row\");\n\n    that._rowFields.render(rowHeaderContainer, dataSource.getAreaFields(\"row\"));\n\n    that._columnFields = that._columnFields || new _uiPivot_grid5.FieldsArea(that, \"column\");\n\n    that._columnFields.render(columnHeaderContainer, dataSource.getAreaFields(\"column\"));\n\n    that._filterFields = that._filterFields || new _uiPivot_grid5.FieldsArea(that, \"filter\");\n\n    that._filterFields.render(filterHeaderContainer, dataSource.getAreaFields(\"filter\"));\n\n    that._dataFields = that._dataFields || new _uiPivot_grid5.FieldsArea(that, \"data\");\n\n    that._dataFields.render(dataHeaderContainer, dataSource.getAreaFields(\"data\"));\n\n    that.$element().dxPivotGridFieldChooserBase(\"instance\").renderSortable();\n  },\n  _createTableElement: function () {\n    var that = this;\n    var $table = (0, _renderer.default)(\"<table>\").css({\n      width: \"100%\"\n    }).toggleClass(BORDERS_CLASS, !!that.option(\"showBorders\")).toggleClass(\"dx-word-wrap\", !!that.option(\"wordWrapEnabled\"));\n\n    _events_engine.default.on($table, (0, _index.addNamespace)(_click.name, \"dxPivotGrid\"), \"td\", that._handleCellClick.bind(that));\n\n    return $table;\n  },\n  _renderDataArea: function (dataAreaElement) {\n    var that = this;\n    var dataArea = that._dataArea || new _uiPivot_grid3.DataArea(that);\n    that._dataArea = dataArea;\n    dataArea.render(dataAreaElement, that._dataController.getCellsInfo());\n    return dataArea;\n  },\n  _renderRowsArea: function (rowsAreaElement) {\n    var that = this;\n    var rowsArea = that._rowsArea || new _uiPivot_grid4.VerticalHeadersArea(that);\n    that._rowsArea = rowsArea;\n    rowsArea.render(rowsAreaElement, that._dataController.getRowsInfo());\n    return rowsArea;\n  },\n  _renderColumnsArea: function (columnsAreaElement) {\n    var that = this;\n    var columnsArea = that._columnsArea || new _uiPivot_grid4.HorizontalHeadersArea(that);\n    that._columnsArea = columnsArea;\n    columnsArea.render(columnsAreaElement, that._dataController.getColumnsInfo());\n    return columnsArea;\n  },\n  _initMarkup: function () {\n    var that = this;\n    that.callBase.apply(this, arguments);\n    that.$element().addClass(PIVOTGRID_CLASS);\n  },\n  _renderContentImpl: function () {\n    var that = this;\n    var columnsAreaElement;\n    var rowsAreaElement;\n    var dataAreaElement;\n    var tableElement;\n    var isFirstDrawing = !that._pivotGridContainer;\n    var rowHeaderContainer;\n    var columnHeaderContainer;\n    var filterHeaderContainer;\n    var dataHeaderContainer;\n    tableElement = !isFirstDrawing && that._tableElement();\n\n    if (!tableElement) {\n      that.$element().addClass(ROW_LINES_CLASS).addClass(FIELDS_CONTAINER_CLASS);\n      that._pivotGridContainer = (0, _renderer.default)(DIV).addClass(\"dx-pivotgrid-container\");\n\n      that._renderFieldChooser();\n\n      that._renderContextMenu();\n\n      columnsAreaElement = (0, _renderer.default)(TD).addClass(COLUMN_AREA_CELL_CLASS);\n      rowsAreaElement = (0, _renderer.default)(TD).addClass(ROW_AREA_CELL_CLASS);\n      dataAreaElement = (0, _renderer.default)(TD).addClass(DATA_AREA_CELL_CLASS);\n      tableElement = that._createTableElement();\n      dataHeaderContainer = (0, _renderer.default)(TD).addClass(\"dx-data-header\");\n      filterHeaderContainer = (0, _renderer.default)(\"<td>\").attr(\"colspan\", \"2\").addClass(\"dx-filter-header\");\n      columnHeaderContainer = (0, _renderer.default)(TD).addClass(\"dx-column-header\");\n      rowHeaderContainer = (0, _renderer.default)(TD).addClass(DESCRIPTION_AREA_CELL_CLASS);\n      (0, _renderer.default)(TR).append(filterHeaderContainer).appendTo(tableElement);\n      (0, _renderer.default)(TR).append(dataHeaderContainer).append(columnHeaderContainer).appendTo(tableElement);\n      (0, _renderer.default)(TR).toggleClass(\"dx-ie\", true === _browser.default.msie).append(rowHeaderContainer).append(columnsAreaElement).appendTo(tableElement);\n      (0, _renderer.default)(TR).addClass(BOTTOM_ROW_CLASS).append(rowsAreaElement).append(dataAreaElement).appendTo(tableElement);\n\n      that._pivotGridContainer.append(tableElement);\n\n      that.$element().append(that._pivotGridContainer);\n\n      if (\"tree\" === that.option(\"rowHeaderLayout\")) {\n        rowsAreaElement.addClass(\"dx-area-tree-view\");\n      }\n    }\n\n    that.$element().addClass(OVERFLOW_HIDDEN_CLASS);\n\n    that._createComponent(that.$element(), _uiPivot_grid7.default, {\n      dataSource: that.getDataSource(),\n      encodeHtml: that.option(\"encodeHtml\"),\n      allowFieldDragging: that.option(\"fieldPanel.allowFieldDragging\"),\n      headerFilter: that.option(\"headerFilter\"),\n      visible: that.option(\"visible\")\n    });\n\n    var dataArea = that._renderDataArea(dataAreaElement);\n\n    var rowsArea = that._renderRowsArea(rowsAreaElement);\n\n    var columnsArea = that._renderColumnsArea(columnsAreaElement);\n\n    dataArea.tableElement().prepend(columnsArea.headElement());\n\n    if (isFirstDrawing) {\n      that._renderLoadPanel(dataArea.groupElement().parent(), that.$element());\n\n      that._renderDescriptionArea();\n\n      rowsArea.processScroll();\n      columnsArea.processScroll();\n    }\n\n    [dataArea, rowsArea, columnsArea].forEach(function (area) {\n      unsubscribeScrollEvents(area);\n    });\n\n    that._renderHeaders(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer);\n\n    that._update(isFirstDrawing);\n  },\n  _update: function (isFirstDrawing) {\n    var that = this;\n\n    var updateHandler = function () {\n      that.updateDimensions();\n    };\n\n    if (that._needDelayResizing(that._dataArea.getData()) && isFirstDrawing) {\n      setTimeout(updateHandler);\n    } else {\n      updateHandler();\n    }\n  },\n  _fireContentReadyAction: function () {\n    if (!this._dataController.isLoading()) {\n      this.callBase();\n    }\n  },\n  getScrollPath: function (area) {\n    var that = this;\n\n    if (\"column\" === area) {\n      return that._columnsArea.getScrollPath(that._scrollLeft);\n    } else {\n      return that._rowsArea.getScrollPath(that._scrollTop);\n    }\n  },\n  getDataSource: function () {\n    return this._dataController.getDataSource();\n  },\n  getFieldChooserPopup: function () {\n    return this._fieldChooserPopup;\n  },\n  hasScroll: function (area) {\n    var that = this;\n    return \"column\" === area ? that._columnsArea.hasScroll() : that._rowsArea.hasScroll();\n  },\n  _dimensionChanged: function () {\n    this.updateDimensions();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this.updateDimensions();\n    }\n  },\n  _dispose: function () {\n    var that = this;\n    clearTimeout(that._hideLoadingTimeoutID);\n    that.callBase.apply(that, arguments);\n\n    if (that._dataController) {\n      that._dataController.dispose();\n    }\n  },\n  _tableElement: function () {\n    return this.$element().find(\"table\").first();\n  },\n  addWidgetPrefix: function (className) {\n    return \"dx-pivotgrid-\" + className;\n  },\n  resize: function () {\n    this.updateDimensions();\n  },\n  isReady: function () {\n    return this.callBase() && !this._dataController.isLoading();\n  },\n  updateDimensions: function () {\n    var that = this;\n    var groupWidth;\n\n    var tableElement = that._tableElement();\n\n    var rowsArea = that._rowsArea;\n    var columnsArea = that._columnsArea;\n    var dataArea = that._dataArea;\n    var bordersWidth;\n    var totalWidth = 0;\n    var totalHeight = 0;\n    var rowsAreaWidth = 0;\n    var hasRowsScroll;\n    var hasColumnsScroll;\n    var scrollingOptions = that.option(\"scrolling\") || {};\n    var scrollBarInfo = getScrollBarInfo(scrollingOptions.useNative);\n    var scrollBarWidth = scrollBarInfo.scrollBarWidth;\n    var dataAreaCell = tableElement.find(\".\" + DATA_AREA_CELL_CLASS);\n    var rowAreaCell = tableElement.find(\".\" + ROW_AREA_CELL_CLASS);\n    var columnAreaCell = tableElement.find(\".\" + COLUMN_AREA_CELL_CLASS);\n    var descriptionCell = tableElement.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\n    var filterHeaderCell = tableElement.find(\".dx-filter-header\");\n    var columnHeaderCell = tableElement.find(\".dx-column-header\");\n    var rowFieldsHeader = that._rowFields;\n    var d = new _deferred.Deferred();\n\n    if (!(0, _window.hasWindow)()) {\n      return;\n    }\n\n    var needSynchronizeFieldPanel = rowFieldsHeader.isVisible() && \"tree\" !== that.option(\"rowHeaderLayout\");\n\n    that._detectHasContainerHeight();\n\n    if (!dataArea.headElement().length) {\n      dataArea.tableElement().prepend(columnsArea.headElement());\n    }\n\n    if (needSynchronizeFieldPanel) {\n      rowsArea.updateColspans(rowFieldsHeader.getColumnsCount());\n      rowsArea.tableElement().prepend(rowFieldsHeader.headElement());\n    }\n\n    tableElement.addClass(INCOMPRESSIBLE_FIELDS_CLASS);\n    dataArea.reset();\n    rowsArea.reset();\n    columnsArea.reset();\n    rowFieldsHeader.reset();\n\n    var calculateHasScroll = function (areaSize, totalSize) {\n      return totalSize - areaSize >= 1;\n    };\n\n    var calculateGroupHeight = function (dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth) {\n      return hasRowsScroll ? dataAreaHeight : totalHeight + (hasColumnsScroll ? scrollBarWidth : 0);\n    };\n\n    (0, _common.deferUpdate)(function () {\n      var resultWidths = dataArea.getColumnsWidth();\n      var rowHeights = rowsArea.getRowsHeight();\n      var rowsAreaHeights = needSynchronizeFieldPanel ? rowHeights.slice(1) : rowHeights;\n      var dataAreaHeights = dataArea.getRowsHeight();\n      var descriptionCellHeight = (0, _size.getSize)(descriptionCell[0], \"height\", {\n        paddings: true,\n        borders: true,\n        margins: true\n      }) + (needSynchronizeFieldPanel ? rowHeights[0] : 0);\n\n      var columnsAreaRowCount = that._dataController.getColumnsInfo().length;\n\n      var resultHeights = (0, _uiPivot_grid.mergeArraysByMaxValue)(rowsAreaHeights, dataAreaHeights.slice(columnsAreaRowCount));\n      var columnsAreaRowHeights = dataAreaHeights.slice(0, columnsAreaRowCount);\n      var columnsAreaHeight = getArraySum(columnsAreaRowHeights);\n      var rowsAreaColumnWidths = rowsArea.getColumnsWidth();\n      var filterAreaHeight = 0;\n      var dataAreaHeight = 0;\n\n      if (that._hasHeight) {\n        filterAreaHeight = filterHeaderCell.height();\n        var $dataHeader = tableElement.find(\".dx-data-header\");\n        var dataHeaderHeight = _browser.default.msie ? (0, _size.getSize)($dataHeader.get(0), \"height\", {\n          paddings: false,\n          borders: false,\n          margins: false\n        }) : $dataHeader.height();\n        bordersWidth = getCommonBorderWidth([columnAreaCell, dataAreaCell, tableElement, columnHeaderCell, filterHeaderCell], \"height\");\n        dataAreaHeight = that.$element().height() - filterAreaHeight - dataHeaderHeight - (Math.max(dataArea.headElement().height(), columnAreaCell.height(), descriptionCellHeight) + bordersWidth);\n      }\n\n      totalWidth = dataArea.tableElement().width();\n      totalHeight = getArraySum(resultHeights);\n\n      if (!totalWidth || !totalHeight) {\n        d.resolve();\n        return;\n      }\n\n      rowsAreaWidth = getArraySum(rowsAreaColumnWidths);\n      var elementWidth = that.$element().width();\n      bordersWidth = getCommonBorderWidth([rowAreaCell, dataAreaCell, tableElement], \"width\");\n      groupWidth = elementWidth - rowsAreaWidth - bordersWidth;\n      groupWidth = groupWidth > 0 ? groupWidth : totalWidth;\n      var diff = totalWidth - groupWidth;\n      var needAdjustWidthOnZoom = diff >= 0 && diff <= 2;\n\n      if (needAdjustWidthOnZoom) {\n        adjustSizeArray(resultWidths, diff);\n        totalWidth = groupWidth;\n      }\n\n      hasRowsScroll = that._hasHeight && calculateHasScroll(dataAreaHeight, totalHeight);\n      hasColumnsScroll = calculateHasScroll(groupWidth, totalWidth);\n      var groupHeight = calculateGroupHeight(dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\n      (0, _common.deferRender)(function () {\n        columnsArea.tableElement().append(dataArea.headElement());\n        rowFieldsHeader.tableElement().append(rowsArea.headElement());\n\n        if (!hasColumnsScroll && hasRowsScroll && scrollBarWidth) {\n          adjustSizeArray(resultWidths, scrollBarWidth);\n          totalWidth -= scrollBarWidth;\n        }\n\n        if (descriptionCellHeight > columnsAreaHeight) {\n          adjustSizeArray(columnsAreaRowHeights, columnsAreaHeight - descriptionCellHeight);\n          columnsArea.setRowsHeight(columnsAreaRowHeights);\n        }\n\n        tableElement.removeClass(INCOMPRESSIBLE_FIELDS_CLASS);\n        columnHeaderCell.children().css(\"maxWidth\", groupWidth);\n        columnsArea.groupWidth(groupWidth);\n        columnsArea.processScrollBarSpacing(hasRowsScroll ? scrollBarWidth : 0);\n        columnsArea.setColumnsWidth(resultWidths);\n        rowsArea.groupHeight(that._hasHeight ? groupHeight : \"auto\");\n        rowsArea.processScrollBarSpacing(hasColumnsScroll ? scrollBarWidth : 0);\n        rowsArea.setColumnsWidth(rowsAreaColumnWidths);\n        rowsArea.setRowsHeight(resultHeights);\n        dataArea.setColumnsWidth(resultWidths);\n        dataArea.setRowsHeight(resultHeights);\n        dataArea.groupWidth(groupWidth);\n        dataArea.groupHeight(that._hasHeight ? groupHeight : \"auto\");\n        needSynchronizeFieldPanel && rowFieldsHeader.setColumnsWidth(rowsAreaColumnWidths);\n        dataAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\n        rowAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\n\n        if (!that._hasHeight && elementWidth !== that.$element().width()) {\n          var _diff = elementWidth - that.$element().width();\n\n          if (!hasColumnsScroll) {\n            adjustSizeArray(resultWidths, _diff);\n            columnsArea.setColumnsWidth(resultWidths);\n            dataArea.setColumnsWidth(resultWidths);\n          }\n\n          dataArea.groupWidth(groupWidth - _diff);\n          columnsArea.groupWidth(groupWidth - _diff);\n        }\n\n        if (that._hasHeight && that._filterFields.isVisible() && filterHeaderCell.height() !== filterAreaHeight) {\n          var _diff2 = filterHeaderCell.height() - filterAreaHeight;\n\n          if (_diff2 > 0) {\n            hasRowsScroll = calculateHasScroll(dataAreaHeight - _diff2, totalHeight);\n\n            var _groupHeight = calculateGroupHeight(dataAreaHeight - _diff2, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\n\n            dataArea.groupHeight(_groupHeight);\n            rowsArea.groupHeight(_groupHeight);\n          }\n        }\n\n        if (\"virtual\" === scrollingOptions.mode) {\n          var virtualContentParams = that._dataController.calculateVirtualContentParams({\n            virtualRowHeight: scrollingOptions.virtualRowHeight,\n            virtualColumnWidth: scrollingOptions.virtualColumnWidth,\n            itemWidths: resultWidths,\n            itemHeights: resultHeights,\n            rowCount: resultHeights.length,\n            columnCount: resultWidths.length,\n            viewportWidth: groupWidth,\n            viewportHeight: that._hasHeight ? groupHeight : (0, _renderer.default)(window).outerHeight()\n          });\n\n          dataArea.setVirtualContentParams({\n            top: virtualContentParams.contentTop,\n            left: virtualContentParams.contentLeft,\n            width: virtualContentParams.width,\n            height: virtualContentParams.height\n          });\n          rowsArea.setVirtualContentParams({\n            top: virtualContentParams.contentTop,\n            width: rowsAreaWidth,\n            height: virtualContentParams.height\n          });\n          columnsArea.setVirtualContentParams({\n            left: virtualContentParams.contentLeft,\n            width: virtualContentParams.width,\n            height: columnsArea.groupElement().height()\n          });\n        }\n\n        var updateScrollableResults = [];\n        dataArea.processScroll(scrollBarInfo.scrollBarUseNative, hasColumnsScroll, hasRowsScroll);\n        (0, _iterator.each)([columnsArea, rowsArea, dataArea], function (_, area) {\n          updateScrollableResults.push(area && area.updateScrollable());\n        });\n\n        that._updateLoading();\n\n        that._renderNoDataText(dataAreaCell);\n\n        _deferred.when.apply(_renderer.default, updateScrollableResults).done(function () {\n          that._updateScrollPosition(columnsArea, rowsArea, dataArea);\n\n          that._subscribeToEvents(columnsArea, rowsArea, dataArea);\n\n          d.resolve();\n        });\n      });\n    });\n    return d;\n  },\n  applyPartialDataSource: function (area, path, dataSource) {\n    this._dataController.applyPartialDataSource(area, path, dataSource);\n  }\n}).inherit(_uiPivot_grid8.ExportMixin).include(_uiPivot_grid9.default);\n\n(0, _component_registrator.default)(\"dxPivotGrid\", PivotGrid);\nvar _default = PivotGrid;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/ui.pivot_grid.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_window","_browser","_events_engine","_component_registrator","_element","_string","_common","_iterator","_type","_extend","_click","_message","_ui","_index","_uiGrid_core","_uiPivot_grid","_uiPivot_grid2","_uiPivot_grid3","_uiPivot_grid4","_size","_uiPivot_grid5","_uiPivot_grid6","_uiPivot_grid7","_uiPivot_grid8","_uiPivot_grid9","_popup","_context_menu","_deferred","obj","__esModule","window","getWindow","DATA_AREA_CELL_CLASS","ROW_AREA_CELL_CLASS","COLUMN_AREA_CELL_CLASS","DESCRIPTION_AREA_CELL_CLASS","BORDERS_CLASS","PIVOTGRID_CLASS","ROW_LINES_CLASS","BOTTOM_ROW_CLASS","BOTTOM_BORDER_CLASS","FIELDS_CONTAINER_CLASS","FIELDS_CLASS","FIELD_CHOOSER_POPUP_CLASS","INCOMPRESSIBLE_FIELDS_CLASS","OVERFLOW_HIDDEN_CLASS","TR","TD","DIV","TEST_HEIGHT","FIELD_CALCULATED_OPTIONS","getArraySum","array","sum","each","_","value","adjustSizeArray","sizeArray","space","delta","length","i","unsubscribeScrollEvents","area","off","subscribeToScrollEvent","handler","on","scrollBarInfoCache","getScrollBarInfo","useNativeScrolling","scrollBarWidth","options","container","css","position","visibility","top","left","width","height","appendTo","content","useNative","useSimulatedScrollbar","dxScrollable","scrollBarUseNative","option","remove","getCommonBorderWidth","elements","direction","borderStyleNames","elem","computedStyle","getComputedStyle","get","forEach","borderStyleName","parseFloat","clickedOnFieldsArea","$targetElement","closest","find","PivotGrid","inherit","_getDefaultOptions","extend","callBase","scrolling","timeout","renderingThreshold","minTimeout","mode","removeInvisiblePages","virtualRowHeight","virtualColumnWidth","loadTwoPagesOnStart","encodeHtml","dataSource","activeStateEnabled","fieldChooser","minWidth","minHeight","enabled","allowSearch","searchTimeout","layout","title","format","applyChangesMode","onContextMenuPreparing","allowSorting","allowSortingBySummary","allowFiltering","allowExpandAll","wordWrapEnabled","fieldPanel","showColumnFields","showFilterFields","showDataFields","showRowFields","allowFieldDragging","visible","texts","columnFieldArea","rowFieldArea","filterFieldArea","dataFieldArea","fileName","proxyUrl","ignoreExcelErrors","showRowTotals","showRowGrandTotals","showColumnTotals","showColumnGrandTotals","hideEmptySummaryCells","showTotalsPrior","rowHeaderLayout","loadPanel","text","showIndicator","indicatorSrc","showPane","grandTotal","total","getFormatter","noData","showFieldChooser","expandAll","collapseAll","sortColumnBySummary","sortRowBySummary","removeAllSorting","exportToExcel","dataNotAvailable","onCellClick","onCellPrepared","showBorders","stateStoring","storageKey","type","customLoad","customSave","savingTimeout","onExpandValueChanging","renderCellCountLimit","onExporting","onExported","onFileSaving","headerFilter","showRelevantValues","emptyValue","ok","cancel","_updateCalculatedOptions","fields","that","index","field","optionName","isCalculated","_initProperties","needUpdate","setFieldProperty","_getDataControllerOptions","component","onFieldsPrepared","_initDataController","_dataController","dispose","DataController","hasWindow","changed","add","_render","scrollChanged","_scrollLeft","_scrollTop","loadingChanged","isLoading","_updateLoading","progressChanged","bind","dataSourceChanged","_trigger","expandValueChanging","e","_init","_initActions","_actions","onChanged","_createActionByOption","eventName","eventArg","_optionChanged","args","indexOf","name","getDataSource","_fieldChooserPopup","hide","_renderFieldChooser","_invalidate","updateViewOptions","_renderContextMenu","_renderLoadPanel","_dataArea","groupElement","$element","_renderDescriptionArea","_tableElement","toggleClass","updateDimensions","_hasHeight","resize","_updateScrollPosition","columnsArea","rowsArea","dataArea","scrollTop","scrollLeft","scrolled","_scrollUpdating","hasScroll","scrollTo","x","y","updateWindowScrollPosition","_subscribeToEvents","scrollHandler","scrollOffset","leftOffset","isDefined","topOffset","setViewportPosition","subscribeToWindowScrollEvents","_clean","noop","_needDelayResizing","cellsInfo","cellsCount","_pivotGridContainer","fieldChooserOptions","toolbarItems","toolbar","location","widget","onClick","$content","dxPivotGridFieldChooser","fieldChooserComponentOptions","popupOptions","shading","showCloseButton","resizeEnabled","onResize","onShown","_createComponent","onHidden","resetTreeView","cancelChanges","addClass","$container","_contextMenu","onPositioning","actionArgs","event","targetElement","target","cellIndex","_createEventArgs","items","_getContextMenuItems","onItemClick","params","itemData","cssClass","areaFields","oppositeAreaFields","cell","path","paginate","push","beginGroup","icon","isLast","sortingBySummaryItemCount","dataFields","dataIndex","dataField","showDataFieldCaption","textFormat","checked","findField","sortBySummaryField","join","sortBySummaryPath","caption","sortOrder","load","show","dxEvent","rowFields","getAreaFields","columnFields","_createFieldArgs","_createCellArgs","children","data","cellElement","$cellElement","columnIndex","rowIndex","parentElement","$table","getPublicElement","_handleCellClick","currentTarget","expanded","setTimeout","_getNoDataText","_renderNoDataText","renderNoDataText","renderLoadPanel","progress","_loadPanel","loadPanelVisible","_startLoadingTime","Date","Math","floor","clearTimeout","_hideLoadingTimeoutID","removeClass","_this","$descriptionCell","$toolbarContainer","$filterHeader","$columnHeader","$targetContainer","prependTo","$buttonElement","buttonOptions","hint","getFieldChooserPopup","_$buttonElement","_buttonOptions","_detectHasContainerHeight","element","style","is","testElement","append","_renderHeaders","rowHeaderContainer","columnHeaderContainer","filterHeaderContainer","dataHeaderContainer","_rowFields","FieldsArea","render","_columnFields","_filterFields","_dataFields","dxPivotGridFieldChooserBase","renderSortable","_createTableElement","addNamespace","_renderDataArea","dataAreaElement","DataArea","getCellsInfo","_renderRowsArea","rowsAreaElement","_rowsArea","VerticalHeadersArea","getRowsInfo","_renderColumnsArea","columnsAreaElement","_columnsArea","HorizontalHeadersArea","getColumnsInfo","_initMarkup","apply","arguments","_renderContentImpl","tableElement","isFirstDrawing","attr","msie","prepend","headElement","parent","processScroll","_update","updateHandler","getData","_fireContentReadyAction","getScrollPath","_dimensionChanged","_visibilityChanged","_dispose","first","addWidgetPrefix","className","isReady","groupWidth","bordersWidth","totalWidth","totalHeight","rowsAreaWidth","hasRowsScroll","hasColumnsScroll","scrollingOptions","scrollBarInfo","dataAreaCell","rowAreaCell","columnAreaCell","descriptionCell","filterHeaderCell","columnHeaderCell","rowFieldsHeader","d","Deferred","needSynchronizeFieldPanel","isVisible","updateColspans","getColumnsCount","reset","calculateHasScroll","areaSize","totalSize","calculateGroupHeight","dataAreaHeight","deferUpdate","resultWidths","getColumnsWidth","rowHeights","getRowsHeight","rowsAreaHeights","slice","dataAreaHeights","descriptionCellHeight","getSize","paddings","borders","margins","columnsAreaRowCount","resultHeights","mergeArraysByMaxValue","columnsAreaRowHeights","columnsAreaHeight","rowsAreaColumnWidths","filterAreaHeight","$dataHeader","dataHeaderHeight","max","resolve","elementWidth","diff","needAdjustWidthOnZoom","groupHeight","deferRender","setRowsHeight","processScrollBarSpacing","setColumnsWidth","_diff","_diff2","_groupHeight","virtualContentParams","calculateVirtualContentParams","itemWidths","itemHeights","rowCount","columnCount","viewportWidth","viewportHeight","outerHeight","setVirtualContentParams","contentTop","contentLeft","updateScrollableResults","updateScrollable","when","done","applyPartialDataSource","ExportMixin","include","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _element = require(\"../../core/element\");\r\nvar _string = require(\"../../core/utils/string\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _click = require(\"../../events/click\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.utils\"));\r\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\r\nvar _uiPivot_grid2 = require(\"./ui.pivot_grid.data_controller\");\r\nvar _uiPivot_grid3 = require(\"./ui.pivot_grid.data_area\");\r\nvar _uiPivot_grid4 = require(\"./ui.pivot_grid.headers_area\");\r\nvar _size = require(\"../../core/utils/size\");\r\nvar _uiPivot_grid5 = require(\"./ui.pivot_grid.fields_area\");\r\nvar _uiPivot_grid6 = _interopRequireDefault(require(\"./ui.pivot_grid.field_chooser\"));\r\nvar _uiPivot_grid7 = _interopRequireDefault(require(\"./ui.pivot_grid.field_chooser_base\"));\r\nvar _uiPivot_grid8 = require(\"./ui.pivot_grid.export\");\r\nvar _uiPivot_grid9 = _interopRequireDefault(require(\"./ui.pivot_grid.chart_integration\"));\r\nvar _popup = _interopRequireDefault(require(\"../popup\"));\r\nvar _context_menu = _interopRequireDefault(require(\"../context_menu\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar DATA_AREA_CELL_CLASS = \"dx-area-data-cell\";\r\nvar ROW_AREA_CELL_CLASS = \"dx-area-row-cell\";\r\nvar COLUMN_AREA_CELL_CLASS = \"dx-area-column-cell\";\r\nvar DESCRIPTION_AREA_CELL_CLASS = \"dx-area-description-cell\";\r\nvar BORDERS_CLASS = \"dx-pivotgrid-border\";\r\nvar PIVOTGRID_CLASS = \"dx-pivotgrid\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar BOTTOM_ROW_CLASS = \"dx-bottom-row\";\r\nvar BOTTOM_BORDER_CLASS = \"dx-bottom-border\";\r\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\r\nvar FIELDS_CLASS = \"dx-area-fields\";\r\nvar FIELD_CHOOSER_POPUP_CLASS = \"dx-fieldchooser-popup\";\r\nvar INCOMPRESSIBLE_FIELDS_CLASS = \"dx-incompressible-fields\";\r\nvar OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\r\nvar TR = \"<tr>\";\r\nvar TD = \"<td>\";\r\nvar DIV = \"<div>\";\r\nvar TEST_HEIGHT = 66666;\r\nvar FIELD_CALCULATED_OPTIONS = [\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"];\r\n\r\nfunction getArraySum(array) {\r\n    var sum = 0;\r\n    (0, _iterator.each)(array, function(_, value) {\r\n        sum += value || 0\r\n    });\r\n    return sum\r\n}\r\n\r\nfunction adjustSizeArray(sizeArray, space) {\r\n    var delta = space / sizeArray.length;\r\n    for (var i = 0; i < sizeArray.length; i++) {\r\n        sizeArray[i] -= delta\r\n    }\r\n}\r\n\r\nfunction unsubscribeScrollEvents(area) {\r\n    area.off(\"scroll\").off(\"stop\")\r\n}\r\n\r\nfunction subscribeToScrollEvent(area, handler) {\r\n    unsubscribeScrollEvents(area);\r\n    area.on(\"scroll\", handler).on(\"stop\", handler)\r\n}\r\nvar scrollBarInfoCache = {};\r\n\r\nfunction getScrollBarInfo(useNativeScrolling) {\r\n    if (scrollBarInfoCache[useNativeScrolling]) {\r\n        return scrollBarInfoCache[useNativeScrolling]\r\n    }\r\n    var scrollBarWidth = 0;\r\n    var options = {};\r\n    var container = (0, _renderer.default)(DIV).css({\r\n        position: \"absolute\",\r\n        visibility: \"hidden\",\r\n        top: -1e3,\r\n        left: -1e3,\r\n        width: 100,\r\n        height: 100\r\n    }).appendTo(\"body\");\r\n    var content = (0, _renderer.default)(\"<p>\").css({\r\n        width: \"100%\",\r\n        height: 200\r\n    }).appendTo(container);\r\n    if (\"auto\" !== useNativeScrolling) {\r\n        options.useNative = !!useNativeScrolling;\r\n        options.useSimulatedScrollbar = !useNativeScrolling\r\n    }\r\n    container.dxScrollable(options);\r\n    var scrollBarUseNative = container.dxScrollable(\"instance\").option(\"useNative\");\r\n    scrollBarWidth = scrollBarUseNative ? container.width() - content.width() : 0;\r\n    container.remove();\r\n    scrollBarInfoCache[useNativeScrolling] = {\r\n        scrollBarWidth: scrollBarWidth,\r\n        scrollBarUseNative: scrollBarUseNative\r\n    };\r\n    return scrollBarInfoCache[useNativeScrolling]\r\n}\r\n\r\nfunction getCommonBorderWidth(elements, direction) {\r\n    var borderStyleNames = \"width\" === direction ? [\"borderLeftWidth\", \"borderRightWidth\"] : [\"borderTopWidth\", \"borderBottomWidth\"];\r\n    var width = 0;\r\n    (0, _iterator.each)(elements, function(_, elem) {\r\n        var computedStyle = window.getComputedStyle(elem.get(0));\r\n        borderStyleNames.forEach(function(borderStyleName) {\r\n            width += parseFloat(computedStyle[borderStyleName]) || 0\r\n        })\r\n    });\r\n    return width\r\n}\r\n\r\nfunction clickedOnFieldsArea($targetElement) {\r\n    return $targetElement.closest(\".\" + FIELDS_CLASS).length || $targetElement.find(\".\" + FIELDS_CLASS).length\r\n}\r\nvar PivotGrid = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            scrolling: {\r\n                timeout: 300,\r\n                renderingThreshold: 150,\r\n                minTimeout: 10,\r\n                mode: \"standard\",\r\n                useNative: \"auto\",\r\n                removeInvisiblePages: true,\r\n                virtualRowHeight: 50,\r\n                virtualColumnWidth: 100,\r\n                loadTwoPagesOnStart: true\r\n            },\r\n            encodeHtml: true,\r\n            dataSource: null,\r\n            activeStateEnabled: false,\r\n            fieldChooser: {\r\n                minWidth: 250,\r\n                minHeight: 250,\r\n                enabled: true,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                layout: 0,\r\n                title: _message.default.format(\"dxPivotGrid-fieldChooserTitle\"),\r\n                width: 600,\r\n                height: 600,\r\n                applyChangesMode: \"instantly\"\r\n            },\r\n            onContextMenuPreparing: null,\r\n            allowSorting: false,\r\n            allowSortingBySummary: false,\r\n            allowFiltering: false,\r\n            allowExpandAll: false,\r\n            wordWrapEnabled: true,\r\n            fieldPanel: {\r\n                showColumnFields: true,\r\n                showFilterFields: true,\r\n                showDataFields: true,\r\n                showRowFields: true,\r\n                allowFieldDragging: true,\r\n                visible: false,\r\n                texts: {\r\n                    columnFieldArea: _message.default.format(\"dxPivotGrid-columnFieldArea\"),\r\n                    rowFieldArea: _message.default.format(\"dxPivotGrid-rowFieldArea\"),\r\n                    filterFieldArea: _message.default.format(\"dxPivotGrid-filterFieldArea\"),\r\n                    dataFieldArea: _message.default.format(\"dxPivotGrid-dataFieldArea\")\r\n                }\r\n            },\r\n            dataFieldArea: \"column\",\r\n            \"export\": {\r\n                enabled: false,\r\n                fileName: \"PivotGrid\",\r\n                proxyUrl: void 0,\r\n                ignoreExcelErrors: true\r\n            },\r\n            showRowTotals: true,\r\n            showRowGrandTotals: true,\r\n            showColumnTotals: true,\r\n            showColumnGrandTotals: true,\r\n            hideEmptySummaryCells: true,\r\n            showTotalsPrior: \"none\",\r\n            rowHeaderLayout: \"standard\",\r\n            loadPanel: {\r\n                enabled: true,\r\n                text: _message.default.format(\"Loading\"),\r\n                width: 200,\r\n                height: 70,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            texts: {\r\n                grandTotal: _message.default.format(\"dxPivotGrid-grandTotal\"),\r\n                total: _message.default.getFormatter(\"dxPivotGrid-total\"),\r\n                noData: _message.default.format(\"dxDataGrid-noDataText\"),\r\n                showFieldChooser: _message.default.format(\"dxPivotGrid-showFieldChooser\"),\r\n                expandAll: _message.default.format(\"dxPivotGrid-expandAll\"),\r\n                collapseAll: _message.default.format(\"dxPivotGrid-collapseAll\"),\r\n                sortColumnBySummary: _message.default.getFormatter(\"dxPivotGrid-sortColumnBySummary\"),\r\n                sortRowBySummary: _message.default.getFormatter(\"dxPivotGrid-sortRowBySummary\"),\r\n                removeAllSorting: _message.default.format(\"dxPivotGrid-removeAllSorting\"),\r\n                exportToExcel: _message.default.format(\"dxDataGrid-exportToExcel\"),\r\n                dataNotAvailable: _message.default.format(\"dxPivotGrid-dataNotAvailable\")\r\n            },\r\n            onCellClick: null,\r\n            onCellPrepared: null,\r\n            showBorders: false,\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            },\r\n            onExpandValueChanging: null,\r\n            renderCellCountLimit: 2e4,\r\n            onExporting: null,\r\n            onExported: null,\r\n            onFileSaving: null,\r\n            headerFilter: {\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                showRelevantValues: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: _message.default.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: _message.default.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: _message.default.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _updateCalculatedOptions: function(fields) {\r\n        var that = this;\r\n        (0, _iterator.each)(fields, function(index, field) {\r\n            (0, _iterator.each)(FIELD_CALCULATED_OPTIONS, function(_, optionName) {\r\n                var isCalculated = field._initProperties && optionName in field._initProperties && void 0 === field._initProperties[optionName];\r\n                var needUpdate = void 0 === field[optionName] || isCalculated;\r\n                if (needUpdate) {\r\n                    (0, _uiPivot_grid.setFieldProperty)(field, optionName, that.option(optionName))\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _getDataControllerOptions: function() {\r\n        var that = this;\r\n        return {\r\n            component: that,\r\n            dataSource: that.option(\"dataSource\"),\r\n            texts: that.option(\"texts\"),\r\n            showRowTotals: that.option(\"showRowTotals\"),\r\n            showRowGrandTotals: that.option(\"showRowGrandTotals\"),\r\n            showColumnTotals: that.option(\"showColumnTotals\"),\r\n            showTotalsPrior: that.option(\"showTotalsPrior\"),\r\n            showColumnGrandTotals: that.option(\"showColumnGrandTotals\"),\r\n            dataFieldArea: that.option(\"dataFieldArea\"),\r\n            rowHeaderLayout: that.option(\"rowHeaderLayout\"),\r\n            hideEmptySummaryCells: that.option(\"hideEmptySummaryCells\"),\r\n            onFieldsPrepared: function(fields) {\r\n                that._updateCalculatedOptions(fields)\r\n            }\r\n        }\r\n    },\r\n    _initDataController: function() {\r\n        var that = this;\r\n        that._dataController && that._dataController.dispose();\r\n        that._dataController = new _uiPivot_grid2.DataController(that._getDataControllerOptions());\r\n        if ((0, _window.hasWindow)()) {\r\n            that._dataController.changed.add(function() {\r\n                that._render()\r\n            })\r\n        }\r\n        that._dataController.scrollChanged.add(function(options) {\r\n            that._scrollLeft = options.left;\r\n            that._scrollTop = options.top\r\n        });\r\n        that._dataController.loadingChanged.add(function(isLoading) {\r\n            that._updateLoading()\r\n        });\r\n        that._dataController.progressChanged.add(that._updateLoading.bind(that));\r\n        that._dataController.dataSourceChanged.add(function() {\r\n            that._trigger(\"onChanged\")\r\n        });\r\n        var expandValueChanging = that.option(\"onExpandValueChanging\");\r\n        if (expandValueChanging) {\r\n            that._dataController.expandValueChanging.add(function(e) {\r\n                expandValueChanging(e)\r\n            })\r\n        }\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._initDataController();\r\n        that._scrollLeft = that._scrollTop = null;\r\n        that._initActions()\r\n    },\r\n    _initActions: function() {\r\n        var that = this;\r\n        that._actions = {\r\n            onChanged: that._createActionByOption(\"onChanged\"),\r\n            onContextMenuPreparing: that._createActionByOption(\"onContextMenuPreparing\"),\r\n            onCellClick: that._createActionByOption(\"onCellClick\"),\r\n            onExporting: that._createActionByOption(\"onExporting\"),\r\n            onExported: that._createActionByOption(\"onExported\"),\r\n            onFileSaving: that._createActionByOption(\"onFileSaving\"),\r\n            onCellPrepared: that._createActionByOption(\"onCellPrepared\")\r\n        }\r\n    },\r\n    _trigger: function(eventName, eventArg) {\r\n        this._actions[eventName](eventArg)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var that = this;\r\n        if (FIELD_CALCULATED_OPTIONS.indexOf(args.name) >= 0) {\r\n            var fields = this.getDataSource().fields();\r\n            this._updateCalculatedOptions(fields)\r\n        }\r\n        switch (args.name) {\r\n            case \"dataSource\":\r\n            case \"allowSorting\":\r\n            case \"allowFiltering\":\r\n            case \"allowExpandAll\":\r\n            case \"allowSortingBySummary\":\r\n            case \"scrolling\":\r\n            case \"stateStoring\":\r\n                that._initDataController();\r\n                that._fieldChooserPopup.hide();\r\n                that._renderFieldChooser();\r\n                that._invalidate();\r\n                break;\r\n            case \"texts\":\r\n            case \"showTotalsPrior\":\r\n            case \"showRowTotals\":\r\n            case \"showRowGrandTotals\":\r\n            case \"showColumnTotals\":\r\n            case \"showColumnGrandTotals\":\r\n            case \"hideEmptySummaryCells\":\r\n            case \"dataFieldArea\":\r\n                that._dataController.updateViewOptions(that._getDataControllerOptions());\r\n                break;\r\n            case \"useNativeScrolling\":\r\n            case \"encodeHtml\":\r\n            case \"renderCellCountLimit\":\r\n                break;\r\n            case \"rtlEnabled\":\r\n                that.callBase(args);\r\n                that._renderFieldChooser();\r\n                that._renderContextMenu();\r\n                (0, _window.hasWindow)() && that._renderLoadPanel(that._dataArea.groupElement(), that.$element());\r\n                that._invalidate();\r\n                break;\r\n            case \"export\":\r\n                that._renderDescriptionArea();\r\n                break;\r\n            case \"onExpandValueChanging\":\r\n                break;\r\n            case \"onCellClick\":\r\n            case \"onContextMenuPreparing\":\r\n            case \"onExporting\":\r\n            case \"onExported\":\r\n            case \"onFileSaving\":\r\n            case \"onCellPrepared\":\r\n                that._actions[args.name] = that._createActionByOption(args.name);\r\n                break;\r\n            case \"fieldChooser\":\r\n                that._renderFieldChooser();\r\n                that._renderDescriptionArea();\r\n                break;\r\n            case \"loadPanel\":\r\n                if ((0, _window.hasWindow)()) {\r\n                    that._renderLoadPanel(that._dataArea.groupElement(), that.$element());\r\n                    that._invalidate()\r\n                }\r\n                break;\r\n            case \"fieldPanel\":\r\n                that._renderDescriptionArea();\r\n                that._invalidate();\r\n                break;\r\n            case \"headerFilter\":\r\n                that._renderFieldChooser();\r\n                that._invalidate();\r\n                break;\r\n            case \"showBorders\":\r\n                that._tableElement().toggleClass(BORDERS_CLASS, !!args.value);\r\n                that.updateDimensions();\r\n                break;\r\n            case \"wordWrapEnabled\":\r\n                that._tableElement().toggleClass(\"dx-word-wrap\", !!args.value);\r\n                that.updateDimensions();\r\n                break;\r\n            case \"rowHeaderLayout\":\r\n                that._tableElement().find(\".\" + ROW_AREA_CELL_CLASS).toggleClass(\"dx-area-tree-view\", \"tree\" === args.value);\r\n                that._dataController.updateViewOptions(that._getDataControllerOptions());\r\n                break;\r\n            case \"height\":\r\n            case \"width\":\r\n                that._hasHeight = null;\r\n                that.callBase(args);\r\n                that.resize();\r\n                break;\r\n            default:\r\n                that.callBase(args)\r\n        }\r\n    },\r\n    _updateScrollPosition: function(columnsArea, rowsArea, dataArea) {\r\n        var that = this;\r\n        var scrollTop;\r\n        var scrollLeft;\r\n        var scrolled = that._scrollTop || that._scrollLeft;\r\n        if (that._scrollUpdating) {\r\n            return\r\n        }\r\n        that._scrollUpdating = true;\r\n        if (rowsArea && !rowsArea.hasScroll() && that._hasHeight) {\r\n            that._scrollTop = null\r\n        }\r\n        if (columnsArea && !columnsArea.hasScroll()) {\r\n            that._scrollLeft = null\r\n        }\r\n        if (null !== that._scrollTop || null !== that._scrollLeft || scrolled || that.option(\"rtlEnabled\")) {\r\n            scrollTop = that._scrollTop || 0;\r\n            scrollLeft = that._scrollLeft || 0;\r\n            dataArea.scrollTo({\r\n                x: scrollLeft,\r\n                y: scrollTop\r\n            });\r\n            columnsArea.scrollTo(scrollLeft);\r\n            rowsArea.scrollTo(scrollTop);\r\n            that._dataController.updateWindowScrollPosition(that._scrollTop)\r\n        }\r\n        that._scrollUpdating = false\r\n    },\r\n    _subscribeToEvents: function(columnsArea, rowsArea, dataArea) {\r\n        var that = this;\r\n        var scrollHandler = function(e) {\r\n            var scrollOffset = e.scrollOffset;\r\n            var leftOffset = (0, _type.isDefined)(scrollOffset.left) ? scrollOffset.left : that._scrollLeft;\r\n            var topOffset = (0, _type.isDefined)(scrollOffset.top) && that._hasHeight ? scrollOffset.top : that._scrollTop;\r\n            if ((that._scrollLeft || 0) !== (leftOffset || 0) || (that._scrollTop || 0) !== (topOffset || 0)) {\r\n                that._scrollLeft = leftOffset;\r\n                that._scrollTop = topOffset;\r\n                that._updateScrollPosition(columnsArea, rowsArea, dataArea);\r\n                if (\"virtual\" === that.option(\"scrolling.mode\")) {\r\n                    that._dataController.setViewportPosition(that._scrollLeft, that._scrollTop)\r\n                }\r\n            }\r\n        };\r\n        (0, _iterator.each)([columnsArea, rowsArea, dataArea], function(_, area) {\r\n            subscribeToScrollEvent(area, scrollHandler)\r\n        });\r\n        !that._hasHeight && that._dataController.subscribeToWindowScrollEvents(dataArea.groupElement())\r\n    },\r\n    _clean: _common.noop,\r\n    _needDelayResizing: function(cellsInfo) {\r\n        var cellsCount = cellsInfo.length * (cellsInfo.length ? cellsInfo[0].length : 0);\r\n        return cellsCount > this.option(\"renderCellCountLimit\")\r\n    },\r\n    _renderFieldChooser: function() {\r\n        var that = this;\r\n        var container = that._pivotGridContainer;\r\n        var fieldChooserOptions = that.option(\"fieldChooser\") || {};\r\n        var toolbarItems = \"onDemand\" === fieldChooserOptions.applyChangesMode ? [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: _message.default.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    that._fieldChooserPopup.$content().dxPivotGridFieldChooser(\"applyChanges\");\r\n                    that._fieldChooserPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: _message.default.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._fieldChooserPopup.hide()\r\n                }\r\n            }\r\n        }] : [];\r\n        var fieldChooserComponentOptions = {\r\n            layout: fieldChooserOptions.layout,\r\n            texts: fieldChooserOptions.texts || {},\r\n            dataSource: that.getDataSource(),\r\n            allowSearch: fieldChooserOptions.allowSearch,\r\n            searchTimeout: fieldChooserOptions.searchTimeout,\r\n            width: void 0,\r\n            height: void 0,\r\n            headerFilter: that.option(\"headerFilter\"),\r\n            encodeHtml: that.option(\"encodeHtml\"),\r\n            applyChangesMode: fieldChooserOptions.applyChangesMode,\r\n            onContextMenuPreparing: function(e) {\r\n                that._trigger(\"onContextMenuPreparing\", e)\r\n            }\r\n        };\r\n        var popupOptions = {\r\n            shading: false,\r\n            title: fieldChooserOptions.title,\r\n            width: fieldChooserOptions.width,\r\n            height: fieldChooserOptions.height,\r\n            showCloseButton: true,\r\n            resizeEnabled: true,\r\n            minWidth: fieldChooserOptions.minWidth,\r\n            minHeight: fieldChooserOptions.minHeight,\r\n            toolbarItems: toolbarItems,\r\n            onResize: function(e) {\r\n                e.component.$content().dxPivotGridFieldChooser(\"updateDimensions\")\r\n            },\r\n            onShown: function(e) {\r\n                that._createComponent(e.component.content(), _uiPivot_grid6.default, fieldChooserComponentOptions)\r\n            },\r\n            onHidden: function(e) {\r\n                var fieldChooser = e.component.$content().dxPivotGridFieldChooser(\"instance\");\r\n                fieldChooser.resetTreeView();\r\n                fieldChooser.cancelChanges()\r\n            }\r\n        };\r\n        if (that._fieldChooserPopup) {\r\n            that._fieldChooserPopup.option(popupOptions);\r\n            that._fieldChooserPopup.$content().dxPivotGridFieldChooser(fieldChooserComponentOptions)\r\n        } else {\r\n            that._fieldChooserPopup = that._createComponent((0, _renderer.default)(DIV).addClass(FIELD_CHOOSER_POPUP_CLASS).appendTo(container), _popup.default, popupOptions)\r\n        }\r\n    },\r\n    _renderContextMenu: function() {\r\n        var that = this;\r\n        var $container = that._pivotGridContainer;\r\n        if (that._contextMenu) {\r\n            that._contextMenu.$element().remove()\r\n        }\r\n        that._contextMenu = that._createComponent((0, _renderer.default)(DIV).appendTo($container), _context_menu.default, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                actionArgs.cancel = true;\r\n                if (!event) {\r\n                    return\r\n                }\r\n                var targetElement = event.target.cellIndex >= 0 ? event.target : (0, _renderer.default)(event.target).closest(\"td\").get(0);\r\n                if (!targetElement) {\r\n                    return\r\n                }\r\n                var args = that._createEventArgs(targetElement, event);\r\n                var items = that._getContextMenuItems(args);\r\n                if (items) {\r\n                    actionArgs.component.option(\"items\", items);\r\n                    actionArgs.cancel = false;\r\n                    return\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: PIVOTGRID_CLASS,\r\n            target: that.$element()\r\n        })\r\n    },\r\n    _getContextMenuItems: function(e) {\r\n        var that = this;\r\n        var items = [];\r\n        var texts = that.option(\"texts\");\r\n        if (\"row\" === e.area || \"column\" === e.area) {\r\n            var areaFields = e[e.area + \"Fields\"];\r\n            var oppositeAreaFields = e[\"column\" === e.area ? \"rowFields\" : \"columnFields\"];\r\n            var field = e.cell.path && areaFields[e.cell.path.length - 1];\r\n            var dataSource = that.getDataSource();\r\n            if (field && field.allowExpandAll && e.cell.path.length < e[e.area + \"Fields\"].length && !dataSource.paginate()) {\r\n                items.push({\r\n                    beginGroup: true,\r\n                    icon: \"none\",\r\n                    text: texts.expandAll,\r\n                    onItemClick: function() {\r\n                        dataSource.expandAll(field.index)\r\n                    }\r\n                });\r\n                items.push({\r\n                    text: texts.collapseAll,\r\n                    icon: \"none\",\r\n                    onItemClick: function() {\r\n                        dataSource.collapseAll(field.index)\r\n                    }\r\n                })\r\n            }\r\n            if (e.cell.isLast && !dataSource.paginate()) {\r\n                var sortingBySummaryItemCount = 0;\r\n                (0, _iterator.each)(oppositeAreaFields, function(index, field) {\r\n                    if (!field.allowSortingBySummary) {\r\n                        return\r\n                    }(0, _iterator.each)(e.dataFields, function(dataIndex, dataField) {\r\n                        if ((0, _type.isDefined)(e.cell.dataIndex) && e.cell.dataIndex !== dataIndex) {\r\n                            return\r\n                        }\r\n                        var showDataFieldCaption = !(0, _type.isDefined)(e.cell.dataIndex) && e.dataFields.length > 1;\r\n                        var textFormat = \"column\" === e.area ? texts.sortColumnBySummary : texts.sortRowBySummary;\r\n                        var checked = (0, _uiPivot_grid.findField)(e.dataFields, field.sortBySummaryField) === dataIndex && (e.cell.path || []).join(\"/\") === (field.sortBySummaryPath || []).join(\"/\");\r\n                        var text = (0, _string.format)(textFormat, showDataFieldCaption ? field.caption + \" - \" + dataField.caption : field.caption);\r\n                        items.push({\r\n                            beginGroup: 0 === sortingBySummaryItemCount,\r\n                            icon: checked ? \"desc\" === field.sortOrder ? \"sortdowntext\" : \"sortuptext\" : \"none\",\r\n                            text: text,\r\n                            onItemClick: function() {\r\n                                dataSource.field(field.index, {\r\n                                    sortBySummaryField: dataField.name || dataField.caption || dataField.dataField,\r\n                                    sortBySummaryPath: e.cell.path,\r\n                                    sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\r\n                                });\r\n                                dataSource.load()\r\n                            }\r\n                        });\r\n                        sortingBySummaryItemCount++\r\n                    })\r\n                });\r\n                (0, _iterator.each)(oppositeAreaFields, function(index, field) {\r\n                    if (!field.allowSortingBySummary || !(0, _type.isDefined)(field.sortBySummaryField)) {\r\n                        return\r\n                    }\r\n                    items.push({\r\n                        beginGroup: 0 === sortingBySummaryItemCount,\r\n                        icon: \"none\",\r\n                        text: texts.removeAllSorting,\r\n                        onItemClick: function() {\r\n                            (0, _iterator.each)(oppositeAreaFields, function(index, field) {\r\n                                dataSource.field(field.index, {\r\n                                    sortBySummaryField: void 0,\r\n                                    sortBySummaryPath: void 0,\r\n                                    sortOrder: void 0\r\n                                })\r\n                            });\r\n                            dataSource.load()\r\n                        }\r\n                    });\r\n                    return false\r\n                })\r\n            }\r\n        }\r\n        if (that.option(\"fieldChooser.enabled\")) {\r\n            items.push({\r\n                beginGroup: true,\r\n                icon: \"columnchooser\",\r\n                text: texts.showFieldChooser,\r\n                onItemClick: function() {\r\n                    that._fieldChooserPopup.show()\r\n                }\r\n            })\r\n        }\r\n        if (that.option(\"export.enabled\")) {\r\n            items.push({\r\n                beginGroup: true,\r\n                icon: \"xlsxfile\",\r\n                text: texts.exportToExcel,\r\n                onItemClick: function() {\r\n                    that.exportToExcel()\r\n                }\r\n            })\r\n        }\r\n        e.items = items;\r\n        that._trigger(\"onContextMenuPreparing\", e);\r\n        items = e.items;\r\n        if (items && items.length) {\r\n            return items\r\n        }\r\n    },\r\n    _createEventArgs: function(targetElement, dxEvent) {\r\n        var that = this;\r\n        var dataSource = that.getDataSource();\r\n        var args = {\r\n            rowFields: dataSource.getAreaFields(\"row\"),\r\n            columnFields: dataSource.getAreaFields(\"column\"),\r\n            dataFields: dataSource.getAreaFields(\"data\"),\r\n            event: dxEvent\r\n        };\r\n        if (clickedOnFieldsArea((0, _renderer.default)(targetElement))) {\r\n            return (0, _extend.extend)(that._createFieldArgs(targetElement), args)\r\n        } else {\r\n            return (0, _extend.extend)(that._createCellArgs(targetElement), args)\r\n        }\r\n    },\r\n    _createFieldArgs: function(targetElement) {\r\n        var field = (0, _renderer.default)(targetElement).children().data(\"field\");\r\n        var args = {\r\n            field: field\r\n        };\r\n        return (0, _type.isDefined)(field) ? args : {}\r\n    },\r\n    _createCellArgs: function(cellElement) {\r\n        var $cellElement = (0, _renderer.default)(cellElement);\r\n        var columnIndex = cellElement.cellIndex;\r\n        var rowIndex = cellElement.parentElement.rowIndex;\r\n        var $table = $cellElement.closest(\"table\");\r\n        var data = $table.data(\"data\");\r\n        var cell = data && data[rowIndex] && data[rowIndex][columnIndex];\r\n        var args = {\r\n            area: $table.data(\"area\"),\r\n            rowIndex: rowIndex,\r\n            columnIndex: columnIndex,\r\n            cellElement: (0, _element.getPublicElement)($cellElement),\r\n            cell: cell\r\n        };\r\n        return args\r\n    },\r\n    _handleCellClick: function(e) {\r\n        var that = this;\r\n        var args = that._createEventArgs(e.currentTarget, e);\r\n        var cell = args.cell;\r\n        if (!cell || !args.area && (args.rowIndex || args.columnIndex)) {\r\n            return\r\n        }\r\n        that._trigger(\"onCellClick\", args);\r\n        cell && !args.cancel && (0, _type.isDefined)(cell.expanded) && setTimeout(function() {\r\n            that._dataController[cell.expanded ? \"collapseHeaderItem\" : \"expandHeaderItem\"](args.area, cell.path)\r\n        })\r\n    },\r\n    _getNoDataText: function() {\r\n        return this.option(\"texts.noData\")\r\n    },\r\n    _renderNoDataText: _uiGrid_core.default.renderNoDataText,\r\n    _renderLoadPanel: _uiGrid_core.default.renderLoadPanel,\r\n    _updateLoading: function(progress) {\r\n        var that = this;\r\n        var isLoading = that._dataController.isLoading();\r\n        if (!that._loadPanel) {\r\n            return\r\n        }\r\n        var loadPanelVisible = that._loadPanel.option(\"visible\");\r\n        if (!loadPanelVisible) {\r\n            that._startLoadingTime = new Date\r\n        }\r\n        if (isLoading) {\r\n            if (progress) {\r\n                if (new Date - that._startLoadingTime >= 1e3) {\r\n                    that._loadPanel.option(\"message\", Math.floor(100 * progress) + \"%\")\r\n                }\r\n            } else {\r\n                that._loadPanel.option(\"message\", that.option(\"loadPanel.text\"))\r\n            }\r\n        }\r\n        clearTimeout(that._hideLoadingTimeoutID);\r\n        if (loadPanelVisible && !isLoading) {\r\n            that._hideLoadingTimeoutID = setTimeout(function() {\r\n                that._loadPanel.option(\"visible\", false);\r\n                that.$element().removeClass(OVERFLOW_HIDDEN_CLASS)\r\n            })\r\n        } else {\r\n            that._loadPanel.option(\"visible\", isLoading);\r\n            that.$element().toggleClass(OVERFLOW_HIDDEN_CLASS, !isLoading)\r\n        }\r\n    },\r\n    _renderDescriptionArea: function() {\r\n        var _this = this;\r\n        var $element = this.$element();\r\n        var $descriptionCell = $element.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\r\n        var $toolbarContainer = (0, _renderer.default)(DIV).addClass(\"dx-pivotgrid-toolbar\");\r\n        var fieldPanel = this.option(\"fieldPanel\");\r\n        var $filterHeader = $element.find(\".dx-filter-header\");\r\n        var $columnHeader = $element.find(\".dx-column-header\");\r\n        var $targetContainer;\r\n        if (fieldPanel.visible && fieldPanel.showFilterFields) {\r\n            $targetContainer = $filterHeader\r\n        } else {\r\n            if (fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)) {\r\n                $targetContainer = $columnHeader\r\n            } else {\r\n                $targetContainer = $descriptionCell\r\n            }\r\n        }\r\n        $columnHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)));\r\n        $filterHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && fieldPanel.showFilterFields));\r\n        $descriptionCell.toggleClass(\"dx-pivotgrid-background\", fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields || fieldPanel.showRowFields));\r\n        this.$element().find(\".dx-pivotgrid-toolbar\").remove();\r\n        $toolbarContainer.prependTo($targetContainer);\r\n        if (this.option(\"fieldChooser.enabled\")) {\r\n            var $buttonElement = (0, _renderer.default)(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-field-chooser-button\");\r\n            var buttonOptions = {\r\n                icon: \"columnchooser\",\r\n                hint: this.option(\"texts.showFieldChooser\"),\r\n                onClick: function() {\r\n                    _this.getFieldChooserPopup().show()\r\n                }\r\n            };\r\n            this._createComponent($buttonElement, \"dxButton\", buttonOptions)\r\n        }\r\n        if (this.option(\"export.enabled\")) {\r\n            var _$buttonElement = (0, _renderer.default)(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-export-button\");\r\n            var _buttonOptions = {\r\n                icon: \"xlsxfile\",\r\n                hint: this.option(\"texts.exportToExcel\"),\r\n                onClick: function() {\r\n                    _this.exportToExcel()\r\n                }\r\n            };\r\n            this._createComponent(_$buttonElement, \"dxButton\", _buttonOptions)\r\n        }\r\n    },\r\n    _detectHasContainerHeight: function() {\r\n        var that = this;\r\n        var element = that.$element();\r\n        if ((0, _type.isDefined)(that._hasHeight)) {\r\n            var height = that.option(\"height\") || that.$element().get(0).style.height;\r\n            if (height && that._hasHeight ^ \"auto\" !== height) {\r\n                that._hasHeight = null\r\n            }\r\n        }\r\n        if ((0, _type.isDefined)(that._hasHeight) || element.is(\":hidden\")) {\r\n            return\r\n        }\r\n        that._pivotGridContainer.addClass(\"dx-hidden\");\r\n        var testElement = (0, _renderer.default)(DIV).height(TEST_HEIGHT);\r\n        element.append(testElement);\r\n        that._hasHeight = element.height() !== TEST_HEIGHT;\r\n        that._pivotGridContainer.removeClass(\"dx-hidden\");\r\n        testElement.remove()\r\n    },\r\n    _renderHeaders: function(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer) {\r\n        var that = this;\r\n        var dataSource = that.getDataSource();\r\n        that._rowFields = that._rowFields || new _uiPivot_grid5.FieldsArea(that, \"row\");\r\n        that._rowFields.render(rowHeaderContainer, dataSource.getAreaFields(\"row\"));\r\n        that._columnFields = that._columnFields || new _uiPivot_grid5.FieldsArea(that, \"column\");\r\n        that._columnFields.render(columnHeaderContainer, dataSource.getAreaFields(\"column\"));\r\n        that._filterFields = that._filterFields || new _uiPivot_grid5.FieldsArea(that, \"filter\");\r\n        that._filterFields.render(filterHeaderContainer, dataSource.getAreaFields(\"filter\"));\r\n        that._dataFields = that._dataFields || new _uiPivot_grid5.FieldsArea(that, \"data\");\r\n        that._dataFields.render(dataHeaderContainer, dataSource.getAreaFields(\"data\"));\r\n        that.$element().dxPivotGridFieldChooserBase(\"instance\").renderSortable()\r\n    },\r\n    _createTableElement: function() {\r\n        var that = this;\r\n        var $table = (0, _renderer.default)(\"<table>\").css({\r\n            width: \"100%\"\r\n        }).toggleClass(BORDERS_CLASS, !!that.option(\"showBorders\")).toggleClass(\"dx-word-wrap\", !!that.option(\"wordWrapEnabled\"));\r\n        _events_engine.default.on($table, (0, _index.addNamespace)(_click.name, \"dxPivotGrid\"), \"td\", that._handleCellClick.bind(that));\r\n        return $table\r\n    },\r\n    _renderDataArea: function(dataAreaElement) {\r\n        var that = this;\r\n        var dataArea = that._dataArea || new _uiPivot_grid3.DataArea(that);\r\n        that._dataArea = dataArea;\r\n        dataArea.render(dataAreaElement, that._dataController.getCellsInfo());\r\n        return dataArea\r\n    },\r\n    _renderRowsArea: function(rowsAreaElement) {\r\n        var that = this;\r\n        var rowsArea = that._rowsArea || new _uiPivot_grid4.VerticalHeadersArea(that);\r\n        that._rowsArea = rowsArea;\r\n        rowsArea.render(rowsAreaElement, that._dataController.getRowsInfo());\r\n        return rowsArea\r\n    },\r\n    _renderColumnsArea: function(columnsAreaElement) {\r\n        var that = this;\r\n        var columnsArea = that._columnsArea || new _uiPivot_grid4.HorizontalHeadersArea(that);\r\n        that._columnsArea = columnsArea;\r\n        columnsArea.render(columnsAreaElement, that._dataController.getColumnsInfo());\r\n        return columnsArea\r\n    },\r\n    _initMarkup: function() {\r\n        var that = this;\r\n        that.callBase.apply(this, arguments);\r\n        that.$element().addClass(PIVOTGRID_CLASS)\r\n    },\r\n    _renderContentImpl: function() {\r\n        var that = this;\r\n        var columnsAreaElement;\r\n        var rowsAreaElement;\r\n        var dataAreaElement;\r\n        var tableElement;\r\n        var isFirstDrawing = !that._pivotGridContainer;\r\n        var rowHeaderContainer;\r\n        var columnHeaderContainer;\r\n        var filterHeaderContainer;\r\n        var dataHeaderContainer;\r\n        tableElement = !isFirstDrawing && that._tableElement();\r\n        if (!tableElement) {\r\n            that.$element().addClass(ROW_LINES_CLASS).addClass(FIELDS_CONTAINER_CLASS);\r\n            that._pivotGridContainer = (0, _renderer.default)(DIV).addClass(\"dx-pivotgrid-container\");\r\n            that._renderFieldChooser();\r\n            that._renderContextMenu();\r\n            columnsAreaElement = (0, _renderer.default)(TD).addClass(COLUMN_AREA_CELL_CLASS);\r\n            rowsAreaElement = (0, _renderer.default)(TD).addClass(ROW_AREA_CELL_CLASS);\r\n            dataAreaElement = (0, _renderer.default)(TD).addClass(DATA_AREA_CELL_CLASS);\r\n            tableElement = that._createTableElement();\r\n            dataHeaderContainer = (0, _renderer.default)(TD).addClass(\"dx-data-header\");\r\n            filterHeaderContainer = (0, _renderer.default)(\"<td>\").attr(\"colspan\", \"2\").addClass(\"dx-filter-header\");\r\n            columnHeaderContainer = (0, _renderer.default)(TD).addClass(\"dx-column-header\");\r\n            rowHeaderContainer = (0, _renderer.default)(TD).addClass(DESCRIPTION_AREA_CELL_CLASS);\r\n            (0, _renderer.default)(TR).append(filterHeaderContainer).appendTo(tableElement);\r\n            (0, _renderer.default)(TR).append(dataHeaderContainer).append(columnHeaderContainer).appendTo(tableElement);\r\n            (0, _renderer.default)(TR).toggleClass(\"dx-ie\", true === _browser.default.msie).append(rowHeaderContainer).append(columnsAreaElement).appendTo(tableElement);\r\n            (0, _renderer.default)(TR).addClass(BOTTOM_ROW_CLASS).append(rowsAreaElement).append(dataAreaElement).appendTo(tableElement);\r\n            that._pivotGridContainer.append(tableElement);\r\n            that.$element().append(that._pivotGridContainer);\r\n            if (\"tree\" === that.option(\"rowHeaderLayout\")) {\r\n                rowsAreaElement.addClass(\"dx-area-tree-view\")\r\n            }\r\n        }\r\n        that.$element().addClass(OVERFLOW_HIDDEN_CLASS);\r\n        that._createComponent(that.$element(), _uiPivot_grid7.default, {\r\n            dataSource: that.getDataSource(),\r\n            encodeHtml: that.option(\"encodeHtml\"),\r\n            allowFieldDragging: that.option(\"fieldPanel.allowFieldDragging\"),\r\n            headerFilter: that.option(\"headerFilter\"),\r\n            visible: that.option(\"visible\")\r\n        });\r\n        var dataArea = that._renderDataArea(dataAreaElement);\r\n        var rowsArea = that._renderRowsArea(rowsAreaElement);\r\n        var columnsArea = that._renderColumnsArea(columnsAreaElement);\r\n        dataArea.tableElement().prepend(columnsArea.headElement());\r\n        if (isFirstDrawing) {\r\n            that._renderLoadPanel(dataArea.groupElement().parent(), that.$element());\r\n            that._renderDescriptionArea();\r\n            rowsArea.processScroll();\r\n            columnsArea.processScroll()\r\n        } [dataArea, rowsArea, columnsArea].forEach(function(area) {\r\n            unsubscribeScrollEvents(area)\r\n        });\r\n        that._renderHeaders(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer);\r\n        that._update(isFirstDrawing)\r\n    },\r\n    _update: function(isFirstDrawing) {\r\n        var that = this;\r\n        var updateHandler = function() {\r\n            that.updateDimensions()\r\n        };\r\n        if (that._needDelayResizing(that._dataArea.getData()) && isFirstDrawing) {\r\n            setTimeout(updateHandler)\r\n        } else {\r\n            updateHandler()\r\n        }\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        if (!this._dataController.isLoading()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    getScrollPath: function(area) {\r\n        var that = this;\r\n        if (\"column\" === area) {\r\n            return that._columnsArea.getScrollPath(that._scrollLeft)\r\n        } else {\r\n            return that._rowsArea.getScrollPath(that._scrollTop)\r\n        }\r\n    },\r\n    getDataSource: function() {\r\n        return this._dataController.getDataSource()\r\n    },\r\n    getFieldChooserPopup: function() {\r\n        return this._fieldChooserPopup\r\n    },\r\n    hasScroll: function(area) {\r\n        var that = this;\r\n        return \"column\" === area ? that._columnsArea.hasScroll() : that._rowsArea.hasScroll()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.updateDimensions()\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        var that = this;\r\n        clearTimeout(that._hideLoadingTimeoutID);\r\n        that.callBase.apply(that, arguments);\r\n        if (that._dataController) {\r\n            that._dataController.dispose()\r\n        }\r\n    },\r\n    _tableElement: function() {\r\n        return this.$element().find(\"table\").first()\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        return \"dx-pivotgrid-\" + className\r\n    },\r\n    resize: function() {\r\n        this.updateDimensions()\r\n    },\r\n    isReady: function() {\r\n        return this.callBase() && !this._dataController.isLoading()\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this;\r\n        var groupWidth;\r\n        var tableElement = that._tableElement();\r\n        var rowsArea = that._rowsArea;\r\n        var columnsArea = that._columnsArea;\r\n        var dataArea = that._dataArea;\r\n        var bordersWidth;\r\n        var totalWidth = 0;\r\n        var totalHeight = 0;\r\n        var rowsAreaWidth = 0;\r\n        var hasRowsScroll;\r\n        var hasColumnsScroll;\r\n        var scrollingOptions = that.option(\"scrolling\") || {};\r\n        var scrollBarInfo = getScrollBarInfo(scrollingOptions.useNative);\r\n        var scrollBarWidth = scrollBarInfo.scrollBarWidth;\r\n        var dataAreaCell = tableElement.find(\".\" + DATA_AREA_CELL_CLASS);\r\n        var rowAreaCell = tableElement.find(\".\" + ROW_AREA_CELL_CLASS);\r\n        var columnAreaCell = tableElement.find(\".\" + COLUMN_AREA_CELL_CLASS);\r\n        var descriptionCell = tableElement.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\r\n        var filterHeaderCell = tableElement.find(\".dx-filter-header\");\r\n        var columnHeaderCell = tableElement.find(\".dx-column-header\");\r\n        var rowFieldsHeader = that._rowFields;\r\n        var d = new _deferred.Deferred;\r\n        if (!(0, _window.hasWindow)()) {\r\n            return\r\n        }\r\n        var needSynchronizeFieldPanel = rowFieldsHeader.isVisible() && \"tree\" !== that.option(\"rowHeaderLayout\");\r\n        that._detectHasContainerHeight();\r\n        if (!dataArea.headElement().length) {\r\n            dataArea.tableElement().prepend(columnsArea.headElement())\r\n        }\r\n        if (needSynchronizeFieldPanel) {\r\n            rowsArea.updateColspans(rowFieldsHeader.getColumnsCount());\r\n            rowsArea.tableElement().prepend(rowFieldsHeader.headElement())\r\n        }\r\n        tableElement.addClass(INCOMPRESSIBLE_FIELDS_CLASS);\r\n        dataArea.reset();\r\n        rowsArea.reset();\r\n        columnsArea.reset();\r\n        rowFieldsHeader.reset();\r\n        var calculateHasScroll = function(areaSize, totalSize) {\r\n            return totalSize - areaSize >= 1\r\n        };\r\n        var calculateGroupHeight = function(dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth) {\r\n            return hasRowsScroll ? dataAreaHeight : totalHeight + (hasColumnsScroll ? scrollBarWidth : 0)\r\n        };\r\n        (0, _common.deferUpdate)(function() {\r\n            var resultWidths = dataArea.getColumnsWidth();\r\n            var rowHeights = rowsArea.getRowsHeight();\r\n            var rowsAreaHeights = needSynchronizeFieldPanel ? rowHeights.slice(1) : rowHeights;\r\n            var dataAreaHeights = dataArea.getRowsHeight();\r\n            var descriptionCellHeight = (0, _size.getSize)(descriptionCell[0], \"height\", {\r\n                paddings: true,\r\n                borders: true,\r\n                margins: true\r\n            }) + (needSynchronizeFieldPanel ? rowHeights[0] : 0);\r\n            var columnsAreaRowCount = that._dataController.getColumnsInfo().length;\r\n            var resultHeights = (0, _uiPivot_grid.mergeArraysByMaxValue)(rowsAreaHeights, dataAreaHeights.slice(columnsAreaRowCount));\r\n            var columnsAreaRowHeights = dataAreaHeights.slice(0, columnsAreaRowCount);\r\n            var columnsAreaHeight = getArraySum(columnsAreaRowHeights);\r\n            var rowsAreaColumnWidths = rowsArea.getColumnsWidth();\r\n            var filterAreaHeight = 0;\r\n            var dataAreaHeight = 0;\r\n            if (that._hasHeight) {\r\n                filterAreaHeight = filterHeaderCell.height();\r\n                var $dataHeader = tableElement.find(\".dx-data-header\");\r\n                var dataHeaderHeight = _browser.default.msie ? (0, _size.getSize)($dataHeader.get(0), \"height\", {\r\n                    paddings: false,\r\n                    borders: false,\r\n                    margins: false\r\n                }) : $dataHeader.height();\r\n                bordersWidth = getCommonBorderWidth([columnAreaCell, dataAreaCell, tableElement, columnHeaderCell, filterHeaderCell], \"height\");\r\n                dataAreaHeight = that.$element().height() - filterAreaHeight - dataHeaderHeight - (Math.max(dataArea.headElement().height(), columnAreaCell.height(), descriptionCellHeight) + bordersWidth)\r\n            }\r\n            totalWidth = dataArea.tableElement().width();\r\n            totalHeight = getArraySum(resultHeights);\r\n            if (!totalWidth || !totalHeight) {\r\n                d.resolve();\r\n                return\r\n            }\r\n            rowsAreaWidth = getArraySum(rowsAreaColumnWidths);\r\n            var elementWidth = that.$element().width();\r\n            bordersWidth = getCommonBorderWidth([rowAreaCell, dataAreaCell, tableElement], \"width\");\r\n            groupWidth = elementWidth - rowsAreaWidth - bordersWidth;\r\n            groupWidth = groupWidth > 0 ? groupWidth : totalWidth;\r\n            var diff = totalWidth - groupWidth;\r\n            var needAdjustWidthOnZoom = diff >= 0 && diff <= 2;\r\n            if (needAdjustWidthOnZoom) {\r\n                adjustSizeArray(resultWidths, diff);\r\n                totalWidth = groupWidth\r\n            }\r\n            hasRowsScroll = that._hasHeight && calculateHasScroll(dataAreaHeight, totalHeight);\r\n            hasColumnsScroll = calculateHasScroll(groupWidth, totalWidth);\r\n            var groupHeight = calculateGroupHeight(dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\r\n            (0, _common.deferRender)(function() {\r\n                columnsArea.tableElement().append(dataArea.headElement());\r\n                rowFieldsHeader.tableElement().append(rowsArea.headElement());\r\n                if (!hasColumnsScroll && hasRowsScroll && scrollBarWidth) {\r\n                    adjustSizeArray(resultWidths, scrollBarWidth);\r\n                    totalWidth -= scrollBarWidth\r\n                }\r\n                if (descriptionCellHeight > columnsAreaHeight) {\r\n                    adjustSizeArray(columnsAreaRowHeights, columnsAreaHeight - descriptionCellHeight);\r\n                    columnsArea.setRowsHeight(columnsAreaRowHeights)\r\n                }\r\n                tableElement.removeClass(INCOMPRESSIBLE_FIELDS_CLASS);\r\n                columnHeaderCell.children().css(\"maxWidth\", groupWidth);\r\n                columnsArea.groupWidth(groupWidth);\r\n                columnsArea.processScrollBarSpacing(hasRowsScroll ? scrollBarWidth : 0);\r\n                columnsArea.setColumnsWidth(resultWidths);\r\n                rowsArea.groupHeight(that._hasHeight ? groupHeight : \"auto\");\r\n                rowsArea.processScrollBarSpacing(hasColumnsScroll ? scrollBarWidth : 0);\r\n                rowsArea.setColumnsWidth(rowsAreaColumnWidths);\r\n                rowsArea.setRowsHeight(resultHeights);\r\n                dataArea.setColumnsWidth(resultWidths);\r\n                dataArea.setRowsHeight(resultHeights);\r\n                dataArea.groupWidth(groupWidth);\r\n                dataArea.groupHeight(that._hasHeight ? groupHeight : \"auto\");\r\n                needSynchronizeFieldPanel && rowFieldsHeader.setColumnsWidth(rowsAreaColumnWidths);\r\n                dataAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\r\n                rowAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\r\n                if (!that._hasHeight && elementWidth !== that.$element().width()) {\r\n                    var _diff = elementWidth - that.$element().width();\r\n                    if (!hasColumnsScroll) {\r\n                        adjustSizeArray(resultWidths, _diff);\r\n                        columnsArea.setColumnsWidth(resultWidths);\r\n                        dataArea.setColumnsWidth(resultWidths)\r\n                    }\r\n                    dataArea.groupWidth(groupWidth - _diff);\r\n                    columnsArea.groupWidth(groupWidth - _diff)\r\n                }\r\n                if (that._hasHeight && that._filterFields.isVisible() && filterHeaderCell.height() !== filterAreaHeight) {\r\n                    var _diff2 = filterHeaderCell.height() - filterAreaHeight;\r\n                    if (_diff2 > 0) {\r\n                        hasRowsScroll = calculateHasScroll(dataAreaHeight - _diff2, totalHeight);\r\n                        var _groupHeight = calculateGroupHeight(dataAreaHeight - _diff2, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\r\n                        dataArea.groupHeight(_groupHeight);\r\n                        rowsArea.groupHeight(_groupHeight)\r\n                    }\r\n                }\r\n                if (\"virtual\" === scrollingOptions.mode) {\r\n                    var virtualContentParams = that._dataController.calculateVirtualContentParams({\r\n                        virtualRowHeight: scrollingOptions.virtualRowHeight,\r\n                        virtualColumnWidth: scrollingOptions.virtualColumnWidth,\r\n                        itemWidths: resultWidths,\r\n                        itemHeights: resultHeights,\r\n                        rowCount: resultHeights.length,\r\n                        columnCount: resultWidths.length,\r\n                        viewportWidth: groupWidth,\r\n                        viewportHeight: that._hasHeight ? groupHeight : (0, _renderer.default)(window).outerHeight()\r\n                    });\r\n                    dataArea.setVirtualContentParams({\r\n                        top: virtualContentParams.contentTop,\r\n                        left: virtualContentParams.contentLeft,\r\n                        width: virtualContentParams.width,\r\n                        height: virtualContentParams.height\r\n                    });\r\n                    rowsArea.setVirtualContentParams({\r\n                        top: virtualContentParams.contentTop,\r\n                        width: rowsAreaWidth,\r\n                        height: virtualContentParams.height\r\n                    });\r\n                    columnsArea.setVirtualContentParams({\r\n                        left: virtualContentParams.contentLeft,\r\n                        width: virtualContentParams.width,\r\n                        height: columnsArea.groupElement().height()\r\n                    })\r\n                }\r\n                var updateScrollableResults = [];\r\n                dataArea.processScroll(scrollBarInfo.scrollBarUseNative, hasColumnsScroll, hasRowsScroll);\r\n                (0, _iterator.each)([columnsArea, rowsArea, dataArea], function(_, area) {\r\n                    updateScrollableResults.push(area && area.updateScrollable())\r\n                });\r\n                that._updateLoading();\r\n                that._renderNoDataText(dataAreaCell);\r\n                _deferred.when.apply(_renderer.default, updateScrollableResults).done(function() {\r\n                    that._updateScrollPosition(columnsArea, rowsArea, dataArea);\r\n                    that._subscribeToEvents(columnsArea, rowsArea, dataArea);\r\n                    d.resolve()\r\n                })\r\n            })\r\n        });\r\n        return d\r\n    },\r\n    applyPartialDataSource: function(area, path, dataSource) {\r\n        this._dataController.applyPartialDataSource(area, path, dataSource)\r\n    }\r\n}).inherit(_uiPivot_grid8.ExportMixin).include(_uiPivot_grid9.default);\r\n(0, _component_registrator.default)(\"dxPivotGrid\", PivotGrid);\r\nvar _default = PivotGrid;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}