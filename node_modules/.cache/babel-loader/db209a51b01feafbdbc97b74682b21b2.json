{"ast":null,"code":"/**\r\n * DevExtreme (file_management/utils.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.pathCombine = exports.getEscapedFileName = exports.getPathParts = exports.getParentPath = exports.getName = exports.getFileExtension = exports.PATH_SEPARATOR = void 0;\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar PATH_SEPARATOR = \"/\";\nexports.PATH_SEPARATOR = PATH_SEPARATOR;\n\nvar getFileExtension = function (path) {\n  var index = path.lastIndexOf(\".\");\n  return index !== -1 ? path.substr(index) : \"\";\n};\n\nexports.getFileExtension = getFileExtension;\n\nvar getName = function (path) {\n  var index = path.lastIndexOf(PATH_SEPARATOR);\n  return index !== -1 ? path.substr(index + PATH_SEPARATOR.length) : path;\n};\n\nexports.getName = getName;\n\nvar getParentPath = function (path) {\n  var index = path.lastIndexOf(PATH_SEPARATOR);\n  return index !== -1 ? path.substr(0, index) : \"\";\n};\n\nexports.getParentPath = getParentPath;\n\nvar getPathParts = function (path, includeFullPath) {\n  if (!path || \"/\" === path) {\n    return [];\n  }\n\n  var result = [];\n  var pathPart = \"\";\n\n  for (var i = 0; i < path.length; i++) {\n    var char = path.charAt(i);\n\n    if (char === PATH_SEPARATOR) {\n      var nextChar = path.charAt(i + 1);\n\n      if (nextChar !== PATH_SEPARATOR) {\n        if (pathPart) {\n          result.push(pathPart);\n          pathPart = \"\";\n        }\n\n        char = nextChar;\n      }\n\n      i++;\n    }\n\n    pathPart += char;\n  }\n\n  if (pathPart) {\n    result.push(pathPart);\n  }\n\n  if (includeFullPath) {\n    for (var _i = 0; _i < result.length; _i++) {\n      result[_i] = pathCombine(0 === _i ? \"\" : result[_i - 1], getEscapedFileName(result[_i]));\n    }\n  }\n\n  return result;\n};\n\nexports.getPathParts = getPathParts;\n\nvar getEscapedFileName = function (fileName) {\n  return fileName.replace(/\\//g, \"//\");\n};\n\nexports.getEscapedFileName = getEscapedFileName;\n\nvar pathCombine = function () {\n  var result = \"\";\n  (0, _iterator.each)(arguments, function (_, arg) {\n    if (arg) {\n      if (result) {\n        result += PATH_SEPARATOR;\n      }\n\n      result += arg;\n    }\n  });\n  return result;\n};\n\nexports.pathCombine = pathCombine;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/file_management/utils.js"],"names":["exports","pathCombine","getEscapedFileName","getPathParts","getParentPath","getName","getFileExtension","PATH_SEPARATOR","_iterator","require","path","index","lastIndexOf","substr","length","includeFullPath","result","pathPart","i","char","charAt","nextChar","push","_i","fileName","replace","each","arguments","_","arg"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACC,WAAR,GAAsBD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACI,aAAR,GAAwBJ,OAAO,CAACK,OAAR,GAAkBL,OAAO,CAACM,gBAAR,GAA2BN,OAAO,CAACO,cAAR,GAAyB,KAAK,CAA7K;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAIF,cAAc,GAAG,GAArB;AACAP,OAAO,CAACO,cAAR,GAAyBA,cAAzB;;AACA,IAAID,gBAAgB,GAAG,UAASI,IAAT,EAAe;AAClC,MAAIC,KAAK,GAAGD,IAAI,CAACE,WAAL,CAAiB,GAAjB,CAAZ;AACA,SAAOD,KAAK,KAAK,CAAC,CAAX,GAAeD,IAAI,CAACG,MAAL,CAAYF,KAAZ,CAAf,GAAoC,EAA3C;AACH,CAHD;;AAIAX,OAAO,CAACM,gBAAR,GAA2BA,gBAA3B;;AACA,IAAID,OAAO,GAAG,UAASK,IAAT,EAAe;AACzB,MAAIC,KAAK,GAAGD,IAAI,CAACE,WAAL,CAAiBL,cAAjB,CAAZ;AACA,SAAOI,KAAK,KAAK,CAAC,CAAX,GAAeD,IAAI,CAACG,MAAL,CAAYF,KAAK,GAAGJ,cAAc,CAACO,MAAnC,CAAf,GAA4DJ,IAAnE;AACH,CAHD;;AAIAV,OAAO,CAACK,OAAR,GAAkBA,OAAlB;;AACA,IAAID,aAAa,GAAG,UAASM,IAAT,EAAe;AAC/B,MAAIC,KAAK,GAAGD,IAAI,CAACE,WAAL,CAAiBL,cAAjB,CAAZ;AACA,SAAOI,KAAK,KAAK,CAAC,CAAX,GAAeD,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeF,KAAf,CAAf,GAAuC,EAA9C;AACH,CAHD;;AAIAX,OAAO,CAACI,aAAR,GAAwBA,aAAxB;;AACA,IAAID,YAAY,GAAG,UAASO,IAAT,EAAeK,eAAf,EAAgC;AAC/C,MAAI,CAACL,IAAD,IAAS,QAAQA,IAArB,EAA2B;AACvB,WAAO,EAAP;AACH;;AACD,MAAIM,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACI,MAAzB,EAAiCI,CAAC,EAAlC,EAAsC;AAClC,QAAIC,IAAI,GAAGT,IAAI,CAACU,MAAL,CAAYF,CAAZ,CAAX;;AACA,QAAIC,IAAI,KAAKZ,cAAb,EAA6B;AACzB,UAAIc,QAAQ,GAAGX,IAAI,CAACU,MAAL,CAAYF,CAAC,GAAG,CAAhB,CAAf;;AACA,UAAIG,QAAQ,KAAKd,cAAjB,EAAiC;AAC7B,YAAIU,QAAJ,EAAc;AACVD,UAAAA,MAAM,CAACM,IAAP,CAAYL,QAAZ;AACAA,UAAAA,QAAQ,GAAG,EAAX;AACH;;AACDE,QAAAA,IAAI,GAAGE,QAAP;AACH;;AACDH,MAAAA,CAAC;AACJ;;AACDD,IAAAA,QAAQ,IAAIE,IAAZ;AACH;;AACD,MAAIF,QAAJ,EAAc;AACVD,IAAAA,MAAM,CAACM,IAAP,CAAYL,QAAZ;AACH;;AACD,MAAIF,eAAJ,EAAqB;AACjB,SAAK,IAAIQ,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGP,MAAM,CAACF,MAA7B,EAAqCS,EAAE,EAAvC,EAA2C;AACvCP,MAAAA,MAAM,CAACO,EAAD,CAAN,GAAatB,WAAW,CAAC,MAAMsB,EAAN,GAAW,EAAX,GAAgBP,MAAM,CAACO,EAAE,GAAG,CAAN,CAAvB,EAAiCrB,kBAAkB,CAACc,MAAM,CAACO,EAAD,CAAP,CAAnD,CAAxB;AACH;AACJ;;AACD,SAAOP,MAAP;AACH,CA9BD;;AA+BAhB,OAAO,CAACG,YAAR,GAAuBA,YAAvB;;AACA,IAAID,kBAAkB,GAAG,UAASsB,QAAT,EAAmB;AACxC,SAAOA,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAwB,IAAxB,CAAP;AACH,CAFD;;AAGAzB,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;;AACA,IAAID,WAAW,GAAG,YAAW;AACzB,MAAIe,MAAM,GAAG,EAAb;AACA,GAAC,GAAGR,SAAS,CAACkB,IAAd,EAAoBC,SAApB,EAA+B,UAASC,CAAT,EAAYC,GAAZ,EAAiB;AAC5C,QAAIA,GAAJ,EAAS;AACL,UAAIb,MAAJ,EAAY;AACRA,QAAAA,MAAM,IAAIT,cAAV;AACH;;AACDS,MAAAA,MAAM,IAAIa,GAAV;AACH;AACJ,GAPD;AAQA,SAAOb,MAAP;AACH,CAXD;;AAYAhB,OAAO,CAACC,WAAR,GAAsBA,WAAtB","sourcesContent":["/**\r\n * DevExtreme (file_management/utils.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.pathCombine = exports.getEscapedFileName = exports.getPathParts = exports.getParentPath = exports.getName = exports.getFileExtension = exports.PATH_SEPARATOR = void 0;\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar PATH_SEPARATOR = \"/\";\r\nexports.PATH_SEPARATOR = PATH_SEPARATOR;\r\nvar getFileExtension = function(path) {\r\n    var index = path.lastIndexOf(\".\");\r\n    return index !== -1 ? path.substr(index) : \"\"\r\n};\r\nexports.getFileExtension = getFileExtension;\r\nvar getName = function(path) {\r\n    var index = path.lastIndexOf(PATH_SEPARATOR);\r\n    return index !== -1 ? path.substr(index + PATH_SEPARATOR.length) : path\r\n};\r\nexports.getName = getName;\r\nvar getParentPath = function(path) {\r\n    var index = path.lastIndexOf(PATH_SEPARATOR);\r\n    return index !== -1 ? path.substr(0, index) : \"\"\r\n};\r\nexports.getParentPath = getParentPath;\r\nvar getPathParts = function(path, includeFullPath) {\r\n    if (!path || \"/\" === path) {\r\n        return []\r\n    }\r\n    var result = [];\r\n    var pathPart = \"\";\r\n    for (var i = 0; i < path.length; i++) {\r\n        var char = path.charAt(i);\r\n        if (char === PATH_SEPARATOR) {\r\n            var nextChar = path.charAt(i + 1);\r\n            if (nextChar !== PATH_SEPARATOR) {\r\n                if (pathPart) {\r\n                    result.push(pathPart);\r\n                    pathPart = \"\"\r\n                }\r\n                char = nextChar\r\n            }\r\n            i++\r\n        }\r\n        pathPart += char\r\n    }\r\n    if (pathPart) {\r\n        result.push(pathPart)\r\n    }\r\n    if (includeFullPath) {\r\n        for (var _i = 0; _i < result.length; _i++) {\r\n            result[_i] = pathCombine(0 === _i ? \"\" : result[_i - 1], getEscapedFileName(result[_i]))\r\n        }\r\n    }\r\n    return result\r\n};\r\nexports.getPathParts = getPathParts;\r\nvar getEscapedFileName = function(fileName) {\r\n    return fileName.replace(/\\//g, \"//\")\r\n};\r\nexports.getEscapedFileName = getEscapedFileName;\r\nvar pathCombine = function() {\r\n    var result = \"\";\r\n    (0, _iterator.each)(arguments, function(_, arg) {\r\n        if (arg) {\r\n            if (result) {\r\n                result += PATH_SEPARATOR\r\n            }\r\n            result += arg\r\n        }\r\n    });\r\n    return result\r\n};\r\nexports.pathCombine = pathCombine;\r\n"]},"metadata":{},"sourceType":"script"}