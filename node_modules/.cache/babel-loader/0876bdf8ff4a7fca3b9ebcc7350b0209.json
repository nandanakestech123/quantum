{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.subscribes.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\n\nvar _translator = require(\"../../animation/translator\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _date2 = _interopRequireDefault(require(\"../../localization/date\"));\n\nvar _utils = _interopRequireDefault(require(\"./utils.timeZone\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils2 = _interopRequireDefault(require(\"./utils\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar HOURS_IN_DAY = 24;\nvar toMs = _date.default.dateToMilliseconds;\nvar HOUR_MS = toMs(\"hour\");\nvar subscribes = {\n  getTimeZoneCalculator: function () {\n    return this.timeZoneCalculator;\n  },\n  isCurrentViewAgenda: function () {\n    return \"agenda\" === this.option(\"currentView\");\n  },\n  currentViewUpdated: function (currentView) {\n    this.option(\"currentView\", currentView);\n  },\n  currentDateUpdated: function (date) {\n    this.option(\"currentDate\", date);\n  },\n  getOption: function (name) {\n    return this.option(name);\n  },\n  isVirtualScrolling: function () {\n    return this.isVirtualScrolling();\n  },\n  setCellDataCacheAlias: function (appointment, geometry) {\n    this._workSpace.setCellDataCacheAlias(appointment, geometry);\n  },\n  createAppointmentSettings: function (appointment) {\n    return this._getAppointmentSettingsGenerator().create(appointment);\n  },\n  isGroupedByDate: function () {\n    return this.getWorkSpace().isGroupedByDate();\n  },\n  showAppointmentTooltip: function (options) {\n    var targetedAppointment = this.getTargetedAppointment(options.data, options.target);\n    this.showAppointmentTooltip(options.data, options.target, targetedAppointment);\n  },\n  hideAppointmentTooltip: function () {\n    this.hideAppointmentTooltip();\n  },\n  showAddAppointmentPopup: function (cellData, cellGroups) {\n    var appointmentAdapter = this.createAppointmentAdapter({});\n    appointmentAdapter.allDay = cellData.allDay;\n    appointmentAdapter.startDate = this.timeZoneCalculator.createDate(cellData.startDate, {\n      path: \"fromGrid\"\n    });\n    appointmentAdapter.endDate = this.timeZoneCalculator.createDate(cellData.endDate, {\n      path: \"fromGrid\"\n    });\n    var resultAppointment = (0, _extend.extend)(appointmentAdapter.source(), cellGroups);\n    this.showAppointmentPopup(resultAppointment, true);\n  },\n  showEditAppointmentPopup: function (options) {\n    var targetedData = this.getTargetedAppointment(options.data, options.target);\n    this.showAppointmentPopup(options.data, false, targetedData);\n  },\n  updateAppointmentAfterResize: function (options) {\n    var info = _utils2.default.dataAccessors.getAppointmentInfo(options.$appointment);\n\n    var exceptionDate = info.sourceAppointment.startDate;\n\n    this._checkRecurringAppointment(options.target, options.data, exceptionDate, function () {\n      this._updateAppointment(options.target, options.data, function () {\n        this._appointments.moveAppointmentBack();\n      });\n    }.bind(this));\n  },\n  getUpdatedData: function (rawAppointment) {\n    return this._getUpdatedData(rawAppointment);\n  },\n  updateAppointmentAfterDrag: function (_ref) {\n    var event = _ref.event,\n        element = _ref.element,\n        rawAppointment = _ref.rawAppointment,\n        coordinates = _ref.coordinates;\n\n    var info = _utils2.default.dataAccessors.getAppointmentInfo(element);\n\n    var appointment = this.createAppointmentAdapter(rawAppointment);\n    var targetedAppointment = this.createAppointmentAdapter((0, _extend.extend)({}, rawAppointment, this._getUpdatedData(rawAppointment)));\n    var targetedRawAppointment = targetedAppointment.source();\n\n    var newCellIndex = this._workSpace.getDroppableCellIndex();\n\n    var oldCellIndex = this._workSpace.getCellIndexByCoordinates(coordinates);\n\n    var becomeAllDay = targetedAppointment.allDay;\n    var wasAllDay = appointment.allDay;\n    var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);\n\n    if (newCellIndex !== oldCellIndex || movedBetweenAllDayAndSimple) {\n      this._checkRecurringAppointment(rawAppointment, targetedRawAppointment, info.sourceAppointment.startDate, function () {\n        this._updateAppointment(rawAppointment, targetedRawAppointment, function () {\n          this._appointments.moveAppointmentBack(event);\n        }, event);\n      }.bind(this), void 0, void 0, event);\n    } else {\n      this._appointments.moveAppointmentBack(event);\n    }\n  },\n  onDeleteButtonPress: function (options) {\n    var targetedData = this.getTargetedAppointment(options.data, (0, _renderer.default)(options.target));\n    this.checkAndDeleteAppointment(options.data, targetedData);\n    this.hideAppointmentTooltip();\n  },\n  getAppointmentColor: function (options) {\n    var resourcesManager = this._resourcesManager;\n    var resourceForPainting = resourcesManager.getResourceForPainting(this._getCurrentViewOption(\"groups\"));\n    var response = new _deferred.Deferred().resolve().promise();\n\n    if (resourceForPainting) {\n      var field = resourcesManager.getField(resourceForPainting);\n      var groupIndex = options.groupIndex;\n\n      var groups = this._workSpace._getCellGroups(groupIndex);\n\n      var resourceValues = (0, _array.wrapToArray)(resourcesManager.getDataAccessors(field, \"getter\")(options.itemData));\n      var groupId = resourceValues.length ? resourceValues[0] : void 0;\n\n      for (var i = 0; i < groups.length; i++) {\n        if (groups[i].name === field) {\n          groupId = groups[i].id;\n          break;\n        }\n      }\n\n      response = resourcesManager.getResourceColor(field, groupId);\n    }\n\n    return response;\n  },\n  getHeaderHeight: function () {\n    return this._header._$element && parseInt(this._header._$element.outerHeight(), 10);\n  },\n  getResourcesFromItem: function (itemData) {\n    return this._resourcesManager.getResourcesFromItem(itemData);\n  },\n  getBoundOffset: function () {\n    return {\n      top: -this.getWorkSpaceAllDayHeight()\n    };\n  },\n  appointmentTakesSeveralDays: function (appointment) {\n    return this._appointmentModel.appointmentTakesSeveralDays(appointment);\n  },\n  getTextAndFormatDate: function (appointmentRaw, targetedAppointmentRaw, format) {\n    var appointmentAdapter = this.createAppointmentAdapter(appointmentRaw);\n    var targetedAdapter = this.createAppointmentAdapter(targetedAppointmentRaw || appointmentRaw);\n    var startDate = this.timeZoneCalculator.createDate(targetedAdapter.startDate, {\n      path: \"toGrid\"\n    });\n    var endDate = this.timeZoneCalculator.createDate(targetedAdapter.endDate, {\n      path: \"toGrid\"\n    });\n    var formatType = format || this.fire(\"_getTypeFormat\", startDate, endDate, targetedAdapter.allDay);\n    return {\n      text: targetedAdapter.text || appointmentAdapter.text,\n      formatDate: this.fire(\"_formatDates\", startDate, endDate, formatType)\n    };\n  },\n  _getTypeFormat: function (startDate, endDate, isAllDay) {\n    if (isAllDay) {\n      return \"DATE\";\n    }\n\n    if (\"month\" !== this.option(\"currentView\") && _date.default.sameDate(startDate, endDate)) {\n      return \"TIME\";\n    }\n\n    return \"DATETIME\";\n  },\n  _createAppointmentTitle: function (data) {\n    if ((0, _type.isPlainObject)(data)) {\n      return data.text;\n    }\n\n    return String(data);\n  },\n  _formatDates: function (startDate, endDate, formatType) {\n    var dateFormat = \"monthandday\";\n    var timeFormat = \"shorttime\";\n    var isSameDate = startDate.getDate() === endDate.getDate();\n\n    switch (formatType) {\n      case \"DATETIME\":\n        return [_date2.default.format(startDate, dateFormat), \" \", _date2.default.format(startDate, timeFormat), \" - \", isSameDate ? \"\" : _date2.default.format(endDate, dateFormat) + \" \", _date2.default.format(endDate, timeFormat)].join(\"\");\n\n      case \"TIME\":\n        return \"\".concat(_date2.default.format(startDate, timeFormat), \" - \").concat(_date2.default.format(endDate, timeFormat));\n\n      case \"DATE\":\n        return \"\".concat(_date2.default.format(startDate, dateFormat)).concat(isSameDate ? \"\" : \" - \" + _date2.default.format(endDate, dateFormat));\n    }\n  },\n  getResizableAppointmentArea: function (options) {\n    var allDay = options.allDay;\n\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (groups && groups.length) {\n      if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {\n        var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\n\n        return {\n          left: horizontalGroupBounds.left,\n          right: horizontalGroupBounds.right,\n          top: 0,\n          bottom: 0\n        };\n      }\n\n      if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {\n        var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\n\n        return {\n          left: 0,\n          right: 0,\n          top: verticalGroupBounds.top,\n          bottom: verticalGroupBounds.bottom\n        };\n      }\n    }\n  },\n  needRecalculateResizableArea: function () {\n    return this.getWorkSpace().needRecalculateResizableArea();\n  },\n  getAppointmentGeometry: function (settings) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings);\n  },\n  isAllDay: function (appointmentData) {\n    return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData);\n  },\n  getDeltaTime: function (e, initialSize, itemData) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData);\n  },\n  getDropDownAppointmentWidth: function (isAllDay) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay);\n  },\n  getDropDownAppointmentHeight: function () {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight();\n  },\n  getCellWidth: function () {\n    return this.getWorkSpace().getCellWidth();\n  },\n  getCellHeight: function () {\n    return this.getWorkSpace().getCellHeight();\n  },\n  getResizableStep: function () {\n    var workSpace = this.getWorkSpace();\n    var cellWidth = workSpace.getCellWidth();\n\n    if (workSpace.isGroupedByDate()) {\n      return workSpace._getGroupCount() * cellWidth;\n    }\n\n    return cellWidth;\n  },\n  getRenderingStrategy: function () {\n    return this._getAppointmentsRenderingStrategy();\n  },\n  getMaxAppointmentCountPerCellByType: function (isAllDay) {\n    return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay);\n  },\n  needCorrectAppointmentDates: function () {\n    return this.getRenderingStrategyInstance().needCorrectAppointmentDates();\n  },\n  getRenderingStrategyDirection: function () {\n    return this.getRenderingStrategyInstance().getDirection();\n  },\n  getWorkSpaceDateTableOffset: function () {\n    return this.getWorkSpaceDateTableOffset();\n  },\n  getFullWeekAppointmentWidth: function (options) {\n    var groupIndex = options.groupIndex;\n    return this._workSpace.getGroupWidth(groupIndex);\n  },\n  getMaxAppointmentWidth: function (options) {\n    var workSpace = this._workSpace;\n    return workSpace.getCellCountToLastViewDate(options.date) * workSpace.getCellWidth();\n  },\n  updateAppointmentStartDate: function (options) {\n    var appointment = options.appointment;\n\n    var firstViewDate = this._workSpace.getStartViewDate();\n\n    var startDate = new Date(options.startDate);\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var updatedStartDate;\n\n    if (this.appointmentTakesAllDay(appointment)) {\n      updatedStartDate = _date.default.normalizeDate(startDate, firstViewDate);\n    } else {\n      if (startDate < firstViewDate) {\n        startDate = firstViewDate;\n      }\n\n      updatedStartDate = _date.default.normalizeDate(options.startDate, new Date(startDate));\n    }\n\n    return _date.default.roundDateByStartDayHour(updatedStartDate, startDayHour);\n  },\n  updateAppointmentEndDate: function (options) {\n    var endDate = options.endDate;\n\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var updatedEndDate = endDate;\n\n    if (endDate.getHours() >= endDayHour) {\n      updatedEndDate.setHours(endDayHour, 0, 0, 0);\n    } else {\n      if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {\n        updatedEndDate = new Date(updatedEndDate.getTime() - toMs(\"day\"));\n        updatedEndDate.setHours(endDayHour, 0, 0, 0);\n      }\n    }\n\n    return updatedEndDate;\n  },\n  renderCompactAppointments: function (options) {\n    this._compactAppointmentsHelper.render(options);\n  },\n  clearCompactAppointments: function () {\n    this._compactAppointmentsHelper.clear();\n  },\n  supportCompactDropDownAppointments: function () {\n    return this._workSpace._supportCompactDropDownAppointments();\n  },\n  isApplyCompactAppointmentOffset: function () {\n    return this._workSpace._isApplyCompactAppointmentOffset();\n  },\n  getGroupCount: function () {\n    return this._workSpace._getGroupCount();\n  },\n  mapAppointmentFields: function (config) {\n    var targetedData = this.getTargetedAppointment(config.itemData, config.itemElement);\n    return {\n      appointmentData: config.itemData,\n      appointmentElement: config.itemElement,\n      targetedAppointmentData: targetedData\n    };\n  },\n  getOffsetByAllDayPanel: function (groupIndex) {\n    return this._workSpace._getOffsetByAllDayPanel(groupIndex);\n  },\n  getGroupTop: function (groupIndex) {\n    return this._workSpace._getGroupTop(groupIndex);\n  },\n  updateResizableArea: function () {\n    var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\n    var horizontalResizables = (0, _common.grep)($allResizableElements, function (el) {\n      var $el = (0, _renderer.default)(el);\n      var resizableInst = $el.dxResizable(\"instance\");\n      var area = resizableInst.option(\"area\");\n      return (0, _array.inArray)(resizableInst.option(\"handles\"), [\"right left\", \"left right\"]) > -1 && (0, _type.isPlainObject)(area);\n    });\n    (0, _iterator.each)(horizontalResizables, function (_, el) {\n      var $el = (0, _renderer.default)(el);\n      var position = (0, _translator.locate)($el);\n\n      var appointmentData = this._appointments._getItemData($el);\n\n      var area = this._appointments._calculateResizableArea({\n        left: position.left\n      }, appointmentData);\n\n      $el.dxResizable(\"instance\").option(\"area\", area);\n    }.bind(this));\n  },\n  getField: function (field, obj) {\n    if (!(0, _type.isDefined)(this._dataAccessors.getter[field])) {\n      return;\n    }\n\n    return this._dataAccessors.getter[field](obj);\n  },\n  setField: function (field, obj, value) {\n    if (!(0, _type.isDefined)(this._dataAccessors.setter[field])) {\n      return;\n    }\n\n    var splitExprStr = this.option(field + \"Expr\").split(\".\");\n    var rootField = splitExprStr[0];\n\n    if (void 0 === obj[rootField] && splitExprStr.length > 1) {\n      var emptyChain = function (arr) {\n        var result = {};\n        var tmp = result;\n        var arrLength = arr.length - 1;\n\n        for (var i = 1; i < arrLength; i++) {\n          tmp = tmp[arr[i]] = {};\n        }\n\n        return result;\n      }(splitExprStr);\n\n      obj[rootField] = emptyChain;\n    }\n\n    this._dataAccessors.setter[field](obj, value);\n\n    return obj;\n  },\n  renderAppointments: function () {\n    this._renderAppointments();\n  },\n  prerenderFilter: function () {\n    var dateRange = this.getWorkSpace().getDateRange();\n\n    var resources = this._resourcesManager.getResourcesData();\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var allDay;\n\n    if (!this.option(\"showAllDayPanel\") && this._workSpace.supportAllDayRow()) {\n      allDay = false;\n    }\n\n    return this._appointmentModel.filterLoadedAppointments({\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      viewStartDayHour: startDayHour,\n      viewEndDayHour: endDayHour,\n      min: dateRange[0],\n      max: dateRange[1],\n      resources: resources,\n      allDay: allDay,\n      firstDayOfWeek: this.getFirstDayOfWeek(),\n      recurrenceException: this._getRecurrenceException.bind(this)\n    }, this.timeZoneCalculator);\n  },\n  prerenderFilterVirtual: function () {\n    var _this = this;\n\n    var workspace = this.getWorkSpace();\n    var resourcesManager = this._resourcesManager;\n    var isAllDaySupported = this.option(\"showAllDayPanel\") || !this._workSpace.supportAllDayRow();\n    var viewDataProvider = workspace.viewDataProvider;\n    var groupedData = viewDataProvider.viewData.groupedData;\n    var groupedDataToRender = groupedData.filter(function (_ref2) {\n      var dateTable = _ref2.dateTable;\n      return dateTable.length > 0;\n    });\n\n    var isVerticalGrouping = workspace._isVerticalGroupedWorkSpace();\n\n    var endViewDate = workspace.getEndViewDateByEndDayHour();\n    var filterOptions = [];\n    groupedDataToRender.forEach(function (_ref3) {\n      var groupIndex = _ref3.groupIndex,\n          allDayPanel = _ref3.allDayPanel;\n      var startDate = viewDataProvider.getGroupStartDate(groupIndex);\n      var endDate = new Date(Math.min(viewDataProvider.getGroupEndDate(groupIndex), endViewDate));\n      var startDayHour = startDate.getHours();\n      var endDayHour = (startDayHour + (endDate - startDate) / HOUR_MS) % HOURS_IN_DAY;\n      var allDay = false !== isAllDaySupported && (null === allDayPanel || void 0 === allDayPanel ? void 0 : allDayPanel.length) > 0;\n      var groups = viewDataProvider.getCellsGroup(groupIndex);\n      var groupResources = isVerticalGrouping ? resourcesManager.getResourcesDataByGroups(groups) : resourcesManager.getResourcesData();\n      filterOptions.push({\n        isVirtualScrolling: true,\n        startDayHour: startDayHour,\n        endDayHour: endDayHour,\n        viewStartDayHour: _this._getCurrentViewOption(\"startDayHour\"),\n        viewEndDayHour: _this._getCurrentViewOption(\"endDayHour\"),\n        min: startDate,\n        max: endDate,\n        resources: groupResources,\n        allDay: allDay,\n        firstDayOfWeek: _this.getFirstDayOfWeek(),\n        recurrenceException: _this._getRecurrenceException.bind(_this)\n      });\n    });\n\n    var result = this._appointmentModel.filterLoadedVirtualAppointments(filterOptions, this.timeZoneCalculator, workspace._getGroupCount());\n\n    return result;\n  },\n  dayHasAppointment: function (day, appointment, trimTime) {\n    return this.dayHasAppointment(day, appointment, trimTime);\n  },\n  createResourcesTree: function () {\n    return this._resourcesManager.createResourcesTree(this._loadedResources);\n  },\n  getResourceTreeLeaves: function (tree, appointmentResources) {\n    return this._resourcesManager.getResourceTreeLeaves(tree, appointmentResources);\n  },\n  createReducedResourcesTree: function () {\n    var tree = this._resourcesManager.createResourcesTree(this._loadedResources);\n\n    return this._resourcesManager.reduceResourcesTree(tree, this.getFilteredItems());\n  },\n  groupAppointmentsByResources: function (appointments) {\n    var result = {\n      0: appointments\n    };\n\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (groups && groups.length && this._resourcesManager.getResourcesData().length) {\n      result = this._resourcesManager.groupAppointmentsByResources(appointments, this._loadedResources);\n    }\n\n    var totalResourceCount = 0;\n    (0, _iterator.each)(this._loadedResources, function (i, resource) {\n      if (!i) {\n        totalResourceCount = resource.items.length;\n      } else {\n        totalResourceCount *= resource.items.length;\n      }\n    });\n\n    for (var j = 0; j < totalResourceCount; j++) {\n      var index = j.toString();\n\n      if (result[index]) {\n        continue;\n      }\n\n      result[index] = [];\n    }\n\n    return result;\n  },\n  getAgendaRows: function (options) {\n    var renderingStrategy = this._layoutManager.getRenderingStrategyInstance();\n\n    var calculateRows = renderingStrategy.calculateRows.bind(renderingStrategy);\n    var d = new _deferred.Deferred();\n\n    function rowsCalculated(appointments) {\n      var result = calculateRows(appointments, options.agendaDuration, options.currentDate);\n\n      this._dataSourceLoadedCallback.remove(rowsCalculated);\n\n      d.resolve(result);\n    }\n\n    this._dataSourceLoadedCallback.add(rowsCalculated);\n\n    return d.promise();\n  },\n  getAgendaVerticalStepHeight: function () {\n    return this.getWorkSpace().getAgendaVerticalStepHeight();\n  },\n  getAgendaDuration: function () {\n    return this._getCurrentViewOption(\"agendaDuration\");\n  },\n  getStartViewDate: function () {\n    return this.getStartViewDate();\n  },\n  getEndViewDate: function () {\n    return this.getEndViewDate();\n  },\n  getMaxAppointmentsPerCell: function () {\n    return this.getMaxAppointmentsPerCell();\n  },\n  forceMaxAppointmentPerCell: function () {\n    return this.forceMaxAppointmentPerCell();\n  },\n  onAgendaReady: function (rows) {\n    var $appts = this.getAppointmentsInstance()._itemElements();\n\n    var total = 0;\n\n    var applyClass = function (_, count) {\n      var index = count + total - 1;\n      $appts.eq(index).addClass(_constants.AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS);\n      total += count;\n    };\n\n    for (var i = 0; i < rows.length; i++) {\n      (0, _iterator.each)(rows[i], applyClass);\n    }\n  },\n  getTimezone: function () {\n    return this._getTimezoneOffsetByOption();\n  },\n  getTargetedAppointmentData: function (appointment, element) {\n    return this.getTargetedAppointment(appointment, element);\n  },\n  getAppointmentDurationInMs: function (options) {\n    var startDate = options.startDate;\n    var endDate = options.endDate;\n    var allDay = options.allDay;\n    var appointmentDuration = endDate.getTime() - startDate.getTime();\n    var dayDuration = toMs(\"day\");\n\n    var visibleDayDuration = this._workSpace.getVisibleDayDuration();\n\n    var result = 0;\n\n    if (allDay) {\n      var ceilQuantityOfDays = Math.ceil(appointmentDuration / dayDuration);\n      result = ceilQuantityOfDays * visibleDayDuration;\n    } else {\n      var isDifferentDates = !_utils.default.isSameAppointmentDates(startDate, endDate);\n      var floorQuantityOfDays = Math.floor(appointmentDuration / dayDuration);\n      var tailDuration;\n\n      if (isDifferentDates) {\n        var startDateEndHour = new Date(new Date(startDate).setHours(this.option(\"endDayHour\"), 0, 0));\n        var hiddenDayDuration = dayDuration - visibleDayDuration - (startDate.getTime() > startDateEndHour.getTime() ? startDate.getTime() - startDateEndHour.getTime() : 0);\n        tailDuration = appointmentDuration - (floorQuantityOfDays ? floorQuantityOfDays * dayDuration : hiddenDayDuration);\n        var startDayTime = this.option(\"startDayHour\") * toMs(\"hour\");\n\n        var endPartDuration = endDate - _date.default.trimTime(endDate);\n\n        if (endPartDuration < startDayTime) {\n          if (floorQuantityOfDays) {\n            tailDuration -= hiddenDayDuration;\n          }\n\n          tailDuration += startDayTime - endPartDuration;\n        }\n      } else {\n        tailDuration = appointmentDuration % dayDuration;\n      }\n\n      if (tailDuration > visibleDayDuration) {\n        tailDuration = visibleDayDuration;\n      }\n\n      result = floorQuantityOfDays * visibleDayDuration + tailDuration || toMs(\"minute\");\n    }\n\n    return result;\n  },\n  replaceWrongEndDate: function (appointment, startDate, endDate) {\n    this._appointmentModel.replaceWrongEndDate(appointment, startDate, endDate);\n  },\n  calculateAppointmentEndDate: function (isAllDay, startDate) {\n    return this._appointmentModel._calculateAppointmentEndDate(isAllDay, startDate);\n  },\n  getEndDayHour: function () {\n    return this._workSpace.option(\"endDayHour\") || this.option(\"endDayHour\");\n  },\n  getStartDayHour: function () {\n    return this._workSpace.option(\"startDayHour\") || this.option(\"startDayHour\");\n  },\n  isAdaptive: function () {\n    return this.option(\"adaptivityEnabled\");\n  },\n  validateDayHours: function () {\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    if (startDayHour >= endDayHour) {\n      throw _ui.default.Error(\"E1058\");\n    }\n  },\n  removeDroppableCellClass: function () {\n    this._workSpace.removeDroppableCellClass();\n  }\n};\nvar _default = subscribes;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/scheduler/ui.scheduler.subscribes.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_array","_type","_date","_iterator","_ui","_translator","_common","_extend","_deferred","_date2","_utils","_constants","_utils2","obj","__esModule","HOURS_IN_DAY","toMs","dateToMilliseconds","HOUR_MS","subscribes","getTimeZoneCalculator","timeZoneCalculator","isCurrentViewAgenda","option","currentViewUpdated","currentView","currentDateUpdated","date","getOption","name","isVirtualScrolling","setCellDataCacheAlias","appointment","geometry","_workSpace","createAppointmentSettings","_getAppointmentSettingsGenerator","create","isGroupedByDate","getWorkSpace","showAppointmentTooltip","options","targetedAppointment","getTargetedAppointment","data","target","hideAppointmentTooltip","showAddAppointmentPopup","cellData","cellGroups","appointmentAdapter","createAppointmentAdapter","allDay","startDate","createDate","path","endDate","resultAppointment","extend","source","showAppointmentPopup","showEditAppointmentPopup","targetedData","updateAppointmentAfterResize","info","dataAccessors","getAppointmentInfo","$appointment","exceptionDate","sourceAppointment","_checkRecurringAppointment","_updateAppointment","_appointments","moveAppointmentBack","bind","getUpdatedData","rawAppointment","_getUpdatedData","updateAppointmentAfterDrag","_ref","event","element","coordinates","targetedRawAppointment","newCellIndex","getDroppableCellIndex","oldCellIndex","getCellIndexByCoordinates","becomeAllDay","wasAllDay","movedBetweenAllDayAndSimple","supportAllDayRow","onDeleteButtonPress","checkAndDeleteAppointment","getAppointmentColor","resourcesManager","_resourcesManager","resourceForPainting","getResourceForPainting","_getCurrentViewOption","response","Deferred","resolve","promise","field","getField","groupIndex","groups","_getCellGroups","resourceValues","wrapToArray","getDataAccessors","itemData","groupId","length","i","id","getResourceColor","getHeaderHeight","_header","_$element","parseInt","outerHeight","getResourcesFromItem","getBoundOffset","top","getWorkSpaceAllDayHeight","appointmentTakesSeveralDays","_appointmentModel","getTextAndFormatDate","appointmentRaw","targetedAppointmentRaw","format","targetedAdapter","formatType","fire","text","formatDate","_getTypeFormat","isAllDay","sameDate","_createAppointmentTitle","isPlainObject","String","_formatDates","dateFormat","timeFormat","isSameDate","getDate","join","concat","getResizableAppointmentArea","getLayoutManager","getRenderingStrategyInstance","_needHorizontalGroupBounds","horizontalGroupBounds","getGroupBounds","left","right","bottom","_needVerticalGroupBounds","_isVerticalGroupedWorkSpace","verticalGroupBounds","needRecalculateResizableArea","getAppointmentGeometry","settings","appointmentData","getDeltaTime","e","initialSize","getDropDownAppointmentWidth","_getViewCountConfig","intervalCount","getDropDownAppointmentHeight","getCellWidth","getCellHeight","getResizableStep","workSpace","cellWidth","_getGroupCount","getRenderingStrategy","_getAppointmentsRenderingStrategy","getMaxAppointmentCountPerCellByType","_getMaxAppointmentCountPerCellByType","needCorrectAppointmentDates","getRenderingStrategyDirection","getDirection","getWorkSpaceDateTableOffset","getFullWeekAppointmentWidth","getGroupWidth","getMaxAppointmentWidth","getCellCountToLastViewDate","updateAppointmentStartDate","firstViewDate","getStartViewDate","Date","startDayHour","updatedStartDate","appointmentTakesAllDay","normalizeDate","roundDateByStartDayHour","updateAppointmentEndDate","endDayHour","updatedEndDate","getHours","setHours","getMinutes","getTime","renderCompactAppointments","_compactAppointmentsHelper","render","clearCompactAppointments","clear","supportCompactDropDownAppointments","_supportCompactDropDownAppointments","isApplyCompactAppointmentOffset","_isApplyCompactAppointmentOffset","getGroupCount","mapAppointmentFields","config","itemElement","appointmentElement","targetedAppointmentData","getOffsetByAllDayPanel","_getOffsetByAllDayPanel","getGroupTop","_getGroupTop","updateResizableArea","$allResizableElements","$element","find","horizontalResizables","grep","el","$el","resizableInst","dxResizable","area","inArray","each","_","position","locate","_getItemData","_calculateResizableArea","isDefined","_dataAccessors","getter","setField","value","setter","splitExprStr","split","rootField","emptyChain","arr","result","tmp","arrLength","renderAppointments","_renderAppointments","prerenderFilter","dateRange","getDateRange","resources","getResourcesData","filterLoadedAppointments","viewStartDayHour","viewEndDayHour","min","max","firstDayOfWeek","getFirstDayOfWeek","recurrenceException","_getRecurrenceException","prerenderFilterVirtual","_this","workspace","isAllDaySupported","viewDataProvider","groupedData","viewData","groupedDataToRender","filter","_ref2","dateTable","isVerticalGrouping","endViewDate","getEndViewDateByEndDayHour","filterOptions","forEach","_ref3","allDayPanel","getGroupStartDate","Math","getGroupEndDate","getCellsGroup","groupResources","getResourcesDataByGroups","push","filterLoadedVirtualAppointments","dayHasAppointment","day","trimTime","createResourcesTree","_loadedResources","getResourceTreeLeaves","tree","appointmentResources","createReducedResourcesTree","reduceResourcesTree","getFilteredItems","groupAppointmentsByResources","appointments","totalResourceCount","resource","items","j","index","toString","getAgendaRows","renderingStrategy","_layoutManager","calculateRows","d","rowsCalculated","agendaDuration","currentDate","_dataSourceLoadedCallback","remove","add","getAgendaVerticalStepHeight","getAgendaDuration","getEndViewDate","getMaxAppointmentsPerCell","forceMaxAppointmentPerCell","onAgendaReady","rows","$appts","getAppointmentsInstance","_itemElements","total","applyClass","count","eq","addClass","AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS","getTimezone","_getTimezoneOffsetByOption","getTargetedAppointmentData","getAppointmentDurationInMs","appointmentDuration","dayDuration","visibleDayDuration","getVisibleDayDuration","ceilQuantityOfDays","ceil","isDifferentDates","isSameAppointmentDates","floorQuantityOfDays","floor","tailDuration","startDateEndHour","hiddenDayDuration","startDayTime","endPartDuration","replaceWrongEndDate","calculateAppointmentEndDate","_calculateAppointmentEndDate","getEndDayHour","getStartDayHour","isAdaptive","validateDayHours","Error","removeDroppableCellClass","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.subscribes.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _date2 = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _utils = _interopRequireDefault(require(\"./utils.timeZone\"));\r\nvar _constants = require(\"./constants\");\r\nvar _utils2 = _interopRequireDefault(require(\"./utils\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar HOURS_IN_DAY = 24;\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar HOUR_MS = toMs(\"hour\");\r\nvar subscribes = {\r\n    getTimeZoneCalculator: function() {\r\n        return this.timeZoneCalculator\r\n    },\r\n    isCurrentViewAgenda: function() {\r\n        return \"agenda\" === this.option(\"currentView\")\r\n    },\r\n    currentViewUpdated: function(currentView) {\r\n        this.option(\"currentView\", currentView)\r\n    },\r\n    currentDateUpdated: function(date) {\r\n        this.option(\"currentDate\", date)\r\n    },\r\n    getOption: function(name) {\r\n        return this.option(name)\r\n    },\r\n    isVirtualScrolling: function() {\r\n        return this.isVirtualScrolling()\r\n    },\r\n    setCellDataCacheAlias: function(appointment, geometry) {\r\n        this._workSpace.setCellDataCacheAlias(appointment, geometry)\r\n    },\r\n    createAppointmentSettings: function(appointment) {\r\n        return this._getAppointmentSettingsGenerator().create(appointment)\r\n    },\r\n    isGroupedByDate: function() {\r\n        return this.getWorkSpace().isGroupedByDate()\r\n    },\r\n    showAppointmentTooltip: function(options) {\r\n        var targetedAppointment = this.getTargetedAppointment(options.data, options.target);\r\n        this.showAppointmentTooltip(options.data, options.target, targetedAppointment)\r\n    },\r\n    hideAppointmentTooltip: function() {\r\n        this.hideAppointmentTooltip()\r\n    },\r\n    showAddAppointmentPopup: function(cellData, cellGroups) {\r\n        var appointmentAdapter = this.createAppointmentAdapter({});\r\n        appointmentAdapter.allDay = cellData.allDay;\r\n        appointmentAdapter.startDate = this.timeZoneCalculator.createDate(cellData.startDate, {\r\n            path: \"fromGrid\"\r\n        });\r\n        appointmentAdapter.endDate = this.timeZoneCalculator.createDate(cellData.endDate, {\r\n            path: \"fromGrid\"\r\n        });\r\n        var resultAppointment = (0, _extend.extend)(appointmentAdapter.source(), cellGroups);\r\n        this.showAppointmentPopup(resultAppointment, true)\r\n    },\r\n    showEditAppointmentPopup: function(options) {\r\n        var targetedData = this.getTargetedAppointment(options.data, options.target);\r\n        this.showAppointmentPopup(options.data, false, targetedData)\r\n    },\r\n    updateAppointmentAfterResize: function(options) {\r\n        var info = _utils2.default.dataAccessors.getAppointmentInfo(options.$appointment);\r\n        var exceptionDate = info.sourceAppointment.startDate;\r\n        this._checkRecurringAppointment(options.target, options.data, exceptionDate, function() {\r\n            this._updateAppointment(options.target, options.data, function() {\r\n                this._appointments.moveAppointmentBack()\r\n            })\r\n        }.bind(this))\r\n    },\r\n    getUpdatedData: function(rawAppointment) {\r\n        return this._getUpdatedData(rawAppointment)\r\n    },\r\n    updateAppointmentAfterDrag: function(_ref) {\r\n        var event = _ref.event,\r\n            element = _ref.element,\r\n            rawAppointment = _ref.rawAppointment,\r\n            coordinates = _ref.coordinates;\r\n        var info = _utils2.default.dataAccessors.getAppointmentInfo(element);\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        var targetedAppointment = this.createAppointmentAdapter((0, _extend.extend)({}, rawAppointment, this._getUpdatedData(rawAppointment)));\r\n        var targetedRawAppointment = targetedAppointment.source();\r\n        var newCellIndex = this._workSpace.getDroppableCellIndex();\r\n        var oldCellIndex = this._workSpace.getCellIndexByCoordinates(coordinates);\r\n        var becomeAllDay = targetedAppointment.allDay;\r\n        var wasAllDay = appointment.allDay;\r\n        var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);\r\n        if (newCellIndex !== oldCellIndex || movedBetweenAllDayAndSimple) {\r\n            this._checkRecurringAppointment(rawAppointment, targetedRawAppointment, info.sourceAppointment.startDate, function() {\r\n                this._updateAppointment(rawAppointment, targetedRawAppointment, function() {\r\n                    this._appointments.moveAppointmentBack(event)\r\n                }, event)\r\n            }.bind(this), void 0, void 0, event)\r\n        } else {\r\n            this._appointments.moveAppointmentBack(event)\r\n        }\r\n    },\r\n    onDeleteButtonPress: function(options) {\r\n        var targetedData = this.getTargetedAppointment(options.data, (0, _renderer.default)(options.target));\r\n        this.checkAndDeleteAppointment(options.data, targetedData);\r\n        this.hideAppointmentTooltip()\r\n    },\r\n    getAppointmentColor: function(options) {\r\n        var resourcesManager = this._resourcesManager;\r\n        var resourceForPainting = resourcesManager.getResourceForPainting(this._getCurrentViewOption(\"groups\"));\r\n        var response = (new _deferred.Deferred).resolve().promise();\r\n        if (resourceForPainting) {\r\n            var field = resourcesManager.getField(resourceForPainting);\r\n            var groupIndex = options.groupIndex;\r\n            var groups = this._workSpace._getCellGroups(groupIndex);\r\n            var resourceValues = (0, _array.wrapToArray)(resourcesManager.getDataAccessors(field, \"getter\")(options.itemData));\r\n            var groupId = resourceValues.length ? resourceValues[0] : void 0;\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (groups[i].name === field) {\r\n                    groupId = groups[i].id;\r\n                    break\r\n                }\r\n            }\r\n            response = resourcesManager.getResourceColor(field, groupId)\r\n        }\r\n        return response\r\n    },\r\n    getHeaderHeight: function() {\r\n        return this._header._$element && parseInt(this._header._$element.outerHeight(), 10)\r\n    },\r\n    getResourcesFromItem: function(itemData) {\r\n        return this._resourcesManager.getResourcesFromItem(itemData)\r\n    },\r\n    getBoundOffset: function() {\r\n        return {\r\n            top: -this.getWorkSpaceAllDayHeight()\r\n        }\r\n    },\r\n    appointmentTakesSeveralDays: function(appointment) {\r\n        return this._appointmentModel.appointmentTakesSeveralDays(appointment)\r\n    },\r\n    getTextAndFormatDate: function(appointmentRaw, targetedAppointmentRaw, format) {\r\n        var appointmentAdapter = this.createAppointmentAdapter(appointmentRaw);\r\n        var targetedAdapter = this.createAppointmentAdapter(targetedAppointmentRaw || appointmentRaw);\r\n        var startDate = this.timeZoneCalculator.createDate(targetedAdapter.startDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        var endDate = this.timeZoneCalculator.createDate(targetedAdapter.endDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        var formatType = format || this.fire(\"_getTypeFormat\", startDate, endDate, targetedAdapter.allDay);\r\n        return {\r\n            text: targetedAdapter.text || appointmentAdapter.text,\r\n            formatDate: this.fire(\"_formatDates\", startDate, endDate, formatType)\r\n        }\r\n    },\r\n    _getTypeFormat: function(startDate, endDate, isAllDay) {\r\n        if (isAllDay) {\r\n            return \"DATE\"\r\n        }\r\n        if (\"month\" !== this.option(\"currentView\") && _date.default.sameDate(startDate, endDate)) {\r\n            return \"TIME\"\r\n        }\r\n        return \"DATETIME\"\r\n    },\r\n    _createAppointmentTitle: function(data) {\r\n        if ((0, _type.isPlainObject)(data)) {\r\n            return data.text\r\n        }\r\n        return String(data)\r\n    },\r\n    _formatDates: function(startDate, endDate, formatType) {\r\n        var dateFormat = \"monthandday\";\r\n        var timeFormat = \"shorttime\";\r\n        var isSameDate = startDate.getDate() === endDate.getDate();\r\n        switch (formatType) {\r\n            case \"DATETIME\":\r\n                return [_date2.default.format(startDate, dateFormat), \" \", _date2.default.format(startDate, timeFormat), \" - \", isSameDate ? \"\" : _date2.default.format(endDate, dateFormat) + \" \", _date2.default.format(endDate, timeFormat)].join(\"\");\r\n            case \"TIME\":\r\n                return \"\".concat(_date2.default.format(startDate, timeFormat), \" - \").concat(_date2.default.format(endDate, timeFormat));\r\n            case \"DATE\":\r\n                return \"\".concat(_date2.default.format(startDate, dateFormat)).concat(isSameDate ? \"\" : \" - \" + _date2.default.format(endDate, dateFormat))\r\n        }\r\n    },\r\n    getResizableAppointmentArea: function(options) {\r\n        var allDay = options.allDay;\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (groups && groups.length) {\r\n            if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {\r\n                var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\r\n                return {\r\n                    left: horizontalGroupBounds.left,\r\n                    right: horizontalGroupBounds.right,\r\n                    top: 0,\r\n                    bottom: 0\r\n                }\r\n            }\r\n            if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {\r\n                var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\r\n                return {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: verticalGroupBounds.top,\r\n                    bottom: verticalGroupBounds.bottom\r\n                }\r\n            }\r\n        }\r\n    },\r\n    needRecalculateResizableArea: function() {\r\n        return this.getWorkSpace().needRecalculateResizableArea()\r\n    },\r\n    getAppointmentGeometry: function(settings) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings)\r\n    },\r\n    isAllDay: function(appointmentData) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData)\r\n    },\r\n    getDeltaTime: function(e, initialSize, itemData) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData)\r\n    },\r\n    getDropDownAppointmentWidth: function(isAllDay) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay)\r\n    },\r\n    getDropDownAppointmentHeight: function() {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight()\r\n    },\r\n    getCellWidth: function() {\r\n        return this.getWorkSpace().getCellWidth()\r\n    },\r\n    getCellHeight: function() {\r\n        return this.getWorkSpace().getCellHeight()\r\n    },\r\n    getResizableStep: function() {\r\n        var workSpace = this.getWorkSpace();\r\n        var cellWidth = workSpace.getCellWidth();\r\n        if (workSpace.isGroupedByDate()) {\r\n            return workSpace._getGroupCount() * cellWidth\r\n        }\r\n        return cellWidth\r\n    },\r\n    getRenderingStrategy: function() {\r\n        return this._getAppointmentsRenderingStrategy()\r\n    },\r\n    getMaxAppointmentCountPerCellByType: function(isAllDay) {\r\n        return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay)\r\n    },\r\n    needCorrectAppointmentDates: function() {\r\n        return this.getRenderingStrategyInstance().needCorrectAppointmentDates()\r\n    },\r\n    getRenderingStrategyDirection: function() {\r\n        return this.getRenderingStrategyInstance().getDirection()\r\n    },\r\n    getWorkSpaceDateTableOffset: function() {\r\n        return this.getWorkSpaceDateTableOffset()\r\n    },\r\n    getFullWeekAppointmentWidth: function(options) {\r\n        var groupIndex = options.groupIndex;\r\n        return this._workSpace.getGroupWidth(groupIndex)\r\n    },\r\n    getMaxAppointmentWidth: function(options) {\r\n        var workSpace = this._workSpace;\r\n        return workSpace.getCellCountToLastViewDate(options.date) * workSpace.getCellWidth()\r\n    },\r\n    updateAppointmentStartDate: function(options) {\r\n        var appointment = options.appointment;\r\n        var firstViewDate = this._workSpace.getStartViewDate();\r\n        var startDate = new Date(options.startDate);\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var updatedStartDate;\r\n        if (this.appointmentTakesAllDay(appointment)) {\r\n            updatedStartDate = _date.default.normalizeDate(startDate, firstViewDate)\r\n        } else {\r\n            if (startDate < firstViewDate) {\r\n                startDate = firstViewDate\r\n            }\r\n            updatedStartDate = _date.default.normalizeDate(options.startDate, new Date(startDate))\r\n        }\r\n        return _date.default.roundDateByStartDayHour(updatedStartDate, startDayHour)\r\n    },\r\n    updateAppointmentEndDate: function(options) {\r\n        var endDate = options.endDate;\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var updatedEndDate = endDate;\r\n        if (endDate.getHours() >= endDayHour) {\r\n            updatedEndDate.setHours(endDayHour, 0, 0, 0)\r\n        } else {\r\n            if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {\r\n                updatedEndDate = new Date(updatedEndDate.getTime() - toMs(\"day\"));\r\n                updatedEndDate.setHours(endDayHour, 0, 0, 0)\r\n            }\r\n        }\r\n        return updatedEndDate\r\n    },\r\n    renderCompactAppointments: function(options) {\r\n        this._compactAppointmentsHelper.render(options)\r\n    },\r\n    clearCompactAppointments: function() {\r\n        this._compactAppointmentsHelper.clear()\r\n    },\r\n    supportCompactDropDownAppointments: function() {\r\n        return this._workSpace._supportCompactDropDownAppointments()\r\n    },\r\n    isApplyCompactAppointmentOffset: function() {\r\n        return this._workSpace._isApplyCompactAppointmentOffset()\r\n    },\r\n    getGroupCount: function() {\r\n        return this._workSpace._getGroupCount()\r\n    },\r\n    mapAppointmentFields: function(config) {\r\n        var targetedData = this.getTargetedAppointment(config.itemData, config.itemElement);\r\n        return {\r\n            appointmentData: config.itemData,\r\n            appointmentElement: config.itemElement,\r\n            targetedAppointmentData: targetedData\r\n        }\r\n    },\r\n    getOffsetByAllDayPanel: function(groupIndex) {\r\n        return this._workSpace._getOffsetByAllDayPanel(groupIndex)\r\n    },\r\n    getGroupTop: function(groupIndex) {\r\n        return this._workSpace._getGroupTop(groupIndex)\r\n    },\r\n    updateResizableArea: function() {\r\n        var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\r\n        var horizontalResizables = (0, _common.grep)($allResizableElements, function(el) {\r\n            var $el = (0, _renderer.default)(el);\r\n            var resizableInst = $el.dxResizable(\"instance\");\r\n            var area = resizableInst.option(\"area\");\r\n            return (0, _array.inArray)(resizableInst.option(\"handles\"), [\"right left\", \"left right\"]) > -1 && (0, _type.isPlainObject)(area)\r\n        });\r\n        (0, _iterator.each)(horizontalResizables, function(_, el) {\r\n            var $el = (0, _renderer.default)(el);\r\n            var position = (0, _translator.locate)($el);\r\n            var appointmentData = this._appointments._getItemData($el);\r\n            var area = this._appointments._calculateResizableArea({\r\n                left: position.left\r\n            }, appointmentData);\r\n            $el.dxResizable(\"instance\").option(\"area\", area)\r\n        }.bind(this))\r\n    },\r\n    getField: function(field, obj) {\r\n        if (!(0, _type.isDefined)(this._dataAccessors.getter[field])) {\r\n            return\r\n        }\r\n        return this._dataAccessors.getter[field](obj)\r\n    },\r\n    setField: function(field, obj, value) {\r\n        if (!(0, _type.isDefined)(this._dataAccessors.setter[field])) {\r\n            return\r\n        }\r\n        var splitExprStr = this.option(field + \"Expr\").split(\".\");\r\n        var rootField = splitExprStr[0];\r\n        if (void 0 === obj[rootField] && splitExprStr.length > 1) {\r\n            var emptyChain = function(arr) {\r\n                var result = {};\r\n                var tmp = result;\r\n                var arrLength = arr.length - 1;\r\n                for (var i = 1; i < arrLength; i++) {\r\n                    tmp = tmp[arr[i]] = {}\r\n                }\r\n                return result\r\n            }(splitExprStr);\r\n            obj[rootField] = emptyChain\r\n        }\r\n        this._dataAccessors.setter[field](obj, value);\r\n        return obj\r\n    },\r\n    renderAppointments: function() {\r\n        this._renderAppointments()\r\n    },\r\n    prerenderFilter: function() {\r\n        var dateRange = this.getWorkSpace().getDateRange();\r\n        var resources = this._resourcesManager.getResourcesData();\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var allDay;\r\n        if (!this.option(\"showAllDayPanel\") && this._workSpace.supportAllDayRow()) {\r\n            allDay = false\r\n        }\r\n        return this._appointmentModel.filterLoadedAppointments({\r\n            startDayHour: startDayHour,\r\n            endDayHour: endDayHour,\r\n            viewStartDayHour: startDayHour,\r\n            viewEndDayHour: endDayHour,\r\n            min: dateRange[0],\r\n            max: dateRange[1],\r\n            resources: resources,\r\n            allDay: allDay,\r\n            firstDayOfWeek: this.getFirstDayOfWeek(),\r\n            recurrenceException: this._getRecurrenceException.bind(this)\r\n        }, this.timeZoneCalculator)\r\n    },\r\n    prerenderFilterVirtual: function() {\r\n        var _this = this;\r\n        var workspace = this.getWorkSpace();\r\n        var resourcesManager = this._resourcesManager;\r\n        var isAllDaySupported = this.option(\"showAllDayPanel\") || !this._workSpace.supportAllDayRow();\r\n        var viewDataProvider = workspace.viewDataProvider;\r\n        var groupedData = viewDataProvider.viewData.groupedData;\r\n        var groupedDataToRender = groupedData.filter(function(_ref2) {\r\n            var dateTable = _ref2.dateTable;\r\n            return dateTable.length > 0\r\n        });\r\n        var isVerticalGrouping = workspace._isVerticalGroupedWorkSpace();\r\n        var endViewDate = workspace.getEndViewDateByEndDayHour();\r\n        var filterOptions = [];\r\n        groupedDataToRender.forEach(function(_ref3) {\r\n            var groupIndex = _ref3.groupIndex,\r\n                allDayPanel = _ref3.allDayPanel;\r\n            var startDate = viewDataProvider.getGroupStartDate(groupIndex);\r\n            var endDate = new Date(Math.min(viewDataProvider.getGroupEndDate(groupIndex), endViewDate));\r\n            var startDayHour = startDate.getHours();\r\n            var endDayHour = (startDayHour + (endDate - startDate) / HOUR_MS) % HOURS_IN_DAY;\r\n            var allDay = false !== isAllDaySupported && (null === allDayPanel || void 0 === allDayPanel ? void 0 : allDayPanel.length) > 0;\r\n            var groups = viewDataProvider.getCellsGroup(groupIndex);\r\n            var groupResources = isVerticalGrouping ? resourcesManager.getResourcesDataByGroups(groups) : resourcesManager.getResourcesData();\r\n            filterOptions.push({\r\n                isVirtualScrolling: true,\r\n                startDayHour: startDayHour,\r\n                endDayHour: endDayHour,\r\n                viewStartDayHour: _this._getCurrentViewOption(\"startDayHour\"),\r\n                viewEndDayHour: _this._getCurrentViewOption(\"endDayHour\"),\r\n                min: startDate,\r\n                max: endDate,\r\n                resources: groupResources,\r\n                allDay: allDay,\r\n                firstDayOfWeek: _this.getFirstDayOfWeek(),\r\n                recurrenceException: _this._getRecurrenceException.bind(_this)\r\n            })\r\n        });\r\n        var result = this._appointmentModel.filterLoadedVirtualAppointments(filterOptions, this.timeZoneCalculator, workspace._getGroupCount());\r\n        return result\r\n    },\r\n    dayHasAppointment: function(day, appointment, trimTime) {\r\n        return this.dayHasAppointment(day, appointment, trimTime)\r\n    },\r\n    createResourcesTree: function() {\r\n        return this._resourcesManager.createResourcesTree(this._loadedResources)\r\n    },\r\n    getResourceTreeLeaves: function(tree, appointmentResources) {\r\n        return this._resourcesManager.getResourceTreeLeaves(tree, appointmentResources)\r\n    },\r\n    createReducedResourcesTree: function() {\r\n        var tree = this._resourcesManager.createResourcesTree(this._loadedResources);\r\n        return this._resourcesManager.reduceResourcesTree(tree, this.getFilteredItems())\r\n    },\r\n    groupAppointmentsByResources: function(appointments) {\r\n        var result = {\r\n            0: appointments\r\n        };\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (groups && groups.length && this._resourcesManager.getResourcesData().length) {\r\n            result = this._resourcesManager.groupAppointmentsByResources(appointments, this._loadedResources)\r\n        }\r\n        var totalResourceCount = 0;\r\n        (0, _iterator.each)(this._loadedResources, function(i, resource) {\r\n            if (!i) {\r\n                totalResourceCount = resource.items.length\r\n            } else {\r\n                totalResourceCount *= resource.items.length\r\n            }\r\n        });\r\n        for (var j = 0; j < totalResourceCount; j++) {\r\n            var index = j.toString();\r\n            if (result[index]) {\r\n                continue\r\n            }\r\n            result[index] = []\r\n        }\r\n        return result\r\n    },\r\n    getAgendaRows: function(options) {\r\n        var renderingStrategy = this._layoutManager.getRenderingStrategyInstance();\r\n        var calculateRows = renderingStrategy.calculateRows.bind(renderingStrategy);\r\n        var d = new _deferred.Deferred;\r\n\r\n        function rowsCalculated(appointments) {\r\n            var result = calculateRows(appointments, options.agendaDuration, options.currentDate);\r\n            this._dataSourceLoadedCallback.remove(rowsCalculated);\r\n            d.resolve(result)\r\n        }\r\n        this._dataSourceLoadedCallback.add(rowsCalculated);\r\n        return d.promise()\r\n    },\r\n    getAgendaVerticalStepHeight: function() {\r\n        return this.getWorkSpace().getAgendaVerticalStepHeight()\r\n    },\r\n    getAgendaDuration: function() {\r\n        return this._getCurrentViewOption(\"agendaDuration\")\r\n    },\r\n    getStartViewDate: function() {\r\n        return this.getStartViewDate()\r\n    },\r\n    getEndViewDate: function() {\r\n        return this.getEndViewDate()\r\n    },\r\n    getMaxAppointmentsPerCell: function() {\r\n        return this.getMaxAppointmentsPerCell()\r\n    },\r\n    forceMaxAppointmentPerCell: function() {\r\n        return this.forceMaxAppointmentPerCell()\r\n    },\r\n    onAgendaReady: function(rows) {\r\n        var $appts = this.getAppointmentsInstance()._itemElements();\r\n        var total = 0;\r\n        var applyClass = function(_, count) {\r\n            var index = count + total - 1;\r\n            $appts.eq(index).addClass(_constants.AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS);\r\n            total += count\r\n        };\r\n        for (var i = 0; i < rows.length; i++) {\r\n            (0, _iterator.each)(rows[i], applyClass)\r\n        }\r\n    },\r\n    getTimezone: function() {\r\n        return this._getTimezoneOffsetByOption()\r\n    },\r\n    getTargetedAppointmentData: function(appointment, element) {\r\n        return this.getTargetedAppointment(appointment, element)\r\n    },\r\n    getAppointmentDurationInMs: function(options) {\r\n        var startDate = options.startDate;\r\n        var endDate = options.endDate;\r\n        var allDay = options.allDay;\r\n        var appointmentDuration = endDate.getTime() - startDate.getTime();\r\n        var dayDuration = toMs(\"day\");\r\n        var visibleDayDuration = this._workSpace.getVisibleDayDuration();\r\n        var result = 0;\r\n        if (allDay) {\r\n            var ceilQuantityOfDays = Math.ceil(appointmentDuration / dayDuration);\r\n            result = ceilQuantityOfDays * visibleDayDuration\r\n        } else {\r\n            var isDifferentDates = !_utils.default.isSameAppointmentDates(startDate, endDate);\r\n            var floorQuantityOfDays = Math.floor(appointmentDuration / dayDuration);\r\n            var tailDuration;\r\n            if (isDifferentDates) {\r\n                var startDateEndHour = new Date(new Date(startDate).setHours(this.option(\"endDayHour\"), 0, 0));\r\n                var hiddenDayDuration = dayDuration - visibleDayDuration - (startDate.getTime() > startDateEndHour.getTime() ? startDate.getTime() - startDateEndHour.getTime() : 0);\r\n                tailDuration = appointmentDuration - (floorQuantityOfDays ? floorQuantityOfDays * dayDuration : hiddenDayDuration);\r\n                var startDayTime = this.option(\"startDayHour\") * toMs(\"hour\");\r\n                var endPartDuration = endDate - _date.default.trimTime(endDate);\r\n                if (endPartDuration < startDayTime) {\r\n                    if (floorQuantityOfDays) {\r\n                        tailDuration -= hiddenDayDuration\r\n                    }\r\n                    tailDuration += startDayTime - endPartDuration\r\n                }\r\n            } else {\r\n                tailDuration = appointmentDuration % dayDuration\r\n            }\r\n            if (tailDuration > visibleDayDuration) {\r\n                tailDuration = visibleDayDuration\r\n            }\r\n            result = floorQuantityOfDays * visibleDayDuration + tailDuration || toMs(\"minute\")\r\n        }\r\n        return result\r\n    },\r\n    replaceWrongEndDate: function(appointment, startDate, endDate) {\r\n        this._appointmentModel.replaceWrongEndDate(appointment, startDate, endDate)\r\n    },\r\n    calculateAppointmentEndDate: function(isAllDay, startDate) {\r\n        return this._appointmentModel._calculateAppointmentEndDate(isAllDay, startDate)\r\n    },\r\n    getEndDayHour: function() {\r\n        return this._workSpace.option(\"endDayHour\") || this.option(\"endDayHour\")\r\n    },\r\n    getStartDayHour: function() {\r\n        return this._workSpace.option(\"startDayHour\") || this.option(\"startDayHour\")\r\n    },\r\n    isAdaptive: function() {\r\n        return this.option(\"adaptivityEnabled\")\r\n    },\r\n    validateDayHours: function() {\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        if (startDayHour >= endDayHour) {\r\n            throw _ui.default.Error(\"E1058\")\r\n        }\r\n    },\r\n    removeDroppableCellClass: function() {\r\n        this._workSpace.removeDroppableCellClass()\r\n    }\r\n};\r\nvar _default = subscribes;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}