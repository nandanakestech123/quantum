{"ast":null,"code":"/**\r\n * DevExtreme (viz/range_selector/range_selector.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _type2 = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nvar _math = require(\"../../core/utils/math\");\n\nvar _range = require(\"../translators/range\");\n\nvar _base_axis = require(\"../axes/base_axis\");\n\nvar _parse_utils = require(\"../components/parse_utils\");\n\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\n\nvar _common = require(\"./common\");\n\nvar _sliders_controller = require(\"./sliders_controller\");\n\nvar _tracker = require(\"./tracker\");\n\nvar _range_view = require(\"./range_view\");\n\nvar _series_data_source = require(\"./series_data_source\");\n\nvar _tick_generator = require(\"../axes/tick_generator\");\n\nvar _base_widget = _interopRequireDefault(require(\"../core/base_widget\"));\n\nvar _export = require(\"../core/export\");\n\nvar _title = require(\"../core/title\");\n\nvar _loading_indicator = require(\"../core/loading_indicator\");\n\nvar _data_source = require(\"../core/data_source\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _max = Math.max;\nvar _ceil = Math.ceil;\nvar _floor = Math.floor;\nvar START_VALUE = \"startValue\";\nvar END_VALUE = \"endValue\";\nvar DATETIME = \"datetime\";\nvar VALUE = \"value\";\nvar DISCRETE = \"discrete\";\nvar SEMIDISCRETE = \"semidiscrete\";\nvar STRING = \"string\";\nvar VALUE_CHANGED = VALUE + \"Changed\";\nvar CONTAINER_BACKGROUND_COLOR = \"containerBackgroundColor\";\nvar SLIDER_MARKER = \"sliderMarker\";\nvar OPTION_BACKGROUND = \"background\";\nvar LOGARITHMIC = \"logarithmic\";\nvar KEEP = \"keep\";\nvar SHIFT = \"shift\";\nvar RESET = \"reset\";\nvar INVISIBLE_POS = -1e3;\nvar SEMIDISCRETE_GRID_SPACING_FACTOR = 50;\nvar DEFAULT_AXIS_DIVISION_FACTOR = 30;\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\nvar logarithmBase = 10;\n\nfunction calculateMarkerHeight(renderer, value, sliderMarkerOptions) {\n  var formattedText = void 0 === value ? _common.consts.emptySliderMarkerText : (0, _common.formatValue)(value, sliderMarkerOptions);\n  var textBBox = getTextBBox(renderer, formattedText, sliderMarkerOptions.font);\n  return _ceil(textBBox.height) + 2 * sliderMarkerOptions.paddingTopBottom + _common.consts.pointerSize;\n}\n\nfunction calculateScaleLabelHalfWidth(renderer, value, scaleOptions, tickIntervalsInfo) {\n  var formattedText = (0, _common.formatValue)(value, scaleOptions.label, tickIntervalsInfo, scaleOptions.valueType, scaleOptions.type, scaleOptions.logarithmBase);\n  var textBBox = getTextBBox(renderer, formattedText, scaleOptions.label.font);\n  return _ceil(textBBox.width / 2);\n}\n\nfunction calculateIndents(renderer, scale, sliderMarkerOptions, indentOptions, tickIntervalsInfo) {\n  var leftMarkerHeight;\n  var leftScaleLabelWidth = 0;\n  var rightScaleLabelWidth = 0;\n  var rightMarkerHeight;\n  var placeholderWidthLeft;\n  var placeholderWidthRight;\n  var placeholderHeight;\n  var ticks = \"semidiscrete\" === scale.type ? scale.customTicks : tickIntervalsInfo.ticks;\n  var startTickValue;\n  var endTickValue;\n  indentOptions = indentOptions || {};\n  placeholderWidthLeft = indentOptions.left;\n  placeholderWidthRight = indentOptions.right;\n  placeholderHeight = sliderMarkerOptions.placeholderHeight;\n\n  if (sliderMarkerOptions.visible) {\n    leftMarkerHeight = calculateMarkerHeight(renderer, scale.startValue, sliderMarkerOptions);\n    rightMarkerHeight = calculateMarkerHeight(renderer, scale.endValue, sliderMarkerOptions);\n\n    if (void 0 === placeholderHeight) {\n      placeholderHeight = _max(leftMarkerHeight, rightMarkerHeight);\n    }\n  }\n\n  if (scale.label.visible) {\n    startTickValue = (0, _type2.isDefined)(scale.startValue) ? ticks[0] : void 0;\n    endTickValue = (0, _type2.isDefined)(scale.endValue) ? ticks[ticks.length - 1] : void 0;\n    leftScaleLabelWidth = calculateScaleLabelHalfWidth(renderer, startTickValue, scale, tickIntervalsInfo);\n    rightScaleLabelWidth = calculateScaleLabelHalfWidth(renderer, endTickValue, scale, tickIntervalsInfo);\n  }\n\n  placeholderWidthLeft = void 0 !== placeholderWidthLeft ? placeholderWidthLeft : leftScaleLabelWidth;\n  placeholderWidthRight = (void 0 !== placeholderWidthRight ? placeholderWidthRight : rightScaleLabelWidth) || 1;\n  return {\n    left: placeholderWidthLeft,\n    right: placeholderWidthRight,\n    top: placeholderHeight || 0,\n    bottom: 0\n  };\n}\n\nfunction calculateValueType(firstValue, secondValue) {\n  var typeFirstValue = (0, _type2.type)(firstValue);\n  var typeSecondValue = (0, _type2.type)(secondValue);\n\n  var validType = function (type) {\n    return typeFirstValue === type || typeSecondValue === type;\n  };\n\n  return validType(\"date\") ? DATETIME : validType(\"number\") ? \"numeric\" : validType(STRING) ? STRING : \"\";\n}\n\nfunction showScaleMarkers(scaleOptions) {\n  return scaleOptions.valueType === DATETIME && scaleOptions.marker.visible;\n}\n\nfunction updateTranslatorRangeInterval(translatorRange, scaleOptions) {\n  var intervalX = scaleOptions.minorTickInterval || scaleOptions.tickInterval;\n\n  if (\"datetime\" === scaleOptions.valueType) {\n    intervalX = _date.default.dateToMilliseconds(intervalX);\n  }\n\n  translatorRange.addRange({\n    interval: intervalX\n  });\n}\n\nfunction checkLogarithmicOptions(options, defaultLogarithmBase, incidentOccurred) {\n  if (!options) {\n    return;\n  }\n\n  var logarithmBase = options.logarithmBase;\n\n  if (options.type === LOGARITHMIC && logarithmBase <= 0 || logarithmBase && !(0, _type2.isNumeric)(logarithmBase)) {\n    options.logarithmBase = defaultLogarithmBase;\n    incidentOccurred(\"E2104\");\n  } else {\n    if (options.type !== LOGARITHMIC) {\n      options.logarithmBase = void 0;\n    }\n  }\n}\n\nfunction calculateScaleAreaHeight(renderer, scaleOptions, visibleMarkers, tickIntervalsInfo) {\n  var labelScaleOptions = scaleOptions.label;\n  var markerScaleOptions = scaleOptions.marker;\n  var placeholderHeight = scaleOptions.placeholderHeight;\n  var ticks = \"semidiscrete\" === scaleOptions.type ? scaleOptions.customTicks : tickIntervalsInfo.ticks;\n  var text = (0, _common.formatValue)(ticks[0], labelScaleOptions);\n\n  if (placeholderHeight) {\n    return placeholderHeight;\n  } else {\n    return (labelScaleOptions.visible ? labelScaleOptions.topIndent + getTextBBox(renderer, text, labelScaleOptions.font).height : 0) + (visibleMarkers ? markerScaleOptions.topIndent + markerScaleOptions.separatorHeight : 0);\n  }\n}\n\nfunction getMinorTickIntervalUnit(tickInterval, minorTickInterval, withCorrection) {\n  var interval = _date.default.getDateUnitInterval(minorTickInterval);\n\n  var majorUnit = _date.default.getDateUnitInterval(tickInterval);\n\n  var idx = _date.default.dateUnitIntervals.indexOf(interval);\n\n  if (withCorrection && interval === majorUnit && idx > 0) {\n    interval = _date.default.dateUnitIntervals[idx - 1];\n  }\n\n  return interval;\n}\n\nfunction getNextTickInterval(tickInterval, minorTickInterval, isDateType) {\n  if (!tickInterval) {\n    tickInterval = minorTickInterval;\n  } else {\n    if (isDateType) {\n      tickInterval = _date.default.getNextDateUnit(tickInterval);\n    } else {\n      tickInterval += minorTickInterval;\n    }\n  }\n\n  return tickInterval;\n}\n\nfunction calculateTickIntervalsForSemidiscreteScale(scaleOptions, min, max, screenDelta) {\n  var minorTickInterval = scaleOptions.minorTickInterval;\n  var tickInterval = scaleOptions.tickInterval;\n  var interval;\n  var isDateType = \"datetime\" === scaleOptions.valueType;\n  var gridSpacingFactor = scaleOptions.axisDivisionFactor || {};\n  var tickCountByInterval;\n  var tickCountByScreen;\n\n  if (!tickInterval) {\n    do {\n      interval = getNextTickInterval(tickInterval, minorTickInterval, isDateType);\n\n      if (tickInterval !== interval) {\n        tickInterval = interval;\n      } else {\n        break;\n      }\n\n      if (isDateType) {\n        interval = _date.default.dateToMilliseconds(tickInterval);\n      }\n\n      tickCountByInterval = _ceil((max - min) / interval);\n      tickCountByScreen = _floor(screenDelta / (gridSpacingFactor[tickInterval] || SEMIDISCRETE_GRID_SPACING_FACTOR)) || 1;\n    } while (interval && tickCountByInterval > tickCountByScreen);\n  }\n\n  return {\n    tickInterval: tickInterval,\n    minorTickInterval: minorTickInterval,\n    bounds: {\n      minVisible: min,\n      maxVisible: max\n    },\n    ticks: []\n  };\n}\n\nfunction updateTickIntervals(scaleOptions, screenDelta, incidentOccurred, range) {\n  var result;\n  var min = (0, _type2.isDefined)(range.minVisible) ? range.minVisible : range.min;\n  var max = (0, _type2.isDefined)(range.maxVisible) ? range.maxVisible : range.max;\n  var categoriesInfo = scaleOptions._categoriesInfo;\n  var ticksInfo;\n  var length;\n  var bounds = {};\n\n  if (scaleOptions.type === SEMIDISCRETE) {\n    result = calculateTickIntervalsForSemidiscreteScale(scaleOptions, min, max, screenDelta);\n  } else {\n    ticksInfo = (0, _tick_generator.tickGenerator)({\n      axisType: scaleOptions.type,\n      dataType: scaleOptions.valueType,\n      logBase: scaleOptions.logarithmBase,\n      allowNegatives: true,\n      linearThreshold: Math.abs(scaleOptions.linearThreshold || 0),\n      axisDivisionFactor: scaleOptions.axisDivisionFactor,\n      minorAxisDivisionFactor: scaleOptions.minorAxisDivisionFactor,\n      calculateMinors: true,\n      allowDecimals: scaleOptions.allowDecimals,\n      endOnTick: scaleOptions.endOnTick,\n      incidentOccurred: incidentOccurred,\n      rangeIsEmpty: range.isEmpty()\n    })({\n      min: min,\n      max: max,\n      categories: (0, _type2.isDefined)(categoriesInfo) ? categoriesInfo.categories : []\n    }, screenDelta, scaleOptions.tickInterval, scaleOptions.forceUserTickInterval, void 0, scaleOptions.minorTickInterval, scaleOptions.minorTickCount);\n    length = ticksInfo.ticks.length;\n    bounds.minVisible = ticksInfo.ticks[0] < min ? ticksInfo.ticks[0] : min;\n    bounds.maxVisible = ticksInfo.ticks[length - 1] > max ? ticksInfo.ticks[length - 1] : max;\n    result = {\n      tickInterval: ticksInfo.tickInterval,\n      minorTickInterval: 0 === scaleOptions.minorTickInterval ? 0 : ticksInfo.minorTickInterval,\n      bounds: bounds,\n      ticks: ticksInfo.ticks\n    };\n  }\n\n  return result;\n}\n\nfunction getFirstDayOfWeek(options) {\n  var _options$workWeek;\n\n  return null === (_options$workWeek = options.workWeek) || void 0 === _options$workWeek ? void 0 : _options$workWeek[0];\n}\n\nfunction calculateTranslatorRange(seriesDataSource, scaleOptions) {\n  var minValue;\n  var maxValue;\n  var inverted = false;\n  var startValue = scaleOptions.startValue;\n  var endValue = scaleOptions.endValue;\n  var categories;\n  var categoriesInfo;\n  var translatorRange = seriesDataSource ? seriesDataSource.getBoundRange().arg : new _range.Range();\n  var rangeForCategories;\n  var isDate = \"datetime\" === scaleOptions.valueType;\n  var firstDayOfWeek = getFirstDayOfWeek(scaleOptions);\n  var minRange = scaleOptions.minRange;\n\n  if (scaleOptions.type === DISCRETE) {\n    rangeForCategories = new _range.Range({\n      minVisible: startValue,\n      maxVisible: endValue\n    });\n    rangeForCategories.addRange(translatorRange);\n    translatorRange = rangeForCategories;\n    categories = seriesDataSource ? seriesDataSource.argCategories : scaleOptions.categories || !seriesDataSource && startValue && endValue && [startValue, endValue];\n    categories = categories || [];\n    scaleOptions._categoriesInfo = categoriesInfo = (0, _utils.getCategoriesInfo)(categories, startValue, endValue);\n  }\n\n  if (scaleOptions.type === SEMIDISCRETE) {\n    startValue = scaleOptions.startValue = correctValueByInterval(scaleOptions.startValue, isDate, minRange, firstDayOfWeek);\n    endValue = scaleOptions.endValue = correctValueByInterval(scaleOptions.endValue, isDate, minRange, firstDayOfWeek);\n    translatorRange.minVisible = correctValueByInterval(translatorRange.minVisible, isDate, minRange, firstDayOfWeek);\n    translatorRange.maxVisible = correctValueByInterval(translatorRange.maxVisible, isDate, minRange, firstDayOfWeek);\n    translatorRange.min = correctValueByInterval(translatorRange.min, isDate, minRange, firstDayOfWeek);\n    translatorRange.max = correctValueByInterval(translatorRange.max, isDate, minRange, firstDayOfWeek);\n  }\n\n  if ((0, _type2.isDefined)(startValue) && (0, _type2.isDefined)(endValue)) {\n    inverted = categoriesInfo ? categoriesInfo.inverted : startValue > endValue;\n    minValue = categoriesInfo ? categoriesInfo.start : inverted ? endValue : startValue;\n    maxValue = categoriesInfo ? categoriesInfo.end : inverted ? startValue : endValue;\n  } else {\n    if ((0, _type2.isDefined)(startValue) || (0, _type2.isDefined)(endValue)) {\n      minValue = startValue;\n      maxValue = endValue;\n    } else {\n      if (categoriesInfo) {\n        minValue = categoriesInfo.start;\n        maxValue = categoriesInfo.end;\n      }\n    }\n  }\n\n  translatorRange.addRange({\n    invert: inverted,\n    min: minValue,\n    max: maxValue,\n    minVisible: minValue,\n    maxVisible: maxValue,\n    dataType: scaleOptions.valueType\n  });\n  translatorRange.addRange({\n    categories: !seriesDataSource ? categories : void 0,\n    base: scaleOptions.logarithmBase,\n    axisType: scaleOptions.type,\n    dataType: scaleOptions.valueType\n  });\n  seriesDataSource && translatorRange.sortCategories(categories);\n  return translatorRange;\n}\n\nfunction startEndNotDefined(start, end) {\n  return !(0, _type2.isDefined)(start) || !(0, _type2.isDefined)(end);\n}\n\nfunction getTextBBox(renderer, text, fontOptions) {\n  var textElement = renderer.text(text, INVISIBLE_POS, INVISIBLE_POS).css((0, _utils.patchFontOptions)(fontOptions)).append(renderer.root);\n  var textBBox = textElement.getBBox();\n  textElement.remove();\n  return textBBox;\n}\n\nfunction getDateMarkerVisibilityChecker(screenDelta) {\n  return function (isDateScale, isMarkerVisible, min, max, tickInterval) {\n    if (isMarkerVisible && isDateScale) {\n      if (!(0, _type2.isDefined)(tickInterval) || tickInterval.years || tickInterval.months >= 6 || screenDelta / SEMIDISCRETE_GRID_SPACING_FACTOR < _ceil((max - min) / _date.default.dateToMilliseconds(\"year\")) + 1) {\n        isMarkerVisible = false;\n      }\n    }\n\n    return isMarkerVisible;\n  };\n}\n\nfunction updateScaleOptions(scaleOptions, seriesDataSource, translatorRange, tickIntervalsInfo, checkDateMarkerVisibility) {\n  var bounds;\n  var isEmptyInterval;\n  var categoriesInfo = scaleOptions._categoriesInfo;\n  var intervals;\n  var isDateTime = scaleOptions.valueType === DATETIME;\n\n  if (seriesDataSource && !seriesDataSource.isEmpty() && !translatorRange.isEmpty()) {\n    bounds = tickIntervalsInfo.bounds;\n    translatorRange.addRange(bounds);\n    scaleOptions.startValue = translatorRange.invert ? bounds.maxVisible : bounds.minVisible;\n    scaleOptions.endValue = translatorRange.invert ? bounds.minVisible : bounds.maxVisible;\n  }\n\n  scaleOptions.marker.visible = checkDateMarkerVisibility(isDateTime && scaleOptions.type.indexOf(DISCRETE) === -1, scaleOptions.marker.visible, scaleOptions.startValue, scaleOptions.endValue, tickIntervalsInfo.tickInterval);\n\n  if (categoriesInfo) {\n    scaleOptions.startValue = categoriesInfo.start;\n    scaleOptions.endValue = categoriesInfo.end;\n  }\n\n  if (scaleOptions.type.indexOf(DISCRETE) === -1) {\n    isEmptyInterval = (0, _type2.isDate)(scaleOptions.startValue) && (0, _type2.isDate)(scaleOptions.endValue) && scaleOptions.startValue.getTime() === scaleOptions.endValue.getTime() || scaleOptions.startValue === scaleOptions.endValue;\n  }\n\n  scaleOptions.isEmpty = startEndNotDefined(scaleOptions.startValue, scaleOptions.endValue) || isEmptyInterval;\n\n  if (scaleOptions.isEmpty) {\n    scaleOptions.startValue = scaleOptions.endValue = void 0;\n  } else {\n    scaleOptions.minorTickInterval = tickIntervalsInfo.minorTickInterval;\n    scaleOptions.tickInterval = tickIntervalsInfo.tickInterval;\n\n    if (isDateTime && (!(0, _type2.isDefined)(scaleOptions.label.format) || scaleOptions.type === SEMIDISCRETE && scaleOptions.minorTickInterval !== scaleOptions.tickInterval)) {\n      if (scaleOptions.type === DISCRETE) {\n        scaleOptions.label.format = _format_helper.default.getDateFormatByTicks(tickIntervalsInfo.ticks);\n      } else {\n        if (!scaleOptions.marker.visible) {\n          scaleOptions.label.format = _format_helper.default.getDateFormatByTickInterval(scaleOptions.startValue, scaleOptions.endValue, scaleOptions.tickInterval);\n        } else {\n          scaleOptions.label.format = _date.default.getDateFormatByTickInterval(scaleOptions.tickInterval);\n        }\n      }\n    }\n  }\n\n  if (scaleOptions.type === SEMIDISCRETE) {\n    intervals = getIntervalCustomTicks(scaleOptions);\n    scaleOptions.customMinorTicks = intervals.altIntervals;\n    scaleOptions.customTicks = intervals.intervals;\n    scaleOptions.customBoundTicks = [scaleOptions.customTicks[0]];\n  }\n}\n\nfunction prepareScaleOptions(scaleOption, calculatedValueType, incidentOccurred, containerColor) {\n  var parsedValue = 0;\n  var valueType = (0, _parse_utils.correctValueType)((0, _utils.normalizeEnum)(scaleOption.valueType));\n\n  var validateStartEndValues = function (field, parser) {\n    var messageToIncidentOccurred = field === START_VALUE ? \"start\" : \"end\";\n\n    if ((0, _type2.isDefined)(scaleOption[field])) {\n      parsedValue = parser(scaleOption[field]);\n\n      if ((0, _type2.isDefined)(parsedValue)) {\n        scaleOption[field] = parsedValue;\n      } else {\n        scaleOption[field] = void 0;\n        incidentOccurred(\"E2202\", [messageToIncidentOccurred]);\n      }\n    }\n  };\n\n  valueType = calculatedValueType || valueType;\n\n  if (!valueType) {\n    valueType = calculateValueType(scaleOption.startValue, scaleOption.endValue) || \"numeric\";\n  }\n\n  if (valueType === STRING || scaleOption.categories) {\n    scaleOption.type = DISCRETE;\n    valueType = STRING;\n  }\n\n  scaleOption.containerColor = containerColor;\n  scaleOption.valueType = valueType;\n  scaleOption.dataType = valueType;\n  var parser = (0, _parse_utils.getParser)(valueType);\n  validateStartEndValues(START_VALUE, parser);\n  validateStartEndValues(END_VALUE, parser);\n  checkLogarithmicOptions(scaleOption, logarithmBase, incidentOccurred);\n\n  if (!scaleOption.type) {\n    scaleOption.type = \"continuous\";\n  }\n\n  scaleOption.parser = parser;\n\n  if (scaleOption.type === SEMIDISCRETE) {\n    scaleOption.minorTick.visible = false;\n    scaleOption.minorTickInterval = scaleOption.minRange;\n    scaleOption.marker.visible = false;\n    scaleOption.maxRange = void 0;\n  }\n\n  scaleOption.forceUserTickInterval |= (0, _type2.isDefined)(scaleOption.tickInterval) && !(0, _type2.isDefined)(scaleOption.axisDivisionFactor);\n  scaleOption.axisDivisionFactor = (0, _type2.isDefined)(scaleOption.axisDivisionFactor) ? scaleOption.axisDivisionFactor : DEFAULT_AXIS_DIVISION_FACTOR;\n  scaleOption.minorAxisDivisionFactor = (0, _type2.isDefined)(scaleOption.minorAxisDivisionFactor) ? scaleOption.minorAxisDivisionFactor : DEFAULT_MINOR_AXIS_DIVISION_FACTOR;\n  return scaleOption;\n}\n\nfunction correctValueByInterval(value, isDate, interval, firstDayOfWeek) {\n  if ((0, _type2.isDefined)(value)) {\n    value = isDate ? _date.default.correctDateWithUnitBeginning(new Date(value), interval, null, firstDayOfWeek) : (0, _math.adjust)(_floor((0, _math.adjust)(value / interval)) * interval);\n  }\n\n  return value;\n}\n\nfunction getIntervalCustomTicks(options) {\n  var min = options.startValue;\n  var max = options.endValue;\n  var isDate = \"datetime\" === options.valueType;\n  var firstDayOfWeek = getFirstDayOfWeek(options);\n  var tickInterval = options.tickInterval;\n  var res = {\n    intervals: []\n  };\n\n  if (!(0, _type2.isDefined)(min) || !(0, _type2.isDefined)(max)) {\n    return res;\n  }\n\n  res.intervals = _date.default.getSequenceByInterval(min, max, options.minorTickInterval);\n\n  if (tickInterval !== options.minorTickInterval) {\n    res.altIntervals = res.intervals;\n    min = correctValueByInterval(min, isDate, tickInterval, firstDayOfWeek);\n    max = correctValueByInterval(max, isDate, tickInterval, firstDayOfWeek);\n    res.intervals = _date.default.getSequenceByInterval(min, max, tickInterval);\n    res.intervals[0] = res.altIntervals[0];\n  }\n\n  return res;\n}\n\nfunction getPrecisionForSlider(startValue, endValue, screenDelta) {\n  var d = Math.abs(endValue - startValue) / screenDelta;\n\n  var tail = d - _floor(d);\n\n  return tail > 0 ? _ceil(Math.abs((0, _math.adjust)((0, _utils.getLog)(tail, 10)))) : 0;\n}\n\nvar dxRangeSelector = _base_widget.default.inherit({\n  _toggleParentsScrollSubscription: function () {},\n  _eventsMap: {\n    onValueChanged: {\n      name: VALUE_CHANGED\n    }\n  },\n  _rootClassPrefix: \"dxrs\",\n  _rootClass: \"dxrs-range-selector\",\n  _dataIsReady: function () {\n    return this._dataIsLoaded();\n  },\n  _initialChanges: [\"DATA_SOURCE\", \"VALUE\"],\n  _themeDependentChanges: [\"MOSTLY_TOTAL\"],\n  _themeSection: \"rangeSelector\",\n  _fontFields: [\"scale.label.font\", \"sliderMarker.font\"],\n  _initCore: function () {\n    var that = this;\n    var renderer = that._renderer;\n    var root = renderer.root;\n    root.css({\n      \"touch-action\": \"pan-y\"\n    });\n    that._clipRect = renderer.clipRect();\n    var rangeViewGroup = renderer.g().attr({\n      \"class\": \"dxrs-view\"\n    }).append(root);\n    var slidersGroup = renderer.g().attr({\n      \"class\": \"dxrs-slidersContainer\",\n      \"clip-path\": that._clipRect.id\n    }).append(root);\n    var scaleGroup = renderer.g().attr({\n      \"class\": \"dxrs-scale\",\n      \"clip-path\": that._clipRect.id\n    }).append(root);\n    var scaleBreaksGroup = renderer.g().attr({\n      \"class\": \"dxrs-scale-breaks\"\n    }).append(root);\n    var trackersGroup = renderer.g().attr({\n      \"class\": \"dxrs-trackers\"\n    }).append(root);\n    that._axis = new AxisWrapper({\n      renderer: renderer,\n      root: scaleGroup,\n      scaleBreaksGroup: scaleBreaksGroup,\n      updateSelectedRange: function (range, e) {\n        that.setValue((0, _utils.convertVisualRangeObject)(range), e);\n      },\n      incidentOccurred: that._incidentOccurred\n    });\n    that._rangeView = new _range_view.RangeView({\n      renderer: renderer,\n      root: rangeViewGroup,\n      translator: that._axis.getTranslator()\n    });\n    that._slidersController = new _sliders_controller.SlidersController({\n      renderer: renderer,\n      root: slidersGroup,\n      trackersGroup: trackersGroup,\n      updateSelectedRange: function (range, lastSelectedRange, e) {\n        if (!that._rangeOption) {\n          that.option(VALUE, (0, _utils.convertVisualRangeObject)(range, (0, _type2.isPlainObject)(that._options.silent(VALUE))));\n        }\n\n        that._eventTrigger(VALUE_CHANGED, {\n          value: (0, _utils.convertVisualRangeObject)(range),\n          previousValue: (0, _utils.convertVisualRangeObject)(lastSelectedRange),\n          event: e\n        });\n      },\n      axis: that._axis,\n      translator: that._axis.getTranslator()\n    });\n    that._tracker = new _tracker.Tracker({\n      renderer: renderer,\n      controller: that._slidersController\n    });\n  },\n  _getDefaultSize: function () {\n    return {\n      width: 400,\n      height: 160\n    };\n  },\n  _disposeCore: function () {\n    this._axis.dispose();\n\n    this._slidersController.dispose();\n\n    this._tracker.dispose();\n  },\n  _applySize: function (rect) {\n    this._clientRect = rect.slice();\n\n    this._change([\"MOSTLY_TOTAL\"]);\n  },\n  _optionChangesMap: {\n    scale: \"SCALE\",\n    value: \"VALUE\",\n    dataSource: \"DATA_SOURCE\"\n  },\n  _optionChangesOrder: [\"SCALE\", \"DATA_SOURCE\"],\n  _change_SCALE: function () {\n    this._change([\"MOSTLY_TOTAL\"]);\n  },\n  _setValueByDataSource: function () {\n    var that = this;\n\n    var options = that._options.silent();\n\n    var axis = that._axis;\n\n    if (options.dataSource) {\n      var selectedRangeUpdateMode = that.option(\"selectedRangeUpdateMode\");\n      var value = that.getValue();\n      var valueIsReady = (0, _type2.isDefined)(value[0]) && (0, _type2.isDefined)(value[1]);\n\n      if ((0, _type2.isDefined)(selectedRangeUpdateMode)) {\n        selectedRangeUpdateMode = (0, _utils.normalizeEnum)(selectedRangeUpdateMode);\n        that.__skipAnimation = true;\n      } else {\n        if (valueIsReady && !that._dataSourceIsAsync) {\n          selectedRangeUpdateMode = RESET;\n        }\n      }\n\n      if (\"auto\" === selectedRangeUpdateMode && valueIsReady) {\n        var rangesInfo = axis.allScaleSelected(value);\n\n        if (rangesInfo.startValue && rangesInfo.endValue) {\n          selectedRangeUpdateMode = RESET;\n        } else {\n          if (rangesInfo.endValue) {\n            selectedRangeUpdateMode = SHIFT;\n          } else {\n            selectedRangeUpdateMode = KEEP;\n          }\n        }\n      }\n\n      if (selectedRangeUpdateMode === RESET) {\n        options[VALUE] = null;\n      } else {\n        if (selectedRangeUpdateMode === SHIFT && valueIsReady) {\n          var _value = that.getValue();\n\n          that.__skipAnimation = true;\n          options[VALUE] = {\n            length: axis.getVisualRangeLength({\n              minVisible: _value[0],\n              maxVisible: _value[1]\n            })\n          };\n        } else {\n          if (selectedRangeUpdateMode === KEEP) {\n            that.__skipAnimation = true;\n          }\n        }\n      }\n    }\n\n    that._dataSourceIsAsync = void 0;\n  },\n  _change_DATA_SOURCE: function () {\n    if (this._options.silent(\"dataSource\")) {\n      this._updateDataSource();\n    }\n  },\n  _customChangesOrder: [\"MOSTLY_TOTAL\", \"VALUE\", \"SLIDER_SELECTION\"],\n  _change_MOSTLY_TOTAL: function () {\n    this._applyMostlyTotalChange();\n  },\n  _change_SLIDER_SELECTION: function () {\n    var that = this;\n\n    var value = that._options.silent(VALUE);\n\n    that._slidersController.setSelectedRange(value && (0, _utils.getVizRangeObject)(value));\n  },\n  _change_VALUE: function () {\n    var that = this;\n    var option = that._rangeOption;\n    that._dataSourceIsAsync = !that._dataIsReady();\n\n    if (option) {\n      that._options.silent(VALUE, option);\n\n      that.setValue(option);\n    }\n  },\n  _validateRange: function (start, end) {\n    var that = this;\n\n    var translator = that._axis.getTranslator();\n\n    if ((0, _type2.isDefined)(start) && !translator.isValid(start) || (0, _type2.isDefined)(end) && !translator.isValid(end)) {\n      that._incidentOccurred(\"E2203\");\n    }\n  },\n  _applyChanges: function () {\n    var that = this;\n\n    var value = that._options.silent(VALUE);\n\n    if (that._changes.has(\"VALUE\") && value) {\n      that._rangeOption = value;\n    }\n\n    that.callBase.apply(that, arguments);\n    that._rangeOption = null;\n    that.__isResizing = that.__skipAnimation = false;\n  },\n  _applyMostlyTotalChange: function () {\n    var that = this;\n    var renderer = that._renderer;\n    var rect = that._clientRect;\n    var currentAnimationEnabled;\n    var canvas = {\n      left: rect[0],\n      top: rect[1],\n      width: rect[2] - rect[0],\n      height: rect[3] - rect[1]\n    };\n\n    if (that.__isResizing || that.__skipAnimation) {\n      currentAnimationEnabled = renderer.animationEnabled();\n      renderer.updateAnimationOptions({\n        enabled: false\n      });\n    }\n\n    that._clipRect.attr({\n      x: rect[0],\n      y: rect[1],\n      width: rect[2] - rect[0],\n      height: rect[3] - rect[1]\n    });\n\n    that._axis.getTranslator().update(new _range.Range(), canvas, {\n      isHorizontal: true\n    });\n\n    that._updateContent({\n      left: rect[0],\n      top: rect[1],\n      width: rect[2] - rect[0],\n      height: rect[3] - rect[1]\n    });\n\n    if (that.__isResizing || that.__skipAnimation) {\n      renderer.updateAnimationOptions({\n        enabled: currentAnimationEnabled\n      });\n    }\n\n    that._drawn();\n  },\n  _dataSourceChangedHandler: function () {\n    this._setValueByDataSource();\n\n    this._requestChange([\"MOSTLY_TOTAL\"]);\n  },\n  _completeSeriesDataSourceCreation: function (scaleOptions, seriesDataSource) {\n    var rect = this._clientRect;\n    var canvas = {\n      left: rect[0],\n      top: rect[1],\n      width: rect[2] - rect[0],\n      height: rect[3] - rect[1]\n    };\n\n    this._axis.updateOptions((0, _extend.extend)({}, scaleOptions, {\n      isHorizontal: true,\n      label: {}\n    }));\n\n    seriesDataSource.isShowChart() && this._axis.setMarginOptions(seriesDataSource.getMarginOptions(canvas));\n\n    this._axis.updateCanvas(canvas);\n\n    seriesDataSource.createPoints();\n  },\n  _updateContent: function (canvas) {\n    var that = this;\n    var chartOptions = that.option(\"chart\");\n\n    var seriesDataSource = that._createSeriesDataSource(chartOptions);\n\n    var isCompactMode = !(seriesDataSource && seriesDataSource.isShowChart() || that.option(\"background.image.url\"));\n    var scaleOptions = prepareScaleOptions(that._getOption(\"scale\"), seriesDataSource && seriesDataSource.getCalculatedValueType(), that._incidentOccurred, this._getOption(\"containerBackgroundColor\", true));\n    seriesDataSource && that._completeSeriesDataSourceCreation(scaleOptions, seriesDataSource);\n    var argTranslatorRange = calculateTranslatorRange(seriesDataSource, scaleOptions);\n    var tickIntervalsInfo = updateTickIntervals(scaleOptions, canvas.width, that._incidentOccurred, argTranslatorRange);\n    var chartThemeManager = seriesDataSource && seriesDataSource.isShowChart() && seriesDataSource.getThemeManager();\n\n    if (chartThemeManager) {\n      checkLogarithmicOptions(chartOptions && chartOptions.valueAxis, chartThemeManager.getOptions(\"valueAxis\").logarithmBase, that._incidentOccurred);\n    }\n\n    updateScaleOptions(scaleOptions, seriesDataSource, argTranslatorRange, tickIntervalsInfo, getDateMarkerVisibilityChecker(canvas.width));\n    updateTranslatorRangeInterval(argTranslatorRange, scaleOptions);\n\n    var sliderMarkerOptions = that._prepareSliderMarkersOptions(scaleOptions, canvas.width, tickIntervalsInfo, argTranslatorRange);\n\n    var indents = calculateIndents(that._renderer, scaleOptions, sliderMarkerOptions, that.option(\"indent\"), tickIntervalsInfo);\n    var rangeContainerCanvas = {\n      left: canvas.left + indents.left,\n      top: canvas.top + indents.top,\n      width: canvas.left + indents.left + _max(canvas.width - indents.left - indents.right, 1),\n      height: _max(!isCompactMode ? canvas.height - indents.top - indents.bottom - calculateScaleAreaHeight(that._renderer, scaleOptions, showScaleMarkers(scaleOptions), tickIntervalsInfo) : _common.HEIGHT_COMPACT_MODE, 0),\n      right: 0,\n      bottom: 0\n    };\n\n    that._axis.update(scaleOptions, isCompactMode, rangeContainerCanvas, argTranslatorRange, seriesDataSource);\n\n    scaleOptions.minorTickInterval = scaleOptions.isEmpty ? 0 : scaleOptions.minorTickInterval;\n\n    that._updateElements(scaleOptions, sliderMarkerOptions, isCompactMode, rangeContainerCanvas, seriesDataSource);\n\n    if (chartThemeManager) {\n      chartThemeManager.dispose();\n    }\n  },\n  _updateElements: function (scaleOptions, sliderMarkerOptions, isCompactMode, canvas, seriesDataSource) {\n    var that = this;\n\n    var behavior = that._getOption(\"behavior\");\n\n    var shutterOptions = that._getOption(\"shutter\");\n\n    var isNotSemiDiscrete = scaleOptions.type !== SEMIDISCRETE;\n    shutterOptions.color = shutterOptions.color || that._getOption(CONTAINER_BACKGROUND_COLOR, true);\n\n    that._rangeView.update(that.option(\"background\"), that._themeManager.theme(\"background\"), canvas, isCompactMode, behavior.animationEnabled && that._renderer.animationEnabled(), seriesDataSource);\n\n    that._isUpdating = true;\n\n    that._slidersController.update([canvas.top, canvas.top + canvas.height], behavior, isCompactMode, that._getOption(\"sliderHandle\"), sliderMarkerOptions, shutterOptions, {\n      minRange: isNotSemiDiscrete ? that.option(\"scale.minRange\") : void 0,\n      maxRange: isNotSemiDiscrete ? that.option(\"scale.maxRange\") : void 0\n    }, that._axis.getFullTicks(), that._getOption(\"selectedRangeColor\", true));\n\n    that._requestChange([\"SLIDER_SELECTION\"]);\n\n    that._isUpdating = false;\n\n    that._tracker.update(!that._axis.getTranslator().getBusinessRange().isEmpty(), behavior);\n  },\n  _createSeriesDataSource: function (chartOptions) {\n    var that = this;\n    var seriesDataSource;\n\n    var dataSource = that._dataSourceItems();\n\n    var scaleOptions = that._getOption(\"scale\");\n\n    var valueType = scaleOptions.valueType || calculateValueType(scaleOptions.startValue, scaleOptions.endValue);\n    var valueAxis = new _base_axis.Axis({\n      renderer: that._renderer,\n      axisType: \"xyAxes\",\n      drawingType: \"linear\"\n    });\n    valueAxis.updateOptions({\n      isHorizontal: false,\n      label: {},\n      categoriesSortingMethod: that._getOption(\"chart\").valueAxis.categoriesSortingMethod\n    });\n\n    if (dataSource || chartOptions && chartOptions.series) {\n      chartOptions = (0, _extend.extend)({}, chartOptions, {\n        theme: that.option(\"theme\")\n      });\n      seriesDataSource = new _series_data_source.SeriesDataSource({\n        renderer: that._renderer,\n        dataSource: dataSource,\n        valueType: (0, _utils.normalizeEnum)(valueType),\n        axisType: scaleOptions.type,\n        chart: chartOptions,\n        dataSourceField: that.option(\"dataSourceField\"),\n        incidentOccurred: that._incidentOccurred,\n        categories: scaleOptions.categories,\n        argumentAxis: that._axis,\n        valueAxis: valueAxis\n      });\n    }\n\n    return seriesDataSource;\n  },\n  _prepareSliderMarkersOptions: function (scaleOptions, screenDelta, tickIntervalsInfo, argRange) {\n    var that = this;\n    var minorTickInterval = tickIntervalsInfo.minorTickInterval;\n    var tickInterval = tickIntervalsInfo.tickInterval;\n    var interval = tickInterval;\n    var endValue = scaleOptions.endValue;\n    var startValue = scaleOptions.startValue;\n\n    var sliderMarkerOptions = that._getOption(SLIDER_MARKER);\n\n    var doNotSnap = !that._getOption(\"behavior\").snapToTicks;\n    var isTypeDiscrete = scaleOptions.type === DISCRETE;\n    var isValueTypeDatetime = scaleOptions.valueType === DATETIME;\n    sliderMarkerOptions.borderColor = that._getOption(CONTAINER_BACKGROUND_COLOR, true);\n\n    if (!sliderMarkerOptions.format && !argRange.isEmpty()) {\n      if (doNotSnap && (0, _type2.isNumeric)(scaleOptions.startValue)) {\n        sliderMarkerOptions.format = {\n          type: \"fixedPoint\",\n          precision: getPrecisionForSlider(startValue, endValue, screenDelta)\n        };\n      }\n\n      if (isValueTypeDatetime && !isTypeDiscrete) {\n        if ((0, _type2.isDefined)(minorTickInterval) && 0 !== minorTickInterval) {\n          interval = getMinorTickIntervalUnit(tickInterval, minorTickInterval, doNotSnap);\n        }\n\n        if (!scaleOptions.marker.visible) {\n          if ((0, _type2.isDefined)(startValue) && (0, _type2.isDefined)(endValue)) {\n            sliderMarkerOptions.format = _format_helper.default.getDateFormatByTickInterval(startValue, endValue, interval);\n          }\n        } else {\n          sliderMarkerOptions.format = _date.default.getDateFormatByTickInterval(interval);\n        }\n      }\n\n      if (isValueTypeDatetime && isTypeDiscrete && tickIntervalsInfo.ticks.length) {\n        sliderMarkerOptions.format = _format_helper.default.getDateFormatByTicks(tickIntervalsInfo.ticks);\n      }\n    }\n\n    return sliderMarkerOptions;\n  },\n  getValue: function () {\n    return (0, _utils.convertVisualRangeObject)(this._slidersController.getSelectedRange());\n  },\n  setValue: function (value, e) {\n    var visualRange = (0, _utils.getVizRangeObject)(value);\n\n    if (!this._isUpdating && value) {\n      this._validateRange(visualRange.startValue, visualRange.endValue);\n\n      !(0, _utils.rangesAreEqual)(visualRange, this._slidersController.getSelectedRange()) && this._slidersController.setSelectedRange(visualRange, e);\n    }\n  },\n  _setContentSize: function () {\n    this.__isResizing = 2 === this._changes.count();\n    this.callBase.apply(this, arguments);\n  }\n});\n\n(0, _iterator.each)([\"selectedRangeColor\", \"containerBackgroundColor\", \"sliderMarker\", \"sliderHandle\", \"shutter\", OPTION_BACKGROUND, \"behavior\", \"chart\", \"indent\"], function (_, name) {\n  dxRangeSelector.prototype._optionChangesMap[name] = \"MOSTLY_TOTAL\";\n});\n\nfunction prepareAxisOptions(scaleOptions, isCompactMode, height, axisPosition) {\n  scaleOptions.marker.label.font = scaleOptions.label.font;\n  scaleOptions.color = scaleOptions.marker.color = scaleOptions.tick.color;\n  scaleOptions.opacity = scaleOptions.marker.opacity = scaleOptions.tick.opacity;\n  scaleOptions.width = scaleOptions.marker.width = scaleOptions.tick.width;\n  scaleOptions.placeholderSize = (scaleOptions.placeholderHeight || 0) + axisPosition;\n  scaleOptions.argumentType = scaleOptions.valueType;\n  scaleOptions.visible = isCompactMode;\n  scaleOptions.isHorizontal = true;\n  scaleOptions.calculateMinors = true;\n  scaleOptions.semiDiscreteInterval = scaleOptions.minRange;\n\n  if (!isCompactMode) {\n    scaleOptions.minorTick.length = scaleOptions.tick.length = height;\n  }\n\n  scaleOptions.label.indentFromAxis = scaleOptions.label.topIndent + axisPosition;\n  return scaleOptions;\n}\n\nfunction createDateMarkersEvent(scaleOptions, markerTrackers, setSelectedRange) {\n  (0, _iterator.each)(markerTrackers, function (_, value) {\n    value.on(\"dxpointerdown\", onPointerDown);\n  });\n\n  function onPointerDown(e) {\n    var range = e.target.range;\n    var minRange = scaleOptions.minRange ? _date.default.addInterval(range.startValue, scaleOptions.minRange) : void 0;\n    var maxRange = scaleOptions.maxRange ? _date.default.addInterval(range.startValue, scaleOptions.maxRange) : void 0;\n\n    if (!(minRange && minRange > range.endValue || maxRange && maxRange < range.endValue)) {\n      setSelectedRange(range, e);\n    }\n  }\n}\n\nfunction getShiftDirection() {\n  return 1;\n}\n\nfunction getTickStartPositionShift(length) {\n  return length % 2 === 1 ? -_floor(length / 2) : -length / 2;\n}\n\nfunction AxisWrapper(params) {\n  var that = this;\n  that._axis = new _base_axis.Axis({\n    renderer: params.renderer,\n    axesContainerGroup: params.root,\n    scaleBreaksGroup: params.scaleBreaksGroup,\n    incidentOccurred: params.incidentOccurred,\n    axisType: \"xyAxes\",\n    drawingType: \"linear\",\n    widgetClass: \"dxrs\",\n    axisClass: \"range-selector\",\n    isArgumentAxis: true,\n    getTemplate: function () {}\n  });\n  that._updateSelectedRangeCallback = params.updateSelectedRange;\n  that._axis.getAxisSharpDirection = that._axis.getSharpDirectionByCoords = getShiftDirection;\n  that._axis.getTickStartPositionShift = getTickStartPositionShift;\n}\n\nAxisWrapper.prototype = {\n  constructor: AxisWrapper,\n  dispose: function () {\n    this._axis.dispose();\n  },\n  calculateInterval: function (value, prevValue) {\n    return this._axis.calculateInterval(value, prevValue);\n  },\n  update: function (options, isCompactMode, canvas, businessRange, seriesDataSource) {\n    var axis = this._axis;\n    axis.updateOptions(prepareAxisOptions(options, isCompactMode, canvas.height, canvas.height / 2 - _ceil(options.width / 2)));\n    axis.validate();\n    axis.setBusinessRange(businessRange, true);\n\n    if (void 0 !== seriesDataSource && seriesDataSource.isShowChart()) {\n      axis.setMarginOptions(seriesDataSource.getMarginOptions(canvas));\n    }\n\n    axis.draw(canvas);\n    axis.shift({\n      left: 0,\n      bottom: -canvas.height / 2 + canvas.top\n    });\n\n    if (axis.getMarkerTrackers()) {\n      createDateMarkersEvent(options, axis.getMarkerTrackers(), this._updateSelectedRangeCallback);\n    }\n\n    axis.drawScaleBreaks({\n      start: canvas.top,\n      end: canvas.top + canvas.height\n    });\n  },\n  visualRange: function () {},\n  getViewport: function () {\n    return {};\n  },\n  allScaleSelected: function (value) {\n    var _this$_axis$visualRan = this._axis.visualRange(),\n        startValue = _this$_axis$visualRan.startValue,\n        endValue = _this$_axis$visualRan.endValue;\n\n    return {\n      startValue: value[0].valueOf() === startValue.valueOf(),\n      endValue: value[1].valueOf() === endValue.valueOf()\n    };\n  },\n  getOptions: function () {\n    return this._axis.getOptions() || {};\n  }\n};\n[\"setMarginOptions\", \"getFullTicks\", \"updateCanvas\", \"updateOptions\", \"getAggregationInfo\", \"getTranslator\", \"getVisualRangeLength\", \"getVisibleArea\", \"getMarginOptions\"].forEach(function (methodName) {\n  AxisWrapper.prototype[methodName] = function () {\n    var axis = this._axis;\n    return axis[methodName].apply(axis, arguments);\n  };\n});\n(0, _component_registrator.default)(\"dxRangeSelector\", dxRangeSelector);\nvar _default = dxRangeSelector;\nexports.default = _default;\ndxRangeSelector.addPlugin(_export.plugin);\ndxRangeSelector.addPlugin(_title.plugin);\ndxRangeSelector.addPlugin(_loading_indicator.plugin);\ndxRangeSelector.addPlugin(_data_source.plugin);\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/range_selector/range_selector.js"],"names":["exports","default","_component_registrator","_interopRequireDefault","require","_type2","_extend","_iterator","_utils","_date","_math","_range","_base_axis","_parse_utils","_format_helper","_common","_sliders_controller","_tracker","_range_view","_series_data_source","_tick_generator","_base_widget","_export","_title","_loading_indicator","_data_source","obj","__esModule","_max","Math","max","_ceil","ceil","_floor","floor","START_VALUE","END_VALUE","DATETIME","VALUE","DISCRETE","SEMIDISCRETE","STRING","VALUE_CHANGED","CONTAINER_BACKGROUND_COLOR","SLIDER_MARKER","OPTION_BACKGROUND","LOGARITHMIC","KEEP","SHIFT","RESET","INVISIBLE_POS","SEMIDISCRETE_GRID_SPACING_FACTOR","DEFAULT_AXIS_DIVISION_FACTOR","DEFAULT_MINOR_AXIS_DIVISION_FACTOR","logarithmBase","calculateMarkerHeight","renderer","value","sliderMarkerOptions","formattedText","consts","emptySliderMarkerText","formatValue","textBBox","getTextBBox","font","height","paddingTopBottom","pointerSize","calculateScaleLabelHalfWidth","scaleOptions","tickIntervalsInfo","label","valueType","type","width","calculateIndents","scale","indentOptions","leftMarkerHeight","leftScaleLabelWidth","rightScaleLabelWidth","rightMarkerHeight","placeholderWidthLeft","placeholderWidthRight","placeholderHeight","ticks","customTicks","startTickValue","endTickValue","left","right","visible","startValue","endValue","isDefined","length","top","bottom","calculateValueType","firstValue","secondValue","typeFirstValue","typeSecondValue","validType","showScaleMarkers","marker","updateTranslatorRangeInterval","translatorRange","intervalX","minorTickInterval","tickInterval","dateToMilliseconds","addRange","interval","checkLogarithmicOptions","options","defaultLogarithmBase","incidentOccurred","isNumeric","calculateScaleAreaHeight","visibleMarkers","labelScaleOptions","markerScaleOptions","text","topIndent","separatorHeight","getMinorTickIntervalUnit","withCorrection","getDateUnitInterval","majorUnit","idx","dateUnitIntervals","indexOf","getNextTickInterval","isDateType","getNextDateUnit","calculateTickIntervalsForSemidiscreteScale","min","screenDelta","gridSpacingFactor","axisDivisionFactor","tickCountByInterval","tickCountByScreen","bounds","minVisible","maxVisible","updateTickIntervals","range","result","categoriesInfo","_categoriesInfo","ticksInfo","tickGenerator","axisType","dataType","logBase","allowNegatives","linearThreshold","abs","minorAxisDivisionFactor","calculateMinors","allowDecimals","endOnTick","rangeIsEmpty","isEmpty","categories","forceUserTickInterval","minorTickCount","getFirstDayOfWeek","_options$workWeek","workWeek","calculateTranslatorRange","seriesDataSource","minValue","maxValue","inverted","getBoundRange","arg","Range","rangeForCategories","isDate","firstDayOfWeek","minRange","argCategories","getCategoriesInfo","correctValueByInterval","start","end","invert","base","sortCategories","startEndNotDefined","fontOptions","textElement","css","patchFontOptions","append","root","getBBox","remove","getDateMarkerVisibilityChecker","isDateScale","isMarkerVisible","years","months","updateScaleOptions","checkDateMarkerVisibility","isEmptyInterval","intervals","isDateTime","getTime","format","getDateFormatByTicks","getDateFormatByTickInterval","getIntervalCustomTicks","customMinorTicks","altIntervals","customBoundTicks","prepareScaleOptions","scaleOption","calculatedValueType","containerColor","parsedValue","correctValueType","normalizeEnum","validateStartEndValues","field","parser","messageToIncidentOccurred","getParser","minorTick","maxRange","correctDateWithUnitBeginning","Date","adjust","res","getSequenceByInterval","getPrecisionForSlider","d","tail","getLog","dxRangeSelector","inherit","_toggleParentsScrollSubscription","_eventsMap","onValueChanged","name","_rootClassPrefix","_rootClass","_dataIsReady","_dataIsLoaded","_initialChanges","_themeDependentChanges","_themeSection","_fontFields","_initCore","that","_renderer","_clipRect","clipRect","rangeViewGroup","g","attr","slidersGroup","id","scaleGroup","scaleBreaksGroup","trackersGroup","_axis","AxisWrapper","updateSelectedRange","e","setValue","convertVisualRangeObject","_incidentOccurred","_rangeView","RangeView","translator","getTranslator","_slidersController","SlidersController","lastSelectedRange","_rangeOption","option","isPlainObject","_options","silent","_eventTrigger","previousValue","event","axis","Tracker","controller","_getDefaultSize","_disposeCore","dispose","_applySize","rect","_clientRect","slice","_change","_optionChangesMap","dataSource","_optionChangesOrder","_change_SCALE","_setValueByDataSource","selectedRangeUpdateMode","getValue","valueIsReady","__skipAnimation","_dataSourceIsAsync","rangesInfo","allScaleSelected","_value","getVisualRangeLength","_change_DATA_SOURCE","_updateDataSource","_customChangesOrder","_change_MOSTLY_TOTAL","_applyMostlyTotalChange","_change_SLIDER_SELECTION","setSelectedRange","getVizRangeObject","_change_VALUE","_validateRange","isValid","_applyChanges","_changes","has","callBase","apply","arguments","__isResizing","currentAnimationEnabled","canvas","animationEnabled","updateAnimationOptions","enabled","x","y","update","isHorizontal","_updateContent","_drawn","_dataSourceChangedHandler","_requestChange","_completeSeriesDataSourceCreation","updateOptions","extend","isShowChart","setMarginOptions","getMarginOptions","updateCanvas","createPoints","chartOptions","_createSeriesDataSource","isCompactMode","_getOption","getCalculatedValueType","argTranslatorRange","chartThemeManager","getThemeManager","valueAxis","getOptions","_prepareSliderMarkersOptions","indents","rangeContainerCanvas","HEIGHT_COMPACT_MODE","_updateElements","behavior","shutterOptions","isNotSemiDiscrete","color","_themeManager","theme","_isUpdating","getFullTicks","getBusinessRange","_dataSourceItems","Axis","drawingType","categoriesSortingMethod","series","SeriesDataSource","chart","dataSourceField","argumentAxis","argRange","doNotSnap","snapToTicks","isTypeDiscrete","isValueTypeDatetime","borderColor","precision","getSelectedRange","visualRange","rangesAreEqual","_setContentSize","count","each","_","prototype","prepareAxisOptions","axisPosition","tick","opacity","placeholderSize","argumentType","semiDiscreteInterval","indentFromAxis","createDateMarkersEvent","markerTrackers","on","onPointerDown","target","addInterval","getShiftDirection","getTickStartPositionShift","params","axesContainerGroup","widgetClass","axisClass","isArgumentAxis","getTemplate","_updateSelectedRangeCallback","getAxisSharpDirection","getSharpDirectionByCoords","constructor","calculateInterval","prevValue","businessRange","validate","setBusinessRange","draw","shift","getMarkerTrackers","drawScaleBreaks","getViewport","_this$_axis$visualRan","valueOf","forEach","methodName","_default","addPlugin","plugin","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/range_selector/range_selector.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _type2 = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _range = require(\"../translators/range\");\r\nvar _base_axis = require(\"../axes/base_axis\");\r\nvar _parse_utils = require(\"../components/parse_utils\");\r\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\r\nvar _common = require(\"./common\");\r\nvar _sliders_controller = require(\"./sliders_controller\");\r\nvar _tracker = require(\"./tracker\");\r\nvar _range_view = require(\"./range_view\");\r\nvar _series_data_source = require(\"./series_data_source\");\r\nvar _tick_generator = require(\"../axes/tick_generator\");\r\nvar _base_widget = _interopRequireDefault(require(\"../core/base_widget\"));\r\nvar _export = require(\"../core/export\");\r\nvar _title = require(\"../core/title\");\r\nvar _loading_indicator = require(\"../core/loading_indicator\");\r\nvar _data_source = require(\"../core/data_source\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _max = Math.max;\r\nvar _ceil = Math.ceil;\r\nvar _floor = Math.floor;\r\nvar START_VALUE = \"startValue\";\r\nvar END_VALUE = \"endValue\";\r\nvar DATETIME = \"datetime\";\r\nvar VALUE = \"value\";\r\nvar DISCRETE = \"discrete\";\r\nvar SEMIDISCRETE = \"semidiscrete\";\r\nvar STRING = \"string\";\r\nvar VALUE_CHANGED = VALUE + \"Changed\";\r\nvar CONTAINER_BACKGROUND_COLOR = \"containerBackgroundColor\";\r\nvar SLIDER_MARKER = \"sliderMarker\";\r\nvar OPTION_BACKGROUND = \"background\";\r\nvar LOGARITHMIC = \"logarithmic\";\r\nvar KEEP = \"keep\";\r\nvar SHIFT = \"shift\";\r\nvar RESET = \"reset\";\r\nvar INVISIBLE_POS = -1e3;\r\nvar SEMIDISCRETE_GRID_SPACING_FACTOR = 50;\r\nvar DEFAULT_AXIS_DIVISION_FACTOR = 30;\r\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\r\nvar logarithmBase = 10;\r\n\r\nfunction calculateMarkerHeight(renderer, value, sliderMarkerOptions) {\r\n    var formattedText = void 0 === value ? _common.consts.emptySliderMarkerText : (0, _common.formatValue)(value, sliderMarkerOptions);\r\n    var textBBox = getTextBBox(renderer, formattedText, sliderMarkerOptions.font);\r\n    return _ceil(textBBox.height) + 2 * sliderMarkerOptions.paddingTopBottom + _common.consts.pointerSize\r\n}\r\n\r\nfunction calculateScaleLabelHalfWidth(renderer, value, scaleOptions, tickIntervalsInfo) {\r\n    var formattedText = (0, _common.formatValue)(value, scaleOptions.label, tickIntervalsInfo, scaleOptions.valueType, scaleOptions.type, scaleOptions.logarithmBase);\r\n    var textBBox = getTextBBox(renderer, formattedText, scaleOptions.label.font);\r\n    return _ceil(textBBox.width / 2)\r\n}\r\n\r\nfunction calculateIndents(renderer, scale, sliderMarkerOptions, indentOptions, tickIntervalsInfo) {\r\n    var leftMarkerHeight;\r\n    var leftScaleLabelWidth = 0;\r\n    var rightScaleLabelWidth = 0;\r\n    var rightMarkerHeight;\r\n    var placeholderWidthLeft;\r\n    var placeholderWidthRight;\r\n    var placeholderHeight;\r\n    var ticks = \"semidiscrete\" === scale.type ? scale.customTicks : tickIntervalsInfo.ticks;\r\n    var startTickValue;\r\n    var endTickValue;\r\n    indentOptions = indentOptions || {};\r\n    placeholderWidthLeft = indentOptions.left;\r\n    placeholderWidthRight = indentOptions.right;\r\n    placeholderHeight = sliderMarkerOptions.placeholderHeight;\r\n    if (sliderMarkerOptions.visible) {\r\n        leftMarkerHeight = calculateMarkerHeight(renderer, scale.startValue, sliderMarkerOptions);\r\n        rightMarkerHeight = calculateMarkerHeight(renderer, scale.endValue, sliderMarkerOptions);\r\n        if (void 0 === placeholderHeight) {\r\n            placeholderHeight = _max(leftMarkerHeight, rightMarkerHeight)\r\n        }\r\n    }\r\n    if (scale.label.visible) {\r\n        startTickValue = (0, _type2.isDefined)(scale.startValue) ? ticks[0] : void 0;\r\n        endTickValue = (0, _type2.isDefined)(scale.endValue) ? ticks[ticks.length - 1] : void 0;\r\n        leftScaleLabelWidth = calculateScaleLabelHalfWidth(renderer, startTickValue, scale, tickIntervalsInfo);\r\n        rightScaleLabelWidth = calculateScaleLabelHalfWidth(renderer, endTickValue, scale, tickIntervalsInfo)\r\n    }\r\n    placeholderWidthLeft = void 0 !== placeholderWidthLeft ? placeholderWidthLeft : leftScaleLabelWidth;\r\n    placeholderWidthRight = (void 0 !== placeholderWidthRight ? placeholderWidthRight : rightScaleLabelWidth) || 1;\r\n    return {\r\n        left: placeholderWidthLeft,\r\n        right: placeholderWidthRight,\r\n        top: placeholderHeight || 0,\r\n        bottom: 0\r\n    }\r\n}\r\n\r\nfunction calculateValueType(firstValue, secondValue) {\r\n    var typeFirstValue = (0, _type2.type)(firstValue);\r\n    var typeSecondValue = (0, _type2.type)(secondValue);\r\n    var validType = function(type) {\r\n        return typeFirstValue === type || typeSecondValue === type\r\n    };\r\n    return validType(\"date\") ? DATETIME : validType(\"number\") ? \"numeric\" : validType(STRING) ? STRING : \"\"\r\n}\r\n\r\nfunction showScaleMarkers(scaleOptions) {\r\n    return scaleOptions.valueType === DATETIME && scaleOptions.marker.visible\r\n}\r\n\r\nfunction updateTranslatorRangeInterval(translatorRange, scaleOptions) {\r\n    var intervalX = scaleOptions.minorTickInterval || scaleOptions.tickInterval;\r\n    if (\"datetime\" === scaleOptions.valueType) {\r\n        intervalX = _date.default.dateToMilliseconds(intervalX)\r\n    }\r\n    translatorRange.addRange({\r\n        interval: intervalX\r\n    })\r\n}\r\n\r\nfunction checkLogarithmicOptions(options, defaultLogarithmBase, incidentOccurred) {\r\n    if (!options) {\r\n        return\r\n    }\r\n    var logarithmBase = options.logarithmBase;\r\n    if (options.type === LOGARITHMIC && logarithmBase <= 0 || logarithmBase && !(0, _type2.isNumeric)(logarithmBase)) {\r\n        options.logarithmBase = defaultLogarithmBase;\r\n        incidentOccurred(\"E2104\")\r\n    } else {\r\n        if (options.type !== LOGARITHMIC) {\r\n            options.logarithmBase = void 0\r\n        }\r\n    }\r\n}\r\n\r\nfunction calculateScaleAreaHeight(renderer, scaleOptions, visibleMarkers, tickIntervalsInfo) {\r\n    var labelScaleOptions = scaleOptions.label;\r\n    var markerScaleOptions = scaleOptions.marker;\r\n    var placeholderHeight = scaleOptions.placeholderHeight;\r\n    var ticks = \"semidiscrete\" === scaleOptions.type ? scaleOptions.customTicks : tickIntervalsInfo.ticks;\r\n    var text = (0, _common.formatValue)(ticks[0], labelScaleOptions);\r\n    if (placeholderHeight) {\r\n        return placeholderHeight\r\n    } else {\r\n        return (labelScaleOptions.visible ? labelScaleOptions.topIndent + getTextBBox(renderer, text, labelScaleOptions.font).height : 0) + (visibleMarkers ? markerScaleOptions.topIndent + markerScaleOptions.separatorHeight : 0)\r\n    }\r\n}\r\n\r\nfunction getMinorTickIntervalUnit(tickInterval, minorTickInterval, withCorrection) {\r\n    var interval = _date.default.getDateUnitInterval(minorTickInterval);\r\n    var majorUnit = _date.default.getDateUnitInterval(tickInterval);\r\n    var idx = _date.default.dateUnitIntervals.indexOf(interval);\r\n    if (withCorrection && interval === majorUnit && idx > 0) {\r\n        interval = _date.default.dateUnitIntervals[idx - 1]\r\n    }\r\n    return interval\r\n}\r\n\r\nfunction getNextTickInterval(tickInterval, minorTickInterval, isDateType) {\r\n    if (!tickInterval) {\r\n        tickInterval = minorTickInterval\r\n    } else {\r\n        if (isDateType) {\r\n            tickInterval = _date.default.getNextDateUnit(tickInterval)\r\n        } else {\r\n            tickInterval += minorTickInterval\r\n        }\r\n    }\r\n    return tickInterval\r\n}\r\n\r\nfunction calculateTickIntervalsForSemidiscreteScale(scaleOptions, min, max, screenDelta) {\r\n    var minorTickInterval = scaleOptions.minorTickInterval;\r\n    var tickInterval = scaleOptions.tickInterval;\r\n    var interval;\r\n    var isDateType = \"datetime\" === scaleOptions.valueType;\r\n    var gridSpacingFactor = scaleOptions.axisDivisionFactor || {};\r\n    var tickCountByInterval;\r\n    var tickCountByScreen;\r\n    if (!tickInterval) {\r\n        do {\r\n            interval = getNextTickInterval(tickInterval, minorTickInterval, isDateType);\r\n            if (tickInterval !== interval) {\r\n                tickInterval = interval\r\n            } else {\r\n                break\r\n            }\r\n            if (isDateType) {\r\n                interval = _date.default.dateToMilliseconds(tickInterval)\r\n            }\r\n            tickCountByInterval = _ceil((max - min) / interval);\r\n            tickCountByScreen = _floor(screenDelta / (gridSpacingFactor[tickInterval] || SEMIDISCRETE_GRID_SPACING_FACTOR)) || 1\r\n        } while (interval && tickCountByInterval > tickCountByScreen)\r\n    }\r\n    return {\r\n        tickInterval: tickInterval,\r\n        minorTickInterval: minorTickInterval,\r\n        bounds: {\r\n            minVisible: min,\r\n            maxVisible: max\r\n        },\r\n        ticks: []\r\n    }\r\n}\r\n\r\nfunction updateTickIntervals(scaleOptions, screenDelta, incidentOccurred, range) {\r\n    var result;\r\n    var min = (0, _type2.isDefined)(range.minVisible) ? range.minVisible : range.min;\r\n    var max = (0, _type2.isDefined)(range.maxVisible) ? range.maxVisible : range.max;\r\n    var categoriesInfo = scaleOptions._categoriesInfo;\r\n    var ticksInfo;\r\n    var length;\r\n    var bounds = {};\r\n    if (scaleOptions.type === SEMIDISCRETE) {\r\n        result = calculateTickIntervalsForSemidiscreteScale(scaleOptions, min, max, screenDelta)\r\n    } else {\r\n        ticksInfo = (0, _tick_generator.tickGenerator)({\r\n            axisType: scaleOptions.type,\r\n            dataType: scaleOptions.valueType,\r\n            logBase: scaleOptions.logarithmBase,\r\n            allowNegatives: true,\r\n            linearThreshold: Math.abs(scaleOptions.linearThreshold || 0),\r\n            axisDivisionFactor: scaleOptions.axisDivisionFactor,\r\n            minorAxisDivisionFactor: scaleOptions.minorAxisDivisionFactor,\r\n            calculateMinors: true,\r\n            allowDecimals: scaleOptions.allowDecimals,\r\n            endOnTick: scaleOptions.endOnTick,\r\n            incidentOccurred: incidentOccurred,\r\n            rangeIsEmpty: range.isEmpty()\r\n        })({\r\n            min: min,\r\n            max: max,\r\n            categories: (0, _type2.isDefined)(categoriesInfo) ? categoriesInfo.categories : []\r\n        }, screenDelta, scaleOptions.tickInterval, scaleOptions.forceUserTickInterval, void 0, scaleOptions.minorTickInterval, scaleOptions.minorTickCount);\r\n        length = ticksInfo.ticks.length;\r\n        bounds.minVisible = ticksInfo.ticks[0] < min ? ticksInfo.ticks[0] : min;\r\n        bounds.maxVisible = ticksInfo.ticks[length - 1] > max ? ticksInfo.ticks[length - 1] : max;\r\n        result = {\r\n            tickInterval: ticksInfo.tickInterval,\r\n            minorTickInterval: 0 === scaleOptions.minorTickInterval ? 0 : ticksInfo.minorTickInterval,\r\n            bounds: bounds,\r\n            ticks: ticksInfo.ticks\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getFirstDayOfWeek(options) {\r\n    var _options$workWeek;\r\n    return null === (_options$workWeek = options.workWeek) || void 0 === _options$workWeek ? void 0 : _options$workWeek[0]\r\n}\r\n\r\nfunction calculateTranslatorRange(seriesDataSource, scaleOptions) {\r\n    var minValue;\r\n    var maxValue;\r\n    var inverted = false;\r\n    var startValue = scaleOptions.startValue;\r\n    var endValue = scaleOptions.endValue;\r\n    var categories;\r\n    var categoriesInfo;\r\n    var translatorRange = seriesDataSource ? seriesDataSource.getBoundRange().arg : new _range.Range;\r\n    var rangeForCategories;\r\n    var isDate = \"datetime\" === scaleOptions.valueType;\r\n    var firstDayOfWeek = getFirstDayOfWeek(scaleOptions);\r\n    var minRange = scaleOptions.minRange;\r\n    if (scaleOptions.type === DISCRETE) {\r\n        rangeForCategories = new _range.Range({\r\n            minVisible: startValue,\r\n            maxVisible: endValue\r\n        });\r\n        rangeForCategories.addRange(translatorRange);\r\n        translatorRange = rangeForCategories;\r\n        categories = seriesDataSource ? seriesDataSource.argCategories : scaleOptions.categories || !seriesDataSource && startValue && endValue && [startValue, endValue];\r\n        categories = categories || [];\r\n        scaleOptions._categoriesInfo = categoriesInfo = (0, _utils.getCategoriesInfo)(categories, startValue, endValue)\r\n    }\r\n    if (scaleOptions.type === SEMIDISCRETE) {\r\n        startValue = scaleOptions.startValue = correctValueByInterval(scaleOptions.startValue, isDate, minRange, firstDayOfWeek);\r\n        endValue = scaleOptions.endValue = correctValueByInterval(scaleOptions.endValue, isDate, minRange, firstDayOfWeek);\r\n        translatorRange.minVisible = correctValueByInterval(translatorRange.minVisible, isDate, minRange, firstDayOfWeek);\r\n        translatorRange.maxVisible = correctValueByInterval(translatorRange.maxVisible, isDate, minRange, firstDayOfWeek);\r\n        translatorRange.min = correctValueByInterval(translatorRange.min, isDate, minRange, firstDayOfWeek);\r\n        translatorRange.max = correctValueByInterval(translatorRange.max, isDate, minRange, firstDayOfWeek)\r\n    }\r\n    if ((0, _type2.isDefined)(startValue) && (0, _type2.isDefined)(endValue)) {\r\n        inverted = categoriesInfo ? categoriesInfo.inverted : startValue > endValue;\r\n        minValue = categoriesInfo ? categoriesInfo.start : inverted ? endValue : startValue;\r\n        maxValue = categoriesInfo ? categoriesInfo.end : inverted ? startValue : endValue\r\n    } else {\r\n        if ((0, _type2.isDefined)(startValue) || (0, _type2.isDefined)(endValue)) {\r\n            minValue = startValue;\r\n            maxValue = endValue\r\n        } else {\r\n            if (categoriesInfo) {\r\n                minValue = categoriesInfo.start;\r\n                maxValue = categoriesInfo.end\r\n            }\r\n        }\r\n    }\r\n    translatorRange.addRange({\r\n        invert: inverted,\r\n        min: minValue,\r\n        max: maxValue,\r\n        minVisible: minValue,\r\n        maxVisible: maxValue,\r\n        dataType: scaleOptions.valueType\r\n    });\r\n    translatorRange.addRange({\r\n        categories: !seriesDataSource ? categories : void 0,\r\n        base: scaleOptions.logarithmBase,\r\n        axisType: scaleOptions.type,\r\n        dataType: scaleOptions.valueType\r\n    });\r\n    seriesDataSource && translatorRange.sortCategories(categories);\r\n    return translatorRange\r\n}\r\n\r\nfunction startEndNotDefined(start, end) {\r\n    return !(0, _type2.isDefined)(start) || !(0, _type2.isDefined)(end)\r\n}\r\n\r\nfunction getTextBBox(renderer, text, fontOptions) {\r\n    var textElement = renderer.text(text, INVISIBLE_POS, INVISIBLE_POS).css((0, _utils.patchFontOptions)(fontOptions)).append(renderer.root);\r\n    var textBBox = textElement.getBBox();\r\n    textElement.remove();\r\n    return textBBox\r\n}\r\n\r\nfunction getDateMarkerVisibilityChecker(screenDelta) {\r\n    return function(isDateScale, isMarkerVisible, min, max, tickInterval) {\r\n        if (isMarkerVisible && isDateScale) {\r\n            if (!(0, _type2.isDefined)(tickInterval) || tickInterval.years || tickInterval.months >= 6 || screenDelta / SEMIDISCRETE_GRID_SPACING_FACTOR < _ceil((max - min) / _date.default.dateToMilliseconds(\"year\")) + 1) {\r\n                isMarkerVisible = false\r\n            }\r\n        }\r\n        return isMarkerVisible\r\n    }\r\n}\r\n\r\nfunction updateScaleOptions(scaleOptions, seriesDataSource, translatorRange, tickIntervalsInfo, checkDateMarkerVisibility) {\r\n    var bounds;\r\n    var isEmptyInterval;\r\n    var categoriesInfo = scaleOptions._categoriesInfo;\r\n    var intervals;\r\n    var isDateTime = scaleOptions.valueType === DATETIME;\r\n    if (seriesDataSource && !seriesDataSource.isEmpty() && !translatorRange.isEmpty()) {\r\n        bounds = tickIntervalsInfo.bounds;\r\n        translatorRange.addRange(bounds);\r\n        scaleOptions.startValue = translatorRange.invert ? bounds.maxVisible : bounds.minVisible;\r\n        scaleOptions.endValue = translatorRange.invert ? bounds.minVisible : bounds.maxVisible\r\n    }\r\n    scaleOptions.marker.visible = checkDateMarkerVisibility(isDateTime && scaleOptions.type.indexOf(DISCRETE) === -1, scaleOptions.marker.visible, scaleOptions.startValue, scaleOptions.endValue, tickIntervalsInfo.tickInterval);\r\n    if (categoriesInfo) {\r\n        scaleOptions.startValue = categoriesInfo.start;\r\n        scaleOptions.endValue = categoriesInfo.end\r\n    }\r\n    if (scaleOptions.type.indexOf(DISCRETE) === -1) {\r\n        isEmptyInterval = (0, _type2.isDate)(scaleOptions.startValue) && (0, _type2.isDate)(scaleOptions.endValue) && scaleOptions.startValue.getTime() === scaleOptions.endValue.getTime() || scaleOptions.startValue === scaleOptions.endValue\r\n    }\r\n    scaleOptions.isEmpty = startEndNotDefined(scaleOptions.startValue, scaleOptions.endValue) || isEmptyInterval;\r\n    if (scaleOptions.isEmpty) {\r\n        scaleOptions.startValue = scaleOptions.endValue = void 0\r\n    } else {\r\n        scaleOptions.minorTickInterval = tickIntervalsInfo.minorTickInterval;\r\n        scaleOptions.tickInterval = tickIntervalsInfo.tickInterval;\r\n        if (isDateTime && (!(0, _type2.isDefined)(scaleOptions.label.format) || scaleOptions.type === SEMIDISCRETE && scaleOptions.minorTickInterval !== scaleOptions.tickInterval)) {\r\n            if (scaleOptions.type === DISCRETE) {\r\n                scaleOptions.label.format = _format_helper.default.getDateFormatByTicks(tickIntervalsInfo.ticks)\r\n            } else {\r\n                if (!scaleOptions.marker.visible) {\r\n                    scaleOptions.label.format = _format_helper.default.getDateFormatByTickInterval(scaleOptions.startValue, scaleOptions.endValue, scaleOptions.tickInterval)\r\n                } else {\r\n                    scaleOptions.label.format = _date.default.getDateFormatByTickInterval(scaleOptions.tickInterval)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (scaleOptions.type === SEMIDISCRETE) {\r\n        intervals = getIntervalCustomTicks(scaleOptions);\r\n        scaleOptions.customMinorTicks = intervals.altIntervals;\r\n        scaleOptions.customTicks = intervals.intervals;\r\n        scaleOptions.customBoundTicks = [scaleOptions.customTicks[0]]\r\n    }\r\n}\r\n\r\nfunction prepareScaleOptions(scaleOption, calculatedValueType, incidentOccurred, containerColor) {\r\n    var parsedValue = 0;\r\n    var valueType = (0, _parse_utils.correctValueType)((0, _utils.normalizeEnum)(scaleOption.valueType));\r\n    var validateStartEndValues = function(field, parser) {\r\n        var messageToIncidentOccurred = field === START_VALUE ? \"start\" : \"end\";\r\n        if ((0, _type2.isDefined)(scaleOption[field])) {\r\n            parsedValue = parser(scaleOption[field]);\r\n            if ((0, _type2.isDefined)(parsedValue)) {\r\n                scaleOption[field] = parsedValue\r\n            } else {\r\n                scaleOption[field] = void 0;\r\n                incidentOccurred(\"E2202\", [messageToIncidentOccurred])\r\n            }\r\n        }\r\n    };\r\n    valueType = calculatedValueType || valueType;\r\n    if (!valueType) {\r\n        valueType = calculateValueType(scaleOption.startValue, scaleOption.endValue) || \"numeric\"\r\n    }\r\n    if (valueType === STRING || scaleOption.categories) {\r\n        scaleOption.type = DISCRETE;\r\n        valueType = STRING\r\n    }\r\n    scaleOption.containerColor = containerColor;\r\n    scaleOption.valueType = valueType;\r\n    scaleOption.dataType = valueType;\r\n    var parser = (0, _parse_utils.getParser)(valueType);\r\n    validateStartEndValues(START_VALUE, parser);\r\n    validateStartEndValues(END_VALUE, parser);\r\n    checkLogarithmicOptions(scaleOption, logarithmBase, incidentOccurred);\r\n    if (!scaleOption.type) {\r\n        scaleOption.type = \"continuous\"\r\n    }\r\n    scaleOption.parser = parser;\r\n    if (scaleOption.type === SEMIDISCRETE) {\r\n        scaleOption.minorTick.visible = false;\r\n        scaleOption.minorTickInterval = scaleOption.minRange;\r\n        scaleOption.marker.visible = false;\r\n        scaleOption.maxRange = void 0\r\n    }\r\n    scaleOption.forceUserTickInterval |= (0, _type2.isDefined)(scaleOption.tickInterval) && !(0, _type2.isDefined)(scaleOption.axisDivisionFactor);\r\n    scaleOption.axisDivisionFactor = (0, _type2.isDefined)(scaleOption.axisDivisionFactor) ? scaleOption.axisDivisionFactor : DEFAULT_AXIS_DIVISION_FACTOR;\r\n    scaleOption.minorAxisDivisionFactor = (0, _type2.isDefined)(scaleOption.minorAxisDivisionFactor) ? scaleOption.minorAxisDivisionFactor : DEFAULT_MINOR_AXIS_DIVISION_FACTOR;\r\n    return scaleOption\r\n}\r\n\r\nfunction correctValueByInterval(value, isDate, interval, firstDayOfWeek) {\r\n    if ((0, _type2.isDefined)(value)) {\r\n        value = isDate ? _date.default.correctDateWithUnitBeginning(new Date(value), interval, null, firstDayOfWeek) : (0, _math.adjust)(_floor((0, _math.adjust)(value / interval)) * interval)\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getIntervalCustomTicks(options) {\r\n    var min = options.startValue;\r\n    var max = options.endValue;\r\n    var isDate = \"datetime\" === options.valueType;\r\n    var firstDayOfWeek = getFirstDayOfWeek(options);\r\n    var tickInterval = options.tickInterval;\r\n    var res = {\r\n        intervals: []\r\n    };\r\n    if (!(0, _type2.isDefined)(min) || !(0, _type2.isDefined)(max)) {\r\n        return res\r\n    }\r\n    res.intervals = _date.default.getSequenceByInterval(min, max, options.minorTickInterval);\r\n    if (tickInterval !== options.minorTickInterval) {\r\n        res.altIntervals = res.intervals;\r\n        min = correctValueByInterval(min, isDate, tickInterval, firstDayOfWeek);\r\n        max = correctValueByInterval(max, isDate, tickInterval, firstDayOfWeek);\r\n        res.intervals = _date.default.getSequenceByInterval(min, max, tickInterval);\r\n        res.intervals[0] = res.altIntervals[0]\r\n    }\r\n    return res\r\n}\r\n\r\nfunction getPrecisionForSlider(startValue, endValue, screenDelta) {\r\n    var d = Math.abs(endValue - startValue) / screenDelta;\r\n    var tail = d - _floor(d);\r\n    return tail > 0 ? _ceil(Math.abs((0, _math.adjust)((0, _utils.getLog)(tail, 10)))) : 0\r\n}\r\nvar dxRangeSelector = _base_widget.default.inherit({\r\n    _toggleParentsScrollSubscription: function() {},\r\n    _eventsMap: {\r\n        onValueChanged: {\r\n            name: VALUE_CHANGED\r\n        }\r\n    },\r\n    _rootClassPrefix: \"dxrs\",\r\n    _rootClass: \"dxrs-range-selector\",\r\n    _dataIsReady: function() {\r\n        return this._dataIsLoaded()\r\n    },\r\n    _initialChanges: [\"DATA_SOURCE\", \"VALUE\"],\r\n    _themeDependentChanges: [\"MOSTLY_TOTAL\"],\r\n    _themeSection: \"rangeSelector\",\r\n    _fontFields: [\"scale.label.font\", \"sliderMarker.font\"],\r\n    _initCore: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var root = renderer.root;\r\n        root.css({\r\n            \"touch-action\": \"pan-y\"\r\n        });\r\n        that._clipRect = renderer.clipRect();\r\n        var rangeViewGroup = renderer.g().attr({\r\n            \"class\": \"dxrs-view\"\r\n        }).append(root);\r\n        var slidersGroup = renderer.g().attr({\r\n            \"class\": \"dxrs-slidersContainer\",\r\n            \"clip-path\": that._clipRect.id\r\n        }).append(root);\r\n        var scaleGroup = renderer.g().attr({\r\n            \"class\": \"dxrs-scale\",\r\n            \"clip-path\": that._clipRect.id\r\n        }).append(root);\r\n        var scaleBreaksGroup = renderer.g().attr({\r\n            \"class\": \"dxrs-scale-breaks\"\r\n        }).append(root);\r\n        var trackersGroup = renderer.g().attr({\r\n            \"class\": \"dxrs-trackers\"\r\n        }).append(root);\r\n        that._axis = new AxisWrapper({\r\n            renderer: renderer,\r\n            root: scaleGroup,\r\n            scaleBreaksGroup: scaleBreaksGroup,\r\n            updateSelectedRange: function(range, e) {\r\n                that.setValue((0, _utils.convertVisualRangeObject)(range), e)\r\n            },\r\n            incidentOccurred: that._incidentOccurred\r\n        });\r\n        that._rangeView = new _range_view.RangeView({\r\n            renderer: renderer,\r\n            root: rangeViewGroup,\r\n            translator: that._axis.getTranslator()\r\n        });\r\n        that._slidersController = new _sliders_controller.SlidersController({\r\n            renderer: renderer,\r\n            root: slidersGroup,\r\n            trackersGroup: trackersGroup,\r\n            updateSelectedRange: function(range, lastSelectedRange, e) {\r\n                if (!that._rangeOption) {\r\n                    that.option(VALUE, (0, _utils.convertVisualRangeObject)(range, (0, _type2.isPlainObject)(that._options.silent(VALUE))))\r\n                }\r\n                that._eventTrigger(VALUE_CHANGED, {\r\n                    value: (0, _utils.convertVisualRangeObject)(range),\r\n                    previousValue: (0, _utils.convertVisualRangeObject)(lastSelectedRange),\r\n                    event: e\r\n                })\r\n            },\r\n            axis: that._axis,\r\n            translator: that._axis.getTranslator()\r\n        });\r\n        that._tracker = new _tracker.Tracker({\r\n            renderer: renderer,\r\n            controller: that._slidersController\r\n        })\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 160\r\n        }\r\n    },\r\n    _disposeCore: function() {\r\n        this._axis.dispose();\r\n        this._slidersController.dispose();\r\n        this._tracker.dispose()\r\n    },\r\n    _applySize: function(rect) {\r\n        this._clientRect = rect.slice();\r\n        this._change([\"MOSTLY_TOTAL\"])\r\n    },\r\n    _optionChangesMap: {\r\n        scale: \"SCALE\",\r\n        value: \"VALUE\",\r\n        dataSource: \"DATA_SOURCE\"\r\n    },\r\n    _optionChangesOrder: [\"SCALE\", \"DATA_SOURCE\"],\r\n    _change_SCALE: function() {\r\n        this._change([\"MOSTLY_TOTAL\"])\r\n    },\r\n    _setValueByDataSource: function() {\r\n        var that = this;\r\n        var options = that._options.silent();\r\n        var axis = that._axis;\r\n        if (options.dataSource) {\r\n            var selectedRangeUpdateMode = that.option(\"selectedRangeUpdateMode\");\r\n            var value = that.getValue();\r\n            var valueIsReady = (0, _type2.isDefined)(value[0]) && (0, _type2.isDefined)(value[1]);\r\n            if ((0, _type2.isDefined)(selectedRangeUpdateMode)) {\r\n                selectedRangeUpdateMode = (0, _utils.normalizeEnum)(selectedRangeUpdateMode);\r\n                that.__skipAnimation = true\r\n            } else {\r\n                if (valueIsReady && !that._dataSourceIsAsync) {\r\n                    selectedRangeUpdateMode = RESET\r\n                }\r\n            }\r\n            if (\"auto\" === selectedRangeUpdateMode && valueIsReady) {\r\n                var rangesInfo = axis.allScaleSelected(value);\r\n                if (rangesInfo.startValue && rangesInfo.endValue) {\r\n                    selectedRangeUpdateMode = RESET\r\n                } else {\r\n                    if (rangesInfo.endValue) {\r\n                        selectedRangeUpdateMode = SHIFT\r\n                    } else {\r\n                        selectedRangeUpdateMode = KEEP\r\n                    }\r\n                }\r\n            }\r\n            if (selectedRangeUpdateMode === RESET) {\r\n                options[VALUE] = null\r\n            } else {\r\n                if (selectedRangeUpdateMode === SHIFT && valueIsReady) {\r\n                    var _value = that.getValue();\r\n                    that.__skipAnimation = true;\r\n                    options[VALUE] = {\r\n                        length: axis.getVisualRangeLength({\r\n                            minVisible: _value[0],\r\n                            maxVisible: _value[1]\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (selectedRangeUpdateMode === KEEP) {\r\n                        that.__skipAnimation = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        that._dataSourceIsAsync = void 0\r\n    },\r\n    _change_DATA_SOURCE: function() {\r\n        if (this._options.silent(\"dataSource\")) {\r\n            this._updateDataSource()\r\n        }\r\n    },\r\n    _customChangesOrder: [\"MOSTLY_TOTAL\", \"VALUE\", \"SLIDER_SELECTION\"],\r\n    _change_MOSTLY_TOTAL: function() {\r\n        this._applyMostlyTotalChange()\r\n    },\r\n    _change_SLIDER_SELECTION: function() {\r\n        var that = this;\r\n        var value = that._options.silent(VALUE);\r\n        that._slidersController.setSelectedRange(value && (0, _utils.getVizRangeObject)(value))\r\n    },\r\n    _change_VALUE: function() {\r\n        var that = this;\r\n        var option = that._rangeOption;\r\n        that._dataSourceIsAsync = !that._dataIsReady();\r\n        if (option) {\r\n            that._options.silent(VALUE, option);\r\n            that.setValue(option)\r\n        }\r\n    },\r\n    _validateRange: function(start, end) {\r\n        var that = this;\r\n        var translator = that._axis.getTranslator();\r\n        if ((0, _type2.isDefined)(start) && !translator.isValid(start) || (0, _type2.isDefined)(end) && !translator.isValid(end)) {\r\n            that._incidentOccurred(\"E2203\")\r\n        }\r\n    },\r\n    _applyChanges: function() {\r\n        var that = this;\r\n        var value = that._options.silent(VALUE);\r\n        if (that._changes.has(\"VALUE\") && value) {\r\n            that._rangeOption = value\r\n        }\r\n        that.callBase.apply(that, arguments);\r\n        that._rangeOption = null;\r\n        that.__isResizing = that.__skipAnimation = false\r\n    },\r\n    _applyMostlyTotalChange: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var rect = that._clientRect;\r\n        var currentAnimationEnabled;\r\n        var canvas = {\r\n            left: rect[0],\r\n            top: rect[1],\r\n            width: rect[2] - rect[0],\r\n            height: rect[3] - rect[1]\r\n        };\r\n        if (that.__isResizing || that.__skipAnimation) {\r\n            currentAnimationEnabled = renderer.animationEnabled();\r\n            renderer.updateAnimationOptions({\r\n                enabled: false\r\n            })\r\n        }\r\n        that._clipRect.attr({\r\n            x: rect[0],\r\n            y: rect[1],\r\n            width: rect[2] - rect[0],\r\n            height: rect[3] - rect[1]\r\n        });\r\n        that._axis.getTranslator().update(new _range.Range, canvas, {\r\n            isHorizontal: true\r\n        });\r\n        that._updateContent({\r\n            left: rect[0],\r\n            top: rect[1],\r\n            width: rect[2] - rect[0],\r\n            height: rect[3] - rect[1]\r\n        });\r\n        if (that.__isResizing || that.__skipAnimation) {\r\n            renderer.updateAnimationOptions({\r\n                enabled: currentAnimationEnabled\r\n            })\r\n        }\r\n        that._drawn()\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        this._setValueByDataSource();\r\n        this._requestChange([\"MOSTLY_TOTAL\"])\r\n    },\r\n    _completeSeriesDataSourceCreation: function(scaleOptions, seriesDataSource) {\r\n        var rect = this._clientRect;\r\n        var canvas = {\r\n            left: rect[0],\r\n            top: rect[1],\r\n            width: rect[2] - rect[0],\r\n            height: rect[3] - rect[1]\r\n        };\r\n        this._axis.updateOptions((0, _extend.extend)({}, scaleOptions, {\r\n            isHorizontal: true,\r\n            label: {}\r\n        }));\r\n        seriesDataSource.isShowChart() && this._axis.setMarginOptions(seriesDataSource.getMarginOptions(canvas));\r\n        this._axis.updateCanvas(canvas);\r\n        seriesDataSource.createPoints()\r\n    },\r\n    _updateContent: function(canvas) {\r\n        var that = this;\r\n        var chartOptions = that.option(\"chart\");\r\n        var seriesDataSource = that._createSeriesDataSource(chartOptions);\r\n        var isCompactMode = !(seriesDataSource && seriesDataSource.isShowChart() || that.option(\"background.image.url\"));\r\n        var scaleOptions = prepareScaleOptions(that._getOption(\"scale\"), seriesDataSource && seriesDataSource.getCalculatedValueType(), that._incidentOccurred, this._getOption(\"containerBackgroundColor\", true));\r\n        seriesDataSource && that._completeSeriesDataSourceCreation(scaleOptions, seriesDataSource);\r\n        var argTranslatorRange = calculateTranslatorRange(seriesDataSource, scaleOptions);\r\n        var tickIntervalsInfo = updateTickIntervals(scaleOptions, canvas.width, that._incidentOccurred, argTranslatorRange);\r\n        var chartThemeManager = seriesDataSource && seriesDataSource.isShowChart() && seriesDataSource.getThemeManager();\r\n        if (chartThemeManager) {\r\n            checkLogarithmicOptions(chartOptions && chartOptions.valueAxis, chartThemeManager.getOptions(\"valueAxis\").logarithmBase, that._incidentOccurred)\r\n        }\r\n        updateScaleOptions(scaleOptions, seriesDataSource, argTranslatorRange, tickIntervalsInfo, getDateMarkerVisibilityChecker(canvas.width));\r\n        updateTranslatorRangeInterval(argTranslatorRange, scaleOptions);\r\n        var sliderMarkerOptions = that._prepareSliderMarkersOptions(scaleOptions, canvas.width, tickIntervalsInfo, argTranslatorRange);\r\n        var indents = calculateIndents(that._renderer, scaleOptions, sliderMarkerOptions, that.option(\"indent\"), tickIntervalsInfo);\r\n        var rangeContainerCanvas = {\r\n            left: canvas.left + indents.left,\r\n            top: canvas.top + indents.top,\r\n            width: canvas.left + indents.left + _max(canvas.width - indents.left - indents.right, 1),\r\n            height: _max(!isCompactMode ? canvas.height - indents.top - indents.bottom - calculateScaleAreaHeight(that._renderer, scaleOptions, showScaleMarkers(scaleOptions), tickIntervalsInfo) : _common.HEIGHT_COMPACT_MODE, 0),\r\n            right: 0,\r\n            bottom: 0\r\n        };\r\n        that._axis.update(scaleOptions, isCompactMode, rangeContainerCanvas, argTranslatorRange, seriesDataSource);\r\n        scaleOptions.minorTickInterval = scaleOptions.isEmpty ? 0 : scaleOptions.minorTickInterval;\r\n        that._updateElements(scaleOptions, sliderMarkerOptions, isCompactMode, rangeContainerCanvas, seriesDataSource);\r\n        if (chartThemeManager) {\r\n            chartThemeManager.dispose()\r\n        }\r\n    },\r\n    _updateElements: function(scaleOptions, sliderMarkerOptions, isCompactMode, canvas, seriesDataSource) {\r\n        var that = this;\r\n        var behavior = that._getOption(\"behavior\");\r\n        var shutterOptions = that._getOption(\"shutter\");\r\n        var isNotSemiDiscrete = scaleOptions.type !== SEMIDISCRETE;\r\n        shutterOptions.color = shutterOptions.color || that._getOption(CONTAINER_BACKGROUND_COLOR, true);\r\n        that._rangeView.update(that.option(\"background\"), that._themeManager.theme(\"background\"), canvas, isCompactMode, behavior.animationEnabled && that._renderer.animationEnabled(), seriesDataSource);\r\n        that._isUpdating = true;\r\n        that._slidersController.update([canvas.top, canvas.top + canvas.height], behavior, isCompactMode, that._getOption(\"sliderHandle\"), sliderMarkerOptions, shutterOptions, {\r\n            minRange: isNotSemiDiscrete ? that.option(\"scale.minRange\") : void 0,\r\n            maxRange: isNotSemiDiscrete ? that.option(\"scale.maxRange\") : void 0\r\n        }, that._axis.getFullTicks(), that._getOption(\"selectedRangeColor\", true));\r\n        that._requestChange([\"SLIDER_SELECTION\"]);\r\n        that._isUpdating = false;\r\n        that._tracker.update(!that._axis.getTranslator().getBusinessRange().isEmpty(), behavior)\r\n    },\r\n    _createSeriesDataSource: function(chartOptions) {\r\n        var that = this;\r\n        var seriesDataSource;\r\n        var dataSource = that._dataSourceItems();\r\n        var scaleOptions = that._getOption(\"scale\");\r\n        var valueType = scaleOptions.valueType || calculateValueType(scaleOptions.startValue, scaleOptions.endValue);\r\n        var valueAxis = new _base_axis.Axis({\r\n            renderer: that._renderer,\r\n            axisType: \"xyAxes\",\r\n            drawingType: \"linear\"\r\n        });\r\n        valueAxis.updateOptions({\r\n            isHorizontal: false,\r\n            label: {},\r\n            categoriesSortingMethod: that._getOption(\"chart\").valueAxis.categoriesSortingMethod\r\n        });\r\n        if (dataSource || chartOptions && chartOptions.series) {\r\n            chartOptions = (0, _extend.extend)({}, chartOptions, {\r\n                theme: that.option(\"theme\")\r\n            });\r\n            seriesDataSource = new _series_data_source.SeriesDataSource({\r\n                renderer: that._renderer,\r\n                dataSource: dataSource,\r\n                valueType: (0, _utils.normalizeEnum)(valueType),\r\n                axisType: scaleOptions.type,\r\n                chart: chartOptions,\r\n                dataSourceField: that.option(\"dataSourceField\"),\r\n                incidentOccurred: that._incidentOccurred,\r\n                categories: scaleOptions.categories,\r\n                argumentAxis: that._axis,\r\n                valueAxis: valueAxis\r\n            })\r\n        }\r\n        return seriesDataSource\r\n    },\r\n    _prepareSliderMarkersOptions: function(scaleOptions, screenDelta, tickIntervalsInfo, argRange) {\r\n        var that = this;\r\n        var minorTickInterval = tickIntervalsInfo.minorTickInterval;\r\n        var tickInterval = tickIntervalsInfo.tickInterval;\r\n        var interval = tickInterval;\r\n        var endValue = scaleOptions.endValue;\r\n        var startValue = scaleOptions.startValue;\r\n        var sliderMarkerOptions = that._getOption(SLIDER_MARKER);\r\n        var doNotSnap = !that._getOption(\"behavior\").snapToTicks;\r\n        var isTypeDiscrete = scaleOptions.type === DISCRETE;\r\n        var isValueTypeDatetime = scaleOptions.valueType === DATETIME;\r\n        sliderMarkerOptions.borderColor = that._getOption(CONTAINER_BACKGROUND_COLOR, true);\r\n        if (!sliderMarkerOptions.format && !argRange.isEmpty()) {\r\n            if (doNotSnap && (0, _type2.isNumeric)(scaleOptions.startValue)) {\r\n                sliderMarkerOptions.format = {\r\n                    type: \"fixedPoint\",\r\n                    precision: getPrecisionForSlider(startValue, endValue, screenDelta)\r\n                }\r\n            }\r\n            if (isValueTypeDatetime && !isTypeDiscrete) {\r\n                if ((0, _type2.isDefined)(minorTickInterval) && 0 !== minorTickInterval) {\r\n                    interval = getMinorTickIntervalUnit(tickInterval, minorTickInterval, doNotSnap)\r\n                }\r\n                if (!scaleOptions.marker.visible) {\r\n                    if ((0, _type2.isDefined)(startValue) && (0, _type2.isDefined)(endValue)) {\r\n                        sliderMarkerOptions.format = _format_helper.default.getDateFormatByTickInterval(startValue, endValue, interval)\r\n                    }\r\n                } else {\r\n                    sliderMarkerOptions.format = _date.default.getDateFormatByTickInterval(interval)\r\n                }\r\n            }\r\n            if (isValueTypeDatetime && isTypeDiscrete && tickIntervalsInfo.ticks.length) {\r\n                sliderMarkerOptions.format = _format_helper.default.getDateFormatByTicks(tickIntervalsInfo.ticks)\r\n            }\r\n        }\r\n        return sliderMarkerOptions\r\n    },\r\n    getValue: function() {\r\n        return (0, _utils.convertVisualRangeObject)(this._slidersController.getSelectedRange())\r\n    },\r\n    setValue: function(value, e) {\r\n        var visualRange = (0, _utils.getVizRangeObject)(value);\r\n        if (!this._isUpdating && value) {\r\n            this._validateRange(visualRange.startValue, visualRange.endValue);\r\n            !(0, _utils.rangesAreEqual)(visualRange, this._slidersController.getSelectedRange()) && this._slidersController.setSelectedRange(visualRange, e)\r\n        }\r\n    },\r\n    _setContentSize: function() {\r\n        this.__isResizing = 2 === this._changes.count();\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n});\r\n(0, _iterator.each)([\"selectedRangeColor\", \"containerBackgroundColor\", \"sliderMarker\", \"sliderHandle\", \"shutter\", OPTION_BACKGROUND, \"behavior\", \"chart\", \"indent\"], function(_, name) {\r\n    dxRangeSelector.prototype._optionChangesMap[name] = \"MOSTLY_TOTAL\"\r\n});\r\n\r\nfunction prepareAxisOptions(scaleOptions, isCompactMode, height, axisPosition) {\r\n    scaleOptions.marker.label.font = scaleOptions.label.font;\r\n    scaleOptions.color = scaleOptions.marker.color = scaleOptions.tick.color;\r\n    scaleOptions.opacity = scaleOptions.marker.opacity = scaleOptions.tick.opacity;\r\n    scaleOptions.width = scaleOptions.marker.width = scaleOptions.tick.width;\r\n    scaleOptions.placeholderSize = (scaleOptions.placeholderHeight || 0) + axisPosition;\r\n    scaleOptions.argumentType = scaleOptions.valueType;\r\n    scaleOptions.visible = isCompactMode;\r\n    scaleOptions.isHorizontal = true;\r\n    scaleOptions.calculateMinors = true;\r\n    scaleOptions.semiDiscreteInterval = scaleOptions.minRange;\r\n    if (!isCompactMode) {\r\n        scaleOptions.minorTick.length = scaleOptions.tick.length = height\r\n    }\r\n    scaleOptions.label.indentFromAxis = scaleOptions.label.topIndent + axisPosition;\r\n    return scaleOptions\r\n}\r\n\r\nfunction createDateMarkersEvent(scaleOptions, markerTrackers, setSelectedRange) {\r\n    (0, _iterator.each)(markerTrackers, function(_, value) {\r\n        value.on(\"dxpointerdown\", onPointerDown)\r\n    });\r\n\r\n    function onPointerDown(e) {\r\n        var range = e.target.range;\r\n        var minRange = scaleOptions.minRange ? _date.default.addInterval(range.startValue, scaleOptions.minRange) : void 0;\r\n        var maxRange = scaleOptions.maxRange ? _date.default.addInterval(range.startValue, scaleOptions.maxRange) : void 0;\r\n        if (!(minRange && minRange > range.endValue || maxRange && maxRange < range.endValue)) {\r\n            setSelectedRange(range, e)\r\n        }\r\n    }\r\n}\r\n\r\nfunction getShiftDirection() {\r\n    return 1\r\n}\r\n\r\nfunction getTickStartPositionShift(length) {\r\n    return length % 2 === 1 ? -_floor(length / 2) : -length / 2\r\n}\r\n\r\nfunction AxisWrapper(params) {\r\n    var that = this;\r\n    that._axis = new _base_axis.Axis({\r\n        renderer: params.renderer,\r\n        axesContainerGroup: params.root,\r\n        scaleBreaksGroup: params.scaleBreaksGroup,\r\n        incidentOccurred: params.incidentOccurred,\r\n        axisType: \"xyAxes\",\r\n        drawingType: \"linear\",\r\n        widgetClass: \"dxrs\",\r\n        axisClass: \"range-selector\",\r\n        isArgumentAxis: true,\r\n        getTemplate: function() {}\r\n    });\r\n    that._updateSelectedRangeCallback = params.updateSelectedRange;\r\n    that._axis.getAxisSharpDirection = that._axis.getSharpDirectionByCoords = getShiftDirection;\r\n    that._axis.getTickStartPositionShift = getTickStartPositionShift\r\n}\r\nAxisWrapper.prototype = {\r\n    constructor: AxisWrapper,\r\n    dispose: function() {\r\n        this._axis.dispose()\r\n    },\r\n    calculateInterval: function(value, prevValue) {\r\n        return this._axis.calculateInterval(value, prevValue)\r\n    },\r\n    update: function(options, isCompactMode, canvas, businessRange, seriesDataSource) {\r\n        var axis = this._axis;\r\n        axis.updateOptions(prepareAxisOptions(options, isCompactMode, canvas.height, canvas.height / 2 - _ceil(options.width / 2)));\r\n        axis.validate();\r\n        axis.setBusinessRange(businessRange, true);\r\n        if (void 0 !== seriesDataSource && seriesDataSource.isShowChart()) {\r\n            axis.setMarginOptions(seriesDataSource.getMarginOptions(canvas))\r\n        }\r\n        axis.draw(canvas);\r\n        axis.shift({\r\n            left: 0,\r\n            bottom: -canvas.height / 2 + canvas.top\r\n        });\r\n        if (axis.getMarkerTrackers()) {\r\n            createDateMarkersEvent(options, axis.getMarkerTrackers(), this._updateSelectedRangeCallback)\r\n        }\r\n        axis.drawScaleBreaks({\r\n            start: canvas.top,\r\n            end: canvas.top + canvas.height\r\n        })\r\n    },\r\n    visualRange: function() {},\r\n    getViewport: function() {\r\n        return {}\r\n    },\r\n    allScaleSelected: function(value) {\r\n        var _this$_axis$visualRan = this._axis.visualRange(),\r\n            startValue = _this$_axis$visualRan.startValue,\r\n            endValue = _this$_axis$visualRan.endValue;\r\n        return {\r\n            startValue: value[0].valueOf() === startValue.valueOf(),\r\n            endValue: value[1].valueOf() === endValue.valueOf()\r\n        }\r\n    },\r\n    getOptions: function() {\r\n        return this._axis.getOptions() || {}\r\n    }\r\n};\r\n[\"setMarginOptions\", \"getFullTicks\", \"updateCanvas\", \"updateOptions\", \"getAggregationInfo\", \"getTranslator\", \"getVisualRangeLength\", \"getVisibleArea\", \"getMarginOptions\"].forEach(function(methodName) {\r\n    AxisWrapper.prototype[methodName] = function() {\r\n        var axis = this._axis;\r\n        return axis[methodName].apply(axis, arguments)\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxRangeSelector\", dxRangeSelector);\r\nvar _default = dxRangeSelector;\r\nexports.default = _default;\r\ndxRangeSelector.addPlugin(_export.plugin);\r\ndxRangeSelector.addPlugin(_title.plugin);\r\ndxRangeSelector.addPlugin(_loading_indicator.plugin);\r\ndxRangeSelector.addPlugin(_data_source.plugin);\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}