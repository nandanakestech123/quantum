{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Appointment\\\\ListAppointment\\\\CommonScheduler\\\\index.js\";\nimport React, { Component } from 'react';\nimport { SchedulerModal } from 'component/common/Plugins'; // import BigSchedulerModal from 'component/common/Plugins/BigScheduler';\n\nimport { NormalInput, NormalSelect, NormalButton, NormalDate, NormalModal } from 'component/common';\nimport { getCustomer, getCommonApi, commonDeleteApi } from 'redux/actions/common';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\"; // import timeOption from 'data/timeOption.json'\n\nimport { dateFormat } from 'service/helperFunctions';\nimport { history } from 'helpers';\nimport './style.scss';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { CreateAppointment, updateForm } from 'redux/actions/appointment';\nimport { Calander } from './Calander';\nconst data = [{\n  start_date: '2020-06-09 4:00',\n  end_date: '2020-06-09 6:00',\n  text: 'Event 1',\n  id: 1\n}, {\n  start_date: '2020-06-11 8:00',\n  end_date: '2020-06-11 10:00',\n  text: 'Event 2',\n  id: 2\n}, {\n  start_date: '2020-06-12 12:00',\n  end_date: '2018-06-12 14:00',\n  text: 'dblclick me!',\n  id: 3\n}];\nexport class SchedulerClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appointment: [{\n        time: '10.00 AM,',\n        date: 'Wednesday, 1st April, 2020',\n        name: 'Benjamin',\n        treatment: 'Head Massage'\n      }, {\n        time: '12.00 PM,',\n        date: 'Wednesday, 1st April, 2020',\n        name: 'Daniel',\n        treatment: 'Pedicure'\n      }, {\n        time: '1.00 PM,',\n        date: 'Wednesday, 1st April, 2020',\n        name: 'John',\n        treatment: 'Haircut'\n      }, {\n        time: '2.00 PM,',\n        date: 'Wednesday, 1st April, 2020',\n        name: 'Josua',\n        treatment: 'Manicure'\n      }, {\n        time: '4.00 PM, ',\n        date: 'Wednesday, 1st April, 2020',\n        name: 'Derrik',\n        treatment: 'Body Massage'\n      }],\n      events: [// {\n        //     \"start_date\": \"2021-01-06 3:30\",\n        //     \"end_date\": \"2021-01-06 5:00\",\n        //     \"text\": \"Korean Anti Aging\",\n        //     \"id\": 199787,\n        //     \"user_id\": 171,\n        //     \"status\": \"Booking\",\n        //     \"color\": \"#f0b5ec\",\n        //     \"title\": \"divya test\",\n        //     \"staff_name\": \"HAN HAI YAN\"\n        // }\n      ],\n      brachList: [],\n      formField: {\n        branchId: \"\",\n        time: \"\"\n      },\n      list: [],\n      filterDate: new Date(),\n      filterType: 'day',\n      selectedId: \"\"\n    };\n\n    this.componentWillMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n      let {\n        brachList,\n        appointment,\n        formField,\n        filterDate\n      } = this.state;\n      this.props.getCommonApi(`treatment/Outlet/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            brachList.push({\n              value: value.id,\n              label: value.itemsite_desc\n            });\n          }\n\n          this.setState({\n            brachList\n          }); // console.log(brachList, \"jhksdfkjsdhfks\")\n        }\n      });\n      this.getAvailability();\n      this.getAppointment();\n    };\n\n    this.getAvailability = date => {\n      let {\n        filterDate\n      } = this.state;\n      this.setState({\n        list: []\n      });\n      this.props.getCommonApi(`staffsavailable/?Appt_date=${dateFormat(date ? date : filterDate, \"yyyy-mm-dd\")}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          // for (let value of data) {\n          //     staffList.push({ value: value.id, label: value.emp_name })\n          // }\n          this.setState({\n            list: data\n          });\n        }\n      });\n    };\n\n    this.handleAppointmentOpen = (id, e) => {\n      console.log(e, id, \"hgjsydfisuyfsdfm ==== handleAppointmentOpen\");\n    };\n\n    this.handleEmptyEvent = async (date, e) => {\n      let {\n        customerDetail\n      } = this.props;\n      let {\n        formField\n      } = this.state; // if (this.validator.allValid()) {\n\n      let time = new Date(date);\n      formField['time'] = time.getHours() > 9 ? time.getHours() + \":00\" : \"0\" + time.getHours() + \":00\";\n      await this.setState({\n        formField\n      });\n      console.log(date, e, \"hgjsydfisuyfsdfm ==== handleEmptyEvent\", time.getHours);\n      await this.props.updateForm('basicApptDetail', formField);\n      history.push(`/admin/appointment/create`); // console.log(date, e, \"hgjsydfisuyfsdfm ====\");\n      // } else {\n      //     this.validator.showMessages();\n      // }\n    };\n\n    this.getAppointment = () => {\n      let {\n        brachList,\n        events,\n        formField,\n        filterType,\n        filterDate\n      } = this.state;\n      this.props.getCommonApi(`appointmentcalender/?date=${dateFormat(filterDate)}&check=${filterType}`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          events = [];\n          await this.setState({\n            events: null\n          });\n          events = data;\n          await this.setState({\n            events\n          }); // console.log(events, \"jhksdfkjsdhfks\", key)\n        }\n      });\n    };\n\n    this.handleChangeFilter = async (prevMode, prevDate, newMode, newDate) => {\n      let {\n        filterDate,\n        filterType\n      } = this.state;\n      filterDate = newDate;\n      filterType = newMode;\n      await this.setState({\n        filterDate,\n        filterType\n      });\n      this.getAvailability();\n      this.getAppointment();\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formField\n      } = this.state;\n      formField[name] = value;\n      await this.setState({\n        formField\n      });\n\n      if (name === \"branchId\") {\n        this.getAvailability();\n        this.getAppointment();\n      } // console.log(formField, \"afasfasdfdfasd\")\n\n\n      this.props.updateForm('basicApptDetail', formField);\n    };\n\n    this.handleDelete = async (id, event) => {\n      let {\n        selectedId\n      } = this.state;\n      console.log(id, \"===afasfasdfdfasd=====\", selectedId);\n\n      if (id !== selectedId) {\n        await this.setState({\n          selectedId: id\n        });\n        await this.props.commonDeleteApi(`appointment/${id}/`).then(res => {});\n      }\n    };\n\n    this.openDetail = id => {\n      history.push(`/admin/appointment/${id}/detail`);\n    };\n  }\n\n  render() {\n    let {\n      appointment,\n      brachList,\n      branchId,\n      formField,\n      list,\n      events,\n      filterType,\n      filterDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 pl-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"position-relative scheduler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"schedule-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, \"Today's Appointments\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment appointment-available-staff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, list && list.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 text-left detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, data.appointment.map((app, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-message mb-0 fs-10 fw-400 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 40\n      }\n    }, app.time), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-message mb-0 fs-12 col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 40\n      }\n    }, app.cust_name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 text-left detail mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-message mb-0 col-5 text-uppercase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 36\n      }\n    }, data.emp_name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-message mb-0 col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 36\n      }\n    }, data.services))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border-bottom-line mx-3 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 28\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scheduler-container col-9 pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Calander, {\n      selectedDate: this.props.selectedDate,\n      handleBack: this.props.handleBack,\n      handleFilterChange: this.getAvailability,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerDetail: state.appointment.customerDetail,\n  customerList: state.common.customerList,\n  multipleCustomerForm: state.appointment.multipleCustomerForm\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCustomer,\n    getCommonApi,\n    updateForm,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const DayScheduler = connect(mapStateToProps, mapDispatchToProps)(SchedulerClass);","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Appointment/ListAppointment/CommonScheduler/index.js"],"names":["React","Component","SchedulerModal","NormalInput","NormalSelect","NormalButton","NormalDate","NormalModal","getCustomer","getCommonApi","commonDeleteApi","connect","bindActionCreators","dateFormat","history","SimpleReactValidator","CreateAppointment","updateForm","Calander","data","start_date","end_date","text","id","SchedulerClass","state","appointment","time","date","name","treatment","events","brachList","formField","branchId","list","filterDate","Date","filterType","selectedId","componentWillMount","validator","element","message","autoForceUpdate","props","then","key","status","value","push","label","itemsite_desc","setState","getAvailability","getAppointment","handleAppointmentOpen","e","console","log","handleEmptyEvent","customerDetail","getHours","handleChangeFilter","prevMode","prevDate","newMode","newDate","handleChange","target","handleDelete","event","res","openDetail","render","map","index","app","cust_name","emp_name","services","selectedDate","handleBack","mapStateToProps","customerList","common","multipleCustomerForm","mapDispatchToProps","dispatch","DayScheduler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { SchedulerModal } from 'component/common/Plugins';\r\n// import BigSchedulerModal from 'component/common/Plugins/BigScheduler';\r\nimport { NormalInput, NormalSelect, NormalButton, NormalDate, NormalModal } from 'component/common';\r\nimport { getCustomer, getCommonApi, commonDeleteApi } from 'redux/actions/common';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\n// import timeOption from 'data/timeOption.json'\r\nimport { dateFormat } from 'service/helperFunctions';\r\nimport { history } from 'helpers';\r\nimport './style.scss';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { CreateAppointment, updateForm } from 'redux/actions/appointment';\r\nimport { Calander } from './Calander';\r\n\r\nconst data = [\r\n    { start_date: '2020-06-09 4:00', end_date: '2020-06-09 6:00', text: 'Event 1', id: 1 },\r\n    { start_date: '2020-06-11 8:00', end_date: '2020-06-11 10:00', text: 'Event 2', id: 2 },\r\n    { start_date: '2020-06-12 12:00', end_date: '2018-06-12 14:00', text: 'dblclick me!', id: 3 }\r\n];\r\n\r\nexport class SchedulerClass extends Component {\r\n    state = {\r\n        appointment: [\r\n            {\r\n                time: '10.00 AM,',\r\n                date: 'Wednesday, 1st April, 2020',\r\n                name: 'Benjamin',\r\n                treatment: 'Head Massage'\r\n            },\r\n            {\r\n                time: '12.00 PM,',\r\n                date: 'Wednesday, 1st April, 2020',\r\n                name: 'Daniel',\r\n                treatment: 'Pedicure'\r\n            },\r\n            {\r\n                time: '1.00 PM,',\r\n                date: 'Wednesday, 1st April, 2020',\r\n                name: 'John',\r\n                treatment: 'Haircut'\r\n            },\r\n            {\r\n                time: '2.00 PM,',\r\n                date: 'Wednesday, 1st April, 2020',\r\n                name: 'Josua',\r\n                treatment: 'Manicure'\r\n            },\r\n            {\r\n                time: '4.00 PM, ',\r\n                date: 'Wednesday, 1st April, 2020',\r\n                name: 'Derrik',\r\n                treatment: 'Body Massage'\r\n            },\r\n\r\n        ],\r\n        events: [\r\n            // {\r\n            //     \"start_date\": \"2021-01-06 3:30\",\r\n            //     \"end_date\": \"2021-01-06 5:00\",\r\n            //     \"text\": \"Korean Anti Aging\",\r\n            //     \"id\": 199787,\r\n            //     \"user_id\": 171,\r\n            //     \"status\": \"Booking\",\r\n            //     \"color\": \"#f0b5ec\",\r\n            //     \"title\": \"divya test\",\r\n            //     \"staff_name\": \"HAN HAI YAN\"\r\n            // }\r\n        ],\r\n        brachList: [],\r\n        formField: {\r\n            branchId: \"\",\r\n            time: \"\"\r\n        },\r\n        list: [],\r\n        filterDate: new Date(),\r\n        filterType: 'day',\r\n        selectedId: \"\"\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.validator = new SimpleReactValidator({\r\n            element: message => <span className=\"error-message text-danger validNo fs14\">{message}</span>,\r\n            autoForceUpdate: this,\r\n        });\r\n        let { brachList, appointment, formField, filterDate } = this.state;\r\n        this.props.getCommonApi(`treatment/Outlet/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    brachList.push({ value: value.id, label: value.itemsite_desc })\r\n                }\r\n                this.setState({ brachList })\r\n                // console.log(brachList, \"jhksdfkjsdhfks\")\r\n            }\r\n        })\r\n       this.getAvailability();\r\n        this.getAppointment();\r\n    }\r\n\r\n    getAvailability = (date) => {\r\n        let { filterDate } = this.state;\r\n        this.setState({ list: [] })\r\n        \r\n        this.props.getCommonApi(`staffsavailable/?Appt_date=${dateFormat(date ? date:filterDate, \"yyyy-mm-dd\")}`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                // for (let value of data) {\r\n                //     staffList.push({ value: value.id, label: value.emp_name })\r\n                // }\r\n                this.setState({ list: data })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleAppointmentOpen = (id, e) => {\r\n        console.log(e, id, \"hgjsydfisuyfsdfm ==== handleAppointmentOpen\");\r\n    }\r\n\r\n    handleEmptyEvent = async (date, e) => {\r\n        let { customerDetail } = this.props;\r\n        let { formField } = this.state;\r\n        // if (this.validator.allValid()) {\r\n        let time = new Date(date)\r\n        formField['time'] = time.getHours() > 9 ? (time.getHours() + \":00\") : (\"0\" + time.getHours()) + \":00\";\r\n        await this.setState({ formField });\r\n        console.log(date, e, \"hgjsydfisuyfsdfm ==== handleEmptyEvent\", time.getHours);\r\n        await this.props.updateForm('basicApptDetail', formField);\r\n        history.push(`/admin/appointment/create`)\r\n        // console.log(date, e, \"hgjsydfisuyfsdfm ====\");\r\n        // } else {\r\n        //     this.validator.showMessages();\r\n        // }\r\n\r\n    }\r\n\r\n    getAppointment = () => {\r\n        let { brachList, events, formField, filterType, filterDate } = this.state;\r\n        this.props.getCommonApi(`appointmentcalender/?date=${dateFormat(filterDate)}&check=${filterType}`).then(async (key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                events = [];\r\n                await this.setState({ events: null })\r\n                events = data;\r\n                await this.setState({ events })\r\n                // console.log(events, \"jhksdfkjsdhfks\", key)\r\n            }\r\n        })\r\n    }\r\n    handleChangeFilter = async (prevMode, prevDate, newMode, newDate) => {\r\n\r\n        let { filterDate, filterType } = this.state;\r\n        filterDate = newDate;\r\n        filterType = newMode;\r\n        await this.setState({\r\n            filterDate,\r\n            filterType\r\n        })\r\n        this.getAvailability();\r\n        this.getAppointment()\r\n    }\r\n\r\n    handleChange = async ({ target: { value, name } }) => {\r\n        let { formField } = this.state;\r\n        formField[name] = value;\r\n        await this.setState({\r\n            formField,\r\n        });\r\n        if (name === \"branchId\") {\r\n            this.getAvailability();\r\n            this.getAppointment();\r\n        }\r\n        // console.log(formField, \"afasfasdfdfasd\")\r\n        this.props.updateForm('basicApptDetail', formField);\r\n    };\r\n\r\n    handleDelete = async (id, event) => {\r\n        let { selectedId } = this.state;\r\n        console.log(id, \"===afasfasdfdfasd=====\", selectedId)\r\n        if (id !== selectedId) {\r\n            await this.setState({\r\n                selectedId: id\r\n            })\r\n            await this.props.commonDeleteApi(`appointment/${id}/`).then((res) => {\r\n\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    openDetail = (id) => {\r\n        history.push(`/admin/appointment/${id}/detail`)\r\n    }\r\n\r\n    render() {\r\n        let { appointment, brachList, branchId, formField, list, events, filterType, filterDate } = this.state;\r\n        return (\r\n            <div className=\"row m-0\">\r\n\r\n                <div className=\"col-3 pl-0 \">\r\n                    <div className=\"position-relative scheduler\">\r\n                        <div className=\"schedule-label\">\r\n                            Today's Appointments\r\n                        </div>\r\n                        {/* <span className=\"icon-down-blue clip-icon\"></span> */}\r\n                    </div>\r\n                    <div className=\"appointment appointment-available-staff\">\r\n                        {list && list.map((data, index) => (\r\n                            <div key={index}>\r\n                            <div className='col-12 text-left detail'>\r\n                               {data.appointment.map((app, index)=>(\r\n                                   <div className='d-flex flex-wrap' key={index}>\r\n                                       <div className=\"head-message mb-0 fs-10 fw-400 col-5\">{app.time}</div>\r\n                                       <div className=\"head-message mb-0 fs-12 col-7\">{app.cust_name}</div>\r\n                                   </div>))}   \r\n                               </div>\r\n                           <div className=\"col-12 text-left detail mt-2\">                                   \r\n                               <div className=\"d-flex flex-wrap\">\r\n                                   <div className=\"head-message mb-0 col-5 text-uppercase\">{data.emp_name}</div>\r\n                                   <div className=\"head-message mb-0 col-7\">{data.services}</div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"border-bottom-line mx-3 mt-3\"></div>\r\n                       </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className='scheduler-container col-9 pr-0'>\r\n\r\n                    <Calander selectedDate={this.props.selectedDate} handleBack={this.props.handleBack} handleFilterChange={this.getAvailability}></Calander>\r\n                    {/* {console.log(\"render ===\", this.state, this.props)} */}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    customerDetail: state.appointment.customerDetail,\r\n    customerList: state.common.customerList,\r\n    multipleCustomerForm: state.appointment.multipleCustomerForm\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        getCustomer,\r\n        getCommonApi,\r\n        updateForm,\r\n        commonDeleteApi\r\n    }, dispatch)\r\n}\r\n\r\nexport const DayScheduler = connect(mapStateToProps, mapDispatchToProps)(SchedulerClass)"]},"metadata":{},"sourceType":"module"}