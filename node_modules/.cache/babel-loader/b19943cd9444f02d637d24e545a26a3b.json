{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\CustomerPlus\\\\CustomerDetailsPlus\\\\Details\\\\AddPhotoPopup.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalButton, NormalSelect } from \"component/common\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Webcam from \"react-webcam\";\nexport class AddPhotoPopupClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: null,\n      isCameraAvailable: true,\n      remarks: \"\",\n      brushRadius: \"2\",\n      brushColor: \"yellow\",\n      brushColorOptions: [{\n        label: \"Yellow\",\n        value: \"yellow\"\n      }, {\n        label: \"Red\",\n        value: \"red\"\n      }, {\n        label: \"White\",\n        value: \"white\"\n      }, {\n        label: \"Black\",\n        value: \"black\"\n      }, {\n        label: \"Green\",\n        value: \"green\"\n      }, {\n        label: \"Blue\",\n        value: \"blue\"\n      }],\n      isMounted: true\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.setRef = webcam => {\n      this.webcam = webcam;\n    };\n\n    this.capture = () => {\n      const imageSrc = this.webcam.getScreenshot();\n      this.updateState({\n        image: imageSrc\n      });\n    };\n\n    this.handleChange = e => {\n      this.updateState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = () => {};\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentWillMount() {\n    navigator.getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n    navigator.getMedia({\n      video: true\n    }, () => {\n      this.updateState({\n        isCameraAvailable: true\n      });\n    }, () => {\n      this.updateState({\n        isCameraAvailable: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    let {\n      image,\n      remarks\n    } = this.props;\n    console.log(this.props);\n\n    if (image && remarks) {\n      this.updateState({\n        image,\n        remarks\n      });\n    }\n\n    document.getElementById(\"get_file\").onclick = function () {\n      document.getElementById(\"my_file\").click();\n    };\n  }\n\n  render() {\n    let {\n      image,\n      isCameraAvailable,\n      remarks,\n      brushRadius,\n      brushColor,\n      brushColorOptions\n    } = this.state;\n    const videoConstraints = {\n      width: 1280,\n      height: 720,\n      facingMode: \"user\"\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mb-4 mt-2 product-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Add Photo\")), image == null ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Done\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }))), image == null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, isCameraAvailable ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Webcam, {\n      audio: false,\n      ref: this.setRef,\n      screenshotFormat: \"image/jpeg\",\n      width: \"100%\",\n      videoConstraints: videoConstraints,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Capture\",\n      onClick: () => this.capture(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: \"get_file\",\n      value: \"Browse\",\n      className: \"btn cursor-pointer mainbg-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"my_file\",\n      className: \"d-none\",\n      accept: \"image/*\",\n      onChange: e => {\n        if (e.target.value || e.target.value != null) {\n          var reader = new FileReader();\n\n          reader.onload = e => {\n            this.updateState({\n              image: e.target.result\n            });\n          };\n\n          reader.readAsDataURL(e.target.files[0]);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CanvasDraw, {\n      imgSrc: this.state.image,\n      canvasHeight: \"60vw\",\n      ref: ref => this.canvasDraw = ref,\n      canvasWidth: \"100%\",\n      brushRadius: brushRadius,\n      brushColor: brushColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, \"Brush Radius\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"col-12\",\n      type: \"range\",\n      min: \"1\",\n      max: \"20\",\n      value: brushRadius,\n      onChange: e => this.updateState({\n        brushRadius: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, \"Brush Color\"), /*#__PURE__*/React.createElement(NormalSelect, {\n      options: brushColorOptions,\n      value: brushColor,\n      onChange: e => this.updateState({\n        brushColor: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Clear\",\n      onClick: () => {\n        this.canvasDraw.clear();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, \"Remarks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter remarks\",\n      value: remarks,\n      name: \"remarks\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport const AddPhotoPopup = connect(mapStateToProps, mapDispatchToProps)(AddPhotoPopupClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/CustomerPlus/CustomerDetailsPlus/Details/AddPhotoPopup.js"],"names":["React","Component","NormalInput","NormalButton","NormalSelect","CanvasDraw","connect","bindActionCreators","Webcam","AddPhotoPopupClass","state","image","isCameraAvailable","remarks","brushRadius","brushColor","brushColorOptions","label","value","isMounted","updateState","data","setState","setRef","webcam","capture","imageSrc","getScreenshot","handleChange","e","target","name","handleSubmit","componentWillUnmount","componentWillMount","navigator","getMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","video","componentDidMount","props","console","log","document","getElementById","onclick","click","render","videoConstraints","width","height","facingMode","reader","FileReader","onload","result","readAsDataURL","files","ref","canvasDraw","clear","mapStateToProps","mapDispatchToProps","dispatch","AddPhotoPopup"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NormalInput, NormalButton, NormalSelect } from \"component/common\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Webcam from \"react-webcam\";\n\nexport class AddPhotoPopupClass extends Component {\n  state = {\n    image: null,\n    isCameraAvailable: true,\n    remarks: \"\",\n    brushRadius: \"2\",\n    brushColor: \"yellow\",\n    brushColorOptions: [\n      { label: \"Yellow\", value: \"yellow\" },\n      { label: \"Red\", value: \"red\" },\n      { label: \"White\", value: \"white\" },\n      { label: \"Black\", value: \"black\" },\n      { label: \"Green\", value: \"green\" },\n      { label: \"Blue\", value: \"blue\" },\n    ],\n    isMounted: true,\n  };\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  updateState = (data) => {\n    if (this.state.isMounted) this.setState(data);\n  };\n\n  componentWillMount() {\n    navigator.getMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n\n    navigator.getMedia(\n      { video: true },\n      () => {\n        this.updateState({ isCameraAvailable: true });\n      },\n      () => {\n        this.updateState({ isCameraAvailable: false });\n      }\n    );\n  }\n\n  componentDidMount() {\n    let { image, remarks } = this.props;\n    console.log(this.props);\n    if (image && remarks) {\n      this.updateState({ image, remarks });\n    }\n    document.getElementById(\"get_file\").onclick = function () {\n      document.getElementById(\"my_file\").click();\n    };\n  }\n\n  setRef = (webcam) => {\n    this.webcam = webcam;\n  };\n\n  capture = () => {\n    const imageSrc = this.webcam.getScreenshot();\n    this.updateState({ image: imageSrc });\n  };\n\n  handleChange = (e) => {\n    this.updateState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = () => {};\n\n  render() {\n    let {\n      image,\n      isCameraAvailable,\n      remarks,\n      brushRadius,\n      brushColor,\n      brushColorOptions,\n    } = this.state;\n    const videoConstraints = {\n      width: 1280,\n      height: 720,\n      facingMode: \"user\",\n    };\n\n    return (\n      <>\n        <div className=\"container-fluid mb-4 mt-2 product-details\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4>Add Photo</h4>\n            </div>\n            {image == null ? null : (\n              <div className=\"col-6\">\n                <NormalButton\n                  mainbg={true}\n                  className=\"col-12 fs-15 \"\n                  label=\"Done\"\n                  onClick={() => this.handleSubmit()}\n                />\n              </div>\n            )}\n          </div>\n          {image == null ? (\n            <div className=\"row pl-5 pr-5 mt-4\">\n              {isCameraAvailable ? (\n                <>\n                  <div className=\"col-12\">\n                    <Webcam\n                      audio={false}\n                      ref={this.setRef}\n                      screenshotFormat=\"image/jpeg\"\n                      width={\"100%\"}\n                      videoConstraints={videoConstraints}\n                    />\n                  </div>\n                  <div className=\"col-12 mb-4\">\n                    <NormalButton\n                      mainbg={true}\n                      className=\"col-12 fs-15 \"\n                      label=\"Capture\"\n                      onClick={() => this.capture()}\n                    />\n                  </div>\n                </>\n              ) : null}\n              <div className=\"col-12\">\n                <input\n                  type=\"button\"\n                  id=\"get_file\"\n                  value=\"Browse\"\n                  className=\"btn cursor-pointer mainbg-btn\"\n                />\n                <input\n                  type=\"file\"\n                  id=\"my_file\"\n                  className=\"d-none\"\n                  accept=\"image/*\"\n                  onChange={(e) => {\n                    if (e.target.value || e.target.value != null) {\n                      var reader = new FileReader();\n                      reader.onload = (e) => {\n                        this.updateState({ image: e.target.result });\n                      };\n                      reader.readAsDataURL(e.target.files[0]);\n                    }\n                  }}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"row pl-5 pr-5 mt-4\">\n              <div className=\"col-12 mb-4\">\n                <CanvasDraw\n                  imgSrc={this.state.image}\n                  canvasHeight={\"60vw\"}\n                  ref={(ref) => (this.canvasDraw = ref)}\n                  canvasWidth={\"100%\"}\n                  brushRadius={brushRadius}\n                  brushColor={brushColor}\n                />\n              </div>\n              <div className=\"col-12 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\n                  Brush Radius\n                </label>\n                <input\n                  className=\"col-12\"\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"20\"\n                  value={brushRadius}\n                  onChange={(e) =>\n                    this.updateState({ brushRadius: e.target.value })\n                  }\n                />\n              </div>\n              <div className=\"col-12 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\n                  Brush Color\n                </label>\n                <NormalSelect\n                  options={brushColorOptions}\n                  value={brushColor}\n                  onChange={(e) =>\n                    this.updateState({ brushColor: e.target.value })\n                  }\n                />\n              </div>\n              <div className=\"col-12 mb-4\">\n                <NormalButton\n                  mainbg={true}\n                  className=\"col-12 fs-15 \"\n                  label=\"Clear\"\n                  onClick={() => {\n                    this.canvasDraw.clear();\n                  }}\n                />\n              </div>\n              <div className=\"col-12 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-2\">\n                  Remarks\n                </label>\n                <div className=\"input-group\">\n                  <NormalInput\n                    placeholder=\"Enter remarks\"\n                    value={remarks}\n                    name=\"remarks\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport const AddPhotoPopup = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddPhotoPopupClass);\n"]},"metadata":{},"sourceType":"module"}