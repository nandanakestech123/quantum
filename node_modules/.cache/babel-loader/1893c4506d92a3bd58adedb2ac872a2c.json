{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.fields_area.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.FieldsArea = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _uiPivot_grid = require(\"./ui.pivot_grid.area_item\");\n\nvar _uiPivot_grid2 = require(\"./ui.pivot_grid.utils\");\n\nvar _popup = _interopRequireDefault(require(\"../popup\"));\n\nvar _button = _interopRequireDefault(require(\"../button\"));\n\nrequire(\"./ui.pivot_grid.field_chooser_base\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DIV = \"<div>\";\nvar AREA_DRAG_CLASS = \"dx-pivotgrid-drag-action\";\n\nfunction renderGroupConnector(field, nextField, prevField, $container) {\n  if (prevField && prevField.groupName && prevField.groupName === field.groupName) {\n    (0, _renderer.default)(DIV).addClass(\"dx-group-connector\").addClass(\"dx-group-connector-prev\").appendTo($container);\n  }\n\n  if (nextField && nextField.groupName && nextField.groupName === field.groupName) {\n    (0, _renderer.default)(DIV).addClass(\"dx-group-connector\").addClass(\"dx-group-connector-next\").appendTo($container);\n  }\n}\n\nvar FieldsArea = _uiPivot_grid.AreaItem.inherit({\n  ctor: function (component, area) {\n    this.callBase(component);\n    this._area = area;\n  },\n  _getAreaName: function () {\n    return \"fields\";\n  },\n  _createGroupElement: function () {\n    return (0, _renderer.default)(DIV).addClass(\"dx-pivotgrid-fields-area\").addClass(\"dx-area-fields\").addClass(AREA_DRAG_CLASS).attr(\"group\", this._area);\n  },\n  isVisible: function () {\n    return !!this.option(\"fieldPanel.visible\") && this.option(\"fieldPanel.show\" + (0, _uiPivot_grid2.capitalizeFirstLetter)(this._area) + \"Fields\");\n  },\n  _renderButton: function (element) {\n    var that = this;\n    var container = (0, _renderer.default)(\"<td>\").appendTo((0, _renderer.default)(\"<tr>\").appendTo(element));\n\n    var button = that.component._createComponent((0, _renderer.default)(DIV).appendTo(container), _button.default, {\n      text: \"Fields\",\n      icon: \"menu\",\n      width: \"auto\",\n      onClick: function () {\n        var popup = that.tableElement().find(\".dx-fields-area-popup\").dxPopup(\"instance\");\n\n        if (!popup.option(\"visible\")) {\n          popup.show();\n        }\n      }\n    });\n\n    button.$element().addClass(\"dx-pivotgrid-fields-area-hamburger\");\n  },\n  _getPopupOptions: function (row, button) {\n    return {\n      contentTemplate: function () {\n        return (0, _renderer.default)(\"<table>\").addClass(\"dx-area-field-container\").append((0, _renderer.default)(\"<thead>\").addClass(\"dx-pivotgrid-fields-area-head\").append(row));\n      },\n      height: \"auto\",\n      width: \"auto\",\n      position: {\n        at: \"left\",\n        my: \"left\",\n        of: button\n      },\n      dragEnabled: false,\n      animation: {\n        show: {\n          type: \"pop\",\n          duration: 200\n        }\n      },\n      shading: false,\n      showTitle: false,\n      closeOnOutsideClick: true,\n      container: button.parent()\n    };\n  },\n  _renderPopup: function (tableElement, row) {\n    var that = this;\n    var button = tableElement.find(\".dx-button\");\n\n    var popupOptions = that._getPopupOptions(row, button);\n\n    var FieldChooserBase = that.component.$element().dxPivotGridFieldChooserBase(\"instance\");\n\n    if (that._rowPopup) {\n      that._rowPopup.$element().remove();\n    }\n\n    that._rowPopup = that.component._createComponent((0, _renderer.default)(DIV).appendTo(tableElement), _popup.default, popupOptions);\n\n    that._rowPopup.$element().addClass(\"dx-fields-area-popup\");\n\n    that._rowPopup.content().addClass(\"dx-pivotgrid-fields-container\");\n\n    that._rowPopup.content().parent().attr(\"group\", \"row\");\n\n    FieldChooserBase.subscribeToEvents(that._rowPopup.content());\n    FieldChooserBase.renderSortable(that._rowPopup.content());\n  },\n  _shouldCreateButton: function () {\n    return false;\n  },\n  _renderTableContent: function (tableElement, data) {\n    var that = this;\n    var groupElement = this.groupElement();\n    var isVisible = this.isVisible();\n    var fieldChooserBase = that.component.$element().dxPivotGridFieldChooserBase(\"instance\");\n    var head = (0, _renderer.default)(\"<thead>\").addClass(\"dx-pivotgrid-fields-area-head\").appendTo(tableElement);\n    var area = that._area;\n    var row = (0, _renderer.default)(\"<tr>\");\n    groupElement.toggleClass(\"dx-hidden\", !isVisible);\n    tableElement.addClass(\"dx-area-field-container\");\n\n    if (!isVisible) {\n      return;\n    }\n\n    (0, _iterator.each)(data, function (index, field) {\n      if (field.area === area && false !== field.visible) {\n        var td = (0, _renderer.default)(\"<td>\").append(fieldChooserBase.renderField(field, \"row\" === field.area));\n        var indicators = td.find(\".dx-column-indicators\");\n\n        if (indicators.length && that._shouldCreateButton()) {\n          indicators.insertAfter(indicators.next());\n        }\n\n        td.appendTo(row);\n        renderGroupConnector(field, data[index + 1], data[index - 1], td);\n      }\n    });\n\n    if (!row.children().length) {\n      (0, _renderer.default)(\"<td>\").append((0, _renderer.default)(DIV).addClass(\"dx-empty-area-text\").text(this.option(\"fieldPanel.texts.\" + area + \"FieldArea\"))).appendTo(row);\n    }\n\n    if (that._shouldCreateButton()) {\n      that._renderButton(head);\n\n      that._renderPopup(tableElement, row);\n    } else {\n      head.append(row);\n    }\n  },\n  reset: function () {\n    this.callBase();\n    this.groupElement().css(\"marginTop\", 0);\n  },\n  _renderVirtualContent: _common.noop\n});\n\nexports.FieldsArea = FieldsArea;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/ui.pivot_grid.fields_area.js"],"names":["exports","FieldsArea","_renderer","_interopRequireDefault","require","_common","_iterator","_uiPivot_grid","_uiPivot_grid2","_popup","_button","obj","__esModule","DIV","AREA_DRAG_CLASS","renderGroupConnector","field","nextField","prevField","$container","groupName","default","addClass","appendTo","AreaItem","inherit","ctor","component","area","callBase","_area","_getAreaName","_createGroupElement","attr","isVisible","option","capitalizeFirstLetter","_renderButton","element","that","container","button","_createComponent","text","icon","width","onClick","popup","tableElement","find","dxPopup","show","$element","_getPopupOptions","row","contentTemplate","append","height","position","at","my","of","dragEnabled","animation","type","duration","shading","showTitle","closeOnOutsideClick","parent","_renderPopup","popupOptions","FieldChooserBase","dxPivotGridFieldChooserBase","_rowPopup","remove","content","subscribeToEvents","renderSortable","_shouldCreateButton","_renderTableContent","data","groupElement","fieldChooserBase","head","toggleClass","each","index","visible","td","renderField","indicators","length","insertAfter","next","children","reset","css","_renderVirtualContent","noop"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.fields_area.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.FieldsArea = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiPivot_grid = require(\"./ui.pivot_grid.area_item\");\r\nvar _uiPivot_grid2 = require(\"./ui.pivot_grid.utils\");\r\nvar _popup = _interopRequireDefault(require(\"../popup\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nrequire(\"./ui.pivot_grid.field_chooser_base\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DIV = \"<div>\";\r\nvar AREA_DRAG_CLASS = \"dx-pivotgrid-drag-action\";\r\n\r\nfunction renderGroupConnector(field, nextField, prevField, $container) {\r\n    if (prevField && prevField.groupName && prevField.groupName === field.groupName) {\r\n        (0, _renderer.default)(DIV).addClass(\"dx-group-connector\").addClass(\"dx-group-connector-prev\").appendTo($container)\r\n    }\r\n    if (nextField && nextField.groupName && nextField.groupName === field.groupName) {\r\n        (0, _renderer.default)(DIV).addClass(\"dx-group-connector\").addClass(\"dx-group-connector-next\").appendTo($container)\r\n    }\r\n}\r\nvar FieldsArea = _uiPivot_grid.AreaItem.inherit({\r\n    ctor: function(component, area) {\r\n        this.callBase(component);\r\n        this._area = area\r\n    },\r\n    _getAreaName: function() {\r\n        return \"fields\"\r\n    },\r\n    _createGroupElement: function() {\r\n        return (0, _renderer.default)(DIV).addClass(\"dx-pivotgrid-fields-area\").addClass(\"dx-area-fields\").addClass(AREA_DRAG_CLASS).attr(\"group\", this._area)\r\n    },\r\n    isVisible: function() {\r\n        return !!this.option(\"fieldPanel.visible\") && this.option(\"fieldPanel.show\" + (0, _uiPivot_grid2.capitalizeFirstLetter)(this._area) + \"Fields\")\r\n    },\r\n    _renderButton: function(element) {\r\n        var that = this;\r\n        var container = (0, _renderer.default)(\"<td>\").appendTo((0, _renderer.default)(\"<tr>\").appendTo(element));\r\n        var button = that.component._createComponent((0, _renderer.default)(DIV).appendTo(container), _button.default, {\r\n            text: \"Fields\",\r\n            icon: \"menu\",\r\n            width: \"auto\",\r\n            onClick: function() {\r\n                var popup = that.tableElement().find(\".dx-fields-area-popup\").dxPopup(\"instance\");\r\n                if (!popup.option(\"visible\")) {\r\n                    popup.show()\r\n                }\r\n            }\r\n        });\r\n        button.$element().addClass(\"dx-pivotgrid-fields-area-hamburger\")\r\n    },\r\n    _getPopupOptions: function(row, button) {\r\n        return {\r\n            contentTemplate: function() {\r\n                return (0, _renderer.default)(\"<table>\").addClass(\"dx-area-field-container\").append((0, _renderer.default)(\"<thead>\").addClass(\"dx-pivotgrid-fields-area-head\").append(row))\r\n            },\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n            position: {\r\n                at: \"left\",\r\n                my: \"left\",\r\n                of: button\r\n            },\r\n            dragEnabled: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"pop\",\r\n                    duration: 200\r\n                }\r\n            },\r\n            shading: false,\r\n            showTitle: false,\r\n            closeOnOutsideClick: true,\r\n            container: button.parent()\r\n        }\r\n    },\r\n    _renderPopup: function(tableElement, row) {\r\n        var that = this;\r\n        var button = tableElement.find(\".dx-button\");\r\n        var popupOptions = that._getPopupOptions(row, button);\r\n        var FieldChooserBase = that.component.$element().dxPivotGridFieldChooserBase(\"instance\");\r\n        if (that._rowPopup) {\r\n            that._rowPopup.$element().remove()\r\n        }\r\n        that._rowPopup = that.component._createComponent((0, _renderer.default)(DIV).appendTo(tableElement), _popup.default, popupOptions);\r\n        that._rowPopup.$element().addClass(\"dx-fields-area-popup\");\r\n        that._rowPopup.content().addClass(\"dx-pivotgrid-fields-container\");\r\n        that._rowPopup.content().parent().attr(\"group\", \"row\");\r\n        FieldChooserBase.subscribeToEvents(that._rowPopup.content());\r\n        FieldChooserBase.renderSortable(that._rowPopup.content())\r\n    },\r\n    _shouldCreateButton: function() {\r\n        return false\r\n    },\r\n    _renderTableContent: function(tableElement, data) {\r\n        var that = this;\r\n        var groupElement = this.groupElement();\r\n        var isVisible = this.isVisible();\r\n        var fieldChooserBase = that.component.$element().dxPivotGridFieldChooserBase(\"instance\");\r\n        var head = (0, _renderer.default)(\"<thead>\").addClass(\"dx-pivotgrid-fields-area-head\").appendTo(tableElement);\r\n        var area = that._area;\r\n        var row = (0, _renderer.default)(\"<tr>\");\r\n        groupElement.toggleClass(\"dx-hidden\", !isVisible);\r\n        tableElement.addClass(\"dx-area-field-container\");\r\n        if (!isVisible) {\r\n            return\r\n        }(0, _iterator.each)(data, function(index, field) {\r\n            if (field.area === area && false !== field.visible) {\r\n                var td = (0, _renderer.default)(\"<td>\").append(fieldChooserBase.renderField(field, \"row\" === field.area));\r\n                var indicators = td.find(\".dx-column-indicators\");\r\n                if (indicators.length && that._shouldCreateButton()) {\r\n                    indicators.insertAfter(indicators.next())\r\n                }\r\n                td.appendTo(row);\r\n                renderGroupConnector(field, data[index + 1], data[index - 1], td)\r\n            }\r\n        });\r\n        if (!row.children().length) {\r\n            (0, _renderer.default)(\"<td>\").append((0, _renderer.default)(DIV).addClass(\"dx-empty-area-text\").text(this.option(\"fieldPanel.texts.\" + area + \"FieldArea\"))).appendTo(row)\r\n        }\r\n        if (that._shouldCreateButton()) {\r\n            that._renderButton(head);\r\n            that._renderPopup(tableElement, row)\r\n        } else {\r\n            head.append(row)\r\n        }\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this.groupElement().css(\"marginTop\", 0)\r\n    },\r\n    _renderVirtualContent: _common.noop\r\n});\r\nexports.FieldsArea = FieldsArea;\r\n"]},"metadata":{},"sourceType":"script"}