{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _defineProperty from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\newfrontend\\\\webfe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Routes from\"routes\";import i18n from\"i18next\";import{initReactI18next}from\"react-i18next\";import{getMultiLanguage}from\"redux/actions/multiLanguage\";import{connect}from\"react-redux\";import{bindActionCreators}from\"redux\";var MultiLanguageClass=/*#__PURE__*/function(_Component){_inherits(MultiLanguageClass,_Component);var _super=_createSuper(MultiLanguageClass);function MultiLanguageClass(){var _this;_classCallCheck(this,MultiLanguageClass);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isLanguageReady:false};_this.getData=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,resources;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.props.getMultiLanguage();case 2:res=_context.sent;console.log(res,\"translations\");resources={en:{translation:{}},zh_sg:{translation:{}}};resources.en.translation=res.language.ENGLISH.reduce(function(a,e){return _objectSpread(_objectSpread({},a),{},_defineProperty({},e.word,e.word));},{});resources.zh_sg.translation=res.language.CHINESE.reduce(function(a,e){return _objectSpread(_objectSpread({},a),{},_defineProperty({},res.language.ENGLISH.find(function(e2){return e2.wordCode==e.wordCode;}).word,e.word));},{});console.log(resources,\"lang obj\");localStorage.setItem(\"translations\",JSON.stringify(resources));_this.init();case 10:case\"end\":return _context.stop();}}},_callee);}));_this.init=function(){var _localStorage$getItem;i18n.use(initReactI18next)// passes i18n down to react-i18next\n.init({// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\nresources:JSON.parse(localStorage.getItem(\"translations\")),lng:(_localStorage$getItem=localStorage.getItem(\"lang\"))!==null&&_localStorage$getItem!==void 0?_localStorage$getItem:\"en\",// if you're using a language detector, do not define the lng option\nfallbackLng:\"en\"});_this.setState({isLanguageReady:true});};return _this;}_createClass(MultiLanguageClass,[{key:\"componentDidMount\",value:function componentDidMount(){if(localStorage.getItem(\"translations\")==null){this.getData();}else{this.getData();this.init();}}},{key:\"render\",value:function render(){var isLanguageReady=this.state.isLanguageReady;return isLanguageReady?/*#__PURE__*/React.createElement(Routes,null):/*#__PURE__*/React.createElement(\"div\",null);}}]);return MultiLanguageClass;}(Component);var mapStateToProps=function mapStateToProps(state){return{};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({getMultiLanguage:getMultiLanguage},dispatch);};export var MultiLanguage=connect(mapStateToProps,mapDispatchToProps)(MultiLanguageClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/multiLanguage.js"],"names":["React","Component","Routes","i18n","initReactI18next","getMultiLanguage","connect","bindActionCreators","MultiLanguageClass","state","isLanguageReady","getData","props","res","console","log","resources","en","translation","zh_sg","language","ENGLISH","reduce","a","e","word","CHINESE","find","e2","wordCode","localStorage","setItem","JSON","stringify","init","use","parse","getItem","lng","fallbackLng","setState","mapStateToProps","mapDispatchToProps","dispatch","MultiLanguage"],"mappings":"8nCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CACA,OAASC,gBAAT,KAAiC,6BAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,OAAnC,C,GAEMC,CAAAA,kB,2WACJC,K,CAAQ,CACNC,eAAe,CAAE,KADX,C,OAaRC,O,sEAAU,2KACQ,OAAKC,KAAL,CAAWP,gBAAX,EADR,QACJQ,GADI,eAERC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAiB,cAAjB,EACIG,SAHI,CAGQ,CAAEC,EAAE,CAAE,CAAEC,WAAW,CAAE,EAAf,CAAN,CAA2BC,KAAK,CAAE,CAAED,WAAW,CAAE,EAAf,CAAlC,CAHR,CAIRF,SAAS,CAACC,EAAV,CAAaC,WAAb,CAA2BL,GAAG,CAACO,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAC/D,sCAAYD,CAAZ,wBAAgBC,CAAC,CAACC,IAAlB,CAAyBD,CAAC,CAACC,IAA3B,GACD,CAF0B,CAExB,EAFwB,CAA3B,CAGAT,SAAS,CAACG,KAAV,CAAgBD,WAAhB,CAA8BL,GAAG,CAACO,QAAJ,CAAaM,OAAb,CAAqBJ,MAArB,CAA4B,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAClE,sCACKD,CADL,wBAEGV,GAAG,CAACO,QAAJ,CAAaC,OAAb,CAAqBM,IAArB,CAA0B,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACC,QAAH,EAAeL,CAAC,CAACK,QAAzB,EAA1B,EAA6DJ,IAFhE,CAGID,CAAC,CAACC,IAHN,GAKD,CAN6B,CAM3B,EAN2B,CAA9B,CAOAX,OAAO,CAACC,GAAR,CAAYC,SAAZ,CAAuB,UAAvB,EACAc,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAqCC,IAAI,CAACC,SAAL,CAAejB,SAAf,CAArC,EACA,MAAKkB,IAAL,GAhBQ,uD,SAmBVA,I,CAAO,UAAM,2BACX/B,IAAI,CACDgC,GADH,CACO/B,gBADP,CACyB;AADzB,CAEG8B,IAFH,CAEQ,CACJ;AACA;AACA;AACAlB,SAAS,CAAEgB,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,cAArB,CAAX,CAJP,CAKJC,GAAG,wBAAER,YAAY,CAACO,OAAb,CAAqB,MAArB,CAAF,+DAAkC,IALjC,CAKuC;AAC3CE,WAAW,CAAE,IANT,CAFR,EAUA,MAAKC,QAAL,CAAc,CAAE9B,eAAe,CAAE,IAAnB,CAAd,EACD,C,+EAxCD,4BAAoB,CAClB,GAAIoB,YAAY,CAACO,OAAb,CAAqB,cAArB,GAAwC,IAA5C,CAAkD,CAChD,KAAK1B,OAAL,GACD,CAFD,IAEO,CACL,KAAKA,OAAL,GACA,KAAKuB,IAAL,GACD,CACF,C,sBAmCD,iBAAS,CACP,GAAMxB,CAAAA,eAAN,CAA0B,KAAKD,KAA/B,CAAMC,eAAN,CACA,MAAOA,CAAAA,eAAe,cAAG,oBAAC,MAAD,MAAH,cAAgB,+BAAtC,CACD,C,gCAlD8BT,S,EAqDjC,GAAMwC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAChC,KAAD,QAAY,EAAZ,EAAxB,CAEA,GAAMiC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAOpC,CAAAA,kBAAkB,CACvB,CACEF,gBAAgB,CAAhBA,gBADF,CADuB,CAIvBsC,QAJuB,CAAzB,CAMD,CAPD,CASA,MAAO,IAAMC,CAAAA,aAAa,CAAGtC,OAAO,CAClCmC,eADkC,CAElCC,kBAFkC,CAAP,CAG3BlC,kBAH2B,CAAtB","sourcesContent":["import React, { Component } from \"react\";\nimport Routes from \"routes\";\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { getMultiLanguage } from \"redux/actions/multiLanguage\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nclass MultiLanguageClass extends Component {\n  state = {\n    isLanguageReady: false,\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"translations\") == null) {\n      this.getData();\n    } else {\n      this.getData();\n      this.init();\n    }\n  }\n\n  getData = async () => {\n    let res = await this.props.getMultiLanguage();\n    console.log(res, \"translations\");\n    let resources = { en: { translation: {} }, zh_sg: { translation: {} } };\n    resources.en.translation = res.language.ENGLISH.reduce((a, e) => {\n      return { ...a, [e.word]: e.word };\n    }, {});\n    resources.zh_sg.translation = res.language.CHINESE.reduce((a, e) => {\n      return {\n        ...a,\n        [res.language.ENGLISH.find((e2) => e2.wordCode == e.wordCode).word]:\n          e.word,\n      };\n    }, {});\n    console.log(resources, \"lang obj\");\n    localStorage.setItem(\"translations\", JSON.stringify(resources));\n    this.init();\n  };\n\n  init = () => {\n    i18n\n      .use(initReactI18next) // passes i18n down to react-i18next\n      .init({\n        // the translations\n        // (tip move them in a JSON file and import them,\n        // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n        resources: JSON.parse(localStorage.getItem(\"translations\")),\n        lng: localStorage.getItem(\"lang\") ?? \"en\", // if you're using a language detector, do not define the lng option\n        fallbackLng: \"en\",\n      });\n    this.setState({ isLanguageReady: true });\n  };\n\n  render() {\n    let { isLanguageReady } = this.state;\n    return isLanguageReady ? <Routes /> : <div></div>;\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getMultiLanguage,\n    },\n    dispatch\n  );\n};\n\nexport const MultiLanguage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MultiLanguageClass);\n"]},"metadata":{},"sourceType":"module"}