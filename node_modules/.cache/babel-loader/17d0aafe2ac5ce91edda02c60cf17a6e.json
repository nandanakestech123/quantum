{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\common\\\\Plugins\\\\NewScheduler.js\";\nimport React, { Component } from \"react\";\nimport \"./devExpressScheduler/Styles.scss\";\nimport Modal from \"assets/images/modal-avatar.png\";\nimport man from \"assets/images/man.png\";\nimport newUser from \"assets/images/user-image.png\";\nimport Scheduler, { Resource, View, AppointmentDragging } from \"devextreme-react/scheduler\";\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport ResourceCell from \"./devExpressScheduler/ResourceCell\";\nimport AppointmentCell from \"./devExpressScheduler/AppointmentCell\";\nimport { InputSearch } from \"../InputSearch\";\nimport _ from \"lodash\";\nimport { NormalButton, NormalSelect } from \"component/common\";\nimport { NormalInput, NormalModal } from \"component/common\";\nimport { StaffSorting } from \"../../Admin/NewAppointment/NewListAppointment/modal/StaffSorting\";\nimport { BlockPopup } from \"../../Admin/NewAppointment/NewListAppointment/modal/BlockPopup\";\nimport { PrintModal } from \"../../Admin/NewAppointment/NewListAppointment/modal/PrintModal\";\nimport { TreatmentHistory } from \"../../Admin/NewAppointment/NewListAppointment/modal/TreatmentHistory\";\nimport { UpcomingAppointment } from \"../../Admin/NewAppointment/NewListAppointment/modal/UpcomingAppointment\";\nimport { Toast } from \"service/toast\";\nimport html2canvas from \"html2canvas\";\nimport closeIcon from \"assets/images/close.png\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { getCommonApi, commonPatchApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nconst groups = [\"id\"];\nconst draggingGroupName = \"appointmentsGroup\";\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\nconst views = [{\n  type: \"day\",\n  name: \"day\",\n  groupOrientation: \"Horizontally\",\n  intervalCount: 1\n}, {\n  type: \"week\",\n  name: \"week\",\n  groupOrientation: \"vertical\",\n  intervalCount: 1,\n  maxAppointmentsPerCell: \"unlimited\"\n}, {\n  type: \"month\",\n  name: \"month\",\n  intervalCount: 1,\n  groupOrientation: \"Horizontally\",\n  maxAppointmentsPerCell: \"unlimited\"\n}];\nconst Dayview = [{\n  type: \"day\",\n  name: \"day\",\n  groupOrientation: \"Horizontally\",\n  intervalCount: 1\n}];\nexport class NewSchedulerModalClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedDate: new Date(),\n      selectedView: \"\",\n      DefaultDate: new Date(),\n      DefaultView: \"\",\n      searchtext: \"\",\n      SelectedList: [],\n      isOpenModal: false,\n      isOpenBlockModal: false,\n      appointmentId: 0,\n      SchedulerHeight: 700,\n      isOpenPrintModal: false,\n      formFields: [],\n      groupByList: [{\n        label: \"Group by Staff\",\n        value: \"staff\"\n      }, {\n        label: \"Group by Department\",\n        value: \"department\"\n      }, {\n        label: \"Group by Room\",\n        value: \"room\"\n      }],\n      groupBy: \"staff\",\n      isOpenModalForCustomer: false,\n      customerId: 0,\n      custName: \"\",\n      custPhone: \"\",\n      customerOption: [],\n      search: \"\",\n      customerNumber: 0,\n      isTreatmentHistoryModal: false,\n      isUpcomingAppointmentModal: false\n    };\n\n    this.onEmptyClick = e => {\n      e.cancel = true;\n      let date = new Date(e.cellData.startDate);\n\n      if (e.cellData.groups) {\n        this.props.onEmptyClick(date, e.cellData);\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Not available\"\n        });\n      }\n    };\n\n    this.onAppointmentClick = async e => {\n      e.cancel = true;\n      await this.setState({\n        appointmentId: 0\n      });\n      let date = new Date(e.appointmentData.startDate);\n\n      if (e.appointmentData.status === \"Block\") {\n        await this.setState({\n          appointmentId: e.appointmentData.appt_id\n        });\n        this.handleBlockDialog();\n      } else {\n        this.props.onEmptyClick(date, e.appointmentData);\n      }\n    };\n\n    this.handleViewChange = async e => {\n      await this.setState({\n        selectedView: e\n      });\n      this.handleChange();\n    };\n\n    this.handleDateChange = async e => {\n      await this.setState({\n        selectedDate: e\n      });\n      this.handleChange();\n    };\n\n    this.handleChange = () => {\n      let {\n        selectedDate,\n        selectedView,\n        DefaultDate,\n        DefaultView,\n        searchtext\n      } = this.state;\n      let newDate = new Date();\n      let newMode = \"\";\n      let prevMode = DefaultView;\n      let prevDate = DefaultDate;\n\n      if (selectedView) {\n        newMode = selectedView;\n      } else {\n        newMode = DefaultView;\n      }\n\n      if (selectedDate) {\n        newDate = selectedDate;\n      } else {\n        newDate = selectedDate;\n      }\n\n      this.props.handleChangeFilter(prevMode, prevDate, newMode, newDate, searchtext);\n    };\n\n    this.handleSearch = async event => {\n      event.persist();\n      await this.setState({\n        searchtext: event.target.value\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          this.handleChange();\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleDialog = () => {\n      let {\n        isOpenModal\n      } = this.state;\n      isOpenModal = !isOpenModal;\n      this.setState({\n        isOpenModal\n      });\n    };\n\n    this.handleBlockDialog = async () => {\n      await this.setState(prevState => ({\n        isOpenBlockModal: !prevState.isOpenBlockModal\n      }));\n      await this.setState({\n        appointmentId: 0\n      });\n    };\n\n    this.handlePrintDialog = () => {\n      let {\n        isOpenPrintModal\n      } = this.state;\n      isOpenPrintModal = !isOpenPrintModal;\n      this.setState({\n        isOpenPrintModal\n      });\n    };\n\n    this.handleBack = () => {\n      this.props.handleBack();\n    };\n\n    this.handleNext = () => {\n      this.props.handleNext();\n    };\n\n    this.Snap = async () => {\n      await this.setState({\n        SchedulerHeight: 3000\n      });\n      await sleep(1000); //\n\n      window.scrollTo(0, 0);\n      let img = \"\";\n      let base64URL = \"\";\n      html2canvas(document.querySelector(\"#Scheduler\"), {\n        allowTaint: true,\n        useCORS: true,\n        logging: false,\n        scale: 1,\n        removeContainer: true\n      }).then(function (canvas) {\n        img = canvas.toDataURL(\"image/png\", 1);\n        base64URL = img.replace(\"image/png\", \"image/octet-stream\");\n        var byteCharacters = atob(img.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\"));\n        var byteNumbers = new Array(byteCharacters.length);\n\n        for (var i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n\n        var byteArray = new Uint8Array(byteNumbers);\n        var file = new Blob([byteArray], {\n          type: \"image/png\" + \";base64\"\n        });\n        var fileURL = URL.createObjectURL(file);\n        var a = document.createElement(\"a\");\n        a.setAttribute(\"download\", \"myImage.png\");\n        a.setAttribute(\"href\", base64URL);\n        a.click();\n        window.open(fileURL);\n      });\n      window.scrollTo(0, document.documentElement.scrollHeight);\n      await this.setState({\n        SchedulerHeight: 700\n      });\n    };\n\n    this.handleTreatmentHistory = () => {\n      let {\n        customerId\n      } = this.state;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isTreatmentHistoryModal: !prevState.isTreatmentHistoryModal,\n          customerNumber: this.state.customerId\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.handleUpcomingAppointment = () => {\n      let {\n        customerId\n      } = this.state;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isUpcomingAppointmentModal: !prevState.isUpcomingAppointmentModal,\n          customerNumber: this.state.customerId\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.handleSelectCustomer = async data => {\n      await this.setState({\n        customerId: data.id,\n        custName: data.cust_name,\n        custPhone: data.cust_phone1,\n        isOpenModalForCustomer: false,\n        customerOption: []\n      });\n    };\n\n    this.handleCustomerDialog = () => {\n      let {\n        isOpenModalForCustomer\n      } = this.state;\n      isOpenModalForCustomer = !isOpenModalForCustomer;\n      this.setState({\n        isOpenModalForCustomer\n      });\n    };\n\n    this.handleCustomerSearch = async event => {\n      await this.setState({\n        search: event.target.value\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          let {\n            basicApptDetail\n          } = this.props;\n          this.search(basicApptDetail);\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = basicApptDetail => {\n      let {\n        search\n      } = this.state;\n      this.props.getCommonApi(`custappt/?Outlet=${\"\"}&search=${search}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          this.setState({\n            customerOption: data\n          });\n        }\n      });\n    };\n\n    this.getHoursFromDate = date => {\n      let hour = new Date(date).getHours();\n      let minute = new Date(date).getMinutes();\n      let hours = hour > 9 ? hour : \"0\" + hour;\n      let minutes = minute > 9 ? minute : \"0\" + minute;\n      return hours + \":\" + minutes;\n    };\n\n    this.onDragStart = e => {\n      if (e.itemData.status === \"Block\") {\n        e.cancel = true;\n      } else {\n        this.getDraggedData(e.itemData.appt_id);\n      }\n    };\n\n    this.onDragEnd = async e => {\n      await sleep(200); //\n\n      console.log(e.itemData, \"dragenddatawithsleep\");\n      let {\n        formFields\n      } = this.state;\n      let startTime = this.getHoursFromDate(e.itemData.startDate);\n      let endTime = this.getHoursFromDate(e.itemData.endDate);\n      let targetStaff = e.itemData.id;\n\n      if (formFields[\"start_time\"] !== startTime || formFields[\"emp_no\"] !== targetStaff) {\n        formFields[\"appointmentDate\"] = e.itemData.endDate;\n        formFields[\"start_time\"] = startTime;\n        formFields[\"end_time\"] = endTime;\n        formFields[\"emp_no\"] = targetStaff;\n        formFields[\"item_text\"] = e.itemData.item_name;\n        formFields[\"recur_days\"] = null;\n        formFields[\"recur_qty\"] = null;\n        await this.setState({\n          formFields\n        });\n        this.handleUpdate();\n      }\n    };\n\n    this.getDraggedData = appt_id => {\n      let {\n        formFields\n      } = this.state;\n      this.props.getCommonApi(`appointmentresources/${appt_id}/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        let appt_Date = data.appt_date;\n        let date = appt_Date.split(\"/\");\n        let finaldate = date[2] + \"-\" + date[1] + \"-\" + date[0];\n\n        if (status === 200) {\n          formFields[\"appt_id\"] = appt_id;\n          formFields[\"custName\"] = data.cust_name;\n          formFields[\"appointmentDate\"] = finaldate;\n          formFields[\"bookingStatus\"] = data.booking_status;\n          formFields[\"new_remark\"] = data.ori_remark;\n          formFields[\"customerName\"] = data.cust_id;\n          formFields[\"Source_Codeid\"] = data.source_id;\n          formFields[\"Room_Codeid\"] = data.room_id;\n          formFields[\"sec_status\"] = data.secondary_status;\n          formFields[\"Appt_typeid\"] = data.channel_id;\n          formFields[\"start_time\"] = data ? data.start_time : \"\";\n          formFields[\"end_time\"] = data ? data.end_time : \"\";\n          formFields[\"Item_Codeid\"] = data.Item_Codeid;\n          formFields[\"Item_CodeName\"] = data.item_name;\n          formFields[\"emp_no\"] = data.emp_id;\n          formFields[\"add_duration\"] = data.add_duration;\n          formFields[\"edit_remark\"] = \"\";\n          formFields[\"requesttherapist\"] = data.requesttherapist;\n          formFields[\"recur_days\"] = data.recur_days;\n          formFields[\"recur_qty\"] = data.recur_qty;\n          formFields[\"item_text\"] = data.item_name;\n          this.setState({\n            formFields\n          });\n        }\n      });\n    };\n\n    this.handleUpdate = () => {\n      let {\n        formFields\n      } = this.state;\n      let data = {\n        appt_date: dateFormat(new Date(formFields.appointmentDate), \"yyyy-mm-dd\"),\n        Room_Codeid: formFields.Room_Codeid,\n        appt_status: formFields.bookingStatus,\n        sec_status: formFields.sec_status,\n        edit_remark: formFields.edit_remark,\n        start_time: formFields.start_time,\n        end_time: formFields.end_time,\n        item_id: formFields.Item_Codeid,\n        add_duration: formFields.add_duration,\n        emp_id: formFields.emp_no,\n        requesttherapist: formFields.requesttherapist,\n        item_text: formFields.item_text,\n        recur_qty: formFields.recur_qty,\n        recur_days: formFields.recur_days\n      };\n      this.props.commonPatchApi(`appointmentresources/${formFields.appt_id}/`, data).then(async res => {});\n      this.props.getAppointmentWithStaff();\n    };\n\n    this.onAppSingleClick = e => {\n      e.cancel = true;\n    };\n\n    this.handleGroupbyChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      debugger;\n\n      if (value == \"\") {\n        value = \"staff\";\n      }\n\n      if (value !== this.state.groupBy) {\n        this.setState({\n          groupBy: value\n        });\n        this.props.groupByAppointment(value);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      DefaultDate: this.props.filterDate,\n      DefaultView: this.props.filterType\n    });\n  }\n\n  render() {\n    let {\n      isOpenModal,\n      isOpenBlockModal,\n      appointmentId,\n      SchedulerHeight,\n      isOpenPrintModal,\n      groupBy,\n      custName,\n      isOpenModalForCustomer,\n      customerOption,\n      search,\n      isTreatmentHistoryModal,\n      isUpcomingAppointmentModal\n    } = this.state;\n    let {\n      filterDate\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StaffSorting, {\n      isOpenModal: isOpenModal,\n      handleDialog: this.handleDialog,\n      handleChange: this.handleChange,\n      filterDate: filterDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }\n    }), isOpenBlockModal ? /*#__PURE__*/React.createElement(BlockPopup, {\n      isOpenBlockModal: isOpenBlockModal,\n      handleBlockDialog: this.handleBlockDialog,\n      handleChange: this.handleChange,\n      filterDate: filterDate,\n      appointmentId: appointmentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }\n    }) : \"\", isOpenPrintModal ? /*#__PURE__*/React.createElement(PrintModal, {\n      isOpenPrintModal: isOpenPrintModal,\n      handlePrintDialog: this.handlePrintDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 13\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end p-1 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }\n    }, this.props.meta ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 text-right p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 15\n      }\n    }, this.props.meta.pagination && this.props.meta.pagination.total_pages > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 21\n      }\n    }, this.props.meta.pagination.total_pages < this.props.meta.pagination.current_page || this.props.meta.pagination.current_page > 1 || this.props.meta.pagination.total_pages == this.props.meta.pagination.current_page ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"cursor-pointer dx-button-content disabled\",\n      onClick: this.handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"9\",\n      height: \"15\",\n      viewBox: \"0 0 6 10\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M5 0.5L1 5L5 9.5\",\n      stroke: \"#888888\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 29\n      }\n    }))) : \"\", this.props.meta.pagination.total_pages > this.props.meta.pagination.current_page && this.props.meta.pagination.total_pages !== this.props.meta.pagination.current_page && this.props.meta.pagination.current_page > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"cursor-pointer dx-button-content\",\n      onClick: this.handleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"9\",\n      height: \"15\",\n      viewBox: \"0 0 6 10\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M0.5 9.5L4.5 5L0.5 0.5\",\n      stroke: \"#888888\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 29\n      }\n    }))) : \"\")) : \"\") : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Select customer\",\n      value: custName,\n      onClick: () => this.setState({\n        isOpenModalForCustomer: true\n      }),\n      name: \"searchtext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: this.state.groupByList,\n      placeholderrequired: `false`,\n      value: this.state.groupBy,\n      name: \"groupBy\",\n      onChange: this.handleGroupbyChange,\n      className: \"status py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 m-0 p-0\",\n      label: \"Upcoming Appointment\",\n      onClick: this.handleUpcomingAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Treatment History\",\n      onClick: this.handleTreatmentHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-.5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0\",\n      mainbg: true,\n      className: \" fs-15 confirm\",\n      label: `Screenshot`,\n      outline: false,\n      onClick: this.Snap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0\",\n      mainbg: true,\n      className: \" fs-15 confirm\",\n      label: `Print`,\n      outline: false,\n      onClick: () => {\n        this.setState({\n          isOpenPrintModal: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0\",\n      mainbg: true,\n      className: \" fs-15 confirm\",\n      label: `Sort`,\n      outline: false,\n      onClick: () => {\n        this.setState({\n          isOpenModal: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"p-0\",\n      mainbg: true,\n      className: \"fs-15 confirm\",\n      label: `Block`,\n      outline: false,\n      onClick: () => {\n        this.setState({\n          isOpenBlockModal: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 15\n      }\n    }))), isTreatmentHistoryModal ? /*#__PURE__*/React.createElement(TreatmentHistory, {\n      isTreatmentHistoryModal: isTreatmentHistoryModal,\n      handleTreatmentHistory: this.handleTreatmentHistory,\n      customerNumber: this.state.customerNumber,\n      custName: this.state.custName,\n      custPhone: this.state.custPhone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 11\n      }\n    }) : \"\", isUpcomingAppointmentModal ? /*#__PURE__*/React.createElement(UpcomingAppointment, {\n      isUpcomingAppointmentModal: isUpcomingAppointmentModal,\n      handleUpcomingAppointment: this.handleUpcomingAppointment,\n      customerNumber: this.state.customerNumber,\n      custName: this.state.custName,\n      custPhone: this.state.custPhone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"800px\"\n      },\n      modal: isOpenModalForCustomer,\n      handleModal: this.handleCustomerDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleCustomerDialog,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 13\n      }\n    }, \"Select Customer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-2 mb-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 pl-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 13\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"search\",\n      onChange: this.handleCustomerSearch,\n      className: \"search m-0 p-0 px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2 p-0\",\n      mainbg: true,\n      className: \" fs-15 confirm\",\n      label: \"Search\",\n      outline: false,\n      onClick: () => this.search(search),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 table-header w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 15\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 15\n      }\n    }, \"Cust Code\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 15\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"response-table w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 13\n      }\n    }, customerOption.length > 0 ? customerOption.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row m-0 table-body w-100\",\n        onClick: () => this.handleSelectCustomer(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 23\n        }\n      }, item.cust_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 23\n        }\n      }, item.cust_phone1), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 23\n        }\n      }, item.cust_code), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 23\n        }\n      }, item.cust_email));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 17\n      }\n    }, \"No Data are available\")))), /*#__PURE__*/React.createElement(Scheduler, {\n      id: \"Scheduler\",\n      height: SchedulerHeight,\n      width: 1500,\n      dataSource: this.props.event,\n      views: this.props.staffList ? views : Dayview,\n      onContentReady: this.props.event ? this.onContentReady : \"\",\n      defaultCurrentView: \"day\",\n      groups: groups,\n      startDayHour: 8,\n      endDayHour: 21,\n      firstDayOfWeek: 0,\n      showAllDayPanel: false,\n      crossScrollingEnabled: true,\n      cellDuration: 15,\n      resourceCellComponent: ResourceCell,\n      editing: {\n        allowDeleting: false,\n        allowResizing: false,\n        allowUpdating: true,\n        allowDragging: true,\n        allowTaint: true\n      },\n      onAppointmentClick: this.onAppSingleClick,\n      onCellClick: e => this.onEmptyClick(e),\n      onAppointmentDblClick: e => this.onAppointmentClick(e) //dateSerializationFormat=\"yyyy-MM-ddTHH:mm:ssZ\"\n      ,\n      appointmentComponent: AppointmentCell,\n      onCurrentViewChange: this.handleViewChange,\n      onCurrentDateChange: this.handleDateChange,\n      appointmentDragging: {\n        autoScroll: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AppointmentDragging, {\n      group: draggingGroupName,\n      onDragStart: e => this.onDragStart(e),\n      onDragEnd: e => this.onDragEnd(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      type: \"day\",\n      label: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      type: \"week\",\n      label: \"week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      type: \"month\",\n      label: \"month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Resource, {\n      dataSource: this.props.staffList,\n      fieldExpr: \"id\",\n      useColorAsDefault: true,\n      allowMultiple: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const NewSchedulerModal = connect(null, mapDispatchToProps)(NewSchedulerModalClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/common/Plugins/NewScheduler.js"],"names":["React","Component","Modal","man","newUser","Scheduler","Resource","View","AppointmentDragging","ResourceCell","AppointmentCell","InputSearch","_","NormalButton","NormalSelect","NormalInput","NormalModal","StaffSorting","BlockPopup","PrintModal","TreatmentHistory","UpcomingAppointment","Toast","html2canvas","closeIcon","dateFormat","getCommonApi","commonPatchApi","connect","bindActionCreators","groups","draggingGroupName","sleep","milliseconds","Promise","resolve","setTimeout","views","type","name","groupOrientation","intervalCount","maxAppointmentsPerCell","Dayview","NewSchedulerModalClass","state","selectedDate","Date","selectedView","DefaultDate","DefaultView","searchtext","SelectedList","isOpenModal","isOpenBlockModal","appointmentId","SchedulerHeight","isOpenPrintModal","formFields","groupByList","label","value","groupBy","isOpenModalForCustomer","customerId","custName","custPhone","customerOption","search","customerNumber","isTreatmentHistoryModal","isUpcomingAppointmentModal","onEmptyClick","e","cancel","date","cellData","startDate","props","message","onAppointmentClick","setState","appointmentData","status","appt_id","handleBlockDialog","handleViewChange","handleChange","handleDateChange","newDate","newMode","prevMode","prevDate","handleChangeFilter","handleSearch","event","persist","target","debouncedFn","debounce","handleDialog","prevState","handlePrintDialog","handleBack","handleNext","Snap","window","scrollTo","img","base64URL","document","querySelector","allowTaint","useCORS","logging","scale","removeContainer","then","canvas","toDataURL","replace","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","file","Blob","fileURL","URL","createObjectURL","a","createElement","setAttribute","click","open","documentElement","scrollHeight","handleTreatmentHistory","handleUpcomingAppointment","handleSelectCustomer","data","id","cust_name","cust_phone1","handleCustomerDialog","handleCustomerSearch","basicApptDetail","key","getHoursFromDate","hour","getHours","minute","getMinutes","hours","minutes","onDragStart","itemData","getDraggedData","onDragEnd","console","log","startTime","endTime","endDate","targetStaff","item_name","handleUpdate","appt_Date","appt_date","split","finaldate","booking_status","ori_remark","cust_id","source_id","room_id","secondary_status","channel_id","start_time","end_time","Item_Codeid","emp_id","add_duration","requesttherapist","recur_days","recur_qty","appointmentDate","Room_Codeid","appt_status","bookingStatus","sec_status","edit_remark","item_id","emp_no","item_text","res","getAppointmentWithStaff","onAppSingleClick","handleGroupbyChange","groupByAppointment","componentWillMount","filterDate","filterType","render","width","height","meta","pagination","total_pages","current_page","minWidth","map","item","index","cust_code","cust_email","staffList","onContentReady","allowDeleting","allowResizing","allowUpdating","allowDragging","autoScroll","mapDispatchToProps","dispatch","NewSchedulerModal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./devExpressScheduler/Styles.scss\";\r\nimport Modal from \"assets/images/modal-avatar.png\";\r\nimport man from \"assets/images/man.png\";\r\nimport newUser from \"assets/images/user-image.png\";\r\nimport Scheduler, {\r\n  Resource,\r\n  View,\r\n  AppointmentDragging,\r\n} from \"devextreme-react/scheduler\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport ResourceCell from \"./devExpressScheduler/ResourceCell\";\r\nimport AppointmentCell from \"./devExpressScheduler/AppointmentCell\";\r\nimport { InputSearch } from \"../InputSearch\";\r\nimport _ from \"lodash\";\r\nimport { NormalButton, NormalSelect } from \"component/common\";\r\nimport { NormalInput,NormalModal } from \"component/common\";\r\nimport { StaffSorting } from \"../../Admin/NewAppointment/NewListAppointment/modal/StaffSorting\";\r\nimport { BlockPopup } from \"../../Admin/NewAppointment/NewListAppointment/modal/BlockPopup\";\r\nimport { PrintModal } from \"../../Admin/NewAppointment/NewListAppointment/modal/PrintModal\";\r\nimport { TreatmentHistory } from \"../../Admin/NewAppointment/NewListAppointment/modal/TreatmentHistory\";\r\nimport { UpcomingAppointment } from \"../../Admin/NewAppointment/NewListAppointment/modal/UpcomingAppointment\";\r\nimport { Toast } from \"service/toast\";\r\nimport html2canvas from \"html2canvas\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { getCommonApi, commonPatchApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst groups = [\"id\"];\r\nconst draggingGroupName = \"appointmentsGroup\";\r\nconst sleep = milliseconds => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n};\r\nconst views = [\r\n  {\r\n    type: \"day\",\r\n    name: \"day\",\r\n    groupOrientation: \"Horizontally\",\r\n    intervalCount: 1,\r\n  },\r\n  {\r\n    type: \"week\",\r\n    name: \"week\",\r\n    groupOrientation: \"vertical\",\r\n    intervalCount: 1,\r\n    maxAppointmentsPerCell: \"unlimited\",\r\n  },\r\n  {\r\n    type: \"month\",\r\n    name: \"month\",\r\n    intervalCount: 1,\r\n    groupOrientation: \"Horizontally\",\r\n    maxAppointmentsPerCell: \"unlimited\",\r\n  },\r\n];\r\nconst Dayview = [\r\n  {\r\n    type: \"day\",\r\n    name: \"day\",\r\n    groupOrientation: \"Horizontally\",\r\n    intervalCount: 1,\r\n  },\r\n];\r\n\r\nexport class NewSchedulerModalClass extends React.Component {\r\n  state = {\r\n    selectedDate: new Date(),\r\n    selectedView: \"\",\r\n    DefaultDate: new Date(),\r\n    DefaultView: \"\",\r\n    searchtext: \"\",\r\n    SelectedList: [],\r\n    isOpenModal: false,\r\n    isOpenBlockModal: false,\r\n    appointmentId: 0,\r\n    SchedulerHeight: 700,\r\n    isOpenPrintModal: false,\r\n    formFields: [],\r\n    groupByList: [\r\n      { label: \"Group by Staff\", value: \"staff\" },\r\n      { label: \"Group by Department\", value: \"department\" },\r\n      { label: \"Group by Room\", value: \"room\" },\r\n    ],\r\n    groupBy: \"staff\",\r\n    isOpenModalForCustomer: false,\r\n\r\n    customerId: 0,\r\n    custName: \"\",\r\n    custPhone: \"\",\r\n    customerOption: [],\r\n    search: \"\",\r\n    customerNumber: 0,\r\n\r\n    isTreatmentHistoryModal: false,\r\n    isUpcomingAppointmentModal: false,\r\n  };\r\n\r\n  onEmptyClick = e => {\r\n    e.cancel = true;\r\n    let date = new Date(e.cellData.startDate);\r\n    if (e.cellData.groups) {\r\n      this.props.onEmptyClick(date, e.cellData);\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Not available\" });\r\n    }\r\n  };\r\n  onAppointmentClick = async e => {\r\n    e.cancel = true;\r\n    await this.setState({ appointmentId: 0 });\r\n    let date = new Date(e.appointmentData.startDate);\r\n    if (e.appointmentData.status === \"Block\") {\r\n      await this.setState({ appointmentId: e.appointmentData.appt_id });\r\n      this.handleBlockDialog();\r\n    } else {\r\n      this.props.onEmptyClick(date, e.appointmentData);\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      DefaultDate: this.props.filterDate,\r\n      DefaultView: this.props.filterType,\r\n    });\r\n  }\r\n\r\n  handleViewChange = async e => {\r\n    await this.setState({\r\n      selectedView: e,\r\n    });\r\n    this.handleChange();\r\n  };\r\n\r\n  handleDateChange = async e => {\r\n    await this.setState({\r\n      selectedDate: e,\r\n    });\r\n    this.handleChange();\r\n  };\r\n\r\n  handleChange = () => {\r\n    let {\r\n      selectedDate,\r\n      selectedView,\r\n      DefaultDate,\r\n      DefaultView,\r\n      searchtext,\r\n    } = this.state;\r\n    let newDate = new Date();\r\n    let newMode = \"\";\r\n    let prevMode = DefaultView;\r\n    let prevDate = DefaultDate;\r\n    if (selectedView) {\r\n      newMode = selectedView;\r\n    } else {\r\n      newMode = DefaultView;\r\n    }\r\n    if (selectedDate) {\r\n      newDate = selectedDate;\r\n    } else {\r\n      newDate = selectedDate;\r\n    }\r\n    this.props.handleChangeFilter(\r\n      prevMode,\r\n      prevDate,\r\n      newMode,\r\n      newDate,\r\n      searchtext\r\n    );\r\n  };\r\n\r\n  // onContentReady(e) {\r\n  //   const currentHour = new Date().getHours() - 1;\r\n  //   e.component.scrollToTime(currentHour, 30, new Date());\r\n  // }\r\n\r\n  handleSearch = async event => {\r\n    event.persist();\r\n    await this.setState({ searchtext: event.target.value });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(() => {\r\n        this.handleChange();\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  handleDialog = () => {\r\n    let { isOpenModal } = this.state;\r\n    isOpenModal = !isOpenModal;\r\n    this.setState({\r\n      isOpenModal,\r\n    });\r\n  };\r\n  handleBlockDialog = async () => {\r\n    await this.setState(prevState => ({\r\n      isOpenBlockModal: !prevState.isOpenBlockModal,\r\n    }));\r\n    await this.setState({ appointmentId: 0 });\r\n  };\r\n  handlePrintDialog = () => {\r\n    let { isOpenPrintModal } = this.state;\r\n    isOpenPrintModal = !isOpenPrintModal;\r\n    this.setState({\r\n      isOpenPrintModal,\r\n    });\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.handleBack();\r\n  };\r\n  handleNext = () => {\r\n    this.props.handleNext();\r\n  };\r\n  Snap = async () => {\r\n    await this.setState({ SchedulerHeight: 3000 });\r\n    await sleep(1000); //\r\n    window.scrollTo(0, 0);\r\n    let img = \"\";\r\n    let base64URL = \"\";\r\n\r\n    html2canvas(document.querySelector(\"#Scheduler\"), {\r\n      allowTaint: true,\r\n      useCORS: true,\r\n      logging: false,\r\n      scale: 1,\r\n      removeContainer: true,\r\n    }).then(function (canvas) {\r\n      img = canvas.toDataURL(\"image/png\", 1);\r\n      base64URL = img.replace(\"image/png\", \"image/octet-stream\");\r\n      var byteCharacters = atob(\r\n        img.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\")\r\n      );\r\n      var byteNumbers = new Array(byteCharacters.length);\r\n      for (var i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      var byteArray = new Uint8Array(byteNumbers);\r\n      var file = new Blob([byteArray], { type: \"image/png\" + \";base64\" });\r\n      var fileURL = URL.createObjectURL(file);\r\n      var a = document.createElement(\"a\");\r\n      a.setAttribute(\"download\", \"myImage.png\");\r\n      a.setAttribute(\"href\", base64URL);\r\n      a.click();\r\n      window.open(fileURL);\r\n    });\r\n    window.scrollTo(0, document.documentElement.scrollHeight);\r\n    await this.setState({ SchedulerHeight: 700 });\r\n  };\r\n  handleTreatmentHistory = () => {\r\n    let { customerId } = this.state;\r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isTreatmentHistoryModal: !prevState.isTreatmentHistoryModal,\r\n        customerNumber: this.state.customerId,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n  handleUpcomingAppointment = () => {\r\n    let { customerId } = this.state;\r\n    \r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isUpcomingAppointmentModal: !prevState.isUpcomingAppointmentModal,\r\n        customerNumber: this.state.customerId,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n  handleSelectCustomer = async data => {\r\n    await this.setState({\r\n      customerId: data.id,\r\n      custName: data.cust_name,\r\n      custPhone: data.cust_phone1,\r\n      isOpenModalForCustomer: false,\r\n      customerOption: [],\r\n    });\r\n  };\r\n  handleCustomerDialog = () => {\r\n    let { isOpenModalForCustomer } = this.state;\r\n    isOpenModalForCustomer = !isOpenModalForCustomer;\r\n    this.setState({\r\n      isOpenModalForCustomer,\r\n    });\r\n  };\r\n  handleCustomerSearch = async event => {\r\n    await this.setState({ search: event.target.value });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {\r\n        let { basicApptDetail } = this.props;\r\n        this.search(basicApptDetail);\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n  search = basicApptDetail => {\r\n    let { search } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `custappt/?Outlet=${\r\n         \"\"\r\n        }&search=${search}`\r\n      ) \r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          this.setState({ customerOption: data });\r\n        }\r\n      });\r\n  };\r\n\r\n  getHoursFromDate = date => {\r\n    let hour = new Date(date).getHours();\r\n    let minute = new Date(date).getMinutes();\r\n    let hours = hour > 9 ? hour : \"0\" + hour;\r\n    let minutes = minute > 9 ? minute : \"0\" + minute;\r\n    return hours + \":\" + minutes;\r\n  };\r\n  onDragStart = e => {\r\n    if (e.itemData.status === \"Block\") {\r\n      e.cancel = true;\r\n    } else {\r\n      this.getDraggedData(e.itemData.appt_id);\r\n    }\r\n  };\r\n  onDragEnd = async e => {\r\n    await sleep(200); //\r\n    console.log(e.itemData, \"dragenddatawithsleep\");\r\n    let { formFields } = this.state;\r\n    let startTime = this.getHoursFromDate(e.itemData.startDate);\r\n    let endTime = this.getHoursFromDate(e.itemData.endDate);\r\n    let targetStaff = e.itemData.id;\r\n    if (\r\n      formFields[\"start_time\"] !== startTime ||\r\n      formFields[\"emp_no\"] !== targetStaff\r\n    ) {\r\n      formFields[\"appointmentDate\"] = e.itemData.endDate;\r\n      formFields[\"start_time\"] = startTime;\r\n      formFields[\"end_time\"] = endTime;\r\n      formFields[\"emp_no\"] = targetStaff;\r\n      formFields[\"item_text\"] = e.itemData.item_name;\r\n      formFields[\"recur_days\"] = null;\r\n      formFields[\"recur_qty\"] = null;\r\n      await this.setState({ formFields });\r\n      this.handleUpdate();\r\n    }\r\n  };\r\n\r\n  getDraggedData = appt_id => {\r\n    let { formFields } = this.state;\r\n\r\n    this.props.getCommonApi(`appointmentresources/${appt_id}/`).then(key => {\r\n      let { status, data } = key;\r\n      let appt_Date = data.appt_date;\r\n      let date = appt_Date.split(\"/\");\r\n      let finaldate = date[2] + \"-\" + date[1] + \"-\" + date[0];\r\n      if (status === 200) {\r\n        formFields[\"appt_id\"] = appt_id;\r\n        formFields[\"custName\"] = data.cust_name;\r\n        formFields[\"appointmentDate\"] = finaldate;\r\n        formFields[\"bookingStatus\"] = data.booking_status;\r\n        formFields[\"new_remark\"] = data.ori_remark;\r\n        formFields[\"customerName\"] = data.cust_id;\r\n        formFields[\"Source_Codeid\"] = data.source_id;\r\n        formFields[\"Room_Codeid\"] = data.room_id;\r\n        formFields[\"sec_status\"] = data.secondary_status;\r\n        formFields[\"Appt_typeid\"] = data.channel_id;\r\n\r\n        formFields[\"start_time\"] = data ? data.start_time : \"\";\r\n        formFields[\"end_time\"] = data ? data.end_time : \"\";\r\n        formFields[\"Item_Codeid\"] = data.Item_Codeid;\r\n        formFields[\"Item_CodeName\"] = data.item_name;\r\n        formFields[\"emp_no\"] = data.emp_id;\r\n        formFields[\"add_duration\"] = data.add_duration;\r\n        formFields[\"edit_remark\"] = \"\";\r\n        formFields[\"requesttherapist\"] = data.requesttherapist;\r\n        formFields[\"recur_days\"] = data.recur_days;\r\n        formFields[\"recur_qty\"] = data.recur_qty;\r\n        formFields[\"item_text\"] = data.item_name;\r\n        this.setState({ formFields });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleUpdate = () => {\r\n    let { formFields } = this.state;\r\n\r\n    let data = {\r\n      appt_date: dateFormat(new Date(formFields.appointmentDate), \"yyyy-mm-dd\"),\r\n      Room_Codeid: formFields.Room_Codeid,\r\n      appt_status: formFields.bookingStatus,\r\n      sec_status: formFields.sec_status,\r\n      edit_remark: formFields.edit_remark,\r\n      start_time: formFields.start_time,\r\n      end_time: formFields.end_time,\r\n      item_id: formFields.Item_Codeid,\r\n      add_duration: formFields.add_duration,\r\n      emp_id: formFields.emp_no,\r\n      requesttherapist: formFields.requesttherapist,\r\n      item_text: formFields.item_text,\r\n      recur_qty: formFields.recur_qty,\r\n      recur_days: formFields.recur_days,\r\n    };\r\n\r\n    this.props\r\n      .commonPatchApi(`appointmentresources/${formFields.appt_id}/`, data)\r\n      .then(async res => {});\r\n    this.props.getAppointmentWithStaff();\r\n  };\r\n\r\n  onAppSingleClick = e => {\r\n    e.cancel = true;\r\n  };\r\n\r\n  handleGroupbyChange = async ({ target: { value, name } }) => {\r\n    debugger;\r\n    if (value == \"\") {\r\n      value = \"staff\";\r\n    }\r\n    if (value !== this.state.groupBy) {\r\n      this.setState({\r\n        groupBy: value,\r\n      });\r\n      this.props.groupByAppointment(value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      isOpenModal,\r\n      isOpenBlockModal,\r\n      appointmentId,\r\n      SchedulerHeight,\r\n      isOpenPrintModal,\r\n      groupBy,\r\n      custName,\r\n      isOpenModalForCustomer,\r\n      customerOption,\r\n      search,\r\n      isTreatmentHistoryModal,\r\n      isUpcomingAppointmentModal,\r\n    } = this.state;\r\n    let { filterDate } = this.props;\r\n\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        <React.Fragment>\r\n          <StaffSorting\r\n            isOpenModal={isOpenModal}\r\n            handleDialog={this.handleDialog}\r\n            handleChange={this.handleChange}\r\n            filterDate={filterDate}\r\n          />\r\n          {isOpenBlockModal ? (\r\n            <BlockPopup\r\n              isOpenBlockModal={isOpenBlockModal}\r\n              handleBlockDialog={this.handleBlockDialog}\r\n              handleChange={this.handleChange}\r\n              filterDate={filterDate}\r\n              appointmentId={appointmentId}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {isOpenPrintModal ? (\r\n            <PrintModal\r\n              isOpenPrintModal={isOpenPrintModal}\r\n              handlePrintDialog={this.handlePrintDialog}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className=\"d-flex justify-content-end p-1 m-1\">\r\n            {this.props.meta ? (\r\n              <div className=\"col-2 text-right p-1\">\r\n                {this.props.meta.pagination &&\r\n                this.props.meta.pagination.total_pages > 1 ? (\r\n                  <div className=\"col-12\">\r\n                    <div>\r\n                      {this.props.meta.pagination.total_pages <\r\n                        this.props.meta.pagination.current_page ||\r\n                      this.props.meta.pagination.current_page > 1 ||\r\n                      this.props.meta.pagination.total_pages ==\r\n                        this.props.meta.pagination.current_page ? (\r\n                        <button\r\n                          className=\"cursor-pointer dx-button-content disabled\"\r\n                          onClick={this.handleBack}\r\n                        >\r\n                          <svg\r\n                            width=\"9\"\r\n                            height=\"15\"\r\n                            viewBox=\"0 0 6 10\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M5 0.5L1 5L5 9.5\"\r\n                              stroke=\"#888888\"\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                            />\r\n                          </svg>\r\n                        </button>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {/* <span className=\"dx-button-staff-content\"> Staff </span> */}\r\n                      {this.props.meta.pagination.total_pages >\r\n                        this.props.meta.pagination.current_page &&\r\n                      this.props.meta.pagination.total_pages !==\r\n                        this.props.meta.pagination.current_page &&\r\n                      this.props.meta.pagination.current_page > 0 ? (\r\n                        <button\r\n                          className=\"cursor-pointer dx-button-content\"\r\n                          onClick={this.handleNext}\r\n                        >\r\n                          <svg\r\n                            width=\"9\"\r\n                            height=\"15\"\r\n                            viewBox=\"0 0 6 10\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M0.5 9.5L4.5 5L0.5 0.5\"\r\n                              stroke=\"#888888\"\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                            />\r\n                          </svg>\r\n                        </button>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"col-2 w-100\">\r\n              \r\n              {/* <NormalButton\r\n                buttonClass={\"p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm\"\r\n                label={`Group by Department`}\r\n                outline={false}\r\n                onClick={() => this.handleGroupbyclick(`category`)}\r\n              /> */}\r\n            </div>\r\n            {/* <div className=\"col-2\">\r\n              <NormalButton\r\n                buttonClass={\"p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm\"\r\n                label={`Group by Room`}\r\n                outline={false}\r\n                onClick={() => this.handleGroupbyclick(`room`)}\r\n              />\r\n            </div> */}\r\n            <div className=\"col-2\">\r\n  \r\n                <NormalInput\r\n                  placeholder=\"Select customer\"\r\n                  value={custName}\r\n                  onClick={() => this.setState({ isOpenModalForCustomer: true })}\r\n                  name=\"searchtext\"\r\n                />\r\n\r\n            </div>\r\n            <div className=\"col-2\">\r\n            <NormalSelect\r\n                options={this.state.groupByList}\r\n                placeholderrequired={`false`}\r\n                value={this.state.groupBy}\r\n                name=\"groupBy\"\r\n                onChange={this.handleGroupbyChange}\r\n                className=\"status py-1\"\r\n              />\r\n               </div>\r\n            <div className=\"col-2\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 m-0 p-0\"\r\n                label=\"Upcoming Appointment\"\r\n                onClick={this.handleUpcomingAppointment}\r\n              />\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Treatment History\"\r\n                onClick={this.handleTreatmentHistory}\r\n              />\r\n            </div>\r\n      \r\n            <div className=\"col-.5\">\r\n              <NormalButton\r\n                buttonClass={\"p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm\"\r\n                label={`Screenshot`}\r\n                outline={false}\r\n                onClick={this.Snap}\r\n              />\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <NormalButton\r\n                buttonClass={\"p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm\"\r\n                label={`Print`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenPrintModal: true });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <NormalButton\r\n                buttonClass={\"p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm\"\r\n                label={`Sort`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenModal: true });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <NormalButton\r\n                buttonClass={\"p-0\"}\r\n                mainbg={true}\r\n                className=\"fs-15 confirm\"\r\n                label={`Block`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenBlockModal: true });\r\n                }}\r\n              />\r\n            </div>\r\n            \r\n          </div>\r\n          {isTreatmentHistoryModal ? (\r\n          <TreatmentHistory\r\n            isTreatmentHistoryModal={isTreatmentHistoryModal}\r\n            handleTreatmentHistory={this.handleTreatmentHistory}\r\n            customerNumber={this.state.customerNumber}\r\n            custName={this.state.custName}\r\n            custPhone={this.state.custPhone}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {isUpcomingAppointmentModal ? (\r\n          <UpcomingAppointment\r\n            isUpcomingAppointmentModal={isUpcomingAppointmentModal}\r\n            handleUpcomingAppointment={this.handleUpcomingAppointment}\r\n            customerNumber={this.state.customerNumber}\r\n            custName={this.state.custName}\r\n            custPhone={this.state.custPhone}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n          <NormalModal\r\n          className={\"multiple-appointment select-category\"}\r\n          style={{ minWidth: \"800px\" }}\r\n          modal={isOpenModalForCustomer}\r\n          handleModal={this.handleCustomerDialog}\r\n        >\r\n          <img\r\n            onClick={this.handleCustomerDialog}\r\n            className=\"close\"\r\n            src={closeIcon}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"row\">\r\n            {\" \"}\r\n            <h5 className=\"text-center\">Select Customer</h5>\r\n          </div>\r\n          <div className=\"row mt-2 mb-5 mx-3\">\r\n            <div className=\"col-1 pl-0\">Search</div>\r\n            <div className=\"col-5\">\r\n              <input\r\n                name=\"search\"\r\n                onChange={this.handleCustomerSearch}\r\n                className=\"search m-0 p-0 px-3\"\r\n              />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <NormalButton\r\n                buttonClass={\"mx-2 p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm\"\r\n                label=\"Search\"\r\n                outline={false}\r\n                onClick={() => this.search(search)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"row mt-4 table-header w-100 m-0\">\r\n              <div className=\"col-2\">Name</div>\r\n              <div className=\"col-2\">Phone</div>\r\n              <div className=\"col-3\">Cust Code</div>\r\n              <div className=\"col-5\">Email</div>\r\n            </div>\r\n            <div className=\"response-table w-100\">\r\n              {customerOption.length > 0 ? (\r\n                customerOption.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className=\"row m-0 table-body w-100\"\r\n                      onClick={() => this.handleSelectCustomer(item)}\r\n                      key={index}\r\n                    >\r\n                      <div className=\"col-2\">{item.cust_name}</div>\r\n                      <div className=\"col-2\">{item.cust_phone1}</div>\r\n                      <div className=\"col-3\">{item.cust_code}</div>\r\n                      <div className=\"col-5\">{item.cust_email}</div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"text-center w-100\">No Data are available</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </NormalModal>\r\n\r\n          <Scheduler\r\n            id=\"Scheduler\"\r\n            height={SchedulerHeight}\r\n            width={1500}\r\n            dataSource={this.props.event}\r\n            views={this.props.staffList ? views : Dayview}\r\n            onContentReady={this.props.event ? this.onContentReady : \"\"}\r\n            defaultCurrentView=\"day\"\r\n            groups={groups}\r\n            startDayHour={8}\r\n            endDayHour={21}\r\n            firstDayOfWeek={0}\r\n            showAllDayPanel={false}\r\n            crossScrollingEnabled={true}\r\n            cellDuration={15}\r\n            resourceCellComponent={ResourceCell}\r\n            editing={{\r\n              allowDeleting: false,\r\n              allowResizing: false,\r\n              allowUpdating: true,\r\n              allowDragging: true,\r\n              allowTaint: true,\r\n            }}\r\n            onAppointmentClick={this.onAppSingleClick}\r\n            onCellClick={e => this.onEmptyClick(e)}\r\n            onAppointmentDblClick={e => this.onAppointmentClick(e)}\r\n            //dateSerializationFormat=\"yyyy-MM-ddTHH:mm:ssZ\"\r\n            appointmentComponent={AppointmentCell}\r\n            onCurrentViewChange={this.handleViewChange}\r\n            onCurrentDateChange={this.handleDateChange}\r\n            appointmentDragging={{\r\n              autoScroll: true,\r\n            }}\r\n          >\r\n            <AppointmentDragging\r\n              group={draggingGroupName}\r\n              onDragStart={e => this.onDragStart(e)}\r\n              onDragEnd={e => this.onDragEnd(e)}\r\n            />\r\n            <View type=\"day\" label=\"day\" />\r\n            <View type=\"week\" label=\"week\" />\r\n            <View type=\"month\" label=\"month\" />\r\n            <Resource\r\n              dataSource={this.props.staffList}\r\n              fieldExpr=\"id\"\r\n              useColorAsDefault={true}\r\n              allowMultiple={false}\r\n            />\r\n          </Scheduler>\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const NewSchedulerModal = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(NewSchedulerModalClass);\r\n"]},"metadata":{},"sourceType":"module"}