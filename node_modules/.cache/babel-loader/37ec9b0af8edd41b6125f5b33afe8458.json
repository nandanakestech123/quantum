{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\pages\\\\Auth\\\\ForgotPassword.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalButton } from \"component/common\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { forgotPassword, verifyOtp } from \"../../redux/actions/auth\";\nimport \"assets/scss/pages/login.scss\";\nimport { history } from \"helpers\";\nexport class ForgotPasswordClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      recoverAccount: {\n        emp_name: \"\"\n      },\n      toggleView: {\n        recoverView: 1,\n        verificationView: 0\n      },\n      viewOtp: false\n    };\n\n    this.handleRecoveryInput = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let recoverAccount = Object.assign({}, this.state.recoverAccount);\n      recoverAccount[name] = value;\n      this.setState({\n        recoverAccount\n      });\n    };\n\n    this.handleEmailRecovery = event => {\n      event.preventDefault();\n      let {\n        emp_name,\n        otp\n      } = this.state.recoverAccount;\n\n      if (this.validator.allValid()) {\n        let recoverAccount = Object.assign({}, this.state.recoverAccount);\n\n        if (this.state.viewOtp) {\n          this.props.verifyOtp(`?emp_name=${emp_name}`, {\n            otp: otp\n          }).then(res => {\n            if (res.status === 200) {\n              history.push(`/auth/resetPassword/${emp_name}`);\n            }\n          });\n        } else {\n          this.props.forgotPassword(recoverAccount).then(res => {\n            if (res.status === 200) {\n              this.setState({\n                viewOtp: true\n              });\n            }\n          });\n        }\n      } else {\n        this.validator.showMessages();\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message font-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n  }\n\n  render() {\n    let {\n      recoverAccount,\n      viewOtp\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recoverAccount\",\n      className: \"h-100 px-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-left common-heading mb-5 fs-28\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-para-text fs-16 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Please enter your Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      name: \"emp_name\",\n      placeholder: \"Name\",\n      value: recoverAccount.emp_name,\n      onChange: this.handleRecoveryInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    })), this.validator.message(\"Employee name\", recoverAccount.emp_name, \"required\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), viewOtp ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-para-text fs-16 mt-3 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Please enter OTP\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      name: \"otp\",\n      placeholder: \"OTP\",\n      value: recoverAccount.otp,\n      onChange: this.handleRecoveryInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    })), this.validator.message(\"OTP\", recoverAccount.otp, \"required\")) : \"\", /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-13 text-left tc-primary link-text py-5 cursor-pointer\",\n      onClick: () => history.push('/auth/login'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Back to Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group px-0 pt-4 d-flex justify-content-center col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: this.handleEmailRecovery,\n      mainbg: true,\n      className: \"mr-2 col-12\",\n      label: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    forgotPassword,\n    verifyOtp\n  }, dispatch);\n};\n\nlet component = ForgotPasswordClass;\nexport const ForgotPassword = connect(null, mapDispatchToProps)(component);","map":{"version":3,"sources":["F:/webfe/src/pages/Auth/ForgotPassword.js"],"names":["React","Component","NormalInput","NormalButton","SimpleReactValidator","connect","bindActionCreators","forgotPassword","verifyOtp","history","ForgotPasswordClass","state","recoverAccount","emp_name","toggleView","recoverView","verificationView","viewOtp","handleRecoveryInput","target","value","name","Object","assign","setState","handleEmailRecovery","event","preventDefault","otp","validator","allValid","props","then","res","status","push","showMessages","componentWillMount","element","message","autoForceUpdate","render","mapDispatchToProps","dispatch","component","ForgotPassword"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NormalInput, NormalButton } from \"component/common\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { forgotPassword, verifyOtp } from \"../../redux/actions/auth\";\r\nimport \"assets/scss/pages/login.scss\";\r\nimport { history } from \"helpers\";\r\n\r\nexport class ForgotPasswordClass extends Component {\r\n  state = {\r\n    recoverAccount: {\r\n      emp_name: \"\"\r\n    },\r\n    toggleView: {\r\n      recoverView: 1,\r\n      verificationView: 0\r\n    },\r\n    viewOtp: false\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message font-md\">{message}</span>\r\n      ),\r\n      autoForceUpdate: this\r\n    });\r\n  }\r\n\r\n  handleRecoveryInput = ({ target: { value, name } }) => {\r\n    let recoverAccount = Object.assign({}, this.state.recoverAccount);\r\n    recoverAccount[name] = value;\r\n    this.setState({\r\n      recoverAccount\r\n    });\r\n  };\r\n\r\n  handleEmailRecovery = event => {\r\n    event.preventDefault();\r\n    let { emp_name, otp } = this.state.recoverAccount;\r\n    if (this.validator.allValid()) {\r\n      let recoverAccount = Object.assign({}, this.state.recoverAccount);\r\n      if(this.state.viewOtp){\r\n        this.props.verifyOtp(`?emp_name=${emp_name}`, {otp: otp}).then((res) => {\r\n       \r\n          if(res.status===200){\r\n            history.push(`/auth/resetPassword/${emp_name}`)\r\n          }\r\n        });\r\n      } else {\r\n        this.props.forgotPassword(recoverAccount).then((res) => {\r\n       \r\n          if(res.status===200){\r\n            this.setState({viewOtp:true})\r\n          }\r\n        });\r\n      }\r\n      \r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { recoverAccount, viewOtp } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div id=\"recoverAccount\" className=\"h-100 px-2\">\r\n          <h1 className=\"text-left common-heading mb-5 fs-28\">Forgot Password</h1>\r\n          <div className=\"form-group\">\r\n            <label className=\"text-left text-black common-para-text fs-16 pb-1\">\r\n              Please enter your Name\r\n            </label>\r\n            <div className=\"input-group pt-2\">\r\n              <NormalInput\r\n                name=\"emp_name\"\r\n                placeholder=\"Name\"\r\n                value={recoverAccount.emp_name}\r\n                onChange={this.handleRecoveryInput}\r\n              />\r\n            </div>\r\n            {this.validator.message(\r\n              \"Employee name\",\r\n              recoverAccount.emp_name,\r\n              \"required\"\r\n            )}\r\n            <br></br>\r\n            {viewOtp ? <>\r\n            <label className=\"text-left text-black common-para-text fs-16 mt-3 pb-1\">\r\n              Please enter OTP\r\n            </label>\r\n            <div className=\"input-group pt-2\">\r\n              <NormalInput\r\n                name=\"otp\"\r\n                placeholder=\"OTP\"\r\n                value={recoverAccount.otp}\r\n                onChange={this.handleRecoveryInput}\r\n              />\r\n            </div>\r\n            {this.validator.message(\r\n              \"OTP\",\r\n              recoverAccount.otp,\r\n              \"required\"\r\n            )}</>:\"\"}\r\n\r\n            <p className=\"fs-13 text-left tc-primary link-text py-5 cursor-pointer\" onClick={() => history.push('/auth/login')}>Back to Login</p>\r\n          </div>\r\n\r\n          <div className=\"form-group px-0 pt-4 d-flex justify-content-center col-12\">\r\n            <NormalButton\r\n              onClick={this.handleEmailRecovery}\r\n              mainbg={true}\r\n              className=\"mr-2 col-12\"\r\n              label=\"submit\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      forgotPassword,\r\n      verifyOtp\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nlet component = ForgotPasswordClass;\r\n\r\nexport const ForgotPassword = connect(null, mapDispatchToProps)(component);\r\n"]},"metadata":{},"sourceType":"module"}