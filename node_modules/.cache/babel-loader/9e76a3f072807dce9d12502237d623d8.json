{"ast":null,"code":"/**\r\n * DevExtreme (ui/tree_list/ui.tree_list.focus.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _uiTree_list = _interopRequireDefault(require(\"./ui.tree_list.core\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.focus\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction findIndex(items, callback) {\n  var result = -1;\n  items.forEach(function (node, index) {\n    if (callback(node)) {\n      result = index;\n    }\n  });\n  return result;\n}\n\n_uiTree_list.default.registerModule(\"focus\", (0, _extend.extend)(true, {}, _uiGrid_core.default, {\n  extenders: {\n    controllers: {\n      data: {\n        changeRowExpand: function (key) {\n          if (this.option(\"focusedRowEnabled\") && this.isRowExpanded(key)) {\n            if (this._isFocusedRowInside(key)) {\n              this.option(\"focusedRowKey\", key);\n            }\n          }\n\n          return this.callBase.apply(this, arguments);\n        },\n        _isFocusedRowInside: function (parentKey) {\n          var focusedRowKey = this.option(\"focusedRowKey\");\n          var rowIndex = this.getRowIndexByKey(focusedRowKey);\n          var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\n          var parent = focusedRow && focusedRow.node.parent;\n\n          while (parent) {\n            if (parent.key === parentKey) {\n              return true;\n            }\n\n            parent = parent.parent;\n          }\n\n          return false;\n        },\n        getParentKey: function (key) {\n          var that = this;\n          var dataSource = that._dataSource;\n          var node = that.getNodeByKey(key);\n          var d = new _deferred.Deferred();\n\n          if (node) {\n            d.resolve(node.parent ? node.parent.key : void 0);\n          } else {\n            dataSource.load({\n              filter: [dataSource.getKeyExpr(), \"=\", key]\n            }).done(function (items) {\n              var parentData = items[0];\n\n              if (parentData) {\n                d.resolve(dataSource.parentKeyOf(parentData));\n              } else {\n                d.reject();\n              }\n            }).fail(d.reject);\n          }\n\n          return d.promise();\n        },\n        expandAscendants: function (key) {\n          var that = this;\n          var dataSource = that._dataSource;\n          var d = new _deferred.Deferred();\n          that.getParentKey(key).done(function (parentKey) {\n            if (dataSource && void 0 !== parentKey && parentKey !== that.option(\"rootValue\")) {\n              dataSource._isNodesInitializing = true;\n              that.expandRow(parentKey);\n              dataSource._isNodesInitializing = false;\n              that.expandAscendants(parentKey).done(d.resolve).fail(d.reject);\n            } else {\n              d.resolve();\n            }\n          }).fail(d.reject);\n          return d.promise();\n        },\n        getPageIndexByKey: function (key) {\n          var that = this;\n          var dataSource = that._dataSource;\n          var d = new _deferred.Deferred();\n          that.expandAscendants(key).done(function () {\n            dataSource.load({\n              filter: that.getCombinedFilter(),\n              sort: that.getController(\"columns\").getSortDataSourceParameters(!dataSource.remoteOperations().sorting),\n              parentIds: []\n            }).done(function (nodes) {\n              var offset = findIndex(nodes, function (node) {\n                return that.keyOf(node.data) === key;\n              });\n              var pageIndex = that.pageIndex();\n\n              if (offset >= 0) {\n                pageIndex = Math.floor(offset / that.pageSize());\n              }\n\n              d.resolve(pageIndex);\n            }).fail(d.reject);\n          }).fail(d.reject);\n          return d.promise();\n        }\n      }\n    }\n  }\n}));","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/tree_list/ui.tree_list.focus.js"],"names":["_uiTree_list","_interopRequireDefault","require","_extend","_deferred","_uiGrid_core","obj","__esModule","findIndex","items","callback","result","forEach","node","index","default","registerModule","extend","extenders","controllers","data","changeRowExpand","key","option","isRowExpanded","_isFocusedRowInside","callBase","apply","arguments","parentKey","focusedRowKey","rowIndex","getRowIndexByKey","focusedRow","getVisibleRows","parent","getParentKey","that","dataSource","_dataSource","getNodeByKey","d","Deferred","resolve","load","filter","getKeyExpr","done","parentData","parentKeyOf","reject","fail","promise","expandAscendants","_isNodesInitializing","expandRow","getPageIndexByKey","getCombinedFilter","sort","getController","getSortDataSourceParameters","remoteOperations","sorting","parentIds","nodes","offset","keyOf","pageIndex","Math","floor","pageSize"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/tree_list/ui.tree_list.focus.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _uiTree_list = _interopRequireDefault(require(\"./ui.tree_list.core\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.focus\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction findIndex(items, callback) {\r\n    var result = -1;\r\n    items.forEach(function(node, index) {\r\n        if (callback(node)) {\r\n            result = index\r\n        }\r\n    });\r\n    return result\r\n}\r\n_uiTree_list.default.registerModule(\"focus\", (0, _extend.extend)(true, {}, _uiGrid_core.default, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                changeRowExpand: function(key) {\r\n                    if (this.option(\"focusedRowEnabled\") && this.isRowExpanded(key)) {\r\n                        if (this._isFocusedRowInside(key)) {\r\n                            this.option(\"focusedRowKey\", key)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isFocusedRowInside: function(parentKey) {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this.getRowIndexByKey(focusedRowKey);\r\n                    var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\r\n                    var parent = focusedRow && focusedRow.node.parent;\r\n                    while (parent) {\r\n                        if (parent.key === parentKey) {\r\n                            return true\r\n                        }\r\n                        parent = parent.parent\r\n                    }\r\n                    return false\r\n                },\r\n                getParentKey: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var node = that.getNodeByKey(key);\r\n                    var d = new _deferred.Deferred;\r\n                    if (node) {\r\n                        d.resolve(node.parent ? node.parent.key : void 0)\r\n                    } else {\r\n                        dataSource.load({\r\n                            filter: [dataSource.getKeyExpr(), \"=\", key]\r\n                        }).done(function(items) {\r\n                            var parentData = items[0];\r\n                            if (parentData) {\r\n                                d.resolve(dataSource.parentKeyOf(parentData))\r\n                            } else {\r\n                                d.reject()\r\n                            }\r\n                        }).fail(d.reject)\r\n                    }\r\n                    return d.promise()\r\n                },\r\n                expandAscendants: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var d = new _deferred.Deferred;\r\n                    that.getParentKey(key).done(function(parentKey) {\r\n                        if (dataSource && void 0 !== parentKey && parentKey !== that.option(\"rootValue\")) {\r\n                            dataSource._isNodesInitializing = true;\r\n                            that.expandRow(parentKey);\r\n                            dataSource._isNodesInitializing = false;\r\n                            that.expandAscendants(parentKey).done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            d.resolve()\r\n                        }\r\n                    }).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                getPageIndexByKey: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var d = new _deferred.Deferred;\r\n                    that.expandAscendants(key).done(function() {\r\n                        dataSource.load({\r\n                            filter: that.getCombinedFilter(),\r\n                            sort: that.getController(\"columns\").getSortDataSourceParameters(!dataSource.remoteOperations().sorting),\r\n                            parentIds: []\r\n                        }).done(function(nodes) {\r\n                            var offset = findIndex(nodes, function(node) {\r\n                                return that.keyOf(node.data) === key\r\n                            });\r\n                            var pageIndex = that.pageIndex();\r\n                            if (offset >= 0) {\r\n                                pageIndex = Math.floor(offset / that.pageSize())\r\n                            }\r\n                            d.resolve(pageIndex)\r\n                        }).fail(d.reject)\r\n                    }).fail(d.reject);\r\n                    return d.promise()\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}