{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\NewAppointment\\\\NewListAppointment\\\\modal\\\\BlockPopup.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, NormalModal, NormalSelect, NormalDate, NormalDateTime, NormalCheckbox, NormalInput, NormalTextarea } from \"component/common\";\nimport closeIcon from \"assets/images/close.png\";\nimport { getCustomer, getCommonApi, commonCreateApi, commonPatchApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Toast } from \"service/toast\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport logicon from \"assets/images/logicon.png\";\nimport { AppointmentLog } from \"../../CommonModal/Appointmentlog\";\nimport { withTranslation } from \"react-i18next\";\nexport class BlockPopupClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedList: [],\n      filterDate: new Date(),\n      staffSortlist: [],\n      formFields: {\n        startDate: new Date(),\n        endDate: new Date(),\n        startTime: \"\",\n        endTime: \"\",\n        duration: \"\",\n        reason: \"\",\n        description: \"\",\n        active: true,\n        staffId: 0\n      },\n      duration: [],\n      selectAll: false,\n      reasonList: [],\n      Employeelist: [],\n      appointmentId: 0,\n      isAppointmentLogModal: false\n    };\n\n    this.handleDialog = () => {\n      this.setState({\n        selectedList: [],\n        Employeelist: [],\n        formFields: {\n          startDate: new Date(),\n          endDate: new Date(),\n          startTime: \"\",\n          endTime: \"\",\n          duration: \"\",\n          reason: \"\",\n          description: \"\"\n        },\n        appointmentId: 0\n      });\n      this.props.handleBlockDialog();\n    };\n\n    this.getDateformat = inputdate => {\n      let appt_Date = inputdate;\n      let date = appt_Date.split(\"/\");\n      let finaldate = date[2] + \"-\" + date[1] + \"-\" + date[0];\n      return finaldate;\n    };\n\n    this.getBlockedDetail = async data => {\n      await this.setState({\n        appointmentId: data\n      });\n      let {\n        appointmentId,\n        formFields,\n        selected\n      } = this.state;\n      this.props.getCommonApi(`appointmentblock/${appointmentId}/`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          formFields[\"startDate\"] = this.getDateformat(data.start_date);\n          formFields[\"endDate\"] = this.getDateformat(data.end_date);\n          formFields[\"startTime\"] = data.appt_fr_time;\n          formFields[\"endTime\"] = data.appt_to_time;\n          formFields[\"duration\"] = data.duration;\n          formFields[\"reason\"] = data.reason_id;\n          formFields[\"description\"] = data.appt_remark;\n          formFields[\"staffId\"] = data.emp_noid;\n          await this.setState({\n            formFields\n          });\n        }\n      });\n    };\n\n    this.getStaffList = async () => {\n      await this.setState({\n        staffSortlist: []\n      });\n      let {\n        filterDate,\n        staffSortlist,\n        formFields\n      } = this.state;\n      this.props.getCommonApi(`appointmentsort/?date=${dateFormat(filterDate, \"yyyy-mm-dd\")}`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            let selectedid = value.id;\n            let selectedstaff = false;\n\n            if (selectedid === formFields.staffId) {\n              selectedstaff = true;\n            } else {\n              selectedstaff = false;\n            }\n\n            staffSortlist.push({\n              value: value.id,\n              label: value.display_name,\n              emp_code: value.emp_code,\n              selected: selectedstaff\n            });\n          }\n\n          await this.setState({\n            staffSortlist\n          });\n        }\n      });\n    };\n\n    this.handleSelectAllCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        staffSortlist\n      } = this.state;\n      await this.setState({\n        selectAll: value\n      });\n\n      for (let item of staffSortlist) {\n        item[\"selected\"] = value;\n        await this.setState({ ...this.state.staffSortlist,\n          item\n        });\n      }\n\n      await this.setState({\n        staffSortlist\n      });\n\n      if (value) {\n        await this.setState({\n          selectedList: staffSortlist\n        });\n      } else {\n        await this.setState({\n          selectedList: []\n        });\n      }\n    };\n\n    this.handleActiveCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.handleCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }, item) => {\n      let {\n        selectedList,\n        staffSortlist\n      } = this.state;\n      let stafflistCheckbox = staffSortlist.find(acc => acc.value === item.value);\n\n      if (stafflistCheckbox) {\n        stafflistCheckbox[\"selected\"] = value;\n        await this.setState({ ...this.state.staffSortlist,\n          stafflistCheckbox\n        });\n      }\n\n      let filterList = selectedList.find(account => account.value === item.value);\n\n      if (filterList) {\n        filterList[\"value\"] = item.value;\n        filterList[\"label\"] = item.label;\n        filterList[\"selected\"] = value;\n\n        if (value) {\n          await this.setState({ ...this.state.selectedList,\n            filterList\n          });\n        } else {\n          await this.setState(data => ({\n            selectedList: data.selectedList.filter(x => x.value != item.value)\n          }));\n        }\n      } else {\n        let data = {};\n        data[\"value\"] = item.value;\n        data[\"label\"] = item.label;\n        data[\"selected\"] = value;\n        selectedList.push(data);\n        await this.setState({ ...selectedList,\n          selectedList\n        });\n      }\n\n      if (this.state.selectedList.length == this.state.staffSortlist.length) {\n        await this.setState({\n          selectAll: true\n        });\n      } else {\n        await this.setState({\n          selectAll: false\n        });\n      }\n    };\n\n    this.timeToMins = time => {\n      var b = time.split(\":\");\n      return b[0] * 60 + +b[1];\n    };\n\n    this.timeFromMins = mins => {\n      function z(n) {\n        return (n < 10 ? \"0\" : \"\") + n;\n      }\n\n      var h = (mins / 60 | 0) % 24;\n      var m = mins % 60;\n      return z(h) + \":\" + z(m);\n    };\n\n    this.getHoursFromDate = date => {\n      let hour = date.getHours();\n      let minute = date.getMinutes();\n      let hours = hour > 9 ? hour : \"0\" + hour;\n      let minutes = minute > 9 ? minute : \"0\" + minute;\n      return hours + \":\" + minutes;\n    };\n\n    this.addTimes = (t0, t1) => {\n      return this.timeFromMins(this.timeToMins(t0) + this.timeToMins(t1));\n    };\n\n    this.handleTimePick = async (name, value) => {\n      let {\n        formFields\n      } = this.state;\n      let time = this.getHoursFromDate(value);\n      formFields[\"startTime\"] = time;\n\n      if (time) {\n        formFields[\"endTime\"] = time;\n      }\n\n      let duration = \"0:0\";\n\n      if (formFields.duration !== \"\" && formFields.duration !== null) {\n        duration = formFields.duration;\n      }\n\n      if (formFields.endTime !== \"\") {\n        formFields[\"endTime\"] = this.addTimes(time, duration);\n      }\n\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.handleDurationChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"duration\"] = value;\n\n      if (formFields.endTime) {\n        formFields[\"endTime\"] = this.addTimes(formFields[\"startTime\"], value);\n      }\n\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.handleSubmit = async () => {\n      await this.setState({\n        Employeelist: []\n      });\n      let {\n        formFields,\n        selectedList,\n        Employeelist\n      } = this.state;\n\n      for (let item of selectedList) {\n        let value = item.value;\n        Employeelist.push(value);\n      }\n\n      this.setState({\n        Employeelist\n      });\n\n      if (this.validator.allValid()) {\n        if (selectedList.length > 0) {\n          let data = {\n            start_date: dateFormat(new Date(formFields.startDate), \"yyyy-mm-dd\"),\n            end_date: dateFormat(new Date(formFields.endDate), \"yyyy-mm-dd\"),\n            appt_fr_time: formFields.startTime,\n            appt_to_time: formFields.endTime,\n            reason_id: formFields.reason,\n            duration: formFields.duration,\n            appt_remark: formFields.description,\n            appt_isactive: formFields.active,\n            emp_ids: Employeelist\n          };\n          this.props.commonCreateApi(`appointmentblock/`, data).then(async res => {\n            if (res.status === 201) {\n              this.handleDialog();\n              this.props.handleChange();\n            }\n          });\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Please select Staff\"\n          });\n        }\n      } else {\n        this.validator.showMessages();\n      }\n    };\n\n    this.handleUpdate = async () => {\n      await this.setState({\n        Employeelist: []\n      });\n      let {\n        formFields,\n        Employeelist,\n        appointmentId\n      } = this.state;\n      Employeelist.push(formFields.staffId);\n      this.setState({\n        Employeelist\n      });\n\n      if (this.validator.allValid()) {\n        let data = {\n          start_date: dateFormat(new Date(formFields.startDate), \"yyyy-mm-dd\"),\n          end_date: dateFormat(new Date(formFields.endDate), \"yyyy-mm-dd\"),\n          appt_fr_time: formFields.startTime,\n          appt_to_time: formFields.endTime,\n          reason_id: formFields.reason,\n          duration: formFields.duration,\n          appt_remark: formFields.description,\n          appt_isactive: formFields.active,\n          emp_ids: Employeelist\n        };\n        console.log(data, \"Blockupdatedata\");\n        this.props.commonPatchApi(`appointmentblock/${appointmentId}/`, data).then(async res => {\n          if (res.status === 200) {\n            this.handleDialog();\n            this.props.handleChange();\n          }\n        });\n      } else {\n        this.validator.showMessages();\n      }\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n\n      if (name === \"startDate\") {\n        formFields[\"endDate\"] = value;\n      }\n\n      if (name === \"endDate\") {\n        let startdate = new Date(dateFormat(formFields.startDate));\n        let enddate = new Date(dateFormat(value));\n\n        if (enddate < startdate) {\n          Toast({\n            type: \"error\",\n            message: \"Please enter valid date\"\n          });\n          formFields[\"endDate\"] = formFields.startDate;\n        }\n      }\n\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.handleLogClick = () => {\n      debugger;\n      this.setState(prevState => ({\n        isAppointmentLogModal: !prevState.isAppointmentLogModal\n      }));\n    };\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this,\n      validators: {\n        date: {\n          // name the rule\n          message: \"The :attribute must be grater than today.\",\n          rule: (val, params, validator) => {\n            let date1 = new Date(dateFormat(new Date()));\n            let date2 = new Date(dateFormat(val));\n            return date1.getTime() <= date2.getTime();\n          },\n          required: true // optional\n\n        }\n      }\n    });\n    this.setState({\n      filterDate: this.props.filterDate\n    });\n    let {\n      duration\n    } = this.state;\n    this.props.getCommonApi(`treatment/Duration/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          duration.push({\n            value: value,\n            label: value\n          });\n        }\n\n        this.setState({\n          duration\n        });\n      }\n    });\n    this.props.getCommonApi(\"blockreason/\").then(res => {\n      let {\n        reasonList\n      } = this.state;\n      let {\n        status,\n        data\n      } = res;\n\n      if (status === 200) {\n        for (let value of data) {\n          reasonList.push({\n            value: value.id,\n            label: value.b_reason\n          });\n        }\n\n        this.setState({\n          reasonList\n        });\n      }\n    });\n\n    if (this.props.appointmentId && this.props.appointmentId > 0) {\n      this.getBlockedDetail(this.props.appointmentId);\n      this.getStaffList();\n    } else {\n      this.getStaffList();\n    }\n  }\n\n  render() {\n    let {\n      isOpenBlockModal,\n      t\n    } = this.props;\n    let {\n      staffSortlist,\n      formFields,\n      duration,\n      selectAll,\n      reasonList,\n      appointmentId,\n      isAppointmentLogModal\n    } = this.state;\n    return /*#__PURE__*/React.createElement(NormalModal, {\n      className: `select-category Block-popup`,\n      style: {\n        minWidth: \"55%\"\n      },\n      modal: isOpenBlockModal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => this.handleDialog(),\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start col-9 h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }\n    }, t(\"Block\"), \" \", t(\"Schedule\"), \" \"), appointmentId && appointmentId > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center bg-white col-3\",\n      onClick: this.handleLogClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logicon,\n      alt: \"\",\n      width: \"35px\",\n      height: \"35px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 15\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-start p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }\n    }, t(\"Start\"), \" \", t(\"Date\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, appointmentId && appointmentId > 0 ? /*#__PURE__*/React.createElement(NormalDate, {\n      className: \"customer-name status py-1 col-12\",\n      value: new Date(formFields.startDate),\n      name: \"startDate\",\n      type: \"date\",\n      onChange: this.handleChange,\n      minDate: new Date(),\n      showDisabledMonthNavigation: true,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(NormalDate, {\n      className: \"customer-name status py-1 col-12\",\n      value: new Date(formFields.startDate),\n      name: \"startDate\",\n      type: \"date\",\n      onChange: this.handleChange,\n      minDate: new Date(),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }\n    })), this.validator.message(\"startDate\", formFields.startDate, \"required|date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }\n    }, t(\"End\"), \" \", t(\"Date\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }\n    }, appointmentId && appointmentId > 0 ? /*#__PURE__*/React.createElement(NormalDate, {\n      className: \"customer-name status py-1 col-12\",\n      value: new Date(formFields.endDate),\n      name: \"endDate\",\n      type: \"date\",\n      onChange: this.handleChange,\n      minDate: new Date(),\n      showDisabledMonthNavigation: true,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(NormalDate, {\n      className: \"customer-name status py-1 col-12\",\n      value: new Date(formFields.endDate),\n      name: \"endDate\",\n      type: \"date\",\n      onChange: this.handleChange,\n      minDate: new Date(),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }\n    })), this.validator.message(\"endDate\", formFields.endDate, \"required|date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }\n    }, t(\"Select\"), \" \", t(\"Time\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleTimePick,\n      label: \"newStartTime\",\n      name: \"newStartTime\",\n      timeOnly: true,\n      dateFormat: \"hh:mm aa\",\n      showTime: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }\n    }, t(\"Start\"), \" \", t(\"Time\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 19\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      label: \"startTime\",\n      name: \"startTime\",\n      value: formFields.startTime,\n      className: \"customer-name status py-1 col-12\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"startTime\", formFields.startTime, \"required\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }\n    }, t(\"Duration\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 19\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: duration,\n      value: formFields.duration,\n      name: \"duration\",\n      onChange: e => this.handleDurationChange(e),\n      className: \"customer-name status py-1 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"duration\", formFields.duration, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 17\n      }\n    }, t(\"End\"), \" \", t(\"Time\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 19\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      label: \"endTime\",\n      name: \"endTime\",\n      value: formFields.endTime,\n      className: \"customer-name status py-1 col-12\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"endTime\", formFields.endTime, \"required\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 13\n      }\n    }, t(\"Reason\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: reasonList,\n      value: formFields.reason //\n      ,\n      name: \"reason\",\n      onChange: this.handleChange,\n      className: \"py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 15\n      }\n    }), this.validator.message(\"reason\", formFields.reason, \"required\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 13\n      }\n    }, t(\"Description\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalTextarea, {\n      value: formFields.description //\n      ,\n      name: \"description\",\n      onChange: this.handleChange,\n      className: \"customer-name status py-1 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center p-3 mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mt-1 mb-2 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row table-header m-0 fw-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 15\n      }\n    }, t(\"Select\"), \" \", t(\"All\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }\n    }, \" \", appointmentId && appointmentId > 0 ? /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: e => this.handleSelectAllCheckbox(e),\n      value: selectAll,\n      name: \"selectAll\",\n      checked: selectAll,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: e => this.handleSelectAllCheckbox(e),\n      value: selectAll,\n      name: \"selectAll\",\n      checked: selectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 15\n      }\n    }, t(\"Employee\"), \" \", t(\"Code\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 15\n      }\n    }, t(\"Display\"), \" \", t(\"Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"response-table w-100 fw-500 multiselectList-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 13\n      }\n    }, staffSortlist && staffSortlist.length > 0 ? staffSortlist.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${item.selected ? \"active\" : \"\"} `,\n        key: item.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 23\n        }\n      }, appointmentId && appointmentId > 0 ? /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, item),\n        value: item.selected,\n        name: \"selected\",\n        checked: item.selected,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 27\n        }\n      }) : /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, item),\n        value: item.selected,\n        name: \"selected\",\n        checked: item.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 23\n        }\n      }, item.emp_code), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 23\n        }\n      }, item.label));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 15\n      }\n    }, t(\"Active\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 17\n      }\n    }, \" \", appointmentId && appointmentId > 0 ? /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: e => this.handleActiveCheckbox(e),\n      value: formFields.active,\n      name: \"active\",\n      checked: formFields.active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: e => this.handleActiveCheckbox(e),\n      value: formFields.active,\n      name: \"active\",\n      checked: formFields.active,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 11\n      }\n    }, appointmentId && appointmentId > 0 ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100  p-0\",\n      mainbg: true,\n      className: \"confirm\",\n      label: `Update`,\n      outline: false,\n      onClick: () => this.handleUpdate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100  p-0\",\n      mainbg: true,\n      className: \"confirm\",\n      label: `Save`,\n      outline: false,\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100 p-0\",\n      mainbg: true,\n      className: \"confirm\",\n      label: `Cancel`,\n      outline: false,\n      onClick: () => this.handleDialog(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 13\n      }\n    }))), isAppointmentLogModal ? /*#__PURE__*/React.createElement(AppointmentLog, {\n      isAppointmentLogModal: isAppointmentLogModal,\n      handleLogClick: this.handleLogClick,\n      appointmentId: appointmentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  basicApptDetail: state.appointment.basicApptDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCustomer,\n    getCommonApi,\n    commonCreateApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const BlockPopup = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(BlockPopupClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/NewAppointment/NewListAppointment/modal/BlockPopup.js"],"names":["React","Component","NormalButton","NormalModal","NormalSelect","NormalDate","NormalDateTime","NormalCheckbox","NormalInput","NormalTextarea","closeIcon","getCustomer","getCommonApi","commonCreateApi","commonPatchApi","connect","bindActionCreators","Toast","dateFormat","SimpleReactValidator","logicon","AppointmentLog","withTranslation","BlockPopupClass","state","selectedList","filterDate","Date","staffSortlist","formFields","startDate","endDate","startTime","endTime","duration","reason","description","active","staffId","selectAll","reasonList","Employeelist","appointmentId","isAppointmentLogModal","handleDialog","setState","props","handleBlockDialog","getDateformat","inputdate","appt_Date","date","split","finaldate","getBlockedDetail","data","selected","then","key","status","start_date","end_date","appt_fr_time","appt_to_time","reason_id","appt_remark","emp_noid","getStaffList","value","selectedid","id","selectedstaff","push","label","display_name","emp_code","handleSelectAllCheckbox","target","name","item","handleActiveCheckbox","handleCheckbox","stafflistCheckbox","find","acc","filterList","account","filter","x","length","timeToMins","time","b","timeFromMins","mins","z","n","h","m","getHoursFromDate","hour","getHours","minute","getMinutes","hours","minutes","addTimes","t0","t1","handleTimePick","handleDurationChange","handleSubmit","validator","allValid","appt_isactive","emp_ids","res","handleChange","type","message","showMessages","handleUpdate","console","log","startdate","enddate","handleLogClick","prevState","componentWillMount","element","autoForceUpdate","validators","rule","val","params","date1","date2","getTime","required","b_reason","render","isOpenBlockModal","t","minWidth","e","map","index","mapStateToProps","basicApptDetail","appointment","mapDispatchToProps","dispatch","BlockPopup"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalButton,\r\n  NormalModal,\r\n  NormalSelect,\r\n  NormalDate,\r\n  NormalDateTime,\r\n  NormalCheckbox,\r\n  NormalInput,\r\n  NormalTextarea,\r\n} from \"component/common\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport {\r\n  getCustomer,\r\n  getCommonApi,\r\n  commonCreateApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Toast } from \"service/toast\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport logicon from \"assets/images/logicon.png\";\r\nimport { AppointmentLog } from \"../../CommonModal/Appointmentlog\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class BlockPopupClass extends Component {\r\n  state = {\r\n    selectedList: [],\r\n    filterDate: new Date(),\r\n    staffSortlist: [],\r\n    formFields: {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      startTime: \"\",\r\n      endTime: \"\",\r\n      duration: \"\",\r\n      reason: \"\",\r\n      description: \"\",\r\n      active: true,\r\n      staffId: 0,\r\n    },\r\n    duration: [],\r\n    selectAll: false,\r\n    reasonList: [],\r\n    Employeelist: [],\r\n    appointmentId: 0,\r\n    isAppointmentLogModal: false,\r\n  };\r\n  handleDialog = () => {\r\n    this.setState({\r\n      selectedList: [],\r\n      Employeelist: [],\r\n      formFields: {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        duration: \"\",\r\n        reason: \"\",\r\n        description: \"\",\r\n      },\r\n      appointmentId: 0,\r\n    });\r\n    this.props.handleBlockDialog();\r\n  };\r\n  componentWillMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n      validators: {\r\n        date: {\r\n          // name the rule\r\n          message: \"The :attribute must be grater than today.\",\r\n          rule: (val, params, validator) => {\r\n            let date1 = new Date(dateFormat(new Date()));\r\n            let date2 = new Date(dateFormat(val));\r\n            return date1.getTime() <= date2.getTime();\r\n          },\r\n          required: true, // optional\r\n        },\r\n      },\r\n    });\r\n    this.setState({ filterDate: this.props.filterDate });\r\n\r\n    let { duration } = this.state;\r\n    this.props.getCommonApi(`treatment/Duration/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          duration.push({ value: value, label: value });\r\n        }\r\n        this.setState({ duration });\r\n      }\r\n    });\r\n    this.props.getCommonApi(\"blockreason/\").then(res => {\r\n      let { reasonList } = this.state;\r\n      let { status, data } = res;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          reasonList.push({ value: value.id, label: value.b_reason });\r\n        }\r\n        this.setState({ reasonList });\r\n      }\r\n    });\r\n    if (this.props.appointmentId && this.props.appointmentId > 0) {\r\n      this.getBlockedDetail(this.props.appointmentId);\r\n      this.getStaffList();\r\n    } else {\r\n      this.getStaffList();\r\n    }\r\n  }\r\n\r\n  getDateformat = inputdate => {\r\n    let appt_Date = inputdate;\r\n    let date = appt_Date.split(\"/\");\r\n    let finaldate = date[2] + \"-\" + date[1] + \"-\" + date[0];\r\n    return finaldate;\r\n  };\r\n\r\n  getBlockedDetail = async data => {\r\n    await this.setState({ appointmentId: data });\r\n    let { appointmentId, formFields, selected } = this.state;\r\n    this.props\r\n      .getCommonApi(`appointmentblock/${appointmentId}/`)\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          formFields[\"startDate\"] = this.getDateformat(data.start_date);\r\n          formFields[\"endDate\"] = this.getDateformat(data.end_date);\r\n          formFields[\"startTime\"] = data.appt_fr_time;\r\n          formFields[\"endTime\"] = data.appt_to_time;\r\n          formFields[\"duration\"] = data.duration;\r\n          formFields[\"reason\"] = data.reason_id;\r\n          formFields[\"description\"] = data.appt_remark;\r\n          formFields[\"staffId\"] = data.emp_noid;\r\n          await this.setState({ formFields });\r\n        }\r\n      });\r\n  };\r\n  getStaffList = async () => {\r\n    await this.setState({ staffSortlist: [] });\r\n    let { filterDate, staffSortlist, formFields } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `appointmentsort/?date=${dateFormat(filterDate, \"yyyy-mm-dd\")}`\r\n      )\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          for (let value of data) {\r\n            let selectedid = value.id;\r\n            let selectedstaff = false;\r\n            if (selectedid === formFields.staffId) {\r\n              selectedstaff = true;\r\n            } else {\r\n              selectedstaff = false;\r\n            }\r\n            staffSortlist.push({\r\n              value: value.id,\r\n              label: value.display_name,\r\n              emp_code: value.emp_code,\r\n              selected: selectedstaff,\r\n            });\r\n          }\r\n          await this.setState({ staffSortlist });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleSelectAllCheckbox = async ({ target: { value, name } }) => {\r\n    let { staffSortlist } = this.state;\r\n    await this.setState({ selectAll: value });\r\n    for (let item of staffSortlist) {\r\n      item[\"selected\"] = value;\r\n      await this.setState({ ...this.state.staffSortlist, item });\r\n    }\r\n    await this.setState({ staffSortlist });\r\n    if (value) {\r\n      await this.setState({ selectedList: staffSortlist });\r\n    } else {\r\n      await this.setState({ selectedList: [] });\r\n    }\r\n  };\r\n  handleActiveCheckbox = async ({ target: { value, name } }) => {\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n    await this.setState({ formFields });\r\n  };\r\n\r\n  handleCheckbox = async ({ target: { value, name } }, item) => {\r\n    let { selectedList, staffSortlist } = this.state;\r\n\r\n    let stafflistCheckbox = staffSortlist.find(acc => acc.value === item.value);\r\n    if (stafflistCheckbox) {\r\n      stafflistCheckbox[\"selected\"] = value;\r\n      await this.setState({ ...this.state.staffSortlist, stafflistCheckbox });\r\n    }\r\n\r\n    let filterList = selectedList.find(account => account.value === item.value);\r\n    if (filterList) {\r\n      filterList[\"value\"] = item.value;\r\n      filterList[\"label\"] = item.label;\r\n      filterList[\"selected\"] = value;\r\n      if (value) {\r\n        await this.setState({ ...this.state.selectedList, filterList });\r\n      } else {\r\n        await this.setState(data => ({\r\n          selectedList: data.selectedList.filter(x => x.value != item.value),\r\n        }));\r\n      }\r\n    } else {\r\n      let data = {};\r\n      data[\"value\"] = item.value;\r\n      data[\"label\"] = item.label;\r\n      data[\"selected\"] = value;\r\n      selectedList.push(data);\r\n      await this.setState({ ...selectedList, selectedList });\r\n    }\r\n\r\n    if (this.state.selectedList.length == this.state.staffSortlist.length) {\r\n      await this.setState({ selectAll: true });\r\n    } else {\r\n      await this.setState({ selectAll: false });\r\n    }\r\n  };\r\n  timeToMins = time => {\r\n    var b = time.split(\":\");\r\n    return b[0] * 60 + +b[1];\r\n  };\r\n\r\n  // Convert minutes to a time in format hh:mm\r\n  // Returned value is in range 00  to 24 hrs\r\n  timeFromMins = mins => {\r\n    function z(n) {\r\n      return (n < 10 ? \"0\" : \"\") + n;\r\n    }\r\n    var h = ((mins / 60) | 0) % 24;\r\n    var m = mins % 60;\r\n    return z(h) + \":\" + z(m);\r\n  };\r\n\r\n  getHoursFromDate = date => {\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let hours = hour > 9 ? hour : \"0\" + hour;\r\n    let minutes = minute > 9 ? minute : \"0\" + minute;\r\n    return hours + \":\" + minutes;\r\n  };\r\n  addTimes = (t0, t1) => {\r\n    return this.timeFromMins(this.timeToMins(t0) + this.timeToMins(t1));\r\n  };\r\n  handleTimePick = async (name, value) => {\r\n    let { formFields } = this.state;\r\n    let time = this.getHoursFromDate(value);\r\n    formFields[\"startTime\"] = time;\r\n    if (time) {\r\n      formFields[\"endTime\"] = time;\r\n    }\r\n    let duration = \"0:0\";\r\n    if (formFields.duration !== \"\" && formFields.duration !== null) {\r\n      duration = formFields.duration;\r\n    }\r\n    if (formFields.endTime !== \"\") {\r\n      formFields[\"endTime\"] = this.addTimes(time, duration);\r\n    }\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleDurationChange = async ({ target: { value, name } }) => {\r\n    let { formFields } = this.state;\r\n    formFields[\"duration\"] = value;\r\n    if (formFields.endTime) {\r\n      formFields[\"endTime\"] = this.addTimes(formFields[\"startTime\"], value);\r\n    }\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    await this.setState({ Employeelist: [] });\r\n    let { formFields, selectedList, Employeelist } = this.state;\r\n    for (let item of selectedList) {\r\n      let value = item.value;\r\n      Employeelist.push(value);\r\n    }\r\n    this.setState({ Employeelist });\r\n    if (this.validator.allValid()) {\r\n      if (selectedList.length > 0) {\r\n        let data = {\r\n          start_date: dateFormat(new Date(formFields.startDate), \"yyyy-mm-dd\"),\r\n          end_date: dateFormat(new Date(formFields.endDate), \"yyyy-mm-dd\"),\r\n          appt_fr_time: formFields.startTime,\r\n          appt_to_time: formFields.endTime,\r\n          reason_id: formFields.reason,\r\n          duration: formFields.duration,\r\n          appt_remark: formFields.description,\r\n          appt_isactive: formFields.active,\r\n          emp_ids: Employeelist,\r\n        };\r\n\r\n        this.props\r\n          .commonCreateApi(`appointmentblock/`, data)\r\n          .then(async res => {\r\n            if (res.status === 201) {\r\n              this.handleDialog();\r\n              this.props.handleChange();\r\n            }\r\n          });\r\n      } else {\r\n        Toast({ type: \"error\", message: \"Please select Staff\" });\r\n      }\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  };\r\n  handleUpdate = async () => {\r\n    await this.setState({ Employeelist: [] });\r\n    let { formFields, Employeelist, appointmentId } = this.state;\r\n    Employeelist.push(formFields.staffId);\r\n    this.setState({ Employeelist });\r\n    if (this.validator.allValid()) {\r\n      let data = {\r\n        start_date: dateFormat(new Date(formFields.startDate), \"yyyy-mm-dd\"),\r\n        end_date: dateFormat(new Date(formFields.endDate), \"yyyy-mm-dd\"),\r\n        appt_fr_time: formFields.startTime,\r\n        appt_to_time: formFields.endTime,\r\n        reason_id: formFields.reason,\r\n        duration: formFields.duration,\r\n        appt_remark: formFields.description,\r\n        appt_isactive: formFields.active,\r\n        emp_ids: Employeelist,\r\n      };\r\n      console.log(data, \"Blockupdatedata\");\r\n      this.props\r\n        .commonPatchApi(`appointmentblock/${appointmentId}/`, data)\r\n        .then(async res => {\r\n          if (res.status === 200) {\r\n            this.handleDialog();\r\n            this.props.handleChange();\r\n          }\r\n        });\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  };\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n\r\n    if (name === \"startDate\") {\r\n      formFields[\"endDate\"] = value;\r\n    }\r\n\r\n    if (name === \"endDate\") {\r\n      let startdate = new Date(dateFormat(formFields.startDate));\r\n      let enddate = new Date(dateFormat(value));\r\n      if (enddate < startdate) {\r\n        Toast({ type: \"error\", message: \"Please enter valid date\" });\r\n        formFields[\"endDate\"] = formFields.startDate;\r\n      }\r\n    }\r\n\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleLogClick = () => {\r\n    debugger;\r\n    this.setState(prevState => ({\r\n      isAppointmentLogModal: !prevState.isAppointmentLogModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { isOpenBlockModal, t } = this.props;\r\n    let {\r\n      staffSortlist,\r\n      formFields,\r\n      duration,\r\n      selectAll,\r\n      reasonList,\r\n      appointmentId,\r\n      isAppointmentLogModal,\r\n    } = this.state;\r\n    return (\r\n      <NormalModal\r\n        className={`select-category Block-popup`}\r\n        style={{ minWidth: \"55%\" }}\r\n        modal={isOpenBlockModal}\r\n        handleModal={this.handleDialog}\r\n      >\r\n        <div className=\"d-flex justify-content-end\">\r\n          <img\r\n            onClick={() => this.handleDialog()}\r\n            className=\"close\"\r\n            src={closeIcon}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"d-flex px-3\">\r\n          <div className=\"d-flex justify-content-start col-9 h4\">\r\n            {t(\"Block\")} {t(\"Schedule\")}{\" \"}\r\n          </div>\r\n          {appointmentId && appointmentId > 0 ? (\r\n            <div\r\n              className=\"d-flex justify-content-end align-items-center bg-white col-3\"\r\n              onClick={this.handleLogClick}\r\n            >\r\n              <img src={logicon} alt=\"\" width=\"35px\" height=\"35px\" />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-wrap justify-content-start p-3\">\r\n          <div className=\"col-md-6 col-12 mb-3\">\r\n            <label className=\"text-left text-black common-label-text \">\r\n              {t(\"Start\")} {t(\"Date\")}{\" \"}\r\n              <span className=\"error-message text-danger validNo fs-18\">*</span>\r\n            </label>\r\n            <div className=\"input-group\">\r\n              {appointmentId && appointmentId > 0 ? (\r\n                <NormalDate\r\n                  className=\"customer-name status py-1 col-12\"\r\n                  value={new Date(formFields.startDate)}\r\n                  name=\"startDate\"\r\n                  type=\"date\"\r\n                  onChange={this.handleChange}\r\n                  minDate={new Date()}\r\n                  showDisabledMonthNavigation\r\n                  disabled\r\n                />\r\n              ) : (\r\n                <NormalDate\r\n                  className=\"customer-name status py-1 col-12\"\r\n                  value={new Date(formFields.startDate)}\r\n                  name=\"startDate\"\r\n                  type=\"date\"\r\n                  onChange={this.handleChange}\r\n                  minDate={new Date()}\r\n                  showDisabledMonthNavigation\r\n                />\r\n              )}\r\n            </div>\r\n            {this.validator.message(\r\n              \"startDate\",\r\n              formFields.startDate,\r\n              \"required|date\"\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-6 col-12 mb-3\">\r\n            <label className=\"text-left text-black common-label-text \">\r\n              {t(\"End\")} {t(\"Date\")}{\" \"}\r\n              <span className=\"error-message text-danger validNo fs-18\">*</span>\r\n            </label>\r\n            <div className=\"\">\r\n              {appointmentId && appointmentId > 0 ? (\r\n                <NormalDate\r\n                  className=\"customer-name status py-1 col-12\"\r\n                  value={new Date(formFields.endDate)}\r\n                  name=\"endDate\"\r\n                  type=\"date\"\r\n                  onChange={this.handleChange}\r\n                  minDate={new Date()}\r\n                  showDisabledMonthNavigation\r\n                  disabled\r\n                />\r\n              ) : (\r\n                <NormalDate\r\n                  className=\"customer-name status py-1 col-12\"\r\n                  value={new Date(formFields.endDate)}\r\n                  name=\"endDate\"\r\n                  type=\"date\"\r\n                  onChange={this.handleChange}\r\n                  minDate={new Date()}\r\n                  showDisabledMonthNavigation\r\n                />\r\n              )}\r\n            </div>\r\n            {this.validator.message(\r\n              \"endDate\",\r\n              formFields.endDate,\r\n              \"required|date\"\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-6 col-12 mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-12\">\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Select\")} {t(\"Time\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalDateTime\r\n                    onChange={this.handleTimePick}\r\n                    label=\"newStartTime\"\r\n                    name=\"newStartTime\"\r\n                    timeOnly={true}\r\n                    dateFormat=\"hh:mm aa\"\r\n                    showTime={true}\r\n                    selected={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-12\">\r\n                {\" \"}\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Start\")} {t(\"Time\")}\r\n                  <span className=\"error-message text-danger validNo fs-18\">\r\n                    *\r\n                  </span>\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    label=\"startTime\"\r\n                    name=\"startTime\"\r\n                    value={formFields.startTime}\r\n                    className=\"customer-name status py-1 col-12\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"startTime\",\r\n                  formFields.startTime,\r\n                  \"required\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-12 mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-12\">\r\n                {\" \"}\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Duration\")}\r\n                  <span className=\"error-message text-danger validNo fs-18\">\r\n                    *\r\n                  </span>\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalSelect\r\n                    options={duration}\r\n                    value={formFields.duration}\r\n                    name=\"duration\"\r\n                    onChange={e => this.handleDurationChange(e)}\r\n                    className=\"customer-name status py-1 col-12\"\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"duration\",\r\n                  formFields.duration,\r\n                  \"required\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-6 col-12\">\r\n                {\" \"}\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"End\")} {t(\"Time\")}\r\n                  <span className=\"error-message text-danger validNo fs-18\">\r\n                    *\r\n                  </span>\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    label=\"endTime\"\r\n                    name=\"endTime\"\r\n                    value={formFields.endTime}\r\n                    className=\"customer-name status py-1 col-12\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"endTime\",\r\n                  formFields.endTime,\r\n                  \"required\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-12 mb-3\">\r\n            <label className=\"text-left text-black common-label-text \">\r\n              {t(\"Reason\")}{\" \"}\r\n              <span className=\"error-message text-danger validNo fs-18\">*</span>\r\n            </label>\r\n            <div className=\"input-group\">\r\n              <NormalSelect\r\n                options={reasonList}\r\n                value={formFields.reason} //\r\n                name=\"reason\"\r\n                onChange={this.handleChange}\r\n                className=\"py-1\"\r\n              />\r\n              {this.validator.message(\"reason\", formFields.reason, \"required\")}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-12 mb-3\">\r\n            <label className=\"text-left text-black common-label-text \">\r\n              {t(\"Description\")}\r\n            </label>\r\n            <div className=\"input-group\">\r\n              <NormalTextarea\r\n                value={formFields.description} //\r\n                name=\"description\"\r\n                onChange={this.handleChange}\r\n                className=\"customer-name status py-1 col-12\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-center p-3 mb-0\">\r\n          <div className=\"col-12 mt-1 mb-2 mx-3\">\r\n            <div className=\"row table-header m-0 fw-500\">\r\n              <div className=\"col-3\">\r\n                {t(\"Select\")} {t(\"All\")}{\" \"}\r\n                <span>\r\n                  {\" \"}\r\n                  {appointmentId && appointmentId > 0 ? (\r\n                    <NormalCheckbox\r\n                      onChange={e => this.handleSelectAllCheckbox(e)}\r\n                      value={selectAll}\r\n                      name=\"selectAll\"\r\n                      checked={selectAll}\r\n                      disabled\r\n                    />\r\n                  ) : (\r\n                    <NormalCheckbox\r\n                      onChange={e => this.handleSelectAllCheckbox(e)}\r\n                      value={selectAll}\r\n                      name=\"selectAll\"\r\n                      checked={selectAll}\r\n                    />\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                {t(\"Employee\")} {t(\"Code\")}\r\n              </div>\r\n              <div className=\"col-6\">\r\n                {t(\"Display\")} {t(\"Name\")}\r\n              </div>\r\n            </div>\r\n            <div className=\"response-table w-100 fw-500 multiselectList-height\">\r\n              {staffSortlist && staffSortlist.length > 0 ? (\r\n                staffSortlist.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className={`d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${\r\n                        item.selected ? \"active\" : \"\"\r\n                      } `}\r\n                      key={item.value}\r\n                    >\r\n                      <div className=\"col-3 text-center\">\r\n                        {appointmentId && appointmentId > 0 ? (\r\n                          <NormalCheckbox\r\n                            onChange={e => this.handleCheckbox(e, item)}\r\n                            value={item.selected}\r\n                            name=\"selected\"\r\n                            checked={item.selected}\r\n                            disabled\r\n                          />\r\n                        ) : (\r\n                          <NormalCheckbox\r\n                            onChange={e => this.handleCheckbox(e, item)}\r\n                            value={item.selected}\r\n                            name=\"selected\"\r\n                            checked={item.selected}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-3\">{item.emp_code}</div>\r\n                      <div className=\"col-6\">{item.label}</div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"text-center w-100\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                {t(\"Active\")}\r\n                <span>\r\n                  {\" \"}\r\n                  {appointmentId && appointmentId > 0 ? (\r\n                    <NormalCheckbox\r\n                      onChange={e => this.handleActiveCheckbox(e)}\r\n                      value={formFields.active}\r\n                      name=\"active\"\r\n                      checked={formFields.active}\r\n                    />\r\n                  ) : (\r\n                    <NormalCheckbox\r\n                      onChange={e => this.handleActiveCheckbox(e)}\r\n                      value={formFields.active}\r\n                      name=\"active\"\r\n                      checked={formFields.active}\r\n                      disabled\r\n                    />\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end\">\r\n          <div className=\"col-md-2 col-6\">\r\n            {appointmentId && appointmentId > 0 ? (\r\n              <NormalButton\r\n                buttonClass={\"w-100  p-0\"}\r\n                mainbg={true}\r\n                className=\"confirm\"\r\n                label={`Update`}\r\n                outline={false}\r\n                onClick={() => this.handleUpdate()}\r\n              />\r\n            ) : (\r\n              <NormalButton\r\n                buttonClass={\"w-100  p-0\"}\r\n                mainbg={true}\r\n                className=\"confirm\"\r\n                label={`Save`}\r\n                outline={false}\r\n                onClick={() => this.handleSubmit()}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-2 col-6\">\r\n            <NormalButton\r\n              buttonClass={\"w-100 p-0\"}\r\n              mainbg={true}\r\n              className=\"confirm\"\r\n              label={`Cancel`}\r\n              outline={false}\r\n              onClick={() => this.handleDialog()}\r\n            />\r\n          </div>\r\n        </div>\r\n        {isAppointmentLogModal ? (\r\n          <AppointmentLog\r\n            isAppointmentLogModal={isAppointmentLogModal}\r\n            handleLogClick={this.handleLogClick}\r\n            appointmentId={appointmentId}\r\n          />\r\n        ) : null}\r\n      </NormalModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCustomer,\r\n      getCommonApi,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const BlockPopup = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(BlockPopupClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}