{"ast":null,"code":"/**\r\n * DevExtreme (ui/text_area.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\n\nvar _common = require(\"../core/utils/common\");\n\nvar _window = require(\"../core/utils/window\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\n\nvar _extend = require(\"../core/utils/extend\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _index = require(\"../events/utils/index\");\n\nvar _pointer = _interopRequireDefault(require(\"../events/pointer\"));\n\nvar _uiEventsEmitterGesture = _interopRequireDefault(require(\"../ui/scroll_view/ui.events.emitter.gesture.scroll\"));\n\nvar _size = require(\"../core/utils/size\");\n\nvar _utils = require(\"./text_box/utils.scroll\");\n\nvar _text_box = _interopRequireDefault(require(\"./text_box\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar TEXTAREA_CLASS = \"dx-textarea\";\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\nvar TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE = \"dx-texteditor-input-auto-resize\";\n\nvar TextArea = _text_box.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      spellcheck: true,\n      minHeight: void 0,\n      maxHeight: void 0,\n      autoResizeEnabled: false\n    });\n  },\n  _initMarkup: function () {\n    this.$element().addClass(TEXTAREA_CLASS);\n    this.callBase();\n    this.setAria(\"multiline\", \"true\");\n  },\n  _renderContentImpl: function () {\n    this._updateInputHeight();\n\n    this.callBase();\n  },\n  _renderInput: function () {\n    this.callBase();\n\n    this._renderScrollHandler();\n  },\n  _createInput: function () {\n    var $input = (0, _renderer.default)(\"<textarea>\");\n\n    this._applyInputAttributes($input, this.option(\"inputAttr\"));\n\n    this._updateInputAutoResizeAppearance($input);\n\n    return $input;\n  },\n  _applyInputAttributes: function ($input, customAttributes) {\n    $input.attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS);\n  },\n  _renderScrollHandler: function () {\n    this._eventY = 0;\n\n    var $input = this._input();\n\n    var initScrollData = (0, _utils.prepareScrollData)($input, true);\n\n    _events_engine.default.on($input, (0, _index.addNamespace)(_uiEventsEmitterGesture.default.init, this.NAME), initScrollData, _common.noop);\n\n    _events_engine.default.on($input, (0, _index.addNamespace)(_pointer.default.down, this.NAME), this._pointerDownHandler.bind(this));\n\n    _events_engine.default.on($input, (0, _index.addNamespace)(_pointer.default.move, this.NAME), this._pointerMoveHandler.bind(this));\n  },\n  _pointerDownHandler: function (e) {\n    this._eventY = (0, _index.eventData)(e).y;\n  },\n  _pointerMoveHandler: function (e) {\n    var currentEventY = (0, _index.eventData)(e).y;\n    var delta = this._eventY - currentEventY;\n\n    if ((0, _utils.allowScroll)(this._input(), delta)) {\n      e.isScrollingEvent = true;\n      e.stopPropagation();\n    }\n\n    this._eventY = currentEventY;\n  },\n  _renderDimensions: function () {\n    var $element = this.$element();\n    var element = $element.get(0);\n\n    var width = this._getOptionValue(\"width\", element);\n\n    var height = this._getOptionValue(\"height\", element);\n\n    var minHeight = this.option(\"minHeight\");\n    var maxHeight = this.option(\"maxHeight\");\n    $element.css({\n      minHeight: void 0 !== minHeight ? minHeight : \"\",\n      maxHeight: void 0 !== maxHeight ? maxHeight : \"\",\n      width: width,\n      height: height\n    });\n  },\n  _resetDimensions: function () {\n    this.$element().css({\n      height: \"\",\n      minHeight: \"\",\n      maxHeight: \"\"\n    });\n  },\n  _renderEvents: function () {\n    if (this.option(\"autoResizeEnabled\")) {\n      _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"input paste\", this.NAME), this._updateInputHeight.bind(this));\n    }\n\n    this.callBase();\n  },\n  _refreshEvents: function () {\n    _events_engine.default.off(this._input(), (0, _index.addNamespace)(\"input paste\", this.NAME));\n\n    this.callBase();\n  },\n  _getHeightDifference: function ($input) {\n    return (0, _size.getVerticalOffsets)(this._$element.get(0), false) + (0, _size.getVerticalOffsets)(this._$textEditorContainer.get(0), false) + (0, _size.getVerticalOffsets)(this._$textEditorInputContainer.get(0), false) + (0, _size.getElementBoxParams)(\"height\", (0, _window.getWindow)().getComputedStyle($input.get(0))).margin;\n  },\n  _updateInputHeight: function () {\n    var $input = this._input();\n\n    var autoHeightResizing = void 0 === this.option(\"height\") && this.option(\"autoResizeEnabled\");\n\n    if (!autoHeightResizing) {\n      $input.css(\"height\", \"\");\n      return;\n    } else {\n      this._resetDimensions();\n\n      this._$element.css(\"height\", this._$element.outerHeight());\n    }\n\n    $input.css(\"height\", 0);\n\n    var heightDifference = this._getHeightDifference($input);\n\n    this._renderDimensions();\n\n    var minHeight = this._getBoundaryHeight(\"minHeight\");\n\n    var maxHeight = this._getBoundaryHeight(\"maxHeight\");\n\n    var inputHeight = $input[0].scrollHeight;\n\n    if (void 0 !== minHeight) {\n      inputHeight = Math.max(inputHeight, minHeight - heightDifference);\n    }\n\n    if (void 0 !== maxHeight) {\n      var adjustedMaxHeight = maxHeight - heightDifference;\n      var needScroll = inputHeight > adjustedMaxHeight;\n      inputHeight = Math.min(inputHeight, adjustedMaxHeight);\n\n      this._updateInputAutoResizeAppearance($input, !needScroll);\n    }\n\n    $input.css(\"height\", inputHeight);\n\n    if (autoHeightResizing) {\n      this._$element.css(\"height\", \"auto\");\n    }\n  },\n  _getBoundaryHeight: function (optionName) {\n    var boundaryValue = this.option(optionName);\n\n    if ((0, _type.isDefined)(boundaryValue)) {\n      return \"number\" === typeof boundaryValue ? boundaryValue : (0, _size.parseHeight)(boundaryValue, this._$textEditorContainer.get(0));\n    }\n  },\n  _renderInputType: _common.noop,\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._updateInputHeight();\n    }\n  },\n  _updateInputAutoResizeAppearance: function ($input, isAutoResizeEnabled) {\n    if ($input) {\n      var autoResizeEnabled = (0, _common.ensureDefined)(isAutoResizeEnabled, this.option(\"autoResizeEnabled\"));\n      $input.toggleClass(TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE, autoResizeEnabled);\n    }\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"autoResizeEnabled\":\n        this._updateInputAutoResizeAppearance(this._input(), args.value);\n\n        this._refreshEvents();\n\n        this._updateInputHeight();\n\n        break;\n\n      case \"value\":\n      case \"height\":\n        this.callBase(args);\n\n        this._updateInputHeight();\n\n        break;\n\n      case \"minHeight\":\n      case \"maxHeight\":\n        this._renderDimensions();\n\n        this._updateInputHeight();\n\n        break;\n\n      case \"visible\":\n        this.callBase(args);\n        args.value && this._updateInputHeight();\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\n\n(0, _component_registrator.default)(\"dxTextArea\", TextArea);\nvar _default = TextArea;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/text_area.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_events_engine","_common","_window","_component_registrator","_extend","_type","_index","_pointer","_uiEventsEmitterGesture","_size","_utils","_text_box","obj","__esModule","TEXTAREA_CLASS","TEXTEDITOR_INPUT_CLASS","TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE","TextArea","inherit","_getDefaultOptions","extend","callBase","spellcheck","minHeight","maxHeight","autoResizeEnabled","_initMarkup","$element","addClass","setAria","_renderContentImpl","_updateInputHeight","_renderInput","_renderScrollHandler","_createInput","$input","_applyInputAttributes","option","_updateInputAutoResizeAppearance","customAttributes","attr","_eventY","_input","initScrollData","prepareScrollData","on","addNamespace","init","NAME","noop","down","_pointerDownHandler","bind","move","_pointerMoveHandler","e","eventData","y","currentEventY","delta","allowScroll","isScrollingEvent","stopPropagation","_renderDimensions","element","get","width","_getOptionValue","height","css","_resetDimensions","_renderEvents","_refreshEvents","off","_getHeightDifference","getVerticalOffsets","_$element","_$textEditorContainer","_$textEditorInputContainer","getElementBoxParams","getWindow","getComputedStyle","margin","autoHeightResizing","outerHeight","heightDifference","_getBoundaryHeight","inputHeight","scrollHeight","Math","max","adjustedMaxHeight","needScroll","min","optionName","boundaryValue","isDefined","parseHeight","_renderInputType","_visibilityChanged","visible","isAutoResizeEnabled","ensureDefined","toggleClass","_optionChanged","args","name","value","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/text_area.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _index = require(\"../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../events/pointer\"));\r\nvar _uiEventsEmitterGesture = _interopRequireDefault(require(\"../ui/scroll_view/ui.events.emitter.gesture.scroll\"));\r\nvar _size = require(\"../core/utils/size\");\r\nvar _utils = require(\"./text_box/utils.scroll\");\r\nvar _text_box = _interopRequireDefault(require(\"./text_box\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TEXTAREA_CLASS = \"dx-textarea\";\r\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE = \"dx-texteditor-input-auto-resize\";\r\nvar TextArea = _text_box.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            spellcheck: true,\r\n            minHeight: void 0,\r\n            maxHeight: void 0,\r\n            autoResizeEnabled: false\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTAREA_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"multiline\", \"true\")\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._updateInputHeight();\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderScrollHandler()\r\n    },\r\n    _createInput: function() {\r\n        var $input = (0, _renderer.default)(\"<textarea>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        this._updateInputAutoResizeAppearance($input);\r\n        return $input\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        $input.attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS)\r\n    },\r\n    _renderScrollHandler: function() {\r\n        this._eventY = 0;\r\n        var $input = this._input();\r\n        var initScrollData = (0, _utils.prepareScrollData)($input, true);\r\n        _events_engine.default.on($input, (0, _index.addNamespace)(_uiEventsEmitterGesture.default.init, this.NAME), initScrollData, _common.noop);\r\n        _events_engine.default.on($input, (0, _index.addNamespace)(_pointer.default.down, this.NAME), this._pointerDownHandler.bind(this));\r\n        _events_engine.default.on($input, (0, _index.addNamespace)(_pointer.default.move, this.NAME), this._pointerMoveHandler.bind(this))\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        this._eventY = (0, _index.eventData)(e).y\r\n    },\r\n    _pointerMoveHandler: function(e) {\r\n        var currentEventY = (0, _index.eventData)(e).y;\r\n        var delta = this._eventY - currentEventY;\r\n        if ((0, _utils.allowScroll)(this._input(), delta)) {\r\n            e.isScrollingEvent = true;\r\n            e.stopPropagation()\r\n        }\r\n        this._eventY = currentEventY\r\n    },\r\n    _renderDimensions: function() {\r\n        var $element = this.$element();\r\n        var element = $element.get(0);\r\n        var width = this._getOptionValue(\"width\", element);\r\n        var height = this._getOptionValue(\"height\", element);\r\n        var minHeight = this.option(\"minHeight\");\r\n        var maxHeight = this.option(\"maxHeight\");\r\n        $element.css({\r\n            minHeight: void 0 !== minHeight ? minHeight : \"\",\r\n            maxHeight: void 0 !== maxHeight ? maxHeight : \"\",\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _resetDimensions: function() {\r\n        this.$element().css({\r\n            height: \"\",\r\n            minHeight: \"\",\r\n            maxHeight: \"\"\r\n        })\r\n    },\r\n    _renderEvents: function() {\r\n        if (this.option(\"autoResizeEnabled\")) {\r\n            _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"input paste\", this.NAME), this._updateInputHeight.bind(this))\r\n        }\r\n        this.callBase()\r\n    },\r\n    _refreshEvents: function() {\r\n        _events_engine.default.off(this._input(), (0, _index.addNamespace)(\"input paste\", this.NAME));\r\n        this.callBase()\r\n    },\r\n    _getHeightDifference: function($input) {\r\n        return (0, _size.getVerticalOffsets)(this._$element.get(0), false) + (0, _size.getVerticalOffsets)(this._$textEditorContainer.get(0), false) + (0, _size.getVerticalOffsets)(this._$textEditorInputContainer.get(0), false) + (0, _size.getElementBoxParams)(\"height\", (0, _window.getWindow)().getComputedStyle($input.get(0))).margin\r\n    },\r\n    _updateInputHeight: function() {\r\n        var $input = this._input();\r\n        var autoHeightResizing = void 0 === this.option(\"height\") && this.option(\"autoResizeEnabled\");\r\n        if (!autoHeightResizing) {\r\n            $input.css(\"height\", \"\");\r\n            return\r\n        } else {\r\n            this._resetDimensions();\r\n            this._$element.css(\"height\", this._$element.outerHeight())\r\n        }\r\n        $input.css(\"height\", 0);\r\n        var heightDifference = this._getHeightDifference($input);\r\n        this._renderDimensions();\r\n        var minHeight = this._getBoundaryHeight(\"minHeight\");\r\n        var maxHeight = this._getBoundaryHeight(\"maxHeight\");\r\n        var inputHeight = $input[0].scrollHeight;\r\n        if (void 0 !== minHeight) {\r\n            inputHeight = Math.max(inputHeight, minHeight - heightDifference)\r\n        }\r\n        if (void 0 !== maxHeight) {\r\n            var adjustedMaxHeight = maxHeight - heightDifference;\r\n            var needScroll = inputHeight > adjustedMaxHeight;\r\n            inputHeight = Math.min(inputHeight, adjustedMaxHeight);\r\n            this._updateInputAutoResizeAppearance($input, !needScroll)\r\n        }\r\n        $input.css(\"height\", inputHeight);\r\n        if (autoHeightResizing) {\r\n            this._$element.css(\"height\", \"auto\")\r\n        }\r\n    },\r\n    _getBoundaryHeight: function(optionName) {\r\n        var boundaryValue = this.option(optionName);\r\n        if ((0, _type.isDefined)(boundaryValue)) {\r\n            return \"number\" === typeof boundaryValue ? boundaryValue : (0, _size.parseHeight)(boundaryValue, this._$textEditorContainer.get(0))\r\n        }\r\n    },\r\n    _renderInputType: _common.noop,\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateInputHeight()\r\n        }\r\n    },\r\n    _updateInputAutoResizeAppearance: function($input, isAutoResizeEnabled) {\r\n        if ($input) {\r\n            var autoResizeEnabled = (0, _common.ensureDefined)(isAutoResizeEnabled, this.option(\"autoResizeEnabled\"));\r\n            $input.toggleClass(TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE, autoResizeEnabled)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"autoResizeEnabled\":\r\n                this._updateInputAutoResizeAppearance(this._input(), args.value);\r\n                this._refreshEvents();\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"value\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                this._renderDimensions();\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                args.value && this._updateInputHeight();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxTextArea\", TextArea);\r\nvar _default = TextArea;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}