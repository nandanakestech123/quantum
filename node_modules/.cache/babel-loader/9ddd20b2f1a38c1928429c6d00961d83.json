{"ast":null,"code":"/**\r\n * DevExtreme (viz/polar_chart.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _common = require(\"../core/utils/common\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\n\nvar _extend = require(\"../core/utils/extend\");\n\nvar _utils = require(\"./core/utils\");\n\nvar _advanced_chart = require(\"./chart_components/advanced_chart\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _annotations = require(\"./core/annotations\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DEFAULT_PANE_NAME = \"default\";\nvar DOUBLE_PI_ANGLE = 360;\n\nvar dxPolarChart = _advanced_chart.AdvancedChart.inherit({\n  _themeSection: \"polar\",\n  _createPanes: function () {\n    this.callBase();\n    return [{\n      name: DEFAULT_PANE_NAME\n    }];\n  },\n  _checkPaneName: function () {\n    return true;\n  },\n  _getAxisRenderingOptions: function (typeSelector) {\n    var isArgumentAxis = \"argumentAxis\" === typeSelector;\n    var type = isArgumentAxis ? \"circular\" : \"linear\";\n    var useSpiderWeb = this.option(\"useSpiderWeb\");\n\n    if (useSpiderWeb) {\n      type += \"Spider\";\n    }\n\n    return {\n      axisType: \"polarAxes\",\n      drawingType: type\n    };\n  },\n  _prepareAxisOptions: function (typeSelector, axisOptions) {\n    var isArgumentAxis = \"argumentAxis\" === typeSelector;\n    var themeManager = this._themeManager;\n    var axisUserOptions = this.option(\"argumentAxis\");\n    var argumentAxisOptions = themeManager.getOptions(\"argumentAxis\", axisUserOptions) || {};\n    var startAngle = isFinite(argumentAxisOptions.startAngle) ? (0, _utils.normalizeAngle)(argumentAxisOptions.startAngle) : 0;\n    return {\n      type: this.option(\"useSpiderWeb\") && isArgumentAxis ? \"discrete\" : axisOptions.type,\n      isHorizontal: true,\n      showCustomBoundaryTicks: isArgumentAxis,\n      startAngle: startAngle,\n      endAngle: startAngle + 360\n    };\n  },\n  _optionChangesMap: {\n    useSpiderWeb: \"AXES_AND_PANES\"\n  },\n  _getExtraOptions: function () {\n    return {\n      spiderWidget: this.option(\"useSpiderWeb\")\n    };\n  },\n  _prepareToRender: function () {\n    this._appendAxesGroups();\n\n    return {};\n  },\n  _calcCanvas: function () {\n    var canvas = (0, _extend.extend)({}, this._canvas);\n    var argumentAxis = this.getArgumentAxis();\n    var margins = argumentAxis.getMargins();\n    Object.keys(margins).forEach(function (margin) {\n      return canvas[margin] = canvas[\"original\".concat(margin[0].toUpperCase()).concat(margin.slice(1))] + margins[margin];\n    });\n    return canvas;\n  },\n  _renderAxes: function (drawOptions) {\n    var that = this;\n\n    var valueAxis = that._getValueAxis();\n\n    var argumentAxis = that.getArgumentAxis();\n    argumentAxis.draw(that._canvas);\n    valueAxis.setSpiderTicks(argumentAxis.getSpiderTicks());\n\n    var canvas = that._calcCanvas();\n\n    argumentAxis.updateSize(canvas);\n    valueAxis.draw(canvas);\n    return canvas;\n  },\n  _getValueAxis: function () {\n    return this._valueAxes[0];\n  },\n  _shrinkAxes: function (sizeStorage) {\n    var valueAxis = this._getValueAxis();\n\n    var argumentAxis = this.getArgumentAxis();\n\n    if (sizeStorage && (sizeStorage.width || sizeStorage.height)) {\n      argumentAxis.hideOuterElements();\n\n      var canvas = this._calcCanvas();\n\n      argumentAxis.updateSize(canvas);\n      valueAxis.updateSize(canvas);\n    }\n  },\n  checkForMoreSpaceForPanesCanvas: function () {\n    return this.layoutManager.needMoreSpaceForPanesCanvas([{\n      canvas: this.getArgumentAxis().getCanvas()\n    }], this._isRotated());\n  },\n  _getLayoutTargets: function () {\n    return [{\n      canvas: this._canvas\n    }];\n  },\n  _getSeriesForPane: function () {\n    return this.series;\n  },\n  _applyClipRects: function () {\n    var canvasClipRectID = this._getCanvasClipRectID();\n\n    this._createClipPathForPane();\n\n    this.getArgumentAxis().applyClipRects(this._getElementsClipRectID(), canvasClipRectID);\n\n    this._getValueAxis().applyClipRects(this._getElementsClipRectID(), canvasClipRectID);\n  },\n  _createClipPathForPane: function () {\n    var that = this;\n\n    var valueAxis = that._getValueAxis();\n\n    var center = valueAxis.getCenter();\n    var radius = valueAxis.getRadius();\n    var panesClipRects = that._panesClipRects;\n    center = {\n      x: Math.round(center.x),\n      y: Math.round(center.y)\n    };\n\n    that._createClipCircle(panesClipRects.fixed, center.x, center.y, radius);\n\n    that._createClipCircle(panesClipRects.base, center.x, center.y, radius);\n\n    if (that.series.some(function (s) {\n      return s.areErrorBarsVisible();\n    })) {\n      that._createClipCircle(panesClipRects.wide, center.x, center.y, radius);\n    } else {\n      panesClipRects.wide[0] = null;\n    }\n  },\n  _createClipCircle: function (clipArray, left, top, radius) {\n    var that = this;\n    var clipCircle = clipArray[0];\n\n    if (!clipCircle) {\n      clipCircle = that._renderer.clipCircle(left, top, radius);\n      clipArray[0] = clipCircle;\n    } else {\n      clipCircle.attr({\n        cx: left,\n        cy: top,\n        r: radius\n      });\n    }\n  },\n  _applyExtraSettings: function (series) {\n    var wideClipRect = this._panesClipRects.wide[0];\n    series.setClippingParams(this._panesClipRects.base[0].id, wideClipRect && wideClipRect.id, false, false);\n  },\n  getActualAngle: function (angle) {\n    return this.getArgumentAxis().getOptions().inverted ? DOUBLE_PI_ANGLE - angle : angle;\n  },\n  getXYFromPolar: function (angle, radius, argument, value) {\n    var layoutInfo = {\n      angle: void 0,\n      radius: void 0,\n      x: void 0,\n      y: void 0\n    };\n\n    if (!(0, _type.isDefined)(angle) && !(0, _type.isDefined)(radius) && !(0, _type.isDefined)(argument) && !(0, _type.isDefined)(value)) {\n      return layoutInfo;\n    }\n\n    var argAxis = this.getArgumentAxis();\n    var startAngle = argAxis.getAngles()[0];\n    var argAngle;\n    var translatedRadius;\n\n    if ((0, _type.isDefined)(argument)) {\n      argAngle = argAxis.getTranslator().translate(argument);\n    } else {\n      if (isFinite(angle)) {\n        argAngle = this.getActualAngle(angle);\n      } else {\n        if (!(0, _type.isDefined)(angle)) {\n          argAngle = 0;\n        }\n      }\n    }\n\n    if ((0, _type.isDefined)(value)) {\n      translatedRadius = this.getValueAxis().getTranslator().translate(value);\n    } else {\n      if (isFinite(radius)) {\n        translatedRadius = radius;\n      } else {\n        if (!(0, _type.isDefined)(radius)) {\n          translatedRadius = argAxis.getRadius();\n        }\n      }\n    }\n\n    if ((0, _type.isDefined)(argAngle) && (0, _type.isDefined)(translatedRadius)) {\n      var coords = (0, _utils.convertPolarToXY)(argAxis.getCenter(), startAngle, argAngle, translatedRadius);\n      (0, _extend.extend)(layoutInfo, coords, {\n        angle: argAxis.getTranslatedAngle(argAngle),\n        radius: translatedRadius\n      });\n    }\n\n    return layoutInfo;\n  },\n  _applyPointMarkersAutoHiding: _common.noop,\n  _createScrollBar: _common.noop,\n  _isRotated: _common.noop,\n  _getCrosshairOptions: _common.noop,\n  _isLegendInside: _common.noop\n});\n\ndxPolarChart.addPlugin(_annotations.plugins.core);\ndxPolarChart.addPlugin(_annotations.plugins.polarChart);\n(0, _component_registrator.default)(\"dxPolarChart\", dxPolarChart);\nvar _default = dxPolarChart;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/polar_chart.js"],"names":["exports","default","_common","require","_component_registrator","_interopRequireDefault","_extend","_utils","_advanced_chart","_type","_annotations","obj","__esModule","DEFAULT_PANE_NAME","DOUBLE_PI_ANGLE","dxPolarChart","AdvancedChart","inherit","_themeSection","_createPanes","callBase","name","_checkPaneName","_getAxisRenderingOptions","typeSelector","isArgumentAxis","type","useSpiderWeb","option","axisType","drawingType","_prepareAxisOptions","axisOptions","themeManager","_themeManager","axisUserOptions","argumentAxisOptions","getOptions","startAngle","isFinite","normalizeAngle","isHorizontal","showCustomBoundaryTicks","endAngle","_optionChangesMap","_getExtraOptions","spiderWidget","_prepareToRender","_appendAxesGroups","_calcCanvas","canvas","extend","_canvas","argumentAxis","getArgumentAxis","margins","getMargins","Object","keys","forEach","margin","concat","toUpperCase","slice","_renderAxes","drawOptions","that","valueAxis","_getValueAxis","draw","setSpiderTicks","getSpiderTicks","updateSize","_valueAxes","_shrinkAxes","sizeStorage","width","height","hideOuterElements","checkForMoreSpaceForPanesCanvas","layoutManager","needMoreSpaceForPanesCanvas","getCanvas","_isRotated","_getLayoutTargets","_getSeriesForPane","series","_applyClipRects","canvasClipRectID","_getCanvasClipRectID","_createClipPathForPane","applyClipRects","_getElementsClipRectID","center","getCenter","radius","getRadius","panesClipRects","_panesClipRects","x","Math","round","y","_createClipCircle","fixed","base","some","s","areErrorBarsVisible","wide","clipArray","left","top","clipCircle","_renderer","attr","cx","cy","r","_applyExtraSettings","wideClipRect","setClippingParams","id","getActualAngle","angle","inverted","getXYFromPolar","argument","value","layoutInfo","isDefined","argAxis","getAngles","argAngle","translatedRadius","getTranslator","translate","getValueAxis","coords","convertPolarToXY","getTranslatedAngle","_applyPointMarkersAutoHiding","noop","_createScrollBar","_getCrosshairOptions","_isLegendInside","addPlugin","plugins","core","polarChart","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/polar_chart.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _common = require(\"../core/utils/common\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _utils = require(\"./core/utils\");\r\nvar _advanced_chart = require(\"./chart_components/advanced_chart\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _annotations = require(\"./core/annotations\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar DOUBLE_PI_ANGLE = 360;\r\nvar dxPolarChart = _advanced_chart.AdvancedChart.inherit({\r\n    _themeSection: \"polar\",\r\n    _createPanes: function() {\r\n        this.callBase();\r\n        return [{\r\n            name: DEFAULT_PANE_NAME\r\n        }]\r\n    },\r\n    _checkPaneName: function() {\r\n        return true\r\n    },\r\n    _getAxisRenderingOptions: function(typeSelector) {\r\n        var isArgumentAxis = \"argumentAxis\" === typeSelector;\r\n        var type = isArgumentAxis ? \"circular\" : \"linear\";\r\n        var useSpiderWeb = this.option(\"useSpiderWeb\");\r\n        if (useSpiderWeb) {\r\n            type += \"Spider\"\r\n        }\r\n        return {\r\n            axisType: \"polarAxes\",\r\n            drawingType: type\r\n        }\r\n    },\r\n    _prepareAxisOptions: function(typeSelector, axisOptions) {\r\n        var isArgumentAxis = \"argumentAxis\" === typeSelector;\r\n        var themeManager = this._themeManager;\r\n        var axisUserOptions = this.option(\"argumentAxis\");\r\n        var argumentAxisOptions = themeManager.getOptions(\"argumentAxis\", axisUserOptions) || {};\r\n        var startAngle = isFinite(argumentAxisOptions.startAngle) ? (0, _utils.normalizeAngle)(argumentAxisOptions.startAngle) : 0;\r\n        return {\r\n            type: this.option(\"useSpiderWeb\") && isArgumentAxis ? \"discrete\" : axisOptions.type,\r\n            isHorizontal: true,\r\n            showCustomBoundaryTicks: isArgumentAxis,\r\n            startAngle: startAngle,\r\n            endAngle: startAngle + 360\r\n        }\r\n    },\r\n    _optionChangesMap: {\r\n        useSpiderWeb: \"AXES_AND_PANES\"\r\n    },\r\n    _getExtraOptions: function() {\r\n        return {\r\n            spiderWidget: this.option(\"useSpiderWeb\")\r\n        }\r\n    },\r\n    _prepareToRender: function() {\r\n        this._appendAxesGroups();\r\n        return {}\r\n    },\r\n    _calcCanvas: function() {\r\n        var canvas = (0, _extend.extend)({}, this._canvas);\r\n        var argumentAxis = this.getArgumentAxis();\r\n        var margins = argumentAxis.getMargins();\r\n        Object.keys(margins).forEach(function(margin) {\r\n            return canvas[margin] = canvas[\"original\".concat(margin[0].toUpperCase()).concat(margin.slice(1))] + margins[margin]\r\n        });\r\n        return canvas\r\n    },\r\n    _renderAxes: function(drawOptions) {\r\n        var that = this;\r\n        var valueAxis = that._getValueAxis();\r\n        var argumentAxis = that.getArgumentAxis();\r\n        argumentAxis.draw(that._canvas);\r\n        valueAxis.setSpiderTicks(argumentAxis.getSpiderTicks());\r\n        var canvas = that._calcCanvas();\r\n        argumentAxis.updateSize(canvas);\r\n        valueAxis.draw(canvas);\r\n        return canvas\r\n    },\r\n    _getValueAxis: function() {\r\n        return this._valueAxes[0]\r\n    },\r\n    _shrinkAxes: function(sizeStorage) {\r\n        var valueAxis = this._getValueAxis();\r\n        var argumentAxis = this.getArgumentAxis();\r\n        if (sizeStorage && (sizeStorage.width || sizeStorage.height)) {\r\n            argumentAxis.hideOuterElements();\r\n            var canvas = this._calcCanvas();\r\n            argumentAxis.updateSize(canvas);\r\n            valueAxis.updateSize(canvas)\r\n        }\r\n    },\r\n    checkForMoreSpaceForPanesCanvas: function() {\r\n        return this.layoutManager.needMoreSpaceForPanesCanvas([{\r\n            canvas: this.getArgumentAxis().getCanvas()\r\n        }], this._isRotated())\r\n    },\r\n    _getLayoutTargets: function() {\r\n        return [{\r\n            canvas: this._canvas\r\n        }]\r\n    },\r\n    _getSeriesForPane: function() {\r\n        return this.series\r\n    },\r\n    _applyClipRects: function() {\r\n        var canvasClipRectID = this._getCanvasClipRectID();\r\n        this._createClipPathForPane();\r\n        this.getArgumentAxis().applyClipRects(this._getElementsClipRectID(), canvasClipRectID);\r\n        this._getValueAxis().applyClipRects(this._getElementsClipRectID(), canvasClipRectID)\r\n    },\r\n    _createClipPathForPane: function() {\r\n        var that = this;\r\n        var valueAxis = that._getValueAxis();\r\n        var center = valueAxis.getCenter();\r\n        var radius = valueAxis.getRadius();\r\n        var panesClipRects = that._panesClipRects;\r\n        center = {\r\n            x: Math.round(center.x),\r\n            y: Math.round(center.y)\r\n        };\r\n        that._createClipCircle(panesClipRects.fixed, center.x, center.y, radius);\r\n        that._createClipCircle(panesClipRects.base, center.x, center.y, radius);\r\n        if (that.series.some(function(s) {\r\n                return s.areErrorBarsVisible()\r\n            })) {\r\n            that._createClipCircle(panesClipRects.wide, center.x, center.y, radius)\r\n        } else {\r\n            panesClipRects.wide[0] = null\r\n        }\r\n    },\r\n    _createClipCircle: function(clipArray, left, top, radius) {\r\n        var that = this;\r\n        var clipCircle = clipArray[0];\r\n        if (!clipCircle) {\r\n            clipCircle = that._renderer.clipCircle(left, top, radius);\r\n            clipArray[0] = clipCircle\r\n        } else {\r\n            clipCircle.attr({\r\n                cx: left,\r\n                cy: top,\r\n                r: radius\r\n            })\r\n        }\r\n    },\r\n    _applyExtraSettings: function(series) {\r\n        var wideClipRect = this._panesClipRects.wide[0];\r\n        series.setClippingParams(this._panesClipRects.base[0].id, wideClipRect && wideClipRect.id, false, false)\r\n    },\r\n    getActualAngle: function(angle) {\r\n        return this.getArgumentAxis().getOptions().inverted ? DOUBLE_PI_ANGLE - angle : angle\r\n    },\r\n    getXYFromPolar: function(angle, radius, argument, value) {\r\n        var layoutInfo = {\r\n            angle: void 0,\r\n            radius: void 0,\r\n            x: void 0,\r\n            y: void 0\r\n        };\r\n        if (!(0, _type.isDefined)(angle) && !(0, _type.isDefined)(radius) && !(0, _type.isDefined)(argument) && !(0, _type.isDefined)(value)) {\r\n            return layoutInfo\r\n        }\r\n        var argAxis = this.getArgumentAxis();\r\n        var startAngle = argAxis.getAngles()[0];\r\n        var argAngle;\r\n        var translatedRadius;\r\n        if ((0, _type.isDefined)(argument)) {\r\n            argAngle = argAxis.getTranslator().translate(argument)\r\n        } else {\r\n            if (isFinite(angle)) {\r\n                argAngle = this.getActualAngle(angle)\r\n            } else {\r\n                if (!(0, _type.isDefined)(angle)) {\r\n                    argAngle = 0\r\n                }\r\n            }\r\n        }\r\n        if ((0, _type.isDefined)(value)) {\r\n            translatedRadius = this.getValueAxis().getTranslator().translate(value)\r\n        } else {\r\n            if (isFinite(radius)) {\r\n                translatedRadius = radius\r\n            } else {\r\n                if (!(0, _type.isDefined)(radius)) {\r\n                    translatedRadius = argAxis.getRadius()\r\n                }\r\n            }\r\n        }\r\n        if ((0, _type.isDefined)(argAngle) && (0, _type.isDefined)(translatedRadius)) {\r\n            var coords = (0, _utils.convertPolarToXY)(argAxis.getCenter(), startAngle, argAngle, translatedRadius);\r\n            (0, _extend.extend)(layoutInfo, coords, {\r\n                angle: argAxis.getTranslatedAngle(argAngle),\r\n                radius: translatedRadius\r\n            })\r\n        }\r\n        return layoutInfo\r\n    },\r\n    _applyPointMarkersAutoHiding: _common.noop,\r\n    _createScrollBar: _common.noop,\r\n    _isRotated: _common.noop,\r\n    _getCrosshairOptions: _common.noop,\r\n    _isLegendInside: _common.noop\r\n});\r\ndxPolarChart.addPlugin(_annotations.plugins.core);\r\ndxPolarChart.addPlugin(_annotations.plugins.polarChart);\r\n(0, _component_registrator.default)(\"dxPolarChart\", dxPolarChart);\r\nvar _default = dxPolarChart;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}