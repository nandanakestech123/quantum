{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\carthome.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { NormalButton, NormalSelect, NormalModal, NormalInput } from 'component/common';\nimport { InputSearch, TableWrapper } from 'component/common';\nimport { Cart } from '.';\nimport './style.scss'; // import { SalonProduct } from './salonProduct';\n// import { Services } from './services';\n// import { Courses } from './courses';\n// import { RetailProduct } from './retailProduct'\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm } from 'redux/actions/common';\nimport closeIcon from 'assets/images/close.png';\nimport { dateFormat } from 'service/helperFunctions';\nimport _ from 'lodash';\nexport class CartHomeClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: false,\n      currentValue: 0,\n      navLinks: [],\n      customerList: [],\n      branchList: [],\n      isOpenModal: false,\n      customerDetail: {\n        branchId: \"\",\n        cust_noid: \"\"\n      }\n    };\n\n    this.componentDidMount = () => {\n      let {\n        productCard,\n        branchList\n      } = this.state;\n      this.props.getCommonApi(`treatment/Outlet/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            branchList.push({\n              value: value.id,\n              label: value.itemsite_desc\n            });\n          }\n\n          this.setState({\n            branchList\n          }); // console.log(brachList, \"jhksdfkjsdhfks\")\n        }\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        customerDetail,\n        customerList\n      } = this.state;\n      console.log(\"uihwkjrwkej\", name, value);\n      customerDetail[name] = value;\n      await this.setState({\n        customerDetail\n      });\n\n      if (name === \"branchId\") {\n        this.props.getCommonApi(`custappt/?Outlet=${value}`).then(key => {\n          let {\n            status,\n            data\n          } = key;\n\n          if (status === 200) {\n            for (let value of data) {\n              customerList.push({\n                value: value.id,\n                label: value.cust_name + \" | \" + value.cust_phone1 + \" | \" + value.cust_code\n              });\n            }\n\n            this.setState({\n              customerList\n            });\n          }\n        });\n      }\n\n      this.props.updateForm('selected_customer', customerDetail);\n    };\n\n    this.handleClick = key => {\n      let {\n        active,\n        currentValue\n      } = this.state;\n      this.setState({\n        active: true,\n        currentValue: key\n      });\n    };\n\n    this.handleSearch = event => {\n      event.persist();\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          let data = {\n            search: searchString\n          }; // this.queryHandler(data)\n\n          let {\n            customerList,\n            customerDetail\n          } = this.state;\n          this.props.getCommonApi(`custappt/?Outlet=${customerDetail.branchId}&search=${searchString}`).then(key => {\n            let {\n              status,\n              data\n            } = key;\n\n            if (status === 200) {\n              // for (let value of data) {\n              //     customerList.push({ value: value.id, label: value.emp_name })\n              // }\n              this.setState({\n                customerList: data\n              });\n            }\n          });\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleCloseDialog = () => {\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.handleSelectCustomer = async data => {\n      let {\n        customerList,\n        customerDetail,\n        servicesDetail\n      } = this.state;\n      customerDetail['cust_noid'] = data.id;\n      customerDetail['cust_name'] = data.cust_name;\n      await this.setState({\n        customerDetail\n      });\n      this.props.updateForm('selected_customer', customerDetail);\n    };\n  }\n\n  render() {\n    let {\n      navLinks,\n      active,\n      currentValue,\n      branchList,\n      customerList\n    } = this.state;\n    let {\n      servicesDetail,\n      isOpenModal\n    } = this.state;\n    let {\n      selected_cstomer\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-2 mb-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-0 mt-3 fs-18 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Select Branch\"), /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholder: \"select\",\n      options: branchList,\n      value: selected_cstomer.branchId,\n      name: \"branchId\",\n      onChange: this.handleChange,\n      className: \"customer-name p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" pl-0 mt-3 fs-18 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(NormalInput // placeholder=\"Enter here\"\n    // options={siteList}\n    , {\n      value: selected_cstomer.cust_name,\n      name: \"cust_name\",\n      onClick: () => this.setState({\n        isOpenModal: true\n      }) // onChange={this.handleSearch}\n      ,\n      className: \"search customer-name px-3 p-0\" // disabled\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \" fs-15 mt-5\",\n      label: \"Catalog\",\n      onClick: () => this.props.history.push('/admin/catalog'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-0 position-relative cart-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Cart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"multiple-appointment select-category\",\n      modal: isOpenModal,\n      handleModal: this.handleCloseDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleCloseDialog,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-2 mb-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pl-0 mt-3 fs-18 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"input\", {\n      // placeholder=\"Enter here\"\n      // options={siteList}\n      value: selected_cstomer.cust_name,\n      name: \"cust_name\" // onClick={() => this.setState({ isOpenModal: true })}\n      ,\n      onChange: this.handleSearch,\n      className: \"search px-3 p-0\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pl-0 mt-3 fs-18 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"input\", {\n      // placeholder=\"Enter here\"\n      // options={siteList}\n      // value={treatmentField.treatment}\n      name: \"treatment\" // onClick={() => this.setState({ isOpenModal: true })}\n      ,\n      onChange: this.handleSearch,\n      className: \"search px-3 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 table-header w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, \"Cust Code\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \"Email\")), customerList.length > 0 ? customerList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row m-0 table-body w-100\",\n        onClick: () => this.handleSelectCustomer(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, item.cust_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, item.cust_phone1), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, item.cust_code), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, item.cust_email));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 20\n      }\n    }, \"No Data are available\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex create m-5 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\" // mainbg={true}\n      ,\n      className: \"col-12 fs-15 multiple-customer\",\n      label: \"Continue\",\n      outline: true,\n      onClick: this.handleCloseDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // customerDetail: state.appointment.customerDetail,\n  selected_cstomer: state.common.selected_cstomer\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm\n  }, dispatch);\n};\n\nexport const CartHome = connect(mapStateToProps, mapDispatchToProps)(CartHomeClass);","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Cart/carthome.js"],"names":["React","Component","NavLink","NormalButton","NormalSelect","NormalModal","NormalInput","InputSearch","TableWrapper","Cart","connect","bindActionCreators","getCommonApi","updateForm","closeIcon","dateFormat","_","CartHomeClass","state","active","currentValue","navLinks","customerList","branchList","isOpenModal","customerDetail","branchId","cust_noid","componentDidMount","productCard","props","then","key","status","data","value","push","id","label","itemsite_desc","setState","handleChange","target","name","console","log","cust_name","cust_phone1","cust_code","handleClick","handleSearch","event","persist","debouncedFn","debounce","searchString","search","handleCloseDialog","handleSelectCustomer","servicesDetail","render","selected_cstomer","history","length","map","item","index","cust_email","mapStateToProps","common","mapDispatchToProps","dispatch","CartHome"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { NormalButton, NormalSelect, NormalModal, NormalInput } from 'component/common';\r\nimport { InputSearch, TableWrapper } from 'component/common';\r\nimport { Cart } from '.'\r\nimport './style.scss'\r\n// import { SalonProduct } from './salonProduct';\r\n// import { Services } from './services';\r\n// import { Courses } from './courses';\r\n// import { RetailProduct } from './retailProduct'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, updateForm } from 'redux/actions/common';\r\nimport closeIcon from 'assets/images/close.png';\r\nimport { dateFormat } from 'service/helperFunctions';\r\nimport _ from 'lodash';\r\n\r\nexport class CartHomeClass extends Component {\r\n  state = {\r\n    active: false,\r\n    currentValue: 0,\r\n    navLinks: [\r\n\r\n    ],\r\n    customerList: [],\r\n    branchList: [],\r\n    isOpenModal: false,\r\n    customerDetail: {\r\n      branchId: \"\",\r\n      cust_noid: \"\"\r\n  },\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let { productCard, branchList } = this.state;\r\n   \r\n    this.props.getCommonApi(`treatment/Outlet/`).then((key) => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n            for (let value of data) {\r\n                branchList.push({ value: value.id, label: value.itemsite_desc })\r\n            }\r\n            this.setState({ branchList })\r\n            // console.log(brachList, \"jhksdfkjsdhfks\")\r\n        }\r\n    })\r\n}\r\n\r\nhandleChange = async ({ target: { value, name } }) => {\r\n  let { customerDetail, customerList } = this.state;\r\n  console.log(\"uihwkjrwkej\", name, value)\r\n  customerDetail[name] = value;\r\n  await this.setState({\r\n      customerDetail,\r\n  });\r\n  if (name === \"branchId\") {\r\n      this.props.getCommonApi(`custappt/?Outlet=${value}`).then((key) => {\r\n          let { status, data } = key;\r\n          if (status === 200) {\r\n              for (let value of data) {\r\n                  customerList.push({ value: value.id, label: value.cust_name + \" | \" + value.cust_phone1 + \" | \" + value.cust_code })\r\n              }\r\n              this.setState({ customerList })\r\n          }\r\n      }) \r\n  }\r\n  this.props.updateForm('selected_customer', customerDetail)\r\n}\r\n\r\n  handleClick = (key) => {\r\n    let { active, currentValue } = this.state\r\n    this.setState({\r\n      active: true,\r\n      currentValue: key\r\n    })\r\n  }\r\n\r\n  handleSearch = (event) => {\r\n    event.persist();\r\n\r\n    if (!this.debouncedFn) {\r\n        this.debouncedFn = _.debounce(() => {\r\n            let searchString = event.target.value;\r\n            let data = { search: searchString }\r\n            // this.queryHandler(data)\r\n            let { customerList, customerDetail } = this.state;\r\n            this.props.getCommonApi(`custappt/?Outlet=${customerDetail.branchId}&search=${searchString}`).then((key) => {\r\n                \r\n                let { status, data } = key;\r\n                if (status === 200) {\r\n                    // for (let value of data) {\r\n                    //     customerList.push({ value: value.id, label: value.emp_name })\r\n                    // }\r\n                    this.setState({ customerList: data })\r\n                }\r\n            })\r\n        }, 500);\r\n    }\r\n    this.debouncedFn();\r\n}\r\n\r\nhandleCloseDialog = () => {\r\n    this.setState({\r\n        isOpenModal:false,\r\n    })\r\n}\r\n\r\nhandleSelectCustomer = async(data) => {\r\n  let { customerList, customerDetail, servicesDetail } = this.state;\r\n  customerDetail['cust_noid'] = data.id;\r\n  customerDetail['cust_name'] = data.cust_name;\r\n  await this.setState({customerDetail})\r\n  this.props.updateForm('selected_customer', customerDetail)\r\n}\r\n\r\n  render() {\r\n    let { navLinks, active, currentValue, branchList, customerList } = this.state\r\n    let { servicesDetail, isOpenModal } = this.state;\r\n    let { selected_cstomer } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"cart-section\">\r\n        \r\n        <div className=\"row mt-2 mb-5 mx-3\">\r\n          <div className=\"col-10\">\r\n          {/* {console.log(\"safasdfasdf\", this.props)} */}\r\n              <div className=\"pl-0 mt-3 fs-18 py-2\">\r\n                Select Branch\r\n            </div>\r\n              <NormalSelect\r\n                placeholder=\"select\"\r\n                options={branchList}\r\n                value={selected_cstomer.branchId}\r\n                name=\"branchId\"\r\n                onChange={this.handleChange}\r\n                className=\"customer-name p-0\"\r\n              />\r\n              <div className=\" pl-0 mt-3 fs-18 py-2\">\r\n                Customer\r\n            </div>\r\n              <NormalInput\r\n                // placeholder=\"Enter here\"\r\n                // options={siteList}\r\n                value={selected_cstomer.cust_name}\r\n                name=\"cust_name\"\r\n                onClick={() => this.setState({ isOpenModal: true })}\r\n                // onChange={this.handleSearch}\r\n                className=\"search customer-name px-3 p-0\"\r\n                // disabled\r\n              />\r\n\r\n              <div className=\"confirm\">\r\n                <NormalButton\r\n                  mainbg={true}\r\n                  className=\" fs-15 mt-5\"\r\n                  label=\"Catalog\"\r\n                  onClick={() => this.props.history.push('/admin/catalog')}\r\n                />\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"pr-0 position-relative cart-bar\">\r\n            <Cart />\r\n          </div>\r\n        </div>\r\n       \r\n          <NormalModal className={\"multiple-appointment select-category\"} modal={isOpenModal} handleModal={this.handleCloseDialog}>\r\n            <img onClick={this.handleCloseDialog} className=\"close\" src={closeIcon} alt=\"\" />\r\n            <div className=\"row mt-2 mb-5 mx-3\">\r\n             \r\n              <div className=\"col-12 pl-0 mt-3 fs-18 py-2\">\r\n                Customer\r\n                        </div>\r\n              <input\r\n                // placeholder=\"Enter here\"\r\n                // options={siteList}\r\n                value={selected_cstomer.cust_name}\r\n                name=\"cust_name\"\r\n                // onClick={() => this.setState({ isOpenModal: true })}\r\n                onChange={this.handleSearch}\r\n                className=\"search px-3 p-0\"\r\n                disabled\r\n              />\r\n             \r\n              <div className=\"col-12 pl-0 mt-3 fs-18 py-2\">\r\n                Search\r\n                        </div>\r\n              <input\r\n                // placeholder=\"Enter here\"\r\n                // options={siteList}\r\n                // value={treatmentField.treatment}\r\n                name=\"treatment\"\r\n                // onClick={() => this.setState({ isOpenModal: true })}\r\n                onChange={this.handleSearch}\r\n                className=\"search px-3 p-0\"\r\n              />\r\n\r\n              <div className=\"row mt-4 table-header w-100 m-0\">\r\n                <div className=\"col-2\">Name</div>\r\n                <div className=\"col-2\">Phone</div>\r\n                <div className=\"col-3\">Cust Code</div>\r\n                <div className=\"col-5\">Email</div>\r\n              </div>\r\n              {customerList.length > 0 ? customerList.map((item, index) => {\r\n                return (\r\n                  <div className=\"row m-0 table-body w-100\" onClick={() => this.handleSelectCustomer(item)} key={index}>\r\n                    <div className=\"col-2\">{item.cust_name}</div>\r\n                    <div className=\"col-2\">{item.cust_phone1}</div>\r\n                    <div className=\"col-3\">{item.cust_code}</div>\r\n                    <div className=\"col-5\">{item.cust_email}</div>\r\n                  </div>\r\n                )\r\n              }) : <div className=\"text-center w-100\">\r\n                  No Data are available\r\n                        </div>}\r\n              <div className=\"d-flex create m-5 w-100\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  // mainbg={true}\r\n                  className=\"col-12 fs-15 multiple-customer\"\r\n                  label=\"Continue\"\r\n                  outline={true}\r\n                  onClick={this.handleCloseDialog}\r\n                />\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </NormalModal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // customerDetail: state.appointment.customerDetail,\r\n  selected_cstomer: state.common.selected_cstomer,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    // getCustomer,\r\n    getCommonApi,\r\n    updateForm\r\n  }, dispatch)\r\n}\r\n\r\nexport const CartHome = connect(mapStateToProps, mapDispatchToProps)(CartHomeClass)"]},"metadata":{},"sourceType":"module"}