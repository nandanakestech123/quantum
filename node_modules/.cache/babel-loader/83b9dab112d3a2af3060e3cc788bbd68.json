{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Appointment\\\\ListAppointment\\\\Scheduler\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { SchedulerModal } from \"component/common/Plugins\"; // import BigSchedulerModal from 'component/common/Plugins/BigScheduler';\n\nimport { NormalInput, NormalSelect, NormalButton, NormalDate, NormalModal } from \"component/common\";\nimport { getCustomer, getCommonApi, commonDeleteApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\"; // import timeOption from 'data/timeOption.json'\n\nimport { dateFormat } from \"service/helperFunctions\";\nimport { history } from \"helpers\";\nimport \"./style.scss\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { CreateAppointment, updateForm } from \"redux/actions/appointment\";\nconst data = [{\n  start_date: \"2020-06-09 4:00\",\n  end_date: \"2020-06-09 6:00\",\n  text: \"Event 1\",\n  id: 1\n}, {\n  start_date: \"2020-06-11 8:00\",\n  end_date: \"2020-06-11 10:00\",\n  text: \"Event 2\",\n  id: 2\n}, {\n  start_date: \"2020-06-12 12:00\",\n  end_date: \"2018-06-12 14:00\",\n  text: \"dblclick me!\",\n  id: 3\n}];\nexport class SchedulerClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appointment: [{\n        time: \"10.00 AM,\",\n        date: \"Wednesday, 1st April, 2020\",\n        name: \"Benjamin\",\n        treatment: \"Head Massage\"\n      }, {\n        time: \"12.00 PM,\",\n        date: \"Wednesday, 1st April, 2020\",\n        name: \"Daniel\",\n        treatment: \"Pedicure\"\n      }, {\n        time: \"1.00 PM,\",\n        date: \"Wednesday, 1st April, 2020\",\n        name: \"John\",\n        treatment: \"Haircut\"\n      }, {\n        time: \"2.00 PM,\",\n        date: \"Wednesday, 1st April, 2020\",\n        name: \"Josua\",\n        treatment: \"Manicure\"\n      }, {\n        time: \"4.00 PM, \",\n        date: \"Wednesday, 1st April, 2020\",\n        name: \"Derrik\",\n        treatment: \"Body Massage\"\n      }],\n      events: [// {\n        //     \"start_date\": \"2021-01-06 3:30\",\n        //     \"end_date\": \"2021-01-06 5:00\",\n        //     \"text\": \"Korean Anti Aging\",\n        //     \"id\": 199787,\n        //     \"user_id\": 171,\n        //     \"status\": \"Booking\",\n        //     \"color\": \"#f0b5ec\",\n        //     \"title\": \"divya test\",\n        //     \"staff_name\": \"HAN HAI YAN\"\n        // }\n      ],\n      brachList: [],\n      formField: {\n        branchId: \"\",\n        time: \"\"\n      },\n      list: [],\n      filterDate: new Date(),\n      filterType: \"day\",\n      selectedId: \"\"\n    };\n\n    this.componentWillMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n      let {\n        brachList,\n        appointment,\n        formField,\n        filterDate\n      } = this.state;\n      this.props.getCommonApi(`treatment/Outlet/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            brachList.push({\n              value: value.id,\n              label: value.itemsite_desc\n            });\n          }\n\n          this.setState({\n            brachList\n          }); // console.log(brachList, \"jhksdfkjsdhfks\")\n        }\n      });\n      this.getAvailability();\n      this.getAppointment();\n    };\n\n    this.getAvailability = () => {\n      let {\n        filterDate\n      } = this.state;\n      this.props.getCommonApi(`staffsavailable/?Appt_date=${dateFormat(filterDate, \"yyyy-mm-dd\")}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          // for (let value of data) {\n          //     staffList.push({ value: value.id, label: value.emp_name })\n          // }\n          this.setState({\n            list: data\n          });\n        }\n      });\n    };\n\n    this.handleAppointmentOpen = (id, e) => {\n      console.log(e, id, \"hgjsydfisuyfsdfm ==== handleAppointmentOpen\");\n    };\n\n    this.getHoursFromDate = date => {\n      let hour = date.getHours();\n      let minute = date.getMinutes();\n      let hours = hour > 9 ? hour : \"0\" + hour;\n      let minutes;\n\n      if (minute < 15) {\n        minutes = \"00\";\n      } else if (minute >= 15 && minute < 30) {\n        minutes = \"15\";\n      } else if (minute >= 30 && minute < 45) {\n        minutes = \"30\";\n      } else if (minute >= 45 && minute < 59) {\n        minutes = \"45\";\n      }\n\n      return hours + \":\" + minutes;\n    };\n\n    this.handleEmptyEvent = async (date, e) => {\n      debugger;\n      let {\n        customerDetail\n      } = this.props;\n      let {\n        formField\n      } = this.state; // if (this.validator.allValid()) {\n\n      let time = new Date(date);\n      formField[\"time\"] = this.getHoursFromDate(time);\n      formField[\"date\"] = date;\n      await this.setState({\n        formField\n      });\n      console.log(date, e, \"hgjsydfisuyfsdfm ==== handleEmptyEvent\", time.getHours);\n      await this.props.updateForm(\"basicApptDetail\", formField);\n      history.push(`/admin/appointment/create`); // console.log(date, e, \"hgjsydfisuyfsdfm ====\");\n      // } else {\n      //     this.validator.showMessages();\n      // }\n    };\n\n    this.getAppointment = () => {\n      let {\n        brachList,\n        events,\n        formField,\n        filterType,\n        filterDate\n      } = this.state;\n      this.props.getCommonApi(`appointmentcalender/?date=${dateFormat(filterDate)}&check=${filterType}`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          events = [];\n          await this.setState({\n            events: null\n          });\n          events = data;\n          await this.setState({\n            events\n          }); // console.log(events, \"jhksdfkjsdhfks\", key)\n        }\n      });\n    };\n\n    this.handleChangeFilter = async (prevMode, prevDate, newMode, newDate) => {\n      let {\n        filterDate,\n        filterType\n      } = this.state;\n      filterDate = newDate;\n      filterType = newMode;\n      await this.setState({\n        filterDate,\n        filterType\n      });\n      console.log(\"dfhgfhjhjghjdfhg\", prevMode, prevDate, newMode, newDate);\n\n      if (prevMode !== newMode || prevDate !== newDate) {\n        this.getAvailability();\n        this.getAppointment();\n      }\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formField\n      } = this.state;\n      formField[name] = value;\n      await this.setState({\n        formField\n      });\n\n      if (name === \"branchId\") {\n        this.getAvailability();\n        this.getAppointment();\n      } // console.log(formField, \"afasfasdfdfasd\")\n\n\n      this.props.updateForm(\"basicApptDetail\", formField);\n    };\n\n    this.handleDelete = async (id, event) => {\n      let {\n        selectedId\n      } = this.state;\n      console.log(id, \"===afasfasdfdfasd=====\", selectedId);\n\n      if (id !== selectedId) {\n        await this.setState({\n          selectedId: id\n        });\n        await this.props.commonDeleteApi(`appointment/${id}/`).then(res => {});\n      }\n    };\n\n    this.openDetail = id => {\n      history.push(`/admin/appointment/${id}/detail`);\n    };\n\n    this.handleOpenStaff = (one, two, three) => {\n      console.log(\"namdfsfgsghsfghf\", one, two, three);\n      let {\n        filterDate\n      } = this.state;\n      this.props.handleOpen(filterDate);\n    };\n  }\n\n  render() {\n    let {\n      appointment,\n      brachList,\n      branchId,\n      formField,\n      list,\n      events,\n      filterType,\n      filterDate\n    } = this.state;\n    console.log(list[appointment]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 pl-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"position-relative scheduler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"schedule-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, \"Today's Appointments\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment appointment-available-staff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, list && list.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 text-left detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    }, data.appointment.map((app, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-message mb-0 fs-10 fw-400 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }, app.time), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-message mb-0 fs-12 col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, app.cust_name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 text-left detail mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-message mb-0 col-5 text-uppercase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 23\n      }\n    }, data.emp_name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-message mb-0 col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 23\n      }\n    }, data.services))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border-bottom-line mx-3 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }))))), events ? /*#__PURE__*/React.createElement(SchedulerModal, {\n      events: events,\n      onClick: (id, e) => this.handleAppointmentOpen(id, e),\n      onEmptyClick: (date, e) => this.handleEmptyEvent(date, e),\n      handleChangeFilter: this.handleChangeFilter,\n      filterType: filterType,\n      filterDate: filterDate,\n      onDeleteEvent: this.handleDelete,\n      openDetail: this.openDetail,\n      openStaffView: this.handleOpenStaff,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerDetail: state.appointment.customerDetail,\n  customerList: state.common.customerList,\n  multipleCustomerForm: state.appointment.multipleCustomerForm\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCustomer,\n    getCommonApi,\n    updateForm,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const Scheduler = connect(mapStateToProps, mapDispatchToProps)(SchedulerClass);","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Appointment/ListAppointment/Scheduler/index.js"],"names":["React","Component","SchedulerModal","NormalInput","NormalSelect","NormalButton","NormalDate","NormalModal","getCustomer","getCommonApi","commonDeleteApi","connect","bindActionCreators","dateFormat","history","SimpleReactValidator","CreateAppointment","updateForm","data","start_date","end_date","text","id","SchedulerClass","state","appointment","time","date","name","treatment","events","brachList","formField","branchId","list","filterDate","Date","filterType","selectedId","componentWillMount","validator","element","message","autoForceUpdate","props","then","key","status","value","push","label","itemsite_desc","setState","getAvailability","getAppointment","handleAppointmentOpen","e","console","log","getHoursFromDate","hour","getHours","minute","getMinutes","hours","minutes","handleEmptyEvent","customerDetail","handleChangeFilter","prevMode","prevDate","newMode","newDate","handleChange","target","handleDelete","event","res","openDetail","handleOpenStaff","one","two","three","handleOpen","render","map","index","app","cust_name","emp_name","services","mapStateToProps","customerList","common","multipleCustomerForm","mapDispatchToProps","dispatch","Scheduler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SchedulerModal } from \"component/common/Plugins\";\r\n// import BigSchedulerModal from 'component/common/Plugins/BigScheduler';\r\nimport {\r\n  NormalInput,\r\n  NormalSelect,\r\n  NormalButton,\r\n  NormalDate,\r\n  NormalModal,\r\n} from \"component/common\";\r\nimport {\r\n  getCustomer,\r\n  getCommonApi,\r\n  commonDeleteApi,\r\n} from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n// import timeOption from 'data/timeOption.json'\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { history } from \"helpers\";\r\nimport \"./style.scss\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { CreateAppointment, updateForm } from \"redux/actions/appointment\";\r\n\r\nconst data = [\r\n  {\r\n    start_date: \"2020-06-09 4:00\",\r\n    end_date: \"2020-06-09 6:00\",\r\n    text: \"Event 1\",\r\n    id: 1,\r\n  },\r\n  {\r\n    start_date: \"2020-06-11 8:00\",\r\n    end_date: \"2020-06-11 10:00\",\r\n    text: \"Event 2\",\r\n    id: 2,\r\n  },\r\n  {\r\n    start_date: \"2020-06-12 12:00\",\r\n    end_date: \"2018-06-12 14:00\",\r\n    text: \"dblclick me!\",\r\n    id: 3,\r\n  },\r\n];\r\n\r\nexport class SchedulerClass extends Component {\r\n  state = {\r\n    appointment: [\r\n      {\r\n        time: \"10.00 AM,\",\r\n        date: \"Wednesday, 1st April, 2020\",\r\n        name: \"Benjamin\",\r\n        treatment: \"Head Massage\",\r\n      },\r\n      {\r\n        time: \"12.00 PM,\",\r\n        date: \"Wednesday, 1st April, 2020\",\r\n        name: \"Daniel\",\r\n        treatment: \"Pedicure\",\r\n      },\r\n      {\r\n        time: \"1.00 PM,\",\r\n        date: \"Wednesday, 1st April, 2020\",\r\n        name: \"John\",\r\n        treatment: \"Haircut\",\r\n      },\r\n      {\r\n        time: \"2.00 PM,\",\r\n        date: \"Wednesday, 1st April, 2020\",\r\n        name: \"Josua\",\r\n        treatment: \"Manicure\",\r\n      },\r\n      {\r\n        time: \"4.00 PM, \",\r\n        date: \"Wednesday, 1st April, 2020\",\r\n        name: \"Derrik\",\r\n        treatment: \"Body Massage\",\r\n      },\r\n    ],\r\n    events: [\r\n      // {\r\n      //     \"start_date\": \"2021-01-06 3:30\",\r\n      //     \"end_date\": \"2021-01-06 5:00\",\r\n      //     \"text\": \"Korean Anti Aging\",\r\n      //     \"id\": 199787,\r\n      //     \"user_id\": 171,\r\n      //     \"status\": \"Booking\",\r\n      //     \"color\": \"#f0b5ec\",\r\n      //     \"title\": \"divya test\",\r\n      //     \"staff_name\": \"HAN HAI YAN\"\r\n      // }\r\n    ],\r\n    brachList: [],\r\n    formField: {\r\n      branchId: \"\",\r\n      time: \"\",\r\n    },\r\n    list: [],\r\n    filterDate: new Date(),\r\n    filterType: \"day\",\r\n    selectedId: \"\",\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n    let { brachList, appointment, formField, filterDate } = this.state;\r\n    this.props.getCommonApi(`treatment/Outlet/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          brachList.push({ value: value.id, label: value.itemsite_desc });\r\n        }\r\n        this.setState({ brachList });\r\n        // console.log(brachList, \"jhksdfkjsdhfks\")\r\n      }\r\n    });\r\n    this.getAvailability();\r\n    this.getAppointment();\r\n  };\r\n\r\n  getAvailability = () => {\r\n    let { filterDate } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `staffsavailable/?Appt_date=${dateFormat(filterDate, \"yyyy-mm-dd\")}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          // for (let value of data) {\r\n          //     staffList.push({ value: value.id, label: value.emp_name })\r\n          // }\r\n          this.setState({ list: data });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleAppointmentOpen = (id, e) => {\r\n    console.log(e, id, \"hgjsydfisuyfsdfm ==== handleAppointmentOpen\");\r\n  };\r\n  getHoursFromDate = date => {\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let hours = hour > 9 ? hour : \"0\" + hour;\r\n    let minutes;\r\n    if (minute < 15) {\r\n      minutes = \"00\";\r\n    } else if (minute >= 15 && minute < 30) {\r\n      minutes = \"15\";\r\n    } else if (minute >= 30 && minute < 45) {\r\n      minutes = \"30\";\r\n    } else if (minute >= 45 && minute < 59) {\r\n      minutes = \"45\";\r\n    }\r\n    return hours + \":\" + minutes;\r\n  };\r\n\r\n  handleEmptyEvent = async (date, e) => {\r\n    debugger;\r\n    let { customerDetail } = this.props;\r\n    let { formField } = this.state;\r\n    // if (this.validator.allValid()) {\r\n    let time = new Date(date);\r\n\r\n    formField[\"time\"] = this.getHoursFromDate(time);\r\n    formField[\"date\"] = date;\r\n    await this.setState({ formField });\r\n    console.log(\r\n      date,\r\n      e,\r\n      \"hgjsydfisuyfsdfm ==== handleEmptyEvent\",\r\n      time.getHours\r\n    );\r\n    await this.props.updateForm(\"basicApptDetail\", formField);\r\n    history.push(`/admin/appointment/create`);\r\n    // console.log(date, e, \"hgjsydfisuyfsdfm ====\");\r\n    // } else {\r\n    //     this.validator.showMessages();\r\n    // }\r\n  };\r\n\r\n  getAppointment = () => {\r\n    let { brachList, events, formField, filterType, filterDate } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `appointmentcalender/?date=${dateFormat(\r\n          filterDate\r\n        )}&check=${filterType}`\r\n      )\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          events = [];\r\n          await this.setState({ events: null });\r\n          events = data;\r\n          await this.setState({ events });\r\n          // console.log(events, \"jhksdfkjsdhfks\", key)\r\n        }\r\n      });\r\n  };\r\n  handleChangeFilter = async (prevMode, prevDate, newMode, newDate) => {\r\n    let { filterDate, filterType } = this.state;\r\n    filterDate = newDate;\r\n    filterType = newMode;\r\n    await this.setState({\r\n      filterDate,\r\n      filterType,\r\n    });\r\n    console.log(\"dfhgfhjhjghjdfhg\", prevMode, prevDate, newMode, newDate);\r\n    if (prevMode !== newMode || prevDate !== newDate) {\r\n      this.getAvailability();\r\n      this.getAppointment();\r\n    }\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formField } = this.state;\r\n    formField[name] = value;\r\n    await this.setState({\r\n      formField,\r\n    });\r\n    if (name === \"branchId\") {\r\n      this.getAvailability();\r\n      this.getAppointment();\r\n    }\r\n    // console.log(formField, \"afasfasdfdfasd\")\r\n    this.props.updateForm(\"basicApptDetail\", formField);\r\n  };\r\n\r\n  handleDelete = async (id, event) => {\r\n    let { selectedId } = this.state;\r\n    console.log(id, \"===afasfasdfdfasd=====\", selectedId);\r\n    if (id !== selectedId) {\r\n      await this.setState({\r\n        selectedId: id,\r\n      });\r\n      await this.props.commonDeleteApi(`appointment/${id}/`).then(res => {});\r\n    }\r\n  };\r\n\r\n  openDetail = id => {\r\n    history.push(`/admin/appointment/${id}/detail`);\r\n  };\r\n\r\n  handleOpenStaff = (one, two, three) => {\r\n    console.log(\"namdfsfgsghsfghf\", one, two, three);\r\n    let { filterDate } = this.state;\r\n    this.props.handleOpen(filterDate);\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      appointment,\r\n      brachList,\r\n      branchId,\r\n      formField,\r\n      list,\r\n      events,\r\n      filterType,\r\n      filterDate,\r\n    } = this.state;\r\n    console.log(list[appointment]);\r\n    return (\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-3 pl-0 \">\r\n          <div className=\"position-relative scheduler\">\r\n            <div className=\"schedule-label\">Today's Appointments</div>\r\n            {/* <span className=\"icon-down-blue clip-icon\"></span> */}\r\n          </div>\r\n          <div className=\"appointment appointment-available-staff\">\r\n            {list &&\r\n              list.map((data, index) => (\r\n                <div key={index}>\r\n                  <div className=\"col-12 text-left detail\">\r\n                    {data.appointment.map((app, index) => (\r\n                      <div className=\"d-flex flex-wrap\" key={index}>\r\n                        <div className=\"head-message mb-0 fs-10 fw-400 col-5\">\r\n                          {app.time}\r\n                        </div>\r\n                        <div className=\"head-message mb-0 fs-12 col-7\">\r\n                          {app.cust_name}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"col-12 text-left detail mt-2\">\r\n                    <div className=\"d-flex flex-wrap\">\r\n                      <div className=\"head-message mb-0 col-5 text-uppercase\">\r\n                        {data.emp_name}\r\n                      </div>\r\n                      <div className=\"head-message mb-0 col-7\">\r\n                        {data.services}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"border-bottom-line mx-3 mt-3\"></div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n\r\n        {events ? (\r\n          <SchedulerModal\r\n            events={events}\r\n            onClick={(id, e) => this.handleAppointmentOpen(id, e)}\r\n            onEmptyClick={(date, e) => this.handleEmptyEvent(date, e)}\r\n            handleChangeFilter={this.handleChangeFilter}\r\n            filterType={filterType}\r\n            filterDate={filterDate}\r\n            onDeleteEvent={this.handleDelete}\r\n            openDetail={this.openDetail}\r\n            openStaffView={this.handleOpenStaff}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* {console.log(\"render ===\", this.state, this.props)} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customerDetail: state.appointment.customerDetail,\r\n  customerList: state.common.customerList,\r\n  multipleCustomerForm: state.appointment.multipleCustomerForm,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCustomer,\r\n      getCommonApi,\r\n      updateForm,\r\n      commonDeleteApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const Scheduler = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SchedulerClass);\r\n"]},"metadata":{},"sourceType":"module"}