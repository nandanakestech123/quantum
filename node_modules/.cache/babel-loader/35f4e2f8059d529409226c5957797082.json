{"ast":null,"code":"import { Commission } from \"service/apiVariables\";\nexport const Amountapplicable = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...Commission.Amountapplicable,\n      body\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};\nexport const getAmountapplicable = id => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    Commission.getAmountapplicable.addQuery = {\n      key: \"id\",\n      payload: id\n    };\n    api({ ...Commission.getAmountapplicable\n    }).then(response => {\n      resolve(response);\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};","map":{"version":3,"sources":["F:/webfe/src/redux/actions/Commission.js"],"names":["Commission","Amountapplicable","body","dispatch","getState","api","Toast","Promise","resolve","reject","then","response","catch","message","type","getAmountapplicable","id","addQuery","key","payload"],"mappings":"AAAA,SAASA,UAAT,QAA2B,sBAA3B;AAEA,OAAO,MAAMC,gBAAgB,GAC1BC,IAAD,IACA,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAArB,KAAwC;AACtC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCJ,IAAAA,GAAG,CAAC,EAAE,GAAGL,UAAU,CAACC,gBAAhB;AAAkCC,MAAAA;AAAlC,KAAD,CAAH,CACGQ,IADH,CACSC,QAAD,IAAc;AAClBH,MAAAA,OAAO,CAACG,QAAD,CAAP;AACD,KAHH,EAIGC,KAJH,CAIS,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACtBJ,MAAAA,MAAM,CAACH,KAAK,CAAC;AAAEQ,QAAAA,IAAI,EAAE,OAAR;AAAiBD,QAAAA;AAAjB,OAAD,CAAN,CAAN;AACD,KANH;AAOD,GARM,CAAP;AASD,CAZI;AAcP,OAAO,MAAME,mBAAmB,GAC7BC,EAAD,IACA,CAACb,QAAD,EAAWC,QAAX,EAAqB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAArB,KAAwC;AACtC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCT,IAAAA,UAAU,CAACe,mBAAX,CAA+BE,QAA/B,GAA0C;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,OAAO,EAAEH;AAAtB,KAA1C;AAEAX,IAAAA,GAAG,CAAC,EAAE,GAAGL,UAAU,CAACe;AAAhB,KAAD,CAAH,CACGL,IADH,CACSC,QAAD,IAAc;AAClBH,MAAAA,OAAO,CAACG,QAAD,CAAP;AACD,KAHH,EAIGC,KAJH,CAIS,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACtBJ,MAAAA,MAAM,CAACH,KAAK,CAAC;AAAEQ,QAAAA,IAAI,EAAE,OAAR;AAAiBD,QAAAA;AAAjB,OAAD,CAAN,CAAN;AACD,KANH;AAOD,GAVM,CAAP;AAWD,CAdI","sourcesContent":["import { Commission } from \"service/apiVariables\";\r\n\r\nexport const Amountapplicable =\r\n  (body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...Commission.Amountapplicable, body })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const getAmountapplicable =\r\n  (id) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      Commission.getAmountapplicable.addQuery = { key: \"id\", payload: id };\r\n\r\n      api({ ...Commission.getAmountapplicable })\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}