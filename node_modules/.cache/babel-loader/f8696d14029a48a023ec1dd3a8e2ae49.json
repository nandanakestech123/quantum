{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Customer\\\\AddCustomer\\\\index.js\";\nimport React, { Component } from 'react';\nimport \"./style.scss\";\nimport { Link } from 'react-router-dom';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { NormalInput, NormalSelect, NormalButton, NormalDate } from 'component/common';\nimport { displayImg } from 'service/helperFunctions';\nimport { DragFileUpload } from '../../../common';\nimport { CreateCustomer, getCustomer, updateCustomer } from 'redux/actions/customer';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { AddCustomerForm } from './addCustomer';\nimport { dateFormat } from 'service/helperFunctions';\nimport { getLoginSaloon } from 'redux/actions/auth';\nimport { updateForm, getCommonApi } from 'redux/actions/common';\nexport class AddCustomerClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        cust_name: '',\n        cust_address: '',\n        cust_dob: new Date(),\n        cust_phone2: '',\n        cust_email: '',\n        Cust_sexesid: '',\n        Site_Codeid: '',\n        custallowsendsms: false,\n        cust_maillist: false,\n        cust_state: '',\n        cust_country: '',\n        cust_postcode: '',\n        cust_nric: '',\n        cust_language: '',\n        cust_source: '',\n        emergencycontact: '',\n        cardno1: '',\n        cardno2: '',\n        cardno3: '',\n        cardno4: '',\n        cardno5: ''\n      },\n      sexOption: [{\n        value: 1,\n        label: \"Male\"\n      }, {\n        value: 2,\n        label: \"Female\"\n      }],\n      salonList: [],\n      sourceList: [],\n      stateList: [],\n      countryList: [],\n      languageList: []\n    };\n\n    this.getCustomer = () => {\n      this.props.getCustomer(this.props.match.params.id).then(res => {\n        this.getDataFromStore();\n      });\n    };\n\n    this.getDataFromStore = () => {\n      let {\n        formFields\n      } = this.state;\n      let {\n        customerDetail\n      } = this.props;\n      console.log(\"customerDetail\", customerDetail);\n      formFields['cust_name'] = customerDetail.cust_name;\n      formFields['cust_address'] = customerDetail.cust_address;\n      formFields['cust_dob'] = new Date(customerDetail.cust_dob);\n      formFields['cust_phone2'] = customerDetail.cust_phone2;\n      formFields['cust_email'] = customerDetail.cust_email;\n      formFields['Cust_sexesid'] = customerDetail.Cust_sexesid;\n      formFields['Site_Codeid'] = customerDetail.Site_Codeid;\n      formFields['custallowsendsms'] = customerDetail.custallowsendsms;\n      formFields['cust_maillist'] = customerDetail.cust_maillist;\n      formFields['cust_state'] = customerDetail.cust_state;\n      formFields['cust_country'] = customerDetail.cust_country;\n      formFields['cust_postcode'] = customerDetail.cust_postcode;\n      formFields['cust_nric'] = customerDetail.cust_nric;\n      formFields['cust_language'] = customerDetail.cust_language;\n      formFields['cust_source'] = customerDetail.cust_source;\n      formFields['emergencycontact'] = customerDetail.emergencycontact;\n      formFields['cardno1'] = customerDetail.cardno1;\n      formFields['cardno2'] = customerDetail.cardno2;\n      formFields['cardno3'] = customerDetail.cardno3;\n      formFields['cardno4'] = customerDetail.cardno4;\n      formFields['cardno5'] = customerDetail.cardno5;\n      this.setState({\n        formFields\n      });\n      console.log(formFields, customerDetail, \"sfsdfhsdfsdfg\");\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleChangeBox = event => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[event.target.name] = event.target.checked;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleInput = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value === true ? 1 : value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleSubmit = async data => {\n      let {\n        formFields\n      } = this.state;\n      let type = data;\n      console.log(type, \"====\", data, \"sdfasdfasdf\");\n      let date = new Date(formFields.cust_dob);\n      let d = date.getDate();\n      let day = d < 10 ? \"0\" + d : d;\n      let a = date.getMonth() + 1;\n      let month = a < 10 ? \"0\" + a : a;\n      let year = date.getFullYear();\n      formFields[\"cust_dob\"] = `${year}-${month}-${day}`;\n\n      if (this.props.match.params.id) {\n        await this.props.updateCustomer(`${this.props.match.params.id}/`, formFields).then(data => {\n          if (data.status === 200) {\n            this.resetData();\n\n            if (this.props.match.params.id) {\n              this.props.history.push(`/admin/customer/${this.props.match.params.id}/details`);\n            }\n          }\n        });\n      } else {\n        console.log(\"formFields\", formFields);\n        await this.props.CreateCustomer(formFields).then(async data => {\n          if (data.status === 201) {\n            this.resetData();\n\n            if (this.props.match.params.id) {\n              this.props.history.push(`/admin/cart/${this.props.match.params.id}/details`);\n            } else {\n              let formFields = {};\n              formFields[\"custId\"] = data.data.id;\n              formFields[\"custName\"] = data.data.cust_name;\n              await this.props.updateForm('basicApptDetail', formFields);\n\n              if (type === \"catalog\") {\n                this.props.history.push(`/admin/cart`);\n              } else if (data) {\n                this.props.history.push(`/admin/customer`);\n              } else {\n                this.props.history.push(`/admin/cart`);\n              }\n            }\n          }\n        });\n      }\n    };\n\n    this.handleCancel = () => {\n      if (this.props.match.params.id) {\n        this.props.history.push(`/admin/customer/${this.props.match.params.id}/details`);\n      } else {\n        this.props.history.push(`/admin/customer`);\n      }\n    };\n\n    this.handleDatePick = async (name, value) => {\n      console.log(name, value, \"date\", dateFormat(new Date())); // dateFormat(new Date())\n\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value; // formFields[name] = value;\n\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.resetData = () => {\n      let {\n        formFields\n      } = this.state;\n      formFields['cust_name'] = \"\";\n      formFields['cust_address'] = \"\";\n      formFields['cust_dob'] = \"\";\n      formFields['cust_phone2'] = \"\";\n      formFields['cust_email'] = \"\";\n      formFields['Cust_sexesid'] = \"\";\n      formFields['Site_Codeid'] = \"\";\n      formFields['cust_state      '] = \"\";\n      formFields['cust_country    '] = \"\";\n      formFields['cust_postcode   '] = \"\";\n      formFields['cust_nric       '] = \"\";\n      formFields['cust_language   '] = \"\";\n      formFields['cust_source     '] = \"\";\n      formFields['emergencycontact'] = \"\";\n      formFields['cardno1'] = \"\";\n      formFields['cardno2'] = \"\";\n      formFields['cardno3'] = \"\";\n      formFields['cardno4'] = \"\";\n      formFields['cardno5'] = \"\";\n      this.setState(formFields);\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.match.params.id) {\n      this.getCustomer();\n    }\n\n    let {\n      salonList,\n      sourceList,\n      stateList,\n      countryList,\n      languageList\n    } = this.state;\n    this.props.getLoginSaloon().then(res => {\n      for (let key of res.data) {\n        salonList.push({\n          value: key.id,\n          label: key.itemsite_desc\n        });\n      }\n\n      this.setState({\n        salonList\n      });\n      console.log(\"salonList\", salonList);\n    });\n    this.props.getCommonApi(`source/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          sourceList.push({\n            value: value.source_code,\n            label: value.source_desc\n          });\n        }\n\n        this.setState({\n          sourceList\n        });\n      }\n    });\n    this.props.getCommonApi(`state/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          stateList.push({\n            value: value.itm_code,\n            label: value.itm_desc\n          });\n        }\n\n        this.setState({\n          stateList\n        });\n      }\n    });\n    this.props.getCommonApi(`country/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          countryList.push({\n            value: value.itm_code,\n            label: value.itm_desc\n          });\n        }\n\n        this.setState({\n          countryList\n        });\n      }\n    });\n    this.props.getCommonApi(`language/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          languageList.push({\n            value: value.itm_code,\n            label: value.itm_desc\n          });\n        }\n\n        this.setState({\n          languageList\n        });\n      }\n    });\n  }\n\n  render() {\n    let {\n      formFields,\n      sexOption,\n      salonList,\n      sourceList,\n      stateList,\n      countryList,\n      languageList\n    } = this.state;\n    let {\n      cust_name\n    } = formFields;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer-section container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-label-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, \"Customer \"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-right mx-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, this.props.match.params.id ? \"Edit\" : \"Add\", \" New Customer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddCustomerForm, {\n      formFields: formFields,\n      salonList: salonList,\n      sourceList: sourceList,\n      stateList: stateList,\n      countryList: countryList,\n      languageList: languageList,\n      handleDatePick: this.handleDatePick,\n      sexOption: sexOption,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleCancel: this.handleCancel,\n      handleChangeBox: this.handleChangeBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerDetail: state.customer.customerDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    CreateCustomer,\n    getCustomer,\n    updateCustomer,\n    getLoginSaloon,\n    updateForm,\n    getCommonApi\n  }, dispatch);\n};\n\nexport const AddCustomer = connect(mapStateToProps, mapDispatchToProps)(AddCustomerClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Customer/AddCustomer/index.js"],"names":["React","Component","Link","SimpleReactValidator","NormalInput","NormalSelect","NormalButton","NormalDate","displayImg","DragFileUpload","CreateCustomer","getCustomer","updateCustomer","connect","bindActionCreators","AddCustomerForm","dateFormat","getLoginSaloon","updateForm","getCommonApi","AddCustomerClass","state","formFields","cust_name","cust_address","cust_dob","Date","cust_phone2","cust_email","Cust_sexesid","Site_Codeid","custallowsendsms","cust_maillist","cust_state","cust_country","cust_postcode","cust_nric","cust_language","cust_source","emergencycontact","cardno1","cardno2","cardno3","cardno4","cardno5","sexOption","value","label","salonList","sourceList","stateList","countryList","languageList","props","match","params","id","then","res","getDataFromStore","customerDetail","console","log","setState","handleChange","target","name","Object","assign","handleChangeBox","event","checked","handleInput","handleSubmit","data","type","date","d","getDate","day","a","getMonth","month","year","getFullYear","status","resetData","history","push","handleCancel","handleDatePick","componentWillMount","key","itemsite_desc","source_code","source_desc","itm_code","itm_desc","render","mapStateToProps","customer","mapDispatchToProps","dispatch","AddCustomer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./style.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { NormalInput, NormalSelect, NormalButton, NormalDate } from 'component/common';\r\nimport { displayImg } from 'service/helperFunctions';\r\nimport { DragFileUpload } from '../../../common';\r\nimport { CreateCustomer, getCustomer, updateCustomer } from 'redux/actions/customer'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { AddCustomerForm } from './addCustomer';\r\nimport { dateFormat } from 'service/helperFunctions';\r\nimport { getLoginSaloon } from 'redux/actions/auth';\r\nimport { updateForm,getCommonApi } from 'redux/actions/common';\r\n\r\nexport class AddCustomerClass extends Component {\r\n    state = {\r\n        formFields: {\r\n            cust_name: '',\r\n            cust_address: '',\r\n            cust_dob:new Date(),\r\n            cust_phone2: '',\r\n            cust_email: '',\r\n            Cust_sexesid: '',\r\n            Site_Codeid: '',\r\n            custallowsendsms: false,\r\n            cust_maillist: false,\r\n            cust_state      : '',\r\n            cust_country    : '',\r\n            cust_postcode   : '',\r\n            cust_nric       : '',\r\n            cust_language   : '',\r\n            cust_source     : '',\r\n            emergencycontact: '',\r\n            cardno1:'',\r\n            cardno2:'',\r\n            cardno3:'',\r\n            cardno4:'',\r\n            cardno5:''\r\n        },\r\n        sexOption: [\r\n            { value: 1, label: \"Male\" },\r\n            { value: 2, label: \"Female\" }\r\n        ],\r\n        salonList: [],\r\n        sourceList:[],\r\n        stateList :[],\r\n        countryList :[],\r\n        languageList:[],\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (this.props.match.params.id) {\r\n            this.getCustomer();\r\n        }\r\n        let { salonList,sourceList,stateList,countryList,languageList } = this.state;\r\n        this.props.getLoginSaloon().then((res) => {\r\n            for (let key of res.data) {\r\n                salonList.push({ value: key.id, label: key.itemsite_desc })\r\n            }\r\n            this.setState({ salonList })\r\n            console.log(\"salonList\",salonList);\r\n        })\r\n        this.props.getCommonApi(`source/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    sourceList.push({ value: value.source_code, label: value.source_desc })\r\n                }\r\n                this.setState({ sourceList })\r\n            }\r\n        })\r\n        this.props.getCommonApi(`state/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    stateList.push({ value: value.itm_code, label: value.itm_desc })\r\n                }\r\n                this.setState({ stateList })\r\n            }\r\n        })\r\n        this.props.getCommonApi(`country/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    countryList.push({ value: value.itm_code, label: value.itm_desc })\r\n                }\r\n                this.setState({ countryList })\r\n            }\r\n        })\r\n        this.props.getCommonApi(`language/`).then((key) => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n                for (let value of data) {\r\n                    languageList.push({ value: value.itm_code, label: value.itm_desc })\r\n                }\r\n                this.setState({ languageList })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCustomer = () => {\r\n        this.props.getCustomer(this.props.match.params.id).then((res) => {\r\n            this.getDataFromStore();\r\n        })\r\n    }\r\n\r\n    getDataFromStore = () => {\r\n        let { formFields } = this.state;\r\n        let { customerDetail } = this.props\r\n        console.log(\"customerDetail\",customerDetail);\r\n        formFields['cust_name'] = customerDetail.cust_name;\r\n        formFields['cust_address'] = customerDetail.cust_address;\r\n        formFields['cust_dob'] = new Date(customerDetail.cust_dob);\r\n        formFields['cust_phone2'] = customerDetail.cust_phone2;\r\n        formFields['cust_email'] = customerDetail.cust_email;\r\n        formFields['Cust_sexesid'] = customerDetail.Cust_sexesid;\r\n        formFields['Site_Codeid'] = customerDetail.Site_Codeid;\r\n        formFields['custallowsendsms'] = customerDetail.custallowsendsms;\r\n        formFields['cust_maillist'] = customerDetail.cust_maillist;\r\n        formFields['cust_state'] = customerDetail.cust_state;\r\n        formFields['cust_country'] = customerDetail.cust_country;\r\n        formFields['cust_postcode'] = customerDetail.cust_postcode;\r\n        formFields['cust_nric'] = customerDetail.cust_nric;\r\n        formFields['cust_language'] = customerDetail.cust_language;\r\n        formFields['cust_source'] = customerDetail.cust_source;\r\n        formFields['emergencycontact'] = customerDetail.emergencycontact;\r\n        formFields['cardno1'] = customerDetail.cardno1;\r\n        formFields['cardno2'] = customerDetail.cardno2;\r\n        formFields['cardno3'] = customerDetail.cardno3;\r\n        formFields['cardno4'] = customerDetail.cardno4;\r\n        formFields['cardno5'] = customerDetail.cardno5;\r\n        this.setState({ formFields })\r\n        console.log(formFields, customerDetail, \"sfsdfhsdfsdfg\")\r\n    }\r\n\r\n    handleChange = ({ target: { value, name } }) => {\r\n        let formFields = Object.assign({}, this.state.formFields);\r\n\r\n        formFields[name] = value;\r\n\r\n\r\n        this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n    handleChangeBox = (event) => {\r\n        let formFields = Object.assign({}, this.state.formFields);\r\n\r\n        formFields[event.target.name] = event.target.checked;\r\n\r\n\r\n        this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n\r\n    handleInput = ({ target: { name, value } }) => {\r\n\r\n        let formFields = Object.assign({}, this.state.formFields)\r\n        formFields[name] = (value === true ? 1 : value);\r\n        this.setState({\r\n            formFields\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let { formFields } = this.state;\r\n        let type = data;\r\n        console.log(type, \"====\", data, \"sdfasdfasdf\")\r\n       \r\n        let date = new Date(formFields.cust_dob)\r\n        let d = date.getDate();\r\n        let day = (d < 10 ? (\"0\" + d) : (d));\r\n        let a = date.getMonth() + 1;\r\n        let month = (a < 10 ? (\"0\" + a) : (a));\r\n        let year = date.getFullYear();\r\n        formFields[\"cust_dob\"] =`${year}-${month}-${day}`;\r\n\r\n        if (this.props.match.params.id) {\r\n            await this.props.updateCustomer(`${this.props.match.params.id}/`, formFields).then((data) => {\r\n                if (data.status === 200) {\r\n                    this.resetData();\r\n                    if (this.props.match.params.id) {\r\n                        this.props.history.push(`/admin/customer/${this.props.match.params.id}/details`)\r\n                    }\r\n                }\r\n               \r\n            })\r\n            \r\n        } else {\r\n            console.log(\"formFields\",formFields);\r\n            await this.props.CreateCustomer(formFields).then(async (data) => {\r\n                if (data.status === 201) {\r\n                    this.resetData();\r\n                    if (this.props.match.params.id) {\r\n                        this.props.history.push(`/admin/cart/${this.props.match.params.id}/details`)\r\n                    } else {\r\n                        let formFields = {};\r\n                        formFields[\"custId\"] = data.data.id;\r\n                        formFields[\"custName\"] = data.data.cust_name;\r\n                        await this.props.updateForm('basicApptDetail', formFields)\r\n                        if (type === \"catalog\") {\r\n                            this.props.history.push(`/admin/cart`);\r\n                        } else if (data) {\r\n                            this.props.history.push(`/admin/customer`);\r\n                        } else {\r\n                            this.props.history.push(`/admin/cart`);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            \r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        if (this.props.match.params.id) {\r\n            this.props.history.push(`/admin/customer/${this.props.match.params.id}/details`)\r\n        } else {\r\n            this.props.history.push(`/admin/customer`);\r\n        }\r\n    }\r\n\r\n    handleDatePick = async (name, value) => {\r\n        console.log(name, value, \"date\", dateFormat(new Date()))\r\n        // dateFormat(new Date())\r\n        let { formFields } = this.state;\r\n        formFields[name] = value;\r\n        // formFields[name] = value;\r\n        await this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n    resetData = () => {\r\n        let { formFields } = this.state;\r\n        formFields['cust_name'] = \"\";\r\n        formFields['cust_address'] = \"\";\r\n        formFields['cust_dob'] = \"\";\r\n        formFields['cust_phone2'] = \"\";\r\n        formFields['cust_email'] = \"\";\r\n        formFields['Cust_sexesid'] = \"\";\r\n        formFields['Site_Codeid'] = \"\";\r\n        formFields['cust_state      '] = \"\";\r\n        formFields['cust_country    '] = \"\";\r\n        formFields['cust_postcode   '] = \"\";\r\n        formFields['cust_nric       '] = \"\";\r\n        formFields['cust_language   '] = \"\";\r\n        formFields['cust_source     '] = \"\";\r\n        formFields['emergencycontact'] = \"\";\r\n        formFields['cardno1'] = \"\";\r\n        formFields['cardno2'] = \"\";\r\n        formFields['cardno3'] = \"\";\r\n        formFields['cardno4'] = \"\";\r\n        formFields['cardno5'] = \"\";\r\n        this.setState(formFields)  \r\n    }\r\n\r\n    render() {\r\n        let { formFields, sexOption, salonList,sourceList,stateList,countryList,languageList } = this.state;\r\n        let { cust_name } = formFields;\r\n        return (\r\n            <div className=\"create-customer-section container\">\r\n                {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Customer</p> */}\r\n                <div className=\"create-customer\">\r\n                    <div className=\"head-label-nav\">\r\n                        <p className=\"category\">Customer </p>\r\n                        <i className=\"icon-right mx-md-3\"></i>\r\n                        <p className=\"sub-category\">{this.props.match.params.id ? \"Edit\" : \"Add\"} New Customer</p>\r\n                    </div>\r\n                    <div className=\"customer-detail\">\r\n                        <AddCustomerForm formFields={formFields} \r\n                        salonList={salonList}\r\n                        sourceList={sourceList}\r\n                        stateList={stateList} \r\n                        countryList ={countryList} \r\n                        languageList={languageList}\r\n                        handleDatePick={this.handleDatePick} sexOption={sexOption} handleChange={this.handleChange} handleSubmit={this.handleSubmit} handleCancel={this.handleCancel} handleChangeBox={this.handleChangeBox}></AddCustomerForm>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    customerDetail: state.customer.customerDetail\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        CreateCustomer,\r\n        getCustomer,\r\n        updateCustomer,\r\n        getLoginSaloon,\r\n        updateForm,\r\n        getCommonApi\r\n    }, dispatch)\r\n}\r\n\r\nexport const AddCustomer = connect(mapStateToProps, mapDispatchToProps)(AddCustomerClass)"]},"metadata":{},"sourceType":"module"}