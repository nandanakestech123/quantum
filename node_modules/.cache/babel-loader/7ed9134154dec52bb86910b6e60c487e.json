{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.field_chooser.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _icon = require(\"../../core/utils/icon\");\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\n\nvar _tree_view = _interopRequireDefault(require(\"../tree_view\"));\n\nvar _context_menu = _interopRequireDefault(require(\"../context_menu\"));\n\nvar _uiPivot_grid2 = _interopRequireDefault(require(\"./ui.pivot_grid.field_chooser_base\"));\n\nrequire(\"./data_source\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DIV = \"<div>\";\nvar hasWindow = (0, _window.hasWindow)();\nvar FIELDCHOOSER_CLASS = \"dx-pivotgridfieldchooser\";\nvar FIELDCHOOSER_CONTAINER_CLASS = \"dx-pivotgridfieldchooser-container\";\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\nvar AREA_DRAG_CLASS = \"dx-pivotgrid-drag-action\";\n\nfunction getDimensionFields(item, fields) {\n  var result = [];\n\n  if (item.items) {\n    for (var i = 0; i < item.items.length; i++) {\n      result.push.apply(result, getDimensionFields(item.items[i], fields));\n    }\n  } else {\n    if ((0, _type.isDefined)(item.index)) {\n      result.push(fields[item.index]);\n    }\n  }\n\n  return result;\n}\n\nfunction getFirstItem(item, condition) {\n  if (item.items) {\n    for (var i = 0; i < item.items.length; i++) {\n      var childrenItem = getFirstItem(item.items[i], condition);\n\n      if (childrenItem) {\n        return childrenItem;\n      }\n    }\n  }\n\n  if (condition(item)) {\n    return item;\n  }\n}\n\nvar compareOrder = [function (a, b) {\n  var aValue = -!!a.isMeasure;\n  var bValue = +!!b.isMeasure;\n  return aValue + bValue;\n}, function (a, b) {\n  var aValue = -!!(a.items && a.items.length);\n  var bValue = +!!(b.items && b.items.length);\n  return aValue + bValue;\n}, function (a, b) {\n  var aValue = +!!(false === a.isMeasure && a.field && a.field.levels && a.field.levels.length);\n  var bValue = -!!(false === b.isMeasure && b.field && b.field.levels && b.field.levels.length);\n  return aValue + bValue;\n}, (0, _uiPivot_grid.getCompareFunction)(function (item) {\n  return item.text;\n})];\n\nfunction compareItems(a, b) {\n  var result = 0;\n  var i = 0;\n\n  while (!result && compareOrder[i]) {\n    result = compareOrder[i++](a, b);\n  }\n\n  return result;\n}\n\nfunction getScrollable(container) {\n  return container.find(\".dx-scrollable\").dxScrollable(\"instance\");\n}\n\nvar FieldChooser = _uiPivot_grid2.default.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      height: 400,\n      layout: 0,\n      dataSource: null,\n      onContextMenuPreparing: null,\n      allowSearch: false,\n      searchTimeout: 500,\n      texts: {\n        columnFields: _message.default.format(\"dxPivotGrid-columnFields\"),\n        rowFields: _message.default.format(\"dxPivotGrid-rowFields\"),\n        dataFields: _message.default.format(\"dxPivotGrid-dataFields\"),\n        filterFields: _message.default.format(\"dxPivotGrid-filterFields\"),\n        allFields: _message.default.format(\"dxPivotGrid-allFields\")\n      }\n    });\n  },\n  _refreshDataSource: function _refreshDataSource() {\n    var that = this;\n    that._expandedPaths = [];\n\n    that._changedHandler = that._changedHandler || function () {\n      (0, _iterator.each)(that._dataChangedHandlers, function (_, func) {\n        func();\n      });\n\n      that._fireContentReadyAction();\n\n      that._skipStateChange = true;\n      that.option(\"state\", that._dataSource.state());\n      that._skipStateChange = false;\n    };\n\n    that._disposeDataSource();\n\n    that.callBase();\n    that._dataSource && that._dataSource.on(\"changed\", that._changedHandler);\n  },\n  _disposeDataSource: function _disposeDataSource() {\n    var that = this;\n    var dataSource = that._dataSource;\n\n    if (dataSource) {\n      dataSource.off(\"changed\", that._changedHandler);\n      that._dataSource = void 0;\n    }\n  },\n  _dispose: function _dispose() {\n    this._disposeDataSource();\n\n    this.callBase.apply(this, arguments);\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._refreshDataSource();\n\n    this._dataChangedHandlers = [];\n\n    this._initActions();\n  },\n  _initActions: function _initActions() {\n    this._actions = {\n      onContextMenuPreparing: this._createActionByOption(\"onContextMenuPreparing\")\n    };\n  },\n  _trigger: function _trigger(eventName, eventArg) {\n    this._actions[eventName](eventArg);\n  },\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase();\n    (0, _extend.extend)(this._optionsByReference, {\n      dataSource: true\n    });\n  },\n  _optionChanged: function _optionChanged(args) {\n    var that = this;\n\n    switch (args.name) {\n      case \"dataSource\":\n        that._refreshDataSource();\n\n        that._invalidate();\n\n        break;\n\n      case \"layout\":\n      case \"texts\":\n      case \"allowSearch\":\n      case \"searchTimeout\":\n        that._invalidate();\n\n        break;\n\n      case \"onContextMenuPreparing\":\n        that._actions[args.name] = that._createActionByOption(args.name);\n        break;\n\n      default:\n        that.callBase(args);\n    }\n  },\n  _clean: function _clean(skipStateSetting) {\n    !skipStateSetting && this._dataSource && this.option(\"state\", this._dataSource.state());\n    this.$element().children(\".\" + FIELDCHOOSER_CONTAINER_CLASS).remove();\n  },\n  _renderLayout0: function _renderLayout0($container) {\n    var that = this;\n    $container.addClass(\"dx-layout-0\");\n    var $row1 = (0, _renderer.default)(DIV).addClass(\"dx-row\").appendTo($container);\n    var $row2 = (0, _renderer.default)(DIV).addClass(\"dx-row\").appendTo($container);\n    var $col1 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row1);\n    var $col2 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row1);\n    var $col3 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row2);\n    var $col4 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row2);\n\n    that._renderArea($col1, \"all\");\n\n    that._renderArea($col2, \"row\");\n\n    that._renderArea($col2, \"column\");\n\n    that._renderArea($col3, \"filter\");\n\n    that._renderArea($col4, \"data\");\n  },\n  _renderLayout1: function _renderLayout1($container) {\n    var that = this;\n    var $col1 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($container);\n    var $col2 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($container);\n\n    that._renderArea($col1, \"all\");\n\n    that._renderArea($col2, \"filter\");\n\n    that._renderArea($col2, \"row\");\n\n    that._renderArea($col2, \"column\");\n\n    that._renderArea($col2, \"data\");\n  },\n  _renderLayout2: function _renderLayout2($container) {\n    var that = this;\n    $container.addClass(\"dx-layout-2\");\n    var $row1 = (0, _renderer.default)(DIV).addClass(\"dx-row\").appendTo($container);\n\n    that._renderArea($row1, \"all\");\n\n    var $row2 = (0, _renderer.default)(DIV).addClass(\"dx-row\").appendTo($container);\n    var $col1 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row2);\n    var $col2 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row2);\n\n    that._renderArea($col1, \"filter\");\n\n    that._renderArea($col1, \"row\");\n\n    that._renderArea($col2, \"column\");\n\n    that._renderArea($col2, \"data\");\n  },\n  _initMarkup: function _initMarkup() {\n    var that = this;\n    var $element = this.$element();\n    var $container = (0, _renderer.default)(DIV).addClass(FIELDCHOOSER_CONTAINER_CLASS).appendTo($element);\n    var layout = that.option(\"layout\");\n    that.callBase();\n    $element.addClass(FIELDCHOOSER_CLASS).addClass(FIELDS_CONTAINER_CLASS);\n    that._dataChangedHandlers = [];\n    var dataSource = this._dataSource;\n    var currentState = \"instantly\" !== that.option(\"applyChangesMode\") && dataSource && dataSource.state();\n    currentState && that.option(\"state\") && dataSource.state(that.option(\"state\"), true);\n\n    if (0 === layout) {\n      that._renderLayout0($container);\n    } else {\n      if (1 === layout) {\n        that._renderLayout1($container);\n      } else {\n        that._renderLayout2($container);\n      }\n    }\n\n    currentState && dataSource.state(currentState, true);\n  },\n  _renderContentImpl: function _renderContentImpl() {\n    this.callBase();\n    this.renderSortable();\n\n    this._renderContextMenu();\n\n    this.updateDimensions();\n  },\n  _fireContentReadyAction: function _fireContentReadyAction() {\n    if (!this._dataSource || !this._dataSource.isLoading()) {\n      this.callBase();\n    }\n  },\n  _getContextMenuArgs: function _getContextMenuArgs(dxEvent) {\n    var targetFieldElement = (0, _renderer.default)(dxEvent.target).closest(\".dx-area-field\");\n    var targetGroupElement = (0, _renderer.default)(dxEvent.target).closest(\".dx-area-fields\");\n    var field;\n    var area;\n\n    if (targetFieldElement.length) {\n      var fieldCopy = targetFieldElement.data(\"field\");\n\n      if (fieldCopy) {\n        field = this.getDataSource().field(fieldCopy.index) || fieldCopy;\n      }\n    }\n\n    if (targetGroupElement.length) {\n      area = targetGroupElement.attr(\"group\");\n    }\n\n    return {\n      event: dxEvent,\n      field: field,\n      area: area,\n      items: []\n    };\n  },\n  _renderContextMenu: function _renderContextMenu() {\n    var that = this;\n    var $container = that.$element();\n\n    if (that._contextMenu) {\n      that._contextMenu.$element().remove();\n    }\n\n    that._contextMenu = that._createComponent((0, _renderer.default)(DIV).appendTo($container), _context_menu.default, {\n      onPositioning: function onPositioning(actionArgs) {\n        var event = actionArgs.event;\n\n        if (!event) {\n          return;\n        }\n\n        var args = that._getContextMenuArgs(event);\n\n        that._trigger(\"onContextMenuPreparing\", args);\n\n        if (args.items && args.items.length) {\n          actionArgs.component.option(\"items\", args.items);\n        } else {\n          actionArgs.cancel = true;\n        }\n      },\n      target: $container,\n      onItemClick: function onItemClick(params) {\n        params.itemData.onItemClick && params.itemData.onItemClick(params);\n      },\n      cssClass: \"dx-pivotgridfieldchooser-context-menu\"\n    });\n  },\n  _createTreeItems: function _createTreeItems(fields, groupFieldNames, path) {\n    var that = this;\n    var isMeasure;\n    var resultItems = [];\n    var groupedItems = [];\n    var groupFieldName = groupFieldNames[0];\n    var fieldsByGroup = {};\n\n    if (!groupFieldName) {\n      (0, _iterator.each)(fields, function (index, field) {\n        var icon;\n\n        if (true === field.isMeasure) {\n          icon = \"measure\";\n        }\n\n        if (false === field.isMeasure) {\n          icon = field.groupName ? \"hierarchy\" : \"dimension\";\n        }\n\n        resultItems.push({\n          index: field.index,\n          field: field,\n          key: field.dataField,\n          selected: (0, _type.isDefined)(field.area),\n          text: field.caption || field.dataField,\n          icon: icon,\n          isMeasure: field.isMeasure,\n          isDefault: field.isDefault\n        });\n      });\n    } else {\n      (0, _iterator.each)(fields, function (index, field) {\n        var groupName = field[groupFieldName] || \"\";\n        fieldsByGroup[groupName] = fieldsByGroup[groupName] || [];\n        fieldsByGroup[groupName].push(field);\n\n        if (void 0 === isMeasure) {\n          isMeasure = true;\n        }\n\n        isMeasure = isMeasure && true === field.isMeasure;\n      });\n      (0, _iterator.each)(fieldsByGroup, function (groupName, fields) {\n        var currentPath = path ? path + \".\" + groupName : groupName;\n\n        var items = that._createTreeItems(fields, groupFieldNames.slice(1), currentPath);\n\n        if (groupName) {\n          groupedItems.push({\n            key: groupName,\n            text: groupName,\n            path: currentPath,\n            isMeasure: items.isMeasure,\n            expanded: (0, _array.inArray)(currentPath, that._expandedPaths) >= 0,\n            items: items\n          });\n        } else {\n          resultItems = items;\n        }\n      });\n      resultItems = groupedItems.concat(resultItems);\n      resultItems.isMeasure = isMeasure;\n    }\n\n    return resultItems;\n  },\n  _createFieldsDataSource: function _createFieldsDataSource(dataSource) {\n    var fields = dataSource && dataSource.fields() || [];\n    fields = fields.filter(function (field) {\n      return false !== field.visible && !(0, _type.isDefined)(field.groupIndex);\n    });\n\n    var treeItems = this._createTreeItems(fields, [\"dimension\", \"displayFolder\"]);\n\n    (0, _uiPivot_grid.foreachDataLevel)(treeItems, function (items) {\n      items.sort(compareItems);\n    }, 0, \"items\");\n    return treeItems;\n  },\n  _renderFieldsTreeView: function _renderFieldsTreeView(container) {\n    var that = this;\n    var dataSource = that._dataSource;\n\n    var treeView = that._createComponent(container, _tree_view.default, {\n      dataSource: that._createFieldsDataSource(dataSource),\n      showCheckBoxesMode: \"normal\",\n      expandNodesRecursive: false,\n      searchEnabled: that.option(\"allowSearch\"),\n      searchTimeout: that.option(\"searchTimeout\"),\n      itemTemplate: function itemTemplate(itemData, itemIndex, itemElement) {\n        if (itemData.icon) {\n          (0, _icon.getImageContainer)(itemData.icon).appendTo(itemElement);\n        }\n\n        (0, _renderer.default)(\"<span>\").toggleClass(\"dx-area-field\", !itemData.items).data(\"field\", itemData.field).text(itemData.text).appendTo(itemElement);\n      },\n      onItemCollapsed: function onItemCollapsed(e) {\n        var index = (0, _array.inArray)(e.itemData.path, that._expandedPaths);\n\n        if (index >= 0) {\n          that._expandedPaths.splice(index, 1);\n        }\n      },\n      onItemExpanded: function onItemExpanded(e) {\n        var index = (0, _array.inArray)(e.itemData.path, that._expandedPaths);\n\n        if (index < 0) {\n          that._expandedPaths.push(e.itemData.path);\n        }\n      },\n      onItemSelectionChanged: function onItemSelectionChanged(e) {\n        var data = e.itemData;\n        var field;\n        var fields;\n        var needSelectDefaultItem = true;\n        var area;\n\n        if (data.items) {\n          if (data.selected) {\n            treeView.unselectItem(data);\n            return;\n          }\n\n          that._processDemandState(function () {\n            fields = getDimensionFields(data, dataSource.fields());\n\n            for (var i = 0; i < fields.length; i++) {\n              if (fields[i].area) {\n                needSelectDefaultItem = false;\n                break;\n              }\n            }\n          });\n\n          if (needSelectDefaultItem) {\n            var item = getFirstItem(data, function (item) {\n              return item.isDefault;\n            }) || getFirstItem(data, function (item) {\n              return (0, _type.isDefined)(item.index);\n            });\n            item && treeView.selectItem(item);\n            return;\n          }\n        } else {\n          field = dataSource.fields()[data.index];\n\n          if (data.selected) {\n            area = field.isMeasure ? \"data\" : \"column\";\n          }\n\n          if (field) {\n            fields = [field];\n          }\n        }\n\n        that._applyChanges(fields, {\n          area: area,\n          areaIndex: void 0\n        });\n      }\n    });\n\n    var dataChanged = function dataChanged() {\n      var scrollable = getScrollable(container);\n      var scrollTop = scrollable ? scrollable.scrollTop() : 0;\n      treeView.option({\n        dataSource: that._createFieldsDataSource(dataSource)\n      });\n      scrollable = getScrollable(container);\n\n      if (scrollable) {\n        scrollable.scrollTo({\n          y: scrollTop\n        });\n        scrollable.update();\n      }\n    };\n\n    that._dataChangedHandlers.push(dataChanged);\n  },\n  _renderAreaFields: function _renderAreaFields($container, area) {\n    var that = this;\n    var dataSource = that._dataSource;\n    var fields = dataSource ? (0, _extend.extend)(true, [], dataSource.getAreaFields(area, true)) : [];\n    $container.empty();\n    (0, _iterator.each)(fields, function (_, field) {\n      if (false !== field.visible) {\n        that.renderField(field, true).appendTo($container);\n      }\n    });\n  },\n  _renderArea: function _renderArea(container, area) {\n    var that = this;\n    var $areaContainer = (0, _renderer.default)(DIV).addClass(\"dx-area\").appendTo(container);\n    var $fieldsHeaderContainer = (0, _renderer.default)(DIV).addClass(\"dx-area-fields-header\").appendTo($areaContainer);\n    var caption = that.option(\"texts.\" + area + \"Fields\");\n    var $fieldsContent;\n    var render;\n    (0, _renderer.default)(\"<span>\").addClass(\"dx-area-icon\").addClass(\"dx-area-icon-\" + area).appendTo($fieldsHeaderContainer);\n    (0, _renderer.default)(\"<span>\").html(\"&nbsp;\").appendTo($fieldsHeaderContainer);\n    (0, _renderer.default)(\"<span>\").addClass(\"dx-area-caption\").text(caption).appendTo($fieldsHeaderContainer);\n    var $fieldsContainer = (0, _renderer.default)(DIV).addClass(\"dx-area-fields\").addClass(AREA_DRAG_CLASS).appendTo($areaContainer);\n\n    if (\"all\" !== area) {\n      $fieldsContainer.attr(\"group\", area).attr(\"allow-scrolling\", true);\n      $fieldsContent = (0, _renderer.default)(DIV).addClass(\"dx-area-field-container\").appendTo($fieldsContainer);\n\n      render = function render() {\n        that._renderAreaFields($fieldsContent, area);\n      };\n\n      that._dataChangedHandlers.push(render);\n\n      render();\n      $fieldsContainer.dxScrollable();\n    } else {\n      $areaContainer.addClass(\"dx-all-fields\");\n      $fieldsContainer.addClass(\"dx-treeview-border-visible\");\n\n      that._renderFieldsTreeView($fieldsContainer);\n    }\n  },\n  _getSortableOptions: function _getSortableOptions() {\n    return {};\n  },\n  _adjustSortableOnChangedArgs: function _adjustSortableOnChangedArgs() {},\n  resetTreeView: function resetTreeView() {\n    var treeView = this.$element().find(\".dx-treeview\").dxTreeView(\"instance\");\n\n    if (treeView) {\n      treeView.option(\"searchValue\", \"\");\n      treeView.collapseAll();\n    }\n  },\n  applyChanges: function applyChanges() {\n    var state = this.option(\"state\");\n\n    if ((0, _type.isDefined)(state)) {\n      this._dataSource.state(state);\n    }\n  },\n  cancelChanges: function cancelChanges() {\n    var dataSource = this._dataSource;\n\n    if (!dataSource.isLoading()) {\n      this.option(\"state\", dataSource.state());\n      return true;\n    }\n\n    return false;\n  },\n  getDataSource: function getDataSource() {\n    return this._dataSource;\n  },\n  updateDimensions: function updateDimensions() {\n    var $scrollableElements = this.$element().find(\".dx-area .dx-scrollable\");\n    $scrollableElements.dxScrollable(\"update\");\n  },\n  _visibilityChanged: function _visibilityChanged(visible) {\n    if (visible && hasWindow) {\n      this.updateDimensions();\n    }\n  }\n});\n\n(0, _component_registrator.default)(\"dxPivotGridFieldChooser\", FieldChooser);\nvar _default = FieldChooser;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/ui.pivot_grid.field_chooser.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_icon","_window","_type","_extend","_array","_iterator","_message","_component_registrator","_uiPivot_grid","_tree_view","_context_menu","_uiPivot_grid2","obj","__esModule","DIV","hasWindow","FIELDCHOOSER_CLASS","FIELDCHOOSER_CONTAINER_CLASS","FIELDS_CONTAINER_CLASS","AREA_DRAG_CLASS","getDimensionFields","item","fields","result","items","i","length","push","apply","isDefined","index","getFirstItem","condition","childrenItem","compareOrder","a","b","aValue","isMeasure","bValue","field","levels","getCompareFunction","text","compareItems","getScrollable","container","find","dxScrollable","FieldChooser","inherit","_getDefaultOptions","extend","callBase","height","layout","dataSource","onContextMenuPreparing","allowSearch","searchTimeout","texts","columnFields","format","rowFields","dataFields","filterFields","allFields","_refreshDataSource","that","_expandedPaths","_changedHandler","each","_dataChangedHandlers","_","func","_fireContentReadyAction","_skipStateChange","option","_dataSource","state","_disposeDataSource","on","off","_dispose","arguments","_init","_initActions","_actions","_createActionByOption","_trigger","eventName","eventArg","_setOptionsByReference","_optionsByReference","_optionChanged","args","name","_invalidate","_clean","skipStateSetting","$element","children","remove","_renderLayout0","$container","addClass","$row1","appendTo","$row2","$col1","$col2","$col3","$col4","_renderArea","_renderLayout1","_renderLayout2","_initMarkup","currentState","_renderContentImpl","renderSortable","_renderContextMenu","updateDimensions","isLoading","_getContextMenuArgs","dxEvent","targetFieldElement","target","closest","targetGroupElement","area","fieldCopy","data","getDataSource","attr","event","_contextMenu","_createComponent","onPositioning","actionArgs","component","cancel","onItemClick","params","itemData","cssClass","_createTreeItems","groupFieldNames","path","resultItems","groupedItems","groupFieldName","fieldsByGroup","icon","groupName","key","dataField","selected","caption","isDefault","currentPath","slice","expanded","inArray","concat","_createFieldsDataSource","filter","visible","groupIndex","treeItems","foreachDataLevel","sort","_renderFieldsTreeView","treeView","showCheckBoxesMode","expandNodesRecursive","searchEnabled","itemTemplate","itemIndex","itemElement","getImageContainer","toggleClass","onItemCollapsed","e","splice","onItemExpanded","onItemSelectionChanged","needSelectDefaultItem","unselectItem","_processDemandState","selectItem","_applyChanges","areaIndex","dataChanged","scrollable","scrollTop","scrollTo","y","update","_renderAreaFields","getAreaFields","empty","renderField","$areaContainer","$fieldsHeaderContainer","$fieldsContent","render","html","$fieldsContainer","_getSortableOptions","_adjustSortableOnChangedArgs","resetTreeView","dxTreeView","collapseAll","applyChanges","cancelChanges","$scrollableElements","_visibilityChanged","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.field_chooser.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _icon = require(\"../../core/utils/icon\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\r\nvar _tree_view = _interopRequireDefault(require(\"../tree_view\"));\r\nvar _context_menu = _interopRequireDefault(require(\"../context_menu\"));\r\nvar _uiPivot_grid2 = _interopRequireDefault(require(\"./ui.pivot_grid.field_chooser_base\"));\r\nrequire(\"./data_source\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DIV = \"<div>\";\r\nvar hasWindow = (0, _window.hasWindow)();\r\nvar FIELDCHOOSER_CLASS = \"dx-pivotgridfieldchooser\";\r\nvar FIELDCHOOSER_CONTAINER_CLASS = \"dx-pivotgridfieldchooser-container\";\r\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\r\nvar AREA_DRAG_CLASS = \"dx-pivotgrid-drag-action\";\r\n\r\nfunction getDimensionFields(item, fields) {\r\n    var result = [];\r\n    if (item.items) {\r\n        for (var i = 0; i < item.items.length; i++) {\r\n            result.push.apply(result, getDimensionFields(item.items[i], fields))\r\n        }\r\n    } else {\r\n        if ((0, _type.isDefined)(item.index)) {\r\n            result.push(fields[item.index])\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getFirstItem(item, condition) {\r\n    if (item.items) {\r\n        for (var i = 0; i < item.items.length; i++) {\r\n            var childrenItem = getFirstItem(item.items[i], condition);\r\n            if (childrenItem) {\r\n                return childrenItem\r\n            }\r\n        }\r\n    }\r\n    if (condition(item)) {\r\n        return item\r\n    }\r\n}\r\nvar compareOrder = [function(a, b) {\r\n    var aValue = -!!a.isMeasure;\r\n    var bValue = +!!b.isMeasure;\r\n    return aValue + bValue\r\n}, function(a, b) {\r\n    var aValue = -!!(a.items && a.items.length);\r\n    var bValue = +!!(b.items && b.items.length);\r\n    return aValue + bValue\r\n}, function(a, b) {\r\n    var aValue = +!!(false === a.isMeasure && a.field && a.field.levels && a.field.levels.length);\r\n    var bValue = -!!(false === b.isMeasure && b.field && b.field.levels && b.field.levels.length);\r\n    return aValue + bValue\r\n}, (0, _uiPivot_grid.getCompareFunction)(function(item) {\r\n    return item.text\r\n})];\r\n\r\nfunction compareItems(a, b) {\r\n    var result = 0;\r\n    var i = 0;\r\n    while (!result && compareOrder[i]) {\r\n        result = compareOrder[i++](a, b)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getScrollable(container) {\r\n    return container.find(\".dx-scrollable\").dxScrollable(\"instance\")\r\n}\r\nvar FieldChooser = _uiPivot_grid2.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            height: 400,\r\n            layout: 0,\r\n            dataSource: null,\r\n            onContextMenuPreparing: null,\r\n            allowSearch: false,\r\n            searchTimeout: 500,\r\n            texts: {\r\n                columnFields: _message.default.format(\"dxPivotGrid-columnFields\"),\r\n                rowFields: _message.default.format(\"dxPivotGrid-rowFields\"),\r\n                dataFields: _message.default.format(\"dxPivotGrid-dataFields\"),\r\n                filterFields: _message.default.format(\"dxPivotGrid-filterFields\"),\r\n                allFields: _message.default.format(\"dxPivotGrid-allFields\")\r\n            }\r\n        })\r\n    },\r\n    _refreshDataSource: function() {\r\n        var that = this;\r\n        that._expandedPaths = [];\r\n        that._changedHandler = that._changedHandler || function() {\r\n            (0, _iterator.each)(that._dataChangedHandlers, function(_, func) {\r\n                func()\r\n            });\r\n            that._fireContentReadyAction();\r\n            that._skipStateChange = true;\r\n            that.option(\"state\", that._dataSource.state());\r\n            that._skipStateChange = false\r\n        };\r\n        that._disposeDataSource();\r\n        that.callBase();\r\n        that._dataSource && that._dataSource.on(\"changed\", that._changedHandler)\r\n    },\r\n    _disposeDataSource: function() {\r\n        var that = this;\r\n        var dataSource = that._dataSource;\r\n        if (dataSource) {\r\n            dataSource.off(\"changed\", that._changedHandler);\r\n            that._dataSource = void 0\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this._disposeDataSource();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._refreshDataSource();\r\n        this._dataChangedHandlers = [];\r\n        this._initActions()\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {\r\n            onContextMenuPreparing: this._createActionByOption(\"onContextMenuPreparing\")\r\n        }\r\n    },\r\n    _trigger: function(eventName, eventArg) {\r\n        this._actions[eventName](eventArg)\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            dataSource: true\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var that = this;\r\n        switch (args.name) {\r\n            case \"dataSource\":\r\n                that._refreshDataSource();\r\n                that._invalidate();\r\n                break;\r\n            case \"layout\":\r\n            case \"texts\":\r\n            case \"allowSearch\":\r\n            case \"searchTimeout\":\r\n                that._invalidate();\r\n                break;\r\n            case \"onContextMenuPreparing\":\r\n                that._actions[args.name] = that._createActionByOption(args.name);\r\n                break;\r\n            default:\r\n                that.callBase(args)\r\n        }\r\n    },\r\n    _clean: function(skipStateSetting) {\r\n        !skipStateSetting && this._dataSource && this.option(\"state\", this._dataSource.state());\r\n        this.$element().children(\".\" + FIELDCHOOSER_CONTAINER_CLASS).remove()\r\n    },\r\n    _renderLayout0: function($container) {\r\n        var that = this;\r\n        $container.addClass(\"dx-layout-0\");\r\n        var $row1 = (0, _renderer.default)(DIV).addClass(\"dx-row\").appendTo($container);\r\n        var $row2 = (0, _renderer.default)(DIV).addClass(\"dx-row\").appendTo($container);\r\n        var $col1 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row1);\r\n        var $col2 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row1);\r\n        var $col3 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row2);\r\n        var $col4 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row2);\r\n        that._renderArea($col1, \"all\");\r\n        that._renderArea($col2, \"row\");\r\n        that._renderArea($col2, \"column\");\r\n        that._renderArea($col3, \"filter\");\r\n        that._renderArea($col4, \"data\")\r\n    },\r\n    _renderLayout1: function($container) {\r\n        var that = this;\r\n        var $col1 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($container);\r\n        var $col2 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($container);\r\n        that._renderArea($col1, \"all\");\r\n        that._renderArea($col2, \"filter\");\r\n        that._renderArea($col2, \"row\");\r\n        that._renderArea($col2, \"column\");\r\n        that._renderArea($col2, \"data\")\r\n    },\r\n    _renderLayout2: function($container) {\r\n        var that = this;\r\n        $container.addClass(\"dx-layout-2\");\r\n        var $row1 = (0, _renderer.default)(DIV).addClass(\"dx-row\").appendTo($container);\r\n        that._renderArea($row1, \"all\");\r\n        var $row2 = (0, _renderer.default)(DIV).addClass(\"dx-row\").appendTo($container);\r\n        var $col1 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row2);\r\n        var $col2 = (0, _renderer.default)(DIV).addClass(\"dx-col\").appendTo($row2);\r\n        that._renderArea($col1, \"filter\");\r\n        that._renderArea($col1, \"row\");\r\n        that._renderArea($col2, \"column\");\r\n        that._renderArea($col2, \"data\")\r\n    },\r\n    _initMarkup: function() {\r\n        var that = this;\r\n        var $element = this.$element();\r\n        var $container = (0, _renderer.default)(DIV).addClass(FIELDCHOOSER_CONTAINER_CLASS).appendTo($element);\r\n        var layout = that.option(\"layout\");\r\n        that.callBase();\r\n        $element.addClass(FIELDCHOOSER_CLASS).addClass(FIELDS_CONTAINER_CLASS);\r\n        that._dataChangedHandlers = [];\r\n        var dataSource = this._dataSource;\r\n        var currentState = \"instantly\" !== that.option(\"applyChangesMode\") && dataSource && dataSource.state();\r\n        currentState && that.option(\"state\") && dataSource.state(that.option(\"state\"), true);\r\n        if (0 === layout) {\r\n            that._renderLayout0($container)\r\n        } else {\r\n            if (1 === layout) {\r\n                that._renderLayout1($container)\r\n            } else {\r\n                that._renderLayout2($container)\r\n            }\r\n        }\r\n        currentState && dataSource.state(currentState, true)\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.callBase();\r\n        this.renderSortable();\r\n        this._renderContextMenu();\r\n        this.updateDimensions()\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        if (!this._dataSource || !this._dataSource.isLoading()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _getContextMenuArgs: function(dxEvent) {\r\n        var targetFieldElement = (0, _renderer.default)(dxEvent.target).closest(\".dx-area-field\");\r\n        var targetGroupElement = (0, _renderer.default)(dxEvent.target).closest(\".dx-area-fields\");\r\n        var field;\r\n        var area;\r\n        if (targetFieldElement.length) {\r\n            var fieldCopy = targetFieldElement.data(\"field\");\r\n            if (fieldCopy) {\r\n                field = this.getDataSource().field(fieldCopy.index) || fieldCopy\r\n            }\r\n        }\r\n        if (targetGroupElement.length) {\r\n            area = targetGroupElement.attr(\"group\")\r\n        }\r\n        return {\r\n            event: dxEvent,\r\n            field: field,\r\n            area: area,\r\n            items: []\r\n        }\r\n    },\r\n    _renderContextMenu: function() {\r\n        var that = this;\r\n        var $container = that.$element();\r\n        if (that._contextMenu) {\r\n            that._contextMenu.$element().remove()\r\n        }\r\n        that._contextMenu = that._createComponent((0, _renderer.default)(DIV).appendTo($container), _context_menu.default, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                if (!event) {\r\n                    return\r\n                }\r\n                var args = that._getContextMenuArgs(event);\r\n                that._trigger(\"onContextMenuPreparing\", args);\r\n                if (args.items && args.items.length) {\r\n                    actionArgs.component.option(\"items\", args.items)\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            target: $container,\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: \"dx-pivotgridfieldchooser-context-menu\"\r\n        })\r\n    },\r\n    _createTreeItems: function(fields, groupFieldNames, path) {\r\n        var that = this;\r\n        var isMeasure;\r\n        var resultItems = [];\r\n        var groupedItems = [];\r\n        var groupFieldName = groupFieldNames[0];\r\n        var fieldsByGroup = {};\r\n        if (!groupFieldName) {\r\n            (0, _iterator.each)(fields, function(index, field) {\r\n                var icon;\r\n                if (true === field.isMeasure) {\r\n                    icon = \"measure\"\r\n                }\r\n                if (false === field.isMeasure) {\r\n                    icon = field.groupName ? \"hierarchy\" : \"dimension\"\r\n                }\r\n                resultItems.push({\r\n                    index: field.index,\r\n                    field: field,\r\n                    key: field.dataField,\r\n                    selected: (0, _type.isDefined)(field.area),\r\n                    text: field.caption || field.dataField,\r\n                    icon: icon,\r\n                    isMeasure: field.isMeasure,\r\n                    isDefault: field.isDefault\r\n                })\r\n            })\r\n        } else {\r\n            (0, _iterator.each)(fields, function(index, field) {\r\n                var groupName = field[groupFieldName] || \"\";\r\n                fieldsByGroup[groupName] = fieldsByGroup[groupName] || [];\r\n                fieldsByGroup[groupName].push(field);\r\n                if (void 0 === isMeasure) {\r\n                    isMeasure = true\r\n                }\r\n                isMeasure = isMeasure && true === field.isMeasure\r\n            });\r\n            (0, _iterator.each)(fieldsByGroup, function(groupName, fields) {\r\n                var currentPath = path ? path + \".\" + groupName : groupName;\r\n                var items = that._createTreeItems(fields, groupFieldNames.slice(1), currentPath);\r\n                if (groupName) {\r\n                    groupedItems.push({\r\n                        key: groupName,\r\n                        text: groupName,\r\n                        path: currentPath,\r\n                        isMeasure: items.isMeasure,\r\n                        expanded: (0, _array.inArray)(currentPath, that._expandedPaths) >= 0,\r\n                        items: items\r\n                    })\r\n                } else {\r\n                    resultItems = items\r\n                }\r\n            });\r\n            resultItems = groupedItems.concat(resultItems);\r\n            resultItems.isMeasure = isMeasure\r\n        }\r\n        return resultItems\r\n    },\r\n    _createFieldsDataSource: function(dataSource) {\r\n        var fields = dataSource && dataSource.fields() || [];\r\n        fields = fields.filter(function(field) {\r\n            return false !== field.visible && !(0, _type.isDefined)(field.groupIndex)\r\n        });\r\n        var treeItems = this._createTreeItems(fields, [\"dimension\", \"displayFolder\"]);\r\n        (0, _uiPivot_grid.foreachDataLevel)(treeItems, function(items) {\r\n            items.sort(compareItems)\r\n        }, 0, \"items\");\r\n        return treeItems\r\n    },\r\n    _renderFieldsTreeView: function(container) {\r\n        var that = this;\r\n        var dataSource = that._dataSource;\r\n        var treeView = that._createComponent(container, _tree_view.default, {\r\n            dataSource: that._createFieldsDataSource(dataSource),\r\n            showCheckBoxesMode: \"normal\",\r\n            expandNodesRecursive: false,\r\n            searchEnabled: that.option(\"allowSearch\"),\r\n            searchTimeout: that.option(\"searchTimeout\"),\r\n            itemTemplate: function(itemData, itemIndex, itemElement) {\r\n                if (itemData.icon) {\r\n                    (0, _icon.getImageContainer)(itemData.icon).appendTo(itemElement)\r\n                }(0, _renderer.default)(\"<span>\").toggleClass(\"dx-area-field\", !itemData.items).data(\"field\", itemData.field).text(itemData.text).appendTo(itemElement)\r\n            },\r\n            onItemCollapsed: function(e) {\r\n                var index = (0, _array.inArray)(e.itemData.path, that._expandedPaths);\r\n                if (index >= 0) {\r\n                    that._expandedPaths.splice(index, 1)\r\n                }\r\n            },\r\n            onItemExpanded: function(e) {\r\n                var index = (0, _array.inArray)(e.itemData.path, that._expandedPaths);\r\n                if (index < 0) {\r\n                    that._expandedPaths.push(e.itemData.path)\r\n                }\r\n            },\r\n            onItemSelectionChanged: function(e) {\r\n                var data = e.itemData;\r\n                var field;\r\n                var fields;\r\n                var needSelectDefaultItem = true;\r\n                var area;\r\n                if (data.items) {\r\n                    if (data.selected) {\r\n                        treeView.unselectItem(data);\r\n                        return\r\n                    }\r\n                    that._processDemandState(function() {\r\n                        fields = getDimensionFields(data, dataSource.fields());\r\n                        for (var i = 0; i < fields.length; i++) {\r\n                            if (fields[i].area) {\r\n                                needSelectDefaultItem = false;\r\n                                break\r\n                            }\r\n                        }\r\n                    });\r\n                    if (needSelectDefaultItem) {\r\n                        var item = getFirstItem(data, function(item) {\r\n                            return item.isDefault\r\n                        }) || getFirstItem(data, function(item) {\r\n                            return (0, _type.isDefined)(item.index)\r\n                        });\r\n                        item && treeView.selectItem(item);\r\n                        return\r\n                    }\r\n                } else {\r\n                    field = dataSource.fields()[data.index];\r\n                    if (data.selected) {\r\n                        area = field.isMeasure ? \"data\" : \"column\"\r\n                    }\r\n                    if (field) {\r\n                        fields = [field]\r\n                    }\r\n                }\r\n                that._applyChanges(fields, {\r\n                    area: area,\r\n                    areaIndex: void 0\r\n                })\r\n            }\r\n        });\r\n        var dataChanged = function() {\r\n            var scrollable = getScrollable(container);\r\n            var scrollTop = scrollable ? scrollable.scrollTop() : 0;\r\n            treeView.option({\r\n                dataSource: that._createFieldsDataSource(dataSource)\r\n            });\r\n            scrollable = getScrollable(container);\r\n            if (scrollable) {\r\n                scrollable.scrollTo({\r\n                    y: scrollTop\r\n                });\r\n                scrollable.update()\r\n            }\r\n        };\r\n        that._dataChangedHandlers.push(dataChanged)\r\n    },\r\n    _renderAreaFields: function($container, area) {\r\n        var that = this;\r\n        var dataSource = that._dataSource;\r\n        var fields = dataSource ? (0, _extend.extend)(true, [], dataSource.getAreaFields(area, true)) : [];\r\n        $container.empty();\r\n        (0, _iterator.each)(fields, function(_, field) {\r\n            if (false !== field.visible) {\r\n                that.renderField(field, true).appendTo($container)\r\n            }\r\n        })\r\n    },\r\n    _renderArea: function(container, area) {\r\n        var that = this;\r\n        var $areaContainer = (0, _renderer.default)(DIV).addClass(\"dx-area\").appendTo(container);\r\n        var $fieldsHeaderContainer = (0, _renderer.default)(DIV).addClass(\"dx-area-fields-header\").appendTo($areaContainer);\r\n        var caption = that.option(\"texts.\" + area + \"Fields\");\r\n        var $fieldsContent;\r\n        var render;\r\n        (0, _renderer.default)(\"<span>\").addClass(\"dx-area-icon\").addClass(\"dx-area-icon-\" + area).appendTo($fieldsHeaderContainer);\r\n        (0, _renderer.default)(\"<span>\").html(\"&nbsp;\").appendTo($fieldsHeaderContainer);\r\n        (0, _renderer.default)(\"<span>\").addClass(\"dx-area-caption\").text(caption).appendTo($fieldsHeaderContainer);\r\n        var $fieldsContainer = (0, _renderer.default)(DIV).addClass(\"dx-area-fields\").addClass(AREA_DRAG_CLASS).appendTo($areaContainer);\r\n        if (\"all\" !== area) {\r\n            $fieldsContainer.attr(\"group\", area).attr(\"allow-scrolling\", true);\r\n            $fieldsContent = (0, _renderer.default)(DIV).addClass(\"dx-area-field-container\").appendTo($fieldsContainer);\r\n            render = function() {\r\n                that._renderAreaFields($fieldsContent, area)\r\n            };\r\n            that._dataChangedHandlers.push(render);\r\n            render();\r\n            $fieldsContainer.dxScrollable()\r\n        } else {\r\n            $areaContainer.addClass(\"dx-all-fields\");\r\n            $fieldsContainer.addClass(\"dx-treeview-border-visible\");\r\n            that._renderFieldsTreeView($fieldsContainer)\r\n        }\r\n    },\r\n    _getSortableOptions: function() {\r\n        return {}\r\n    },\r\n    _adjustSortableOnChangedArgs: function() {},\r\n    resetTreeView: function() {\r\n        var treeView = this.$element().find(\".dx-treeview\").dxTreeView(\"instance\");\r\n        if (treeView) {\r\n            treeView.option(\"searchValue\", \"\");\r\n            treeView.collapseAll()\r\n        }\r\n    },\r\n    applyChanges: function() {\r\n        var state = this.option(\"state\");\r\n        if ((0, _type.isDefined)(state)) {\r\n            this._dataSource.state(state)\r\n        }\r\n    },\r\n    cancelChanges: function() {\r\n        var dataSource = this._dataSource;\r\n        if (!dataSource.isLoading()) {\r\n            this.option(\"state\", dataSource.state());\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    getDataSource: function() {\r\n        return this._dataSource\r\n    },\r\n    updateDimensions: function() {\r\n        var $scrollableElements = this.$element().find(\".dx-area .dx-scrollable\");\r\n        $scrollableElements.dxScrollable(\"update\")\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible && hasWindow) {\r\n            this.updateDimensions()\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxPivotGridFieldChooser\", FieldChooser);\r\nvar _default = FieldChooser;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}