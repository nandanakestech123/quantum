{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Inventory\\\\StocksPDF\\\\Details\\\\POTable.js\";\nimport React, { Fragment } from \"react\";\nimport { Text, View, StyleSheet, Font } from \"@react-pdf/renderer\";\nconst borderColor = \"#90e5fc\"; // Font.registerHyphenationCallback(ss => {\n//   const middle = Math.floor(ss.length/2);\n//   const parts = ss.length === 1 ? [ss] : [ss.substr(0, middle), ss.substr(middle)];\n//   // Check console to see words parts\n//   console.log(ss, parts);\n//   return parts;\n// });\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    borderBottomColor: \"#bff0fd\",\n    borderBottomWidth: 1,\n    flexGrow: 1,\n    fontSize: \"9px\",\n    alignItems: \"center\",\n    height: 50\n  },\n  description: {\n    width: \"30%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  date: {\n    width: \"10%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  total: {\n    width: \"72%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  status: {\n    width: \"13%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  number: {\n    width: \"5%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  code: {\n    width: \"8%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  },\n  desc: {\n    width: \"16%\",\n    borderRightColor: borderColor,\n    borderRightWidth: 1,\n    textAlign: \"center\"\n  }\n});\nexport class POTable extends React.Component {\n  render() {\n    let {\n      reportDetailsList,\n      blur\n    } = this.props;\n    let ss = reportDetailsList;\n    return reportDetailsList.map((list, index) => list.map((item, index) => !isNaN(item.total) ? /*#__PURE__*/React.createElement(View, {\n      wrap: false,\n      style: styles.row,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: styles.total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(Text, {\n      style: styles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, item.total)) : /*#__PURE__*/React.createElement(View, {\n      wrap: false,\n      style: styles.row,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, item.ITEMCODE), /*#__PURE__*/React.createElement(Text, {\n      style: styles.desc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, item.ITEMDESC), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, item.Item_UOM), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, item.TRN_POST), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, item.TRN_DATE), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, item.TRN_TYPE), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, item.TRN_DOCNO), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, item.FSTORE_NO), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, item.TSTORE_NO), /*#__PURE__*/React.createElement(Text, {\n      style: styles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, item.TRN_QTY), /*#__PURE__*/React.createElement(Text, {\n      style: styles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, item.TRN_AMT), /*#__PURE__*/React.createElement(Text, {\n      style: styles.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, item.TRN_BALQTY))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Inventory/StocksPDF/Details/POTable.js"],"names":["React","Fragment","Text","View","StyleSheet","Font","borderColor","styles","create","row","flexDirection","borderBottomColor","borderBottomWidth","flexGrow","fontSize","alignItems","height","description","width","borderRightColor","borderRightWidth","textAlign","date","total","status","number","code","desc","POTable","Component","render","reportDetailsList","blur","props","ss","map","list","index","item","isNaN","ITEMCODE","ITEMDESC","Item_UOM","TRN_POST","TRN_DATE","TRN_TYPE","TRN_DOCNO","FSTORE_NO","TSTORE_NO","TRN_QTY","TRN_AMT","TRN_BALQTY"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Text, View, StyleSheet,Font} from \"@react-pdf/renderer\";\r\nconst borderColor = \"#90e5fc\";\r\n// Font.registerHyphenationCallback(ss => {\r\n//   const middle = Math.floor(ss.length/2);\r\n//   const parts = ss.length === 1 ? [ss] : [ss.substr(0, middle), ss.substr(middle)];\r\n\r\n//   // Check console to see words parts\r\n//   console.log(ss, parts);\r\n\r\n//   return parts;\r\n// });\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    borderBottomColor: \"#bff0fd\",\r\n    borderBottomWidth: 1,\r\n    flexGrow: 1,\r\n    fontSize: \"9px\",\r\n    alignItems: \"center\",\r\n    height:50,\r\n  },\r\n  description: {\r\n    width: \"30%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  date: { \r\n    width: \"10%\", \r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  total: {\r\n    width: \"72%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1, \r\n    textAlign: \"center\", \r\n  },\r\n  status: {\r\n    width: \"13%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  number: {\r\n    width: \"5%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  code: {\r\n    width: \"8%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  desc: {\r\n    width: \"16%\",\r\n    borderRightColor: borderColor,\r\n    borderRightWidth: 1,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport class POTable extends React.Component {\r\n  render() {\r\n    let { reportDetailsList, blur  } = this.props;\r\n    let ss= reportDetailsList;\r\n    return reportDetailsList.map((list, index) => (\r\n      list.map((item, index)=>(\r\n        !isNaN(item.total) ? \r\n        <View wrap={false} style={styles.row} key={index}>\r\n        <Text style={styles.total}></Text>\r\n        <Text style={styles.code}>Total</Text>\r\n        <Text style={styles.number}>{item.total}</Text>\r\n      \r\n      </View>\r\n      :\r\n        <View wrap={false} style={styles.row} key={index}>\r\n        <Text style={styles.code}>{item.ITEMCODE}</Text>\r\n        <Text style={styles.desc}>{item.ITEMDESC}</Text>\r\n        <Text style={styles.code}>{item.Item_UOM}</Text>\r\n        <Text style={styles.code}>{item.TRN_POST}</Text>\r\n        <Text style={styles.code}>{item.TRN_DATE}</Text>\r\n        <Text style={styles.code}>{item.TRN_TYPE}</Text>\r\n        <Text style={styles.code}>{item.TRN_DOCNO}</Text>\r\n        <Text style={styles.code}>{item.FSTORE_NO}</Text>\r\n        <Text style={styles.code}>{item.TSTORE_NO}</Text>\r\n        <Text style={styles.number}>{item.TRN_QTY}</Text>\r\n        <Text style={styles.number}>{item.TRN_AMT}</Text>\r\n        <Text style={styles.code}>{item.TRN_BALQTY}</Text>\r\n      \r\n      </View>\r\n        ))\r\n\r\n      \r\n    ));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}