{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\TCM\\\\TCMCustomerList\\\\index.js\";\nimport React from \"react\";\nimport { NormalButton, NormalSelect, TableWrapper } from \"component/common\";\nimport { getTcmApi, tcmCreateApi } from \"redux/actions/TCM\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport _ from \"lodash\";\nimport { withTranslation } from \"react-i18next\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { PDFViewer, PDFDownloadLink, BlobProvider } from \"@react-pdf/renderer\";\nimport MedicalCertificate from \"../Report/MedicalCertificate\";\nimport Receipt from \"../Report/Receipt\";\nexport class TCMCustomerListClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Customer Code\"\n      }, {\n        label: \"Customer Name\"\n      }, {\n        label: \"Contact\"\n      }, {\n        label: \"Gender\"\n      }, {\n        label: \"Appointment Timing\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Location\"\n      }, {\n        label: \"Physician\"\n      }, {\n        label: \"Status\"\n      }, {\n        label: \"\",\n        width: \"100px\"\n      }],\n      tcmCustomerList: [],\n      pageMeta: {},\n      active: false,\n      currentIndex: -1,\n      isPrintPdfClick: false,\n      accountHeader: {},\n      tcmPrescriptionMain: [],\n      MedicalCertificateResult: [],\n      isMedicalCertificateClick: false\n    };\n\n    this.queryHandler = data => {\n      let payload = {\n        siteCode: this.props.tokenDetails.site_code,\n        date: dateFormat(new Date(), \"yyyy-mm-dd\")\n      };\n      this.props.tcmCreateApi(`tcmCustomerListFronDesk/`, payload).then(res => {\n        console.log(res, \"dsfdfaafg\");\n        let {\n          result,\n          success\n        } = res;\n        let {\n          tcmCustomerList\n        } = this.state;\n\n        if (success == \"1\" && result) {\n          tcmCustomerList = result;\n          this.setState({\n            tcmCustomerList\n          });\n        }\n      });\n    };\n\n    this.getSiteBaseTitle = () => {\n      this.props.getTcmApi(`getInvoiceTitle/?siteCode=${this.props.tokenDetails.site_code}`).then(res => {\n        console.log(res, \"invoicetitle\");\n        let {\n          result,\n          success\n        } = res;\n\n        if (success == \"1\" && result) {\n          this.setState({\n            accountHeader: result\n          });\n        }\n      });\n    };\n\n    this.getMedicalCertificate = data => {\n      this.props.getTcmApi(`tcmMedicalCertificate/?MCNo=${data}`).then(res => {\n        let {\n          result,\n          success\n        } = res;\n        console.log(res, \"Mcnumber repsonse\");\n\n        if (success == \"1\" && result) {\n          this.getSiteBaseTitle();\n          this.setState({\n            MedicalCertificateResult: result,\n            isMedicalCertificateClick: true\n          });\n        }\n      });\n    };\n\n    this.handlePrintPdfFormat = url => {\n      let {\n        tcmPrescriptionMain\n      } = this.state;\n      this.setState({\n        isPrintPdfClick: false\n      });\n      var a = document.createElement(\"a\");\n      a.setAttribute(\"download\", `${tcmPrescriptionMain[0].prescriptionNo}.pdf`);\n      a.setAttribute(\"href\", url);\n      a.click();\n      window.open(url);\n    };\n\n    this.handleReceipt = data => {\n      this.props.getTcmApi(`tcmPrescriptionReceipt/?PrescriptionNo=${data.prescriptionNo}`).then(res => {\n        let {\n          result,\n          success\n        } = res;\n\n        if (success == \"1\" && result) {\n          this.getSiteBaseTitle();\n          this.setState({\n            tcmPrescriptionMain: result,\n            isPrintPdfClick: true\n          });\n        }\n      });\n    };\n\n    this.handleMedicalReceiptPdfFormat = url => {\n      var a = document.createElement(\"a\");\n      a.setAttribute(\"download\", `${`MedicalCertificate`}.pdf`);\n      a.setAttribute(\"href\", url);\n      a.click();\n      this.setState({\n        isMedicalCertificateClick: false\n      });\n      window.open(url);\n    };\n  }\n\n  componentDidMount() {\n    this.queryHandler({});\n    this.getSiteBaseTitle();\n  } // api call for list\n\n\n  render() {\n    let {\n      headerDetails,\n      tcmCustomerList,\n      isPrintPdfClick,\n      accountHeader,\n      tcmPrescriptionMain,\n      isMedicalCertificateClick,\n      MedicalCertificateResult\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails // queryHandler={this.handlePagination}\n      // pageMeta={pageMeta}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, tcmCustomerList.length > 0 ? tcmCustomerList.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, data.customerCode)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, data.customerName)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, data.contactNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, data.gender)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, data.apptDate)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }, data.location)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, data.physician)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, data.apptStatus)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        className: \"fs-12\",\n        label: \"Receipt\",\n        mainbgrev: true,\n        onClick: () => this.handleReceipt(data),\n        disabled: String(data.apptStatus).toUpperCase() === \"DONE\" ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(NormalButton, {\n        className: \"fs-12 ml-2\",\n        label: \"MC\",\n        mainbgrev: true // onClick={() => this.getMedicalCertificate(\"MC100051\")}\n        ,\n        onClick: () => this.getMedicalCertificate(data.MCNo),\n        disabled: String(data.apptStatus).toUpperCase() === \"DONE\" && data.MCNo ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }\n      }))));\n    }) : null), isPrintPdfClick ? /*#__PURE__*/React.createElement(PDFDownloadLink, {\n      document: /*#__PURE__*/React.createElement(Receipt, {\n        MainInfo: this.state.tcmPrescriptionMain,\n        accountHeader: this.state.accountHeader,\n        landscape: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, ({\n      blob,\n      url,\n      loading,\n      error\n    }) => !loading && url ? this.handlePrintPdfFormat(url) : null) : null, isMedicalCertificateClick ? /*#__PURE__*/React.createElement(PDFDownloadLink, {\n      document: /*#__PURE__*/React.createElement(MedicalCertificate, {\n        CertificateData: this.state.MedicalCertificateResult,\n        HeaderDetail: this.state.accountHeader,\n        landscape: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, ({\n      blob,\n      url,\n      loading,\n      error\n    }) => !loading && url ? this.handleMedicalReceiptPdfFormat(url) : null) : null));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // filter: state.dashboard\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getTcmApi,\n    tcmCreateApi\n  }, dispatch);\n};\n\nexport const TCMCustomerList = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TCMCustomerListClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/TCM/TCMCustomerList/index.js"],"names":["React","NormalButton","NormalSelect","TableWrapper","getTcmApi","tcmCreateApi","connect","bindActionCreators","_","withTranslation","dateFormat","PDFViewer","PDFDownloadLink","BlobProvider","MedicalCertificate","Receipt","TCMCustomerListClass","Component","state","headerDetails","label","divClass","width","tcmCustomerList","pageMeta","active","currentIndex","isPrintPdfClick","accountHeader","tcmPrescriptionMain","MedicalCertificateResult","isMedicalCertificateClick","queryHandler","data","payload","siteCode","props","tokenDetails","site_code","date","Date","then","res","console","log","result","success","setState","getSiteBaseTitle","getMedicalCertificate","handlePrintPdfFormat","url","a","document","createElement","setAttribute","prescriptionNo","click","window","open","handleReceipt","handleMedicalReceiptPdfFormat","componentDidMount","render","t","length","map","index","customerCode","customerName","contactNo","gender","apptDate","location","physician","apptStatus","String","toUpperCase","MCNo","blob","loading","error","mapStateToProps","authStore","mapDispatchToProps","dispatch","TCMCustomerList"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { NormalButton, NormalSelect, TableWrapper } from \"component/common\";\r\nimport { getTcmApi, tcmCreateApi } from \"redux/actions/TCM\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport _ from \"lodash\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { PDFViewer, PDFDownloadLink, BlobProvider } from \"@react-pdf/renderer\";\r\nimport MedicalCertificate from \"../Report/MedicalCertificate\";\r\nimport Receipt from \"../Report/Receipt\";\r\n\r\nexport class TCMCustomerListClass extends React.Component {\r\n  state = {\r\n    headerDetails: [\r\n      { label: \"Customer Code\" },\r\n      { label: \"Customer Name\" },\r\n      { label: \"Contact\" },\r\n      { label: \"Gender\" },\r\n      {\r\n        label: \"Appointment Timing\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Location\" },\r\n      { label: \"Physician\" },\r\n      { label: \"Status\" },\r\n      { label: \"\", width: \"100px\" },\r\n    ],\r\n    tcmCustomerList: [],\r\n    pageMeta: {},\r\n    active: false,\r\n    currentIndex: -1,\r\n    isPrintPdfClick: false,\r\n    accountHeader: {},\r\n    tcmPrescriptionMain: [],\r\n    MedicalCertificateResult: [],\r\n    isMedicalCertificateClick: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.queryHandler({});\r\n    this.getSiteBaseTitle();\r\n  }\r\n\r\n  // api call for list\r\n  queryHandler = data => {\r\n    let payload = {\r\n      siteCode: this.props.tokenDetails.site_code,\r\n      date: dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n    };\r\n    this.props.tcmCreateApi(`tcmCustomerListFronDesk/`, payload).then(res => {\r\n      console.log(res, \"dsfdfaafg\");\r\n      let { result, success } = res;\r\n      let { tcmCustomerList } = this.state;\r\n      if (success == \"1\" && result) {\r\n        tcmCustomerList = result;\r\n        this.setState({\r\n          tcmCustomerList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getSiteBaseTitle = () => {\r\n    this.props\r\n      .getTcmApi(\r\n        `getInvoiceTitle/?siteCode=${this.props.tokenDetails.site_code}`\r\n      )\r\n      .then(res => {\r\n        console.log(res, \"invoicetitle\");\r\n        let { result, success } = res;\r\n        if (success == \"1\" && result) {\r\n          this.setState({\r\n            accountHeader: result,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  getMedicalCertificate = data => {\r\n    this.props.getTcmApi(`tcmMedicalCertificate/?MCNo=${data}`).then(res => {\r\n      let { result, success } = res;\r\n      console.log(res, \"Mcnumber repsonse\");\r\n      if (success == \"1\" && result) {\r\n        this.getSiteBaseTitle();\r\n        this.setState({\r\n          MedicalCertificateResult: result,\r\n          isMedicalCertificateClick: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  handlePrintPdfFormat = url => {\r\n    let { tcmPrescriptionMain } = this.state;\r\n    this.setState({\r\n      isPrintPdfClick: false,\r\n    });\r\n    var a = document.createElement(\"a\");\r\n    a.setAttribute(\"download\", `${tcmPrescriptionMain[0].prescriptionNo}.pdf`);\r\n    a.setAttribute(\"href\", url);\r\n    a.click();\r\n    window.open(url);\r\n  };\r\n  handleReceipt = data => {\r\n    this.props\r\n      .getTcmApi(\r\n        `tcmPrescriptionReceipt/?PrescriptionNo=${data.prescriptionNo}`\r\n      )\r\n      .then(res => {\r\n        let { result, success } = res;\r\n        if (success == \"1\" && result) {\r\n          this.getSiteBaseTitle();\r\n          this.setState({\r\n            tcmPrescriptionMain: result,\r\n            isPrintPdfClick: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  handleMedicalReceiptPdfFormat = url => {\r\n    var a = document.createElement(\"a\");\r\n    a.setAttribute(\"download\", `${`MedicalCertificate`}.pdf`);\r\n    a.setAttribute(\"href\", url);\r\n    a.click();\r\n    this.setState({\r\n      isMedicalCertificateClick: false,\r\n    });\r\n    window.open(url);\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      tcmCustomerList,\r\n      isPrintPdfClick,\r\n      accountHeader,\r\n      tcmPrescriptionMain,\r\n      isMedicalCertificateClick,\r\n      MedicalCertificateResult,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"table-container table-responsive mt-3\">\r\n          <TableWrapper\r\n            headerDetails={headerDetails}\r\n            // queryHandler={this.handlePagination}\r\n            // pageMeta={pageMeta}\r\n          >\r\n            {tcmCustomerList.length > 0\r\n              ? tcmCustomerList.map((data, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <div className=\"text-left\">{data.customerCode}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-left\">{data.customerName}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-left\">{data.contactNo}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-left\">{data.gender}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-right\">{data.apptDate}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-left\">{data.location}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-left\">{data.physician}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"text-left\">{data.apptStatus}</div>\r\n                      </td>\r\n                      <td className=\"position-relative\">\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <NormalButton\r\n                            className=\"fs-12\"\r\n                            label=\"Receipt\"\r\n                            mainbgrev={true}\r\n                            onClick={() => this.handleReceipt(data)}\r\n                            disabled={\r\n                              String(data.apptStatus).toUpperCase() === \"DONE\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                          <NormalButton\r\n                            className=\"fs-12 ml-2\"\r\n                            label=\"MC\"\r\n                            mainbgrev={true}\r\n                            // onClick={() => this.getMedicalCertificate(\"MC100051\")}\r\n                            onClick={() =>\r\n                              this.getMedicalCertificate(data.MCNo)\r\n                            }\r\n                            disabled={\r\n                              String(data.apptStatus).toUpperCase() ===\r\n                                \"DONE\" && data.MCNo\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </TableWrapper>\r\n\r\n          {isPrintPdfClick ? (\r\n            <PDFDownloadLink\r\n              document={\r\n                <Receipt\r\n                  MainInfo={this.state.tcmPrescriptionMain}\r\n                  accountHeader={this.state.accountHeader}\r\n                  landscape={false}\r\n                />\r\n              }\r\n            >\r\n              {({ blob, url, loading, error }) =>\r\n                !loading && url ? this.handlePrintPdfFormat(url) : null\r\n              }\r\n            </PDFDownloadLink>\r\n          ) : null}\r\n\r\n          {isMedicalCertificateClick ? (\r\n            <PDFDownloadLink\r\n              document={\r\n                <MedicalCertificate\r\n                  CertificateData={this.state.MedicalCertificateResult}\r\n                  HeaderDetail={this.state.accountHeader}\r\n                  landscape={false}\r\n                />\r\n              }\r\n            >\r\n              {({ blob, url, loading, error }) =>\r\n                !loading && url ? this.handleMedicalReceiptPdfFormat(url) : null\r\n              }\r\n            </PDFDownloadLink>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // filter: state.dashboard\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getTcmApi,\r\n      tcmCreateApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TCMCustomerList = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(TCMCustomerListClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}