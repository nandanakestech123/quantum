{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.indicator.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\n\nvar _uiScheduler = _interopRequireDefault(require(\"./ui.scheduler.work_space\"));\n\nvar _component_registrator = _interopRequireDefault(require(\"../../../core/component_registrator\"));\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _position = require(\"../../../core/utils/position\");\n\nvar _window = require(\"../../../core/utils/window\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (\"undefined\" !== typeof Reflect && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function (target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) {\n        return;\n      }\n\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n\n    if (null === object) {\n      break;\n    }\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar toMs = _date.default.dateToMilliseconds;\nvar SCHEDULER_DATE_TIME_INDICATOR_CLASS = \"dx-scheduler-date-time-indicator\";\nvar TIME_PANEL_CURRENT_TIME_CELL_CLASS = \"dx-scheduler-time-panel-current-time-cell\";\nvar HEADER_CURRENT_TIME_CELL_CLASS = \"dx-scheduler-header-panel-current-time-cell\";\n\nvar SchedulerWorkSpaceIndicator = function (_SchedulerWorkSpace) {\n  _inherits(SchedulerWorkSpaceIndicator, _SchedulerWorkSpace);\n\n  var _super = _createSuper(SchedulerWorkSpaceIndicator);\n\n  function SchedulerWorkSpaceIndicator() {\n    _classCallCheck(this, SchedulerWorkSpaceIndicator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SchedulerWorkSpaceIndicator, [{\n    key: \"_getTimeZoneCalculator\",\n    value: function () {\n      return this.invoke(\"getTimeZoneCalculator\");\n    }\n  }, {\n    key: \"_getToday\",\n    value: function () {\n      var todayDate = this.option(\"indicatorTime\") || new Date();\n\n      var timeZoneCalculator = this._getTimeZoneCalculator();\n\n      return (null === timeZoneCalculator || void 0 === timeZoneCalculator ? void 0 : timeZoneCalculator.createDate(todayDate, {\n        path: \"toGrid\"\n      })) || todayDate;\n    }\n  }, {\n    key: \"isIndicationOnView\",\n    value: function () {\n      if (this.option(\"showCurrentTimeIndicator\")) {\n        var today = this._getToday();\n\n        var endViewDate = _date.default.trimTime(this.getEndViewDate());\n\n        return _date.default.dateInRange(today, this._firstViewDate, new Date(endViewDate.getTime() + toMs(\"day\")));\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isIndicationAvailable\",\n    value: function () {\n      if (!(0, _window.hasWindow)()) {\n        return false;\n      }\n\n      var today = this._getToday();\n\n      return today >= _date.default.trimTime(new Date(this.getStartViewDate()));\n    }\n  }, {\n    key: \"isIndicatorVisible\",\n    value: function () {\n      var today = this._getToday();\n\n      var endViewDate = new Date(this.getEndViewDate());\n      var firstViewDate = new Date(this.getStartViewDate());\n      firstViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n      endViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n      return _date.default.dateInRange(today, firstViewDate, endViewDate);\n    }\n  }, {\n    key: \"_renderDateTimeIndication\",\n    value: function () {\n      if (this.isIndicationAvailable()) {\n        if (this.option(\"shadeUntilCurrentTime\")) {\n          this._shader.render();\n        }\n\n        if (this.isIndicationOnView() && this.isIndicatorVisible()) {\n          var groupCount = this._getGroupCount() || 1;\n\n          var $container = this._dateTableScrollable.$content();\n\n          var height = this.getIndicationHeight();\n\n          var rtlOffset = this._getRtlOffset(this.getCellWidth());\n\n          this._renderIndicator(height, rtlOffset, $container, groupCount);\n        }\n      }\n    }\n  }, {\n    key: \"_renderIndicator\",\n    value: function (height, rtlOffset, $container, groupCount) {\n      var groupedByDate = this.isGroupedByDate();\n      var repeatCount = groupedByDate ? 1 : groupCount;\n\n      for (var i = 0; i < repeatCount; i++) {\n        var $indicator = this._createIndicator($container);\n\n        $indicator.width(groupedByDate ? this.getCellWidth() * groupCount : this.getCellWidth());\n\n        this._groupedStrategy.shiftIndicator($indicator, height, rtlOffset, i);\n      }\n    }\n  }, {\n    key: \"_createIndicator\",\n    value: function ($container) {\n      var $indicator = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_DATE_TIME_INDICATOR_CLASS);\n      $container.append($indicator);\n      return $indicator;\n    }\n  }, {\n    key: \"_getRtlOffset\",\n    value: function (width) {\n      return this.option(\"rtlEnabled\") ? (0, _position.getBoundingRect)(this._dateTableScrollable.$content().get(0)).width - this.getTimePanelWidth() - width : 0;\n    }\n  }, {\n    key: \"_setIndicationUpdateInterval\",\n    value: function () {\n      if (!this.option(\"showCurrentTimeIndicator\") || 0 === this.option(\"indicatorUpdateInterval\")) {\n        return;\n      }\n\n      this._clearIndicatorUpdateInterval();\n\n      this._indicatorInterval = setInterval(function () {\n        this._refreshDateTimeIndication();\n      }.bind(this), this.option(\"indicatorUpdateInterval\"));\n    }\n  }, {\n    key: \"_clearIndicatorUpdateInterval\",\n    value: function () {\n      if (this._indicatorInterval) {\n        clearInterval(this._indicatorInterval);\n        delete this._indicatorInterval;\n      }\n    }\n  }, {\n    key: \"_isVerticalShader\",\n    value: function () {\n      return true;\n    }\n  }, {\n    key: \"getIndicationWidth\",\n    value: function (groupIndex) {\n      var maxWidth = this.getCellWidth() * this._getCellCount();\n\n      var difference = this._getIndicatorDuration();\n\n      if (difference > this._getCellCount()) {\n        difference = this._getCellCount();\n      }\n\n      var width = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);\n      return maxWidth < width ? maxWidth : width;\n    }\n  }, {\n    key: \"getIndicatorOffset\",\n    value: function (groupIndex) {\n      var difference = this._getIndicatorDuration() - 1;\n      var offset = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);\n      return offset;\n    }\n  }, {\n    key: \"_getIndicatorDuration\",\n    value: function () {\n      var today = this._getToday();\n\n      var firstViewDate = new Date(this._firstViewDate);\n      var timeDiff = today.getTime() - firstViewDate.getTime();\n\n      if (\"workWeek\" === this.option(\"type\")) {\n        timeDiff -= this._getWeekendsCount(Math.round(timeDiff / toMs(\"day\"))) * toMs(\"day\");\n      }\n\n      return Math.ceil((timeDiff + 1) / toMs(\"day\"));\n    }\n  }, {\n    key: \"getIndicationHeight\",\n    value: function () {\n      var today = this._getToday();\n\n      var cellHeight = this.getCellHeight();\n      var date = new Date(this._firstViewDate);\n\n      if (this.isIndicationOnView()) {\n        date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n      }\n\n      var duration = today.getTime() - date.getTime();\n      var cellCount = duration / this.getCellDuration();\n      return cellCount * cellHeight;\n    }\n  }, {\n    key: \"_dispose\",\n    value: function () {\n      this._clearIndicatorUpdateInterval();\n\n      _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_dispose\", this).apply(this, arguments);\n    }\n  }, {\n    key: \"_refreshDateTimeIndication\",\n    value: function () {\n      this._cleanDateTimeIndicator();\n\n      this._shader && this._shader.clean();\n\n      this._renderDateTimeIndication();\n    }\n  }, {\n    key: \"_isCurrentTime\",\n    value: function (date) {\n      if (this.isIndicationOnView()) {\n        var today = this._getToday();\n\n        var result = false;\n        date = new Date(date);\n        date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n        var startCellDate = new Date(date);\n        var endCellDate = new Date(date);\n\n        if (_date.default.sameDate(today, date)) {\n          startCellDate = startCellDate.setMilliseconds(date.getMilliseconds() - this.getCellDuration() + 1);\n          endCellDate = endCellDate.setMilliseconds(date.getMilliseconds() + this.getCellDuration());\n          result = _date.default.dateInRange(today, startCellDate, endCellDate);\n        }\n\n        return result;\n      }\n    }\n  }, {\n    key: \"_isCurrentTimeHeaderCell\",\n    value: function (headerIndex) {\n      if (this.isIndicationOnView()) {\n        var date = this._getDateByIndex(headerIndex);\n\n        return _date.default.sameDate(date, this._getToday());\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_getTimeCellClass\",\n    value: function (i) {\n      var startViewDate = this._getTimeCellDate(i);\n\n      var cellClass = _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_getTimeCellClass\", this).call(this, i);\n\n      if (this._isCurrentTime(startViewDate)) {\n        return cellClass + \" \" + TIME_PANEL_CURRENT_TIME_CELL_CLASS;\n      }\n\n      return cellClass;\n    }\n  }, {\n    key: \"_getHeaderPanelCellClass\",\n    value: function (i) {\n      var cellClass = _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_getHeaderPanelCellClass\", this).call(this, i);\n\n      if (this._isCurrentTimeHeaderCell(i)) {\n        return cellClass + \" \" + HEADER_CURRENT_TIME_CELL_CLASS;\n      }\n\n      return cellClass;\n    }\n  }, {\n    key: \"_cleanView\",\n    value: function () {\n      _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_cleanView\", this).call(this);\n\n      this._cleanDateTimeIndicator();\n    }\n  }, {\n    key: \"_dimensionChanged\",\n    value: function () {\n      _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_dimensionChanged\", this).call(this);\n\n      this._refreshDateTimeIndication();\n    }\n  }, {\n    key: \"_cleanDateTimeIndicator\",\n    value: function () {\n      this.$element().find(\".\" + SCHEDULER_DATE_TIME_INDICATOR_CLASS).remove();\n    }\n  }, {\n    key: \"_cleanWorkSpace\",\n    value: function () {\n      _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_cleanWorkSpace\", this).call(this);\n\n      this._renderDateTimeIndication();\n\n      this._setIndicationUpdateInterval();\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function (args) {\n      switch (args.name) {\n        case \"showCurrentTimeIndicator\":\n        case \"indicatorTime\":\n          this._cleanWorkSpace();\n\n          break;\n\n        case \"indicatorUpdateInterval\":\n          this._setIndicationUpdateInterval();\n\n          break;\n\n        case \"showAllDayPanel\":\n          _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._refreshDateTimeIndication();\n\n          break;\n\n        case \"allDayExpanded\":\n          _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._refreshDateTimeIndication();\n\n          break;\n\n        case \"crossScrollingEnabled\":\n          _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._refreshDateTimeIndication();\n\n          break;\n\n        case \"shadeUntilCurrentTime\":\n          this._refreshDateTimeIndication();\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function () {\n      return (0, _extend.extend)(_get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_getDefaultOptions\", this).call(this), {\n        showCurrentTimeIndicator: true,\n        indicatorTime: new Date(),\n        indicatorUpdateInterval: 5 * toMs(\"minute\"),\n        shadeUntilCurrentTime: true\n      });\n    }\n  }]);\n\n  return SchedulerWorkSpaceIndicator;\n}(_uiScheduler.default);\n\n(0, _component_registrator.default)(\"dxSchedulerWorkSpace\", SchedulerWorkSpaceIndicator);\nvar _default = SchedulerWorkSpaceIndicator;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.work_space.indicator.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","default","_renderer","_interopRequireDefault","require","_uiScheduler","_component_registrator","_date","_extend","_position","_window","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","call","value","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","toString","e","getPrototypeOf","toMs","dateToMilliseconds","SCHEDULER_DATE_TIME_INDICATOR_CLASS","TIME_PANEL_CURRENT_TIME_CELL_CLASS","HEADER_CURRENT_TIME_CELL_CLASS","SchedulerWorkSpaceIndicator","_SchedulerWorkSpace","_super","invoke","todayDate","option","timeZoneCalculator","_getTimeZoneCalculator","createDate","path","today","_getToday","endViewDate","trimTime","getEndViewDate","dateInRange","_firstViewDate","getTime","hasWindow","getStartViewDate","firstViewDate","setFullYear","getFullYear","getMonth","getDate","isIndicationAvailable","_shader","render","isIndicationOnView","isIndicatorVisible","groupCount","_getGroupCount","$container","_dateTableScrollable","$content","height","getIndicationHeight","rtlOffset","_getRtlOffset","getCellWidth","_renderIndicator","groupedByDate","isGroupedByDate","repeatCount","$indicator","_createIndicator","width","_groupedStrategy","shiftIndicator","addClass","append","getBoundingRect","getTimePanelWidth","_clearIndicatorUpdateInterval","_indicatorInterval","setInterval","_refreshDateTimeIndication","bind","clearInterval","groupIndex","maxWidth","_getCellCount","difference","_getIndicatorDuration","getRoundedCellWidth","offset","timeDiff","_getWeekendsCount","Math","round","ceil","cellHeight","getCellHeight","date","duration","cellCount","getCellDuration","_cleanDateTimeIndicator","clean","_renderDateTimeIndication","startCellDate","endCellDate","sameDate","setMilliseconds","getMilliseconds","headerIndex","_getDateByIndex","startViewDate","_getTimeCellDate","cellClass","_isCurrentTime","_isCurrentTimeHeaderCell","$element","find","remove","_setIndicationUpdateInterval","args","name","_cleanWorkSpace","extend","showCurrentTimeIndicator","indicatorTime","indicatorUpdateInterval","shadeUntilCurrentTime","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.indicator.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _uiScheduler = _interopRequireDefault(require(\"./ui.scheduler.work_space\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../../core/component_registrator\"));\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _position = require(\"../../../core/utils/position\");\r\nvar _window = require(\"../../../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\n\r\nfunction _get(target, property, receiver) {\r\n    if (\"undefined\" !== typeof Reflect && Reflect.get) {\r\n        _get = Reflect.get\r\n    } else {\r\n        _get = function(target, property, receiver) {\r\n            var base = _superPropBase(target, property);\r\n            if (!base) {\r\n                return\r\n            }\r\n            var desc = Object.getOwnPropertyDescriptor(base, property);\r\n            if (desc.get) {\r\n                return desc.get.call(receiver)\r\n            }\r\n            return desc.value\r\n        }\r\n    }\r\n    return _get(target, property, receiver || target)\r\n}\r\n\r\nfunction _superPropBase(object, property) {\r\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\r\n        object = _getPrototypeOf(object);\r\n        if (null === object) {\r\n            break\r\n        }\r\n    }\r\n    return object\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n    if (\"function\" !== typeof superClass && null !== superClass) {\r\n        throw new TypeError(\"Super expression must either be null or a function\")\r\n    }\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n        constructor: {\r\n            value: subClass,\r\n            writable: true,\r\n            configurable: true\r\n        }\r\n    });\r\n    if (superClass) {\r\n        _setPrototypeOf(subClass, superClass)\r\n    }\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\n\r\nfunction _createSuper(Derived) {\r\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n    return function() {\r\n        var result, Super = _getPrototypeOf(Derived);\r\n        if (hasNativeReflectConstruct) {\r\n            var NewTarget = _getPrototypeOf(this).constructor;\r\n            result = Reflect.construct(Super, arguments, NewTarget)\r\n        } else {\r\n            result = Super.apply(this, arguments)\r\n        }\r\n        return _possibleConstructorReturn(this, result)\r\n    }\r\n}\r\n\r\nfunction _possibleConstructorReturn(self, call) {\r\n    if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\r\n        return call\r\n    }\r\n    return _assertThisInitialized(self)\r\n}\r\n\r\nfunction _assertThisInitialized(self) {\r\n    if (void 0 === self) {\r\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")\r\n    }\r\n    return self\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n    if (\"undefined\" === typeof Reflect || !Reflect.construct) {\r\n        return false\r\n    }\r\n    if (Reflect.construct.sham) {\r\n        return false\r\n    }\r\n    if (\"function\" === typeof Proxy) {\r\n        return true\r\n    }\r\n    try {\r\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\r\n        return true\r\n    } catch (e) {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction _getPrototypeOf(o) {\r\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o) {\r\n        return o.__proto__ || Object.getPrototypeOf(o)\r\n    };\r\n    return _getPrototypeOf(o)\r\n}\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar SCHEDULER_DATE_TIME_INDICATOR_CLASS = \"dx-scheduler-date-time-indicator\";\r\nvar TIME_PANEL_CURRENT_TIME_CELL_CLASS = \"dx-scheduler-time-panel-current-time-cell\";\r\nvar HEADER_CURRENT_TIME_CELL_CLASS = \"dx-scheduler-header-panel-current-time-cell\";\r\nvar SchedulerWorkSpaceIndicator = function(_SchedulerWorkSpace) {\r\n    _inherits(SchedulerWorkSpaceIndicator, _SchedulerWorkSpace);\r\n    var _super = _createSuper(SchedulerWorkSpaceIndicator);\r\n\r\n    function SchedulerWorkSpaceIndicator() {\r\n        _classCallCheck(this, SchedulerWorkSpaceIndicator);\r\n        return _super.apply(this, arguments)\r\n    }\r\n    _createClass(SchedulerWorkSpaceIndicator, [{\r\n        key: \"_getTimeZoneCalculator\",\r\n        value: function() {\r\n            return this.invoke(\"getTimeZoneCalculator\")\r\n        }\r\n    }, {\r\n        key: \"_getToday\",\r\n        value: function() {\r\n            var todayDate = this.option(\"indicatorTime\") || new Date;\r\n            var timeZoneCalculator = this._getTimeZoneCalculator();\r\n            return (null === timeZoneCalculator || void 0 === timeZoneCalculator ? void 0 : timeZoneCalculator.createDate(todayDate, {\r\n                path: \"toGrid\"\r\n            })) || todayDate\r\n        }\r\n    }, {\r\n        key: \"isIndicationOnView\",\r\n        value: function() {\r\n            if (this.option(\"showCurrentTimeIndicator\")) {\r\n                var today = this._getToday();\r\n                var endViewDate = _date.default.trimTime(this.getEndViewDate());\r\n                return _date.default.dateInRange(today, this._firstViewDate, new Date(endViewDate.getTime() + toMs(\"day\")))\r\n            }\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"isIndicationAvailable\",\r\n        value: function() {\r\n            if (!(0, _window.hasWindow)()) {\r\n                return false\r\n            }\r\n            var today = this._getToday();\r\n            return today >= _date.default.trimTime(new Date(this.getStartViewDate()))\r\n        }\r\n    }, {\r\n        key: \"isIndicatorVisible\",\r\n        value: function() {\r\n            var today = this._getToday();\r\n            var endViewDate = new Date(this.getEndViewDate());\r\n            var firstViewDate = new Date(this.getStartViewDate());\r\n            firstViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\r\n            endViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\r\n            return _date.default.dateInRange(today, firstViewDate, endViewDate)\r\n        }\r\n    }, {\r\n        key: \"_renderDateTimeIndication\",\r\n        value: function() {\r\n            if (this.isIndicationAvailable()) {\r\n                if (this.option(\"shadeUntilCurrentTime\")) {\r\n                    this._shader.render()\r\n                }\r\n                if (this.isIndicationOnView() && this.isIndicatorVisible()) {\r\n                    var groupCount = this._getGroupCount() || 1;\r\n                    var $container = this._dateTableScrollable.$content();\r\n                    var height = this.getIndicationHeight();\r\n                    var rtlOffset = this._getRtlOffset(this.getCellWidth());\r\n                    this._renderIndicator(height, rtlOffset, $container, groupCount)\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_renderIndicator\",\r\n        value: function(height, rtlOffset, $container, groupCount) {\r\n            var groupedByDate = this.isGroupedByDate();\r\n            var repeatCount = groupedByDate ? 1 : groupCount;\r\n            for (var i = 0; i < repeatCount; i++) {\r\n                var $indicator = this._createIndicator($container);\r\n                $indicator.width(groupedByDate ? this.getCellWidth() * groupCount : this.getCellWidth());\r\n                this._groupedStrategy.shiftIndicator($indicator, height, rtlOffset, i)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_createIndicator\",\r\n        value: function($container) {\r\n            var $indicator = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_DATE_TIME_INDICATOR_CLASS);\r\n            $container.append($indicator);\r\n            return $indicator\r\n        }\r\n    }, {\r\n        key: \"_getRtlOffset\",\r\n        value: function(width) {\r\n            return this.option(\"rtlEnabled\") ? (0, _position.getBoundingRect)(this._dateTableScrollable.$content().get(0)).width - this.getTimePanelWidth() - width : 0\r\n        }\r\n    }, {\r\n        key: \"_setIndicationUpdateInterval\",\r\n        value: function() {\r\n            if (!this.option(\"showCurrentTimeIndicator\") || 0 === this.option(\"indicatorUpdateInterval\")) {\r\n                return\r\n            }\r\n            this._clearIndicatorUpdateInterval();\r\n            this._indicatorInterval = setInterval(function() {\r\n                this._refreshDateTimeIndication()\r\n            }.bind(this), this.option(\"indicatorUpdateInterval\"))\r\n        }\r\n    }, {\r\n        key: \"_clearIndicatorUpdateInterval\",\r\n        value: function() {\r\n            if (this._indicatorInterval) {\r\n                clearInterval(this._indicatorInterval);\r\n                delete this._indicatorInterval\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_isVerticalShader\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"getIndicationWidth\",\r\n        value: function(groupIndex) {\r\n            var maxWidth = this.getCellWidth() * this._getCellCount();\r\n            var difference = this._getIndicatorDuration();\r\n            if (difference > this._getCellCount()) {\r\n                difference = this._getCellCount()\r\n            }\r\n            var width = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);\r\n            return maxWidth < width ? maxWidth : width\r\n        }\r\n    }, {\r\n        key: \"getIndicatorOffset\",\r\n        value: function(groupIndex) {\r\n            var difference = this._getIndicatorDuration() - 1;\r\n            var offset = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);\r\n            return offset\r\n        }\r\n    }, {\r\n        key: \"_getIndicatorDuration\",\r\n        value: function() {\r\n            var today = this._getToday();\r\n            var firstViewDate = new Date(this._firstViewDate);\r\n            var timeDiff = today.getTime() - firstViewDate.getTime();\r\n            if (\"workWeek\" === this.option(\"type\")) {\r\n                timeDiff -= this._getWeekendsCount(Math.round(timeDiff / toMs(\"day\"))) * toMs(\"day\")\r\n            }\r\n            return Math.ceil((timeDiff + 1) / toMs(\"day\"))\r\n        }\r\n    }, {\r\n        key: \"getIndicationHeight\",\r\n        value: function() {\r\n            var today = this._getToday();\r\n            var cellHeight = this.getCellHeight();\r\n            var date = new Date(this._firstViewDate);\r\n            if (this.isIndicationOnView()) {\r\n                date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate())\r\n            }\r\n            var duration = today.getTime() - date.getTime();\r\n            var cellCount = duration / this.getCellDuration();\r\n            return cellCount * cellHeight\r\n        }\r\n    }, {\r\n        key: \"_dispose\",\r\n        value: function() {\r\n            this._clearIndicatorUpdateInterval();\r\n            _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_dispose\", this).apply(this, arguments)\r\n        }\r\n    }, {\r\n        key: \"_refreshDateTimeIndication\",\r\n        value: function() {\r\n            this._cleanDateTimeIndicator();\r\n            this._shader && this._shader.clean();\r\n            this._renderDateTimeIndication()\r\n        }\r\n    }, {\r\n        key: \"_isCurrentTime\",\r\n        value: function(date) {\r\n            if (this.isIndicationOnView()) {\r\n                var today = this._getToday();\r\n                var result = false;\r\n                date = new Date(date);\r\n                date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\r\n                var startCellDate = new Date(date);\r\n                var endCellDate = new Date(date);\r\n                if (_date.default.sameDate(today, date)) {\r\n                    startCellDate = startCellDate.setMilliseconds(date.getMilliseconds() - this.getCellDuration() + 1);\r\n                    endCellDate = endCellDate.setMilliseconds(date.getMilliseconds() + this.getCellDuration());\r\n                    result = _date.default.dateInRange(today, startCellDate, endCellDate)\r\n                }\r\n                return result\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_isCurrentTimeHeaderCell\",\r\n        value: function(headerIndex) {\r\n            if (this.isIndicationOnView()) {\r\n                var date = this._getDateByIndex(headerIndex);\r\n                return _date.default.sameDate(date, this._getToday())\r\n            }\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_getTimeCellClass\",\r\n        value: function(i) {\r\n            var startViewDate = this._getTimeCellDate(i);\r\n            var cellClass = _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_getTimeCellClass\", this).call(this, i);\r\n            if (this._isCurrentTime(startViewDate)) {\r\n                return cellClass + \" \" + TIME_PANEL_CURRENT_TIME_CELL_CLASS\r\n            }\r\n            return cellClass\r\n        }\r\n    }, {\r\n        key: \"_getHeaderPanelCellClass\",\r\n        value: function(i) {\r\n            var cellClass = _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_getHeaderPanelCellClass\", this).call(this, i);\r\n            if (this._isCurrentTimeHeaderCell(i)) {\r\n                return cellClass + \" \" + HEADER_CURRENT_TIME_CELL_CLASS\r\n            }\r\n            return cellClass\r\n        }\r\n    }, {\r\n        key: \"_cleanView\",\r\n        value: function() {\r\n            _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_cleanView\", this).call(this);\r\n            this._cleanDateTimeIndicator()\r\n        }\r\n    }, {\r\n        key: \"_dimensionChanged\",\r\n        value: function() {\r\n            _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_dimensionChanged\", this).call(this);\r\n            this._refreshDateTimeIndication()\r\n        }\r\n    }, {\r\n        key: \"_cleanDateTimeIndicator\",\r\n        value: function() {\r\n            this.$element().find(\".\" + SCHEDULER_DATE_TIME_INDICATOR_CLASS).remove()\r\n        }\r\n    }, {\r\n        key: \"_cleanWorkSpace\",\r\n        value: function() {\r\n            _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_cleanWorkSpace\", this).call(this);\r\n            this._renderDateTimeIndication();\r\n            this._setIndicationUpdateInterval()\r\n        }\r\n    }, {\r\n        key: \"_optionChanged\",\r\n        value: function(args) {\r\n            switch (args.name) {\r\n                case \"showCurrentTimeIndicator\":\r\n                case \"indicatorTime\":\r\n                    this._cleanWorkSpace();\r\n                    break;\r\n                case \"indicatorUpdateInterval\":\r\n                    this._setIndicationUpdateInterval();\r\n                    break;\r\n                case \"showAllDayPanel\":\r\n                    _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_optionChanged\", this).call(this, args);\r\n                    this._refreshDateTimeIndication();\r\n                    break;\r\n                case \"allDayExpanded\":\r\n                    _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_optionChanged\", this).call(this, args);\r\n                    this._refreshDateTimeIndication();\r\n                    break;\r\n                case \"crossScrollingEnabled\":\r\n                    _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_optionChanged\", this).call(this, args);\r\n                    this._refreshDateTimeIndication();\r\n                    break;\r\n                case \"shadeUntilCurrentTime\":\r\n                    this._refreshDateTimeIndication();\r\n                    break;\r\n                default:\r\n                    _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_optionChanged\", this).call(this, args)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getDefaultOptions\",\r\n        value: function() {\r\n            return (0, _extend.extend)(_get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), \"_getDefaultOptions\", this).call(this), {\r\n                showCurrentTimeIndicator: true,\r\n                indicatorTime: new Date,\r\n                indicatorUpdateInterval: 5 * toMs(\"minute\"),\r\n                shadeUntilCurrentTime: true\r\n            })\r\n        }\r\n    }]);\r\n    return SchedulerWorkSpaceIndicator\r\n}(_uiScheduler.default);\r\n(0, _component_registrator.default)(\"dxSchedulerWorkSpace\", SchedulerWorkSpaceIndicator);\r\nvar _default = SchedulerWorkSpaceIndicator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}