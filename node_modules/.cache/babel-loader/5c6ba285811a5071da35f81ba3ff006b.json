{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\CustomerPlus\\\\AddCustomerPlus\\\\index.js\";\nimport React, { Component } from 'react';\nimport \"./style.scss\";\nimport { Link } from 'react-router-dom';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { NormalInput, NormalSelect, NormalButton, NormalDate } from 'component/common';\nimport { displayImg } from 'service/helperFunctions';\nimport { DragFileUpload } from '../../../common';\nimport { CreateCustomer, getCustomer, updateCustomer } from 'redux/actions/customer';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { AddCustomerForm } from './addCustomer';\nimport { dateFormat } from 'service/helperFunctions';\nimport { getLoginSaloon } from 'redux/actions/auth';\nimport { updateForm } from 'redux/actions/common';\nexport class AddCustomerPlusClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        cust_name: '',\n        cust_address: '',\n        cust_dob: \"\",\n        cust_phone2: '',\n        cust_email: '',\n        Cust_sexes: '',\n        Cust_sexesid: '',\n        Site_Codeid: '',\n        cust_title: '',\n        cust_class: '',\n        custallowsendsms: false,\n        cust_maillist: false\n      },\n      sexOption: [{\n        value: 1,\n        label: \"Male\"\n      }, {\n        value: 2,\n        label: \"Female\"\n      }],\n      salonList: []\n    };\n\n    this.getCustomer = () => {\n      this.props.getCustomer(this.props.match.params.id).then(res => {\n        this.getDataFromStore();\n      });\n    };\n\n    this.getDataFromStore = () => {\n      let {\n        formFields\n      } = this.state;\n      let {\n        customerDetail\n      } = this.props;\n      formFields['cust_name'] = customerDetail.cust_name;\n      formFields['cust_address'] = customerDetail.cust_address;\n      formFields['cust_dob'] = new Date(customerDetail.cust_dob);\n      formFields['cust_phone2'] = customerDetail.cust_phone2;\n      formFields['cust_email'] = customerDetail.cust_email;\n      formFields['Cust_sexes'] = customerDetail.Cust_sexes;\n      formFields['Cust_sexesid'] = customerDetail.Cust_sexesid;\n      formFields['Site_Codeid'] = customerDetail.Site_Codeid;\n      formFields['Site_Code'] = customerDetail.Site_Code;\n      formFields['custallowsendsms'] = customerDetail.custallowsendsms;\n      formFields['cust_maillist'] = customerDetail.cust_maillist;\n      formFields['cust_class'] = customerDetail.cust_class;\n      formFields['cust_title'] = customerDetail.cust_title;\n      this.setState({\n        formFields\n      });\n      console.log(formFields, customerDetail, \"sfsdfhsdfsdfg\");\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleChangeBox = event => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[event.target.name] = event.target.checked;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleInput = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value === true ? 1 : value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleSubmit = async data => {\n      let {\n        formFields\n      } = this.state;\n      let type = data;\n      console.log(type, \"====\", data, \"sdfasdfasdf\");\n      let date = new Date(formFields.cust_dob);\n      let d = date.getDate();\n      let day = d < 10 ? \"0\" + d : d;\n      let a = date.getMonth() + 1;\n      let month = a < 10 ? \"0\" + a : a;\n      let year = date.getFullYear();\n      formFields[\"cust_dob\"] = `${year}-${month}-${day}`;\n\n      if (this.props.match.params.id) {\n        await this.props.updateCustomer(`${this.props.match.params.id}/`, formFields).then(data => {\n          if (data.status === 200) {\n            this.resetData();\n\n            if (this.props.match.params.id) {\n              this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`);\n            }\n          }\n        });\n      } else {\n        await this.props.CreateCustomer(formFields).then(async data => {\n          if (data.status === 201) {\n            this.resetData();\n\n            if (this.props.match.params.id) {\n              this.props.history.push(`/admin/cart/${this.props.match.params.id}/details`);\n            } else {\n              let formFields = {};\n              formFields[\"custId\"] = data.data.id;\n              formFields[\"custName\"] = data.data.cust_name;\n              await this.props.updateForm('basicApptDetail', formFields);\n\n              if (type === \"catalog\") {\n                this.props.history.push(`/admin/cart`);\n              } else if (data) {\n                this.props.history.push(`/admin/customerplus`);\n              } else {\n                this.props.history.push(`/admin/cart`);\n              }\n            }\n          }\n        });\n      }\n    };\n\n    this.handleCancel = () => {\n      if (this.props.match.params.id) {\n        this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`);\n      } else {\n        this.props.history.push(`/admin/customerplus`);\n      }\n    };\n\n    this.handleDatePick = async (name, value) => {\n      console.log(name, value, \"sdfgdfhfshg\", dateFormat(new Date())); // dateFormat(new Date())\n\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value; // formFields[name] = value;\n\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.resetData = () => {\n      let {\n        formFields\n      } = this.state;\n      formFields['cust_name'] = \"\";\n      formFields['cust_address'] = \"\";\n      formFields['cust_dob'] = \"\";\n      formFields['cust_phone1'] = \"\";\n      formFields['cust_phone2'] = \"\";\n      formFields['cust_email'] = \"\";\n      formFields['Cust_sexesid'] = \"\";\n      formFields['Site_Codeid'] = \"\";\n      formFields['Cust_sexes'] = \"\";\n      formFields['Site_Code'] = \"\";\n      formFields['cust_title'] = \"\";\n      formFields['cust_class'] = \"\";\n      this.setState(formFields);\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.match.params.id) {\n      this.getCustomer();\n    }\n\n    let {\n      salonList\n    } = this.state;\n    this.props.getLoginSaloon().then(res => {\n      for (let key of res.data) {\n        salonList.push({\n          value: key.id,\n          label: key.itemsite_desc\n        });\n      }\n\n      this.setState({\n        salonList\n      });\n    });\n  }\n\n  render() {\n    let {\n      formFields,\n      sexOption,\n      salonList\n    } = this.state;\n    let {\n      cust_name\n    } = formFields;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer-section container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-label-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, \"Customer Plus\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-right mx-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, this.props.match.params.id ? \"Edit\" : \"Add\", \" New Customer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddCustomerForm, {\n      formFields: formFields,\n      salonList: salonList,\n      handleDatePick: this.handleDatePick,\n      sexOption: sexOption,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleCancel: this.handleCancel,\n      handleChangeBox: this.handleChangeBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerDetail: state.customer.customerDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    CreateCustomer,\n    getCustomer,\n    updateCustomer,\n    getLoginSaloon,\n    updateForm\n  }, dispatch);\n};\n\nexport const AddCustomerPlus = connect(mapStateToProps, mapDispatchToProps)(AddCustomerPlusClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/CustomerPlus/AddCustomerPlus/index.js"],"names":["React","Component","Link","SimpleReactValidator","NormalInput","NormalSelect","NormalButton","NormalDate","displayImg","DragFileUpload","CreateCustomer","getCustomer","updateCustomer","connect","bindActionCreators","AddCustomerForm","dateFormat","getLoginSaloon","updateForm","AddCustomerPlusClass","state","formFields","cust_name","cust_address","cust_dob","cust_phone2","cust_email","Cust_sexes","Cust_sexesid","Site_Codeid","cust_title","cust_class","custallowsendsms","cust_maillist","sexOption","value","label","salonList","props","match","params","id","then","res","getDataFromStore","customerDetail","Date","Site_Code","setState","console","log","handleChange","target","name","Object","assign","handleChangeBox","event","checked","handleInput","handleSubmit","data","type","date","d","getDate","day","a","getMonth","month","year","getFullYear","status","resetData","history","push","handleCancel","handleDatePick","componentWillMount","key","itemsite_desc","render","mapStateToProps","customer","mapDispatchToProps","dispatch","AddCustomerPlus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./style.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { NormalInput, NormalSelect, NormalButton, NormalDate } from 'component/common';\r\nimport { displayImg } from 'service/helperFunctions';\r\nimport { DragFileUpload } from '../../../common';\r\nimport { CreateCustomer, getCustomer, updateCustomer } from 'redux/actions/customer'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { AddCustomerForm } from './addCustomer';\r\nimport { dateFormat } from 'service/helperFunctions';\r\nimport { getLoginSaloon } from 'redux/actions/auth';\r\nimport { updateForm } from 'redux/actions/common';\r\n\r\nexport class AddCustomerPlusClass extends Component {\r\n    state = {\r\n        formFields: {\r\n            cust_name: '',\r\n            cust_address: '',\r\n            cust_dob: \"\",\r\n            cust_phone2: '',\r\n            cust_email: '',\r\n            Cust_sexes: '',\r\n            Cust_sexesid: '',\r\n            Site_Codeid: '',\r\n            cust_title: '',\r\n            cust_class: '',\r\n            custallowsendsms: false,\r\n            cust_maillist: false\r\n        },\r\n        sexOption: [\r\n            { value: 1, label: \"Male\" },\r\n            { value: 2, label: \"Female\" }\r\n        ],\r\n        salonList: []\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (this.props.match.params.id) {\r\n            this.getCustomer();\r\n        }\r\n        let { salonList } = this.state;\r\n        this.props.getLoginSaloon().then((res) => {\r\n            for (let key of res.data) {\r\n                salonList.push({ value: key.id, label: key.itemsite_desc })\r\n            }\r\n            this.setState({ salonList })\r\n        })\r\n    }\r\n\r\n    getCustomer = () => {\r\n        this.props.getCustomer(this.props.match.params.id).then((res) => {\r\n            this.getDataFromStore();\r\n        })\r\n    }\r\n\r\n    getDataFromStore = () => {\r\n        let { formFields } = this.state;\r\n        let { customerDetail } = this.props\r\n        formFields['cust_name'] = customerDetail.cust_name;\r\n        formFields['cust_address'] = customerDetail.cust_address;\r\n        formFields['cust_dob'] = new Date(customerDetail.cust_dob);\r\n        formFields['cust_phone2'] = customerDetail.cust_phone2;\r\n        formFields['cust_email'] = customerDetail.cust_email;\r\n        formFields['Cust_sexes'] = customerDetail.Cust_sexes;\r\n        formFields['Cust_sexesid'] = customerDetail.Cust_sexesid;\r\n        formFields['Site_Codeid'] = customerDetail.Site_Codeid;\r\n        formFields['Site_Code'] = customerDetail.Site_Code;\r\n        formFields['custallowsendsms'] = customerDetail.custallowsendsms;\r\n        formFields['cust_maillist'] = customerDetail.cust_maillist;\r\n        formFields['cust_class'] = customerDetail.cust_class;\r\n        formFields['cust_title'] = customerDetail.cust_title;\r\n        this.setState({ formFields })\r\n        console.log(formFields, customerDetail, \"sfsdfhsdfsdfg\")\r\n    }\r\n\r\n    handleChange = ({ target: { value, name } }) => {\r\n        let formFields = Object.assign({}, this.state.formFields);\r\n\r\n        formFields[name] = value;\r\n\r\n\r\n        this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n    handleChangeBox = (event) => {\r\n        let formFields = Object.assign({}, this.state.formFields);\r\n\r\n        formFields[event.target.name] = event.target.checked;\r\n\r\n\r\n        this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n\r\n    handleInput = ({ target: { name, value } }) => {\r\n\r\n        let formFields = Object.assign({}, this.state.formFields)\r\n        formFields[name] = (value === true ? 1 : value);\r\n        this.setState({\r\n            formFields\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let { formFields } = this.state;\r\n        let type = data;\r\n        console.log(type, \"====\", data, \"sdfasdfasdf\")\r\n       \r\n        let date = new Date(formFields.cust_dob)\r\n        let d = date.getDate();\r\n        let day = (d < 10 ? (\"0\" + d) : (d));\r\n        let a = date.getMonth() + 1;\r\n        let month = (a < 10 ? (\"0\" + a) : (a));\r\n        let year = date.getFullYear();\r\n        formFields[\"cust_dob\"] =`${year}-${month}-${day}`;\r\n\r\n        if (this.props.match.params.id) {\r\n            await this.props.updateCustomer(`${this.props.match.params.id}/`, formFields).then((data) => {\r\n                if (data.status === 200) {\r\n                    this.resetData();\r\n                    if (this.props.match.params.id) {\r\n                        this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`)\r\n                    }\r\n                }\r\n               \r\n            })\r\n            \r\n        } else {\r\n            await this.props.CreateCustomer(formFields).then(async (data) => {\r\n                if (data.status === 201) {\r\n                    this.resetData();\r\n                    if (this.props.match.params.id) {\r\n                        this.props.history.push(`/admin/cart/${this.props.match.params.id}/details`)\r\n                    } else {\r\n                        let formFields = {};\r\n                        formFields[\"custId\"] = data.data.id;\r\n                        formFields[\"custName\"] = data.data.cust_name;\r\n                        await this.props.updateForm('basicApptDetail', formFields)\r\n                        if (type === \"catalog\") {\r\n                            this.props.history.push(`/admin/cart`);\r\n                        } else if (data) {\r\n                            this.props.history.push(`/admin/customerplus`);\r\n                        } else {\r\n                            this.props.history.push(`/admin/cart`);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            \r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        if (this.props.match.params.id) {\r\n            this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`)\r\n        } else {\r\n            this.props.history.push(`/admin/customerplus`);\r\n        }\r\n    }\r\n\r\n    handleDatePick = async (name, value) => {\r\n        console.log(name, value, \"sdfgdfhfshg\", dateFormat(new Date()))\r\n        // dateFormat(new Date())\r\n        let { formFields } = this.state;\r\n        formFields[name] = value;\r\n        // formFields[name] = value;\r\n        await this.setState({\r\n            formFields,\r\n        });\r\n    };\r\n\r\n    resetData = () => {\r\n        let { formFields } = this.state;\r\n        formFields['cust_name'] = \"\";\r\n        formFields['cust_address'] = \"\";\r\n        formFields['cust_dob'] = \"\";\r\n        formFields['cust_phone1'] = \"\";\r\n        formFields['cust_phone2'] = \"\";\r\n        formFields['cust_email'] = \"\";\r\n        formFields['Cust_sexesid'] = \"\";\r\n        formFields['Site_Codeid'] = \"\";\r\n        formFields['Cust_sexes'] = \"\";\r\n        formFields['Site_Code'] = \"\";\r\n        formFields['cust_title'] = \"\";\r\n        formFields['cust_class'] = \"\";\r\n        this.setState(formFields)\r\n    }\r\n\r\n    render() {\r\n        let { formFields, sexOption, salonList } = this.state;\r\n        let { cust_name } = formFields;\r\n        return (\r\n            <div className=\"create-customer-section container\">\r\n                {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Customer</p> */}\r\n                <div className=\"create-customer\">\r\n                    <div className=\"head-label-nav\">\r\n                        <p className=\"category\">Customer Plus</p>\r\n                        <i className=\"icon-right mx-md-3\"></i>\r\n                        <p className=\"sub-category\">{this.props.match.params.id ? \"Edit\" : \"Add\"} New Customer</p>\r\n                    </div>\r\n                    <div className=\"customer-detail\">\r\n                        <AddCustomerForm formFields={formFields} salonList={salonList} handleDatePick={this.handleDatePick} sexOption={sexOption} handleChange={this.handleChange} handleSubmit={this.handleSubmit} handleCancel={this.handleCancel} handleChangeBox={this.handleChangeBox}></AddCustomerForm>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    customerDetail: state.customer.customerDetail\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        CreateCustomer,\r\n        getCustomer,\r\n        updateCustomer,\r\n        getLoginSaloon,\r\n        updateForm\r\n    }, dispatch)\r\n}\r\n\r\nexport const AddCustomerPlus = connect(mapStateToProps, mapDispatchToProps)(AddCustomerPlusClass)\r\n"]},"metadata":{},"sourceType":"module"}