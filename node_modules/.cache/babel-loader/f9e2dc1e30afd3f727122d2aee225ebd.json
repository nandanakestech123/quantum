{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\CustomerPlus\\\\AddCustomerPlus\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCustomerPlusSettings, updateCustomerPlus, CreateCustomerPlus, getCustomerPlus } from \"redux/actions/customerPlus\";\nimport { NormalInput, NormalDateTime, NormalSelect, NormalMultiSelect, NormalButton } from \"component/common\";\nimport { withTranslation } from \"react-i18next\";\nexport class AddCustomerPlusClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {},\n      fields: [{\n        id: 1,\n        field_name: \"cust_dob\",\n        display_field_name: \"Customer DOB\",\n        visible_in_registration: true,\n        visible_in_listing: true,\n        visible_in_profile: true,\n        mandatory: true,\n        data_type: \"Dat\",\n        selection: null\n      }],\n      isLoading: true,\n      isMounted: true\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.loadData = async () => {\n      await this.props.getCustomerPlusSettings(\"details\");\n      this.state.fields = this.props.customerPlusSettings.filter(e => e.visible_in_registration);\n      this.state.formFields = this.state.fields.reduce((map, obj) => {\n        map[obj.field_name] = \"\";\n        return map;\n      }, {});\n\n      if (this.props.match.params.id) {\n        await this.props.getCustomerPlus(this.props.match.params.id);\n        this.state.formFields = this.props.customerPlusDetail;\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleSubmit = async type => {\n      if (!this.validator.allValid()) return this.validator.showMessages();\n      this.setState({\n        isLoading: true\n      });\n      console.log(this.state.formFields);\n\n      try {\n        this.state.fields.filter(e => e.data_type == \"date\").forEach(e => {\n          if (this.state.formFields[e.field_name]) {\n            let date = new Date(this.state.formFields[e.field_name]);\n            let d = date.getDate();\n            let day = d < 10 ? \"0\" + d : d;\n            let a = date.getMonth() + 1;\n            let month = a < 10 ? \"0\" + a : a;\n            let year = date.getFullYear();\n            this.state.formFields[e.field_name] = `${year}-${month}-${day}`;\n          }\n        });\n\n        if (this.props.match.params.id) {\n          var formFields = {};\n          this.state.fields.forEach(e => {\n            formFields[e.field_name] = this.state.formFields[e.field_name];\n          });\n          var res = await this.props.updateCustomerPlus(this.props.match.params.id + \"/\", JSON.stringify(formFields));\n\n          if (res.status == 200) {\n            if (type === \"catalog\") {\n              this.props.history.push(`/admin/cart`);\n            } else this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`);\n          }\n        } else {\n          var res = await this.props.CreateCustomerPlus(JSON.stringify(this.state.formFields));\n\n          if (type === \"catalog\") {\n            this.props.history.push(`/admin/cart`);\n          } else this.props.history.push(`/admin/customerPlus`);\n        }\n      } catch (e) {}\n\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleCancel = () => {\n      if (this.props.match.params.id) {\n        this.props.history.push(`/admin/customerplus/${this.props.match.params.id}/details`);\n      } else {\n        this.props.history.push(`/admin/customerplus`);\n      }\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleMultiSelect = (field, e) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[field] = e;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleChangeBox = event => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[event.target.name] = event.target.checked;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleDatePick = async (name, value) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.renderFields = () => {\n      let {\n        t\n      } = this.props;\n      let extraFields = this.state.fields.filter(e => e.field_name == \"cust_address\").length > 0 ? this.state.fields.filter(e => e.field_name.match(/cust_address\\w+/)) : [];\n      let leftLength = extraFields.length > 0 ? (12 - extraFields[0].col_width) * extraFields.length : 0;\n      console.log(leftLength, \"len\");\n      let addressFileds = extraFields.map((e, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group pb-2\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          placeholder: \"Enter here\",\n          value: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }\n        }));\n      });\n      let sorted = this.state.fields.sort((a, b) => {\n        if (a.order > b.order) return 1;else return -1;\n      });\n      let rowElements = [];\n      let totalWidth = 0;\n      sorted.slice(sorted.indexOf(extraFields[extraFields.length - 1]) + 1).forEach(e => {\n        totalWidth += e.col_width;\n        if (totalWidth <= leftLength) rowElements.push(e);else return;\n      });\n      console.log(sorted, \"sorted fields\");\n      console.log(rowElements, \"row fields\");\n\n      const mapFunction = (e, index) => {\n        if (e.data_type == \"date\" || e.data_type == \"datetime\") if (!this.state.formFields[e.field_name]) this.state.formFields[e.field_name] = new Date();\n\n        if (e.field_name.includes(\"cust_address\")) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n            className: `col-md-${e.col_width} pb-md-4`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            className: \"text-left text-black common-label-text fs-17 p-0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }\n          }, e.display_field_name), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"input-group pb-2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(NormalInput, {\n            placeholder: \"Enter here\",\n            value: this.state.formFields[e.field_name],\n            name: e.field_name,\n            onChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }\n          })), addressFileds, e.mandatory ? this.validator.message(e.display_field_name, this.state.formFields[e.field_name], \"required\") : null), /*#__PURE__*/React.createElement(\"div\", {\n            className: `col-md-${12 - e.col_width} pb-md-4`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }\n          }, rowElements.map((e, index) => {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: `col-md-${e.col_width * 2} pb-md-4`,\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              className: \"text-left text-black common-label-text fs-17 p-0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }\n            }, e.display_field_name), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"input-group\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 23\n              }\n            }, e.data_type == \"text\" ? /*#__PURE__*/React.createElement(NormalInput, {\n              placeholder: \"Enter here\",\n              value: this.state.formFields[e.field_name],\n              name: e.field_name,\n              onChange: this.handleChange,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 27\n              }\n            }) : e.data_type == \"date\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n              onChange: this.handleDatePick,\n              value: new Date(this.state.formFields[e.field_name]),\n              name: e.field_name,\n              showYearDropdown: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 27\n              }\n            }) : e.data_type == \"datetime\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n              onChange: this.handleDatePick,\n              value: new Date(this.state.formFields[e.field_name]),\n              name: e.field_name,\n              showYearDropdown: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 27\n              }\n            }) : e.data_type == \"selection\" ? /*#__PURE__*/React.createElement(NormalSelect, {\n              options: e.selection,\n              value: this.state.formFields[e.field_name],\n              name: e.field_name,\n              onChange: this.handleChange,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 27\n              }\n            }) : e.data_type == \"multiSelect\" ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n              options: e.selection,\n              defaultValue: this.state.formFields[e.field_name],\n              name: e.field_name,\n              handleMultiSelect: e => this.handleMultiSelect(e.field_name, e),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 27\n              }\n            }) : e.data_type == \"boolean\" ? /*#__PURE__*/React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.formFields[e.field_name],\n              name: e.field_name,\n              onClick: this.handleChangeBox,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 27\n              }\n            }) : e.data_type == \"number\" ? /*#__PURE__*/React.createElement(NormalInput, {\n              type: \"number\",\n              placeholder: \"Enter here\",\n              value: this.state.formFields[e.field_name],\n              name: e.field_name,\n              onChange: this.handleChange,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 27\n              }\n            }) : t(\"NO FILED RENDER DATA FOUND\")), e.mandatory ? this.validator.message(e.display_field_name, this.state.formFields[e.field_name], \"required\") : null);\n          }))));\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: `col-md-${e.col_width} pb-md-4`,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"text-left text-black common-label-text fs-17 p-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 11\n          }\n        }, t(e.display_field_name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 11\n          }\n        }, e.data_type == \"text\" ? /*#__PURE__*/React.createElement(NormalInput, {\n          placeholder: \"Enter here\",\n          value: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"date\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n          onChange: this.handleDatePick,\n          value: new Date(this.state.formFields[e.field_name]),\n          name: e.field_name,\n          showYearDropdown: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"datetime\" ? /*#__PURE__*/React.createElement(NormalDateTime, {\n          onChange: this.handleDatePick,\n          value: new Date(this.state.formFields[e.field_name]),\n          name: e.field_name,\n          showYearDropdown: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"selection\" ? /*#__PURE__*/React.createElement(NormalSelect, {\n          options: e.selection,\n          value: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"multiSelect\" ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n          options: e.selection,\n          defaultValue: this.state.formFields[e.field_name],\n          name: e.field_name,\n          handleMultiSelect: e => this.handleMultiSelect(e.field_name, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"boolean\" ? /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChangeBox,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }\n        }) : e.data_type == \"number\" ? /*#__PURE__*/React.createElement(NormalInput, {\n          type: \"number\",\n          placeholder: \"Enter here\",\n          value: this.state.formFields[e.field_name],\n          name: e.field_name,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }\n        }) : \"NO FILED RENDER DATA FOUND\"), e.mandatory ? this.validator.message(e.display_field_name, this.state.formFields[e.field_name], \"required\") : null);\n      };\n\n      return extraFields.length > 0 ? sorted.slice(0, sorted.indexOf(extraFields[0])).concat(sorted.slice(sorted.indexOf(rowElements[rowElements.length - 1]) + 1)).map(mapFunction) : sorted.map(mapFunction);\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentDidMount() {\n    this.validator = new SimpleReactValidator({\n      validators: {},\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n    this.loadData();\n  }\n\n  render() {\n    let {\n      isLoading\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customer-section container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-customerplus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-label-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, t(\"Customer Plus\")), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-right mx-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }\n    }, t((this.props.match.params.id ? \"Edit\" : \"Add\") + \" New Customer\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 19\n      }\n    }, \"Loading...\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2 row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }, this.renderFields()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: this.handleCancel,\n      label: \"CANCEL\",\n      danger: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(),\n      label: \"SAVE\",\n      success: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(\"catalog\"),\n      label: \"SAVE & CATALOG\",\n      success: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerPlusDetail: state.customerPlus.customerPlusDetail,\n  customerPlusSettings: state.customerPlus.customerPlusSettings\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCustomerPlusSettings,\n    updateCustomerPlus,\n    CreateCustomerPlus,\n    getCustomerPlus\n  }, dispatch);\n};\n\nexport const AddCustomerPlus = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(AddCustomerPlusClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/CustomerPlus/AddCustomerPlus/index.js"],"names":["React","Component","SimpleReactValidator","connect","bindActionCreators","getCustomerPlusSettings","updateCustomerPlus","CreateCustomerPlus","getCustomerPlus","NormalInput","NormalDateTime","NormalSelect","NormalMultiSelect","NormalButton","withTranslation","AddCustomerPlusClass","state","formFields","fields","id","field_name","display_field_name","visible_in_registration","visible_in_listing","visible_in_profile","mandatory","data_type","selection","isLoading","isMounted","updateState","data","setState","loadData","props","customerPlusSettings","filter","e","reduce","map","obj","match","params","customerPlusDetail","handleSubmit","type","validator","allValid","showMessages","console","log","forEach","date","Date","d","getDate","day","a","getMonth","month","year","getFullYear","res","JSON","stringify","status","history","push","handleCancel","handleChange","target","value","name","Object","assign","handleMultiSelect","field","handleChangeBox","event","checked","handleDatePick","renderFields","t","extraFields","length","leftLength","col_width","addressFileds","index","sorted","sort","b","order","rowElements","totalWidth","slice","indexOf","mapFunction","includes","message","concat","componentWillUnmount","componentDidMount","validators","element","autoForceUpdate","render","mapStateToProps","customerPlus","mapDispatchToProps","dispatch","AddCustomerPlus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACEC,uBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,4BALP;AAMA,SACEC,WADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,iBAJF,EAKEC,YALF,QAMO,kBANP;AAOA,SAASC,eAAT,QAAgC,eAAhC;AAEA,OAAO,MAAMC,oBAAN,SAAmCd,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAClDe,KADkD,GAC1C;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,UAAU,EAAE,UAFd;AAGEC,QAAAA,kBAAkB,EAAE,cAHtB;AAIEC,QAAAA,uBAAuB,EAAE,IAJ3B;AAKEC,QAAAA,kBAAkB,EAAE,IALtB;AAMEC,QAAAA,kBAAkB,EAAE,IANtB;AAOEC,QAAAA,SAAS,EAAE,IAPb;AAQEC,QAAAA,SAAS,EAAE,KARb;AASEC,QAAAA,SAAS,EAAE;AATb,OADM,CAFF;AAeNC,MAAAA,SAAS,EAAE,IAfL;AAgBNC,MAAAA,SAAS,EAAE;AAhBL,KAD0C;;AAAA,SAwBlDC,WAxBkD,GAwBnCC,IAAD,IAAU;AACtB,UAAI,KAAKf,KAAL,CAAWa,SAAf,EAA0B,KAAKG,QAAL,CAAcD,IAAd;AAC3B,KA1BiD;;AAAA,SAyClDE,QAzCkD,GAyCvC,YAAY;AACrB,YAAM,KAAKC,KAAL,CAAW7B,uBAAX,CAAmC,SAAnC,CAAN;AACA,WAAKW,KAAL,CAAWE,MAAX,GAAoB,KAAKgB,KAAL,CAAWC,oBAAX,CAAgCC,MAAhC,CACjBC,CAAD,IAAOA,CAAC,CAACf,uBADS,CAApB;AAGA,WAAKN,KAAL,CAAWC,UAAX,GAAwB,KAAKD,KAAL,CAAWE,MAAX,CAAkBoB,MAAlB,CAAyB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7DD,QAAAA,GAAG,CAACC,GAAG,CAACpB,UAAL,CAAH,GAAsB,EAAtB;AACA,eAAOmB,GAAP;AACD,OAHuB,EAGrB,EAHqB,CAAxB;;AAIA,UAAI,KAAKL,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBvB,EAA5B,EAAgC;AAC9B,cAAM,KAAKe,KAAL,CAAW1B,eAAX,CAA2B,KAAK0B,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBvB,EAAnD,CAAN;AACA,aAAKH,KAAL,CAAWC,UAAX,GAAwB,KAAKiB,KAAL,CAAWS,kBAAnC;AACD;;AACD,WAAKX,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAvDiD;;AAAA,SAyDlDgB,YAzDkD,GAyDnC,MAAOC,IAAP,IAAgB;AAC7B,UAAI,CAAC,KAAKC,SAAL,CAAeC,QAAf,EAAL,EAAgC,OAAO,KAAKD,SAAL,CAAeE,YAAf,EAAP;AAChC,WAAKhB,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlC,KAAL,CAAWC,UAAvB;;AACA,UAAI;AACF,aAAKD,KAAL,CAAWE,MAAX,CACGkB,MADH,CACWC,CAAD,IAAOA,CAAC,CAACX,SAAF,IAAe,MADhC,EAEGyB,OAFH,CAEYd,CAAD,IAAO;AACd,cAAI,KAAKrB,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAAJ,EAAyC;AACvC,gBAAIgC,IAAI,GAAG,IAAIC,IAAJ,CAAS,KAAKrC,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAAT,CAAX;AACA,gBAAIkC,CAAC,GAAGF,IAAI,CAACG,OAAL,EAAR;AACA,gBAAIC,GAAG,GAAGF,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA7B;AACA,gBAAIG,CAAC,GAAGL,IAAI,CAACM,QAAL,KAAkB,CAA1B;AACA,gBAAIC,KAAK,GAAGF,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA/B;AACA,gBAAIG,IAAI,GAAGR,IAAI,CAACS,WAAL,EAAX;AACA,iBAAK7C,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,IAAuC,GAAEwC,IAAK,IAAGD,KAAM,IAAGH,GAAI,EAA9D;AACD;AACF,SAZH;;AAaA,YAAI,KAAKtB,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBvB,EAA5B,EAAgC;AAC9B,cAAIF,UAAU,GAAG,EAAjB;AACA,eAAKD,KAAL,CAAWE,MAAX,CAAkBiC,OAAlB,CAA2Bd,CAAD,IAAO;AAC/BpB,YAAAA,UAAU,CAACoB,CAAC,CAACjB,UAAH,CAAV,GAA2B,KAAKJ,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAA3B;AACD,WAFD;AAGA,cAAI0C,GAAG,GAAG,MAAM,KAAK5B,KAAL,CAAW5B,kBAAX,CACd,KAAK4B,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBvB,EAAxB,GAA6B,GADf,EAEd4C,IAAI,CAACC,SAAL,CAAe/C,UAAf,CAFc,CAAhB;;AAIA,cAAI6C,GAAG,CAACG,MAAJ,IAAc,GAAlB,EAAuB;AACrB,gBAAIpB,IAAI,KAAK,SAAb,EAAwB;AACtB,mBAAKX,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAyB,aAAzB;AACD,aAFD,MAGE,KAAKjC,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CACG,uBAAsB,KAAKjC,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBvB,EAAG,UADpD;AAGH;AACF,SAjBD,MAiBO;AACL,cAAI2C,GAAG,GAAG,MAAM,KAAK5B,KAAL,CAAW3B,kBAAX,CACdwD,IAAI,CAACC,SAAL,CAAe,KAAKhD,KAAL,CAAWC,UAA1B,CADc,CAAhB;;AAGA,cAAI4B,IAAI,KAAK,SAAb,EAAwB;AACtB,iBAAKX,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAyB,aAAzB;AACD,WAFD,MAEO,KAAKjC,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAyB,qBAAzB;AACR;AACF,OAvCD,CAuCE,OAAO9B,CAAP,EAAU,CAAE;;AACd,WAAKL,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAtGiD;;AAAA,SAwGlDwC,YAxGkD,GAwGnC,MAAM;AACnB,UAAI,KAAKlC,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBvB,EAA5B,EAAgC;AAC9B,aAAKe,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CACG,uBAAsB,KAAKjC,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBvB,EAAG,UADpD;AAGD,OAJD,MAIO;AACL,aAAKe,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAyB,qBAAzB;AACD;AACF,KAhHiD;;AAAA,SAkHlDE,YAlHkD,GAkHnC,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAV,KAAD,KAAiC;AAC9C,UAAIvD,UAAU,GAAGwD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK1D,KAAL,CAAWC,UAA7B,CAAjB;AAEAA,MAAAA,UAAU,CAACuD,IAAD,CAAV,GAAmBD,KAAnB;AAEA,WAAKvC,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KA1HiD;;AAAA,SA4HlD0D,iBA5HkD,GA4H9B,CAACC,KAAD,EAAQvC,CAAR,KAAc;AAChC,UAAIpB,UAAU,GAAGwD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK1D,KAAL,CAAWC,UAA7B,CAAjB;AAEAA,MAAAA,UAAU,CAAC2D,KAAD,CAAV,GAAoBvC,CAApB;AAEA,WAAKL,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KApIiD;;AAAA,SAsIlD4D,eAtIkD,GAsI/BC,KAAD,IAAW;AAC3B,UAAI7D,UAAU,GAAGwD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK1D,KAAL,CAAWC,UAA7B,CAAjB;AAEAA,MAAAA,UAAU,CAAC6D,KAAK,CAACR,MAAN,CAAaE,IAAd,CAAV,GAAgCM,KAAK,CAACR,MAAN,CAAaS,OAA7C;AAEA,WAAK/C,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KA9IiD;;AAAA,SAgJlD+D,cAhJkD,GAgJjC,OAAOR,IAAP,EAAaD,KAAb,KAAuB;AACtC,UAAI;AAAEtD,QAAAA;AAAF,UAAiB,KAAKD,KAA1B;AACAC,MAAAA,UAAU,CAACuD,IAAD,CAAV,GAAmBD,KAAnB;AACA,YAAM,KAAKvC,QAAL,CAAc;AAClBf,QAAAA;AADkB,OAAd,CAAN;AAGD,KAtJiD;;AAAA,SAwJlDgE,YAxJkD,GAwJnC,MAAM;AACnB,UAAI;AAAEC,QAAAA;AAAF,UAAQ,KAAKhD,KAAjB;AACA,UAAIiD,WAAW,GACb,KAAKnE,KAAL,CAAWE,MAAX,CAAkBkB,MAAlB,CAA0BC,CAAD,IAAOA,CAAC,CAACjB,UAAF,IAAgB,cAAhD,EAAgEgE,MAAhE,GAAyE,CAAzE,GACI,KAAKpE,KAAL,CAAWE,MAAX,CAAkBkB,MAAlB,CAA0BC,CAAD,IAAOA,CAAC,CAACjB,UAAF,CAAaqB,KAAb,CAAmB,iBAAnB,CAAhC,CADJ,GAEI,EAHN;AAIA,UAAI4C,UAAU,GACZF,WAAW,CAACC,MAAZ,GAAqB,CAArB,GACI,CAAC,KAAKD,WAAW,CAAC,CAAD,CAAX,CAAeG,SAArB,IAAkCH,WAAW,CAACC,MADlD,GAEI,CAHN;AAIAnC,MAAAA,OAAO,CAACC,GAAR,CAAYmC,UAAZ,EAAwB,KAAxB;AACA,UAAIE,aAAa,GAAGJ,WAAW,CAAC5C,GAAZ,CAAgB,CAACF,CAAD,EAAImD,KAAJ,KAAc;AAChD,4BACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAkC,UAAA,GAAG,EAAEA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,WAAD;AACE,UAAA,WAAW,EAAC,YADd;AAEE,UAAA,KAAK,EAAE,KAAKxE,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFT;AAGE,UAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,UAAA,QAAQ,EAAE,KAAKiD,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAUD,OAXmB,CAApB;AAYA,UAAIoB,MAAM,GAAG,KAAKzE,KAAL,CAAWE,MAAX,CAAkBwE,IAAlB,CAAuB,CAACjC,CAAD,EAAIkC,CAAJ,KAAU;AAC5C,YAAIlC,CAAC,CAACmC,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP,CAAvB,KACK,OAAO,CAAC,CAAR;AACN,OAHY,CAAb;AAIA,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,UAAU,GAAG,CAAjB;AACAL,MAAAA,MAAM,CACHM,KADH,CACSN,MAAM,CAACO,OAAP,CAAeb,WAAW,CAACA,WAAW,CAACC,MAAZ,GAAqB,CAAtB,CAA1B,IAAsD,CAD/D,EAEGjC,OAFH,CAEYd,CAAD,IAAO;AACdyD,QAAAA,UAAU,IAAIzD,CAAC,CAACiD,SAAhB;AACA,YAAIQ,UAAU,IAAIT,UAAlB,EAA8BQ,WAAW,CAAC1B,IAAZ,CAAiB9B,CAAjB,EAA9B,KACK;AACN,OANH;AAOAY,MAAAA,OAAO,CAACC,GAAR,CAAYuC,MAAZ,EAAoB,eAApB;AACAxC,MAAAA,OAAO,CAACC,GAAR,CAAY2C,WAAZ,EAAyB,YAAzB;;AACA,YAAMI,WAAW,GAAG,CAAC5D,CAAD,EAAImD,KAAJ,KAAc;AAChC,YAAInD,CAAC,CAACX,SAAF,IAAe,MAAf,IAAyBW,CAAC,CAACX,SAAF,IAAe,UAA5C,EACE,IAAI,CAAC,KAAKV,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAAL,EACE,KAAKJ,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,IAAsC,IAAIiC,IAAJ,EAAtC;;AACJ,YAAIhB,CAAC,CAACjB,UAAF,CAAa8E,QAAb,CAAsB,cAAtB,CAAJ,EAA2C;AACzC,8BACE,uDACE;AAAK,YAAA,SAAS,EAAG,UAAS7D,CAAC,CAACiD,SAAU,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAO,YAAA,SAAS,EAAC,kDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGjD,CAAC,CAAChB,kBADL,CADF,eAIE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,WAAD;AACE,YAAA,WAAW,EAAC,YADd;AAEE,YAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFT;AAGE,YAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,YAAA,QAAQ,EAAE,KAAKiD,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAJF,EAYGkB,aAZH,EAaGlD,CAAC,CAACZ,SAAF,GACG,KAAKqB,SAAL,CAAeqD,OAAf,CACE9D,CAAC,CAAChB,kBADJ,EAEE,KAAKL,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFF,EAGE,UAHF,CADH,GAMG,IAnBN,CADF,eAsBE;AAAK,YAAA,SAAS,EAAG,UAAS,KAAKiB,CAAC,CAACiD,SAAU,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGO,WAAW,CAACtD,GAAZ,CAAgB,CAACF,CAAD,EAAGmD,KAAH,KAAa;AAC5B,gCACE;AAAK,cAAA,SAAS,EAAG,UAASnD,CAAC,CAACiD,SAAF,GAAc,CAAE,UAA1C;AAAqD,cAAA,GAAG,EAAEE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAO,cAAA,SAAS,EAAC,kDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGnD,CAAC,CAAChB,kBADL,CADF,eAIE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGgB,CAAC,CAACX,SAAF,IAAe,MAAf,gBACC,oBAAC,WAAD;AACE,cAAA,WAAW,EAAC,YADd;AAEE,cAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFT;AAGE,cAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,cAAA,QAAQ,EAAE,KAAKiD,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAOGhC,CAAC,CAACX,SAAF,IAAe,MAAf,gBACF,oBAAC,cAAD;AACE,cAAA,QAAQ,EAAE,KAAKsD,cADjB;AAEE,cAAA,KAAK,EAAE,IAAI3B,IAAJ,CAAS,KAAKrC,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAAT,CAFT;AAGE,cAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,cAAA,gBAAgB,EAAE,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,GAOAiB,CAAC,CAACX,SAAF,IAAe,UAAf,gBACF,oBAAC,cAAD;AACE,cAAA,QAAQ,EAAE,KAAKsD,cADjB;AAEE,cAAA,KAAK,EAAE,IAAI3B,IAAJ,CAAS,KAAKrC,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAAT,CAFT;AAGE,cAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,cAAA,gBAAgB,EAAE,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,GAOAiB,CAAC,CAACX,SAAF,IAAe,WAAf,gBACF,oBAAC,YAAD;AACE,cAAA,OAAO,EAAEW,CAAC,CAACV,SADb;AAEE,cAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFT;AAGE,cAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,cAAA,QAAQ,EAAE,KAAKiD,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,GAOAhC,CAAC,CAACX,SAAF,IAAe,aAAf,gBACF,oBAAC,iBAAD;AACE,cAAA,OAAO,EAAEW,CAAC,CAACV,SADb;AAEE,cAAA,YAAY,EAAE,KAAKX,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFhB;AAGE,cAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,cAAA,iBAAiB,EAAGiB,CAAD,IACjB,KAAKsC,iBAAL,CAAuBtC,CAAC,CAACjB,UAAzB,EAAqCiB,CAArC,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,GASAA,CAAC,CAACX,SAAF,IAAe,SAAf,gBACF;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAE,KAAKV,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFX;AAGE,cAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,cAAA,OAAO,EAAE,KAAKyD,eAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,GAOAxC,CAAC,CAACX,SAAF,IAAe,QAAf,gBACF,oBAAC,WAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,WAAW,EAAC,YAFd;AAGE,cAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAHT;AAIE,cAAA,IAAI,EAAEiB,CAAC,CAACjB,UAJV;AAKE,cAAA,QAAQ,EAAE,KAAKiD,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,GASFa,CAAC,CAAC,4BAAD,CAtDL,CAJF,EA6DG7C,CAAC,CAACZ,SAAF,GACG,KAAKqB,SAAL,CAAeqD,OAAf,CACE9D,CAAC,CAAChB,kBADJ,EAEE,KAAKL,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFF,EAGE,UAHF,CADH,GAMG,IAnEN,CADF;AAuED,WAxEA,CADH,CADF,CAtBF,CADF;AAsGD;;AACD,4BACE;AAAK,UAAA,SAAS,EAAG,UAASiB,CAAC,CAACiD,SAAU,UAAtC;AAAiD,UAAA,GAAG,EAAEE,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAO,UAAA,SAAS,EAAC,kDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGN,CAAC,CAAC7C,CAAC,CAAChB,kBAAH,CADJ,CADF,eAIE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGgB,CAAC,CAACX,SAAF,IAAe,MAAf,gBACC,oBAAC,WAAD;AACE,UAAA,WAAW,EAAC,YADd;AAEE,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFT;AAGE,UAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,UAAA,QAAQ,EAAE,KAAKiD,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GAOGhC,CAAC,CAACX,SAAF,IAAe,MAAf,gBACF,oBAAC,cAAD;AACE,UAAA,QAAQ,EAAE,KAAKsD,cADjB;AAEE,UAAA,KAAK,EAAE,IAAI3B,IAAJ,CAAS,KAAKrC,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAAT,CAFT;AAGE,UAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,UAAA,gBAAgB,EAAE,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,GAOAiB,CAAC,CAACX,SAAF,IAAe,UAAf,gBACF,oBAAC,cAAD;AACE,UAAA,QAAQ,EAAE,KAAKsD,cADjB;AAEE,UAAA,KAAK,EAAE,IAAI3B,IAAJ,CAAS,KAAKrC,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAAT,CAFT;AAGE,UAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,UAAA,gBAAgB,EAAE,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,GAOAiB,CAAC,CAACX,SAAF,IAAe,WAAf,gBACF,oBAAC,YAAD;AACE,UAAA,OAAO,EAAEW,CAAC,CAACV,SADb;AAEE,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFT;AAGE,UAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,UAAA,QAAQ,EAAE,KAAKiD,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,GAOAhC,CAAC,CAACX,SAAF,IAAe,aAAf,gBACF,oBAAC,iBAAD;AACE,UAAA,OAAO,EAAEW,CAAC,CAACV,SADb;AAEE,UAAA,YAAY,EAAE,KAAKX,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFhB;AAGE,UAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,UAAA,iBAAiB,EAAGiB,CAAD,IACjB,KAAKsC,iBAAL,CAAuBtC,CAAC,CAACjB,UAAzB,EAAqCiB,CAArC,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,GASAA,CAAC,CAACX,SAAF,IAAe,SAAf,gBACF;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAE,KAAKV,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFX;AAGE,UAAA,IAAI,EAAEiB,CAAC,CAACjB,UAHV;AAIE,UAAA,QAAQ,EAAE,KAAKyD,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,GAOAxC,CAAC,CAACX,SAAF,IAAe,QAAf,gBACF,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAHT;AAIE,UAAA,IAAI,EAAEiB,CAAC,CAACjB,UAJV;AAKE,UAAA,QAAQ,EAAE,KAAKiD,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,GASF,4BAtDJ,CAJF,EA6DGhC,CAAC,CAACZ,SAAF,GACG,KAAKqB,SAAL,CAAeqD,OAAf,CACE9D,CAAC,CAAChB,kBADJ,EAEE,KAAKL,KAAL,CAAWC,UAAX,CAAsBoB,CAAC,CAACjB,UAAxB,CAFF,EAGE,UAHF,CADH,GAMG,IAnEN,CADF;AAuED,OAnLD;;AAoLA,aAAO+D,WAAW,CAACC,MAAZ,GAAqB,CAArB,GACHK,MAAM,CACHM,KADH,CACS,CADT,EACYN,MAAM,CAACO,OAAP,CAAeb,WAAW,CAAC,CAAD,CAA1B,CADZ,EAEGiB,MAFH,CAGIX,MAAM,CAACM,KAAP,CACEN,MAAM,CAACO,OAAP,CAAeH,WAAW,CAACA,WAAW,CAACT,MAAZ,GAAqB,CAAtB,CAA1B,IAAsD,CADxD,CAHJ,EAOG7C,GAPH,CAOO0D,WAPP,CADG,GASHR,MAAM,CAAClD,GAAP,CAAW0D,WAAX,CATJ;AAUD,KA5XiD;AAAA;;AAoBlDI,EAAAA,oBAAoB,GAAG;AACrB,SAAKrF,KAAL,CAAWa,SAAX,GAAuB,KAAvB;AACD;;AAMDyE,EAAAA,iBAAiB,GAAG;AAClB,SAAKxD,SAAL,GAAiB,IAAI5C,oBAAJ,CAAyB;AACxCqG,MAAAA,UAAU,EAAE,EAD4B;AAExCC,MAAAA,OAAO,EAAGL,OAAD,iBACP;AAAM,QAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OADH,CAHsC;AAOxCM,MAAAA,eAAe,EAAE;AAPuB,KAAzB,CAAjB;AASA,SAAKxE,QAAL;AACD;;AAuVDyE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAE9E,MAAAA;AAAF,QAAgB,KAAKZ,KAAzB;AACA,QAAI;AAAEkE,MAAAA;AAAF,QAAQ,KAAKhD,KAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBgD,CAAC,CAAC,eAAD,CAA1B,CADF,eAEE;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CACA,CAAC,KAAKhD,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBvB,EAAxB,GAA6B,MAA7B,GAAsC,KAAvC,IAAgD,eADhD,CADJ,CAHF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,SAAS,gBACR;AAAK,MAAA,KAAK,EAAC,uDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADQ,gBAOR,uDACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKqD,YAAL,EADH,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE,KAAKb,YADhB;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,MAAM,EAAE,IAHV;AAIE,MAAA,SAAS,EAAC,aAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eASE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKxB,YAAL,EADjB;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,SAAS,EAAC,aAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,eAiBE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKA,YAAL,CAAkB,SAAlB,CADjB;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,SAAS,EAAC,aAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjBF,CAJF,CARJ,CAVF,CAFF,CADF;AAyDD;;AA1biD;;AA6bpD,MAAM+D,eAAe,GAAI3F,KAAD,KAAY;AAClC2B,EAAAA,kBAAkB,EAAE3B,KAAK,CAAC4F,YAAN,CAAmBjE,kBADL;AAElCR,EAAAA,oBAAoB,EAAEnB,KAAK,CAAC4F,YAAN,CAAmBzE;AAFP,CAAZ,CAAxB;;AAKA,MAAM0E,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO1G,kBAAkB,CACvB;AACEC,IAAAA,uBADF;AAEEC,IAAAA,kBAFF;AAGEC,IAAAA,kBAHF;AAIEC,IAAAA;AAJF,GADuB,EAOvBsG,QAPuB,CAAzB;AASD,CAVD;;AAYA,OAAO,MAAMC,eAAe,GAAGjG,eAAe,GAC5CX,OAAO,CAACwG,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C9F,oBAA7C,CAD4C,CAAvC","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCustomerPlusSettings,\r\n  updateCustomerPlus,\r\n  CreateCustomerPlus,\r\n  getCustomerPlus,\r\n} from \"redux/actions/customerPlus\";\r\nimport {\r\n  NormalInput,\r\n  NormalDateTime,\r\n  NormalSelect,\r\n  NormalMultiSelect,\r\n  NormalButton,\r\n} from \"component/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class AddCustomerPlusClass extends Component {\r\n  state = {\r\n    formFields: {},\r\n    fields: [\r\n      {\r\n        id: 1,\r\n        field_name: \"cust_dob\",\r\n        display_field_name: \"Customer DOB\",\r\n        visible_in_registration: true,\r\n        visible_in_listing: true,\r\n        visible_in_profile: true,\r\n        mandatory: true,\r\n        data_type: \"Dat\",\r\n        selection: null,\r\n      },\r\n    ],\r\n    isLoading: true,\r\n    isMounted: true,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.isMounted = false;\r\n  }\r\n\r\n  updateState = (data) => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      validators: {},\r\n      element: (message) => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n    this.loadData();\r\n  }\r\n\r\n  loadData = async () => {\r\n    await this.props.getCustomerPlusSettings(\"details\");\r\n    this.state.fields = this.props.customerPlusSettings.filter(\r\n      (e) => e.visible_in_registration\r\n    );\r\n    this.state.formFields = this.state.fields.reduce((map, obj) => {\r\n      map[obj.field_name] = \"\";\r\n      return map;\r\n    }, {});\r\n    if (this.props.match.params.id) {\r\n      await this.props.getCustomerPlus(this.props.match.params.id);\r\n      this.state.formFields = this.props.customerPlusDetail;\r\n    }\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleSubmit = async (type) => {\r\n    if (!this.validator.allValid()) return this.validator.showMessages();\r\n    this.setState({ isLoading: true });\r\n    console.log(this.state.formFields);\r\n    try {\r\n      this.state.fields\r\n        .filter((e) => e.data_type == \"date\")\r\n        .forEach((e) => {\r\n          if (this.state.formFields[e.field_name]) {\r\n            let date = new Date(this.state.formFields[e.field_name]);\r\n            let d = date.getDate();\r\n            let day = d < 10 ? \"0\" + d : d;\r\n            let a = date.getMonth() + 1;\r\n            let month = a < 10 ? \"0\" + a : a;\r\n            let year = date.getFullYear();\r\n            this.state.formFields[e.field_name] = `${year}-${month}-${day}`;\r\n          }\r\n        });\r\n      if (this.props.match.params.id) {\r\n        var formFields = {};\r\n        this.state.fields.forEach((e) => {\r\n          formFields[e.field_name] = this.state.formFields[e.field_name];\r\n        });\r\n        var res = await this.props.updateCustomerPlus(\r\n          this.props.match.params.id + \"/\",\r\n          JSON.stringify(formFields)\r\n        );\r\n        if (res.status == 200) {\r\n          if (type === \"catalog\") {\r\n            this.props.history.push(`/admin/cart`);\r\n          } else\r\n            this.props.history.push(\r\n              `/admin/customerplus/${this.props.match.params.id}/details`\r\n            );\r\n        }\r\n      } else {\r\n        var res = await this.props.CreateCustomerPlus(\r\n          JSON.stringify(this.state.formFields)\r\n        );\r\n        if (type === \"catalog\") {\r\n          this.props.history.push(`/admin/cart`);\r\n        } else this.props.history.push(`/admin/customerPlus`);\r\n      }\r\n    } catch (e) {}\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.props.match.params.id) {\r\n      this.props.history.push(\r\n        `/admin/customerplus/${this.props.match.params.id}/details`\r\n      );\r\n    } else {\r\n      this.props.history.push(`/admin/customerplus`);\r\n    }\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleMultiSelect = (field, e) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[field] = e;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleChangeBox = (event) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[event.target.name] = event.target.checked;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleDatePick = async (name, value) => {\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  renderFields = () => {\r\n    let { t } = this.props;\r\n    let extraFields =\r\n      this.state.fields.filter((e) => e.field_name == \"cust_address\").length > 0\r\n        ? this.state.fields.filter((e) => e.field_name.match(/cust_address\\w+/))\r\n        : [];\r\n    let leftLength =\r\n      extraFields.length > 0\r\n        ? (12 - extraFields[0].col_width) * extraFields.length\r\n        : 0;\r\n    console.log(leftLength, \"len\");\r\n    let addressFileds = extraFields.map((e, index) => {\r\n      return (\r\n        <div className=\"input-group pb-2\" key={index}>\r\n          <NormalInput\r\n            placeholder=\"Enter here\"\r\n            value={this.state.formFields[e.field_name]}\r\n            name={e.field_name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n    let sorted = this.state.fields.sort((a, b) => {\r\n      if (a.order > b.order) return 1;\r\n      else return -1;\r\n    });\r\n    let rowElements = [];\r\n    let totalWidth = 0;\r\n    sorted\r\n      .slice(sorted.indexOf(extraFields[extraFields.length - 1]) + 1)\r\n      .forEach((e) => {\r\n        totalWidth += e.col_width;\r\n        if (totalWidth <= leftLength) rowElements.push(e);\r\n        else return;\r\n      });\r\n    console.log(sorted, \"sorted fields\");\r\n    console.log(rowElements, \"row fields\");\r\n    const mapFunction = (e, index) => {\r\n      if (e.data_type == \"date\" || e.data_type == \"datetime\")\r\n        if (!this.state.formFields[e.field_name])\r\n          this.state.formFields[e.field_name] = new Date();\r\n      if (e.field_name.includes(\"cust_address\")) {\r\n        return (\r\n          <>\r\n            <div className={`col-md-${e.col_width} pb-md-4`}>\r\n              <label className=\"text-left text-black common-label-text fs-17 p-0\">\r\n                {e.display_field_name}\r\n              </label>\r\n              <div className=\"input-group pb-2\">\r\n                <NormalInput\r\n                  placeholder=\"Enter here\"\r\n                  value={this.state.formFields[e.field_name]}\r\n                  name={e.field_name}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              {addressFileds}\r\n              {e.mandatory\r\n                ? this.validator.message(\r\n                    e.display_field_name,\r\n                    this.state.formFields[e.field_name],\r\n                    \"required\"\r\n                  )\r\n                : null}\r\n            </div>\r\n            <div className={`col-md-${12 - e.col_width} pb-md-4`}>\r\n              <div className=\"row\">\r\n                {rowElements.map((e,index) => {\r\n                  return (\r\n                    <div className={`col-md-${e.col_width * 2} pb-md-4`} key={index}>\r\n                      <label className=\"text-left text-black common-label-text fs-17 p-0\">\r\n                        {e.display_field_name}\r\n                      </label>\r\n                      <div className=\"input-group\">\r\n                        {e.data_type == \"text\" ? (\r\n                          <NormalInput\r\n                            placeholder=\"Enter here\"\r\n                            value={this.state.formFields[e.field_name]}\r\n                            name={e.field_name}\r\n                            onChange={this.handleChange}\r\n                          />\r\n                        ) : e.data_type == \"date\" ? (\r\n                          <NormalDateTime\r\n                            onChange={this.handleDatePick}\r\n                            value={new Date(this.state.formFields[e.field_name])}\r\n                            name={e.field_name}\r\n                            showYearDropdown={true}\r\n                          />\r\n                        ) : e.data_type == \"datetime\" ? (\r\n                          <NormalDateTime\r\n                            onChange={this.handleDatePick}\r\n                            value={new Date(this.state.formFields[e.field_name])}\r\n                            name={e.field_name}\r\n                            showYearDropdown={true}\r\n                          />\r\n                        ) : e.data_type == \"selection\" ? (\r\n                          <NormalSelect\r\n                            options={e.selection}\r\n                            value={this.state.formFields[e.field_name]}\r\n                            name={e.field_name}\r\n                            onChange={this.handleChange}\r\n                          />\r\n                        ) : e.data_type == \"multiSelect\" ? (\r\n                          <NormalMultiSelect\r\n                            options={e.selection}\r\n                            defaultValue={this.state.formFields[e.field_name]}\r\n                            name={e.field_name}\r\n                            handleMultiSelect={(e) =>\r\n                              this.handleMultiSelect(e.field_name, e)\r\n                            }\r\n                          />\r\n                        ) : e.data_type == \"boolean\" ? (\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.formFields[e.field_name]}\r\n                            name={e.field_name}\r\n                            onClick={this.handleChangeBox}\r\n                          />\r\n                        ) : e.data_type == \"number\" ? (\r\n                          <NormalInput\r\n                            type=\"number\"\r\n                            placeholder=\"Enter here\"\r\n                            value={this.state.formFields[e.field_name]}\r\n                            name={e.field_name}\r\n                            onChange={this.handleChange}\r\n                          />\r\n                        ) : (\r\n                          t(\"NO FILED RENDER DATA FOUND\")\r\n                        )}\r\n                      </div>\r\n                      {e.mandatory\r\n                        ? this.validator.message(\r\n                            e.display_field_name,\r\n                            this.state.formFields[e.field_name],\r\n                            \"required\"\r\n                          )\r\n                        : null}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n      return (\r\n        <div className={`col-md-${e.col_width} pb-md-4`} key={index}>\r\n          <label className=\"text-left text-black common-label-text fs-17 p-0\">\r\n            {t(e.display_field_name)}\r\n          </label>\r\n          <div className=\"input-group\">\r\n            {e.data_type == \"text\" ? (\r\n              <NormalInput\r\n                placeholder=\"Enter here\"\r\n                value={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                onChange={this.handleChange}\r\n              />\r\n            ) : e.data_type == \"date\" ? (\r\n              <NormalDateTime\r\n                onChange={this.handleDatePick}\r\n                value={new Date(this.state.formFields[e.field_name])}\r\n                name={e.field_name}\r\n                showYearDropdown={true}\r\n              />\r\n            ) : e.data_type == \"datetime\" ? (\r\n              <NormalDateTime\r\n                onChange={this.handleDatePick}\r\n                value={new Date(this.state.formFields[e.field_name])}\r\n                name={e.field_name}\r\n                showYearDropdown={true}\r\n              />\r\n            ) : e.data_type == \"selection\" ? (\r\n              <NormalSelect\r\n                options={e.selection}\r\n                value={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                onChange={this.handleChange}\r\n              />\r\n            ) : e.data_type == \"multiSelect\" ? (\r\n              <NormalMultiSelect\r\n                options={e.selection}\r\n                defaultValue={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                handleMultiSelect={(e) =>\r\n                  this.handleMultiSelect(e.field_name, e)\r\n                }\r\n              />\r\n            ) : e.data_type == \"boolean\" ? (\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                onChange={this.handleChangeBox}\r\n              />\r\n            ) : e.data_type == \"number\" ? (\r\n              <NormalInput\r\n                type=\"number\"\r\n                placeholder=\"Enter here\"\r\n                value={this.state.formFields[e.field_name]}\r\n                name={e.field_name}\r\n                onChange={this.handleChange}\r\n              />\r\n            ) : (\r\n              \"NO FILED RENDER DATA FOUND\"\r\n            )}\r\n          </div>\r\n          {e.mandatory\r\n            ? this.validator.message(\r\n                e.display_field_name,\r\n                this.state.formFields[e.field_name],\r\n                \"required\"\r\n              )\r\n            : null}\r\n        </div>\r\n      );\r\n    };\r\n    return extraFields.length > 0\r\n      ? sorted\r\n          .slice(0, sorted.indexOf(extraFields[0]))\r\n          .concat(\r\n            sorted.slice(\r\n              sorted.indexOf(rowElements[rowElements.length - 1]) + 1\r\n            )\r\n          )\r\n          .map(mapFunction)\r\n      : sorted.map(mapFunction);\r\n  };\r\n\r\n  render() {\r\n    let { isLoading } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <div className=\"create-customer-section container-fluid\">\r\n        {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Customer</p> */}\r\n        <div className=\"create-customerplus\">\r\n          <div className=\"head-label-nav\">\r\n            <p className=\"category\">{t(\"Customer Plus\")}</p>\r\n            <i className=\"icon-right mx-md-3\"></i>\r\n            <p className=\"sub-category\">\r\n              {t(\r\n                (this.props.match.params.id ? \"Edit\" : \"Add\") + \" New Customer\"\r\n              )}\r\n            </p>\r\n          </div>\r\n          <div className=\"customer-detail\">\r\n            {isLoading ? (\r\n              <div class=\"d-flex mt-5 align-items-center justify-content-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"form-group mb-4 pb-2 row\">\r\n                  {this.renderFields()}\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\r\n                    <NormalButton\r\n                      onClick={this.handleCancel}\r\n                      label=\"CANCEL\"\r\n                      danger={true}\r\n                      className=\"mr-2 col-12\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\r\n                    <NormalButton\r\n                      onClick={() => this.handleSubmit()}\r\n                      label=\"SAVE\"\r\n                      success={true}\r\n                      className=\"mr-2 col-12\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4 col-sm-12 mb-4\">\r\n                    <NormalButton\r\n                      onClick={() => this.handleSubmit(\"catalog\")}\r\n                      label=\"SAVE & CATALOG\"\r\n                      success={true}\r\n                      className=\"mr-2 col-12\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customerPlusDetail: state.customerPlus.customerPlusDetail,\r\n  customerPlusSettings: state.customerPlus.customerPlusSettings,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getCustomerPlusSettings,\r\n      updateCustomerPlus,\r\n      CreateCustomerPlus,\r\n      getCustomerPlus,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const AddCustomerPlus = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(AddCustomerPlusClass)\r\n);"]},"metadata":{},"sourceType":"module"}