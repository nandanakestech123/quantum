{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\treatmentDone\\\\treatment.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper, NormalCheckbox, Pagination } from \"component/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport _ from \"lodash\";\nimport { history } from \"helpers\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { SelectStaff } from \"./treatmentDone\";\nimport { Reversal } from \"./reversal\";\nimport service from \"assets/images/make-up-brush.png\"; // import Discount from './cart/discount';\n\nimport closeIcon from \"assets/images/close.png\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport { TreatmentHistoryCart } from \"./TreatmentHistoryCart\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { Toast } from \"service/toast\";\nexport class TreatmentDoneClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tstaffList: [],\n      headerDetails: [{\n        label: \"Date\",\n        sortKey: false,\n        width: \"110px\"\n      }, {\n        label: \"Treatment\",\n        width: \"120px\"\n      }, {\n        label: \"Trans Ref\",\n        sortKey: false,\n        width: \"50px\"\n      }, //{ label: 'Type', sortKey: false, width: \"55px\" },\n      // { label: 'Exp-Date', sortKey: false, width: \"80px\" },\n      {\n        label: \"Amount\",\n        sortKey: false,\n        width: \"50px\"\n      }, {\n        label: \"Treat-Code\",\n        sortKey: false,\n        width: \"105px\"\n      }, {\n        label: \"TD\",\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: \"Rev\",\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: \"Open\",\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: \"AR\",\n        sortKey: false,\n        width: \"35px\"\n      }, {\n        label: \"Session\",\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: \"Redeem\",\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: \"Reversal\",\n        sortKey: false,\n        width: \"55px\"\n      }, {\n        label: \"Exchange\",\n        sortKey: false,\n        width: \"55px\"\n      }],\n      // cartData: {},\n      yearList: [],\n      selectedYear: new Date().getFullYear(),\n      isOpenTreatmentDone: false,\n      tsStaff: {},\n      workPoint: 0,\n      isOpenReversal: false,\n      checkBoxConfirmReversal: [],\n      selectedSession: \"\",\n      selectedItemTreatmentIds: [],\n      activeMenu: \"treatmentdone\",\n      productCard: [],\n      list: [],\n      isOpenExchangeService: false,\n      page: 1,\n      rangeId: \"\",\n      menuId: \"\",\n      rangeName: \"\",\n      rangeOption: [],\n      ExchangeItem: {},\n      SelectedExchangeItem: {}\n    };\n\n    this.componentDidMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n      this.props.getCommonApi(\"treatmentdone/Year/\").then(key => {\n        let {\n          status,\n          data\n        } = key;\n        let {\n          yearList\n        } = this.state;\n\n        for (let value of data) {\n          yearList.push({\n            value: value,\n            label: value\n          });\n        }\n\n        this.setState({\n          yearList\n        });\n      });\n      this.getCart();\n    };\n\n    this.handleCheckboxChangeWithNormalCheckBox = item => {\n      let newArray = [...this.state.checkBoxConfirmReversal, item.target.name];\n\n      if (this.state.checkBoxConfirmReversal.includes(item.target.name)) {\n        newArray = newArray.filter(day => day !== item.target.name);\n      }\n\n      this.setState({\n        checkBoxConfirmReversal: newArray\n      });\n    };\n\n    this.getCart = async () => {\n      console.log(this.props, \"sfgdfsgdfghgf\");\n      let {\n        roomList,\n        sourceList,\n        staffList,\n        cartData,\n        duration,\n        tstaffList,\n        selectedYear\n      } = this.state;\n      let {\n        custId = 50270\n      } = this.props.basicApptDetail;\n      this.props.getCommonApi(`treatmentdone/?year=${selectedYear}&cust_id=${custId}`).then(async key => {\n        cartData = key;\n        await this.setState({\n          tstaffList: []\n        });\n        tstaffList = key.data;\n        await this.setState({\n          tstaffList\n        });\n      });\n    };\n\n    this.handleYearChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        selectedYear\n      } = this.state;\n      selectedYear = value;\n      await this.setState({\n        selectedYear\n      });\n      this.getCart();\n    };\n\n    this.getDataFromRes = data => {\n      let {\n        formFields,\n        cartData,\n        updateFields,\n        postFields\n      } = this.state;\n      formFields[\"Item\"] = data.value.Item;\n      formFields[\"Price\"] = data.value.Price;\n      formFields[\"Room\"] = data.value.Room;\n      updateFields[\"Room\"] = data.value.Room;\n      formFields[\"Source\"] = data.value.Source;\n      updateFields[\"Source\"] = data.value.Source;\n      formFields[\"add_duration\"] = data.value.add_duration;\n      formFields[\"new_remark\"] = data.value.new_remark;\n      updateFields[\"new_remark\"] = data.value.new_remark;\n      postFields[\"times\"] = data.value.times;\n      postFields[\"work_point\"] = data.value.work_point;\n      this.setState({\n        formFields,\n        updateFields,\n        postFields\n      });\n    };\n\n    this.handleSubmit = id => {};\n\n    this.handleDialog = () => {\n      this.setState({\n        isOpenTreatmentDone: false,\n        isOpenReversal: false,\n        checkBoxConfirmReversal: [],\n        isOpenExchangeService: false,\n        isHandleExchangeConfirmation: false\n      });\n      this.getCart();\n    };\n\n    this.handleSearch = event => {\n      event.persist();\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          this.props.getCommonApi(`custappt/?search=${searchString}`).then(key => {\n            let {\n              status,\n              data\n            } = key;\n\n            if (status === 200) {\n              // for (let value of data) {\n              //     customerList.push({ value: value.id, label: value.emp_name })\n              // }\n              this.setState({\n                customerOption: data\n              });\n            }\n          });\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleSelectCustomer = async data => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"custId\"] = data.id;\n      formFields[\"custName\"] = data.cust_name;\n      this.setState({\n        formFields,\n        isOpenCustomer: false,\n        customerOption: []\n      });\n      await this.props.updateForm(\"basicApptDetail\", formFields);\n      console.log(this.props.basicApptDetail, \"sdfsadfasdf\");\n    };\n\n    this.handleCartCreated = (data, price, id) => {\n      let {\n        basicApptDetail\n      } = this.props;\n      let {\n        tstaffList\n      } = this.state;\n      let payload = [];\n\n      for (let key of tstaffList) {\n        let reverseTreatmentIds = []; //reverseTreatmentIds = key.treatmentids.reverse();\n\n        let ItemTreatmentIds = key.treatmentids;\n        reverseTreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\n\n        if (key.sel === true) {\n          let obj = {\n            cust_noid: basicApptDetail.custId,\n            cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\n            itemcodeid: key.stockid,\n            price: key.unit_amount,\n            item_uom: null,\n            treatment_account: key.TreatmentAccountid,\n            treatment: reverseTreatmentIds.slice(0, key.session),\n            ori_stockid: null\n          };\n          payload.push(obj);\n        }\n      }\n\n      if (payload.length > 0) {\n        let test = payload;\n        console.log(\"payload-data\", test);\n        this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${basicApptDetail.custId}`).then(res => {\n          if (res.data.length === 0) {\n            this.props.commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload).then(res => {\n              // this.props.handleCartCreated()\n              this.setState({\n                activeTab: \"treatment\",\n                isOpenPriceModal: false\n              });\n              history.push(\"/admin/cart\");\n            });\n          } else {\n            this.props.commonCreateApi(`itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`, payload).then(res => {\n              // this.props.handleCartCreated()\n              this.setState({\n                activeTab: \"treatment\",\n                isOpenPriceModal: false\n              });\n              history.push(\"/admin/cart\");\n            });\n          }\n        });\n      }\n    };\n\n    this.handleCheckout = () => {\n      let {\n        isOpenPayment\n      } = this.state;\n      isOpenPayment = true;\n      this.setState({\n        isOpenPayment\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      }); // this.props.updateForm('customerDetail', formFields)\n      // await this.props.updateForm('appointmentCustomerDetail', formFields)\n    };\n\n    this.handlePostChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        postFields\n      } = this.state;\n      postFields[name] = value;\n      await this.setState({\n        postFields\n      });\n    };\n\n    this.handleUpdateChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        updateFields\n      } = this.state;\n      updateFields[name] = value;\n      await this.setState({\n        updateFields\n      });\n      let event = {\n        target: {\n          value: value,\n          name: name\n        }\n      }; // this.handleUpdatestaff(event);\n    };\n\n    this.handleAddstaff = async item => {\n      let {\n        tstaffList,\n        selectedSession,\n        selectedItemTreatmentIds\n      } = this.state;\n      selectedSession = item.session; // let reverseTreatmentIds = [];\n      // reverseTreatmentIds = item.treatmentids.reverse();\n\n      let ItemTreatmentIds = item.treatmentids;\n      let reverseTreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\n\n      if (selectedSession == 0) {\n        selectedSession = 1;\n      }\n\n      selectedItemTreatmentIds = reverseTreatmentIds.slice(0, selectedSession);\n      var unit_rate = item.unit_amount;\n      var qualifiedAmount = selectedSession * unit_rate;\n      this.setState({\n        selectedSession,\n        selectedItemTreatmentIds\n      });\n      /* let test=0;\r\n          const currentParentCodeBalance = tstaffList.filter(\r\n              (res) => res.treatment_parentcode ===  item.treatment_parentcode\r\n            ).reduce((sum, currentValue) => {\r\n              return  currentValue.balance;\r\n            }, 0);\r\n          const currentParentCodeSelectedStaffValue = tstaffList.filter(\r\n              (res) => res.treatment_parentcode ===  item.treatment_parentcode && res.staff!=null\r\n              ).reduce((sum, currentValue) => {\r\n                  return parseFloat((eval(sum))) + parseFloat((eval(currentValue.unit_amount)));\r\n                }, 0);\r\n          \r\n          if(item.staff==null)\r\n          {\r\n              test=parseFloat((eval(currentParentCodeSelectedStaffValue))) + parseFloat((eval(item.unit_amount))) ;\r\n          }\r\n          else{\r\n              test=parseFloat((eval(currentParentCodeSelectedStaffValue))) - parseFloat((eval(item.unit_amount))) ;\r\n          }\r\n          */\n      //if (currentParentCodeBalance >= test) {\n\n      if (item.balance >= qualifiedAmount) {\n        let {\n          tstaffList,\n          formFields,\n          cartData,\n          postFields\n        } = this.state;\n        await this.setState({\n          tsStaff: item\n        });\n        this.setState({\n          isOpenTreatmentDone: true\n        });\n      } else {\n        this.handleDialog();\n        Toast({\n          type: \"error\",\n          message: \"Insufficient balance to redeem\"\n        });\n      }\n    };\n\n    this.handleUpdatestaff = async (event, item, index) => {\n      let {\n        tstaffList,\n        formFields,\n        cartData,\n        updateFields\n      } = this.state;\n      tstaffList[index][event.target.name] = event.target.value;\n      this.setState({\n        tstaffList\n      });\n      let data = {};\n\n      if (event.target.name === \"appt_fr_time\") {\n        data = {\n          appt_fr_time: event.target.value,\n          add_duration: formFields[\"add_duration\"]\n        };\n      }\n\n      if (event.target.name === \"add_duration\") {\n        data = {\n          appt_fr_time: item.appt_fr_time,\n          add_duration: event.target.value\n        };\n      } // if (updateFields.Source && updateFields.Room) {\n\n\n      this.props.commonPatchApi(`tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`, data).then(() => {\n        this.getCart();\n      }); // } else {\n      //     this.setState({ showUpdateError: true })\n      // }\n    };\n\n    this.handleClearLine = () => {\n      this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=0&cartid=${this.props.cartId}`).then(() => {\n        this.getCart();\n      });\n    };\n\n    this.handleClearAll = () => {\n      this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=1&cartid=${this.props.cartId}`).then(() => {\n        let {\n          formFields,\n          postFields\n        } = this.state;\n        formFields[\"work_point\"] = \"\";\n        postFields[\"times\"] = \"\";\n        this.setState({\n          formFields,\n          postFields\n        });\n        this.getCart();\n      });\n    };\n\n    this.handleReversalTreatmentAll = async () => {\n      let treatmentIds = this.state.checkBoxConfirmReversal;\n      await this.setState({\n        treatmentIds\n      });\n      this.setState({\n        isOpenReversal: true\n      });\n    };\n\n    this.handleReversalTreatment = async item => {\n      let reverseTreatmentIds = [];\n      let {\n        selectedSession\n      } = this.state;\n      selectedSession = item.session;\n      let ItemTreatmentIds = item.treatmentids;\n      let TreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\n\n      if (selectedSession == 0) {\n        selectedSession = 1;\n      }\n\n      reverseTreatmentIds = TreatmentIds.slice(0, selectedSession);\n      await this.setState({\n        treatmentIds: reverseTreatmentIds,\n        selectedSession\n      });\n      this.setState({\n        isOpenReversal: true\n      });\n    };\n\n    this.handleReverse = (item, index) => {\n      let {\n        tstaffList\n      } = this.state;\n      tstaffList[index][\"rev\"] = true;\n      this.setState({\n        tstaffList\n      }); // onClick={this.handleReversalTreatment}\n    };\n\n    this.changeIndexSession = (index, value) => {\n      let {\n        tstaffList\n      } = this.state;\n      tstaffList[index][\"session\"] = value;\n      this.setState({\n        tstaffList\n      }); // onClick={this.handleReversalTreatment}\n    };\n\n    this.toggle = tab => {\n      if (this.state.activeMenu !== tab) {\n        this.setState({\n          activeMenu: tab\n        });\n      }\n    };\n\n    this.getServices = query => {\n      let {\n        page = this.state.page,\n        menuId = this.state.menuId,\n        rangeId = this.state.rangeId\n      } = query;\n      this.props.getCommonApi(`servicestock/?Item_Deptid=${menuId}&page=${page}&Item_Rangeid=${rangeId}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          this.setState({\n            productCard: data,\n            list: data.dataList\n          });\n        }\n      });\n    };\n\n    this.getMenus = () => {\n      let {\n        menuOption\n      } = this.state;\n      menuOption = [];\n      console.log(\"sdfsdhfghjghj\", this.props);\n      this.props.getCommonApi(`catalogitemdept/?Item_Dept=${`SERVICE`}`).then(res => {\n        // activeMenu = []\n        console.log(\"sdfsdhfghjghj ress\", res);\n\n        for (let key of res.data) {\n          menuOption.push({\n            value: key.id,\n            label: key.itm_desc,\n            code: key.itm_code,\n            seq: key.itm_seq\n          });\n        }\n\n        this.setState({\n          menuOption\n        });\n      });\n    };\n\n    this.getRange = () => {\n      let {\n        rangeOption,\n        menuId\n      } = this.state;\n      rangeOption = [];\n      this.props.getCommonApi(`catalogitemrange?Item_Deptid=${menuId}`).then(res => {\n        // activeMenu = []\n        for (let key of res.data) {\n          rangeOption.push({\n            value: key.id,\n            label: key.itm_desc\n          });\n        }\n\n        this.setState({\n          rangeOption\n        });\n      });\n    };\n\n    this.handleExchangeClick = async (index, item) => {\n      if (item.sel) {\n        await this.setState({\n          ExchangeItem: []\n        });\n        this.getMenus();\n        this.getRange();\n        this.getServices({});\n        await this.setState({\n          isOpenExchangeService: true,\n          ExchangeItem: item\n        });\n        console.log(this.state.ExchangeItem, \"selected row of treatment done data - exchange item\");\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Select Staff should not be empty\"\n        });\n      }\n    };\n\n    this.handlePagination = async page => {\n      await this.setState({\n        page: page\n      });\n      this.getServices({\n        page: page\n      });\n    };\n\n    this.handleMenuChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let menuId = Object.assign({}, this.state.menuId);\n      menuId = value;\n      await this.setState({\n        menuId\n      });\n      this.getRange();\n      this.getServices({});\n    };\n\n    this.handleRangeChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let rangeId = Object.assign({}, this.state.rangeId);\n      let rangeName = Object.assign({}, this.state.rangeName);\n      let {\n        rangeOption\n      } = this.state;\n      rangeId = value;\n\n      for (let key of rangeOption) {\n        if (key.value == value) {\n          rangeName = key.label;\n        }\n      }\n\n      await this.setState({\n        rangeId,\n        rangeName\n      });\n      this.getServices({});\n    };\n\n    this.handleSelectedService = async data => {\n      let {\n        ExchangeItem\n      } = this.state;\n      await this.setState({\n        SelectedExchangeItem: data\n      });\n\n      if (Number(data.item_price) > Number(ExchangeItem.unit_amount)) {\n        this.setState({\n          isHandleExchangeConfirmation: true\n        });\n      } else {\n        this.handleExchangePostAction();\n      }\n    };\n\n    this.handleExchangePostAction = () => {\n      let {\n        basicApptDetail\n      } = this.props;\n      let {\n        ExchangeItem,\n        SelectedExchangeItem\n      } = this.state;\n      let payload = [];\n      let obj = {\n        cust_noid: basicApptDetail.custId,\n        cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\n        itemcodeid: SelectedExchangeItem.id,\n        price: ExchangeItem.unit_amount,\n        item_uom: null,\n        treatment_account: ExchangeItem.TreatmentAccountid,\n        treatment: ExchangeItem.id,\n        ori_stockid: ExchangeItem.stockid\n      };\n      payload.push(obj);\n      console.log(payload, \"exchange input\");\n      this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${basicApptDetail.custId}`).then(res => {\n        if (res.data.length === 0) {\n          this.props.commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload).then(res => {\n            console.log(res, \"result of exchnage final click\");\n            this.setState({\n              activeTab: \"treatment\",\n              isOpenExchangeService: false\n            });\n            history.push(\"/admin/cart\");\n          });\n        } else {\n          this.props.commonCreateApi(`itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`, payload).then(res => {\n            // this.props.handleCartCreated()\n            this.setState({\n              activeTab: \"treatment\",\n              isOpenExchangeService: false\n            });\n            history.push(\"/admin/cart\");\n          });\n        }\n      });\n    };\n\n    this.handleDialogExchangeConfirm = () => {\n      this.setState({\n        isHandleExchangeConfirmation: false,\n        SelectedExchangeItem: {}\n      });\n    };\n  }\n\n  render() {\n    let {\n      productCard = {},\n      list,\n      tstaffList = [],\n      selectedYear,\n      yearList,\n      isOpenTreatmentDone,\n      headerDetails,\n      tsStaff,\n      isOpenReversal,\n      treatmentIds,\n      activeMenu,\n      isOpenExchangeService,\n      menuOption,\n      menuId,\n      rangeOption,\n      rangeId,\n      isHandleExchangeConfirmation,\n      ExchangeItem,\n      SelectedExchangeItem\n    } = this.state;\n    let localtStaffList = [...tstaffList];\n    let {\n      basicApptDetail\n    } = this.props;\n    let {\n      dataList = [],\n      meta = {}\n    } = productCard;\n    let {\n      pagination\n    } = meta;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatmentDone-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"beautesoft-navlink customer-detail mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filled-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"treatmentdone\"\n      }),\n      onClick: () => {\n        this.toggle(\"treatmentdone\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 23\n      }\n    }, \"Treatment Done\")), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"treatmenthistory\"\n      }),\n      onClick: () => {\n        this.toggle(\"treatmenthistory\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 23\n      }\n    }, \"Treatment History\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"fs-15 clear-line\",\n      label: \"Back\",\n      outline: false,\n      onClick: () => history.push(`/admin/cart`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatment-section ml-1 p-2 pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"treatmentdone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 13\n      }\n    }, activeMenu === \"treatmentdone\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row treatment-done-new p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 font-700 mb-3 title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 21\n      }\n    }, \"Available Treatments\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex select-year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-0 mb-2 name fs-16 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 23\n      }\n    }, \"Select Year\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: yearList,\n      value: selectedYear,\n      name: \"selectedYear\",\n      onChange: this.handleYearChange,\n      className: \"selected-year mb-2 py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 23\n      }\n    }, \"Customer Name : \", this.props.basicApptDetail.custName), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 23\n      }\n    }, \"Reference : \", this.props.basicApptDetail.custRefer))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `col-12 cart-item`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `item-list`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination // pageMeta={pageMeta}\n      // isEmpty={tstaffList.length === 0 ? true:false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 25\n      }\n    }, tstaffList.length > 0 ? tstaffList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"position-relative status-type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 39\n        }\n      }, item.treatment_date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 39\n        }\n      }, item.course)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 39\n        }\n      }, item.transacno_ref)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 39\n        }\n      }, item.unit_amount)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 39\n        }\n      }, item.treatment_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 39\n        }\n      }, item.td)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 39\n        }\n      }, item.rev)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 39\n        }\n      }, item.open)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 39\n        }\n      }, item.ar)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          width: \"50px\"\n        },\n        value: item.session,\n        onChange: e => this.changeIndexSession(index, e.target.value),\n        disabled: item.session_flag && item.session !== Number(0) ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnRedeem\",\n        onClick: () => this.handleAddstaff(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 39\n        }\n      }, \"Select\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 37\n        }\n      }, item.iscurrentloggedinsalon && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnReversal\",\n        onClick: () => this.handleReversalTreatment(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 41\n        }\n      }, \"Select\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 37\n        }\n      }, item.exchange_flag && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnExchange\",\n        label: \"Exchange\",\n        onClick: () => this.handleExchangeClick(index, item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 41\n        }\n      }, \"Select\")));\n    }) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pt-4 action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \" fs-15 confirm\",\n      label: \"Confirm Treatment Done\",\n      outline: false,\n      onClick: () => this.handleCartCreated(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 29\n      }\n    })))))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-exchange\",\n      style: {\n        minWidth: \"70%\"\n      },\n      modal: isOpenExchangeService,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 input-group pl-2 range-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: menuOption,\n      value: menuId,\n      name: \"menuId\",\n      onChange: this.handleMenuChange,\n      className: \"py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 input-group range-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: rangeOption,\n      value: rangeId,\n      name: \"rangeId\",\n      onChange: this.handleRangeChange,\n      className: \"py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 21\n      }\n    }, console.log(list, \"card list\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"services m-0 row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 23\n      }\n    }, list.length > 0 ? list.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 col-12 fs-12 p-2 cursor-pointer\",\n        key: data.id,\n        onClick: () => this.handleSelectedService(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"service-tab p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"service-ttl px-2 font-700 fs-11\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 37\n        }\n      }, data.item_desc), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"price px-2 py-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"non-retail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-orenge font-700\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 41\n        }\n      }, \"$\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-orenge font-700\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 41\n        }\n      }, data.item_price ? Number(data.item_price).toFixed(2) : \"\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"foc-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"32\",\n        height: \"32\",\n        className: \"cursor-pointer\",\n        viewBox: \"0 0 32 32\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(\"circle\", {\n        cx: \"16\",\n        cy: \"16\",\n        r: \"15.5\",\n        fill: \"rgba(60, 64, 135, 0.31)\",\n        stroke: \"#3C4087\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M3.996 11.456H9.42V12.476H5.22V15.152H9.18V16.172H5.22V20H3.996V11.456ZM14.3243 20.096C13.5163 20.096 12.8123 19.92 12.2123 19.568C11.6203 19.208 11.1603 18.7 10.8323 18.044C10.5123 17.388 10.3523 16.616 10.3523 15.728C10.3523 14.832 10.5123 14.056 10.8323 13.4C11.1523 12.744 11.6123 12.24 12.2123 11.888C12.8123 11.536 13.5163 11.36 14.3243 11.36C15.1403 11.36 15.8443 11.536 16.4362 11.888C17.0363 12.24 17.4963 12.744 17.8163 13.4C18.1363 14.056 18.2963 14.828 18.2963 15.716C18.2963 16.612 18.1363 17.388 17.8163 18.044C17.4963 18.7 17.0363 19.208 16.4362 19.568C15.8363 19.92 15.1323 20.096 14.3243 20.096ZM14.3243 19.088C15.1803 19.088 15.8443 18.796 16.3163 18.212C16.7963 17.628 17.0363 16.796 17.0363 15.716C17.0363 14.644 16.7963 13.82 16.3163 13.244C15.8443 12.66 15.1803 12.368 14.3243 12.368C13.4683 12.368 12.8043 12.66 12.3323 13.244C11.8603 13.82 11.6243 14.644 11.6243 15.716C11.6243 16.796 11.8603 17.628 12.3323 18.212C12.8123 18.796 13.4763 19.088 14.3243 19.088ZM23.7598 20.096C22.9358 20.096 22.2158 19.92 21.5998 19.568C20.9918 19.208 20.5238 18.7 20.1958 18.044C19.8678 17.388 19.7038 16.612 19.7038 15.716C19.7038 14.828 19.8678 14.056 20.1958 13.4C20.5238 12.744 20.9918 12.24 21.5998 11.888C22.2158 11.536 22.9358 11.36 23.7598 11.36C24.3438 11.36 24.8838 11.452 25.3798 11.636C25.8838 11.812 26.3078 12.072 26.6518 12.416L26.2198 13.328C25.8198 13 25.4238 12.764 25.0318 12.62C24.6478 12.468 24.2278 12.392 23.7718 12.392C22.8838 12.392 22.1958 12.68 21.7078 13.256C21.2278 13.832 20.9878 14.652 20.9878 15.716C20.9878 16.788 21.2278 17.616 21.7078 18.2C22.1958 18.776 22.8838 19.064 23.7718 19.064C24.2278 19.064 24.6478 18.992 25.0318 18.848C25.4238 18.696 25.8198 18.456 26.2198 18.128L26.6518 19.04C26.3078 19.384 25.8838 19.648 25.3798 19.832C24.8838 20.008 24.3438 20.096 23.7598 20.096Z\",\n        fill: \"#3C4087\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"images\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: data.Stock_PIC,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 39\n        }\n      }))));\n    }) : \"\", pagination && /*#__PURE__*/React.createElement(Pagination, {\n      handlePagination: this.handlePagination,\n      pageMeta: pagination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-reversal\",\n      style: {\n        minWidth: \"75%\"\n      },\n      modal: isOpenReversal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1048,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Reversal, {\n      id: basicApptDetail.custId,\n      treatmentId: tsStaff.id,\n      reversalId: treatmentIds,\n      cartId: this.props.id,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-modal\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: isOpenTreatmentDone,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SelectStaff, {\n      id: this.state.selectedItemTreatmentIds //id={tsStaff.id}\n      ,\n      session: this.state.selectedSession,\n      cartId: basicApptDetail.cartId,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-reversal\",\n      style: {\n        minWidth: \"432px\"\n      },\n      modal: isHandleExchangeConfirmation,\n      handleModal: this.handleDialogExchangeConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialogExchangeConfirm,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 27\n      }\n    }, \"Confirmation\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 27\n      }\n    }, \"Service Price : $\", SelectedExchangeItem.item_price, \"\\xA0larger than\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 27\n      }\n    }, \"Previous Service Price : $\", ExchangeItem.unit_amount)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 27\n      }\n    }, \"Are you sure want to continue ?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Confirm\",\n      mainbg: true,\n      name: \"Exconfirm\",\n      className: `w-100 col-12`,\n      onClick: this.handleExchangePostAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Cancel\",\n      mainbg: true,\n      name: \"ExCancel\",\n      className: `w-100 col-12`,\n      onClick: this.handleDialogExchangeConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 29\n      }\n    }))))))) : null), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"treatmenthistory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 13\n      }\n    }, activeMenu === \"treatmenthistory\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row treatment-done-new p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TreatmentHistoryCart, {\n      customerNumber: basicApptDetail.custId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 21\n      }\n    }))) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonCreateApi,\n    commonPatchApi,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const TreatmentDone = connect(mapStateToProps, mapDispatchToProps)(TreatmentDoneClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Cart/treatmentDone/treatment.js"],"names":["React","Component","NormalButton","NormalInput","NormalSelect","InputSearch","NormalModal","TableWrapper","NormalCheckbox","Pagination","dateFormat","_","history","connect","bindActionCreators","getCommonApi","updateForm","commonCreateApi","commonDeleteApi","commonPatchApi","SimpleReactValidator","SelectStaff","Reversal","service","closeIcon","FormGroup","Label","Input","TreatmentHistoryCart","Nav","NavItem","NavLink","TabContent","TabPane","classnames","Toast","TreatmentDoneClass","state","tstaffList","headerDetails","label","sortKey","width","yearList","selectedYear","Date","getFullYear","isOpenTreatmentDone","tsStaff","workPoint","isOpenReversal","checkBoxConfirmReversal","selectedSession","selectedItemTreatmentIds","activeMenu","productCard","list","isOpenExchangeService","page","rangeId","menuId","rangeName","rangeOption","ExchangeItem","SelectedExchangeItem","componentDidMount","validator","element","message","autoForceUpdate","props","then","key","status","data","value","push","setState","getCart","handleCheckboxChangeWithNormalCheckBox","item","newArray","target","name","includes","filter","day","console","log","roomList","sourceList","staffList","cartData","duration","custId","basicApptDetail","handleYearChange","getDataFromRes","formFields","updateFields","postFields","Item","Price","Room","Source","add_duration","new_remark","times","work_point","handleSubmit","id","handleDialog","isHandleExchangeConfirmation","handleSearch","event","persist","debouncedFn","debounce","searchString","customerOption","handleSelectCustomer","cust_name","isOpenCustomer","handleCartCreated","price","payload","reverseTreatmentIds","ItemTreatmentIds","treatmentids","sort","a","b","sel","obj","cust_noid","cart_date","itemcodeid","stockid","unit_amount","item_uom","treatment_account","TreatmentAccountid","treatment","slice","session","ori_stockid","length","test","res","activeTab","isOpenPriceModal","cart_id","handleCheckout","isOpenPayment","handleChange","handlePostChange","handleUpdateChange","handleAddstaff","unit_rate","qualifiedAmount","balance","type","handleUpdatestaff","index","appt_fr_time","handleClearLine","cartId","handleClearAll","handleReversalTreatmentAll","treatmentIds","handleReversalTreatment","TreatmentIds","handleReverse","changeIndexSession","toggle","tab","getServices","query","dataList","getMenus","menuOption","itm_desc","code","itm_code","seq","itm_seq","getRange","handleExchangeClick","handlePagination","handleMenuChange","Object","assign","handleRangeChange","handleSelectedService","Number","item_price","handleExchangePostAction","handleDialogExchangeConfirm","render","localtStaffList","meta","pagination","active","custName","custRefer","map","treatment_date","course","transacno_ref","treatment_code","td","rev","open","ar","e","session_flag","iscurrentloggedinsalon","exchange_flag","minWidth","item_desc","toFixed","Stock_PIC","mapStateToProps","selected_cstomer","common","appointment","mapDispatchToProps","dispatch","TreatmentDone"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport {\r\n  NormalButton,\r\n  NormalInput,\r\n  NormalSelect,\r\n  InputSearch,\r\n  NormalModal,\r\n  TableWrapper,\r\n  NormalCheckbox,\r\n  Pagination,\r\n} from \"component/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport _ from \"lodash\";\r\nimport { history } from \"helpers\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  updateForm,\r\n  commonCreateApi,\r\n  commonDeleteApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { SelectStaff } from \"./treatmentDone\";\r\nimport { Reversal } from \"./reversal\";\r\nimport service from \"assets/images/make-up-brush.png\";\r\n// import Discount from './cart/discount';\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\nimport { TreatmentHistoryCart } from \"./TreatmentHistoryCart\";\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nexport class TreatmentDoneClass extends Component {\r\n  state = {\r\n    tstaffList: [],\r\n    headerDetails: [\r\n      { label: \"Date\", sortKey: false, width: \"110px\" },\r\n      { label: \"Treatment\", width: \"120px\" },\r\n      { label: \"Trans Ref\", sortKey: false, width: \"50px\" },\r\n\r\n      //{ label: 'Type', sortKey: false, width: \"55px\" },\r\n      // { label: 'Exp-Date', sortKey: false, width: \"80px\" },\r\n      { label: \"Amount\", sortKey: false, width: \"50px\" },\r\n\r\n      { label: \"Treat-Code\", sortKey: false, width: \"105px\" },\r\n      { label: \"TD\", sortKey: false, width: \"55px\" },\r\n      { label: \"Rev\", sortKey: false, width: \"55px\" },\r\n      { label: \"Open\", sortKey: false, width: \"55px\" },\r\n      { label: \"AR\", sortKey: false, width: \"35px\" },\r\n      { label: \"Session\", sortKey: false, width: \"55px\" },\r\n      { label: \"Redeem\", sortKey: false, width: \"55px\" },\r\n      { label: \"Reversal\", sortKey: false, width: \"55px\" },\r\n      { label: \"Exchange\", sortKey: false, width: \"55px\" },\r\n    ],\r\n    // cartData: {},\r\n    yearList: [],\r\n    selectedYear: new Date().getFullYear(),\r\n    isOpenTreatmentDone: false,\r\n    tsStaff: {},\r\n    workPoint: 0,\r\n    isOpenReversal: false,\r\n    checkBoxConfirmReversal: [],\r\n    selectedSession: \"\",\r\n    selectedItemTreatmentIds: [],\r\n    activeMenu: \"treatmentdone\",\r\n    productCard: [],\r\n    list: [],\r\n    isOpenExchangeService: false,\r\n    page: 1,\r\n    rangeId: \"\",\r\n    menuId: \"\",\r\n    rangeName: \"\",\r\n    rangeOption: [],\r\n    ExchangeItem: {},\r\n    SelectedExchangeItem: {},\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n    this.props.getCommonApi(\"treatmentdone/Year/\").then(key => {\r\n      let { status, data } = key;\r\n      let { yearList } = this.state;\r\n      for (let value of data) {\r\n        yearList.push({ value: value, label: value });\r\n      }\r\n      this.setState({ yearList });\r\n    });\r\n    this.getCart();\r\n  };\r\n  handleCheckboxChangeWithNormalCheckBox = item => {\r\n    let newArray = [...this.state.checkBoxConfirmReversal, item.target.name];\r\n    if (this.state.checkBoxConfirmReversal.includes(item.target.name)) {\r\n      newArray = newArray.filter(day => day !== item.target.name);\r\n    }\r\n    this.setState({\r\n      checkBoxConfirmReversal: newArray,\r\n    });\r\n  };\r\n  getCart = async () => {\r\n    console.log(this.props, \"sfgdfsgdfghgf\");\r\n    let {\r\n      roomList,\r\n      sourceList,\r\n      staffList,\r\n      cartData,\r\n      duration,\r\n      tstaffList,\r\n      selectedYear,\r\n    } = this.state;\r\n    let { custId = 50270 } = this.props.basicApptDetail;\r\n    this.props\r\n      .getCommonApi(`treatmentdone/?year=${selectedYear}&cust_id=${custId}`)\r\n      .then(async key => {\r\n        cartData = key;\r\n        await this.setState({ tstaffList: [] });\r\n        tstaffList = key.data;\r\n        await this.setState({\r\n          tstaffList,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleYearChange = async ({ target: { value, name } }) => {\r\n    let { selectedYear } = this.state;\r\n    selectedYear = value;\r\n    await this.setState({\r\n      selectedYear,\r\n    });\r\n    this.getCart();\r\n  };\r\n\r\n  getDataFromRes = data => {\r\n    let { formFields, cartData, updateFields, postFields } = this.state;\r\n    formFields[\"Item\"] = data.value.Item;\r\n    formFields[\"Price\"] = data.value.Price;\r\n    formFields[\"Room\"] = data.value.Room;\r\n    updateFields[\"Room\"] = data.value.Room;\r\n    formFields[\"Source\"] = data.value.Source;\r\n    updateFields[\"Source\"] = data.value.Source;\r\n    formFields[\"add_duration\"] = data.value.add_duration;\r\n    formFields[\"new_remark\"] = data.value.new_remark;\r\n    updateFields[\"new_remark\"] = data.value.new_remark;\r\n    postFields[\"times\"] = data.value.times;\r\n    postFields[\"work_point\"] = data.value.work_point;\r\n    this.setState({\r\n      formFields,\r\n      updateFields,\r\n      postFields,\r\n    });\r\n  };\r\n\r\n  // getYearList = (data) => {\r\n  //     let date = new Date().getFullYear();\r\n\r\n  //     let { yearList } = this.state;\r\n  //     for (let i = date; i > 1970; i--) {\r\n  //         yearList.push({ label: i, value: i });\r\n  //     }\r\n  //     this.setState({\r\n  //         yearList\r\n  //     })\r\n  // }\r\n\r\n  handleSubmit = id => {};\r\n\r\n  handleDialog = () => {\r\n    this.setState({\r\n      isOpenTreatmentDone: false,\r\n      isOpenReversal: false,\r\n      checkBoxConfirmReversal: [],\r\n      isOpenExchangeService: false,\r\n      isHandleExchangeConfirmation: false,\r\n    });\r\n    this.getCart();\r\n  };\r\n\r\n  handleSearch = event => {\r\n    event.persist();\r\n\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(() => {\r\n        let searchString = event.target.value;\r\n        this.props\r\n          .getCommonApi(`custappt/?search=${searchString}`)\r\n          .then(key => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n              // for (let value of data) {\r\n              //     customerList.push({ value: value.id, label: value.emp_name })\r\n              // }\r\n              this.setState({ customerOption: data });\r\n            }\r\n          });\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  handleSelectCustomer = async data => {\r\n    let { formFields } = this.state;\r\n    formFields[\"custId\"] = data.id;\r\n    formFields[\"custName\"] = data.cust_name;\r\n    this.setState({ formFields, isOpenCustomer: false, customerOption: [] });\r\n    await this.props.updateForm(\"basicApptDetail\", formFields);\r\n    console.log(this.props.basicApptDetail, \"sdfsadfasdf\");\r\n  };\r\n\r\n  handleCartCreated = (data, price, id) => {\r\n    let { basicApptDetail } = this.props;\r\n    let { tstaffList } = this.state;\r\n    let payload = [];\r\n\r\n    for (let key of tstaffList) {\r\n      let reverseTreatmentIds = [];\r\n      //reverseTreatmentIds = key.treatmentids.reverse();\r\n      let ItemTreatmentIds = key.treatmentids;\r\n      reverseTreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\r\n      if (key.sel === true) {\r\n        let obj = {\r\n          cust_noid: basicApptDetail.custId,\r\n          cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n          itemcodeid: key.stockid,\r\n          price: key.unit_amount,\r\n          item_uom: null,\r\n          treatment_account: key.TreatmentAccountid,\r\n          treatment: reverseTreatmentIds.slice(0, key.session),\r\n          ori_stockid: null,\r\n        };\r\n        payload.push(obj);\r\n      }\r\n    }\r\n    if (payload.length > 0) {\r\n      let test = payload;\r\n      console.log(\"payload-data\", test);\r\n      this.props\r\n        .getCommonApi(\r\n          `itemcart/Check/?cart_date=${dateFormat(\r\n            new Date(),\r\n            \"yyyy-mm-dd\"\r\n          )}&cust_noid=${basicApptDetail.custId}`\r\n        )\r\n        .then(res => {\r\n          if (res.data.length === 0) {\r\n            this.props\r\n              .commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload)\r\n              .then(res => {\r\n                // this.props.handleCartCreated()\r\n                this.setState({\r\n                  activeTab: \"treatment\",\r\n                  isOpenPriceModal: false,\r\n                });\r\n                history.push(\"/admin/cart\");\r\n              });\r\n          } else {\r\n            this.props\r\n              .commonCreateApi(\r\n                `itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`,\r\n                payload\r\n              )\r\n              .then(res => {\r\n                // this.props.handleCartCreated()\r\n                this.setState({\r\n                  activeTab: \"treatment\",\r\n                  isOpenPriceModal: false,\r\n                });\r\n                history.push(\"/admin/cart\");\r\n              });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleCheckout = () => {\r\n    let { isOpenPayment } = this.state;\r\n    isOpenPayment = true;\r\n    this.setState({ isOpenPayment });\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n    // this.props.updateForm('customerDetail', formFields)\r\n    // await this.props.updateForm('appointmentCustomerDetail', formFields)\r\n  };\r\n\r\n  handlePostChange = async ({ target: { value, name } }) => {\r\n    let { postFields } = this.state;\r\n    postFields[name] = value;\r\n    await this.setState({\r\n      postFields,\r\n    });\r\n  };\r\n\r\n  handleUpdateChange = async ({ target: { value, name } }) => {\r\n    let { updateFields } = this.state;\r\n    updateFields[name] = value;\r\n    await this.setState({\r\n      updateFields,\r\n    });\r\n    let event = { target: { value: value, name: name } };\r\n    // this.handleUpdatestaff(event);\r\n  };\r\n\r\n  handleAddstaff = async item => {\r\n    let { tstaffList, selectedSession, selectedItemTreatmentIds } = this.state;\r\n    selectedSession = item.session;\r\n    // let reverseTreatmentIds = [];\r\n    // reverseTreatmentIds = item.treatmentids.reverse();\r\n    let ItemTreatmentIds = item.treatmentids;\r\n    let reverseTreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\r\n    if (selectedSession == 0) {\r\n      selectedSession = 1;\r\n    }\r\n    selectedItemTreatmentIds = reverseTreatmentIds.slice(0, selectedSession);\r\n    var unit_rate = item.unit_amount;\r\n    var qualifiedAmount = selectedSession * unit_rate;\r\n    this.setState({ selectedSession, selectedItemTreatmentIds });\r\n\r\n    /* let test=0;\r\n        const currentParentCodeBalance = tstaffList.filter(\r\n            (res) => res.treatment_parentcode ===  item.treatment_parentcode\r\n          ).reduce((sum, currentValue) => {\r\n            return  currentValue.balance;\r\n          }, 0);\r\n        const currentParentCodeSelectedStaffValue = tstaffList.filter(\r\n            (res) => res.treatment_parentcode ===  item.treatment_parentcode && res.staff!=null\r\n            ).reduce((sum, currentValue) => {\r\n                return parseFloat((eval(sum))) + parseFloat((eval(currentValue.unit_amount)));\r\n              }, 0);\r\n        \r\n        if(item.staff==null)\r\n        {\r\n            test=parseFloat((eval(currentParentCodeSelectedStaffValue))) + parseFloat((eval(item.unit_amount))) ;\r\n        }\r\n        else{\r\n            test=parseFloat((eval(currentParentCodeSelectedStaffValue))) - parseFloat((eval(item.unit_amount))) ;\r\n        }\r\n        */\r\n\r\n    //if (currentParentCodeBalance >= test) {\r\n    if (item.balance >= qualifiedAmount) {\r\n      let { tstaffList, formFields, cartData, postFields } = this.state;\r\n      await this.setState({ tsStaff: item });\r\n      this.setState({\r\n        isOpenTreatmentDone: true,\r\n      });\r\n    } else {\r\n      this.handleDialog();\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Insufficient balance to redeem\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleUpdatestaff = async (event, item, index) => {\r\n    let { tstaffList, formFields, cartData, updateFields } = this.state;\r\n    tstaffList[index][event.target.name] = event.target.value;\r\n    this.setState({\r\n      tstaffList,\r\n    });\r\n    let data = {};\r\n    if (event.target.name === \"appt_fr_time\") {\r\n      data = {\r\n        appt_fr_time: event.target.value,\r\n        add_duration: formFields[\"add_duration\"],\r\n      };\r\n    }\r\n    if (event.target.name === \"add_duration\") {\r\n      data = {\r\n        appt_fr_time: item.appt_fr_time,\r\n        add_duration: event.target.value,\r\n      };\r\n    }\r\n\r\n    // if (updateFields.Source && updateFields.Room) {\r\n    this.props\r\n      .commonPatchApi(\r\n        `tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`,\r\n        data\r\n      )\r\n      .then(() => {\r\n        this.getCart();\r\n      });\r\n    // } else {\r\n    //     this.setState({ showUpdateError: true })\r\n    // }\r\n  };\r\n\r\n  handleClearLine = () => {\r\n    this.props\r\n      .commonDeleteApi(\r\n        `tmpitemhelper/delete/?clear_all=0&cartid=${this.props.cartId}`\r\n      )\r\n      .then(() => {\r\n        this.getCart();\r\n      });\r\n  };\r\n\r\n  handleClearAll = () => {\r\n    this.props\r\n      .commonDeleteApi(\r\n        `tmpitemhelper/delete/?clear_all=1&cartid=${this.props.cartId}`\r\n      )\r\n      .then(() => {\r\n        let { formFields, postFields } = this.state;\r\n        formFields[\"work_point\"] = \"\";\r\n        postFields[\"times\"] = \"\";\r\n        this.setState({\r\n          formFields,\r\n          postFields,\r\n        });\r\n        this.getCart();\r\n      });\r\n  };\r\n  handleReversalTreatmentAll = async () => {\r\n    let treatmentIds = this.state.checkBoxConfirmReversal;\r\n\r\n    await this.setState({\r\n      treatmentIds,\r\n    });\r\n\r\n    this.setState({\r\n      isOpenReversal: true,\r\n    });\r\n  };\r\n  handleReversalTreatment = async item => {\r\n    let reverseTreatmentIds = [];\r\n    let { selectedSession } = this.state;\r\n    selectedSession = item.session;\r\n    let ItemTreatmentIds = item.treatmentids;\r\n    let TreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\r\n    if (selectedSession == 0) {\r\n      selectedSession = 1;\r\n    }\r\n    reverseTreatmentIds = TreatmentIds.slice(0, selectedSession);\r\n    await this.setState({\r\n      treatmentIds: reverseTreatmentIds,\r\n      selectedSession,\r\n    });\r\n\r\n    this.setState({\r\n      isOpenReversal: true,\r\n    });\r\n  };\r\n\r\n  handleReverse = (item, index) => {\r\n    let { tstaffList } = this.state;\r\n    tstaffList[index][\"rev\"] = true;\r\n    this.setState({\r\n      tstaffList,\r\n    });\r\n    // onClick={this.handleReversalTreatment}\r\n  };\r\n  changeIndexSession = (index, value) => {\r\n    let { tstaffList } = this.state;\r\n    tstaffList[index][\"session\"] = value;\r\n    this.setState({\r\n      tstaffList,\r\n    });\r\n    // onClick={this.handleReversalTreatment}\r\n  };\r\n  toggle = tab => {\r\n    if (this.state.activeMenu !== tab) {\r\n      this.setState({\r\n        activeMenu: tab,\r\n      });\r\n    }\r\n  };\r\n  getServices = query => {\r\n    let {\r\n      page = this.state.page,\r\n      menuId = this.state.menuId,\r\n      rangeId = this.state.rangeId,\r\n    } = query;\r\n    this.props\r\n      .getCommonApi(\r\n        `servicestock/?Item_Deptid=${menuId}&page=${page}&Item_Rangeid=${rangeId}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          this.setState({ productCard: data, list: data.dataList });\r\n        }\r\n      });\r\n  };\r\n  getMenus = () => {\r\n    let { menuOption } = this.state;\r\n    menuOption = [];\r\n    console.log(\"sdfsdhfghjghj\", this.props);\r\n    this.props\r\n      .getCommonApi(`catalogitemdept/?Item_Dept=${`SERVICE`}`)\r\n      .then(res => {\r\n        // activeMenu = []\r\n        console.log(\"sdfsdhfghjghj ress\", res);\r\n        for (let key of res.data) {\r\n          menuOption.push({\r\n            value: key.id,\r\n            label: key.itm_desc,\r\n            code: key.itm_code,\r\n            seq: key.itm_seq,\r\n          });\r\n        }\r\n        this.setState({ menuOption });\r\n      });\r\n  };\r\n\r\n  getRange = () => {\r\n    let { rangeOption, menuId } = this.state;\r\n    rangeOption = [];\r\n\r\n    this.props\r\n      .getCommonApi(`catalogitemrange?Item_Deptid=${menuId}`)\r\n      .then(res => {\r\n        // activeMenu = []\r\n        for (let key of res.data) {\r\n          rangeOption.push({ value: key.id, label: key.itm_desc });\r\n        }\r\n        this.setState({ rangeOption });\r\n      });\r\n  };\r\n\r\n  handleExchangeClick = async (index, item) => {\r\n    if (item.sel) {\r\n      await this.setState({\r\n        ExchangeItem: [],\r\n      });\r\n      this.getMenus();\r\n      this.getRange();\r\n      this.getServices({});\r\n\r\n      await this.setState({\r\n        isOpenExchangeService: true,\r\n        ExchangeItem: item,\r\n      });\r\n      console.log(\r\n        this.state.ExchangeItem,\r\n        \"selected row of treatment done data - exchange item\"\r\n      );\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Select Staff should not be empty\",\r\n      });\r\n    }\r\n  };\r\n  handlePagination = async page => {\r\n    await this.setState({ page: page });\r\n    this.getServices({ page: page });\r\n  };\r\n  handleMenuChange = async ({ target: { value, name } }) => {\r\n    let menuId = Object.assign({}, this.state.menuId);\r\n    menuId = value;\r\n    await this.setState({ menuId });\r\n\r\n    this.getRange();\r\n\r\n    this.getServices({});\r\n  };\r\n\r\n  handleRangeChange = async ({ target: { value, name } }) => {\r\n    let rangeId = Object.assign({}, this.state.rangeId);\r\n    let rangeName = Object.assign({}, this.state.rangeName);\r\n    let { rangeOption } = this.state;\r\n    rangeId = value;\r\n\r\n    for (let key of rangeOption) {\r\n      if (key.value == value) {\r\n        rangeName = key.label;\r\n      }\r\n    }\r\n\r\n    await this.setState({\r\n      rangeId,\r\n      rangeName,\r\n    });\r\n    this.getServices({});\r\n  };\r\n\r\n  handleSelectedService = async data => {\r\n    let { ExchangeItem } = this.state;\r\n    await this.setState({\r\n      SelectedExchangeItem: data,\r\n    });\r\n    if (Number(data.item_price) > Number(ExchangeItem.unit_amount)) {\r\n      this.setState({ isHandleExchangeConfirmation: true });\r\n    } else {\r\n      this.handleExchangePostAction();\r\n    }\r\n  };\r\n\r\n  handleExchangePostAction = () => {\r\n    let { basicApptDetail } = this.props;\r\n    let { ExchangeItem, SelectedExchangeItem } = this.state;\r\n    let payload = [];\r\n    let obj = {\r\n      cust_noid: basicApptDetail.custId,\r\n      cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n      itemcodeid: SelectedExchangeItem.id,\r\n      price: ExchangeItem.unit_amount,\r\n      item_uom: null,\r\n      treatment_account: ExchangeItem.TreatmentAccountid,\r\n      treatment: ExchangeItem.id,\r\n      ori_stockid: ExchangeItem.stockid,\r\n    };\r\n    payload.push(obj);\r\n    console.log(payload, \"exchange input\");\r\n    this.props\r\n      .getCommonApi(\r\n        `itemcart/Check/?cart_date=${dateFormat(\r\n          new Date(),\r\n          \"yyyy-mm-dd\"\r\n        )}&cust_noid=${basicApptDetail.custId}`\r\n      )\r\n      .then(res => {\r\n        if (res.data.length === 0) {\r\n          this.props\r\n            .commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload)\r\n            .then(res => {\r\n              console.log(res, \"result of exchnage final click\");\r\n              this.setState({\r\n                activeTab: \"treatment\",\r\n                isOpenExchangeService: false,\r\n              });\r\n              history.push(\"/admin/cart\");\r\n            });\r\n        } else {\r\n          this.props\r\n            .commonCreateApi(\r\n              `itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`,\r\n              payload\r\n            )\r\n            .then(res => {\r\n              // this.props.handleCartCreated()\r\n              this.setState({\r\n                activeTab: \"treatment\",\r\n                isOpenExchangeService: false,\r\n              });\r\n              history.push(\"/admin/cart\");\r\n            });\r\n        }\r\n      });\r\n  };\r\n  handleDialogExchangeConfirm = () => {\r\n    this.setState({\r\n      isHandleExchangeConfirmation: false,\r\n      SelectedExchangeItem: {},\r\n    });\r\n  };\r\n  render() {\r\n    let {\r\n      productCard = {},\r\n      list,\r\n      tstaffList = [],\r\n      selectedYear,\r\n      yearList,\r\n      isOpenTreatmentDone,\r\n      headerDetails,\r\n      tsStaff,\r\n      isOpenReversal,\r\n      treatmentIds,\r\n      activeMenu,\r\n      isOpenExchangeService,\r\n      menuOption,\r\n      menuId,\r\n      rangeOption,\r\n      rangeId,\r\n      isHandleExchangeConfirmation,\r\n      ExchangeItem,\r\n      SelectedExchangeItem,\r\n    } = this.state;\r\n    let localtStaffList = [...tstaffList];\r\n    let { basicApptDetail } = this.props;\r\n    let { dataList = [], meta = {} } = productCard;\r\n    let { pagination } = meta;\r\n    return (\r\n      <div className=\"treatmentDone-menu\">\r\n        <div className=\"row\">\r\n          <div className=\"col-10\">\r\n            <div className=\"beautesoft-navlink customer-detail mt-3\">\r\n              <div className=\"filled-tabs\">\r\n                <div className=\"tabs-block\">\r\n                  <Nav tabs>\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeMenu === \"treatmentdone\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"treatmentdone\");\r\n                        }}\r\n                      >\r\n                        Treatment Done\r\n                      </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeMenu === \"treatmenthistory\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"treatmenthistory\");\r\n                        }}\r\n                      >\r\n                        Treatment History\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <NormalButton\r\n              buttonClass={\"mx-2\"}\r\n              mainbg={true}\r\n              className=\"fs-15 clear-line\"\r\n              label=\"Back\"\r\n              outline={false}\r\n              onClick={() => history.push(`/admin/cart`)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"treatment-section ml-1 p-2 pr-0\">\r\n          <TabContent activeTab={this.state.activeMenu}>\r\n            <TabPane tabId=\"treatmentdone\">\r\n              {activeMenu === \"treatmentdone\" ? (\r\n                <div className=\"row treatment-done-new p-3\">\r\n                  <div className=\"col-10 header\">\r\n                    <p className=\"fs-18 font-700 mb-3 title\">\r\n                      Available Treatments\r\n                    </p>\r\n                    <div className=\"d-flex select-year\">\r\n                      <div className=\"pl-0 mb-2 name fs-16 py-2\">\r\n                        Select Year\r\n                      </div>\r\n                      <div className=\"input-group\">\r\n                        <NormalSelect\r\n                          // placeholder=\"Enter here\"\r\n                          options={yearList}\r\n                          value={selectedYear}\r\n                          name=\"selectedYear\"\r\n                          onChange={this.handleYearChange}\r\n                          className=\"selected-year mb-2 py-0\"\r\n                        />\r\n                      </div>\r\n                      <div className = \"d-flex ml-5\">\r\n                      <div >\r\n                      <h6>\r\n                      Customer Name : {this.props.basicApptDetail.custName}\r\n                      </h6>\r\n                      <h6>\r\n                      Reference : {this.props.basicApptDetail.custRefer}\r\n                      </h6>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  <div className={`col-12 cart-item`}>\r\n                    <div className={`item-list`}>\r\n                      <div className=\"table\">\r\n                        <TableWrapper\r\n                          headerDetails={headerDetails}\r\n                          queryHandler={this.handlePagination}\r\n                          // pageMeta={pageMeta}\r\n                          // isEmpty={tstaffList.length === 0 ? true:false}\r\n                        >\r\n                          {tstaffList.length > 0\r\n                            ? tstaffList.map((item, index) => {\r\n                                return (\r\n                                  <tr key={index}>\r\n                                    <td className=\"position-relative status-type\">\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.treatment_date}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.course}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.transacno_ref}\r\n                                      </div>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.unit_amount}\r\n                                      </div>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.treatment_code}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.td}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.rev}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.open}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                                        {item.ar}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        style={{ width: \"50px\" }}\r\n                                        value={item.session}\r\n                                        onChange={e =>\r\n                                          this.changeIndexSession(\r\n                                            index,\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                        disabled={\r\n                                          item.session_flag &&\r\n                                          item.session !== Number(0)\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td style={{ width: \"50px\" }}>\r\n                                      <button\r\n                                        className=\"btnRedeem\"\r\n                                        onClick={() =>\r\n                                          this.handleAddstaff(item)\r\n                                        }\r\n                                      >\r\n                                        Select\r\n                                      </button>\r\n                                    </td>\r\n                                    <td style={{ width: \"50px\" }}>\r\n                                      {item.iscurrentloggedinsalon && (\r\n                                        <button\r\n                                          className=\"btnReversal\"\r\n                                          onClick={() =>\r\n                                            this.handleReversalTreatment(item)\r\n                                          }\r\n                                        >\r\n                                          Select\r\n                                        </button>\r\n                                      )}\r\n                                    </td>\r\n                                    <td style={{ width: \"50px\" }}>\r\n                                      {item.exchange_flag && (\r\n                                        <button\r\n                                          className=\"btnExchange\"\r\n                                          label=\"Exchange\"\r\n                                          onClick={() =>\r\n                                            this.handleExchangeClick(\r\n                                              index,\r\n                                              item\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          Select\r\n                                        </button>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })\r\n                            : null}\r\n                        </TableWrapper>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 pt-4 action-bar\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-7 d-flex\">\r\n                        {/* <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-line\"\r\n                                label=\"Clear Line\"\r\n                                outline={false}\r\n                                onClick={this.handleClearLine}\r\n                            />\r\n                            <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-all\"\r\n                                label=\"Clear All\"\r\n                                outline={false}\r\n                                onClick={this.handleClearAll}\r\n                            /> */}\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 text-right\"></div>\r\n                          <div className=\"col-6 text-right\">\r\n                            <NormalButton\r\n                              buttonClass={\"mx-2\"}\r\n                              mainbg={true}\r\n                              className=\" fs-15 confirm\"\r\n                              label=\"Confirm Treatment Done\"\r\n                              outline={false}\r\n                              onClick={() => this.handleCartCreated()}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <NormalModal\r\n                    className={\"transaction-done-exchange\"}\r\n                    style={{ minWidth: \"70%\" }}\r\n                    modal={isOpenExchangeService}\r\n                    handleModal={this.handleDialog}\r\n                  >\r\n                    <img\r\n                      onClick={this.handleDialog}\r\n                      className=\"close cursor-pointer\"\r\n                      src={closeIcon}\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"d-flex mb-2\">\r\n                      <div className=\"col-md-3 input-group pl-2 range-filter\">\r\n                        <NormalSelect\r\n                          // placeholder=\"Enter here\"\r\n                          options={menuOption}\r\n                          value={menuId}\r\n                          name={\"menuId\"}\r\n                          onChange={this.handleMenuChange}\r\n                          className=\"py-0\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4 input-group range-filter\">\r\n                        <NormalSelect\r\n                          // placeholder=\"Enter here\"\r\n                          options={rangeOption}\r\n                          value={rangeId}\r\n                          name={\"rangeId\"}\r\n                          onChange={this.handleRangeChange}\r\n                          className=\"py-0\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      {console.log(list, \"card list\")}\r\n                      <div className=\"services m-0 row\">\r\n                        {list.length > 0\r\n                          ? list.map((data, index) => {\r\n                              return (\r\n                                <div\r\n                                  className=\"col-md-2 col-12 fs-12 p-2 cursor-pointer\"\r\n                                  key={data.id}\r\n                                  onClick={() =>\r\n                                    this.handleSelectedService(data)\r\n                                  }\r\n                                >\r\n                                  <div className=\"service-tab p-0\">\r\n                                    <div className=\"service-ttl px-2 font-700 fs-11\">\r\n                                      {data.item_desc}\r\n                                    </div>\r\n                                    <div className=\"price px-2 py-1\">\r\n                                      <div className=\"non-retail\">\r\n                                        <span className=\"text-orenge font-700\">\r\n                                          $\r\n                                        </span>\r\n                                        <span className=\"text-orenge font-700\">\r\n                                          {data.item_price\r\n                                            ? Number(data.item_price).toFixed(2)\r\n                                            : \"\"}\r\n                                        </span>\r\n\r\n                                        <span className=\"foc-icon\">\r\n                                          <svg\r\n                                            width=\"32\"\r\n                                            height=\"32\"\r\n                                            className=\"cursor-pointer\"\r\n                                            viewBox=\"0 0 32 32\"\r\n                                            fill=\"none\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                          >\r\n                                            <circle\r\n                                              cx=\"16\"\r\n                                              cy=\"16\"\r\n                                              r=\"15.5\"\r\n                                              fill=\"rgba(60, 64, 135, 0.31)\"\r\n                                              stroke=\"#3C4087\"\r\n                                            />\r\n                                            <path\r\n                                              d=\"M3.996 11.456H9.42V12.476H5.22V15.152H9.18V16.172H5.22V20H3.996V11.456ZM14.3243 20.096C13.5163 20.096 12.8123 19.92 12.2123 19.568C11.6203 19.208 11.1603 18.7 10.8323 18.044C10.5123 17.388 10.3523 16.616 10.3523 15.728C10.3523 14.832 10.5123 14.056 10.8323 13.4C11.1523 12.744 11.6123 12.24 12.2123 11.888C12.8123 11.536 13.5163 11.36 14.3243 11.36C15.1403 11.36 15.8443 11.536 16.4362 11.888C17.0363 12.24 17.4963 12.744 17.8163 13.4C18.1363 14.056 18.2963 14.828 18.2963 15.716C18.2963 16.612 18.1363 17.388 17.8163 18.044C17.4963 18.7 17.0363 19.208 16.4362 19.568C15.8363 19.92 15.1323 20.096 14.3243 20.096ZM14.3243 19.088C15.1803 19.088 15.8443 18.796 16.3163 18.212C16.7963 17.628 17.0363 16.796 17.0363 15.716C17.0363 14.644 16.7963 13.82 16.3163 13.244C15.8443 12.66 15.1803 12.368 14.3243 12.368C13.4683 12.368 12.8043 12.66 12.3323 13.244C11.8603 13.82 11.6243 14.644 11.6243 15.716C11.6243 16.796 11.8603 17.628 12.3323 18.212C12.8123 18.796 13.4763 19.088 14.3243 19.088ZM23.7598 20.096C22.9358 20.096 22.2158 19.92 21.5998 19.568C20.9918 19.208 20.5238 18.7 20.1958 18.044C19.8678 17.388 19.7038 16.612 19.7038 15.716C19.7038 14.828 19.8678 14.056 20.1958 13.4C20.5238 12.744 20.9918 12.24 21.5998 11.888C22.2158 11.536 22.9358 11.36 23.7598 11.36C24.3438 11.36 24.8838 11.452 25.3798 11.636C25.8838 11.812 26.3078 12.072 26.6518 12.416L26.2198 13.328C25.8198 13 25.4238 12.764 25.0318 12.62C24.6478 12.468 24.2278 12.392 23.7718 12.392C22.8838 12.392 22.1958 12.68 21.7078 13.256C21.2278 13.832 20.9878 14.652 20.9878 15.716C20.9878 16.788 21.2278 17.616 21.7078 18.2C22.1958 18.776 22.8838 19.064 23.7718 19.064C24.2278 19.064 24.6478 18.992 25.0318 18.848C25.4238 18.696 25.8198 18.456 26.2198 18.128L26.6518 19.04C26.3078 19.384 25.8838 19.648 25.3798 19.832C24.8838 20.008 24.3438 20.096 23.7598 20.096Z\"\r\n                                              fill=\"#3C4087\"\r\n                                            />\r\n                                          </svg>\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"images\">\r\n                                      <img src={data.Stock_PIC} alt=\"\" />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          : \"\"}\r\n                        {pagination && (\r\n                          <Pagination\r\n                            handlePagination={this.handlePagination}\r\n                            pageMeta={pagination}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </NormalModal>\r\n                  <NormalModal\r\n                    className={\"transaction-done-reversal\"}\r\n                    style={{ minWidth: \"75%\" }}\r\n                    modal={isOpenReversal}\r\n                    handleModal={this.handleDialog}\r\n                  >\r\n                    <img\r\n                      onClick={this.handleDialog}\r\n                      className=\"close cursor-pointer\"\r\n                      src={closeIcon}\r\n                      alt=\"\"\r\n                    />\r\n                    <Reversal\r\n                      id={basicApptDetail.custId}\r\n                      treatmentId={tsStaff.id}\r\n                      reversalId={treatmentIds}\r\n                      cartId={this.props.id}\r\n                      handleModal={this.handleDialog}\r\n                    ></Reversal>\r\n                  </NormalModal>\r\n                  <NormalModal\r\n                    className={\"transaction-done-modal\"}\r\n                    style={{ minWidth: \"60%\" }}\r\n                    modal={isOpenTreatmentDone}\r\n                    handleModal={this.handleDialog}\r\n                  >\r\n                    <img\r\n                      onClick={this.handleDialog}\r\n                      className=\"close cursor-pointer\"\r\n                      src={closeIcon}\r\n                      alt=\"\"\r\n                    />\r\n                    <SelectStaff\r\n                      id={this.state.selectedItemTreatmentIds}\r\n                      //id={tsStaff.id}\r\n                      session={this.state.selectedSession}\r\n                      cartId={basicApptDetail.cartId}\r\n                      handleModal={this.handleDialog}\r\n                    ></SelectStaff>\r\n                  </NormalModal>\r\n                  <NormalModal\r\n                    className={\"transaction-done-reversal\"}\r\n                    style={{ minWidth: \"432px\" }}\r\n                    modal={isHandleExchangeConfirmation}\r\n                    handleModal={this.handleDialogExchangeConfirm}\r\n                  >\r\n                    <img\r\n                      onClick={this.handleDialogExchangeConfirm}\r\n                      className=\"close cursor-pointer\"\r\n                      src={closeIcon}\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"row\">\r\n                      <div className=\"d-flex flex-wrap\">\r\n                        <div className=\"col-12\">\r\n                          <h4>Confirmation</h4>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                          <p>\r\n                            Service Price : ${SelectedExchangeItem.item_price}\r\n                            &nbsp;larger than\r\n                          </p>\r\n                          <p>\r\n                            Previous Service Price : ${ExchangeItem.unit_amount}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                          <p>Are you sure want to continue ?</p>\r\n                        </div>\r\n                        <div className=\"row p-3\">\r\n                          <div className=\"col-6\">\r\n                            <NormalButton\r\n                              label=\"Confirm\"\r\n                              mainbg={true}\r\n                              name=\"Exconfirm\"\r\n                              className={`w-100 col-12`}\r\n                              onClick={this.handleExchangePostAction}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <NormalButton\r\n                              label=\"Cancel\"\r\n                              mainbg={true}\r\n                              name=\"ExCancel\"\r\n                              className={`w-100 col-12`}\r\n                              onClick={this.handleDialogExchangeConfirm}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </NormalModal>\r\n                </div>\r\n              ) : null}\r\n            </TabPane>\r\n            <TabPane tabId=\"treatmenthistory\">\r\n              {activeMenu === \"treatmenthistory\" ? (\r\n                <div className=\"row treatment-done-new p-3\">\r\n                  <div className=\"table\">\r\n                    <TreatmentHistoryCart\r\n                      customerNumber={basicApptDetail.custId}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selected_cstomer: state.common.selected_cstomer,\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      // getCustomer,\r\n      getCommonApi,\r\n      updateForm,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n      commonDeleteApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TreatmentDone = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TreatmentDoneClass);\r\n"]},"metadata":{},"sourceType":"module"}