{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Salons\\\\CreateSalon\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { NormalInput, NormalSelect, NormalButton, NormalDate, NormalMultiSelect, NormalDateTime } from \"component/common\";\nimport { CreateSaloon, updateSaloon } from \"redux/actions/saloon\";\nimport { getBranch, getSkills, getCommonApi, createBranch } from \"redux/actions/common\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { DragFileUpload } from \"../../../common\";\nimport { displayImg, dateFormat } from \"service/helperFunctions\";\nimport { getSaloon } from \"redux/actions/saloon\";\nexport class CreateSalonClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        salonName: \"\",\n        openingDate: \"\",\n        branch: \"\",\n        services: \"\",\n        contactNumber: \"\",\n        email: \"\",\n        images: \"\",\n        description: \"\",\n        itemsite_code: \"1\"\n      },\n      imageArray: [],\n      locationOption: [],\n      skillsOptions: [],\n      selectedSkills: []\n    };\n\n    this.getSaloonDetail = async () => {\n      this.props.getBranch(`${this.props.match.params.id}/`).then(res => {\n        this.setDataFromStore();\n        this.setSkillsDetail();\n      });\n    };\n\n    this.setSkillsDetail = () => {\n      let {\n        selectedSkills,\n        formFields\n      } = this.state;\n      let {\n        skillsList\n      } = this.props;\n\n      for (let key of skillsList) {\n        for (let value of formFields.services) {\n          if (key.id === value) {\n            selectedSkills.push({\n              value: key.id,\n              label: key.item_desc\n            });\n          }\n        }\n      }\n\n      console.log(selectedSkills, \"kuyiusdfsd\", skillsList);\n      this.setState({\n        selectedSkills\n      });\n    };\n\n    this.setDataFromStore = () => {\n      let {\n        saloonDetail\n      } = this.props;\n      let {\n        formFields\n      } = this.state;\n      formFields[\"salonName\"] = saloonDetail.salon_name;\n      formFields[\"openingDate\"] = new Date(saloonDetail.itemsite_date);\n      formFields[\"branch\"] = saloonDetail.Site_Groupid; // formFields['services'] = saloonDetail.services;\n\n      formFields[\"contactNumber\"] = saloonDetail.itemsite_phone1;\n      formFields[\"email\"] = saloonDetail.ItemSite_Email;\n      formFields[\"description\"] = saloonDetail.itemsite_desc;\n      formFields[\"itemsite_code\"] = saloonDetail.itemsite_code;\n      this.setState({\n        formFields\n      });\n      console.log(\"ufjdfjssd saloon\", saloonDetail, formFields);\n    };\n\n    this.getDatafromStore = type => {\n      let {\n        branchList,\n        skillsList\n      } = this.props;\n      let {\n        locationOption,\n        skillsOptions\n      } = this.state;\n      console.log(\"fdghfdjyujf\", this.props);\n\n      if (type === \"branch\") {\n        for (let key of branchList) {\n          locationOption.push({\n            label: key.description,\n            value: key.id\n          });\n        }\n      } else if (type === \"skills\") {\n        for (let key of skillsList) {\n          skillsOptions.push({\n            value: key.id,\n            label: key.item_desc\n          });\n        }\n      }\n\n      this.setState({\n        locationOption\n      });\n      console.log(\"fdghfdjyujf\", this.props);\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleInput = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value === true ? 1 : value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleImageUpload = file => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"images\"] = file;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.removepostImage = (e, name) => {\n      let {\n        fileArray\n      } = this.state.formFields;\n      let index = fileArray.indexOf(name);\n\n      if (index === 0) {\n        fileArray.shift();\n      } else {\n        fileArray.pop();\n      }\n\n      this.setState({\n        fileArray\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.validator.allValid()) {\n        let {\n          formFields\n        } = this.state;\n        const formData = new FormData();\n        formData.append(\"images\", formFields.images);\n        formData.append(\"itemsite_desc\", formFields.salonName);\n        formData.append(\"Site_Groupid\", formFields.branch);\n        formData.append(\"skills_list\", formFields.services);\n        formData.append(\"itemsite_phone1\", formFields.contactNumber);\n        formData.append(\"itemsite_date\", dateFormat(formFields.openingDate));\n        formData.append(\"itemsite_email\", formFields.email);\n        formData.append(\"itemsite_code\", formFields.itemsite_code);\n        formData.append(\"description\", formFields.description);\n\n        if (this.props.match.params.id) {\n          this.props.updateSaloon(`${this.props.match.params.id}/`, formData).then(res => {\n            console.log(res);\n\n            if (res.status === 201) {\n              this.props.history.push(`/admin/salons`);\n            }\n          });\n        } else {\n          this.props.createBranch(formData).then(res => {\n            console.log(res);\n\n            if (res.status === 201) {\n              this.props.history.push(`/admin/salons`);\n            }\n          });\n        }\n      } else {\n        this.validator.showMessages();\n      }\n    };\n\n    this.handleMultiSelect = data => {\n      let {\n        formFields\n      } = this.state;\n      let list = [];\n\n      for (let key of data) {\n        list.push(key.value);\n      }\n\n      formFields[\"services\"] = list;\n      this.setState({\n        formFields\n      });\n      console.log(formFields, \"oyokkjk\");\n    };\n\n    this.handleDatePick = async (name, value) => {\n      console.log(name, value, \"sdfgdfhfshg\", dateFormat(new Date())); // dateFormat(new Date())\n\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value; // formFields[name] = value;\n\n      await this.setState({\n        formFields\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      validators: {\n        contactNumber: {\n          message: \"The :attribute must be a valid format.\",\n          rule: (val, params, validator) => {\n            return validator.helpers.testRegex(val, /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/) && params.indexOf(val) === -1;\n          },\n          messageReplace: (message, params) => message.replace(\"\", this.helpers.toSentence(params)),\n          required: true\n        }\n      },\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    }); // branch dropdown option api\n\n    this.props.getCommonApi(\"salon/\").then(res => {\n      let {\n        locationOption\n      } = this.state;\n\n      for (let key of res.data) {\n        locationOption.push({\n          value: key.id,\n          label: key.description\n        });\n      }\n\n      this.setState({\n        locationOption\n      });\n    }); // services dropdown api\n\n    this.props.getSkills(\"\").then(() => {\n      this.getDatafromStore(\"skills\");\n      this.setSkillsDetail();\n    }); // while salon edit this api will call for salon detail\n\n    if (this.props.match.params.id) {\n      this.getSaloonDetail();\n    }\n  } // saloon api for saloon\n\n\n  render() {\n    let {\n      formFields,\n      locationOption,\n      skillsOptions,\n      selectedSkills\n    } = this.state;\n    let {\n      salonName,\n      openingDate,\n      branch,\n      services,\n      contactNumber,\n      email,\n      images,\n      description\n    } = formFields;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-4 create-salon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, \"Add New Salons\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"salon-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, \"Salon Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: salonName,\n      name: \"salonName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"salonName\", salonName, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, \"Opening Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      inputcol: \"p-0 inTime\" // value={outTime}\n      ,\n      value: openingDate // label=\"inTime\"\n      ,\n      name: \"openingDate\",\n      className: \"dob-pick\",\n      showYearDropdown: true,\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"openingDate\", openingDate, \"required\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, \"Branch / Location\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: locationOption,\n      value: branch,\n      name: \"branch\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"branch\", branch, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    }, !this.props.match.params.id ? skillsOptions.length > 0 ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      name: \"skills\",\n      className: `staff-skills-select ${services !== \"\" ? \"overflow-y-set\" : \"\"}`,\n      options: skillsOptions,\n      handleMultiSelect: this.handleMultiSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 23\n      }\n    }) : \"\" : skillsOptions.length > 0 && selectedSkills.length > 0 ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      name: \"skills\",\n      value: selectedSkills.length > 0 ? selectedSkills : [],\n      className: `staff-skills-select ${services !== \"\" ? \"overflow-y-set\" : \"\"}`,\n      options: skillsOptions,\n      handleMultiSelect: this.handleMultiSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }) : \"\"), this.validator.message(\"services\", services, \"required\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: contactNumber,\n      name: \"contactNumber\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"contactNumber\", contactNumber, \"required|min:8|max:8\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: email,\n      name: \"email\",\n      type: \"email\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"email\", email, \"required|email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: description,\n      name: \"description\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"salonName\", salonName, \"required\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, \"Upload Salon Images\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DragFileUpload, {\n      className: `file-uploader size-sm ${images ? \"\" : \"no-img\"}`,\n      label: \"Upload Thumbnail\",\n      handleFileUpload: this.handleImageUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 15\n      }\n    }, images ? /*#__PURE__*/React.createElement(\"img\", {\n      src: displayImg(images),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploader-content text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }, \"Upload Image\"))), !this.props.match.params.id ? this.validator.message(\"Emp_PIC\", images, \"required\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border-bottom-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-5 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/admin/salons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Cancel\",\n      normal: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      onClick: () => this.handleSubmit(),\n      label: \"Save\",\n      mainbg: true,\n      className: \"mr-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  branchList: state.common.branchList,\n  skillsList: state.common.skillsList,\n  saloonDetail: state.saloon.saloonDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    CreateSaloon,\n    getBranch,\n    createBranch,\n    getSkills,\n    getSaloon,\n    updateSaloon,\n    getCommonApi\n  }, dispatch);\n};\n\nexport const CreateSalon = connect(mapStateToProps, mapDispatchToProps)(CreateSalonClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Salons/CreateSalon/index.js"],"names":["React","Component","Link","SimpleReactValidator","NormalInput","NormalSelect","NormalButton","NormalDate","NormalMultiSelect","NormalDateTime","CreateSaloon","updateSaloon","getBranch","getSkills","getCommonApi","createBranch","connect","bindActionCreators","DragFileUpload","displayImg","dateFormat","getSaloon","CreateSalonClass","state","formFields","salonName","openingDate","branch","services","contactNumber","email","images","description","itemsite_code","imageArray","locationOption","skillsOptions","selectedSkills","getSaloonDetail","props","match","params","id","then","res","setDataFromStore","setSkillsDetail","skillsList","key","value","push","label","item_desc","console","log","setState","saloonDetail","salon_name","Date","itemsite_date","Site_Groupid","itemsite_phone1","ItemSite_Email","itemsite_desc","getDatafromStore","type","branchList","handleChange","target","name","Object","assign","handleInput","handleImageUpload","file","removepostImage","e","fileArray","index","indexOf","shift","pop","handleSubmit","validator","allValid","formData","FormData","append","status","history","showMessages","handleMultiSelect","data","list","handleDatePick","componentWillMount","validators","message","rule","val","helpers","testRegex","messageReplace","replace","toSentence","required","element","autoForceUpdate","render","length","mapStateToProps","common","saloon","mapDispatchToProps","dispatch","CreateSalon"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {\r\n  NormalInput,\r\n  NormalSelect,\r\n  NormalButton,\r\n  NormalDate,\r\n  NormalMultiSelect,\r\n  NormalDateTime,\r\n} from \"component/common\";\r\nimport { CreateSaloon, updateSaloon } from \"redux/actions/saloon\";\r\nimport {\r\n  getBranch,\r\n  getSkills,\r\n  getCommonApi,\r\n  createBranch,\r\n} from \"redux/actions/common\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { DragFileUpload } from \"../../../common\";\r\nimport { displayImg, dateFormat } from \"service/helperFunctions\";\r\nimport { getSaloon } from \"redux/actions/saloon\";\r\n\r\nexport class CreateSalonClass extends Component {\r\n  state = {\r\n    formFields: {\r\n      salonName: \"\",\r\n      openingDate: \"\",\r\n      branch: \"\",\r\n      services: \"\",\r\n      contactNumber: \"\",\r\n      email: \"\",\r\n      images: \"\",\r\n      description: \"\",\r\n      itemsite_code: \"1\",\r\n    },\r\n    imageArray: [],\r\n    locationOption: [],\r\n    skillsOptions: [],\r\n    selectedSkills: [],\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      validators: {\r\n        contactNumber: {\r\n          message: \"The :attribute must be a valid format.\",\r\n          rule: (val, params, validator) => {\r\n            return (\r\n              validator.helpers.testRegex(\r\n                val,\r\n                /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\r\n              ) && params.indexOf(val) === -1\r\n            );\r\n          },\r\n          messageReplace: (message, params) =>\r\n            message.replace(\"\", this.helpers.toSentence(params)),\r\n          required: true,\r\n        },\r\n      },\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n\r\n    // branch dropdown option api\r\n    this.props.getCommonApi(\"salon/\").then(res => {\r\n      let { locationOption } = this.state;\r\n      for (let key of res.data) {\r\n        locationOption.push({ value: key.id, label: key.description });\r\n      }\r\n      this.setState({ locationOption });\r\n    });\r\n\r\n    // services dropdown api\r\n    this.props.getSkills(\"\").then(() => {\r\n      this.getDatafromStore(\"skills\");\r\n      this.setSkillsDetail();\r\n    });\r\n\r\n    // while salon edit this api will call for salon detail\r\n    if (this.props.match.params.id) {\r\n      this.getSaloonDetail();\r\n    }\r\n  }\r\n\r\n  // saloon api for saloon\r\n  getSaloonDetail = async () => {\r\n    this.props.getBranch(`${this.props.match.params.id}/`).then(res => {\r\n      this.setDataFromStore();\r\n      this.setSkillsDetail();\r\n    });\r\n  };\r\n\r\n  // get skills dropdown data from api\r\n  setSkillsDetail = () => {\r\n    let { selectedSkills, formFields } = this.state;\r\n    let { skillsList } = this.props;\r\n    for (let key of skillsList) {\r\n      for (let value of formFields.services) {\r\n        if (key.id === value) {\r\n          selectedSkills.push({ value: key.id, label: key.item_desc });\r\n        }\r\n      }\r\n    }\r\n    console.log(selectedSkills, \"kuyiusdfsd\", skillsList);\r\n\r\n    this.setState({ selectedSkills });\r\n  };\r\n\r\n  // set data from response to formfield while Edit option\r\n  setDataFromStore = () => {\r\n    let { saloonDetail } = this.props;\r\n    let { formFields } = this.state;\r\n    formFields[\"salonName\"] = saloonDetail.salon_name;\r\n    formFields[\"openingDate\"] = new Date(saloonDetail.itemsite_date);\r\n    formFields[\"branch\"] = saloonDetail.Site_Groupid;\r\n    // formFields['services'] = saloonDetail.services;\r\n    formFields[\"contactNumber\"] = saloonDetail.itemsite_phone1;\r\n    formFields[\"email\"] = saloonDetail.ItemSite_Email;\r\n    formFields[\"description\"] = saloonDetail.itemsite_desc;\r\n    formFields[\"itemsite_code\"] = saloonDetail.itemsite_code;\r\n    this.setState({ formFields });\r\n    console.log(\"ufjdfjssd saloon\", saloonDetail, formFields);\r\n  };\r\n\r\n  // common dropdown options data from api\r\n  getDatafromStore = type => {\r\n    let { branchList, skillsList } = this.props;\r\n    let { locationOption, skillsOptions } = this.state;\r\n    console.log(\"fdghfdjyujf\", this.props);\r\n    if (type === \"branch\") {\r\n      for (let key of branchList) {\r\n        locationOption.push({ label: key.description, value: key.id });\r\n      }\r\n    } else if (type === \"skills\") {\r\n      for (let key of skillsList) {\r\n        skillsOptions.push({ value: key.id, label: key.item_desc });\r\n      }\r\n    }\r\n    this.setState({\r\n      locationOption,\r\n    });\r\n    console.log(\"fdghfdjyujf\", this.props);\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  handleInput = ({ target: { name, value } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n    formFields[name] = value === true ? 1 : value;\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  // select image to formfield\r\n  handleImageUpload = file => {\r\n    let { formFields } = this.state;\r\n    formFields[\"images\"] = file;\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  // remove image form selected form\r\n  removepostImage = (e, name) => {\r\n    let { fileArray } = this.state.formFields;\r\n    let index = fileArray.indexOf(name);\r\n    if (index === 0) {\r\n      fileArray.shift();\r\n    } else {\r\n      fileArray.pop();\r\n    }\r\n    this.setState({\r\n      fileArray,\r\n    });\r\n  };\r\n\r\n  // submit to api for create and update\r\n  handleSubmit = () => {\r\n    if (this.validator.allValid()) {\r\n      let { formFields } = this.state;\r\n      const formData = new FormData();\r\n      formData.append(\"images\", formFields.images);\r\n      formData.append(\"itemsite_desc\", formFields.salonName);\r\n      formData.append(\"Site_Groupid\", formFields.branch);\r\n      formData.append(\"skills_list\", formFields.services);\r\n      formData.append(\"itemsite_phone1\", formFields.contactNumber);\r\n      formData.append(\"itemsite_date\", dateFormat(formFields.openingDate));\r\n      formData.append(\"itemsite_email\", formFields.email);\r\n      formData.append(\"itemsite_code\", formFields.itemsite_code);\r\n      formData.append(\"description\", formFields.description);\r\n      if (this.props.match.params.id) {\r\n        this.props\r\n          .updateSaloon(`${this.props.match.params.id}/`, formData)\r\n          .then(res => {\r\n            console.log(res);\r\n            if (res.status === 201) {\r\n              this.props.history.push(`/admin/salons`);\r\n            }\r\n          });\r\n      } else {\r\n        this.props.createBranch(formData).then(res => {\r\n          console.log(res);\r\n          if (res.status === 201) {\r\n            this.props.history.push(`/admin/salons`);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  };\r\n\r\n  handleMultiSelect = data => {\r\n    let { formFields } = this.state;\r\n    let list = [];\r\n    for (let key of data) {\r\n      list.push(key.value);\r\n    }\r\n    formFields[\"services\"] = list;\r\n    this.setState({ formFields });\r\n    console.log(formFields, \"oyokkjk\");\r\n  };\r\n\r\n  handleDatePick = async (name, value) => {\r\n    console.log(name, value, \"sdfgdfhfshg\", dateFormat(new Date()));\r\n    // dateFormat(new Date())\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n    // formFields[name] = value;\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      formFields,\r\n      locationOption,\r\n      skillsOptions,\r\n      selectedSkills,\r\n    } = this.state;\r\n\r\n    let {\r\n      salonName,\r\n      openingDate,\r\n      branch,\r\n      services,\r\n      contactNumber,\r\n      email,\r\n      images,\r\n      description,\r\n    } = formFields;\r\n    return (\r\n      <div className=\"p-4 create-salon\">\r\n        {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Salon</p> */}\r\n        <h2>Add New Salons</h2>\r\n        <div className=\"salon-detail\">\r\n          <div className=\"form-group mb-4 pb-2\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                  Salon Name\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={salonName}\r\n                    name=\"salonName\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\"salonName\", salonName, \"required\")}\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                  Opening Date\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  {/* <NormalDate\r\n                                        value={openingDate}\r\n                                        name=\"openingDate\"\r\n                                        type=\"date\"\r\n                                        onChange={this.handleChange}\r\n                                    /> */}\r\n                  <NormalDateTime\r\n                    onChange={this.handleDatePick}\r\n                    inputcol=\"p-0 inTime\"\r\n                    // value={outTime}\r\n                    value={openingDate}\r\n                    // label=\"inTime\"\r\n                    name=\"openingDate\"\r\n                    className=\"dob-pick\"\r\n                    showYearDropdown={true}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                  />\r\n                </div>\r\n                {this.validator.message(\"openingDate\", openingDate, \"required\")}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group mb-4 pb-2\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                  Branch / Location\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalSelect\r\n                    options={locationOption}\r\n                    value={branch}\r\n                    name=\"branch\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\"branch\", branch, \"required\")}\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                  Services\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  {/* <NormalInput\r\n                                        placeholder=\"Enter here\"\r\n                                        value={services}\r\n                                        name=\"services\"\r\n                                        onChange={this.handleChange}\r\n                                    /> */}\r\n                  {/* {\r\n                                        skillsOptions.length > 0 ? <NormalMultiSelect name=\"skills\" className={`staff-skills-select ${services !== \"\" ? \"overflow-y-set\" : \"\"}`} options={skillsOptions} handleMultiSelect={this.handleMultiSelect}></NormalMultiSelect> : \"\"\r\n                                    } */}\r\n                  {!this.props.match.params.id ? (\r\n                    skillsOptions.length > 0 ? (\r\n                      <NormalMultiSelect\r\n                        name=\"skills\"\r\n                        className={`staff-skills-select ${\r\n                          services !== \"\" ? \"overflow-y-set\" : \"\"\r\n                        }`}\r\n                        options={skillsOptions}\r\n                        handleMultiSelect={this.handleMultiSelect}\r\n                      ></NormalMultiSelect>\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  ) : skillsOptions.length > 0 && selectedSkills.length > 0 ? (\r\n                    <NormalMultiSelect\r\n                      name=\"skills\"\r\n                      value={selectedSkills.length > 0 ? selectedSkills : []}\r\n                      className={`staff-skills-select ${\r\n                        services !== \"\" ? \"overflow-y-set\" : \"\"\r\n                      }`}\r\n                      options={skillsOptions}\r\n                      handleMultiSelect={this.handleMultiSelect}\r\n                    ></NormalMultiSelect>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                {this.validator.message(\"services\", services, \"required\")}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group mb-4 pb-2\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                  Contact Number\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={contactNumber}\r\n                    name=\"contactNumber\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"contactNumber\",\r\n                  contactNumber,\r\n                  \"required|min:8|max:8\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                  Email Address\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\"email\", email, \"required|email\")}\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n                  Description\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={description}\r\n                    name=\"description\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\"salonName\", salonName, \"required\")}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group mb-4 pb-2\">\r\n            <label className=\"text-left text-black common-label-text fs-17 pb-3\">\r\n              Upload Salon Images\r\n            </label>\r\n            <div className=\"col-md-12 p-0\">\r\n              <DragFileUpload\r\n                className={`file-uploader size-sm ${images ? \"\" : \"no-img\"}`}\r\n                label=\"Upload Thumbnail\"\r\n                handleFileUpload={this.handleImageUpload}\r\n              >\r\n                {images ? (\r\n                  <img src={displayImg(images)} alt=\"\" />\r\n                ) : (\r\n                  <div className=\"uploader-content text-center\">\r\n                    <span>Upload Image</span>\r\n                  </div>\r\n                )}\r\n              </DragFileUpload>\r\n\r\n              {!this.props.match.params.id\r\n                ? this.validator.message(\"Emp_PIC\", images, \"required\")\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"border-bottom-line\"></div>\r\n          <div className=\"pt-5 d-flex\">\r\n            <div className=\"col-2\">\r\n              <Link to=\"/admin/salons\">\r\n                <NormalButton\r\n                  label=\"Cancel\"\r\n                  normal={true}\r\n                  className=\"mr-2 col-12\"\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <NormalButton\r\n                onClick={() => this.handleSubmit()}\r\n                label=\"Save\"\r\n                mainbg={true}\r\n                className=\"mr-2 col-12\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  branchList: state.common.branchList,\r\n  skillsList: state.common.skillsList,\r\n  saloonDetail: state.saloon.saloonDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      CreateSaloon,\r\n      getBranch,\r\n      createBranch,\r\n      getSkills,\r\n      getSaloon,\r\n      updateSaloon,\r\n      getCommonApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const CreateSalon = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateSalonClass);\r\n"]},"metadata":{},"sourceType":"module"}