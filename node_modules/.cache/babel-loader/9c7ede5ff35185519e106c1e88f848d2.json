{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\n\nvar _common = require(\"../../../core/utils/common\");\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _position = require(\"../../../core/utils/position\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../../../core/component_registrator\"));\n\nvar _uiSchedulerWork_space = _interopRequireDefault(require(\"./ui.scheduler.work_space.indicator\"));\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nvar _uiScheduler = _interopRequireDefault(require(\"../ui.scheduler.table_creator\"));\n\nvar _uiSchedulerCurrent_time_shader = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader.horizontal\"));\n\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (\"undefined\" !== typeof Reflect && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) {\n        return;\n      }\n\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n\n    if (null === object) {\n      break;\n    }\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar tableCreator = _uiScheduler.default.tableCreator;\nvar TIMELINE_CLASS = \"dx-scheduler-timeline\";\nvar GROUP_TABLE_CLASS = \"dx-scheduler-group-table\";\nvar HORIZONTAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-horizontal-grouped\";\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\nvar HEADER_PANEL_WEEK_CELL_CLASS = \"dx-scheduler-header-panel-week-cell\";\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\nvar HORIZONTAL = \"horizontal\";\nvar DATE_TABLE_CELL_BORDER = 1;\nvar DATE_TABLE_HEADER_MARGIN = 10;\nvar toMs = _date.default.dateToMilliseconds;\n\nvar SchedulerTimeline = function (_SchedulerWorkSpace) {\n  _inherits(SchedulerTimeline, _SchedulerWorkSpace);\n\n  var _super = _createSuper(SchedulerTimeline);\n\n  function SchedulerTimeline() {\n    _classCallCheck(this, SchedulerTimeline);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SchedulerTimeline, [{\n    key: \"_init\",\n    value: function value() {\n      _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_init\", this).call(this);\n\n      this.$element().addClass(TIMELINE_CLASS);\n      this._$sidebarTable = (0, _renderer.default)(\"<div>\").addClass(GROUP_TABLE_CLASS);\n    }\n  }, {\n    key: \"_getCellFromNextRow\",\n    value: function value(direction, isMultiSelection) {\n      if (!isMultiSelection) {\n        return _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_getCellFromNextRow\", this).call(this, direction, isMultiSelection);\n      }\n\n      return this._$focusedCell;\n    }\n  }, {\n    key: \"_getDefaultGroupStrategy\",\n    value: function value() {\n      return \"vertical\";\n    }\n  }, {\n    key: \"_toggleGroupingDirectionClass\",\n    value: function value() {\n      this.$element().toggleClass(HORIZONTAL_GROUPED_WORKSPACE_CLASS, this._isHorizontalGroupedWorkSpace());\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function value() {\n      return (0, _extend.extend)(_get(_getPrototypeOf(SchedulerTimeline.prototype), \"_getDefaultOptions\", this).call(this), {\n        groupOrientation: \"vertical\"\n      });\n    }\n  }, {\n    key: \"_getRowCount\",\n    value: function value() {\n      return 1;\n    }\n  }, {\n    key: \"_getCellCount\",\n    value: function value() {\n      return this._getCellCountInDay() * this.option(\"intervalCount\");\n    }\n  }, {\n    key: \"getGroupTableWidth\",\n    value: function value() {\n      return this._$sidebarTable ? this._$sidebarTable.outerWidth() : 0;\n    }\n  }, {\n    key: \"_getTotalRowCount\",\n    value: function value(groupCount) {\n      if (this._isHorizontalGroupedWorkSpace()) {\n        return this._getRowCount();\n      } else {\n        groupCount = groupCount || 1;\n        return this._getRowCount() * groupCount;\n      }\n    }\n  }, {\n    key: \"_getDateForHeaderText\",\n    value: function value(index) {\n      var newFirstViewDate = _utils.default.getDateWithoutTimezoneChange(this._firstViewDate);\n\n      return this._getDateByIndexCore(newFirstViewDate, index);\n    }\n  }, {\n    key: \"_getDateByIndexCore\",\n    value: function value(date, index) {\n      var result = new Date(date);\n      var dayIndex = Math.floor(index / this._getCellCountInDay());\n      result.setTime(date.getTime() + this._calculateCellIndex(0, index) * this._getInterval() + dayIndex * this._getHiddenInterval());\n      return result;\n    }\n  }, {\n    key: \"_getDateByIndex\",\n    value: function value(index) {\n      var newFirstViewDate = _utils.default.getDateWithoutTimezoneChange(this._firstViewDate);\n\n      var result = this._getDateByIndexCore(newFirstViewDate, index);\n\n      if (_utils.default.isTimezoneChangeInDate(this._firstViewDate)) {\n        result.setDate(result.getDate() - 1);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getFormat\",\n    value: function value() {\n      return \"shorttime\";\n    }\n  }, {\n    key: \"_needApplyLastGroupCellClass\",\n    value: function value() {\n      return true;\n    }\n  }, {\n    key: \"_calculateHiddenInterval\",\n    value: function value(rowIndex, cellIndex) {\n      var dayIndex = Math.floor(cellIndex / this._getCellCountInDay());\n      return dayIndex * this._getHiddenInterval();\n    }\n  }, {\n    key: \"_getMillisecondsOffset\",\n    value: function value(rowIndex, cellIndex) {\n      cellIndex = this._calculateCellIndex(rowIndex, cellIndex);\n      return this._getInterval() * cellIndex + this._calculateHiddenInterval(rowIndex, cellIndex);\n    }\n  }, {\n    key: \"_createWorkSpaceElements\",\n    value: function value() {\n      this._createWorkSpaceScrollableElements();\n    }\n  }, {\n    key: \"_getWorkSpaceHeight\",\n    value: function value() {\n      if (this.option(\"crossScrollingEnabled\")) {\n        return (0, _position.getBoundingRect)(this._$dateTable.get(0)).height;\n      }\n\n      return (0, _position.getBoundingRect)(this.$element().get(0)).height;\n    }\n  }, {\n    key: \"_dateTableScrollableConfig\",\n    value: function value() {\n      var config = _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_dateTableScrollableConfig\", this).call(this);\n\n      var timelineConfig = {\n        direction: HORIZONTAL\n      };\n      return this.option(\"crossScrollingEnabled\") ? config : (0, _extend.extend)(config, timelineConfig);\n    }\n  }, {\n    key: \"_needCreateCrossScrolling\",\n    value: function value() {\n      return true;\n    }\n  }, {\n    key: \"_headerScrollableConfig\",\n    value: function value() {\n      var config = _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_headerScrollableConfig\", this).call(this);\n\n      return (0, _extend.extend)(config, {\n        scrollByContent: true\n      });\n    }\n  }, {\n    key: \"_renderTimePanel\",\n    value: function value() {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_renderAllDayPanel\",\n    value: function value() {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_getTableAllDay\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"_getDateHeaderTemplate\",\n    value: function value() {\n      return this.option(\"timeCellTemplate\");\n    }\n  }, {\n    key: \"_toggleAllDayVisibility\",\n    value: function value() {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_changeAllDayVisibility\",\n    value: function value() {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"supportAllDayRow\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"_getGroupHeaderContainer\",\n    value: function value() {\n      if (this._isHorizontalGroupedWorkSpace()) {\n        return this._$thead;\n      }\n\n      return this._$sidebarTable;\n    }\n  }, {\n    key: \"_insertAllDayRowsIntoDateTable\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"_createAllDayPanelElements\",\n    value: function value() {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_renderDateHeader\",\n    value: function value() {\n      var $headerRow = _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_renderDateHeader\", this).call(this);\n\n      if (this._needRenderWeekHeader()) {\n        var firstViewDate = new Date(this._firstViewDate);\n        var $cells = [];\n\n        var colspan = this._getCellCountInDay();\n\n        var cellTemplate = this.option(\"dateCellTemplate\");\n\n        for (var i = 0; i < this._getWeekDuration() * this.option(\"intervalCount\"); i++) {\n          var $th = (0, _renderer.default)(\"<th>\");\n\n          var text = this._formatWeekdayAndDay(firstViewDate);\n\n          if (cellTemplate) {\n            var templateOptions = {\n              model: {\n                text: text,\n                date: new Date(firstViewDate)\n              },\n              container: $th,\n              index: i\n            };\n            cellTemplate.render(templateOptions);\n          } else {\n            $th.text(text);\n          }\n\n          $th.addClass(HEADER_PANEL_CELL_CLASS).addClass(HEADER_PANEL_WEEK_CELL_CLASS).attr(\"colSpan\", colspan);\n          $cells.push($th);\n\n          this._incrementDate(firstViewDate);\n        }\n\n        var $row = (0, _renderer.default)(\"<tr>\").addClass(HEADER_ROW_CLASS).append($cells);\n        $headerRow.before($row);\n      }\n    }\n  }, {\n    key: \"_needRenderWeekHeader\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"_incrementDate\",\n    value: function value(date) {\n      date.setDate(date.getDate() + 1);\n    }\n  }, {\n    key: \"_getWeekDuration\",\n    value: function value() {\n      return 1;\n    }\n  }, {\n    key: \"_renderView\",\n    value: function value() {\n      this._setFirstViewDate();\n\n      var groupCellTemplates = this._renderGroupHeader();\n\n      this._renderDateHeader();\n\n      this._renderAllDayPanel();\n\n      this._renderTimePanel();\n\n      this._renderDateTable();\n\n      this._shader = new _uiSchedulerCurrent_time_shader.default(this);\n\n      this._updateGroupTableHeight();\n\n      this._$sidebarTable.appendTo(this._sidebarScrollable.$content());\n\n      this._applyCellTemplates(groupCellTemplates);\n    }\n  }, {\n    key: \"_setHorizontalGroupHeaderCellsHeight\",\n    value: function value() {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"getIndicationCellCount\",\n    value: function value() {\n      var timeDiff = this._getTimeDiff();\n\n      return this._calculateDurationInCells(timeDiff);\n    }\n  }, {\n    key: \"_getTimeDiff\",\n    value: function value() {\n      var today = this._getToday();\n\n      var date = this._getIndicationFirstViewDate();\n\n      return today.getTime() - date.getTime();\n    }\n  }, {\n    key: \"_calculateDurationInCells\",\n    value: function value(timeDiff) {\n      var today = this._getToday();\n\n      var differenceInDays = Math.floor(timeDiff / toMs(\"day\"));\n      var duration = (timeDiff - differenceInDays * toMs(\"day\") - this.option(\"startDayHour\") * toMs(\"hour\")) / this.getCellDuration();\n\n      if (today.getHours() > this.option(\"endDayHour\")) {\n        duration = this._getCellCountInDay();\n      }\n\n      if (duration < 0) {\n        duration = 0;\n      }\n\n      return differenceInDays * this._getCellCountInDay() + duration;\n    }\n  }, {\n    key: \"getIndicationWidth\",\n    value: function value() {\n      if (this.isGroupedByDate()) {\n        var cellCount = this.getIndicationCellCount();\n        var integerPart = Math.floor(cellCount);\n        var fractionPart = cellCount - integerPart;\n        return this.getCellWidth() * (integerPart * this._getGroupCount() + fractionPart);\n      } else {\n        return this.getIndicationCellCount() * this.getCellWidth();\n      }\n    }\n  }, {\n    key: \"_renderIndicator\",\n    value: function value(height, rtlOffset, $container, groupCount) {\n      var $indicator;\n      var width = this.getIndicationWidth();\n\n      if (\"vertical\" === this.option(\"groupOrientation\")) {\n        $indicator = this._createIndicator($container);\n        $indicator.height((0, _position.getBoundingRect)($container.get(0)).height);\n        $indicator.css(\"left\", rtlOffset ? rtlOffset - width : width);\n      } else {\n        for (var i = 0; i < groupCount; i++) {\n          var offset = this.isGroupedByDate() ? i * this.getCellWidth() : this._getCellCount() * this.getCellWidth() * i;\n          $indicator = this._createIndicator($container);\n          $indicator.height((0, _position.getBoundingRect)($container.get(0)).height);\n          $indicator.css(\"left\", rtlOffset ? rtlOffset - width - offset : width + offset);\n        }\n      }\n    }\n  }, {\n    key: \"_isVerticalShader\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"_isCurrentTimeHeaderCell\",\n    value: function value(headerIndex) {\n      var result = false;\n\n      if (this.isIndicationOnView()) {\n        var date = this._getDateByIndex(headerIndex);\n\n        var now = this._getToday();\n\n        date = new Date(date);\n\n        if (_date.default.sameDate(now, date)) {\n          var startCellDate = new Date(date);\n          var endCellDate = new Date(date);\n          endCellDate = endCellDate.setMilliseconds(date.getMilliseconds() + this.getCellDuration());\n          result = _date.default.dateInRange(now, startCellDate, endCellDate);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_cleanView\",\n    value: function value() {\n      _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_cleanView\", this).call(this);\n\n      this._$sidebarTable.empty();\n    }\n  }, {\n    key: \"_visibilityChanged\",\n    value: function value(visible) {\n      _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_visibilityChanged\", this).call(this, visible);\n    }\n  }, {\n    key: \"_setTableSizes\",\n    value: function value() {\n      var cellHeight = this.getCellHeight();\n\n      var minHeight = this._getWorkSpaceMinHeight();\n\n      var $groupCells = this._$sidebarTable.find(\"tr\");\n\n      var height = cellHeight * $groupCells.length;\n\n      if (height < minHeight) {\n        height = minHeight;\n      }\n\n      this._$sidebarTable.height(height);\n\n      this._$dateTable.height(height);\n\n      _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_setTableSizes\", this).call(this);\n    }\n  }, {\n    key: \"_getWorkSpaceMinHeight\",\n    value: function value() {\n      var minHeight = this._getWorkSpaceHeight();\n\n      var workspaceContainerHeight = this.$element().outerHeight(true) - this.getHeaderPanelHeight() - 2 * DATE_TABLE_CELL_BORDER - DATE_TABLE_HEADER_MARGIN;\n\n      if (minHeight < workspaceContainerHeight) {\n        minHeight = workspaceContainerHeight;\n      }\n\n      return minHeight;\n    }\n  }, {\n    key: \"_makeGroupRows\",\n    value: function value(groups, groupByDate) {\n      var tableCreatorStrategy = \"vertical\" === this.option(\"groupOrientation\") ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\n      return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\n        groupRowClass: this._getGroupRowClass(),\n        groupHeaderRowClass: this._getGroupRowClass(),\n        groupHeaderClass: this._getGroupHeaderClass.bind(this),\n        groupHeaderContentClass: this._getGroupHeaderContentClass()\n      }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getTotalRowCount(this._getGroupCount()), groupByDate);\n    }\n  }, {\n    key: \"_ensureGroupHeaderCellsHeight\",\n    value: function value(cellHeight) {\n      var minCellHeight = this._calculateMinCellHeight();\n\n      if (cellHeight < minCellHeight) {\n        return minCellHeight;\n      }\n\n      return cellHeight;\n    }\n  }, {\n    key: \"_calculateMinCellHeight\",\n    value: function value() {\n      var dateTable = this._getDateTable();\n\n      var dateTableRowSelector = \".\" + this._getDateTableRowClass();\n\n      return (0, _position.getBoundingRect)(dateTable).height / dateTable.find(dateTableRowSelector).length - 2 * DATE_TABLE_CELL_BORDER;\n    }\n  }, {\n    key: \"_getCellCoordinatesByIndex\",\n    value: function value(index) {\n      return {\n        cellIndex: index % this._getCellCount(),\n        rowIndex: 0\n      };\n    }\n  }, {\n    key: \"_getCellByCoordinates\",\n    value: function value(cellCoordinates, groupIndex) {\n      var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex);\n\n      return this._$dateTable.find(\"tr\").eq(indexes.rowIndex).find(\"td\").eq(indexes.cellIndex);\n    }\n  }, {\n    key: \"_getWorkSpaceWidth\",\n    value: function value() {\n      return this._$dateTable.outerWidth(true);\n    }\n  }, {\n    key: \"_getIndicationFirstViewDate\",\n    value: function value() {\n      return _date.default.trimTime(new Date(this._firstViewDate));\n    }\n  }, {\n    key: \"_getIntervalBetween\",\n    value: function value(currentDate, allDay) {\n      var startDayHour = this.option(\"startDayHour\");\n      var endDayHour = this.option(\"endDayHour\");\n      var firstViewDate = this.getStartViewDate();\n      var firstViewDateTime = firstViewDate.getTime();\n      var hiddenInterval = (24 - endDayHour + startDayHour) * toMs(\"hour\");\n\n      var timeZoneOffset = _date.default.getTimezonesDifference(firstViewDate, currentDate);\n\n      var apptStart = currentDate.getTime();\n      var fullInterval = apptStart - firstViewDateTime - timeZoneOffset;\n      var fullDays = Math.floor(fullInterval / toMs(\"day\"));\n      var tailDuration = fullInterval - fullDays * toMs(\"day\");\n      var tailDelta = 0;\n\n      var cellCount = this._getCellCountInDay() * (fullDays - this._getWeekendsCount(fullDays));\n\n      var gapBeforeAppt = apptStart - _date.default.trimTime(new Date(currentDate)).getTime();\n\n      var result = cellCount * this.option(\"hoursInterval\") * toMs(\"hour\");\n\n      if (!allDay) {\n        if (currentDate.getHours() < startDayHour) {\n          tailDelta = tailDuration - hiddenInterval + gapBeforeAppt;\n        } else {\n          if (currentDate.getHours() >= startDayHour && currentDate.getHours() < endDayHour) {\n            tailDelta = tailDuration;\n          } else {\n            if (currentDate.getHours() >= startDayHour && currentDate.getHours() >= endDayHour) {\n              tailDelta = tailDuration - (gapBeforeAppt - endDayHour * toMs(\"hour\"));\n            } else {\n              if (!fullDays) {\n                result = fullInterval;\n              }\n            }\n          }\n        }\n\n        result += tailDelta;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getWeekendsCount\",\n    value: function value() {\n      return 0;\n    }\n  }, {\n    key: \"getAllDayContainer\",\n    value: function value() {\n      return null;\n    }\n  }, {\n    key: \"getTimePanelWidth\",\n    value: function value() {\n      return 0;\n    }\n  }, {\n    key: \"getPositionShift\",\n    value: function value(timeShift) {\n      var positionShift = _get(_getPrototypeOf(SchedulerTimeline.prototype), \"getPositionShift\", this).call(this, timeShift);\n\n      var left = this.getCellWidth() * timeShift;\n\n      if (this.option(\"rtlEnabled\")) {\n        left *= -1;\n      }\n\n      left += positionShift.left;\n      return {\n        top: 0,\n        left: left,\n        cellPosition: left\n      };\n    }\n  }, {\n    key: \"getVisibleBounds\",\n    value: function value() {\n      var isRtl = this.option(\"rtlEnabled\");\n      var result = {};\n      var $scrollable = this.getScrollable().$element();\n      var cellWidth = this.getCellWidth();\n      var scrollableOffset = isRtl ? this.getScrollableOuterWidth() - this.getScrollableScrollLeft() : this.getScrollableScrollLeft();\n      var scrolledCellCount = scrollableOffset / cellWidth;\n      var visibleCellCount = $scrollable.width() / cellWidth;\n      var totalCellCount = isRtl ? scrolledCellCount - visibleCellCount : scrolledCellCount + visibleCellCount;\n\n      var leftDate = this._getDateByIndex(scrolledCellCount);\n\n      var rightDate = this._getDateByIndex(totalCellCount);\n\n      if (isRtl) {\n        leftDate = this._getDateByIndex(totalCellCount);\n        rightDate = this._getDateByIndex(scrolledCellCount);\n      }\n\n      result.left = {\n        hours: leftDate.getHours(),\n        minutes: leftDate.getMinutes() >= 30 ? 30 : 0,\n        date: _date.default.trimTime(leftDate)\n      };\n      result.right = {\n        hours: rightDate.getHours(),\n        minutes: rightDate.getMinutes() >= 30 ? 30 : 0,\n        date: _date.default.trimTime(rightDate)\n      };\n      return result;\n    }\n  }, {\n    key: \"getIntervalDuration\",\n    value: function value(allDay) {\n      return this.getCellDuration();\n    }\n  }, {\n    key: \"_supportCompactDropDownAppointments\",\n    value: function value() {\n      return false;\n    }\n  }, {\n    key: \"getCellMinWidth\",\n    value: function value() {\n      return 0;\n    }\n  }, {\n    key: \"getWorkSpaceLeftOffset\",\n    value: function value() {\n      return 0;\n    }\n  }, {\n    key: \"scrollToTime\",\n    value: function value(hours, minutes, date) {\n      var coordinates = this._getScrollCoordinates(hours, minutes, date);\n\n      var scrollable = this.getScrollable();\n      var offset = this.option(\"rtlEnabled\") ? (0, _position.getBoundingRect)(this.getScrollableContainer().get(0)).width : 0;\n\n      if (this.option(\"templatesRenderAsynchronously\")) {\n        setTimeout(function () {\n          scrollable.scrollBy({\n            left: coordinates.left - scrollable.scrollLeft() - offset,\n            top: 0\n          });\n        });\n      } else {\n        scrollable.scrollBy({\n          left: coordinates.left - scrollable.scrollLeft() - offset,\n          top: 0\n        });\n      }\n    }\n  }, {\n    key: \"_getRowCountWithAllDayRows\",\n    value: function value() {\n      return this._getRowCount();\n    }\n  }]);\n\n  return SchedulerTimeline;\n}(_uiSchedulerWork_space.default);\n\n(0, _component_registrator.default)(\"dxSchedulerTimeline\", SchedulerTimeline);\nvar _default = SchedulerTimeline;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.timeline.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","default","_renderer","_interopRequireDefault","require","_common","_extend","_position","_component_registrator","_uiSchedulerWork_space","_date","_uiScheduler","_uiSchedulerCurrent_time_shader","_utils","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","call","value","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","toString","e","getPrototypeOf","tableCreator","TIMELINE_CLASS","GROUP_TABLE_CLASS","HORIZONTAL_GROUPED_WORKSPACE_CLASS","HEADER_PANEL_CELL_CLASS","HEADER_PANEL_WEEK_CELL_CLASS","HEADER_ROW_CLASS","HORIZONTAL","DATE_TABLE_CELL_BORDER","DATE_TABLE_HEADER_MARGIN","toMs","dateToMilliseconds","SchedulerTimeline","_SchedulerWorkSpace","_super","$element","addClass","_$sidebarTable","direction","isMultiSelection","_$focusedCell","toggleClass","_isHorizontalGroupedWorkSpace","extend","groupOrientation","_getCellCountInDay","option","outerWidth","groupCount","_getRowCount","index","newFirstViewDate","getDateWithoutTimezoneChange","_firstViewDate","_getDateByIndexCore","date","dayIndex","Math","floor","setTime","getTime","_calculateCellIndex","_getInterval","_getHiddenInterval","isTimezoneChangeInDate","setDate","getDate","rowIndex","cellIndex","_calculateHiddenInterval","_createWorkSpaceScrollableElements","getBoundingRect","_$dateTable","height","config","timelineConfig","scrollByContent","noop","_$thead","$headerRow","_needRenderWeekHeader","firstViewDate","$cells","colspan","cellTemplate","_getWeekDuration","$th","text","_formatWeekdayAndDay","templateOptions","model","container","render","attr","push","_incrementDate","$row","append","before","_setFirstViewDate","groupCellTemplates","_renderGroupHeader","_renderDateHeader","_renderAllDayPanel","_renderTimePanel","_renderDateTable","_shader","_updateGroupTableHeight","appendTo","_sidebarScrollable","$content","_applyCellTemplates","timeDiff","_getTimeDiff","_calculateDurationInCells","today","_getToday","_getIndicationFirstViewDate","differenceInDays","duration","getCellDuration","getHours","isGroupedByDate","cellCount","getIndicationCellCount","integerPart","fractionPart","getCellWidth","_getGroupCount","rtlOffset","$container","$indicator","width","getIndicationWidth","_createIndicator","css","offset","_getCellCount","headerIndex","isIndicationOnView","_getDateByIndex","now","sameDate","startCellDate","endCellDate","setMilliseconds","getMilliseconds","dateInRange","empty","visible","cellHeight","getCellHeight","minHeight","_getWorkSpaceMinHeight","$groupCells","find","_getWorkSpaceHeight","workspaceContainerHeight","outerHeight","getHeaderPanelHeight","groups","groupByDate","tableCreatorStrategy","VERTICAL","makeGroupedTable","groupRowClass","_getGroupRowClass","groupHeaderRowClass","groupHeaderClass","_getGroupHeaderClass","bind","groupHeaderContentClass","_getGroupHeaderContentClass","_getTotalRowCount","minCellHeight","_calculateMinCellHeight","dateTable","_getDateTable","dateTableRowSelector","_getDateTableRowClass","cellCoordinates","groupIndex","indexes","_groupedStrategy","prepareCellIndexes","eq","trimTime","currentDate","allDay","startDayHour","endDayHour","getStartViewDate","firstViewDateTime","hiddenInterval","timeZoneOffset","getTimezonesDifference","apptStart","fullInterval","fullDays","tailDuration","tailDelta","_getWeekendsCount","gapBeforeAppt","timeShift","positionShift","left","top","cellPosition","isRtl","$scrollable","getScrollable","cellWidth","scrollableOffset","getScrollableOuterWidth","getScrollableScrollLeft","scrolledCellCount","visibleCellCount","totalCellCount","leftDate","rightDate","hours","minutes","getMinutes","right","coordinates","_getScrollCoordinates","scrollable","getScrollableContainer","setTimeout","scrollBy","scrollLeft","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _common = require(\"../../../core/utils/common\");\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _position = require(\"../../../core/utils/position\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../../core/component_registrator\"));\r\nvar _uiSchedulerWork_space = _interopRequireDefault(require(\"./ui.scheduler.work_space.indicator\"));\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\nvar _uiScheduler = _interopRequireDefault(require(\"../ui.scheduler.table_creator\"));\r\nvar _uiSchedulerCurrent_time_shader = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader.horizontal\"));\r\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\n\r\nfunction _get(target, property, receiver) {\r\n    if (\"undefined\" !== typeof Reflect && Reflect.get) {\r\n        _get = Reflect.get\r\n    } else {\r\n        _get = function(target, property, receiver) {\r\n            var base = _superPropBase(target, property);\r\n            if (!base) {\r\n                return\r\n            }\r\n            var desc = Object.getOwnPropertyDescriptor(base, property);\r\n            if (desc.get) {\r\n                return desc.get.call(receiver)\r\n            }\r\n            return desc.value\r\n        }\r\n    }\r\n    return _get(target, property, receiver || target)\r\n}\r\n\r\nfunction _superPropBase(object, property) {\r\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\r\n        object = _getPrototypeOf(object);\r\n        if (null === object) {\r\n            break\r\n        }\r\n    }\r\n    return object\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n    if (\"function\" !== typeof superClass && null !== superClass) {\r\n        throw new TypeError(\"Super expression must either be null or a function\")\r\n    }\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n        constructor: {\r\n            value: subClass,\r\n            writable: true,\r\n            configurable: true\r\n        }\r\n    });\r\n    if (superClass) {\r\n        _setPrototypeOf(subClass, superClass)\r\n    }\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\n\r\nfunction _createSuper(Derived) {\r\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n    return function() {\r\n        var result, Super = _getPrototypeOf(Derived);\r\n        if (hasNativeReflectConstruct) {\r\n            var NewTarget = _getPrototypeOf(this).constructor;\r\n            result = Reflect.construct(Super, arguments, NewTarget)\r\n        } else {\r\n            result = Super.apply(this, arguments)\r\n        }\r\n        return _possibleConstructorReturn(this, result)\r\n    }\r\n}\r\n\r\nfunction _possibleConstructorReturn(self, call) {\r\n    if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\r\n        return call\r\n    }\r\n    return _assertThisInitialized(self)\r\n}\r\n\r\nfunction _assertThisInitialized(self) {\r\n    if (void 0 === self) {\r\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")\r\n    }\r\n    return self\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n    if (\"undefined\" === typeof Reflect || !Reflect.construct) {\r\n        return false\r\n    }\r\n    if (Reflect.construct.sham) {\r\n        return false\r\n    }\r\n    if (\"function\" === typeof Proxy) {\r\n        return true\r\n    }\r\n    try {\r\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\r\n        return true\r\n    } catch (e) {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction _getPrototypeOf(o) {\r\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o) {\r\n        return o.__proto__ || Object.getPrototypeOf(o)\r\n    };\r\n    return _getPrototypeOf(o)\r\n}\r\nvar tableCreator = _uiScheduler.default.tableCreator;\r\nvar TIMELINE_CLASS = \"dx-scheduler-timeline\";\r\nvar GROUP_TABLE_CLASS = \"dx-scheduler-group-table\";\r\nvar HORIZONTAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-horizontal-grouped\";\r\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\r\nvar HEADER_PANEL_WEEK_CELL_CLASS = \"dx-scheduler-header-panel-week-cell\";\r\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\r\nvar HORIZONTAL = \"horizontal\";\r\nvar DATE_TABLE_CELL_BORDER = 1;\r\nvar DATE_TABLE_HEADER_MARGIN = 10;\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar SchedulerTimeline = function(_SchedulerWorkSpace) {\r\n    _inherits(SchedulerTimeline, _SchedulerWorkSpace);\r\n    var _super = _createSuper(SchedulerTimeline);\r\n\r\n    function SchedulerTimeline() {\r\n        _classCallCheck(this, SchedulerTimeline);\r\n        return _super.apply(this, arguments)\r\n    }\r\n    _createClass(SchedulerTimeline, [{\r\n        key: \"_init\",\r\n        value: function() {\r\n            _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_init\", this).call(this);\r\n            this.$element().addClass(TIMELINE_CLASS);\r\n            this._$sidebarTable = (0, _renderer.default)(\"<div>\").addClass(GROUP_TABLE_CLASS)\r\n        }\r\n    }, {\r\n        key: \"_getCellFromNextRow\",\r\n        value: function(direction, isMultiSelection) {\r\n            if (!isMultiSelection) {\r\n                return _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_getCellFromNextRow\", this).call(this, direction, isMultiSelection)\r\n            }\r\n            return this._$focusedCell\r\n        }\r\n    }, {\r\n        key: \"_getDefaultGroupStrategy\",\r\n        value: function() {\r\n            return \"vertical\"\r\n        }\r\n    }, {\r\n        key: \"_toggleGroupingDirectionClass\",\r\n        value: function() {\r\n            this.$element().toggleClass(HORIZONTAL_GROUPED_WORKSPACE_CLASS, this._isHorizontalGroupedWorkSpace())\r\n        }\r\n    }, {\r\n        key: \"_getDefaultOptions\",\r\n        value: function() {\r\n            return (0, _extend.extend)(_get(_getPrototypeOf(SchedulerTimeline.prototype), \"_getDefaultOptions\", this).call(this), {\r\n                groupOrientation: \"vertical\"\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_getRowCount\",\r\n        value: function() {\r\n            return 1\r\n        }\r\n    }, {\r\n        key: \"_getCellCount\",\r\n        value: function() {\r\n            return this._getCellCountInDay() * this.option(\"intervalCount\")\r\n        }\r\n    }, {\r\n        key: \"getGroupTableWidth\",\r\n        value: function() {\r\n            return this._$sidebarTable ? this._$sidebarTable.outerWidth() : 0\r\n        }\r\n    }, {\r\n        key: \"_getTotalRowCount\",\r\n        value: function(groupCount) {\r\n            if (this._isHorizontalGroupedWorkSpace()) {\r\n                return this._getRowCount()\r\n            } else {\r\n                groupCount = groupCount || 1;\r\n                return this._getRowCount() * groupCount\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getDateForHeaderText\",\r\n        value: function(index) {\r\n            var newFirstViewDate = _utils.default.getDateWithoutTimezoneChange(this._firstViewDate);\r\n            return this._getDateByIndexCore(newFirstViewDate, index)\r\n        }\r\n    }, {\r\n        key: \"_getDateByIndexCore\",\r\n        value: function(date, index) {\r\n            var result = new Date(date);\r\n            var dayIndex = Math.floor(index / this._getCellCountInDay());\r\n            result.setTime(date.getTime() + this._calculateCellIndex(0, index) * this._getInterval() + dayIndex * this._getHiddenInterval());\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getDateByIndex\",\r\n        value: function(index) {\r\n            var newFirstViewDate = _utils.default.getDateWithoutTimezoneChange(this._firstViewDate);\r\n            var result = this._getDateByIndexCore(newFirstViewDate, index);\r\n            if (_utils.default.isTimezoneChangeInDate(this._firstViewDate)) {\r\n                result.setDate(result.getDate() - 1)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getFormat\",\r\n        value: function() {\r\n            return \"shorttime\"\r\n        }\r\n    }, {\r\n        key: \"_needApplyLastGroupCellClass\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"_calculateHiddenInterval\",\r\n        value: function(rowIndex, cellIndex) {\r\n            var dayIndex = Math.floor(cellIndex / this._getCellCountInDay());\r\n            return dayIndex * this._getHiddenInterval()\r\n        }\r\n    }, {\r\n        key: \"_getMillisecondsOffset\",\r\n        value: function(rowIndex, cellIndex) {\r\n            cellIndex = this._calculateCellIndex(rowIndex, cellIndex);\r\n            return this._getInterval() * cellIndex + this._calculateHiddenInterval(rowIndex, cellIndex)\r\n        }\r\n    }, {\r\n        key: \"_createWorkSpaceElements\",\r\n        value: function() {\r\n            this._createWorkSpaceScrollableElements()\r\n        }\r\n    }, {\r\n        key: \"_getWorkSpaceHeight\",\r\n        value: function() {\r\n            if (this.option(\"crossScrollingEnabled\")) {\r\n                return (0, _position.getBoundingRect)(this._$dateTable.get(0)).height\r\n            }\r\n            return (0, _position.getBoundingRect)(this.$element().get(0)).height\r\n        }\r\n    }, {\r\n        key: \"_dateTableScrollableConfig\",\r\n        value: function() {\r\n            var config = _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_dateTableScrollableConfig\", this).call(this);\r\n            var timelineConfig = {\r\n                direction: HORIZONTAL\r\n            };\r\n            return this.option(\"crossScrollingEnabled\") ? config : (0, _extend.extend)(config, timelineConfig)\r\n        }\r\n    }, {\r\n        key: \"_needCreateCrossScrolling\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"_headerScrollableConfig\",\r\n        value: function() {\r\n            var config = _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_headerScrollableConfig\", this).call(this);\r\n            return (0, _extend.extend)(config, {\r\n                scrollByContent: true\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_renderTimePanel\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_renderAllDayPanel\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_getTableAllDay\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_getDateHeaderTemplate\",\r\n        value: function() {\r\n            return this.option(\"timeCellTemplate\")\r\n        }\r\n    }, {\r\n        key: \"_toggleAllDayVisibility\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_changeAllDayVisibility\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"supportAllDayRow\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_getGroupHeaderContainer\",\r\n        value: function() {\r\n            if (this._isHorizontalGroupedWorkSpace()) {\r\n                return this._$thead\r\n            }\r\n            return this._$sidebarTable\r\n        }\r\n    }, {\r\n        key: \"_insertAllDayRowsIntoDateTable\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_createAllDayPanelElements\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_renderDateHeader\",\r\n        value: function() {\r\n            var $headerRow = _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_renderDateHeader\", this).call(this);\r\n            if (this._needRenderWeekHeader()) {\r\n                var firstViewDate = new Date(this._firstViewDate);\r\n                var $cells = [];\r\n                var colspan = this._getCellCountInDay();\r\n                var cellTemplate = this.option(\"dateCellTemplate\");\r\n                for (var i = 0; i < this._getWeekDuration() * this.option(\"intervalCount\"); i++) {\r\n                    var $th = (0, _renderer.default)(\"<th>\");\r\n                    var text = this._formatWeekdayAndDay(firstViewDate);\r\n                    if (cellTemplate) {\r\n                        var templateOptions = {\r\n                            model: {\r\n                                text: text,\r\n                                date: new Date(firstViewDate)\r\n                            },\r\n                            container: $th,\r\n                            index: i\r\n                        };\r\n                        cellTemplate.render(templateOptions)\r\n                    } else {\r\n                        $th.text(text)\r\n                    }\r\n                    $th.addClass(HEADER_PANEL_CELL_CLASS).addClass(HEADER_PANEL_WEEK_CELL_CLASS).attr(\"colSpan\", colspan);\r\n                    $cells.push($th);\r\n                    this._incrementDate(firstViewDate)\r\n                }\r\n                var $row = (0, _renderer.default)(\"<tr>\").addClass(HEADER_ROW_CLASS).append($cells);\r\n                $headerRow.before($row)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_needRenderWeekHeader\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_incrementDate\",\r\n        value: function(date) {\r\n            date.setDate(date.getDate() + 1)\r\n        }\r\n    }, {\r\n        key: \"_getWeekDuration\",\r\n        value: function() {\r\n            return 1\r\n        }\r\n    }, {\r\n        key: \"_renderView\",\r\n        value: function() {\r\n            this._setFirstViewDate();\r\n            var groupCellTemplates = this._renderGroupHeader();\r\n            this._renderDateHeader();\r\n            this._renderAllDayPanel();\r\n            this._renderTimePanel();\r\n            this._renderDateTable();\r\n            this._shader = new _uiSchedulerCurrent_time_shader.default(this);\r\n            this._updateGroupTableHeight();\r\n            this._$sidebarTable.appendTo(this._sidebarScrollable.$content());\r\n            this._applyCellTemplates(groupCellTemplates)\r\n        }\r\n    }, {\r\n        key: \"_setHorizontalGroupHeaderCellsHeight\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"getIndicationCellCount\",\r\n        value: function() {\r\n            var timeDiff = this._getTimeDiff();\r\n            return this._calculateDurationInCells(timeDiff)\r\n        }\r\n    }, {\r\n        key: \"_getTimeDiff\",\r\n        value: function() {\r\n            var today = this._getToday();\r\n            var date = this._getIndicationFirstViewDate();\r\n            return today.getTime() - date.getTime()\r\n        }\r\n    }, {\r\n        key: \"_calculateDurationInCells\",\r\n        value: function(timeDiff) {\r\n            var today = this._getToday();\r\n            var differenceInDays = Math.floor(timeDiff / toMs(\"day\"));\r\n            var duration = (timeDiff - differenceInDays * toMs(\"day\") - this.option(\"startDayHour\") * toMs(\"hour\")) / this.getCellDuration();\r\n            if (today.getHours() > this.option(\"endDayHour\")) {\r\n                duration = this._getCellCountInDay()\r\n            }\r\n            if (duration < 0) {\r\n                duration = 0\r\n            }\r\n            return differenceInDays * this._getCellCountInDay() + duration\r\n        }\r\n    }, {\r\n        key: \"getIndicationWidth\",\r\n        value: function() {\r\n            if (this.isGroupedByDate()) {\r\n                var cellCount = this.getIndicationCellCount();\r\n                var integerPart = Math.floor(cellCount);\r\n                var fractionPart = cellCount - integerPart;\r\n                return this.getCellWidth() * (integerPart * this._getGroupCount() + fractionPart)\r\n            } else {\r\n                return this.getIndicationCellCount() * this.getCellWidth()\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_renderIndicator\",\r\n        value: function(height, rtlOffset, $container, groupCount) {\r\n            var $indicator;\r\n            var width = this.getIndicationWidth();\r\n            if (\"vertical\" === this.option(\"groupOrientation\")) {\r\n                $indicator = this._createIndicator($container);\r\n                $indicator.height((0, _position.getBoundingRect)($container.get(0)).height);\r\n                $indicator.css(\"left\", rtlOffset ? rtlOffset - width : width)\r\n            } else {\r\n                for (var i = 0; i < groupCount; i++) {\r\n                    var offset = this.isGroupedByDate() ? i * this.getCellWidth() : this._getCellCount() * this.getCellWidth() * i;\r\n                    $indicator = this._createIndicator($container);\r\n                    $indicator.height((0, _position.getBoundingRect)($container.get(0)).height);\r\n                    $indicator.css(\"left\", rtlOffset ? rtlOffset - width - offset : width + offset)\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_isVerticalShader\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_isCurrentTimeHeaderCell\",\r\n        value: function(headerIndex) {\r\n            var result = false;\r\n            if (this.isIndicationOnView()) {\r\n                var date = this._getDateByIndex(headerIndex);\r\n                var now = this._getToday();\r\n                date = new Date(date);\r\n                if (_date.default.sameDate(now, date)) {\r\n                    var startCellDate = new Date(date);\r\n                    var endCellDate = new Date(date);\r\n                    endCellDate = endCellDate.setMilliseconds(date.getMilliseconds() + this.getCellDuration());\r\n                    result = _date.default.dateInRange(now, startCellDate, endCellDate)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_cleanView\",\r\n        value: function() {\r\n            _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_cleanView\", this).call(this);\r\n            this._$sidebarTable.empty()\r\n        }\r\n    }, {\r\n        key: \"_visibilityChanged\",\r\n        value: function(visible) {\r\n            _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_visibilityChanged\", this).call(this, visible)\r\n        }\r\n    }, {\r\n        key: \"_setTableSizes\",\r\n        value: function() {\r\n            var cellHeight = this.getCellHeight();\r\n            var minHeight = this._getWorkSpaceMinHeight();\r\n            var $groupCells = this._$sidebarTable.find(\"tr\");\r\n            var height = cellHeight * $groupCells.length;\r\n            if (height < minHeight) {\r\n                height = minHeight\r\n            }\r\n            this._$sidebarTable.height(height);\r\n            this._$dateTable.height(height);\r\n            _get(_getPrototypeOf(SchedulerTimeline.prototype), \"_setTableSizes\", this).call(this)\r\n        }\r\n    }, {\r\n        key: \"_getWorkSpaceMinHeight\",\r\n        value: function() {\r\n            var minHeight = this._getWorkSpaceHeight();\r\n            var workspaceContainerHeight = this.$element().outerHeight(true) - this.getHeaderPanelHeight() - 2 * DATE_TABLE_CELL_BORDER - DATE_TABLE_HEADER_MARGIN;\r\n            if (minHeight < workspaceContainerHeight) {\r\n                minHeight = workspaceContainerHeight\r\n            }\r\n            return minHeight\r\n        }\r\n    }, {\r\n        key: \"_makeGroupRows\",\r\n        value: function(groups, groupByDate) {\r\n            var tableCreatorStrategy = \"vertical\" === this.option(\"groupOrientation\") ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\r\n            return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\r\n                groupRowClass: this._getGroupRowClass(),\r\n                groupHeaderRowClass: this._getGroupRowClass(),\r\n                groupHeaderClass: this._getGroupHeaderClass.bind(this),\r\n                groupHeaderContentClass: this._getGroupHeaderContentClass()\r\n            }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getTotalRowCount(this._getGroupCount()), groupByDate)\r\n        }\r\n    }, {\r\n        key: \"_ensureGroupHeaderCellsHeight\",\r\n        value: function(cellHeight) {\r\n            var minCellHeight = this._calculateMinCellHeight();\r\n            if (cellHeight < minCellHeight) {\r\n                return minCellHeight\r\n            }\r\n            return cellHeight\r\n        }\r\n    }, {\r\n        key: \"_calculateMinCellHeight\",\r\n        value: function() {\r\n            var dateTable = this._getDateTable();\r\n            var dateTableRowSelector = \".\" + this._getDateTableRowClass();\r\n            return (0, _position.getBoundingRect)(dateTable).height / dateTable.find(dateTableRowSelector).length - 2 * DATE_TABLE_CELL_BORDER\r\n        }\r\n    }, {\r\n        key: \"_getCellCoordinatesByIndex\",\r\n        value: function(index) {\r\n            return {\r\n                cellIndex: index % this._getCellCount(),\r\n                rowIndex: 0\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getCellByCoordinates\",\r\n        value: function(cellCoordinates, groupIndex) {\r\n            var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex);\r\n            return this._$dateTable.find(\"tr\").eq(indexes.rowIndex).find(\"td\").eq(indexes.cellIndex)\r\n        }\r\n    }, {\r\n        key: \"_getWorkSpaceWidth\",\r\n        value: function() {\r\n            return this._$dateTable.outerWidth(true)\r\n        }\r\n    }, {\r\n        key: \"_getIndicationFirstViewDate\",\r\n        value: function() {\r\n            return _date.default.trimTime(new Date(this._firstViewDate))\r\n        }\r\n    }, {\r\n        key: \"_getIntervalBetween\",\r\n        value: function(currentDate, allDay) {\r\n            var startDayHour = this.option(\"startDayHour\");\r\n            var endDayHour = this.option(\"endDayHour\");\r\n            var firstViewDate = this.getStartViewDate();\r\n            var firstViewDateTime = firstViewDate.getTime();\r\n            var hiddenInterval = (24 - endDayHour + startDayHour) * toMs(\"hour\");\r\n            var timeZoneOffset = _date.default.getTimezonesDifference(firstViewDate, currentDate);\r\n            var apptStart = currentDate.getTime();\r\n            var fullInterval = apptStart - firstViewDateTime - timeZoneOffset;\r\n            var fullDays = Math.floor(fullInterval / toMs(\"day\"));\r\n            var tailDuration = fullInterval - fullDays * toMs(\"day\");\r\n            var tailDelta = 0;\r\n            var cellCount = this._getCellCountInDay() * (fullDays - this._getWeekendsCount(fullDays));\r\n            var gapBeforeAppt = apptStart - _date.default.trimTime(new Date(currentDate)).getTime();\r\n            var result = cellCount * this.option(\"hoursInterval\") * toMs(\"hour\");\r\n            if (!allDay) {\r\n                if (currentDate.getHours() < startDayHour) {\r\n                    tailDelta = tailDuration - hiddenInterval + gapBeforeAppt\r\n                } else {\r\n                    if (currentDate.getHours() >= startDayHour && currentDate.getHours() < endDayHour) {\r\n                        tailDelta = tailDuration\r\n                    } else {\r\n                        if (currentDate.getHours() >= startDayHour && currentDate.getHours() >= endDayHour) {\r\n                            tailDelta = tailDuration - (gapBeforeAppt - endDayHour * toMs(\"hour\"))\r\n                        } else {\r\n                            if (!fullDays) {\r\n                                result = fullInterval\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                result += tailDelta\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getWeekendsCount\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"getAllDayContainer\",\r\n        value: function() {\r\n            return null\r\n        }\r\n    }, {\r\n        key: \"getTimePanelWidth\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"getPositionShift\",\r\n        value: function(timeShift) {\r\n            var positionShift = _get(_getPrototypeOf(SchedulerTimeline.prototype), \"getPositionShift\", this).call(this, timeShift);\r\n            var left = this.getCellWidth() * timeShift;\r\n            if (this.option(\"rtlEnabled\")) {\r\n                left *= -1\r\n            }\r\n            left += positionShift.left;\r\n            return {\r\n                top: 0,\r\n                left: left,\r\n                cellPosition: left\r\n            }\r\n        }\r\n    }, {\r\n        key: \"getVisibleBounds\",\r\n        value: function() {\r\n            var isRtl = this.option(\"rtlEnabled\");\r\n            var result = {};\r\n            var $scrollable = this.getScrollable().$element();\r\n            var cellWidth = this.getCellWidth();\r\n            var scrollableOffset = isRtl ? this.getScrollableOuterWidth() - this.getScrollableScrollLeft() : this.getScrollableScrollLeft();\r\n            var scrolledCellCount = scrollableOffset / cellWidth;\r\n            var visibleCellCount = $scrollable.width() / cellWidth;\r\n            var totalCellCount = isRtl ? scrolledCellCount - visibleCellCount : scrolledCellCount + visibleCellCount;\r\n            var leftDate = this._getDateByIndex(scrolledCellCount);\r\n            var rightDate = this._getDateByIndex(totalCellCount);\r\n            if (isRtl) {\r\n                leftDate = this._getDateByIndex(totalCellCount);\r\n                rightDate = this._getDateByIndex(scrolledCellCount)\r\n            }\r\n            result.left = {\r\n                hours: leftDate.getHours(),\r\n                minutes: leftDate.getMinutes() >= 30 ? 30 : 0,\r\n                date: _date.default.trimTime(leftDate)\r\n            };\r\n            result.right = {\r\n                hours: rightDate.getHours(),\r\n                minutes: rightDate.getMinutes() >= 30 ? 30 : 0,\r\n                date: _date.default.trimTime(rightDate)\r\n            };\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"getIntervalDuration\",\r\n        value: function(allDay) {\r\n            return this.getCellDuration()\r\n        }\r\n    }, {\r\n        key: \"_supportCompactDropDownAppointments\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"getCellMinWidth\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"getWorkSpaceLeftOffset\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"scrollToTime\",\r\n        value: function(hours, minutes, date) {\r\n            var coordinates = this._getScrollCoordinates(hours, minutes, date);\r\n            var scrollable = this.getScrollable();\r\n            var offset = this.option(\"rtlEnabled\") ? (0, _position.getBoundingRect)(this.getScrollableContainer().get(0)).width : 0;\r\n            if (this.option(\"templatesRenderAsynchronously\")) {\r\n                setTimeout(function() {\r\n                    scrollable.scrollBy({\r\n                        left: coordinates.left - scrollable.scrollLeft() - offset,\r\n                        top: 0\r\n                    })\r\n                })\r\n            } else {\r\n                scrollable.scrollBy({\r\n                    left: coordinates.left - scrollable.scrollLeft() - offset,\r\n                    top: 0\r\n                })\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getRowCountWithAllDayRows\",\r\n        value: function() {\r\n            return this._getRowCount()\r\n        }\r\n    }]);\r\n    return SchedulerTimeline\r\n}(_uiSchedulerWork_space.default);\r\n(0, _component_registrator.default)(\"dxSchedulerTimeline\", SchedulerTimeline);\r\nvar _default = SchedulerTimeline;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}