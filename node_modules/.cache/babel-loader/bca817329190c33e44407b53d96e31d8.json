{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Cart\\\\cart\\\\package.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { NormalCheckbox, NormalInput, NormalButton, NormalModal, TableWrapper } from \"component/common\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonUpdateApi, commonCreateApi } from \"redux/actions/common\";\nimport SimpleReactValidator from \"simple-react-validator\"; // import { Treatment, Payment, EditCart } from './cart/index';\n\nimport { Label } from \"reactstrap\";\nimport { PackageTreatmentDone } from \"./packageTreatmentDone\";\nimport closeIcon from \"assets/images/close.png\";\nimport { withTranslation } from \"react-i18next\";\nexport class PackageCartClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cartPackageList: [],\n      auto_deposit: \"\",\n      auto_deposit_new: \"\",\n      deposit: \"\",\n      net_deposit: \"\",\n      checked: true,\n      isOpenTreatmentDone: false,\n      TransactionHeader: [{\n        label: \"Description\"\n      }, {\n        label: \"Qty\",\n        width: \"60px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Deposit\",\n        width: \"80px\",\n        divClass: \"justify-content-center text-center\"\n      }, {\n        label: \"Net Amount\",\n        width: \"80px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Action\",\n        width: \"20px\"\n      }],\n      selectedData: \"\"\n    };\n\n    this.componentWillMount = () => {\n      this.getCartData();\n    };\n\n    this.getCartData = () => {\n      this.props.getCommonApi(`pospackagedeposit/?cartid=${this.props.id}`).then(async key => {\n        let {\n          cartPackageList,\n          auto_deposit,\n          auto_deposit_new,\n          deposit,\n          net_deposit\n        } = this.state;\n        let {\n          data\n        } = key;\n        cartPackageList = data;\n        auto_deposit = key.auto_deposit;\n        auto_deposit_new = key.auto_deposit;\n        deposit = key.deposit;\n        net_deposit = key.net_deposit;\n        this.setState({\n          cartPackageList,\n          auto_deposit,\n          auto_deposit_new,\n          deposit,\n          net_deposit\n        });\n      });\n    };\n\n    this.autoMatch = () => {\n      const testData = [];\n      const original_number = this.state.net_deposit;\n      const net_deposit = this.state.net_deposit;\n      const new_number = this.state.auto_deposit_new;\n\n      if (parseFloat(new_number) > parseFloat(net_deposit)) {\n        alert(\"Entered amount should not greater than Net Amount\");\n        return;\n      }\n\n      let decrease = original_number - new_number;\n      let percentageOfDecrease = (decrease / original_number * 100).toFixed(2);\n      var depositAmount = 0;\n      var totalDepositAmount = 0;\n\n      for (var i = 0; i < this.state.cartPackageList.length; i++) {\n        var xRowNetAmount = this.state.cartPackageList[i].net_amt;\n        var xDecreasedRowAmount = (xRowNetAmount * percentageOfDecrease / 100).toFixed(2);\n        depositAmount = (xRowNetAmount - xDecreasedRowAmount).toFixed(2);\n        totalDepositAmount += parseFloat(depositAmount);\n\n        if (i == this.state.cartPackageList.length - 1) {\n          //Assign Difference value into last row\n          var difference = new_number - totalDepositAmount;\n          totalDepositAmount += difference;\n          depositAmount = parseFloat(depositAmount) + parseFloat(difference);\n        }\n\n        testData.push({\n          id: this.state.cartPackageList[i].id,\n          description: this.state.cartPackageList[i].description,\n          qty: this.state.cartPackageList[i].qty,\n          deposit_amt: parseFloat(depositAmount).toFixed(2),\n          net_amt: this.state.cartPackageList[i].net_amt,\n          auto: this.state.cartPackageList[i].auto,\n          hold_qty: 0,\n          itemcart: this.state.cartPackageList[i].itemcart\n        });\n      } //console.log(\"data\")\n\n\n      this.setState({\n        cartPackageList: testData,\n        deposit: totalDepositAmount.toFixed(2)\n      });\n    };\n\n    this.clear = () => {\n      this.fillCartDepositModifyData(\"Clear\");\n    };\n\n    this.fullPayment = () => {\n      this.fillCartDepositModifyData(\"Full\");\n    };\n\n    this.handleCancel = () => {\n      this.props.handleModal();\n    };\n\n    this.handleConfirm = () => {\n      let data = this.state.cartPackageList;\n      this.props.commonCreateApi(`pospackagedeposit/confirm/?cartid=${this.props.id}`, data).then(() => {\n        //console.log(\"succ\")\n        this.props.handleModal();\n      });\n    };\n\n    this.handleChange_auto_deposit_new = async ({\n      target: {\n        value\n      }\n    }) => {\n      let {\n        auto_deposit_new\n      } = this.state;\n      auto_deposit_new = value;\n      await this.setState({\n        auto_deposit_new\n      });\n    };\n\n    this.handleCheck = () => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n\n    this.handleDialog = async () => {\n      let {\n        isOpenTreatmentDone\n      } = this.state;\n      isOpenTreatmentDone = false;\n      await this.setState({\n        isOpenTreatmentDone\n      });\n      this.getCartData();\n    };\n\n    this.handleTreatmentDone = async cartPackage => {\n      debugger;\n      await this.props.updateForm(\"Select_Package\", cartPackage.id);\n      await this.setState({\n        selectedData: cartPackage.id,\n        isOpenTreatmentDone: true\n      });\n    };\n  }\n\n  fillCartDepositModifyData(xMode) {\n    let depositAmount;\n    var totalDepositAmount = 0;\n    const testData = [];\n\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\n      if (xMode == \"Clear\") {\n        depositAmount = 0;\n        totalDepositAmount += parseFloat(depositAmount);\n      } else if (xMode == \"Full\") {\n        depositAmount = this.state.cartPackageList[i].net_amt;\n        totalDepositAmount += parseFloat(depositAmount);\n      }\n\n      testData.push({\n        id: this.state.cartPackageList[i].id,\n        description: this.state.cartPackageList[i].description,\n        qty: this.state.cartPackageList[i].qty,\n        deposit_amt: depositAmount,\n        net_amt: this.state.cartPackageList[i].net_amt,\n        auto: this.state.cartPackageList[i].auto,\n        hold_qty: 0,\n        itemcart: this.state.cartPackageList[i].itemcart\n      });\n    }\n\n    this.setState({\n      cartPackageList: testData,\n      deposit: totalDepositAmount\n    });\n  }\n\n  handleChangeForEachRow(userId, event) {\n    //var inputElement = event.target;\n    var userEnteredValue = parseFloat(event.target.value);\n    var userEnteredKeyUnique = event.target.name;\n    var totalDepositAmount = 0; //console.log(inputElement.name + ': ' + inputElement.value);\n\n    const testData = [];\n\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\n      let deposit = 0;\n      var xRowNetAmount = parseFloat(this.state.cartPackageList[i].net_amt);\n\n      if (i == userEnteredKeyUnique) {\n        if (userEnteredValue > xRowNetAmount) {\n          return;\n        }\n\n        deposit = userEnteredValue;\n        totalDepositAmount += parseFloat(deposit);\n      } else {\n        deposit = this.state.cartPackageList[i].deposit_amt;\n        totalDepositAmount += parseFloat(deposit);\n      }\n\n      testData.push({\n        id: this.state.cartPackageList[i].id,\n        description: this.state.cartPackageList[i].description,\n        qty: this.state.cartPackageList[i].qty,\n        deposit_amt: deposit,\n        net_amt: this.state.cartPackageList[i].net_amt,\n        auto: this.state.cartPackageList[i].auto,\n        hold_qty: 0,\n        itemcart: this.state.cartPackageList[i].itemcart\n      });\n    }\n\n    this.setState({\n      cartPackageList: testData,\n      deposit: totalDepositAmount.toFixed(2)\n    });\n  }\n\n  render() {\n    let {\n      cartPackageList,\n      auto_deposit_new,\n      deposit,\n      net_deposit,\n      isOpenTreatmentDone,\n      TransactionHeader\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row new-cart treatment-done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 font-700 mb-3 title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, t(\"Package Details\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      type: \"checkbox\",\n      checked: this.state.checked,\n      onChange: () => this.handleCheck(),\n      label: \"Auto Deposit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: auto_deposit_new,\n      name: \"auto_deposit_new\",\n      className: \"customer-name w-100 h-100 text-right fs-24\",\n      onChange: this.handleChange_auto_deposit_new,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Start AutoMatch\",\n      disabled: !this.state.checked,\n      onClick: () => this.autoMatch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      className: \"mb-3\",\n      headerDetails: TransactionHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }, cartPackageList && cartPackageList.length > 0 ? cartPackageList.map((cartPackage, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 23\n        }\n      }, cartPackage.description)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 23\n        }\n      }, cartPackage.qty)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.handleChangeForEachRow.bind(this, cartPackage.id),\n        name: index,\n        type: \"number\",\n        min: \"0\",\n        className: \"w-50 text-right\",\n        value: cartPackage.deposit_amt,\n        disabled: this.state.checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 23\n        }\n      }, cartPackage.net_amt)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justifiy-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 23\n        }\n      }, cartPackage.is_td ? /*#__PURE__*/React.createElement(NormalButton, {\n        mainbgrev: true,\n        label: \"TD\",\n        onClick: this.handleTreatmentDone.bind(this, cartPackage),\n        className: \"w-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 27\n        }\n      }) : \"\")));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, t(\"No Data\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center fw-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 19\n      }\n    }, t(\"Deposit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fw-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: deposit,\n      disabled: true,\n      className: \"text-right w-70\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center fw-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, t(\"Net Total\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fw-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: net_deposit,\n      disabled: true,\n      className: \"text-right w-70\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Full Payment\",\n      onClick: () => this.fullPayment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Clear Deposit\",\n      onClick: () => this.clear(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      resetbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Cancel\",\n      onClick: () => this.handleCancel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      submitBtn: true,\n      className: \"col-12 fs-15 \",\n      label: \"Confirm\",\n      onClick: () => this.handleConfirm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-modal\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: isOpenTreatmentDone,\n      handleModal: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PackageTreatmentDone, {\n      id: this.state.selectedData,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail,\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonUpdateApi,\n    commonCreateApi\n  }, dispatch);\n};\n\nexport const PackageCart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(PackageCartClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Cart/cart/package.js"],"names":["React","Component","NormalCheckbox","NormalInput","NormalButton","NormalModal","TableWrapper","_","connect","bindActionCreators","getCommonApi","updateForm","commonUpdateApi","commonCreateApi","SimpleReactValidator","Label","PackageTreatmentDone","closeIcon","withTranslation","PackageCartClass","state","cartPackageList","auto_deposit","auto_deposit_new","deposit","net_deposit","checked","isOpenTreatmentDone","TransactionHeader","label","width","divClass","selectedData","componentWillMount","getCartData","props","id","then","key","data","setState","autoMatch","testData","original_number","new_number","parseFloat","alert","decrease","percentageOfDecrease","toFixed","depositAmount","totalDepositAmount","i","length","xRowNetAmount","net_amt","xDecreasedRowAmount","difference","push","description","qty","deposit_amt","auto","hold_qty","itemcart","clear","fillCartDepositModifyData","fullPayment","handleCancel","handleModal","handleConfirm","handleChange_auto_deposit_new","target","value","handleCheck","handleDialog","handleTreatmentDone","cartPackage","xMode","handleChangeForEachRow","userId","event","userEnteredValue","userEnteredKeyUnique","name","render","t","map","index","bind","is_td","minWidth","mapStateToProps","selected_cstomer","common","basicApptDetail","appointment","tokenDetails","authStore","mapDispatchToProps","dispatch","PackageCart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport {\r\n  NormalCheckbox,\r\n  NormalInput,\r\n  NormalButton,\r\n  NormalModal,\r\n  TableWrapper,\r\n} from \"component/common\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  updateForm,\r\n  commonUpdateApi,\r\n  commonCreateApi,\r\n} from \"redux/actions/common\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n// import { Treatment, Payment, EditCart } from './cart/index';\r\nimport { Label } from \"reactstrap\";\r\nimport { PackageTreatmentDone } from \"./packageTreatmentDone\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class PackageCartClass extends Component {\r\n  state = {\r\n    cartPackageList: [],\r\n    auto_deposit: \"\",\r\n    auto_deposit_new: \"\",\r\n    deposit: \"\",\r\n    net_deposit: \"\",\r\n    checked: true,\r\n    isOpenTreatmentDone: false,\r\n\r\n    TransactionHeader: [\r\n      { label: \"Description\" },\r\n      {\r\n        label: \"Qty\",\r\n        width: \"60px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Deposit\",\r\n        width: \"80px\",\r\n        divClass: \"justify-content-center text-center\",\r\n      },\r\n      {\r\n        label: \"Net Amount\",\r\n        width: \"80px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Action\", width: \"20px\" },\r\n    ],\r\n    selectedData: \"\",\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.getCartData();\r\n  };\r\n\r\n  getCartData = () => {\r\n    this.props\r\n      .getCommonApi(`pospackagedeposit/?cartid=${this.props.id}`)\r\n      .then(async key => {\r\n        let {\r\n          cartPackageList,\r\n          auto_deposit,\r\n          auto_deposit_new,\r\n          deposit,\r\n          net_deposit,\r\n        } = this.state;\r\n        let { data } = key;\r\n        cartPackageList = data;\r\n        auto_deposit = key.auto_deposit;\r\n        auto_deposit_new = key.auto_deposit;\r\n        deposit = key.deposit;\r\n        net_deposit = key.net_deposit;\r\n        this.setState({\r\n          cartPackageList,\r\n          auto_deposit,\r\n          auto_deposit_new,\r\n          deposit,\r\n          net_deposit,\r\n        });\r\n      });\r\n  };\r\n  autoMatch = () => {\r\n    const testData = [];\r\n    const original_number = this.state.net_deposit;\r\n    const net_deposit = this.state.net_deposit;\r\n    const new_number = this.state.auto_deposit_new;\r\n    if (parseFloat(new_number) > parseFloat(net_deposit)) {\r\n      alert(\"Entered amount should not greater than Net Amount\");\r\n      return;\r\n    }\r\n    let decrease = original_number - new_number;\r\n    let percentageOfDecrease = ((decrease / original_number) * 100).toFixed(2);\r\n    var depositAmount = 0;\r\n    var totalDepositAmount = 0;\r\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n      var xRowNetAmount = this.state.cartPackageList[i].net_amt;\r\n      var xDecreasedRowAmount = (\r\n        (xRowNetAmount * percentageOfDecrease) /\r\n        100\r\n      ).toFixed(2);\r\n      depositAmount = (xRowNetAmount - xDecreasedRowAmount).toFixed(2);\r\n      totalDepositAmount += parseFloat(depositAmount);\r\n      if (i == this.state.cartPackageList.length - 1) {\r\n        //Assign Difference value into last row\r\n        var difference = new_number - totalDepositAmount;\r\n        totalDepositAmount += difference;\r\n        depositAmount = parseFloat(depositAmount) + parseFloat(difference);\r\n      }\r\n      testData.push({\r\n        id: this.state.cartPackageList[i].id,\r\n        description: this.state.cartPackageList[i].description,\r\n        qty: this.state.cartPackageList[i].qty,\r\n        deposit_amt: parseFloat(depositAmount).toFixed(2),\r\n        net_amt: this.state.cartPackageList[i].net_amt,\r\n        auto: this.state.cartPackageList[i].auto,\r\n        hold_qty: 0,\r\n        itemcart: this.state.cartPackageList[i].itemcart,\r\n      });\r\n    }\r\n    //console.log(\"data\")\r\n    this.setState({\r\n      cartPackageList: testData,\r\n      deposit: totalDepositAmount.toFixed(2),\r\n    });\r\n  };\r\n  clear = () => {\r\n    this.fillCartDepositModifyData(\"Clear\");\r\n  };\r\n  fullPayment = () => {\r\n    this.fillCartDepositModifyData(\"Full\");\r\n  };\r\n  handleCancel = () => {\r\n    this.props.handleModal();\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    let data = this.state.cartPackageList;\r\n    this.props\r\n      .commonCreateApi(\r\n        `pospackagedeposit/confirm/?cartid=${this.props.id}`,\r\n        data\r\n      )\r\n      .then(() => {\r\n        //console.log(\"succ\")\r\n        this.props.handleModal();\r\n      });\r\n  };\r\n\r\n  fillCartDepositModifyData(xMode) {\r\n    let depositAmount;\r\n    var totalDepositAmount = 0;\r\n    const testData = [];\r\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n      if (xMode == \"Clear\") {\r\n        depositAmount = 0;\r\n        totalDepositAmount += parseFloat(depositAmount);\r\n      } else if (xMode == \"Full\") {\r\n        depositAmount = this.state.cartPackageList[i].net_amt;\r\n        totalDepositAmount += parseFloat(depositAmount);\r\n      }\r\n      testData.push({\r\n        id: this.state.cartPackageList[i].id,\r\n        description: this.state.cartPackageList[i].description,\r\n        qty: this.state.cartPackageList[i].qty,\r\n        deposit_amt: depositAmount,\r\n        net_amt: this.state.cartPackageList[i].net_amt,\r\n        auto: this.state.cartPackageList[i].auto,\r\n        hold_qty: 0,\r\n        itemcart: this.state.cartPackageList[i].itemcart,\r\n      });\r\n    }\r\n    this.setState({ cartPackageList: testData, deposit: totalDepositAmount });\r\n  }\r\n  handleChange_auto_deposit_new = async ({ target: { value } }) => {\r\n    let { auto_deposit_new } = this.state;\r\n    auto_deposit_new = value;\r\n    await this.setState({\r\n      auto_deposit_new,\r\n    });\r\n  };\r\n  handleCheck = () => {\r\n    this.setState({\r\n      checked: !this.state.checked,\r\n    });\r\n  };\r\n\r\n  handleChangeForEachRow(userId, event) {\r\n    //var inputElement = event.target;\r\n    var userEnteredValue = parseFloat(event.target.value);\r\n    var userEnteredKeyUnique = event.target.name;\r\n    var totalDepositAmount = 0;\r\n    //console.log(inputElement.name + ': ' + inputElement.value);\r\n    const testData = [];\r\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n      let deposit = 0;\r\n      var xRowNetAmount = parseFloat(this.state.cartPackageList[i].net_amt);\r\n\r\n      if (i == userEnteredKeyUnique) {\r\n        if (userEnteredValue > xRowNetAmount) {\r\n          return;\r\n        }\r\n        deposit = userEnteredValue;\r\n        totalDepositAmount += parseFloat(deposit);\r\n      } else {\r\n        deposit = this.state.cartPackageList[i].deposit_amt;\r\n        totalDepositAmount += parseFloat(deposit);\r\n      }\r\n      testData.push({\r\n        id: this.state.cartPackageList[i].id,\r\n        description: this.state.cartPackageList[i].description,\r\n        qty: this.state.cartPackageList[i].qty,\r\n        deposit_amt: deposit,\r\n        net_amt: this.state.cartPackageList[i].net_amt,\r\n        auto: this.state.cartPackageList[i].auto,\r\n        hold_qty: 0,\r\n        itemcart: this.state.cartPackageList[i].itemcart,\r\n      });\r\n    }\r\n    this.setState({\r\n      cartPackageList: testData,\r\n      deposit: totalDepositAmount.toFixed(2),\r\n    });\r\n  }\r\n  handleDialog = async () => {\r\n    let { isOpenTreatmentDone } = this.state;\r\n\r\n    isOpenTreatmentDone = false;\r\n\r\n    await this.setState({\r\n      isOpenTreatmentDone,\r\n    });\r\n    this.getCartData();\r\n  };\r\n  handleTreatmentDone = async cartPackage => {\r\n    debugger;\r\n    await this.props.updateForm(\"Select_Package\", cartPackage.id);\r\n    await this.setState({\r\n      selectedData: cartPackage.id,\r\n      isOpenTreatmentDone: true,\r\n    });\r\n  };\r\n  render() {\r\n    let {\r\n      cartPackageList,\r\n      auto_deposit_new,\r\n      deposit,\r\n      net_deposit,\r\n      isOpenTreatmentDone,\r\n      TransactionHeader,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n\r\n    return (\r\n      <div className=\"row new-cart treatment-done\">\r\n        <div className=\"col-12\">\r\n          <p className=\"fs-18 font-700 mb-3 title\">{t(\"Package Details\")}</p>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\"></div>\r\n            <div className=\"col-md-2 col-12\">\r\n              <NormalCheckbox\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={() => this.handleCheck()}\r\n                label=\"Auto Deposit\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 col-12\">\r\n              <NormalInput\r\n                value={auto_deposit_new}\r\n                name=\"auto_deposit_new\"\r\n                className=\"customer-name w-100 h-100 text-right fs-24\"\r\n                onChange={this.handleChange_auto_deposit_new}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-12\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Start AutoMatch\"\r\n                disabled={!this.state.checked}\r\n                onClick={() => this.autoMatch()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 mt-3\">\r\n          <TableWrapper className=\"mb-3\" headerDetails={TransactionHeader}>\r\n            {cartPackageList && cartPackageList.length > 0 ? (\r\n              cartPackageList.map((cartPackage, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <div className=\"text-left\">{cartPackage.description}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-right\">{cartPackage.qty}</div>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <div className=\"text-center\">\r\n                        <input\r\n                          onChange={this.handleChangeForEachRow.bind(\r\n                            this,\r\n                            cartPackage.id\r\n                          )}\r\n                          name={index}\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          className=\"w-50 text-right\"\r\n                          value={cartPackage.deposit_amt}\r\n                          disabled={this.state.checked}\r\n                        />\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-right\">{cartPackage.net_amt}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"d-flex justifiy-content-center\">\r\n                        {cartPackage.is_td ? (\r\n                          <NormalButton\r\n                            mainbgrev={true}\r\n                            label=\"TD\"\r\n                            onClick={this.handleTreatmentDone.bind(\r\n                              this,\r\n                              cartPackage\r\n                            )}\r\n                            className=\"w-30\"\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"12\">\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    {t(\"No Data\")}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n\r\n            <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td>\r\n                <div className=\"\">\r\n                  <div className=\"text-center fw-700\">{t(\"Deposit\")}</div>\r\n                  <div className=\"fw-700\">\r\n                    <NormalInput\r\n                      value={deposit}\r\n                      disabled={true}\r\n                      className=\"text-right w-70\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div className=\"text-right\">\r\n                  <div className=\"text-center fw-700\">{t(\"Net Total\")}</div>\r\n                  <div className=\"fw-700\">\r\n                    <NormalInput\r\n                      value={net_deposit}\r\n                      disabled={true}\r\n                      className=\"text-right w-70\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </TableWrapper>\r\n        </div>\r\n\r\n        {/* <table className=\"table table-striped\">\r\n          <tr>\r\n            <td>Description</td>\r\n            <td>Qty</td>\r\n            <td>Deposit</td>\r\n            <td>Net Amount</td>\r\n          </tr>\r\n          {cartPackageList.map((cartPackage, index) => (\r\n            <tr key={index} style={{ cursor: \"pointer\" }}>\r\n              <td>{cartPackage.description}</td>\r\n              <td>{cartPackage.qty}</td>\r\n              <td>\r\n                <input\r\n                  onChange={this.handleChangeForEachRow.bind(\r\n                    this,\r\n                    cartPackage.id\r\n                  )}\r\n                  name={index}\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  className=\"w-50\"\r\n                  value={cartPackage.deposit_amt}\r\n                  disabled={this.state.checked}\r\n                />\r\n              </td>\r\n\r\n              <td className=\"d-flex align-items-center justify-content-center\">\r\n                {cartPackage.net_amt}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-8\"></div>\r\n            <div className=\"col-2\">\r\n              <Label>Deposit:</Label>\r\n              <NormalInput value={deposit} disabled={true} />\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <Label>Net Total:</Label>\r\n              <NormalInput value={net_deposit} disabled={true} />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div> */}\r\n\r\n        <div className=\"col-12\">\r\n          <div className=\"d-flex flex-wrap justify-content-center my-2\">\r\n            <div className=\"col-md-2 col-6\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Full Payment\"\r\n                onClick={() => this.fullPayment()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 col-6\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Clear Deposit\"\r\n                onClick={() => this.clear()}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-2 col-6\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                resetbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Cancel\"\r\n                onClick={() => this.handleCancel()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 col-6\">\r\n              <NormalButton\r\n                submitBtn={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Confirm\"\r\n                onClick={() => this.handleConfirm()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <NormalModal\r\n          className={\"transaction-done-modal\"}\r\n          style={{ minWidth: \"60%\" }}\r\n          modal={isOpenTreatmentDone}\r\n          handleModal={() => {}}\r\n        >\r\n          <img\r\n            onClick={this.handleDialog}\r\n            className=\"close cursor-pointer\"\r\n            src={closeIcon}\r\n            alt=\"\"\r\n          />\r\n\r\n          <PackageTreatmentDone\r\n            id={this.state.selectedData}\r\n            handleModal={this.handleDialog}\r\n          />\r\n        </NormalModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selected_cstomer: state.common.selected_cstomer,\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      // getCustomer,\r\n      getCommonApi,\r\n      updateForm,\r\n      commonUpdateApi,\r\n      commonCreateApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const PackageCart = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(PackageCartClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}