{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\cart\\\\package.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { NormalCheckbox, NormalInput, NormalButton } from \"component/common\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonUpdateApi, commonCreateApi } from \"redux/actions/common\";\nimport SimpleReactValidator from \"simple-react-validator\"; // import { Treatment, Payment, EditCart } from './cart/index';\n\nimport { Label } from \"reactstrap\";\nexport class PackageCartClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cartPackageList: [],\n      auto_deposit: \"\",\n      auto_deposit_new: \"\",\n      deposit: \"\",\n      net_deposit: \"\",\n      checked: true\n    };\n\n    this.componentWillMount = () => {\n      this.getCartData();\n    };\n\n    this.getCartData = () => {\n      this.props.getCommonApi(`pospackagedeposit/?cartid=${this.props.id}`).then(async key => {\n        let {\n          cartPackageList,\n          auto_deposit,\n          auto_deposit_new,\n          deposit,\n          net_deposit\n        } = this.state;\n        let {\n          data\n        } = key;\n        cartPackageList = data;\n        auto_deposit = key.auto_deposit;\n        auto_deposit_new = key.auto_deposit;\n        deposit = key.deposit;\n        net_deposit = key.net_deposit;\n        this.setState({\n          cartPackageList,\n          auto_deposit,\n          auto_deposit_new,\n          deposit,\n          net_deposit\n        });\n      });\n    };\n\n    this.autoMatch = () => {\n      const testData = [];\n      const original_number = this.state.net_deposit;\n      const net_deposit = this.state.net_deposit;\n      const new_number = this.state.auto_deposit_new;\n\n      if (parseFloat(new_number) > parseFloat(net_deposit)) {\n        alert(\"Entered amount should not greater than Net Amount\");\n        return;\n      }\n\n      let decrease = original_number - new_number;\n      let percentageOfDecrease = (decrease / original_number * 100).toFixed(2);\n      var depositAmount = 0;\n      var totalDepositAmount = 0;\n\n      for (var i = 0; i < this.state.cartPackageList.length; i++) {\n        var xRowNetAmount = this.state.cartPackageList[i].net_amt;\n        var xDecreasedRowAmount = (xRowNetAmount * percentageOfDecrease / 100).toFixed(2);\n        depositAmount = (xRowNetAmount - xDecreasedRowAmount).toFixed(2);\n        totalDepositAmount += parseFloat(depositAmount);\n\n        if (i == this.state.cartPackageList.length - 1) {\n          //Assign Difference value into last row\n          var difference = new_number - totalDepositAmount;\n          totalDepositAmount += difference;\n          depositAmount = parseFloat(depositAmount) + parseFloat(difference);\n        }\n\n        testData.push({\n          id: this.state.cartPackageList[i].id,\n          description: this.state.cartPackageList[i].description,\n          qty: this.state.cartPackageList[i].qty,\n          deposit_amt: parseFloat(depositAmount).toFixed(2),\n          net_amt: this.state.cartPackageList[i].net_amt,\n          auto: this.state.cartPackageList[i].auto,\n          hold_qty: 0,\n          itemcart: this.state.cartPackageList[i].itemcart\n        });\n      } //console.log(\"data\")\n\n\n      this.setState({\n        cartPackageList: testData,\n        deposit: totalDepositAmount.toFixed(2)\n      });\n    };\n\n    this.clear = () => {\n      this.fillCartDepositModifyData(\"Clear\");\n    };\n\n    this.fullPayment = () => {\n      this.fillCartDepositModifyData(\"Full\");\n    };\n\n    this.handleCancel = () => {\n      this.props.handleModal();\n    };\n\n    this.handleConfirm = () => {\n      let data = this.state.cartPackageList;\n      this.props.commonCreateApi(`pospackagedeposit/confirm/?cartid=${this.props.id}`, data).then(() => {\n        //console.log(\"succ\")\n        this.props.handleModal();\n      });\n    };\n\n    this.handleChange_auto_deposit_new = async ({\n      target: {\n        value\n      }\n    }) => {\n      let {\n        auto_deposit_new\n      } = this.state;\n      auto_deposit_new = value;\n      await this.setState({\n        auto_deposit_new\n      });\n    };\n\n    this.handleCheck = () => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n  }\n\n  fillCartDepositModifyData(xMode) {\n    let depositAmount;\n    var totalDepositAmount = 0;\n    const testData = [];\n\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\n      if (xMode == \"Clear\") {\n        depositAmount = 0;\n        totalDepositAmount += parseFloat(depositAmount);\n      } else if (xMode == \"Full\") {\n        depositAmount = this.state.cartPackageList[i].net_amt;\n        totalDepositAmount += parseFloat(depositAmount);\n      }\n\n      testData.push({\n        id: this.state.cartPackageList[i].id,\n        description: this.state.cartPackageList[i].description,\n        qty: this.state.cartPackageList[i].qty,\n        deposit_amt: depositAmount,\n        net_amt: this.state.cartPackageList[i].net_amt,\n        auto: this.state.cartPackageList[i].auto,\n        hold_qty: 0,\n        itemcart: this.state.cartPackageList[i].itemcart\n      });\n    }\n\n    this.setState({\n      cartPackageList: testData,\n      deposit: totalDepositAmount\n    });\n  }\n\n  handleChangeForEachRow(userId, event) {\n    //var inputElement = event.target;\n    var userEnteredValue = parseFloat(event.target.value);\n    var userEnteredKeyUnique = event.target.name;\n    var totalDepositAmount = 0; //console.log(inputElement.name + ': ' + inputElement.value);\n\n    const testData = [];\n\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\n      let deposit = 0;\n      var xRowNetAmount = parseFloat(this.state.cartPackageList[i].net_amt);\n\n      if (i == userEnteredKeyUnique) {\n        if (userEnteredValue > xRowNetAmount) {\n          return;\n        }\n\n        deposit = userEnteredValue;\n        totalDepositAmount += parseFloat(deposit);\n      } else {\n        deposit = this.state.cartPackageList[i].deposit_amt;\n        totalDepositAmount += parseFloat(deposit);\n      }\n\n      testData.push({\n        id: this.state.cartPackageList[i].id,\n        description: this.state.cartPackageList[i].description,\n        qty: this.state.cartPackageList[i].qty,\n        deposit_amt: deposit,\n        net_amt: this.state.cartPackageList[i].net_amt,\n        auto: this.state.cartPackageList[i].auto,\n        hold_qty: 0,\n        itemcart: this.state.cartPackageList[i].itemcart\n      });\n    }\n\n    this.setState({\n      cartPackageList: testData,\n      deposit: totalDepositAmount.toFixed(2)\n    });\n  }\n\n  render() {\n    let {\n      cartPackageList,\n      auto_deposit_new,\n      deposit,\n      net_deposit\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row new-cart treatment-done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 font-700 mb-3 title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, \"Package Details\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      type: \"checkbox\",\n      checked: this.state.checked,\n      onChange: () => this.handleCheck(),\n      label: \"Auto Deposit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: auto_deposit_new,\n      name: \"auto_deposit_new\",\n      className: \"customer-name w-100 h-100 text-right  fs-24\",\n      onChange: this.handleChange_auto_deposit_new,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Start AutoMatch\",\n      disabled: !this.state.checked,\n      onClick: () => this.autoMatch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, \"Qty\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, \"Deposit\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"Net Amount\")), cartPackageList.map((cartPackage, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, cartPackage.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, cartPackage.qty), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChangeForEachRow.bind(this, cartPackage.id),\n      name: index,\n      type: \"number\",\n      min: \"0\",\n      className: \"w-50\",\n      value: cartPackage.deposit_amt,\n      disabled: this.state.checked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, cartPackage.net_amt)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, \"Deposit:\"), /*#__PURE__*/React.createElement(NormalInput, {\n      value: deposit,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }\n    }, \"Net Total:\"), /*#__PURE__*/React.createElement(NormalInput, {\n      value: net_deposit,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Full Payment\",\n      onClick: () => this.fullPayment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Clear Deposit\",\n      onClick: () => this.clear(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Cancel\",\n      onClick: () => this.handleCancel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Confirm\",\n      onClick: () => this.handleConfirm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail,\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonUpdateApi,\n    commonCreateApi\n  }, dispatch);\n};\n\nexport const PackageCart = connect(mapStateToProps, mapDispatchToProps)(PackageCartClass);","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Cart/cart/package.js"],"names":["React","Component","NormalCheckbox","NormalInput","NormalButton","_","connect","bindActionCreators","getCommonApi","updateForm","commonUpdateApi","commonCreateApi","SimpleReactValidator","Label","PackageCartClass","state","cartPackageList","auto_deposit","auto_deposit_new","deposit","net_deposit","checked","componentWillMount","getCartData","props","id","then","key","data","setState","autoMatch","testData","original_number","new_number","parseFloat","alert","decrease","percentageOfDecrease","toFixed","depositAmount","totalDepositAmount","i","length","xRowNetAmount","net_amt","xDecreasedRowAmount","difference","push","description","qty","deposit_amt","auto","hold_qty","itemcart","clear","fillCartDepositModifyData","fullPayment","handleCancel","handleModal","handleConfirm","handleChange_auto_deposit_new","target","value","handleCheck","xMode","handleChangeForEachRow","userId","event","userEnteredValue","userEnteredKeyUnique","name","render","map","cartPackage","index","cursor","bind","mapStateToProps","selected_cstomer","common","basicApptDetail","appointment","tokenDetails","authStore","mapDispatchToProps","dispatch","PackageCart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport { NormalCheckbox, NormalInput, NormalButton } from \"component/common\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  updateForm,\r\n  commonUpdateApi,\r\n  commonCreateApi,\r\n} from \"redux/actions/common\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n// import { Treatment, Payment, EditCart } from './cart/index';\r\nimport { Label } from \"reactstrap\";\r\nexport class PackageCartClass extends Component {\r\n  state = {\r\n    cartPackageList: [],\r\n    auto_deposit: \"\",\r\n    auto_deposit_new: \"\",\r\n    deposit: \"\",\r\n    net_deposit: \"\",\r\n    checked: true,\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.getCartData();\r\n  };\r\n\r\n  getCartData = () => {\r\n    this.props\r\n      .getCommonApi(`pospackagedeposit/?cartid=${this.props.id}`)\r\n      .then(async key => {\r\n        let {\r\n          cartPackageList,\r\n          auto_deposit,\r\n          auto_deposit_new,\r\n          deposit,\r\n          net_deposit,\r\n        } = this.state;\r\n        let { data } = key;\r\n        cartPackageList = data;\r\n        auto_deposit = key.auto_deposit;\r\n        auto_deposit_new = key.auto_deposit;\r\n        deposit = key.deposit;\r\n        net_deposit = key.net_deposit;\r\n        this.setState({\r\n          cartPackageList,\r\n          auto_deposit,\r\n          auto_deposit_new,\r\n          deposit,\r\n          net_deposit,\r\n        });\r\n      });\r\n  };\r\n  autoMatch = () => {\r\n    const testData = [];\r\n    const original_number = this.state.net_deposit;\r\n    const net_deposit = this.state.net_deposit;\r\n    const new_number = this.state.auto_deposit_new;\r\n    if (parseFloat(new_number) > parseFloat(net_deposit)) {\r\n      alert(\"Entered amount should not greater than Net Amount\");\r\n      return;\r\n    }\r\n    let decrease = original_number - new_number;\r\n    let percentageOfDecrease = ((decrease / original_number) * 100).toFixed(2);\r\n    var depositAmount = 0;\r\n    var totalDepositAmount = 0;\r\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n      var xRowNetAmount = this.state.cartPackageList[i].net_amt;\r\n      var xDecreasedRowAmount = (\r\n        (xRowNetAmount * percentageOfDecrease) /\r\n        100\r\n      ).toFixed(2);\r\n      depositAmount = (xRowNetAmount - xDecreasedRowAmount).toFixed(2);\r\n      totalDepositAmount += parseFloat(depositAmount);\r\n      if (i == this.state.cartPackageList.length - 1) {\r\n        //Assign Difference value into last row\r\n        var difference = new_number - totalDepositAmount;\r\n        totalDepositAmount += difference;\r\n        depositAmount = parseFloat(depositAmount) + parseFloat(difference);\r\n      }\r\n      testData.push({\r\n        id: this.state.cartPackageList[i].id,\r\n        description: this.state.cartPackageList[i].description,\r\n        qty: this.state.cartPackageList[i].qty,\r\n        deposit_amt: parseFloat(depositAmount).toFixed(2),\r\n        net_amt: this.state.cartPackageList[i].net_amt,\r\n        auto: this.state.cartPackageList[i].auto,\r\n        hold_qty: 0,\r\n        itemcart: this.state.cartPackageList[i].itemcart,\r\n      });\r\n    }\r\n    //console.log(\"data\")\r\n    this.setState({\r\n      cartPackageList: testData,\r\n      deposit: totalDepositAmount.toFixed(2),\r\n    });\r\n  };\r\n  clear = () => {\r\n    this.fillCartDepositModifyData(\"Clear\");\r\n  };\r\n  fullPayment = () => {\r\n    this.fillCartDepositModifyData(\"Full\");\r\n  };\r\n  handleCancel = () => {\r\n    this.props.handleModal();\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    let data = this.state.cartPackageList;\r\n    this.props\r\n      .commonCreateApi(\r\n        `pospackagedeposit/confirm/?cartid=${this.props.id}`,\r\n        data\r\n      )\r\n      .then(() => {\r\n        //console.log(\"succ\")\r\n        this.props.handleModal();\r\n      });\r\n  };\r\n\r\n  fillCartDepositModifyData(xMode) {\r\n    let depositAmount;\r\n    var totalDepositAmount = 0;\r\n    const testData = [];\r\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n      if (xMode == \"Clear\") {\r\n        depositAmount = 0;\r\n        totalDepositAmount += parseFloat(depositAmount);\r\n      } else if (xMode == \"Full\") {\r\n        depositAmount = this.state.cartPackageList[i].net_amt;\r\n        totalDepositAmount += parseFloat(depositAmount);\r\n      }\r\n      testData.push({\r\n        id: this.state.cartPackageList[i].id,\r\n        description: this.state.cartPackageList[i].description,\r\n        qty: this.state.cartPackageList[i].qty,\r\n        deposit_amt: depositAmount,\r\n        net_amt: this.state.cartPackageList[i].net_amt,\r\n        auto: this.state.cartPackageList[i].auto,\r\n        hold_qty: 0,\r\n        itemcart: this.state.cartPackageList[i].itemcart,\r\n      });\r\n    }\r\n    this.setState({ cartPackageList: testData, deposit: totalDepositAmount });\r\n  }\r\n  handleChange_auto_deposit_new = async ({ target: { value } }) => {\r\n    let { auto_deposit_new } = this.state;\r\n    auto_deposit_new = value;\r\n    await this.setState({\r\n      auto_deposit_new,\r\n    });\r\n  };\r\n  handleCheck = () => {\r\n    this.setState({\r\n      checked: !this.state.checked,\r\n    });\r\n  };\r\n\r\n  handleChangeForEachRow(userId, event) {\r\n    //var inputElement = event.target;\r\n    var userEnteredValue = parseFloat(event.target.value);\r\n    var userEnteredKeyUnique = event.target.name;\r\n    var totalDepositAmount = 0;\r\n    //console.log(inputElement.name + ': ' + inputElement.value);\r\n    const testData = [];\r\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n      let deposit = 0;\r\n      var xRowNetAmount = parseFloat(this.state.cartPackageList[i].net_amt);\r\n\r\n      if (i == userEnteredKeyUnique) {\r\n        if (userEnteredValue > xRowNetAmount) {\r\n          return;\r\n        }\r\n        deposit = userEnteredValue;\r\n        totalDepositAmount += parseFloat(deposit);\r\n      } else {\r\n        deposit = this.state.cartPackageList[i].deposit_amt;\r\n        totalDepositAmount += parseFloat(deposit);\r\n      }\r\n      testData.push({\r\n        id: this.state.cartPackageList[i].id,\r\n        description: this.state.cartPackageList[i].description,\r\n        qty: this.state.cartPackageList[i].qty,\r\n        deposit_amt: deposit,\r\n        net_amt: this.state.cartPackageList[i].net_amt,\r\n        auto: this.state.cartPackageList[i].auto,\r\n        hold_qty: 0,\r\n        itemcart: this.state.cartPackageList[i].itemcart,\r\n      });\r\n    }\r\n    this.setState({\r\n      cartPackageList: testData,\r\n      deposit: totalDepositAmount.toFixed(2),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { cartPackageList, auto_deposit_new, deposit, net_deposit } =\r\n      this.state;\r\n\r\n    return (\r\n      <div className=\"row new-cart treatment-done\">\r\n        <div className=\"col-12\">\r\n          <p className=\"fs-18 font-700 mb-3 title\">Package Details</p>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3\"></div>\r\n            <div className=\"col-2\">\r\n              <NormalCheckbox\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={() => this.handleCheck()}\r\n                label=\"Auto Deposit\"\r\n              />\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <NormalInput\r\n                value={auto_deposit_new}\r\n                name=\"auto_deposit_new\"\r\n                className=\"customer-name w-100 h-100 text-right  fs-24\"\r\n                onChange={this.handleChange_auto_deposit_new}\r\n              />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Start AutoMatch\"\r\n                disabled={!this.state.checked}\r\n                onClick={() => this.autoMatch()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <table className=\"table table-striped\">\r\n          <tr>\r\n            <td>Description</td>\r\n            <td>Qty</td>\r\n            <td>Deposit</td>\r\n            <td>Net Amount</td>\r\n          </tr>\r\n          {cartPackageList.map((cartPackage, index) => (\r\n            <tr key={index} style={{ cursor: \"pointer\" }}>\r\n              <td>{cartPackage.description}</td>\r\n              <td>{cartPackage.qty}</td>\r\n              <td>\r\n                <input\r\n                  onChange={this.handleChangeForEachRow.bind(\r\n                    this,\r\n                    cartPackage.id\r\n                  )}\r\n                  name={index}\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  className=\"w-50\"\r\n                  value={cartPackage.deposit_amt}\r\n                  disabled={this.state.checked}\r\n                />\r\n              </td>\r\n\r\n              <td className=\"d-flex align-items-center justify-content-center\">\r\n                {cartPackage.net_amt}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-8\"></div>\r\n            <div className=\"col-2\">\r\n              <Label>Deposit:</Label>\r\n              <NormalInput value={deposit} disabled={true} />\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <Label>Net Total:</Label>\r\n              <NormalInput value={net_deposit} disabled={true} />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Full Payment\"\r\n                onClick={() => this.fullPayment()}\r\n              />\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Clear Deposit\"\r\n                onClick={() => this.clear()}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-2\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Cancel\"\r\n                onClick={() => this.handleCancel()}\r\n              />\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <NormalButton\r\n                buttonClass={\"treatment\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"Confirm\"\r\n                onClick={() => this.handleConfirm()}\r\n              />\r\n            </div>\r\n            <div className=\"col-4\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selected_cstomer: state.common.selected_cstomer,\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      // getCustomer,\r\n      getCommonApi,\r\n      updateForm,\r\n      commonUpdateApi,\r\n      commonCreateApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const PackageCart = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PackageCartClass);\r\n"]},"metadata":{},"sourceType":"module"}