{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/data_source.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _utils = require(\"../../data/data_source/utils\");\n\nvar _abstract_store = _interopRequireDefault(require(\"../../data/abstract_store\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _events_strategy = require(\"../../core/events_strategy\");\n\nvar _inflector = require(\"../../core/utils/inflector\");\n\nvar _local_store = require(\"./local_store\");\n\nvar _remote_store = _interopRequireDefault(require(\"./remote_store\"));\n\nvar _data_source = require(\"./data_source.utils\");\n\nvar _xmla_store = require(\"./xmla_store/xmla_store\");\n\nvar _uiPivot_grid = require(\"./ui.pivot_grid.summary_display_modes\");\n\nvar _uiPivot_grid2 = require(\"./ui.pivot_grid.utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DESCRIPTION_NAME_BY_AREA = {\n  row: \"rows\",\n  column: \"columns\",\n  data: \"values\",\n  filter: \"filters\"\n};\nvar STATE_PROPERTIES = [\"area\", \"areaIndex\", \"sortOrder\", \"filterType\", \"filterValues\", \"sortBy\", \"sortBySummaryField\", \"sortBySummaryPath\", \"expanded\", \"summaryType\", \"summaryDisplayMode\"];\nvar CALCULATED_PROPERTIES = [\"format\", \"selector\", \"customizeText\", \"caption\"];\nvar ALL_CALCULATED_PROPERTIES = CALCULATED_PROPERTIES.concat([\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"]);\n\nfunction createCaption(field) {\n  var caption = field.dataField || field.groupName || \"\";\n  var summaryType = (field.summaryType || \"\").toLowerCase();\n\n  if ((0, _type.isString)(field.groupInterval)) {\n    caption += \"_\" + field.groupInterval;\n  }\n\n  if (summaryType && \"custom\" !== summaryType) {\n    summaryType = summaryType.replace(/^./, summaryType[0].toUpperCase());\n\n    if (caption.length) {\n      summaryType = \" (\" + summaryType + \")\";\n    }\n  } else {\n    summaryType = \"\";\n  }\n\n  return (0, _inflector.titleize)(caption) + summaryType;\n}\n\nfunction resetFieldState(field, properties) {\n  var initialProperties = field._initProperties || {};\n  (0, _iterator.each)(properties, function (_, prop) {\n    if (Object.prototype.hasOwnProperty.call(initialProperties, prop)) {\n      field[prop] = initialProperties[prop];\n    }\n  });\n}\n\nfunction updateCalculatedFieldProperties(field, calculatedProperties) {\n  resetFieldState(field, calculatedProperties);\n\n  if (!(0, _type.isDefined)(field.caption)) {\n    (0, _uiPivot_grid2.setFieldProperty)(field, \"caption\", createCaption(field));\n  }\n}\n\nfunction areExpressionsUsed(dataFields) {\n  return dataFields.some(function (field) {\n    return field.summaryDisplayMode || field.calculateSummaryValue;\n  });\n}\n\nfunction isRunningTotalUsed(dataFields) {\n  return dataFields.some(function (field) {\n    return !!field.runningTotal;\n  });\n}\n\nfunction isDataExists(data) {\n  return data.rows.length || data.columns.length || data.values.length;\n}\n\nvar _default = _class.default.inherit(function () {\n  var findHeaderItem = function (headerItems, path) {\n    if (headerItems._cacheByPath) {\n      return headerItems._cacheByPath[path.join(\".\")] || null;\n    }\n  };\n\n  var getHeaderItemsLastIndex = function getHeaderItemsLastIndex(headerItems, grandTotalIndex) {\n    var i;\n    var lastIndex = -1;\n    var headerItem;\n\n    if (headerItems) {\n      for (i = 0; i < headerItems.length; i++) {\n        headerItem = headerItems[i];\n\n        if (void 0 !== headerItem.index) {\n          lastIndex = Math.max(lastIndex, headerItem.index);\n        }\n\n        if (headerItem.children) {\n          lastIndex = Math.max(lastIndex, getHeaderItemsLastIndex(headerItem.children));\n        } else {\n          if (headerItem.collapsedChildren) {\n            lastIndex = Math.max(lastIndex, getHeaderItemsLastIndex(headerItem.collapsedChildren));\n          }\n        }\n      }\n    }\n\n    if ((0, _type.isDefined)(grandTotalIndex)) {\n      lastIndex = Math.max(lastIndex, grandTotalIndex);\n    }\n\n    return lastIndex;\n  };\n\n  var updateHeaderItemChildren = function (headerItems, headerItem, children, grandTotalIndex) {\n    var applyingHeaderItemsCount = getHeaderItemsLastIndex(children) + 1;\n    var emptyIndex = getHeaderItemsLastIndex(headerItems, grandTotalIndex) + 1;\n    var index;\n    var applyingItemIndexesToCurrent = [];\n    var needIndexUpdate = false;\n    var d = new _deferred.Deferred();\n\n    if (headerItem.children && headerItem.children.length === children.length) {\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n\n        if (void 0 !== child.index) {\n          if (void 0 === headerItem.children[i].index) {\n            child.index = applyingItemIndexesToCurrent[child.index] = emptyIndex++;\n            headerItem.children[i] = child;\n          } else {\n            applyingItemIndexesToCurrent[child.index] = headerItem.children[i].index;\n          }\n        }\n      }\n    } else {\n      needIndexUpdate = true;\n\n      for (index = 0; index < applyingHeaderItemsCount; index++) {\n        applyingItemIndexesToCurrent[index] = emptyIndex++;\n      }\n\n      headerItem.children = children;\n    }\n\n    (0, _deferred.when)((0, _uiPivot_grid2.foreachTreeAsync)(headerItem.children, function (items) {\n      if (needIndexUpdate) {\n        items[0].index = applyingItemIndexesToCurrent[items[0].index];\n      }\n    })).done(function () {\n      d.resolve(applyingItemIndexesToCurrent);\n    });\n    return d;\n  };\n\n  var updateHeaderItems = function (headerItems, newHeaderItems, grandTotalIndex) {\n    var d = new _deferred.Deferred();\n    var emptyIndex = grandTotalIndex >= 0 && getHeaderItemsLastIndex(headerItems, grandTotalIndex) + 1;\n    var applyingItemIndexesToCurrent = [];\n    (0, _deferred.when)((0, _uiPivot_grid2.foreachTreeAsync)(headerItems, function (items) {\n      delete items[0].collapsedChildren;\n    })).done(function () {\n      (0, _deferred.when)((0, _uiPivot_grid2.foreachTreeAsync)(newHeaderItems, function (newItems, index) {\n        var newItem = newItems[0];\n\n        if (newItem.index >= 0) {\n          var headerItem = findHeaderItem(headerItems, (0, _uiPivot_grid2.createPath)(newItems));\n\n          if (headerItem && headerItem.index >= 0) {\n            applyingItemIndexesToCurrent[newItem.index] = headerItem.index;\n          } else {\n            if (emptyIndex) {\n              var path = (0, _uiPivot_grid2.createPath)(newItems.slice(1));\n              headerItem = findHeaderItem(headerItems, path);\n              var parentItems = path.length ? headerItem && headerItem.children : headerItems;\n\n              if (parentItems) {\n                parentItems[index] = newItem;\n                newItem.index = applyingItemIndexesToCurrent[newItem.index] = emptyIndex++;\n              }\n            }\n          }\n        }\n      })).done(function () {\n        d.resolve(applyingItemIndexesToCurrent);\n      });\n    });\n    return d;\n  };\n\n  var updateDataSourceCells = function (dataSource, newDataSourceCells, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\n    var newRowIndex;\n    var newColumnIndex;\n    var newRowCells;\n    var newCell;\n    var rowIndex;\n    var columnIndex;\n    var dataSourceCells = dataSource.values;\n\n    if (newDataSourceCells) {\n      for (newRowIndex = 0; newRowIndex <= newDataSourceCells.length; newRowIndex++) {\n        newRowCells = newDataSourceCells[newRowIndex];\n        rowIndex = newRowItemIndexesToCurrent[newRowIndex];\n\n        if (!(0, _type.isDefined)(rowIndex)) {\n          rowIndex = dataSource.grandTotalRowIndex;\n        }\n\n        if (newRowCells && (0, _type.isDefined)(rowIndex)) {\n          if (!dataSourceCells[rowIndex]) {\n            dataSourceCells[rowIndex] = [];\n          }\n\n          for (newColumnIndex = 0; newColumnIndex <= newRowCells.length; newColumnIndex++) {\n            newCell = newRowCells[newColumnIndex];\n            columnIndex = newColumnItemIndexesToCurrent[newColumnIndex];\n\n            if (!(0, _type.isDefined)(columnIndex)) {\n              columnIndex = dataSource.grandTotalColumnIndex;\n            }\n\n            if ((0, _type.isDefined)(newCell) && (0, _type.isDefined)(columnIndex)) {\n              dataSourceCells[rowIndex][columnIndex] = newCell;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function createLocalOrRemoteStore(dataSourceOptions, notifyProgress) {\n    var StoreConstructor = dataSourceOptions.remoteOperations || dataSourceOptions.paginate ? _remote_store.default : _local_store.LocalStore;\n    return new StoreConstructor((0, _extend.extend)((0, _utils.normalizeDataSourceOptions)(dataSourceOptions), {\n      onChanged: null,\n      onLoadingChanged: null,\n      onProgressChanged: notifyProgress\n    }));\n  }\n\n  function createStore(dataSourceOptions, notifyProgress) {\n    var store;\n    var storeOptions;\n\n    if ((0, _type.isPlainObject)(dataSourceOptions) && dataSourceOptions.load) {\n      store = createLocalOrRemoteStore(dataSourceOptions, notifyProgress);\n    } else {\n      if (dataSourceOptions && !dataSourceOptions.store) {\n        dataSourceOptions = {\n          store: dataSourceOptions\n        };\n      }\n\n      storeOptions = dataSourceOptions.store;\n\n      if (\"xmla\" === storeOptions.type) {\n        store = new _xmla_store.XmlaStore(storeOptions);\n      } else {\n        if ((0, _type.isPlainObject)(storeOptions) && storeOptions.type || storeOptions instanceof _abstract_store.default || Array.isArray(storeOptions)) {\n          store = createLocalOrRemoteStore(dataSourceOptions, notifyProgress);\n        } else {\n          if (storeOptions instanceof _class.default) {\n            store = storeOptions;\n          }\n        }\n      }\n    }\n\n    return store;\n  }\n\n  function equalFields(fields, prevFields, count) {\n    for (var i = 0; i < count; i++) {\n      if (!fields[i] || !prevFields[i] || fields[i].index !== prevFields[i].index) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getExpandedPaths(dataSource, loadOptions, dimensionName, prevLoadOptions) {\n    var result = [];\n    var fields = loadOptions && loadOptions[dimensionName] || [];\n    var prevFields = prevLoadOptions && prevLoadOptions[dimensionName] || [];\n    (0, _uiPivot_grid2.foreachTree)(dataSource[dimensionName], function (items) {\n      var item = items[0];\n      var path = (0, _uiPivot_grid2.createPath)(items);\n\n      if (item.children && fields[path.length - 1] && !fields[path.length - 1].expanded) {\n        if (path.length < fields.length && (!prevLoadOptions || equalFields(fields, prevFields, path.length))) {\n          result.push(path.slice());\n        }\n      }\n    }, true);\n    return result;\n  }\n\n  function setFieldProperties(field, srcField, skipInitPropertySave, properties) {\n    if (srcField) {\n      (0, _iterator.each)(properties, function (_, name) {\n        if (skipInitPropertySave) {\n          field[name] = srcField[name];\n        } else {\n          if ((\"summaryType\" === name || \"summaryDisplayMode\" === name) && void 0 === srcField[name]) {\n            return;\n          }\n\n          (0, _uiPivot_grid2.setFieldProperty)(field, name, srcField[name]);\n        }\n      });\n    } else {\n      resetFieldState(field, properties);\n    }\n\n    return field;\n  }\n\n  function getFieldsState(fields, properties) {\n    var result = [];\n    (0, _iterator.each)(fields, function (_, field) {\n      result.push(setFieldProperties({\n        dataField: field.dataField,\n        name: field.name\n      }, field, true, properties));\n    });\n    return result;\n  }\n\n  function getFieldStateId(field) {\n    if (field.name) {\n      return field.name;\n    }\n\n    return field.dataField + \"\";\n  }\n\n  function getFieldsById(fields, id) {\n    var result = [];\n    (0, _iterator.each)(fields || [], function (_, field) {\n      if (getFieldStateId(field) === id) {\n        result.push(field);\n      }\n    });\n    return result;\n  }\n\n  function setFieldsStateCore(stateFields, fields) {\n    stateFields = stateFields || [];\n    (0, _iterator.each)(fields, function (index, field) {\n      setFieldProperties(field, stateFields[index], false, STATE_PROPERTIES);\n      updateCalculatedFieldProperties(field, CALCULATED_PROPERTIES);\n    });\n    return fields;\n  }\n\n  function setFieldsState(stateFields, fields) {\n    stateFields = stateFields || [];\n    var fieldsById = {};\n    var id;\n    (0, _iterator.each)(fields, function (_, field) {\n      id = getFieldStateId(field);\n\n      if (!fieldsById[id]) {\n        fieldsById[id] = getFieldsById(fields, getFieldStateId(field));\n      }\n    });\n    (0, _iterator.each)(fieldsById, function (id, fields) {\n      setFieldsStateCore(getFieldsById(stateFields, id), fields);\n    });\n    return fields;\n  }\n\n  function getFieldsByGroup(fields, groupingField) {\n    return fields.filter(function (field) {\n      return field.groupName === groupingField.groupName && (0, _type.isNumeric)(field.groupIndex) && false !== field.visible;\n    }).map(function (field) {\n      return (0, _extend.extend)(field, {\n        areaIndex: groupingField.areaIndex,\n        area: groupingField.area,\n        expanded: (0, _type.isDefined)(field.expanded) ? field.expanded : groupingField.expanded,\n        dataField: field.dataField || groupingField.dataField,\n        dataType: field.dataType || groupingField.dataType,\n        sortBy: field.sortBy || groupingField.sortBy,\n        sortOrder: field.sortOrder || groupingField.sortOrder,\n        sortBySummaryField: field.sortBySummaryField || groupingField.sortBySummaryField,\n        sortBySummaryPath: field.sortBySummaryPath || groupingField.sortBySummaryPath,\n        visible: field.visible || groupingField.visible,\n        showTotals: (0, _type.isDefined)(field.showTotals) ? field.showTotals : groupingField.showTotals,\n        showGrandTotals: (0, _type.isDefined)(field.showGrandTotals) ? field.showGrandTotals : groupingField.showGrandTotals\n      });\n    }).sort(function (a, b) {\n      return a.groupIndex - b.groupIndex;\n    });\n  }\n\n  function sortFieldsByAreaIndex(fields) {\n    fields.sort(function (field1, field2) {\n      return field1.areaIndex - field2.areaIndex || field1.groupIndex - field2.groupIndex;\n    });\n  }\n\n  function isAreaField(field, area) {\n    var canAddFieldInArea = \"data\" === area || false !== field.visible;\n    return field.area === area && !(0, _type.isDefined)(field.groupIndex) && canAddFieldInArea;\n  }\n\n  function getFieldId(field, retrieveFieldsOptionValue) {\n    var groupName = field.groupName || \"\";\n    return (field.dataField || groupName) + (field.groupInterval ? groupName + field.groupInterval : \"NOGROUP\") + (retrieveFieldsOptionValue ? \"\" : groupName);\n  }\n\n  function mergeFields(fields, storeFields, retrieveFieldsOptionValue) {\n    var result = [];\n    var fieldsDictionary = {};\n    var removedFields = {};\n    var mergedGroups = [];\n    var dataTypes = (0, _uiPivot_grid2.getFieldsDataType)(fields);\n\n    if (storeFields) {\n      (0, _iterator.each)(storeFields, function (_, field) {\n        fieldsDictionary[getFieldId(field, retrieveFieldsOptionValue)] = field;\n      });\n      (0, _iterator.each)(fields, function (_, field) {\n        var fieldKey = getFieldId(field, retrieveFieldsOptionValue);\n        var storeField = fieldsDictionary[fieldKey] || removedFields[fieldKey];\n        var mergedField;\n\n        if (storeField) {\n          if (storeField._initProperties) {\n            resetFieldState(storeField, ALL_CALCULATED_PROPERTIES);\n          }\n\n          mergedField = (0, _extend.extend)({}, storeField, field, {\n            _initProperties: null\n          });\n        } else {\n          fieldsDictionary[fieldKey] = mergedField = field;\n        }\n\n        (0, _extend.extend)(mergedField, {\n          dataType: dataTypes[field.dataField]\n        });\n        delete fieldsDictionary[fieldKey];\n        removedFields[fieldKey] = storeField;\n        result.push(mergedField);\n      });\n\n      if (retrieveFieldsOptionValue) {\n        (0, _iterator.each)(fieldsDictionary, function (_, field) {\n          result.push(field);\n        });\n      }\n    } else {\n      result = fields;\n    }\n\n    result.push.apply(result, mergedGroups);\n    assignGroupIndexes(result);\n    return result;\n  }\n\n  function assignGroupIndexes(fields) {\n    fields.forEach(function (field) {\n      if (field.groupName && field.groupInterval && void 0 === field.groupIndex) {\n        var maxGroupIndex = fields.filter(function (f) {\n          return f.groupName === field.groupName && (0, _type.isNumeric)(f.groupIndex);\n        }).map(function (f) {\n          return f.groupIndex;\n        }).reduce(function (prev, current) {\n          return Math.max(prev, current);\n        }, -1);\n        field.groupIndex = maxGroupIndex + 1;\n      }\n    });\n  }\n\n  function getFields(that) {\n    var result = new _deferred.Deferred();\n    var store = that._store;\n    var storeFields = store && store.getFields(that._fields);\n    var mergedFields;\n    (0, _deferred.when)(storeFields).done(function (storeFields) {\n      that._storeFields = storeFields;\n      mergedFields = mergeFields(that._fields, storeFields, that._retrieveFields);\n      result.resolve(mergedFields);\n    }).fail(result.reject);\n    return result;\n  }\n\n  function formatHeaderItems(data, loadOptions, headerName) {\n    return (0, _uiPivot_grid2.foreachTreeAsync)(data[headerName], function (items) {\n      var item = items[0];\n      item.text = item.text || (0, _uiPivot_grid2.formatValue)(item.value, loadOptions[headerName][(0, _uiPivot_grid2.createPath)(items).length - 1]);\n    });\n  }\n\n  function formatHeaders(loadOptions, data) {\n    return (0, _deferred.when)(formatHeaderItems(data, loadOptions, \"columns\"), formatHeaderItems(data, loadOptions, \"rows\"));\n  }\n\n  function updateCache(headerItems) {\n    var d = new _deferred.Deferred();\n    var cacheByPath = {};\n    (0, _deferred.when)((0, _uiPivot_grid2.foreachTreeAsync)(headerItems, function (items) {\n      var path = (0, _uiPivot_grid2.createPath)(items).join(\".\");\n      cacheByPath[path] = items[0];\n    })).done(d.resolve);\n    headerItems._cacheByPath = cacheByPath;\n    return d;\n  }\n\n  function _getAreaFields(fields, area) {\n    var areaFields = [];\n    (0, _iterator.each)(fields, function () {\n      if (isAreaField(this, area)) {\n        areaFields.push(this);\n      }\n    });\n    return areaFields;\n  }\n\n  return {\n    ctor: function (options) {\n      options = options || {};\n      this._eventsStrategy = new _events_strategy.EventsStrategy(this);\n      var that = this;\n      var store = createStore(options, function (progress) {\n        that._eventsStrategy.fireEvent(\"progressChanged\", [progress]);\n      });\n      that._store = store;\n      that._paginate = !!options.paginate;\n      that._pageSize = options.pageSize || 40;\n      that._data = {\n        rows: [],\n        columns: [],\n        values: []\n      };\n      that._loadingCount = 0;\n      that._isFieldsModified = false;\n      (0, _iterator.each)([\"changed\", \"loadError\", \"loadingChanged\", \"progressChanged\", \"fieldsPrepared\", \"expandValueChanging\"], function (_, eventName) {\n        var optionName = \"on\" + eventName[0].toUpperCase() + eventName.slice(1);\n\n        if (Object.prototype.hasOwnProperty.call(options, optionName)) {\n          this.on(eventName, options[optionName]);\n        }\n      }.bind(this));\n      that._retrieveFields = (0, _type.isDefined)(options.retrieveFields) ? options.retrieveFields : true;\n      that._fields = options.fields || [];\n      that._descriptions = options.descriptions ? (0, _extend.extend)(that._createDescriptions(), options.descriptions) : void 0;\n\n      if (!store) {\n        (0, _extend.extend)(true, that._data, options.store || options);\n      }\n    },\n    getData: function () {\n      return this._data;\n    },\n    getAreaFields: function (area, collectGroups) {\n      var areaFields = [];\n      var descriptions;\n\n      if (collectGroups || \"data\" === area) {\n        areaFields = _getAreaFields(this._fields, area);\n        sortFieldsByAreaIndex(areaFields);\n      } else {\n        descriptions = this._descriptions || {};\n        areaFields = descriptions[DESCRIPTION_NAME_BY_AREA[area]] || [];\n      }\n\n      return areaFields;\n    },\n    fields: function (_fields) {\n      var that = this;\n\n      if (_fields) {\n        that._fields = mergeFields(_fields, that._storeFields, that._retrieveFields);\n\n        that._fieldsPrepared(that._fields);\n      }\n\n      return that._fields;\n    },\n    field: function field(id, options) {\n      var that = this;\n      var fields = that._fields;\n      var field = fields && fields[(0, _type.isNumeric)(id) ? id : (0, _uiPivot_grid2.findField)(fields, id)];\n      var levels;\n\n      if (field && options) {\n        (0, _iterator.each)(options, function (optionName, optionValue) {\n          var isInitialization = (0, _array.inArray)(optionName, STATE_PROPERTIES) < 0;\n          (0, _uiPivot_grid2.setFieldProperty)(field, optionName, optionValue, isInitialization);\n\n          if (\"sortOrder\" === optionName) {\n            levels = field.levels || [];\n\n            for (var i = 0; i < levels.length; i++) {\n              levels[i][optionName] = optionValue;\n            }\n          }\n        });\n        updateCalculatedFieldProperties(field, CALCULATED_PROPERTIES);\n        that._descriptions = that._createDescriptions(field);\n        that._isFieldsModified = true;\n\n        that._eventsStrategy.fireEvent(\"fieldChanged\", [field]);\n      }\n\n      return field;\n    },\n    getFieldValues: function (index, applyFilters, options) {\n      var that = this;\n      var field = this._fields && this._fields[index];\n      var store = this.store();\n      var loadFields = [];\n      var loadOptions = {\n        columns: loadFields,\n        rows: [],\n        values: this.getAreaFields(\"data\"),\n        filters: applyFilters ? this._fields.filter(function (f) {\n          return f !== field && f.area && f.filterValues && f.filterValues.length;\n        }) : [],\n        skipValues: true\n      };\n      var searchValue;\n      var d = new _deferred.Deferred();\n\n      if (options) {\n        searchValue = options.searchValue;\n        loadOptions.columnSkip = options.skip;\n        loadOptions.columnTake = options.take;\n      }\n\n      if (field && store) {\n        (0, _iterator.each)(field.levels || [field], function () {\n          loadFields.push((0, _extend.extend)({}, this, {\n            expanded: true,\n            filterValues: null,\n            sortOrder: \"asc\",\n            sortBySummaryField: null,\n            searchValue: searchValue\n          }));\n        });\n        store.load(loadOptions).done(function (data) {\n          if (loadOptions.columnSkip) {\n            data.columns = data.columns.slice(loadOptions.columnSkip);\n          }\n\n          if (loadOptions.columnTake) {\n            data.columns = data.columns.slice(0, loadOptions.columnTake);\n          }\n\n          formatHeaders(loadOptions, data);\n\n          if (!loadOptions.columnTake) {\n            that._sort(loadOptions, data);\n          }\n\n          d.resolve(data.columns);\n        }).fail(d);\n      } else {\n        d.reject();\n      }\n\n      return d;\n    },\n    reload: function () {\n      return this.load({\n        reload: true\n      });\n    },\n    filter: function () {\n      var store = this._store;\n      return store.filter.apply(store, arguments);\n    },\n    load: function (options) {\n      var that = this;\n      var d = new _deferred.Deferred();\n      options = options || {};\n      that.beginLoading();\n      d.fail(function (e) {\n        that._eventsStrategy.fireEvent(\"loadError\", [e]);\n      }).always(function () {\n        that.endLoading();\n      });\n\n      function loadTask() {\n        that._delayedLoadTask = void 0;\n\n        if (!that._descriptions) {\n          (0, _deferred.when)(getFields(that)).done(function (fields) {\n            that._fieldsPrepared(fields);\n\n            that._loadCore(options, d);\n          }).fail(d.reject).fail(that._loadErrorHandler);\n        } else {\n          that._loadCore(options, d);\n        }\n      }\n\n      if (that.store()) {\n        that._delayedLoadTask = (0, _common.executeAsync)(loadTask);\n      } else {\n        loadTask();\n      }\n\n      return d;\n    },\n    createDrillDownDataSource: function (params) {\n      return this._store.createDrillDownDataSource(this._descriptions, params);\n    },\n    _createDescriptions: function (currentField) {\n      var that = this;\n      var fields = that.fields();\n      var descriptions = {\n        rows: [],\n        columns: [],\n        values: [],\n        filters: []\n      };\n      (0, _iterator.each)([\"row\", \"column\", \"data\", \"filter\"], function (_, areaName) {\n        (0, _array.normalizeIndexes)(_getAreaFields(fields, areaName), \"areaIndex\", currentField);\n      });\n      (0, _iterator.each)(fields || [], function (_, field) {\n        var descriptionName = DESCRIPTION_NAME_BY_AREA[field.area];\n        var dimension = descriptions[descriptionName];\n        var groupName = field.groupName;\n\n        if (groupName && !(0, _type.isNumeric)(field.groupIndex)) {\n          field.levels = getFieldsByGroup(fields, field);\n        }\n\n        if (!dimension || groupName && (0, _type.isNumeric)(field.groupIndex) || false === field.visible && \"data\" !== field.area && \"filter\" !== field.area) {\n          return;\n        }\n\n        if (field.levels && dimension !== descriptions.filters && dimension !== descriptions.values) {\n          dimension.push.apply(dimension, field.levels);\n\n          if (field.filterValues && field.filterValues.length) {\n            descriptions.filters.push(field);\n          }\n        } else {\n          dimension.push(field);\n        }\n      });\n      (0, _iterator.each)(descriptions, function (_, fields) {\n        sortFieldsByAreaIndex(fields);\n      });\n      var indices = {};\n      (0, _iterator.each)(descriptions.values, function (_, field) {\n        var expression = field.calculateSummaryValue;\n\n        if ((0, _type.isFunction)(expression)) {\n          var summaryCell = (0, _uiPivot_grid.createMockSummaryCell)(descriptions, fields, indices);\n          expression(summaryCell);\n        }\n      });\n      return descriptions;\n    },\n    _fieldsPrepared: function (fields) {\n      var that = this;\n      that._fields = fields;\n      (0, _iterator.each)(fields, function (index, field) {\n        field.index = index;\n        updateCalculatedFieldProperties(field, ALL_CALCULATED_PROPERTIES);\n      });\n      var currentFieldState = getFieldsState(fields, [\"caption\"]);\n\n      that._eventsStrategy.fireEvent(\"fieldsPrepared\", [fields]);\n\n      for (var i = 0; i < fields.length; i++) {\n        if (fields[i].caption !== currentFieldState[i].caption) {\n          (0, _uiPivot_grid2.setFieldProperty)(fields[i], \"caption\", fields[i].caption, true);\n        }\n      }\n\n      that._descriptions = that._createDescriptions();\n    },\n    isLoading: function () {\n      return this._loadingCount > 0;\n    },\n    state: function (_state, skipLoading) {\n      var that = this;\n\n      if (arguments.length) {\n        _state = (0, _extend.extend)({\n          rowExpandedPaths: [],\n          columnExpandedPaths: []\n        }, _state);\n\n        if (!that._descriptions) {\n          that.beginLoading();\n          (0, _deferred.when)(getFields(that)).done(function (fields) {\n            that._fields = setFieldsState(_state.fields, fields);\n\n            that._fieldsPrepared(fields);\n\n            !skipLoading && that.load(_state);\n          }).always(function () {\n            that.endLoading();\n          });\n        } else {\n          that._fields = setFieldsState(_state.fields, that._fields);\n          that._descriptions = that._createDescriptions();\n          !skipLoading && that.load(_state);\n        }\n      } else {\n        return {\n          fields: getFieldsState(that._fields, STATE_PROPERTIES),\n          columnExpandedPaths: getExpandedPaths(that._data, that._descriptions, \"columns\", that._lastLoadOptions),\n          rowExpandedPaths: getExpandedPaths(that._data, that._descriptions, \"rows\", that._lastLoadOptions)\n        };\n      }\n    },\n    beginLoading: function () {\n      this._changeLoadingCount(1);\n    },\n    endLoading: function () {\n      this._changeLoadingCount(-1);\n    },\n    _changeLoadingCount: function (increment) {\n      var oldLoading = this.isLoading();\n      this._loadingCount += increment;\n      var newLoading = this.isLoading();\n\n      if (oldLoading ^ newLoading) {\n        this._eventsStrategy.fireEvent(\"loadingChanged\", [newLoading]);\n      }\n    },\n    _hasPagingValues: function (options, area, oppositeIndex) {\n      var takeField = area + \"Take\";\n      var skipField = area + \"Skip\";\n      var values = this._data.values;\n      var items = this._data[area + \"s\"];\n      var oppositeArea = \"row\" === area ? \"column\" : \"row\";\n      var indices = [];\n\n      if (options.path && options.area === area) {\n        var headerItem = findHeaderItem(items, options.path);\n        items = headerItem && headerItem.children;\n\n        if (!items) {\n          return false;\n        }\n      }\n\n      if (options.oppositePath && options.area === oppositeArea) {\n        var _headerItem = findHeaderItem(items, options.oppositePath);\n\n        items = _headerItem && _headerItem.children;\n\n        if (!items) {\n          return false;\n        }\n      }\n\n      for (var i = options[skipField]; i < options[skipField] + options[takeField]; i++) {\n        if (items[i]) {\n          indices.push(items[i].index);\n        }\n      }\n\n      return indices.every(function (index) {\n        if (void 0 !== index) {\n          if (\"row\" === area) {\n            return (values[index] || [])[oppositeIndex];\n          } else {\n            return (values[oppositeIndex] || [])[index];\n          }\n        }\n      });\n    },\n    _processPagingCacheByArea: function (options, pageSize, area) {\n      var takeField = area + \"Take\";\n      var skipField = area + \"Skip\";\n      var items = this._data[area + \"s\"];\n      var oppositeArea = \"row\" === area ? \"column\" : \"row\";\n      var item;\n\n      if (options[takeField]) {\n        if (options.path && options.area === area) {\n          var headerItem = findHeaderItem(items, options.path);\n          items = headerItem && headerItem.children || [];\n        }\n\n        if (options.oppositePath && options.area === oppositeArea) {\n          var _headerItem2 = findHeaderItem(items, options.oppositePath);\n\n          items = _headerItem2 && _headerItem2.children || [];\n        }\n\n        do {\n          item = items[options[skipField]];\n\n          if (item && void 0 !== item.index) {\n            if (this._hasPagingValues(options, oppositeArea, item.index)) {\n              options[skipField]++;\n              options[takeField]--;\n            } else {\n              break;\n            }\n          }\n        } while (item && void 0 !== item.index && options[takeField]);\n\n        if (options[takeField]) {\n          var start = Math.floor(options[skipField] / pageSize) * pageSize;\n          var end = Math.ceil((options[skipField] + options[takeField]) / pageSize) * pageSize;\n          options[skipField] = start;\n          options[takeField] = end - start;\n        }\n      }\n    },\n    _processPagingCache: function (storeLoadOptions) {\n      var pageSize = this._pageSize;\n\n      if (pageSize < 0) {\n        return;\n      }\n\n      for (var i = 0; i < storeLoadOptions.length; i++) {\n        this._processPagingCacheByArea(storeLoadOptions[i], pageSize, \"row\");\n\n        this._processPagingCacheByArea(storeLoadOptions[i], pageSize, \"column\");\n      }\n    },\n    _loadCore: function (options, deferred) {\n      var that = this;\n      var store = this._store;\n      var descriptions = this._descriptions;\n\n      var reload = options.reload || this.paginate() && that._isFieldsModified;\n\n      var paginate = this.paginate();\n      var headerName = DESCRIPTION_NAME_BY_AREA[options.area];\n      options = options || {};\n\n      if (store) {\n        (0, _extend.extend)(options, descriptions);\n        options.columnExpandedPaths = options.columnExpandedPaths || getExpandedPaths(this._data, options, \"columns\", that._lastLoadOptions);\n        options.rowExpandedPaths = options.rowExpandedPaths || getExpandedPaths(this._data, options, \"rows\", that._lastLoadOptions);\n\n        if (paginate) {\n          options.pageSize = this._pageSize;\n        }\n\n        if (headerName) {\n          options.headerName = headerName;\n        }\n\n        that.beginLoading();\n        deferred.always(function () {\n          that.endLoading();\n        });\n        var storeLoadOptions = [options];\n\n        that._eventsStrategy.fireEvent(\"customizeStoreLoadOptions\", [storeLoadOptions, reload]);\n\n        if (!reload) {\n          that._processPagingCache(storeLoadOptions);\n        }\n\n        storeLoadOptions = storeLoadOptions.filter(function (options) {\n          return !(options.rows.length && 0 === options.rowTake) && !(options.columns.length && 0 === options.columnTake);\n        });\n\n        if (!storeLoadOptions.length) {\n          that._update(deferred);\n\n          return;\n        }\n\n        var results = storeLoadOptions.map(function (options) {\n          return store.load(options);\n        });\n\n        _deferred.when.apply(null, results).done(function () {\n          var results = arguments;\n\n          for (var i = 0; i < results.length; i++) {\n            var _options = storeLoadOptions[i];\n            var data = results[i];\n            var isLast = i === results.length - 1;\n\n            if (_options.path) {\n              that.applyPartialDataSource(_options.area, _options.path, data, isLast ? deferred : false, _options.oppositePath);\n            } else {\n              if (paginate && !reload && isDataExists(that._data)) {\n                that.mergePartialDataSource(data, isLast ? deferred : false);\n              } else {\n                (0, _extend.extend)(that._data, data);\n                that._lastLoadOptions = _options;\n\n                that._update(isLast ? deferred : false);\n              }\n            }\n          }\n        }).fail(deferred.reject);\n      } else {\n        that._update(deferred);\n      }\n    },\n    _sort: function (descriptions, data, getAscOrder) {\n      var store = this._store;\n\n      if (store && !this._paginate) {\n        (0, _data_source.sort)(descriptions, data, getAscOrder);\n      }\n    },\n    paginate: function () {\n      return this._paginate && this._store && this._store.supportPaging();\n    },\n    isEmpty: function () {\n      var dataFields = this.getAreaFields(\"data\");\n      var data = this.getData();\n      return !dataFields.length || !data.values.length;\n    },\n    _update: function (deferred) {\n      var that = this;\n      var descriptions = that._descriptions;\n      var loadedData = that._data;\n      var dataFields = descriptions.values;\n      var expressionsUsed = areExpressionsUsed(dataFields);\n      (0, _deferred.when)(formatHeaders(descriptions, loadedData), updateCache(loadedData.rows), updateCache(loadedData.columns)).done(function () {\n        if (expressionsUsed) {\n          that._sort(descriptions, loadedData, expressionsUsed);\n\n          !that.isEmpty() && (0, _uiPivot_grid.applyDisplaySummaryMode)(descriptions, loadedData);\n        }\n\n        that._sort(descriptions, loadedData);\n\n        !that.isEmpty() && isRunningTotalUsed(dataFields) && (0, _uiPivot_grid.applyRunningTotal)(descriptions, loadedData);\n        that._data = loadedData;\n        false !== deferred && (0, _deferred.when)(deferred).done(function () {\n          that._isFieldsModified = false;\n\n          that._eventsStrategy.fireEvent(\"changed\");\n\n          if ((0, _type.isDefined)(that._data.grandTotalRowIndex)) {\n            loadedData.grandTotalRowIndex = that._data.grandTotalRowIndex;\n          }\n\n          if ((0, _type.isDefined)(that._data.grandTotalColumnIndex)) {\n            loadedData.grandTotalColumnIndex = that._data.grandTotalColumnIndex;\n          }\n        });\n        deferred && deferred.resolve(that._data);\n      });\n      return deferred;\n    },\n    store: function () {\n      return this._store;\n    },\n    collapseHeaderItem: function (area, path) {\n      var that = this;\n      var headerItems = \"column\" === area ? that._data.columns : that._data.rows;\n      var headerItem = findHeaderItem(headerItems, path);\n      var field = that.getAreaFields(area)[path.length - 1];\n\n      if (headerItem && headerItem.children) {\n        that._eventsStrategy.fireEvent(\"expandValueChanging\", [{\n          area: area,\n          path: path,\n          expanded: false\n        }]);\n\n        if (field) {\n          field.expanded = false;\n        }\n\n        headerItem.collapsedChildren = headerItem.children;\n        delete headerItem.children;\n\n        that._update();\n\n        if (that.paginate()) {\n          that.load();\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    collapseAll: function (id) {\n      var _this = this;\n\n      var dataChanged = false;\n      var field = this.field(id) || {};\n      var areaOffsets = [(0, _array.inArray)(field, this.getAreaFields(field.area))];\n      field.expanded = false;\n\n      if (field && field.levels) {\n        areaOffsets = [];\n        field.levels.forEach(function (f) {\n          areaOffsets.push((0, _array.inArray)(f, _this.getAreaFields(field.area)));\n          f.expanded = false;\n        });\n      }\n\n      (0, _uiPivot_grid2.foreachTree)(this._data[field.area + \"s\"], function (items) {\n        var item = items[0];\n        var path = (0, _uiPivot_grid2.createPath)(items);\n\n        if (item && item.children && areaOffsets.indexOf(path.length - 1) !== -1) {\n          item.collapsedChildren = item.children;\n          delete item.children;\n          dataChanged = true;\n        }\n      }, true);\n      dataChanged && this._update();\n    },\n    expandAll: function (id) {\n      var field = this.field(id);\n\n      if (field && field.area) {\n        field.expanded = true;\n\n        if (field && field.levels) {\n          field.levels.forEach(function (f) {\n            f.expanded = true;\n          });\n        }\n\n        this.load();\n      }\n    },\n    expandHeaderItem: function (area, path) {\n      var that = this;\n      var headerItems = \"column\" === area ? that._data.columns : that._data.rows;\n      var headerItem = findHeaderItem(headerItems, path);\n\n      if (headerItem && !headerItem.children) {\n        var hasCache = !!headerItem.collapsedChildren;\n        var options = {\n          area: area,\n          path: path,\n          expanded: true,\n          needExpandData: !hasCache\n        };\n\n        that._eventsStrategy.fireEvent(\"expandValueChanging\", [options]);\n\n        if (hasCache) {\n          headerItem.children = headerItem.collapsedChildren;\n          delete headerItem.collapsedChildren;\n\n          that._update();\n        } else {\n          if (this.store()) {\n            that.load(options);\n          }\n        }\n\n        return hasCache;\n      }\n\n      return false;\n    },\n    mergePartialDataSource: function (dataSource, deferred) {\n      var that = this;\n      var loadedData = that._data;\n      var newRowItemIndexesToCurrent;\n      var newColumnItemIndexesToCurrent;\n\n      if (dataSource && dataSource.values) {\n        dataSource.rows = dataSource.rows || [];\n        dataSource.columns = dataSource.columns || [];\n        newRowItemIndexesToCurrent = updateHeaderItems(loadedData.rows, dataSource.rows, loadedData.grandTotalColumnIndex);\n        newColumnItemIndexesToCurrent = updateHeaderItems(loadedData.columns, dataSource.columns, loadedData.grandTotalColumnIndex);\n        (0, _deferred.when)(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent).done(function (newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\n          if (newRowItemIndexesToCurrent.length || newColumnItemIndexesToCurrent.length) {\n            updateDataSourceCells(loadedData, dataSource.values, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent);\n          }\n\n          that._update(deferred);\n        });\n      }\n    },\n    applyPartialDataSource: function (area, path, dataSource, deferred, oppositePath) {\n      var that = this;\n      var loadedData = that._data;\n      var headerItems = \"column\" === area ? loadedData.columns : loadedData.rows;\n      var headerItem;\n      var oppositeHeaderItems = \"column\" === area ? loadedData.rows : loadedData.columns;\n      var oppositeHeaderItem;\n      var newRowItemIndexesToCurrent;\n      var newColumnItemIndexesToCurrent;\n\n      if (dataSource && dataSource.values) {\n        dataSource.rows = dataSource.rows || [];\n        dataSource.columns = dataSource.columns || [];\n        headerItem = findHeaderItem(headerItems, path);\n        oppositeHeaderItem = oppositePath && findHeaderItem(oppositeHeaderItems, oppositePath);\n\n        if (headerItem) {\n          if (\"column\" === area) {\n            newColumnItemIndexesToCurrent = updateHeaderItemChildren(headerItems, headerItem, dataSource.columns, loadedData.grandTotalColumnIndex);\n\n            if (oppositeHeaderItem) {\n              newRowItemIndexesToCurrent = updateHeaderItemChildren(oppositeHeaderItems, oppositeHeaderItem, dataSource.rows, loadedData.grandTotalRowIndex);\n            } else {\n              newRowItemIndexesToCurrent = updateHeaderItems(loadedData.rows, dataSource.rows, loadedData.grandTotalRowIndex);\n            }\n          } else {\n            newRowItemIndexesToCurrent = updateHeaderItemChildren(headerItems, headerItem, dataSource.rows, loadedData.grandTotalRowIndex);\n\n            if (oppositeHeaderItem) {\n              newColumnItemIndexesToCurrent = updateHeaderItemChildren(oppositeHeaderItems, oppositeHeaderItem, dataSource.columns, loadedData.grandTotalColumnIndex);\n            } else {\n              newColumnItemIndexesToCurrent = updateHeaderItems(loadedData.columns, dataSource.columns, loadedData.grandTotalColumnIndex);\n            }\n          }\n\n          (0, _deferred.when)(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent).done(function (newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\n            if (\"row\" === area && newRowItemIndexesToCurrent.length || \"column\" === area && newColumnItemIndexesToCurrent.length) {\n              updateDataSourceCells(loadedData, dataSource.values, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent);\n            }\n\n            that._update(deferred);\n          });\n        }\n      }\n    },\n    on: function (eventName, eventHandler) {\n      this._eventsStrategy.on(eventName, eventHandler);\n\n      return this;\n    },\n    off: function (eventName, eventHandler) {\n      this._eventsStrategy.off(eventName, eventHandler);\n\n      return this;\n    },\n    dispose: function () {\n      var that = this;\n      var delayedLoadTask = that._delayedLoadTask;\n\n      this._eventsStrategy.dispose();\n\n      if (delayedLoadTask) {\n        delayedLoadTask.abort();\n      }\n\n      this._isDisposed = true;\n    },\n    isDisposed: function () {\n      return !!this._isDisposed;\n    }\n  };\n}());\n\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/data_source.js"],"names":["exports","default","_utils","require","_abstract_store","_interopRequireDefault","_common","_type","_extend","_array","_iterator","_deferred","_class","_events_strategy","_inflector","_local_store","_remote_store","_data_source","_xmla_store","_uiPivot_grid","_uiPivot_grid2","obj","__esModule","DESCRIPTION_NAME_BY_AREA","row","column","data","filter","STATE_PROPERTIES","CALCULATED_PROPERTIES","ALL_CALCULATED_PROPERTIES","concat","createCaption","field","caption","dataField","groupName","summaryType","toLowerCase","isString","groupInterval","replace","toUpperCase","length","titleize","resetFieldState","properties","initialProperties","_initProperties","each","_","prop","Object","prototype","hasOwnProperty","call","updateCalculatedFieldProperties","calculatedProperties","isDefined","setFieldProperty","areExpressionsUsed","dataFields","some","summaryDisplayMode","calculateSummaryValue","isRunningTotalUsed","runningTotal","isDataExists","rows","columns","values","_default","inherit","findHeaderItem","headerItems","path","_cacheByPath","join","getHeaderItemsLastIndex","grandTotalIndex","i","lastIndex","headerItem","index","Math","max","children","collapsedChildren","updateHeaderItemChildren","applyingHeaderItemsCount","emptyIndex","applyingItemIndexesToCurrent","needIndexUpdate","d","Deferred","child","when","foreachTreeAsync","items","done","resolve","updateHeaderItems","newHeaderItems","newItems","newItem","createPath","slice","parentItems","updateDataSourceCells","dataSource","newDataSourceCells","newRowItemIndexesToCurrent","newColumnItemIndexesToCurrent","newRowIndex","newColumnIndex","newRowCells","newCell","rowIndex","columnIndex","dataSourceCells","grandTotalRowIndex","grandTotalColumnIndex","createLocalOrRemoteStore","dataSourceOptions","notifyProgress","StoreConstructor","remoteOperations","paginate","LocalStore","extend","normalizeDataSourceOptions","onChanged","onLoadingChanged","onProgressChanged","createStore","store","storeOptions","isPlainObject","load","type","XmlaStore","Array","isArray","equalFields","fields","prevFields","count","getExpandedPaths","loadOptions","dimensionName","prevLoadOptions","result","foreachTree","item","expanded","push","setFieldProperties","srcField","skipInitPropertySave","name","getFieldsState","getFieldStateId","getFieldsById","id","setFieldsStateCore","stateFields","setFieldsState","fieldsById","getFieldsByGroup","groupingField","isNumeric","groupIndex","visible","map","areaIndex","area","dataType","sortBy","sortOrder","sortBySummaryField","sortBySummaryPath","showTotals","showGrandTotals","sort","a","b","sortFieldsByAreaIndex","field1","field2","isAreaField","canAddFieldInArea","getFieldId","retrieveFieldsOptionValue","mergeFields","storeFields","fieldsDictionary","removedFields","mergedGroups","dataTypes","getFieldsDataType","fieldKey","storeField","mergedField","apply","assignGroupIndexes","forEach","maxGroupIndex","f","reduce","prev","current","getFields","that","_store","_fields","mergedFields","_storeFields","_retrieveFields","fail","reject","formatHeaderItems","headerName","text","formatValue","value","formatHeaders","updateCache","cacheByPath","_getAreaFields","areaFields","ctor","options","_eventsStrategy","EventsStrategy","progress","fireEvent","_paginate","_pageSize","pageSize","_data","_loadingCount","_isFieldsModified","eventName","optionName","on","bind","retrieveFields","_descriptions","descriptions","_createDescriptions","getData","getAreaFields","collectGroups","_fieldsPrepared","findField","levels","optionValue","isInitialization","inArray","getFieldValues","applyFilters","loadFields","filters","filterValues","skipValues","searchValue","columnSkip","skip","columnTake","take","_sort","reload","arguments","beginLoading","e","always","endLoading","loadTask","_delayedLoadTask","_loadCore","_loadErrorHandler","executeAsync","createDrillDownDataSource","params","currentField","areaName","normalizeIndexes","descriptionName","dimension","indices","expression","isFunction","summaryCell","createMockSummaryCell","currentFieldState","isLoading","state","_state","skipLoading","rowExpandedPaths","columnExpandedPaths","_lastLoadOptions","_changeLoadingCount","increment","oldLoading","newLoading","_hasPagingValues","oppositeIndex","takeField","skipField","oppositeArea","oppositePath","_headerItem","every","_processPagingCacheByArea","_headerItem2","start","floor","end","ceil","_processPagingCache","storeLoadOptions","deferred","rowTake","_update","results","_options","isLast","applyPartialDataSource","mergePartialDataSource","getAscOrder","supportPaging","isEmpty","loadedData","expressionsUsed","applyDisplaySummaryMode","applyRunningTotal","collapseHeaderItem","collapseAll","_this","dataChanged","areaOffsets","indexOf","expandAll","expandHeaderItem","hasCache","needExpandData","oppositeHeaderItems","oppositeHeaderItem","eventHandler","off","dispose","delayedLoadTask","abort","_isDisposed","isDisposed","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/data_source.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _utils = require(\"../../data/data_source/utils\");\r\nvar _abstract_store = _interopRequireDefault(require(\"../../data/abstract_store\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _events_strategy = require(\"../../core/events_strategy\");\r\nvar _inflector = require(\"../../core/utils/inflector\");\r\nvar _local_store = require(\"./local_store\");\r\nvar _remote_store = _interopRequireDefault(require(\"./remote_store\"));\r\nvar _data_source = require(\"./data_source.utils\");\r\nvar _xmla_store = require(\"./xmla_store/xmla_store\");\r\nvar _uiPivot_grid = require(\"./ui.pivot_grid.summary_display_modes\");\r\nvar _uiPivot_grid2 = require(\"./ui.pivot_grid.utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DESCRIPTION_NAME_BY_AREA = {\r\n    row: \"rows\",\r\n    column: \"columns\",\r\n    data: \"values\",\r\n    filter: \"filters\"\r\n};\r\nvar STATE_PROPERTIES = [\"area\", \"areaIndex\", \"sortOrder\", \"filterType\", \"filterValues\", \"sortBy\", \"sortBySummaryField\", \"sortBySummaryPath\", \"expanded\", \"summaryType\", \"summaryDisplayMode\"];\r\nvar CALCULATED_PROPERTIES = [\"format\", \"selector\", \"customizeText\", \"caption\"];\r\nvar ALL_CALCULATED_PROPERTIES = CALCULATED_PROPERTIES.concat([\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"]);\r\n\r\nfunction createCaption(field) {\r\n    var caption = field.dataField || field.groupName || \"\";\r\n    var summaryType = (field.summaryType || \"\").toLowerCase();\r\n    if ((0, _type.isString)(field.groupInterval)) {\r\n        caption += \"_\" + field.groupInterval\r\n    }\r\n    if (summaryType && \"custom\" !== summaryType) {\r\n        summaryType = summaryType.replace(/^./, summaryType[0].toUpperCase());\r\n        if (caption.length) {\r\n            summaryType = \" (\" + summaryType + \")\"\r\n        }\r\n    } else {\r\n        summaryType = \"\"\r\n    }\r\n    return (0, _inflector.titleize)(caption) + summaryType\r\n}\r\n\r\nfunction resetFieldState(field, properties) {\r\n    var initialProperties = field._initProperties || {};\r\n    (0, _iterator.each)(properties, function(_, prop) {\r\n        if (Object.prototype.hasOwnProperty.call(initialProperties, prop)) {\r\n            field[prop] = initialProperties[prop]\r\n        }\r\n    })\r\n}\r\n\r\nfunction updateCalculatedFieldProperties(field, calculatedProperties) {\r\n    resetFieldState(field, calculatedProperties);\r\n    if (!(0, _type.isDefined)(field.caption)) {\r\n        (0, _uiPivot_grid2.setFieldProperty)(field, \"caption\", createCaption(field))\r\n    }\r\n}\r\n\r\nfunction areExpressionsUsed(dataFields) {\r\n    return dataFields.some(function(field) {\r\n        return field.summaryDisplayMode || field.calculateSummaryValue\r\n    })\r\n}\r\n\r\nfunction isRunningTotalUsed(dataFields) {\r\n    return dataFields.some(function(field) {\r\n        return !!field.runningTotal\r\n    })\r\n}\r\n\r\nfunction isDataExists(data) {\r\n    return data.rows.length || data.columns.length || data.values.length\r\n}\r\nvar _default = _class.default.inherit(function() {\r\n    var findHeaderItem = function(headerItems, path) {\r\n        if (headerItems._cacheByPath) {\r\n            return headerItems._cacheByPath[path.join(\".\")] || null\r\n        }\r\n    };\r\n    var getHeaderItemsLastIndex = function getHeaderItemsLastIndex(headerItems, grandTotalIndex) {\r\n        var i;\r\n        var lastIndex = -1;\r\n        var headerItem;\r\n        if (headerItems) {\r\n            for (i = 0; i < headerItems.length; i++) {\r\n                headerItem = headerItems[i];\r\n                if (void 0 !== headerItem.index) {\r\n                    lastIndex = Math.max(lastIndex, headerItem.index)\r\n                }\r\n                if (headerItem.children) {\r\n                    lastIndex = Math.max(lastIndex, getHeaderItemsLastIndex(headerItem.children))\r\n                } else {\r\n                    if (headerItem.collapsedChildren) {\r\n                        lastIndex = Math.max(lastIndex, getHeaderItemsLastIndex(headerItem.collapsedChildren))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if ((0, _type.isDefined)(grandTotalIndex)) {\r\n            lastIndex = Math.max(lastIndex, grandTotalIndex)\r\n        }\r\n        return lastIndex\r\n    };\r\n    var updateHeaderItemChildren = function(headerItems, headerItem, children, grandTotalIndex) {\r\n        var applyingHeaderItemsCount = getHeaderItemsLastIndex(children) + 1;\r\n        var emptyIndex = getHeaderItemsLastIndex(headerItems, grandTotalIndex) + 1;\r\n        var index;\r\n        var applyingItemIndexesToCurrent = [];\r\n        var needIndexUpdate = false;\r\n        var d = new _deferred.Deferred;\r\n        if (headerItem.children && headerItem.children.length === children.length) {\r\n            for (var i = 0; i < children.length; i++) {\r\n                var child = children[i];\r\n                if (void 0 !== child.index) {\r\n                    if (void 0 === headerItem.children[i].index) {\r\n                        child.index = applyingItemIndexesToCurrent[child.index] = emptyIndex++;\r\n                        headerItem.children[i] = child\r\n                    } else {\r\n                        applyingItemIndexesToCurrent[child.index] = headerItem.children[i].index\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            needIndexUpdate = true;\r\n            for (index = 0; index < applyingHeaderItemsCount; index++) {\r\n                applyingItemIndexesToCurrent[index] = emptyIndex++\r\n            }\r\n            headerItem.children = children\r\n        }(0, _deferred.when)((0, _uiPivot_grid2.foreachTreeAsync)(headerItem.children, function(items) {\r\n            if (needIndexUpdate) {\r\n                items[0].index = applyingItemIndexesToCurrent[items[0].index]\r\n            }\r\n        })).done(function() {\r\n            d.resolve(applyingItemIndexesToCurrent)\r\n        });\r\n        return d\r\n    };\r\n    var updateHeaderItems = function(headerItems, newHeaderItems, grandTotalIndex) {\r\n        var d = new _deferred.Deferred;\r\n        var emptyIndex = grandTotalIndex >= 0 && getHeaderItemsLastIndex(headerItems, grandTotalIndex) + 1;\r\n        var applyingItemIndexesToCurrent = [];\r\n        (0, _deferred.when)((0, _uiPivot_grid2.foreachTreeAsync)(headerItems, function(items) {\r\n            delete items[0].collapsedChildren\r\n        })).done(function() {\r\n            (0, _deferred.when)((0, _uiPivot_grid2.foreachTreeAsync)(newHeaderItems, function(newItems, index) {\r\n                var newItem = newItems[0];\r\n                if (newItem.index >= 0) {\r\n                    var headerItem = findHeaderItem(headerItems, (0, _uiPivot_grid2.createPath)(newItems));\r\n                    if (headerItem && headerItem.index >= 0) {\r\n                        applyingItemIndexesToCurrent[newItem.index] = headerItem.index\r\n                    } else {\r\n                        if (emptyIndex) {\r\n                            var path = (0, _uiPivot_grid2.createPath)(newItems.slice(1));\r\n                            headerItem = findHeaderItem(headerItems, path);\r\n                            var parentItems = path.length ? headerItem && headerItem.children : headerItems;\r\n                            if (parentItems) {\r\n                                parentItems[index] = newItem;\r\n                                newItem.index = applyingItemIndexesToCurrent[newItem.index] = emptyIndex++\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })).done(function() {\r\n                d.resolve(applyingItemIndexesToCurrent)\r\n            })\r\n        });\r\n        return d\r\n    };\r\n    var updateDataSourceCells = function(dataSource, newDataSourceCells, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\r\n        var newRowIndex;\r\n        var newColumnIndex;\r\n        var newRowCells;\r\n        var newCell;\r\n        var rowIndex;\r\n        var columnIndex;\r\n        var dataSourceCells = dataSource.values;\r\n        if (newDataSourceCells) {\r\n            for (newRowIndex = 0; newRowIndex <= newDataSourceCells.length; newRowIndex++) {\r\n                newRowCells = newDataSourceCells[newRowIndex];\r\n                rowIndex = newRowItemIndexesToCurrent[newRowIndex];\r\n                if (!(0, _type.isDefined)(rowIndex)) {\r\n                    rowIndex = dataSource.grandTotalRowIndex\r\n                }\r\n                if (newRowCells && (0, _type.isDefined)(rowIndex)) {\r\n                    if (!dataSourceCells[rowIndex]) {\r\n                        dataSourceCells[rowIndex] = []\r\n                    }\r\n                    for (newColumnIndex = 0; newColumnIndex <= newRowCells.length; newColumnIndex++) {\r\n                        newCell = newRowCells[newColumnIndex];\r\n                        columnIndex = newColumnItemIndexesToCurrent[newColumnIndex];\r\n                        if (!(0, _type.isDefined)(columnIndex)) {\r\n                            columnIndex = dataSource.grandTotalColumnIndex\r\n                        }\r\n                        if ((0, _type.isDefined)(newCell) && (0, _type.isDefined)(columnIndex)) {\r\n                            dataSourceCells[rowIndex][columnIndex] = newCell\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function createLocalOrRemoteStore(dataSourceOptions, notifyProgress) {\r\n        var StoreConstructor = dataSourceOptions.remoteOperations || dataSourceOptions.paginate ? _remote_store.default : _local_store.LocalStore;\r\n        return new StoreConstructor((0, _extend.extend)((0, _utils.normalizeDataSourceOptions)(dataSourceOptions), {\r\n            onChanged: null,\r\n            onLoadingChanged: null,\r\n            onProgressChanged: notifyProgress\r\n        }))\r\n    }\r\n\r\n    function createStore(dataSourceOptions, notifyProgress) {\r\n        var store;\r\n        var storeOptions;\r\n        if ((0, _type.isPlainObject)(dataSourceOptions) && dataSourceOptions.load) {\r\n            store = createLocalOrRemoteStore(dataSourceOptions, notifyProgress)\r\n        } else {\r\n            if (dataSourceOptions && !dataSourceOptions.store) {\r\n                dataSourceOptions = {\r\n                    store: dataSourceOptions\r\n                }\r\n            }\r\n            storeOptions = dataSourceOptions.store;\r\n            if (\"xmla\" === storeOptions.type) {\r\n                store = new _xmla_store.XmlaStore(storeOptions)\r\n            } else {\r\n                if ((0, _type.isPlainObject)(storeOptions) && storeOptions.type || storeOptions instanceof _abstract_store.default || Array.isArray(storeOptions)) {\r\n                    store = createLocalOrRemoteStore(dataSourceOptions, notifyProgress)\r\n                } else {\r\n                    if (storeOptions instanceof _class.default) {\r\n                        store = storeOptions\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return store\r\n    }\r\n\r\n    function equalFields(fields, prevFields, count) {\r\n        for (var i = 0; i < count; i++) {\r\n            if (!fields[i] || !prevFields[i] || fields[i].index !== prevFields[i].index) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    function getExpandedPaths(dataSource, loadOptions, dimensionName, prevLoadOptions) {\r\n        var result = [];\r\n        var fields = loadOptions && loadOptions[dimensionName] || [];\r\n        var prevFields = prevLoadOptions && prevLoadOptions[dimensionName] || [];\r\n        (0, _uiPivot_grid2.foreachTree)(dataSource[dimensionName], function(items) {\r\n            var item = items[0];\r\n            var path = (0, _uiPivot_grid2.createPath)(items);\r\n            if (item.children && fields[path.length - 1] && !fields[path.length - 1].expanded) {\r\n                if (path.length < fields.length && (!prevLoadOptions || equalFields(fields, prevFields, path.length))) {\r\n                    result.push(path.slice())\r\n                }\r\n            }\r\n        }, true);\r\n        return result\r\n    }\r\n\r\n    function setFieldProperties(field, srcField, skipInitPropertySave, properties) {\r\n        if (srcField) {\r\n            (0, _iterator.each)(properties, function(_, name) {\r\n                if (skipInitPropertySave) {\r\n                    field[name] = srcField[name]\r\n                } else {\r\n                    if ((\"summaryType\" === name || \"summaryDisplayMode\" === name) && void 0 === srcField[name]) {\r\n                        return\r\n                    }(0, _uiPivot_grid2.setFieldProperty)(field, name, srcField[name])\r\n                }\r\n            })\r\n        } else {\r\n            resetFieldState(field, properties)\r\n        }\r\n        return field\r\n    }\r\n\r\n    function getFieldsState(fields, properties) {\r\n        var result = [];\r\n        (0, _iterator.each)(fields, function(_, field) {\r\n            result.push(setFieldProperties({\r\n                dataField: field.dataField,\r\n                name: field.name\r\n            }, field, true, properties))\r\n        });\r\n        return result\r\n    }\r\n\r\n    function getFieldStateId(field) {\r\n        if (field.name) {\r\n            return field.name\r\n        }\r\n        return field.dataField + \"\"\r\n    }\r\n\r\n    function getFieldsById(fields, id) {\r\n        var result = [];\r\n        (0, _iterator.each)(fields || [], function(_, field) {\r\n            if (getFieldStateId(field) === id) {\r\n                result.push(field)\r\n            }\r\n        });\r\n        return result\r\n    }\r\n\r\n    function setFieldsStateCore(stateFields, fields) {\r\n        stateFields = stateFields || [];\r\n        (0, _iterator.each)(fields, function(index, field) {\r\n            setFieldProperties(field, stateFields[index], false, STATE_PROPERTIES);\r\n            updateCalculatedFieldProperties(field, CALCULATED_PROPERTIES)\r\n        });\r\n        return fields\r\n    }\r\n\r\n    function setFieldsState(stateFields, fields) {\r\n        stateFields = stateFields || [];\r\n        var fieldsById = {};\r\n        var id;\r\n        (0, _iterator.each)(fields, function(_, field) {\r\n            id = getFieldStateId(field);\r\n            if (!fieldsById[id]) {\r\n                fieldsById[id] = getFieldsById(fields, getFieldStateId(field))\r\n            }\r\n        });\r\n        (0, _iterator.each)(fieldsById, function(id, fields) {\r\n            setFieldsStateCore(getFieldsById(stateFields, id), fields)\r\n        });\r\n        return fields\r\n    }\r\n\r\n    function getFieldsByGroup(fields, groupingField) {\r\n        return fields.filter(function(field) {\r\n            return field.groupName === groupingField.groupName && (0, _type.isNumeric)(field.groupIndex) && false !== field.visible\r\n        }).map(function(field) {\r\n            return (0, _extend.extend)(field, {\r\n                areaIndex: groupingField.areaIndex,\r\n                area: groupingField.area,\r\n                expanded: (0, _type.isDefined)(field.expanded) ? field.expanded : groupingField.expanded,\r\n                dataField: field.dataField || groupingField.dataField,\r\n                dataType: field.dataType || groupingField.dataType,\r\n                sortBy: field.sortBy || groupingField.sortBy,\r\n                sortOrder: field.sortOrder || groupingField.sortOrder,\r\n                sortBySummaryField: field.sortBySummaryField || groupingField.sortBySummaryField,\r\n                sortBySummaryPath: field.sortBySummaryPath || groupingField.sortBySummaryPath,\r\n                visible: field.visible || groupingField.visible,\r\n                showTotals: (0, _type.isDefined)(field.showTotals) ? field.showTotals : groupingField.showTotals,\r\n                showGrandTotals: (0, _type.isDefined)(field.showGrandTotals) ? field.showGrandTotals : groupingField.showGrandTotals\r\n            })\r\n        }).sort(function(a, b) {\r\n            return a.groupIndex - b.groupIndex\r\n        })\r\n    }\r\n\r\n    function sortFieldsByAreaIndex(fields) {\r\n        fields.sort(function(field1, field2) {\r\n            return field1.areaIndex - field2.areaIndex || field1.groupIndex - field2.groupIndex\r\n        })\r\n    }\r\n\r\n    function isAreaField(field, area) {\r\n        var canAddFieldInArea = \"data\" === area || false !== field.visible;\r\n        return field.area === area && !(0, _type.isDefined)(field.groupIndex) && canAddFieldInArea\r\n    }\r\n\r\n    function getFieldId(field, retrieveFieldsOptionValue) {\r\n        var groupName = field.groupName || \"\";\r\n        return (field.dataField || groupName) + (field.groupInterval ? groupName + field.groupInterval : \"NOGROUP\") + (retrieveFieldsOptionValue ? \"\" : groupName)\r\n    }\r\n\r\n    function mergeFields(fields, storeFields, retrieveFieldsOptionValue) {\r\n        var result = [];\r\n        var fieldsDictionary = {};\r\n        var removedFields = {};\r\n        var mergedGroups = [];\r\n        var dataTypes = (0, _uiPivot_grid2.getFieldsDataType)(fields);\r\n        if (storeFields) {\r\n            (0, _iterator.each)(storeFields, function(_, field) {\r\n                fieldsDictionary[getFieldId(field, retrieveFieldsOptionValue)] = field\r\n            });\r\n            (0, _iterator.each)(fields, function(_, field) {\r\n                var fieldKey = getFieldId(field, retrieveFieldsOptionValue);\r\n                var storeField = fieldsDictionary[fieldKey] || removedFields[fieldKey];\r\n                var mergedField;\r\n                if (storeField) {\r\n                    if (storeField._initProperties) {\r\n                        resetFieldState(storeField, ALL_CALCULATED_PROPERTIES)\r\n                    }\r\n                    mergedField = (0, _extend.extend)({}, storeField, field, {\r\n                        _initProperties: null\r\n                    })\r\n                } else {\r\n                    fieldsDictionary[fieldKey] = mergedField = field\r\n                }(0, _extend.extend)(mergedField, {\r\n                    dataType: dataTypes[field.dataField]\r\n                });\r\n                delete fieldsDictionary[fieldKey];\r\n                removedFields[fieldKey] = storeField;\r\n                result.push(mergedField)\r\n            });\r\n            if (retrieveFieldsOptionValue) {\r\n                (0, _iterator.each)(fieldsDictionary, function(_, field) {\r\n                    result.push(field)\r\n                })\r\n            }\r\n        } else {\r\n            result = fields\r\n        }\r\n        result.push.apply(result, mergedGroups);\r\n        assignGroupIndexes(result);\r\n        return result\r\n    }\r\n\r\n    function assignGroupIndexes(fields) {\r\n        fields.forEach(function(field) {\r\n            if (field.groupName && field.groupInterval && void 0 === field.groupIndex) {\r\n                var maxGroupIndex = fields.filter(function(f) {\r\n                    return f.groupName === field.groupName && (0, _type.isNumeric)(f.groupIndex)\r\n                }).map(function(f) {\r\n                    return f.groupIndex\r\n                }).reduce(function(prev, current) {\r\n                    return Math.max(prev, current)\r\n                }, -1);\r\n                field.groupIndex = maxGroupIndex + 1\r\n            }\r\n        })\r\n    }\r\n\r\n    function getFields(that) {\r\n        var result = new _deferred.Deferred;\r\n        var store = that._store;\r\n        var storeFields = store && store.getFields(that._fields);\r\n        var mergedFields;\r\n        (0, _deferred.when)(storeFields).done(function(storeFields) {\r\n            that._storeFields = storeFields;\r\n            mergedFields = mergeFields(that._fields, storeFields, that._retrieveFields);\r\n            result.resolve(mergedFields)\r\n        }).fail(result.reject);\r\n        return result\r\n    }\r\n\r\n    function formatHeaderItems(data, loadOptions, headerName) {\r\n        return (0, _uiPivot_grid2.foreachTreeAsync)(data[headerName], function(items) {\r\n            var item = items[0];\r\n            item.text = item.text || (0, _uiPivot_grid2.formatValue)(item.value, loadOptions[headerName][(0, _uiPivot_grid2.createPath)(items).length - 1])\r\n        })\r\n    }\r\n\r\n    function formatHeaders(loadOptions, data) {\r\n        return (0, _deferred.when)(formatHeaderItems(data, loadOptions, \"columns\"), formatHeaderItems(data, loadOptions, \"rows\"))\r\n    }\r\n\r\n    function updateCache(headerItems) {\r\n        var d = new _deferred.Deferred;\r\n        var cacheByPath = {};\r\n        (0, _deferred.when)((0, _uiPivot_grid2.foreachTreeAsync)(headerItems, function(items) {\r\n            var path = (0, _uiPivot_grid2.createPath)(items).join(\".\");\r\n            cacheByPath[path] = items[0]\r\n        })).done(d.resolve);\r\n        headerItems._cacheByPath = cacheByPath;\r\n        return d\r\n    }\r\n\r\n    function _getAreaFields(fields, area) {\r\n        var areaFields = [];\r\n        (0, _iterator.each)(fields, function() {\r\n            if (isAreaField(this, area)) {\r\n                areaFields.push(this)\r\n            }\r\n        });\r\n        return areaFields\r\n    }\r\n    return {\r\n        ctor: function(options) {\r\n            options = options || {};\r\n            this._eventsStrategy = new _events_strategy.EventsStrategy(this);\r\n            var that = this;\r\n            var store = createStore(options, function(progress) {\r\n                that._eventsStrategy.fireEvent(\"progressChanged\", [progress])\r\n            });\r\n            that._store = store;\r\n            that._paginate = !!options.paginate;\r\n            that._pageSize = options.pageSize || 40;\r\n            that._data = {\r\n                rows: [],\r\n                columns: [],\r\n                values: []\r\n            };\r\n            that._loadingCount = 0;\r\n            that._isFieldsModified = false;\r\n            (0, _iterator.each)([\"changed\", \"loadError\", \"loadingChanged\", \"progressChanged\", \"fieldsPrepared\", \"expandValueChanging\"], function(_, eventName) {\r\n                var optionName = \"on\" + eventName[0].toUpperCase() + eventName.slice(1);\r\n                if (Object.prototype.hasOwnProperty.call(options, optionName)) {\r\n                    this.on(eventName, options[optionName])\r\n                }\r\n            }.bind(this));\r\n            that._retrieveFields = (0, _type.isDefined)(options.retrieveFields) ? options.retrieveFields : true;\r\n            that._fields = options.fields || [];\r\n            that._descriptions = options.descriptions ? (0, _extend.extend)(that._createDescriptions(), options.descriptions) : void 0;\r\n            if (!store) {\r\n                (0, _extend.extend)(true, that._data, options.store || options)\r\n            }\r\n        },\r\n        getData: function() {\r\n            return this._data\r\n        },\r\n        getAreaFields: function(area, collectGroups) {\r\n            var areaFields = [];\r\n            var descriptions;\r\n            if (collectGroups || \"data\" === area) {\r\n                areaFields = _getAreaFields(this._fields, area);\r\n                sortFieldsByAreaIndex(areaFields)\r\n            } else {\r\n                descriptions = this._descriptions || {};\r\n                areaFields = descriptions[DESCRIPTION_NAME_BY_AREA[area]] || []\r\n            }\r\n            return areaFields\r\n        },\r\n        fields: function(_fields) {\r\n            var that = this;\r\n            if (_fields) {\r\n                that._fields = mergeFields(_fields, that._storeFields, that._retrieveFields);\r\n                that._fieldsPrepared(that._fields)\r\n            }\r\n            return that._fields\r\n        },\r\n        field: function field(id, options) {\r\n            var that = this;\r\n            var fields = that._fields;\r\n            var field = fields && fields[(0, _type.isNumeric)(id) ? id : (0, _uiPivot_grid2.findField)(fields, id)];\r\n            var levels;\r\n            if (field && options) {\r\n                (0, _iterator.each)(options, function(optionName, optionValue) {\r\n                    var isInitialization = (0, _array.inArray)(optionName, STATE_PROPERTIES) < 0;\r\n                    (0, _uiPivot_grid2.setFieldProperty)(field, optionName, optionValue, isInitialization);\r\n                    if (\"sortOrder\" === optionName) {\r\n                        levels = field.levels || [];\r\n                        for (var i = 0; i < levels.length; i++) {\r\n                            levels[i][optionName] = optionValue\r\n                        }\r\n                    }\r\n                });\r\n                updateCalculatedFieldProperties(field, CALCULATED_PROPERTIES);\r\n                that._descriptions = that._createDescriptions(field);\r\n                that._isFieldsModified = true;\r\n                that._eventsStrategy.fireEvent(\"fieldChanged\", [field])\r\n            }\r\n            return field\r\n        },\r\n        getFieldValues: function(index, applyFilters, options) {\r\n            var that = this;\r\n            var field = this._fields && this._fields[index];\r\n            var store = this.store();\r\n            var loadFields = [];\r\n            var loadOptions = {\r\n                columns: loadFields,\r\n                rows: [],\r\n                values: this.getAreaFields(\"data\"),\r\n                filters: applyFilters ? this._fields.filter(function(f) {\r\n                    return f !== field && f.area && f.filterValues && f.filterValues.length\r\n                }) : [],\r\n                skipValues: true\r\n            };\r\n            var searchValue;\r\n            var d = new _deferred.Deferred;\r\n            if (options) {\r\n                searchValue = options.searchValue;\r\n                loadOptions.columnSkip = options.skip;\r\n                loadOptions.columnTake = options.take\r\n            }\r\n            if (field && store) {\r\n                (0, _iterator.each)(field.levels || [field], function() {\r\n                    loadFields.push((0, _extend.extend)({}, this, {\r\n                        expanded: true,\r\n                        filterValues: null,\r\n                        sortOrder: \"asc\",\r\n                        sortBySummaryField: null,\r\n                        searchValue: searchValue\r\n                    }))\r\n                });\r\n                store.load(loadOptions).done(function(data) {\r\n                    if (loadOptions.columnSkip) {\r\n                        data.columns = data.columns.slice(loadOptions.columnSkip)\r\n                    }\r\n                    if (loadOptions.columnTake) {\r\n                        data.columns = data.columns.slice(0, loadOptions.columnTake)\r\n                    }\r\n                    formatHeaders(loadOptions, data);\r\n                    if (!loadOptions.columnTake) {\r\n                        that._sort(loadOptions, data)\r\n                    }\r\n                    d.resolve(data.columns)\r\n                }).fail(d)\r\n            } else {\r\n                d.reject()\r\n            }\r\n            return d\r\n        },\r\n        reload: function() {\r\n            return this.load({\r\n                reload: true\r\n            })\r\n        },\r\n        filter: function() {\r\n            var store = this._store;\r\n            return store.filter.apply(store, arguments)\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var d = new _deferred.Deferred;\r\n            options = options || {};\r\n            that.beginLoading();\r\n            d.fail(function(e) {\r\n                that._eventsStrategy.fireEvent(\"loadError\", [e])\r\n            }).always(function() {\r\n                that.endLoading()\r\n            });\r\n\r\n            function loadTask() {\r\n                that._delayedLoadTask = void 0;\r\n                if (!that._descriptions) {\r\n                    (0, _deferred.when)(getFields(that)).done(function(fields) {\r\n                        that._fieldsPrepared(fields);\r\n                        that._loadCore(options, d)\r\n                    }).fail(d.reject).fail(that._loadErrorHandler)\r\n                } else {\r\n                    that._loadCore(options, d)\r\n                }\r\n            }\r\n            if (that.store()) {\r\n                that._delayedLoadTask = (0, _common.executeAsync)(loadTask)\r\n            } else {\r\n                loadTask()\r\n            }\r\n            return d\r\n        },\r\n        createDrillDownDataSource: function(params) {\r\n            return this._store.createDrillDownDataSource(this._descriptions, params)\r\n        },\r\n        _createDescriptions: function(currentField) {\r\n            var that = this;\r\n            var fields = that.fields();\r\n            var descriptions = {\r\n                rows: [],\r\n                columns: [],\r\n                values: [],\r\n                filters: []\r\n            };\r\n            (0, _iterator.each)([\"row\", \"column\", \"data\", \"filter\"], function(_, areaName) {\r\n                (0, _array.normalizeIndexes)(_getAreaFields(fields, areaName), \"areaIndex\", currentField)\r\n            });\r\n            (0, _iterator.each)(fields || [], function(_, field) {\r\n                var descriptionName = DESCRIPTION_NAME_BY_AREA[field.area];\r\n                var dimension = descriptions[descriptionName];\r\n                var groupName = field.groupName;\r\n                if (groupName && !(0, _type.isNumeric)(field.groupIndex)) {\r\n                    field.levels = getFieldsByGroup(fields, field)\r\n                }\r\n                if (!dimension || groupName && (0, _type.isNumeric)(field.groupIndex) || false === field.visible && \"data\" !== field.area && \"filter\" !== field.area) {\r\n                    return\r\n                }\r\n                if (field.levels && dimension !== descriptions.filters && dimension !== descriptions.values) {\r\n                    dimension.push.apply(dimension, field.levels);\r\n                    if (field.filterValues && field.filterValues.length) {\r\n                        descriptions.filters.push(field)\r\n                    }\r\n                } else {\r\n                    dimension.push(field)\r\n                }\r\n            });\r\n            (0, _iterator.each)(descriptions, function(_, fields) {\r\n                sortFieldsByAreaIndex(fields)\r\n            });\r\n            var indices = {};\r\n            (0, _iterator.each)(descriptions.values, function(_, field) {\r\n                var expression = field.calculateSummaryValue;\r\n                if ((0, _type.isFunction)(expression)) {\r\n                    var summaryCell = (0, _uiPivot_grid.createMockSummaryCell)(descriptions, fields, indices);\r\n                    expression(summaryCell)\r\n                }\r\n            });\r\n            return descriptions\r\n        },\r\n        _fieldsPrepared: function(fields) {\r\n            var that = this;\r\n            that._fields = fields;\r\n            (0, _iterator.each)(fields, function(index, field) {\r\n                field.index = index;\r\n                updateCalculatedFieldProperties(field, ALL_CALCULATED_PROPERTIES)\r\n            });\r\n            var currentFieldState = getFieldsState(fields, [\"caption\"]);\r\n            that._eventsStrategy.fireEvent(\"fieldsPrepared\", [fields]);\r\n            for (var i = 0; i < fields.length; i++) {\r\n                if (fields[i].caption !== currentFieldState[i].caption) {\r\n                    (0, _uiPivot_grid2.setFieldProperty)(fields[i], \"caption\", fields[i].caption, true)\r\n                }\r\n            }\r\n            that._descriptions = that._createDescriptions()\r\n        },\r\n        isLoading: function() {\r\n            return this._loadingCount > 0\r\n        },\r\n        state: function(_state, skipLoading) {\r\n            var that = this;\r\n            if (arguments.length) {\r\n                _state = (0, _extend.extend)({\r\n                    rowExpandedPaths: [],\r\n                    columnExpandedPaths: []\r\n                }, _state);\r\n                if (!that._descriptions) {\r\n                    that.beginLoading();\r\n                    (0, _deferred.when)(getFields(that)).done(function(fields) {\r\n                        that._fields = setFieldsState(_state.fields, fields);\r\n                        that._fieldsPrepared(fields);\r\n                        !skipLoading && that.load(_state)\r\n                    }).always(function() {\r\n                        that.endLoading()\r\n                    })\r\n                } else {\r\n                    that._fields = setFieldsState(_state.fields, that._fields);\r\n                    that._descriptions = that._createDescriptions();\r\n                    !skipLoading && that.load(_state)\r\n                }\r\n            } else {\r\n                return {\r\n                    fields: getFieldsState(that._fields, STATE_PROPERTIES),\r\n                    columnExpandedPaths: getExpandedPaths(that._data, that._descriptions, \"columns\", that._lastLoadOptions),\r\n                    rowExpandedPaths: getExpandedPaths(that._data, that._descriptions, \"rows\", that._lastLoadOptions)\r\n                }\r\n            }\r\n        },\r\n        beginLoading: function() {\r\n            this._changeLoadingCount(1)\r\n        },\r\n        endLoading: function() {\r\n            this._changeLoadingCount(-1)\r\n        },\r\n        _changeLoadingCount: function(increment) {\r\n            var oldLoading = this.isLoading();\r\n            this._loadingCount += increment;\r\n            var newLoading = this.isLoading();\r\n            if (oldLoading ^ newLoading) {\r\n                this._eventsStrategy.fireEvent(\"loadingChanged\", [newLoading])\r\n            }\r\n        },\r\n        _hasPagingValues: function(options, area, oppositeIndex) {\r\n            var takeField = area + \"Take\";\r\n            var skipField = area + \"Skip\";\r\n            var values = this._data.values;\r\n            var items = this._data[area + \"s\"];\r\n            var oppositeArea = \"row\" === area ? \"column\" : \"row\";\r\n            var indices = [];\r\n            if (options.path && options.area === area) {\r\n                var headerItem = findHeaderItem(items, options.path);\r\n                items = headerItem && headerItem.children;\r\n                if (!items) {\r\n                    return false\r\n                }\r\n            }\r\n            if (options.oppositePath && options.area === oppositeArea) {\r\n                var _headerItem = findHeaderItem(items, options.oppositePath);\r\n                items = _headerItem && _headerItem.children;\r\n                if (!items) {\r\n                    return false\r\n                }\r\n            }\r\n            for (var i = options[skipField]; i < options[skipField] + options[takeField]; i++) {\r\n                if (items[i]) {\r\n                    indices.push(items[i].index)\r\n                }\r\n            }\r\n            return indices.every(function(index) {\r\n                if (void 0 !== index) {\r\n                    if (\"row\" === area) {\r\n                        return (values[index] || [])[oppositeIndex]\r\n                    } else {\r\n                        return (values[oppositeIndex] || [])[index]\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _processPagingCacheByArea: function(options, pageSize, area) {\r\n            var takeField = area + \"Take\";\r\n            var skipField = area + \"Skip\";\r\n            var items = this._data[area + \"s\"];\r\n            var oppositeArea = \"row\" === area ? \"column\" : \"row\";\r\n            var item;\r\n            if (options[takeField]) {\r\n                if (options.path && options.area === area) {\r\n                    var headerItem = findHeaderItem(items, options.path);\r\n                    items = headerItem && headerItem.children || []\r\n                }\r\n                if (options.oppositePath && options.area === oppositeArea) {\r\n                    var _headerItem2 = findHeaderItem(items, options.oppositePath);\r\n                    items = _headerItem2 && _headerItem2.children || []\r\n                }\r\n                do {\r\n                    item = items[options[skipField]];\r\n                    if (item && void 0 !== item.index) {\r\n                        if (this._hasPagingValues(options, oppositeArea, item.index)) {\r\n                            options[skipField]++;\r\n                            options[takeField]--\r\n                        } else {\r\n                            break\r\n                        }\r\n                    }\r\n                } while (item && void 0 !== item.index && options[takeField]);\r\n                if (options[takeField]) {\r\n                    var start = Math.floor(options[skipField] / pageSize) * pageSize;\r\n                    var end = Math.ceil((options[skipField] + options[takeField]) / pageSize) * pageSize;\r\n                    options[skipField] = start;\r\n                    options[takeField] = end - start\r\n                }\r\n            }\r\n        },\r\n        _processPagingCache: function(storeLoadOptions) {\r\n            var pageSize = this._pageSize;\r\n            if (pageSize < 0) {\r\n                return\r\n            }\r\n            for (var i = 0; i < storeLoadOptions.length; i++) {\r\n                this._processPagingCacheByArea(storeLoadOptions[i], pageSize, \"row\");\r\n                this._processPagingCacheByArea(storeLoadOptions[i], pageSize, \"column\")\r\n            }\r\n        },\r\n        _loadCore: function(options, deferred) {\r\n            var that = this;\r\n            var store = this._store;\r\n            var descriptions = this._descriptions;\r\n            var reload = options.reload || this.paginate() && that._isFieldsModified;\r\n            var paginate = this.paginate();\r\n            var headerName = DESCRIPTION_NAME_BY_AREA[options.area];\r\n            options = options || {};\r\n            if (store) {\r\n                (0, _extend.extend)(options, descriptions);\r\n                options.columnExpandedPaths = options.columnExpandedPaths || getExpandedPaths(this._data, options, \"columns\", that._lastLoadOptions);\r\n                options.rowExpandedPaths = options.rowExpandedPaths || getExpandedPaths(this._data, options, \"rows\", that._lastLoadOptions);\r\n                if (paginate) {\r\n                    options.pageSize = this._pageSize\r\n                }\r\n                if (headerName) {\r\n                    options.headerName = headerName\r\n                }\r\n                that.beginLoading();\r\n                deferred.always(function() {\r\n                    that.endLoading()\r\n                });\r\n                var storeLoadOptions = [options];\r\n                that._eventsStrategy.fireEvent(\"customizeStoreLoadOptions\", [storeLoadOptions, reload]);\r\n                if (!reload) {\r\n                    that._processPagingCache(storeLoadOptions)\r\n                }\r\n                storeLoadOptions = storeLoadOptions.filter(function(options) {\r\n                    return !(options.rows.length && 0 === options.rowTake) && !(options.columns.length && 0 === options.columnTake)\r\n                });\r\n                if (!storeLoadOptions.length) {\r\n                    that._update(deferred);\r\n                    return\r\n                }\r\n                var results = storeLoadOptions.map(function(options) {\r\n                    return store.load(options)\r\n                });\r\n                _deferred.when.apply(null, results).done(function() {\r\n                    var results = arguments;\r\n                    for (var i = 0; i < results.length; i++) {\r\n                        var _options = storeLoadOptions[i];\r\n                        var data = results[i];\r\n                        var isLast = i === results.length - 1;\r\n                        if (_options.path) {\r\n                            that.applyPartialDataSource(_options.area, _options.path, data, isLast ? deferred : false, _options.oppositePath)\r\n                        } else {\r\n                            if (paginate && !reload && isDataExists(that._data)) {\r\n                                that.mergePartialDataSource(data, isLast ? deferred : false)\r\n                            } else {\r\n                                (0, _extend.extend)(that._data, data);\r\n                                that._lastLoadOptions = _options;\r\n                                that._update(isLast ? deferred : false)\r\n                            }\r\n                        }\r\n                    }\r\n                }).fail(deferred.reject)\r\n            } else {\r\n                that._update(deferred)\r\n            }\r\n        },\r\n        _sort: function(descriptions, data, getAscOrder) {\r\n            var store = this._store;\r\n            if (store && !this._paginate) {\r\n                (0, _data_source.sort)(descriptions, data, getAscOrder)\r\n            }\r\n        },\r\n        paginate: function() {\r\n            return this._paginate && this._store && this._store.supportPaging()\r\n        },\r\n        isEmpty: function() {\r\n            var dataFields = this.getAreaFields(\"data\");\r\n            var data = this.getData();\r\n            return !dataFields.length || !data.values.length\r\n        },\r\n        _update: function(deferred) {\r\n            var that = this;\r\n            var descriptions = that._descriptions;\r\n            var loadedData = that._data;\r\n            var dataFields = descriptions.values;\r\n            var expressionsUsed = areExpressionsUsed(dataFields);\r\n            (0, _deferred.when)(formatHeaders(descriptions, loadedData), updateCache(loadedData.rows), updateCache(loadedData.columns)).done(function() {\r\n                if (expressionsUsed) {\r\n                    that._sort(descriptions, loadedData, expressionsUsed);\r\n                    !that.isEmpty() && (0, _uiPivot_grid.applyDisplaySummaryMode)(descriptions, loadedData)\r\n                }\r\n                that._sort(descriptions, loadedData);\r\n                !that.isEmpty() && isRunningTotalUsed(dataFields) && (0, _uiPivot_grid.applyRunningTotal)(descriptions, loadedData);\r\n                that._data = loadedData;\r\n                false !== deferred && (0, _deferred.when)(deferred).done(function() {\r\n                    that._isFieldsModified = false;\r\n                    that._eventsStrategy.fireEvent(\"changed\");\r\n                    if ((0, _type.isDefined)(that._data.grandTotalRowIndex)) {\r\n                        loadedData.grandTotalRowIndex = that._data.grandTotalRowIndex\r\n                    }\r\n                    if ((0, _type.isDefined)(that._data.grandTotalColumnIndex)) {\r\n                        loadedData.grandTotalColumnIndex = that._data.grandTotalColumnIndex\r\n                    }\r\n                });\r\n                deferred && deferred.resolve(that._data)\r\n            });\r\n            return deferred\r\n        },\r\n        store: function() {\r\n            return this._store\r\n        },\r\n        collapseHeaderItem: function(area, path) {\r\n            var that = this;\r\n            var headerItems = \"column\" === area ? that._data.columns : that._data.rows;\r\n            var headerItem = findHeaderItem(headerItems, path);\r\n            var field = that.getAreaFields(area)[path.length - 1];\r\n            if (headerItem && headerItem.children) {\r\n                that._eventsStrategy.fireEvent(\"expandValueChanging\", [{\r\n                    area: area,\r\n                    path: path,\r\n                    expanded: false\r\n                }]);\r\n                if (field) {\r\n                    field.expanded = false\r\n                }\r\n                headerItem.collapsedChildren = headerItem.children;\r\n                delete headerItem.children;\r\n                that._update();\r\n                if (that.paginate()) {\r\n                    that.load()\r\n                }\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        collapseAll: function(id) {\r\n            var _this = this;\r\n            var dataChanged = false;\r\n            var field = this.field(id) || {};\r\n            var areaOffsets = [(0, _array.inArray)(field, this.getAreaFields(field.area))];\r\n            field.expanded = false;\r\n            if (field && field.levels) {\r\n                areaOffsets = [];\r\n                field.levels.forEach(function(f) {\r\n                    areaOffsets.push((0, _array.inArray)(f, _this.getAreaFields(field.area)));\r\n                    f.expanded = false\r\n                })\r\n            }(0, _uiPivot_grid2.foreachTree)(this._data[field.area + \"s\"], function(items) {\r\n                var item = items[0];\r\n                var path = (0, _uiPivot_grid2.createPath)(items);\r\n                if (item && item.children && areaOffsets.indexOf(path.length - 1) !== -1) {\r\n                    item.collapsedChildren = item.children;\r\n                    delete item.children;\r\n                    dataChanged = true\r\n                }\r\n            }, true);\r\n            dataChanged && this._update()\r\n        },\r\n        expandAll: function(id) {\r\n            var field = this.field(id);\r\n            if (field && field.area) {\r\n                field.expanded = true;\r\n                if (field && field.levels) {\r\n                    field.levels.forEach(function(f) {\r\n                        f.expanded = true\r\n                    })\r\n                }\r\n                this.load()\r\n            }\r\n        },\r\n        expandHeaderItem: function(area, path) {\r\n            var that = this;\r\n            var headerItems = \"column\" === area ? that._data.columns : that._data.rows;\r\n            var headerItem = findHeaderItem(headerItems, path);\r\n            if (headerItem && !headerItem.children) {\r\n                var hasCache = !!headerItem.collapsedChildren;\r\n                var options = {\r\n                    area: area,\r\n                    path: path,\r\n                    expanded: true,\r\n                    needExpandData: !hasCache\r\n                };\r\n                that._eventsStrategy.fireEvent(\"expandValueChanging\", [options]);\r\n                if (hasCache) {\r\n                    headerItem.children = headerItem.collapsedChildren;\r\n                    delete headerItem.collapsedChildren;\r\n                    that._update()\r\n                } else {\r\n                    if (this.store()) {\r\n                        that.load(options)\r\n                    }\r\n                }\r\n                return hasCache\r\n            }\r\n            return false\r\n        },\r\n        mergePartialDataSource: function(dataSource, deferred) {\r\n            var that = this;\r\n            var loadedData = that._data;\r\n            var newRowItemIndexesToCurrent;\r\n            var newColumnItemIndexesToCurrent;\r\n            if (dataSource && dataSource.values) {\r\n                dataSource.rows = dataSource.rows || [];\r\n                dataSource.columns = dataSource.columns || [];\r\n                newRowItemIndexesToCurrent = updateHeaderItems(loadedData.rows, dataSource.rows, loadedData.grandTotalColumnIndex);\r\n                newColumnItemIndexesToCurrent = updateHeaderItems(loadedData.columns, dataSource.columns, loadedData.grandTotalColumnIndex);\r\n                (0, _deferred.when)(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent).done(function(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\r\n                    if (newRowItemIndexesToCurrent.length || newColumnItemIndexesToCurrent.length) {\r\n                        updateDataSourceCells(loadedData, dataSource.values, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent)\r\n                    }\r\n                    that._update(deferred)\r\n                })\r\n            }\r\n        },\r\n        applyPartialDataSource: function(area, path, dataSource, deferred, oppositePath) {\r\n            var that = this;\r\n            var loadedData = that._data;\r\n            var headerItems = \"column\" === area ? loadedData.columns : loadedData.rows;\r\n            var headerItem;\r\n            var oppositeHeaderItems = \"column\" === area ? loadedData.rows : loadedData.columns;\r\n            var oppositeHeaderItem;\r\n            var newRowItemIndexesToCurrent;\r\n            var newColumnItemIndexesToCurrent;\r\n            if (dataSource && dataSource.values) {\r\n                dataSource.rows = dataSource.rows || [];\r\n                dataSource.columns = dataSource.columns || [];\r\n                headerItem = findHeaderItem(headerItems, path);\r\n                oppositeHeaderItem = oppositePath && findHeaderItem(oppositeHeaderItems, oppositePath);\r\n                if (headerItem) {\r\n                    if (\"column\" === area) {\r\n                        newColumnItemIndexesToCurrent = updateHeaderItemChildren(headerItems, headerItem, dataSource.columns, loadedData.grandTotalColumnIndex);\r\n                        if (oppositeHeaderItem) {\r\n                            newRowItemIndexesToCurrent = updateHeaderItemChildren(oppositeHeaderItems, oppositeHeaderItem, dataSource.rows, loadedData.grandTotalRowIndex)\r\n                        } else {\r\n                            newRowItemIndexesToCurrent = updateHeaderItems(loadedData.rows, dataSource.rows, loadedData.grandTotalRowIndex)\r\n                        }\r\n                    } else {\r\n                        newRowItemIndexesToCurrent = updateHeaderItemChildren(headerItems, headerItem, dataSource.rows, loadedData.grandTotalRowIndex);\r\n                        if (oppositeHeaderItem) {\r\n                            newColumnItemIndexesToCurrent = updateHeaderItemChildren(oppositeHeaderItems, oppositeHeaderItem, dataSource.columns, loadedData.grandTotalColumnIndex)\r\n                        } else {\r\n                            newColumnItemIndexesToCurrent = updateHeaderItems(loadedData.columns, dataSource.columns, loadedData.grandTotalColumnIndex)\r\n                        }\r\n                    }(0, _deferred.when)(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent).done(function(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\r\n                        if (\"row\" === area && newRowItemIndexesToCurrent.length || \"column\" === area && newColumnItemIndexesToCurrent.length) {\r\n                            updateDataSourceCells(loadedData, dataSource.values, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent)\r\n                        }\r\n                        that._update(deferred)\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        on: function(eventName, eventHandler) {\r\n            this._eventsStrategy.on(eventName, eventHandler);\r\n            return this\r\n        },\r\n        off: function(eventName, eventHandler) {\r\n            this._eventsStrategy.off(eventName, eventHandler);\r\n            return this\r\n        },\r\n        dispose: function() {\r\n            var that = this;\r\n            var delayedLoadTask = that._delayedLoadTask;\r\n            this._eventsStrategy.dispose();\r\n            if (delayedLoadTask) {\r\n                delayedLoadTask.abort()\r\n            }\r\n            this._isDisposed = true\r\n        },\r\n        isDisposed: function() {\r\n            return !!this._isDisposed\r\n        }\r\n    }\r\n}());\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}