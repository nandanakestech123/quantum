{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Quantum\\\\WorkOrderInvoice\\\\AddWorkOrderInvoice\\\\details.js\";\nimport React from \"react\";\nimport { Toast } from \"service/toast\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { NormalButton, NormalDate, TableWrapper, InputSearch, NormalSelect } from \"component/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { withTranslation } from \"react-i18next\";\nimport { NormalInput, NormalDateTime } from \"component/common\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport updateBtn from \"assets/images/edit1.png\";\nimport deleteBtn from \"assets/images/delete1.png\";\nimport closeBtn from \"assets/images/close.png\";\nimport saveBtn from \"assets/images/save.png\";\nimport Select from \"react-select\";\nexport class DetailsClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Item Code\"\n      }, {\n        label: \"Item Description\"\n      }, //{ label: \"Unit Price\" },\n      {\n        label: \"Quantity\"\n      }, {\n        label: \"\"\n      }],\n      headerSelectedDetails: [{\n        label: \"Item Code\"\n      }, {\n        label: \"Item Description\"\n      }, {\n        label: \"Remarks\"\n      }, {\n        label: \"Quantity\"\n      }, //{ label: \"Unit Price\" },\n      {\n        label: \"\"\n      }, {\n        label: \"\"\n      }],\n      formFields: {\n        q_shipcost: \"\",\n        q_discount: \"\",\n        q_taxes: \"\",\n        q_total: \"\"\n      },\n      detailsList: [{\n        item_code: \"\",\n        item_desc: \"\",\n        item_remarks: \"\",\n        item_price: \"\",\n        item_quantity: \"\",\n        editing: false\n      }],\n      storedItemList: [],\n      pageMeta: {},\n      siteGstList: [],\n      search: \"\",\n      active: false,\n      currentIndex: -1,\n      page: 1,\n      // limit: 10,\n      limit: 4,\n      isOpenvoidCheckout: false,\n      isLoading: true,\n      // is_loading: false,\n      isMounted: true,\n      // salesCollectionHeader: [\n      //   { label: \"Sales Collection\" },\n      //   { label: \"Before Tax\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Qty\" },\n      // ],\n      // nonSalesCollectionHeader: [\n      //   { label: \"Non Sales Collection\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Qty\" },\n      // ],\n      // deptSalesHeader: [{ label: \"Dept Sales\" }, { label: \"Amount\" }],\n      // salesTransactionHeader: [\n      //   { label: \"Sales Transaction\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Paid\" },\n      //   { label: \"Outstanding\" },\n      // ],\n      // ARTransactionHeader: [{ label: \"AR Transaction\" }, { label: \"Amount\" }],\n      // TreatmentDoneHeader: [\n      //   { label: \"Customer\" },\n      //   { label: \"Customer Reference\" },\n      //   { label: \"Treatment Done\" },\n      //   { label: \"Description\" },\n      //   { label: \"Staff\" },\n      //   { label: \"Amount\" },\n      // DayDate: new Date(),\n      // runDayEnd: false,\n      // reportDate: \"\",\n      // sales_collec: null,\n      // sales_trasac: null,\n      // ar_trasac: null,\n      // treatment_done: null,\n      // dept_sales: null,\n      allInvoicesData: [],\n      workOrderNo: \"\",\n      allWorkOrderInvoiceLists: []\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.getManualOrderInvoices = () => {\n      if (this.props.custId !== 0) {\n        this.props.getCommonApi(`satransacnoreflist/?cust_id=${this.props.custId}`).then(res => {\n          console.log(\"res in work order history\", res);\n\n          if (res.status == 200) {\n            const arrayTransaction = res.data.map((data, key) => {\n              return {\n                label: data.sa_transacno_ref,\n                value: data.id,\n                flag: data.flag\n              };\n            });\n            this.setState({\n              allInvoicesData: arrayTransaction\n            });\n          }\n        });\n      }\n    };\n\n    this.autofillDetails = () => {\n      let formFields = Object.assign({}, this.state.formFields); // formFields[\"q_shipcost\"] = 12\n      // this.updateState({\n      //   formFields,\n      // });\n\n      this.props.getCommonApi(`workorderinvoicedetail/?searchqdetailid=${this.props.quoId}`).then(res => {\n        console.log(\"res in getAutofillItemDetails\", res);\n\n        if (res.status == 200) {\n          formFields[\"q_shipcost\"] = res.data[0].q_shipcost;\n          formFields[\"q_discount\"] = res.data[0].q_discount;\n          formFields[\"q_taxes\"] = res.data[0].q_taxes;\n          formFields[\"q_total\"] = res.data[0].q_total; // this.state.formFieldsDetailsStored.push(\"q_shipcost\":res.data[0].q_shipcost)\n\n          this.updateState({\n            formFields\n          });\n          console.log(\"this.state.formFields in componentWillMount\", this.state.formFields);\n        }\n      });\n    };\n\n    this.getDetails = () => {\n      this.updateState({\n        isLoading: true\n      });\n      let {\n        detailsList,\n        pageMeta,\n        page,\n        limit,\n        search\n      } = this.state; // let { item_desc } = formField;\n\n      this.props.getCommonApi(`qpoitem/?searchitemdesc=${search}&page=${page}&limit=${limit}`).then(async res => {\n        console.log(res, \"dsfdfaafg\");\n        await this.setState({\n          detailsList: []\n        });\n        detailsList = res.data.dataList; // pageMeta = res.data.meta.pagination;\n\n        pageMeta = res.data.pagination; // pageMeta = {per_page:5, current_page:1, total:2, total_pages:4}\n        // this.setState({ detailsList, pageMeta });\n        // this.setState({ detailsList });\n\n        console.log(\"res.data\", res.data);\n        console.log(\"detailsList\", detailsList);\n        console.log(\"pageMeta\", pageMeta);\n\n        for (let list in detailsList) {\n          // console.log(\"detailsList[list] before\",detailsList[list])\n          detailsList[list].item_quantity = \"\"; // console.log(\"detailsList[list] after\", detailsList[list])\n        }\n\n        console.log(\"detailsList after\", detailsList);\n        this.updateState({\n          detailsList,\n          pageMeta,\n          isLoading: false\n        });\n      });\n    };\n\n    this.handlePagination = async pageNo => {\n      let {\n        page\n      } = this.state;\n      page = pageNo.page;\n      await this.setState({\n        page\n      });\n      this.getDetails();\n    };\n\n    this.handlesearch = event => {\n      // event.persist();\n      console.log(event.target.value);\n      let {\n        search\n      } = this.state;\n      search = event.target.value;\n      this.setState({\n        search\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          this.getDetails({});\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleClick = key => {\n      if (!this.state.active) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      this.setState(prevState => ({\n        active: !prevState.active,\n        currentIndex: key\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleClick();\n    };\n\n    this.handleChangeDetails = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        storedItemList\n      } = this.state;\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      }, () => {\n        this.handleUpdateTotal();\n      });\n      console.log(\"formFields in handle change details\", formFields); // this.handleUpdateTotal();\n\n      this.props.storeItemDetails(storedItemList, formFields);\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        detailsList\n      } = this.state;\n      console.log(\"value\", value);\n      console.log(\"name\", name); // for (let list in detailsList) {\n      //   if (detailsList[list].item_code == name) {\n      //     detailsList[list].item_quantity = value;\n      //   }\n      //   console.log(\"detailsList[list].item_code\", detailsList[list].item_code);\n      // }\n\n      detailsList[0][name] = value;\n      await this.setState({\n        detailsList\n      });\n      console.log(\"detailsList in handleChange\", detailsList); // current_item_quantity = value\n      // this.setState({ current_item_quantity })\n    };\n\n    this.handleSelect = (item_code, item_desc, item_price, item_quantity) => {\n      let {\n        storedItemList,\n        detailsList,\n        formFields\n      } = this.state;\n\n      for (let item of storedItemList) {\n        if (item.item_code == item_code) {\n          Toast({\n            type: \"error\",\n            message: \"This item already exists\"\n          });\n          return;\n        }\n      }\n\n      console.log(\"item_code\", item_code);\n      console.log(\"item_desc\", item_desc);\n      console.log(\"item_price\", item_price);\n\n      if (item_quantity) {\n        storedItemList.push({\n          item_code: item_code,\n          item_desc: item_desc,\n          item_remarks: \"\",\n          item_price: item_price,\n          item_quantity: item_quantity,\n          editing: false\n        });\n      } else {\n        item_quantity = 1;\n        storedItemList.push({\n          item_code: item_code,\n          item_desc: item_desc,\n          item_remarks: \"\",\n          item_price: item_price,\n          item_quantity: item_quantity,\n          editing: false\n        });\n      }\n\n      console.log(\"storedItemList\", storedItemList);\n      this.setState({\n        storedItemList\n      });\n      this.handleUpdateTotal();\n      this.props.storeItemDetails(storedItemList, formFields);\n    };\n\n    this.handleRemoveStoredItem = item_code => {\n      let {\n        storedItemList,\n        formFields\n      } = this.state;\n\n      for (var i = 0; i < storedItemList.length; i++) {\n        if (storedItemList[i].item_code == item_code) {\n          storedItemList.splice(i, 1);\n        }\n      }\n\n      console.log(\"storedItemList after remove\", storedItemList);\n      this.setState({\n        storedItemList\n      });\n      this.handleUpdateTotal();\n      this.props.storeItemDetails(storedItemList, formFields);\n    };\n\n    this.handleEdit = item_code => {\n      let {\n        storedItemList\n      } = this.state;\n\n      for (let list in storedItemList) {\n        if (storedItemList[list].item_code == item_code) {\n          storedItemList[list].editing = true;\n        }\n      }\n\n      console.log(\"storedItemList in handleedit\", storedItemList);\n      this.setState({\n        storedItemList\n      });\n    };\n\n    this.handleSave = item_code => {\n      let {\n        storedItemList,\n        formFields\n      } = this.state;\n\n      for (let list in storedItemList) {\n        if (storedItemList[list].item_code == item_code) {\n          storedItemList[list].editing = false;\n        }\n      }\n\n      console.log(\"storedItemList in handleedit\", storedItemList);\n      this.setState({\n        storedItemList\n      });\n      this.handleUpdateTotal();\n      this.props.storeItemDetails(storedItemList, formFields);\n    };\n\n    this.handleEditChangeRemarks = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        storedItemList\n      } = this.state;\n\n      for (let list in storedItemList) {\n        if (storedItemList[list].item_code == name) {\n          storedItemList[list].item_remarks = value;\n        } // console.log(\"storedItemList[list].item_code\",storedItemList[list].item_code)\n\n      }\n\n      this.setState({\n        storedItemList\n      });\n      console.log(\"storedItemList in handleEditChange\", storedItemList);\n    };\n\n    this.handleEditChangePrice = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        storedItemList\n      } = this.state;\n\n      for (let list in storedItemList) {\n        if (storedItemList[list].item_code == name) {\n          storedItemList[list].item_price = value;\n        } // console.log(\"storedItemList[list].item_code\",storedItemList[list].item_code)\n\n      }\n\n      this.setState({\n        storedItemList\n      });\n      console.log(\"storedItemList in handleEditChange\", storedItemList);\n    };\n\n    this.handleEditChangeQuantity = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        storedItemList\n      } = this.state;\n\n      for (let list in storedItemList) {\n        if (storedItemList[list].item_code == name) {\n          storedItemList[list].item_quantity = value;\n        } // console.log(\"storedItemList[list].item_code\",storedItemList[list].item_code)\n\n      }\n\n      this.setState({\n        storedItemList\n      });\n      console.log(\"storedItemList in handleEditChange\", storedItemList);\n    };\n\n    this.autofillSaved = () => {\n      let {\n        storedItemList,\n        formFields\n      } = this.state;\n      storedItemList = this.props.storedItemListStored;\n      formFields.q_shipcost = this.props.formFieldsDetailsStored.q_shipcost;\n      formFields.q_discount = this.props.formFieldsDetailsStored.q_discount;\n      formFields.q_taxes = this.props.formFieldsDetailsStored.q_taxes;\n      formFields.q_total = this.props.formFieldsDetailsStored.q_total;\n      this.setState({\n        storedItemList,\n        formFields\n      });\n      console.log(\"storedItemList in autofillSaved\", storedItemList);\n      console.log(\"formFields in autofillSaved\", formFields);\n    };\n\n    this.handleUpdateTotal = () => {\n      let {\n        storedItemList,\n        formFields,\n        siteGstList\n      } = this.state; // console.log(\"siteGstList[0]\",siteGstList[0].site_is_gst)\n      // if(siteGstList[0].site_is_gst == false)\n\n      if (storedItemList.length !== 0) {\n        let costPrice = 0;\n        let subTotal = 0;\n        let taxes = 0;\n        let total = 0;\n\n        for (let item of storedItemList) {\n          costPrice = parseFloat(item.item_price) * parseFloat(item.item_quantity) + costPrice; // console.log(\"item.item_price\",item.item_price,typeof item.item_price)\n          // console.log(\"item.item_quantity\",item.item_quantity,typeof item.item_quantity)\n          // formFields.DOC_AMT = item.amount + formFields.DOC_AMT\n          // formFields.DOC_QTY = parseInt(item.item_quantity) + formFields.DOC_QTY\n        }\n\n        console.log(\"GST\");\n        console.log(\"formFields.q_shipcost\", formFields.q_shipcost, typeof formFields.q_shipcost);\n        console.log(\"costPrice\", costPrice);\n        subTotal = costPrice - (formFields.q_discount ? parseFloat(formFields.q_discount) : 0) + (formFields.q_shipcost ? parseFloat(formFields.q_shipcost) : 0);\n        taxes = Math.round(siteGstList[0].item_value / 100 * subTotal * 100) / 100;\n        total = Math.round((subTotal + taxes) * 100) / 100;\n        formFields.q_taxes = taxes;\n        formFields.q_total = total; // console.log(\"storedItemList in update total\",storedItemList)\n        // formFields.DOC_AMT = Math.round(formFields.DOC_AMT * 100) / 100\n        // console.log(\"formFields.DOC_AMT\",formFields.DOC_AMT, typeof formFields.DOC_AMT)\n\n        this.setState({\n          formFields\n        });\n        console.log(\"formFields in update total if\", formFields);\n      } else {\n        formFields.q_taxes = 0;\n        formFields.q_total = 0;\n        this.setState({\n          formFields\n        });\n        console.log(\"formFields in update total else\", formFields);\n      }\n    };\n\n    this.getIndividualWorkOrder = (value, flag) => {\n      const url = flag ? `transactionhistory/${value}/` : `manualinvoiceitemtable/?searchqitemid=${value}`;\n      this.props.getCommonApi(`${url}`).then(res => {\n        console.log(\"res in transaction history\", res);\n\n        if (res.status == 200) {\n          const obj = flag ? res.data.daud_lines : res.data;\n          const arrayItemsTranasaction = obj.map(data => {\n            return {\n              item_desc: data.item_desc,\n              item_code: data.item_code,\n              remarks: \"\",\n              quantity: data.dt_qty,\n              unit_price: data.dt_price\n            };\n          });\n          this.setState({\n            allWorkOrderInvoiceLists: arrayItemsTranasaction\n          });\n          console.log(res.data, \"transaction pdf\");\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.autofillSaved();\n  }\n\n  componentDidMount() {\n    // let From = new Date();\n    // let { formField } = this.state;\n    // let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\n    // formField[\"fromDate\"] = firstdayMonth;\n    // this.setState({\n    //   formField,\n    // });\n    //this.getDetails();\n    if (this.props.quoId) {//this.autofillDetails();\n    } // console.log(\"this.props.siteGstList\",this.props.siteGstList)\n    // if(this.props.siteCode){\n    //   this.getSiteGst()\n    // }\n    // this.queryHandler({});\n\n\n    console.log(\"this.props.storedItemListStored loaded\", this.props.storedItemListStored);\n    console.log(\"this.props.formFieldsDetailsStored loaded\", this.props.formFieldsDetailsStored); // console.log(\"formfields in comdidmount\", this.state.formFields)\n    //\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.siteGstList !== prevProps.siteGstList) {\n      // this.fetchData(this.props.siteGstList);\n      let {\n        siteGstList\n      } = this.state;\n      console.log(\"this.props.siteGstList in update\", this.props.siteGstList);\n      siteGstList = this.props.siteGstList;\n      this.setState({\n        siteGstList\n      }, () => {\n        this.handleUpdateTotal();\n      }); // this.handleUpdateTotal()\n    }\n\n    if (this.props.custId !== prevProps.custId) {\n      this.getManualOrderInvoices();\n    }\n  }\n\n  render() {\n    var _this$state$allWorkOr;\n\n    let {\n      headerDetails,\n      headerSelectedDetails,\n      pageMeta,\n      detailsList,\n      storedItemList,\n      isLoading,\n      formFields\n    } = this.state;\n    let {\n      q_shipcost,\n      q_discount,\n      q_taxes,\n      q_total\n    } = formFields;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text fs-17 pl-5 pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 13\n      }\n    }, \"All Invoices\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-address w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      isSearchable: true,\n      name: \"workOrderNo\",\n      options: this.state.allInvoicesData,\n      onChange: e => {\n        console.log(e);\n        let value = e.value;\n        const invoice = this.state.allInvoicesData.find(x => x.value == value);\n        this.getIndividualWorkOrder(value, invoice.flag);\n        this.setState({\n          workOrderNo: value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }\n    }, (_this$state$allWorkOr = this.state.allWorkOrderInvoiceLists) === null || _this$state$allWorkOr === void 0 ? void 0 : _this$state$allWorkOr.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 17\n      }\n    }, item.item_code), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 19\n      }\n    }, item.item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 17\n      }\n    }, item.quantity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      disabled: this.props.disableEdit,\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"warning\",\n      label: \"Select\",\n      onClick: () => this.handleSelect(item.item_code, item.item_desc, item.unit_price, item.quantity),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 21\n      }\n    }))))), detailsList ? detailsList.map((item, index) => {\n      let {\n        item_code,\n        item_desc,\n        item_price,\n        item_quantity\n      } = item;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        value: item_code,\n        name: `item_code`,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        value: item_desc,\n        name: `item_desc`,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        value: item_quantity,\n        disabled: this.props.disableEdit,\n        name: `item_quantity`,\n        onKeyPress: event => {\n          if (!/[0-9]/.test(event.key)) {\n            event.preventDefault();\n          }\n        },\n        type: `number`,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        disabled: this.props.disableEdit,\n        buttonClass: \"mx-2\",\n        mainbg: true,\n        className: \"warning\",\n        label: \"Select\",\n        onClick: () => this.handleSelect(item_code, item_desc, item_price, item_quantity),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 27\n        }\n      }))));\n    }) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerSelectedDetails // queryHandler={this.handlePagination}\n      // pageMeta={pageMeta}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 11\n      }\n    }, storedItemList ? storedItemList.map((item, index) => {\n      let {\n        item_code,\n        item_desc,\n        item_remarks,\n        item_quantity,\n        editing\n      } = item;\n      return editing == false ? /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-start justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 25\n        }\n      }, item_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-start justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 25\n        }\n      }, item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-start justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 25\n        }\n      }, item_remarks)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 25\n        }\n      }, item_quantity)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: updateBtn,\n        width: \"35\",\n        height: \"35\",\n        alt: \"\",\n        className: \"action-img bg-transparent\",\n        onClick: this.props.disableEdit == false ? () => this.handleEdit(item_code) : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: deleteBtn,\n        width: \"35\",\n        height: \"35\",\n        alt: \"\",\n        className: \"action-img bg-transparent \",\n        onClick: this.props.disableEdit == false ? () => this.handleRemoveStoredItem(item_code) : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 27\n        }\n      })))) : /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 25\n        }\n      }, item_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 25\n        }\n      }, item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        value: item_remarks,\n        disabled: this.props.disableEdit,\n        name: item_code,\n        onChange: this.handleEditChangeRemarks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        value: item_quantity,\n        disabled: this.props.disableEdit,\n        name: item_code,\n        onChange: this.handleEditChangeQuantity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: saveBtn,\n        width: \"35\",\n        height: \"35\",\n        alt: \"\",\n        className: \"action-img bg-transparent \",\n        onClick: this.props.disableEdit == false ? () => this.handleSave(item_code) : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 27\n        }\n      }))));\n    }) : null)));\n  }\n\n} // const mapStateToProps = state => ({\n//   projectDetail: state.project.projectDetail,\n// });\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi // deleteProject,\n    // getProject\n\n  }, dispatch);\n};\n\nexport const Details = withTranslation()(connect(null, mapDispatchToProps)(DetailsClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Quantum/WorkOrderInvoice/AddWorkOrderInvoice/details.js"],"names":["React","Toast","connect","bindActionCreators","getCommonApi","NormalButton","NormalDate","TableWrapper","InputSearch","NormalSelect","dateFormat","withTranslation","NormalInput","NormalDateTime","Link","_","updateBtn","deleteBtn","closeBtn","saveBtn","Select","DetailsClass","Component","state","headerDetails","label","headerSelectedDetails","formFields","q_shipcost","q_discount","q_taxes","q_total","detailsList","item_code","item_desc","item_remarks","item_price","item_quantity","editing","storedItemList","pageMeta","siteGstList","search","active","currentIndex","page","limit","isOpenvoidCheckout","isLoading","isMounted","allInvoicesData","workOrderNo","allWorkOrderInvoiceLists","updateState","data","setState","getManualOrderInvoices","props","custId","then","res","console","log","status","arrayTransaction","map","key","sa_transacno_ref","value","id","flag","autofillDetails","Object","assign","quoId","getDetails","dataList","pagination","list","handlePagination","pageNo","handlesearch","event","target","debouncedFn","debounce","handleClick","document","addEventListener","handleOutsideClick","removeEventListener","prevState","e","node","contains","handleChangeDetails","name","handleUpdateTotal","storeItemDetails","handleChange","handleSelect","item","type","message","push","handleRemoveStoredItem","i","length","splice","handleEdit","handleSave","handleEditChangeRemarks","handleEditChangePrice","handleEditChangeQuantity","autofillSaved","storedItemListStored","formFieldsDetailsStored","costPrice","subTotal","taxes","total","parseFloat","Math","round","item_value","getIndividualWorkOrder","url","obj","daud_lines","arrayItemsTranasaction","remarks","quantity","dt_qty","unit_price","dt_price","componentWillMount","componentDidMount","componentDidUpdate","prevProps","render","t","invoice","find","x","index","disableEdit","test","preventDefault","mapDispatchToProps","dispatch","Details"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Toast } from \"service/toast\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi } from \"redux/actions/common\";\r\nimport {\r\n  NormalButton,\r\n  NormalDate,\r\n  TableWrapper,\r\n  InputSearch,\r\n  NormalSelect,\r\n} from \"component/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { NormalInput, NormalDateTime } from \"component/common\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport updateBtn from \"assets/images/edit1.png\";\r\nimport deleteBtn from \"assets/images/delete1.png\";\r\nimport closeBtn from \"assets/images/close.png\";\r\nimport saveBtn from \"assets/images/save.png\";\r\nimport Select from \"react-select\";\r\nexport class DetailsClass extends React.Component {\r\n  state = {\r\n    headerDetails: [\r\n      { label: \"Item Code\" },\r\n      { label: \"Item Description\" },\r\n      //{ label: \"Unit Price\" },\r\n      { label: \"Quantity\" },\r\n      { label: \"\" },\r\n    ],\r\n    headerSelectedDetails: [\r\n      { label: \"Item Code\" },\r\n      { label: \"Item Description\" },\r\n      { label: \"Remarks\" },\r\n      { label: \"Quantity\" },\r\n      //{ label: \"Unit Price\" },\r\n      { label: \"\" },\r\n      { label: \"\" },\r\n    ],\r\n    formFields: {\r\n      q_shipcost: \"\",\r\n      q_discount: \"\",\r\n      q_taxes: \"\",\r\n      q_total: \"\",\r\n    },\r\n\r\n    detailsList: [\r\n      {\r\n        item_code: \"\",\r\n        item_desc: \"\",\r\n        item_remarks: \"\",\r\n        item_price: \"\",\r\n        item_quantity: \"\",\r\n        editing: false,\r\n      },\r\n    ],\r\n    storedItemList: [],\r\n    pageMeta: {},\r\n\r\n    siteGstList: [],\r\n\r\n    search: \"\",\r\n    active: false,\r\n    currentIndex: -1,\r\n    page: 1,\r\n    // limit: 10,\r\n    limit: 4,\r\n    isOpenvoidCheckout: false,\r\n    isLoading: true,\r\n    // is_loading: false,\r\n    isMounted: true,\r\n\r\n    // salesCollectionHeader: [\r\n    //   { label: \"Sales Collection\" },\r\n    //   { label: \"Before Tax\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Qty\" },\r\n    // ],\r\n    // nonSalesCollectionHeader: [\r\n    //   { label: \"Non Sales Collection\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Qty\" },\r\n    // ],\r\n    // deptSalesHeader: [{ label: \"Dept Sales\" }, { label: \"Amount\" }],\r\n    // salesTransactionHeader: [\r\n    //   { label: \"Sales Transaction\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Paid\" },\r\n    //   { label: \"Outstanding\" },\r\n    // ],\r\n    // ARTransactionHeader: [{ label: \"AR Transaction\" }, { label: \"Amount\" }],\r\n    // TreatmentDoneHeader: [\r\n    //   { label: \"Customer\" },\r\n    //   { label: \"Customer Reference\" },\r\n    //   { label: \"Treatment Done\" },\r\n    //   { label: \"Description\" },\r\n    //   { label: \"Staff\" },\r\n    //   { label: \"Amount\" },\r\n    // DayDate: new Date(),\r\n    // runDayEnd: false,\r\n    // reportDate: \"\",\r\n    // sales_collec: null,\r\n    // sales_trasac: null,\r\n    // ar_trasac: null,\r\n    // treatment_done: null,\r\n    // dept_sales: null,\r\n    allInvoicesData: [],\r\n    workOrderNo: \"\",\r\n    allWorkOrderInvoiceLists: [],\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.autofillSaved();\r\n  }\r\n\r\n  updateState = (data) => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  componentDidMount() {\r\n    // let From = new Date();\r\n    // let { formField } = this.state;\r\n    // let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\r\n    // formField[\"fromDate\"] = firstdayMonth;\r\n    // this.setState({\r\n    //   formField,\r\n    // });\r\n\r\n    //this.getDetails();\r\n    if (this.props.quoId) {\r\n      //this.autofillDetails();\r\n    }\r\n\r\n    // console.log(\"this.props.siteGstList\",this.props.siteGstList)\r\n\r\n    // if(this.props.siteCode){\r\n    //   this.getSiteGst()\r\n    // }\r\n    \r\n    // this.queryHandler({});\r\n    console.log(\r\n      \"this.props.storedItemListStored loaded\",\r\n      this.props.storedItemListStored\r\n    );\r\n    console.log(\r\n      \"this.props.formFieldsDetailsStored loaded\",\r\n      this.props.formFieldsDetailsStored\r\n    );\r\n    // console.log(\"formfields in comdidmount\", this.state.formFields)\r\n\r\n    //\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (this.props.siteGstList !== prevProps.siteGstList) {\r\n      // this.fetchData(this.props.siteGstList);\r\n      let { siteGstList } = this.state;\r\n      console.log(\"this.props.siteGstList in update\", this.props.siteGstList);\r\n      siteGstList = this.props.siteGstList;\r\n      this.setState({ siteGstList }, () => {\r\n        this.handleUpdateTotal();\r\n      });\r\n      // this.handleUpdateTotal()\r\n    }\r\n    if(this.props.custId !==prevProps.custId){\r\n      this.getManualOrderInvoices();\r\n\r\n    }\r\n  }\r\n  getManualOrderInvoices = () => {\r\n    if(this.props.custId!==0){\r\n    this.props\r\n      .getCommonApi(\r\n        `satransacnoreflist/?cust_id=${this.props.custId}`\r\n      )\r\n      .then((res) => {\r\n        console.log(\"res in work order history\", res);\r\n        if (res.status == 200) {\r\n          const arrayTransaction = res.data.map((data, key) => {\r\n            return {\r\n              label: data.sa_transacno_ref,\r\n              value: data.id,\r\n              flag:data.flag\r\n            };\r\n          });\r\n          this.setState({ allInvoicesData: arrayTransaction });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  autofillDetails = () => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n    // formFields[\"q_shipcost\"] = 12\r\n    // this.updateState({\r\n    //   formFields,\r\n    // });\r\n    this.props\r\n      .getCommonApi(\r\n        `workorderinvoicedetail/?searchqdetailid=${this.props.quoId}`\r\n      )\r\n      .then((res) => {\r\n        console.log(\"res in getAutofillItemDetails\", res);\r\n        if (res.status == 200) {\r\n          formFields[\"q_shipcost\"] = res.data[0].q_shipcost;\r\n          formFields[\"q_discount\"] = res.data[0].q_discount;\r\n          formFields[\"q_taxes\"] = res.data[0].q_taxes;\r\n          formFields[\"q_total\"] = res.data[0].q_total;\r\n          // this.state.formFieldsDetailsStored.push(\"q_shipcost\":res.data[0].q_shipcost)\r\n          this.updateState({\r\n            formFields,\r\n          });\r\n          console.log(\r\n            \"this.state.formFields in componentWillMount\",\r\n            this.state.formFields\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  getDetails = () => {\r\n    this.updateState({ isLoading: true });\r\n    let { detailsList, pageMeta, page, limit, search } = this.state;\r\n    // let { item_desc } = formField;\r\n\r\n    this.props\r\n      .getCommonApi(\r\n        `qpoitem/?searchitemdesc=${search}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(async (res) => {\r\n        console.log(res, \"dsfdfaafg\");\r\n        await this.setState({ detailsList: [] });\r\n        detailsList = res.data.dataList;\r\n        // pageMeta = res.data.meta.pagination;\r\n        pageMeta = res.data.pagination;\r\n        // pageMeta = {per_page:5, current_page:1, total:2, total_pages:4}\r\n        // this.setState({ detailsList, pageMeta });\r\n        // this.setState({ detailsList });\r\n\r\n        console.log(\"res.data\", res.data);\r\n        console.log(\"detailsList\", detailsList);\r\n        console.log(\"pageMeta\", pageMeta);\r\n\r\n        for (let list in detailsList) {\r\n          // console.log(\"detailsList[list] before\",detailsList[list])\r\n          detailsList[list].item_quantity = \"\";\r\n          // console.log(\"detailsList[list] after\", detailsList[list])\r\n        }\r\n        console.log(\"detailsList after\", detailsList);\r\n\r\n        this.updateState({\r\n          detailsList,\r\n          pageMeta,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handlePagination = async (pageNo) => {\r\n    let { page } = this.state;\r\n    page = pageNo.page;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    this.getDetails();\r\n  };\r\n  // pagination\r\n  // handlePagination = page => {\r\n  //   this.queryHandler(page);\r\n  // };\r\n\r\n  handlesearch = (event) => {\r\n    // event.persist();\r\n    console.log(event.target.value);\r\n    let { search } = this.state;\r\n    search = event.target.value;\r\n    this.setState({ search });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {\r\n        this.getDetails({});\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  handleClick = (key) => {\r\n    if (!this.state.active) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState((prevState) => ({\r\n      active: !prevState.active,\r\n      currentIndex: key,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = (e) => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleClick();\r\n  };\r\n\r\n  handleChangeDetails = ({ target: { value, name } }) => {\r\n    let { storedItemList } = this.state;\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState(\r\n      {\r\n        formFields,\r\n      },\r\n      () => {\r\n        this.handleUpdateTotal();\r\n      }\r\n    );\r\n    console.log(\"formFields in handle change details\", formFields);\r\n    // this.handleUpdateTotal();\r\n    this.props.storeItemDetails(storedItemList, formFields);\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    \r\n    let { detailsList } = this.state;\r\n    console.log(\"value\", value);\r\n    console.log(\"name\", name);\r\n\r\n    // for (let list in detailsList) {\r\n    //   if (detailsList[list].item_code == name) {\r\n    //     detailsList[list].item_quantity = value;\r\n    //   }\r\n    //   console.log(\"detailsList[list].item_code\", detailsList[list].item_code);\r\n    // }\r\n\r\n    detailsList[0][name] = value;\r\n\r\n    await this.setState({\r\n      detailsList,\r\n    });\r\n    console.log(\"detailsList in handleChange\", detailsList);\r\n    // current_item_quantity = value\r\n    // this.setState({ current_item_quantity })\r\n  };\r\n\r\n  handleSelect = (item_code, item_desc, item_price, item_quantity) => {\r\n    let { storedItemList, detailsList, formFields } = this.state;\r\n    for (let item of storedItemList) {\r\n      if (item.item_code == item_code) {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"This item already exists\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    console.log(\"item_code\", item_code);\r\n    console.log(\"item_desc\", item_desc);\r\n    console.log(\"item_price\", item_price);\r\n\r\n    if (item_quantity) {\r\n      storedItemList.push({\r\n        item_code: item_code,\r\n        item_desc: item_desc,\r\n        item_remarks: \"\",\r\n        item_price: item_price,\r\n        item_quantity: item_quantity,\r\n        editing: false,\r\n      });\r\n    } else {\r\n      item_quantity = 1;\r\n      storedItemList.push({\r\n        item_code: item_code,\r\n        item_desc: item_desc,\r\n        item_remarks: \"\",\r\n        item_price: item_price,\r\n        item_quantity: item_quantity,\r\n        editing: false,\r\n      });\r\n    }\r\n\r\n    console.log(\"storedItemList\", storedItemList);\r\n    this.setState({ storedItemList });\r\n    this.handleUpdateTotal();\r\n    this.props.storeItemDetails(storedItemList, formFields);\r\n  };\r\n\r\n  handleRemoveStoredItem = (item_code) => {\r\n    let { storedItemList, formFields } = this.state;\r\n    for (var i = 0; i < storedItemList.length; i++) {\r\n      if (storedItemList[i].item_code == item_code) {\r\n        storedItemList.splice(i, 1);\r\n      }\r\n    }\r\n    console.log(\"storedItemList after remove\", storedItemList);\r\n    this.setState({ storedItemList });\r\n    this.handleUpdateTotal();\r\n    this.props.storeItemDetails(storedItemList, formFields);\r\n  };\r\n\r\n  handleEdit = (item_code) => {\r\n    let { storedItemList } = this.state;\r\n    for (let list in storedItemList) {\r\n      if (storedItemList[list].item_code == item_code) {\r\n        storedItemList[list].editing = true;\r\n      }\r\n    }\r\n    console.log(\"storedItemList in handleedit\", storedItemList);\r\n\r\n    this.setState({ storedItemList });\r\n  };\r\n\r\n  handleSave = (item_code) => {\r\n    let { storedItemList, formFields } = this.state;\r\n    for (let list in storedItemList) {\r\n      if (storedItemList[list].item_code == item_code) {\r\n        storedItemList[list].editing = false;\r\n      }\r\n    }\r\n    console.log(\"storedItemList in handleedit\", storedItemList);\r\n\r\n    this.setState({ storedItemList });\r\n    this.handleUpdateTotal();\r\n    this.props.storeItemDetails(storedItemList, formFields);\r\n  };\r\n\r\n  // handleClose = (item_code) => {\r\n  //   let {storedItemList, storedItemListTemp, tempItem} = this.state\r\n\r\n  //   console.log(\"storedItemListTemp in handleClose\", storedItemListTemp)\r\n  //   console.log(\"tempItem in handleClose\", tempItem)\r\n\r\n  //   for (let list in storedItemListTemp){\r\n  //     if (storedItemListTemp[list].item_code == item_code){\r\n  //       tempItem = storedItemListTemp[list]\r\n\r\n  //     }\r\n  //   }\r\n  //   console.log(\"tempItem in handleClose\", tempItem)\r\n\r\n  //   for (let list in storedItemList){\r\n  //     if (storedItemList[list].item_code == item_code){\r\n  //       storedItemList[list].editing = false\r\n  //       storedItemList[list].item_remarks = tempItem.item_remarks\r\n  //       storedItemList[list].item_price = tempItem.item_price\r\n  //       storedItemList[list].item_quantity = tempItem.item_quantity\r\n\r\n  //     }\r\n  //   }\r\n  //   console.log(\"storedItemList in handleClose\", storedItemList)\r\n\r\n  //   this.setState({storedItemList})\r\n  // }\r\n\r\n  // handleSave = (item_code) => {\r\n  //   let {storedItemList} = this.state\r\n  //   for (let list in storedItemList){\r\n  //     if (storedItemList[list].item_code == item_code){\r\n  //       storedItemList[list].editing = false\r\n\r\n  //     }\r\n  //   }\r\n  //   console.log(\"storedItemList in handleClose\", storedItemList)\r\n\r\n  //   this.setState({storedItemList})\r\n  // }\r\n\r\n  handleEditChangeRemarks = ({ target: { value, name } }) => {\r\n    let { storedItemList } = this.state;\r\n\r\n    for (let list in storedItemList) {\r\n      if (storedItemList[list].item_code == name) {\r\n        storedItemList[list].item_remarks = value;\r\n      }\r\n      // console.log(\"storedItemList[list].item_code\",storedItemList[list].item_code)\r\n    }\r\n\r\n    this.setState({\r\n      storedItemList,\r\n    });\r\n\r\n    console.log(\"storedItemList in handleEditChange\", storedItemList);\r\n  };\r\n\r\n  handleEditChangePrice = ({ target: { value, name } }) => {\r\n    let { storedItemList } = this.state;\r\n\r\n    for (let list in storedItemList) {\r\n      if (storedItemList[list].item_code == name) {\r\n        storedItemList[list].item_price = value;\r\n      }\r\n      // console.log(\"storedItemList[list].item_code\",storedItemList[list].item_code)\r\n    }\r\n\r\n    this.setState({\r\n      storedItemList,\r\n    });\r\n    console.log(\"storedItemList in handleEditChange\", storedItemList);\r\n  };\r\n\r\n  handleEditChangeQuantity = ({ target: { value, name } }) => {\r\n    let { storedItemList } = this.state;\r\n\r\n    for (let list in storedItemList) {\r\n      if (storedItemList[list].item_code == name) {\r\n        storedItemList[list].item_quantity = value;\r\n      }\r\n      // console.log(\"storedItemList[list].item_code\",storedItemList[list].item_code)\r\n    }\r\n\r\n    this.setState({\r\n      storedItemList,\r\n    });\r\n    console.log(\"storedItemList in handleEditChange\", storedItemList);\r\n  };\r\n\r\n  autofillSaved = () => {\r\n    let { storedItemList, formFields } = this.state;\r\n\r\n    storedItemList = this.props.storedItemListStored;\r\n\r\n    formFields.q_shipcost = this.props.formFieldsDetailsStored.q_shipcost;\r\n    formFields.q_discount = this.props.formFieldsDetailsStored.q_discount;\r\n    formFields.q_taxes = this.props.formFieldsDetailsStored.q_taxes;\r\n    formFields.q_total = this.props.formFieldsDetailsStored.q_total;\r\n\r\n    this.setState({ storedItemList, formFields });\r\n    console.log(\"storedItemList in autofillSaved\", storedItemList);\r\n    console.log(\"formFields in autofillSaved\", formFields);\r\n  };\r\n\r\n  handleUpdateTotal = () => {\r\n    let { storedItemList, formFields, siteGstList } = this.state;\r\n    // console.log(\"siteGstList[0]\",siteGstList[0].site_is_gst)\r\n    // if(siteGstList[0].site_is_gst == false)\r\n\r\n    if (storedItemList.length !== 0) {\r\n      let costPrice = 0;\r\n      let subTotal = 0;\r\n      let taxes = 0;\r\n      let total = 0;\r\n      for (let item of storedItemList) {\r\n        costPrice =\r\n          parseFloat(item.item_price) * parseFloat(item.item_quantity) +\r\n          costPrice;\r\n        // console.log(\"item.item_price\",item.item_price,typeof item.item_price)\r\n        // console.log(\"item.item_quantity\",item.item_quantity,typeof item.item_quantity)\r\n        // formFields.DOC_AMT = item.amount + formFields.DOC_AMT\r\n        // formFields.DOC_QTY = parseInt(item.item_quantity) + formFields.DOC_QTY\r\n      }\r\n      console.log(\"GST\");\r\n      console.log(\r\n        \"formFields.q_shipcost\",\r\n        formFields.q_shipcost,\r\n        typeof formFields.q_shipcost\r\n      );\r\n      console.log(\"costPrice\", costPrice);\r\n\r\n      subTotal =\r\n        costPrice -\r\n        (formFields.q_discount ? parseFloat(formFields.q_discount) : 0) +\r\n        (formFields.q_shipcost ? parseFloat(formFields.q_shipcost) : 0);\r\n      taxes =\r\n        Math.round((siteGstList[0].item_value / 100) * subTotal * 100) / 100;\r\n\r\n      total = Math.round((subTotal + taxes) * 100) / 100;\r\n\r\n      formFields.q_taxes = taxes;\r\n      formFields.q_total = total;\r\n      // console.log(\"storedItemList in update total\",storedItemList)\r\n      // formFields.DOC_AMT = Math.round(formFields.DOC_AMT * 100) / 100\r\n      // console.log(\"formFields.DOC_AMT\",formFields.DOC_AMT, typeof formFields.DOC_AMT)\r\n      this.setState({ formFields });\r\n      console.log(\"formFields in update total if\", formFields);\r\n    } else {\r\n      formFields.q_taxes = 0;\r\n      formFields.q_total = 0;\r\n      this.setState({ formFields });\r\n      console.log(\"formFields in update total else\", formFields);\r\n    }\r\n  };\r\n  getIndividualWorkOrder = (value,flag) => {\r\n    const url=flag?`transactionhistory/${value}/`:`manualinvoiceitemtable/?searchqitemid=${value}`;\r\n    this.props\r\n      .getCommonApi(`${url}`)\r\n      .then((res) => {\r\n        console.log(\"res in transaction history\", res);\r\n        if (res.status == 200) {\r\n          const obj=flag?res.data.daud_lines:res.data;\r\n          const arrayItemsTranasaction = obj.map((data) => {\r\n            return {\r\n              item_desc: data.item_desc,\r\n              item_code: data.item_code,\r\n              remarks: \"\",\r\n              quantity: data.dt_qty,\r\n              unit_price: data.dt_price,\r\n            };\r\n          });\r\n          this.setState({ allWorkOrderInvoiceLists: arrayItemsTranasaction });\r\n          console.log(res.data, \"transaction pdf\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      headerSelectedDetails,\r\n      pageMeta,\r\n      detailsList,\r\n      storedItemList,\r\n      isLoading,\r\n      formFields,\r\n    } = this.state;\r\n\r\n    let { q_shipcost, q_discount, q_taxes, q_total } = formFields;\r\n\r\n    let { t } = this.props;\r\n\r\n    return (\r\n      <div className=\"py-4\">\r\n        <div className=\"table-container\">\r\n          {/* <div className=\"row\">\r\n            <div className=\"col-8\"></div>\r\n\r\n            <div className=\"col-4 mb-3\">\r\n              <div className=\"w-100\">\r\n                <InputSearch\r\n                  placeholder=\"Search Item\"\r\n                  onChange={this.handlesearch}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n\r\n          <div className=\"d-flex mb-3\">\r\n            <label className=\"text-left w-100 text-black common-label-text fs-17 pl-5 pt-2\">\r\n              All Invoices\r\n            </label>\r\n            {/* <div className=\"input-group-address w-100\">\r\n              <NormalSelect\r\n                options={this.state.allInvoicesData}\r\n                // disabled={this.props.disableEdit}\r\n                value={this.state.workOrderNo}\r\n                name=\"workOrderNo\"\r\n                onChange={({ target: { value, name } }) => {\r\n                  console.log(value);\r\n                  this.getIndividualWorkOrder(value);\r\n                  this.setState({ workOrderNo: value });\r\n                }}\r\n              />\r\n            </div> */}\r\n            <div className=\"input-group-address w-100\">\r\n              <Select\r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                isSearchable={true}\r\n                name=\"workOrderNo\"\r\n                options={this.state.allInvoicesData}\r\n                onChange={(e) => {\r\n                  console.log(e);\r\n                  let value = e.value\r\n                  const invoice= this.state.allInvoicesData.find(x=> x.value==value);\r\n                  this.getIndividualWorkOrder(value , invoice.flag);\r\n                  this.setState({ workOrderNo: value });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <TableWrapper\r\n            headerDetails={headerDetails}\r\n            queryHandler={this.handlePagination}\r\n            pageMeta={pageMeta}\r\n          >\r\n            {this.state.allWorkOrderInvoiceLists?.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.item_code}</td>\r\n                <td>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    {item.item_desc}\r\n                  </div>\r\n                </td>\r\n                {/*<td>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    {item.unit_price}\r\n                  </div>\r\n  \r\n            </td>*/}\r\n\r\n                <td>{item.quantity}</td>\r\n\r\n                <td>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    <NormalButton\r\n                      disabled={this.props.disableEdit}\r\n                      buttonClass={\"mx-2\"}\r\n                      mainbg={true}\r\n                      className=\"warning\"\r\n                      label=\"Select\"\r\n                      onClick={() =>\r\n                        this.handleSelect(\r\n                          item.item_code,\r\n                          item.item_desc,\r\n                          item.unit_price,                          \r\n                          item.quantity\r\n                        )\r\n                      }\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            {detailsList\r\n              ? detailsList.map((item, index) => {\r\n                  let { item_code, item_desc, item_price, item_quantity } =\r\n                    item;\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <NormalInput\r\n                          value={item_code}\r\n                          name={`item_code`}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <NormalInput\r\n                            value={item_desc}\r\n                            name={`item_desc`}\r\n                            onChange={this.handleChange}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                     {/* <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <NormalInput\r\n                            value={item_price}\r\n                            type={`number`}\r\n                            name={`item_price`}\r\n                            onChange={this.handleChange}\r\n                          />\r\n                        </div>\r\n                  </td>*/}\r\n\r\n                      <td>\r\n                        <NormalInput\r\n                          value={item_quantity}\r\n                          disabled={this.props.disableEdit}\r\n                          name={`item_quantity`}\r\n                          onKeyPress={(event) => {\r\n                            if (!/[0-9]/.test(event.key)) {\r\n                              event.preventDefault();\r\n                            }\r\n                          }}\r\n                          type={`number`}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </td>\r\n\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <NormalButton\r\n                            disabled={this.props.disableEdit}\r\n                            buttonClass={\"mx-2\"}\r\n                            mainbg={true}\r\n                            className=\"warning\"\r\n                            label=\"Select\"\r\n                            onClick={() =>\r\n                              this.handleSelect(\r\n                                item_code,\r\n                                item_desc,\r\n                                item_price,                                \r\n                                item_quantity\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </TableWrapper>\r\n\r\n          <div className=\"row mt-5\"></div>\r\n          <TableWrapper\r\n            headerDetails={headerSelectedDetails}\r\n            // queryHandler={this.handlePagination}\r\n            // pageMeta={pageMeta}\r\n          >\r\n            {storedItemList\r\n              ? storedItemList.map((item, index) => {\r\n                  let {\r\n                    item_code,\r\n                    item_desc,\r\n                    item_remarks,                    \r\n                    item_quantity,\r\n                    editing,\r\n                  } = item;\r\n                  return editing == false ? (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-start justify-content-start\">\r\n                          {item_code}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-start justify-content-start\">\r\n                          {item_desc}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-start justify-content-start\">\r\n                          {item_remarks}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex\">\r\n                          {item_quantity}\r\n                        </div>\r\n                      </td>\r\n                     {/* <td>\r\n                        <div className=\"d-flex align-items-end justify-content-end\">\r\n                          {item_price}\r\n                        </div>\r\n                      </td>*/}\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <img\r\n                            src={updateBtn}\r\n                            width=\"35\"\r\n                            height=\"35\"\r\n                            alt=\"\"\r\n                            className=\"action-img bg-transparent\"\r\n                            onClick={\r\n                              this.props.disableEdit == false\r\n                                ? () => this.handleEdit(item_code)\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <img\r\n                            src={deleteBtn}\r\n                            width=\"35\"\r\n                            height=\"35\"\r\n                            alt=\"\"\r\n                            className=\"action-img bg-transparent \"\r\n                            onClick={\r\n                              this.props.disableEdit == false\r\n                                ? () => this.handleRemoveStoredItem(item_code)\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {item_code}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          {item_desc}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <NormalInput\r\n                            value={item_remarks}\r\n                            disabled={this.props.disableEdit}\r\n                            name={item_code}\r\n                            onChange={this.handleEditChangeRemarks}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                     {/* <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <NormalInput\r\n                            value={item_price}\r\n                            disabled={this.props.disableEdit}\r\n                            name={item_code}\r\n                            onChange={this.handleEditChangePrice}\r\n                          />\r\n                        </div>\r\n                  </td>*/}\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <NormalInput\r\n                            value={item_quantity}\r\n                            disabled={this.props.disableEdit}\r\n                            name={item_code}\r\n                            onChange={this.handleEditChangeQuantity}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                      {/* <td>\r\n                              <div className=\"d-flex align-items-center justify-content-center\">\r\n                                <img\r\n                                  src={closeBtn}\r\n                                  width=\"35\"\r\n                                  height=\"35\"\r\n                                  alt=\"\"\r\n                                  className=\"action-img bg-transparent\"\r\n                                  onClick={() =>this.handleClose(item_code)}\r\n                                />\r\n                              </div>\r\n                            </td> */}\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <img\r\n                            src={saveBtn}\r\n                            width=\"35\"\r\n                            height=\"35\"\r\n                            alt=\"\"\r\n                            className=\"action-img bg-transparent \"\r\n                            onClick={\r\n                              this.props.disableEdit == false\r\n                                ? () => this.handleSave(item_code)\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </TableWrapper>\r\n\r\n         { /*<div className=\"row justify-content-end mt-5\">\r\n            <div className=\"col-4\">\r\n              <div className=\"d-flex mb-3\">\r\n                <label className=\"text-left w-100 text-black common-label-text fs-15 pl-5 pt-2\">\r\n                  {t(\"Shipping Cost\")}\r\n                </label>\r\n                <div className=\"input-group-address w-100\">\r\n                  <NormalInput\r\n                    placeholder=\"0\"\r\n                    disabled={this.props.disableEdit}\r\n                    value={q_shipcost}\r\n                    name=\"q_shipcost\"\r\n                    onChange={this.handleChangeDetails}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex mb-3\">\r\n                <label className=\"text-left w-100 text-black common-label-text fs-15 pl-5 pt-2\">\r\n                  {t(\"Discount\")}\r\n                </label>\r\n                <div className=\"input-group-address w-100\">\r\n                  <NormalInput\r\n                    placeholder=\"0\"\r\n                    disabled={this.props.disableEdit}\r\n                    value={q_discount}\r\n                    name=\"q_discount\"\r\n                    onChange={this.handleChangeDetails}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex mb-3\">\r\n                <label className=\"text-left w-100 text-black common-label-text fs-15 pl-5 pt-2\">\r\n                  {t(\"Taxes\")}\r\n                </label>\r\n                <div className=\"input-group-address w-100\">\r\n                  <NormalInput\r\n                    placeholder=\"0\"\r\n                    disabled={true}\r\n                    value={q_taxes}\r\n                    name=\"q_taxes\"\r\n                    // onChange={this.handleChangeDetails}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex mb-3\">\r\n                <label className=\"text-left w-100 text-black common-label-text fs-15 pl-5 pt-2\">\r\n                  {t(\"Total\")}\r\n                </label>\r\n                <div className=\"input-group-address w-100\">\r\n                  <NormalInput\r\n                    placeholder=\"0\"\r\n                    disabled={true}\r\n                    value={q_total}\r\n                    name=\"q_total\"\r\n                    // onChange={this.handleChangeDetails}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                        {this.props.validator.message(\r\n                          t(\"Total\"),\r\n                          q_total,\r\n                          t(\"required\")\r\n                        )}\r\n                    </div>\r\n            </div>\r\n          </div>\r\n                        */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   projectDetail: state.project.projectDetail,\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      // deleteProject,\r\n      // getProject\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const Details = withTranslation()(\r\n  connect(null, mapDispatchToProps)(DetailsClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}