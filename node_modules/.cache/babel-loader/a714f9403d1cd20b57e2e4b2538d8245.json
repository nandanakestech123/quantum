{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\StaffPlus\\\\StaffSchedule\\\\index.js\";\nimport React from \"react\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Navigation } from \"react-minimal-side-navigation\";\nimport { getJobtitle, getCommonApi } from \"redux/actions/common\";\nimport { getStaffPlus, getStaffSchedule, getAllEmpSchedule, updateStaffPlusSchedule } from \"redux/actions/staffPlus\";\nimport { NormalSelect, NormalInput, Pagination, NormalButton } from \"component/common\";\nimport { ScheduleTable } from \"./SheduleTable\";\nimport { CalenderTable } from \"./CalenderTable\";\nimport { BigCalander } from \"./BigCalander\";\n\nclass StaffScheduleClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentMenu: \"/indi\",\n      startMonth: new Date(),\n      endMonth: new Date(),\n      selectedMonth: new Date(),\n      fullScheduleMonth: new Date(),\n      formFields: {\n        ws: [],\n        ws_id: \"\",\n        altws: [],\n        altws_id: \"\",\n        cal_data: [],\n        status: \"All\",\n        staff_data: []\n      },\n      pageMeta: {},\n      jobOption_selected: \"\",\n      jobOption: [],\n      staffList_selected: \"\",\n      staffList: [],\n      siteOptions: [],\n      filteredSiteOptions: [],\n      selected_site: \"\",\n      fullSchedule_selected_site: \"\",\n      isLoading: true,\n      isMounted: true,\n      scheduleOptions: [],\n      isMounted: true\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.getDatafromStore = async () => {\n      await this.props.getJobtitle();\n      let scheduleRes = await this.props.getCommonApi(\"WorkScheduleHours/\");\n      let siteRes = await this.props.getCommonApi(\"branchlist/\");\n      let {\n        jobtitleList\n      } = this.props;\n      let {\n        jobOption,\n        jobOption_selected,\n        siteOptions,\n        filteredSiteOptions,\n        scheduleOptions\n      } = this.state;\n\n      for (let key of jobtitleList) {\n        jobOption.push({\n          label: key.level_desc,\n          value: key.id\n        });\n      }\n\n      for (let key of siteRes.data) {\n        siteOptions.push({\n          value: key.id,\n          label: key.itemsite_desc\n        });\n      }\n\n      for (let key of scheduleRes.schedules) {\n        scheduleOptions.push({\n          id: key.id,\n          value: key.itm_code,\n          label: key.itm_desc,\n          color: key.itm_color,\n          shortDesc: key.shortDesc\n        });\n      }\n\n      this.updateState({\n        jobOption,\n        jobOption_selected,\n        siteOptions,\n        filteredSiteOptions,\n        scheduleOptions,\n        isLoading: false\n      });\n    };\n\n    this.updateStaffList = async () => {\n      this.updateState({\n        isLoading: true\n      });\n      let {\n        staffList,\n        staffList_selected,\n        formFields,\n        selected_site\n      } = this.state;\n      formFields.ws = [];\n      formFields.altws = [];\n      formFields.cal_data = [];\n      formFields.staff_data = [];\n      staffList_selected = \"\";\n      selected_site = \"\";\n\n      if (this.state.jobOption_selected == \"\") {\n        staffList = [];\n      } else {\n        await this.props.getStaffPlus(`?limit=100&EMP_TYPEid=${this.state.jobOption_selected}`);\n        let {\n          staffPlusDetail\n        } = this.props;\n        staffPlusDetail.dataList.forEach(key => {\n          staffList.push({\n            label: key.emp_name,\n            value: key.emp_code,\n            sites: key.Site_Codeid\n          });\n        });\n      }\n\n      this.updateState({\n        staffList,\n        formFields,\n        staffList_selected,\n        selected_site,\n        isLoading: false\n      });\n    };\n\n    this.updateSiteList = () => {\n      let {\n        staffList_selected,\n        staffList,\n        filteredSiteOptions,\n        siteOptions,\n        selected_site,\n        formFields\n      } = this.state;\n      selected_site = \"\";\n      formFields.ws = [];\n      formFields.altws = [];\n      formFields.cal_data = [];\n      filteredSiteOptions = [];\n      let selected = staffList.find(e => e.value == staffList_selected);\n      filteredSiteOptions = siteOptions.filter(e => e.value == selected.sites);\n      this.updateState({\n        filteredSiteOptions,\n        formFields,\n        selected_site\n      });\n    };\n\n    this.getScheduleData = async () => {\n      let {\n        startMonth,\n        endMonth,\n        jobOption_selected,\n        selected_site,\n        staffList_selected,\n        formFields\n      } = this.state;\n      if (selected_site == \"\" || staffList_selected == \"\" || jobOption_selected == \"\") return;\n      let startDate = new Date(startMonth);\n      let d = startDate.getDate();\n      let day = d < 10 ? \"0\" + d : d;\n      let a = startDate.getMonth() + 1;\n      let month = a < 10 ? \"0\" + a : a;\n      let year = startDate.getFullYear();\n      startDate = `${year}-${month}-${1}`;\n      let endDate = new Date(endMonth);\n      endDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 0);\n      d = endDate.getDate();\n      day = d < 10 ? \"0\" + d : d;\n      a = endDate.getMonth() + 1;\n      month = a < 10 ? \"0\" + a : a;\n      year = endDate.getFullYear();\n      endDate = `${year}-${month}-${day}`;\n      this.updateState({\n        isLoading: true\n      });\n      await this.props.getStaffSchedule(`?emp_code=${staffList_selected}&site_code=${selected_site}&start=${startDate}&end=${endDate}`);\n      let {\n        weekSchedule,\n        altWeekSchedule,\n        monthlySchedule\n      } = this.props.staffSchedule;\n      formFields.ws_id = weekSchedule.id;\n      formFields.ws.monday = weekSchedule.monday;\n      formFields.ws.tuesday = weekSchedule.tuesday;\n      formFields.ws.wednesday = weekSchedule.wednesday;\n      formFields.ws.thursday = weekSchedule.thursday;\n      formFields.ws.friday = weekSchedule.friday;\n      formFields.ws.saturday = weekSchedule.saturday;\n      formFields.ws.sunday = weekSchedule.sunday;\n      formFields.altws_id = altWeekSchedule.id;\n      formFields.altws.monday = altWeekSchedule.monday;\n      formFields.altws.tuesday = altWeekSchedule.tuesday;\n      formFields.altws.wednesday = altWeekSchedule.wednesday;\n      formFields.altws.thursday = altWeekSchedule.thursday;\n      formFields.altws.friday = altWeekSchedule.friday;\n      formFields.altws.saturday = altWeekSchedule.saturday;\n      formFields.altws.sunday = altWeekSchedule.sunday;\n      formFields.cal_data = monthlySchedule;\n      this.updateState({\n        formFields,\n        isLoading: false\n      });\n    };\n\n    this.getFullScheduleData = async (page = 1) => {\n      let {\n        selected_site,\n        fullScheduleMonth,\n        formFields,\n        pageMeta\n      } = this.state;\n      formFields.staff_data = [];\n\n      if (selected_site == \"\") {\n        return this.updateState({\n          formFields\n        });\n      }\n\n      this.updateState({\n        isLoading: true\n      });\n      let date = new Date(fullScheduleMonth);\n      let month = date.getMonth() + 1;\n      let year = date.getFullYear();\n      await this.props.getAllEmpSchedule(`?site_id=${selected_site}&limit=10&year=${year}&month=${month}&page=${page}`);\n      let {\n        staffAllEmpSchedule\n      } = this.props;\n      pageMeta = staffAllEmpSchedule.pagination;\n      formFields.staff_data = staffAllEmpSchedule.fullSchedule;\n      this.updateState({\n        formFields,\n        pageMeta,\n        isLoading: false\n      });\n    };\n\n    this.onJobChanged = e => {\n      this.state.jobOption_selected = e.target.value;\n      this.updateState({});\n      this.updateStaffList();\n    };\n\n    this.onStaffChanged = e => {\n      this.state.staffList_selected = e.target.value;\n      this.updateState({});\n      this.updateSiteList();\n    };\n\n    this.onSiteChange = e => {\n      this.state.selected_site = e.target.value;\n      this.updateState({});\n      this.getScheduleData();\n    };\n\n    this.onSiteOptionChange = e => {\n      this.state.selected_site = e.target.value;\n      this.updateState({});\n      this.getFullScheduleData({});\n    };\n\n    this.onFullScheduleMonthChange = e => {\n      this.state.fullScheduleMonth = e.target.value;\n      this.updateState({});\n      this.getFullScheduleData({});\n    };\n\n    this.onFullScheduleSiteChange = e => {\n      this.state.fullSchedule_selected_site = e.target.value;\n      this.updateState({});\n      this.getFullScheduleData({});\n    };\n\n    this.onApplyToMonthlySchedule = () => {\n      let {\n        ws,\n        cal_data\n      } = this.state.formFields;\n\n      for (let key of cal_data) {\n        var date = new Date(key.itm_date);\n        var day = date.getDay();\n\n        switch (day) {\n          case 0:\n            key.itm_type = ws.sunday;\n            break;\n\n          case 1:\n            key.itm_type = ws.monday;\n            break;\n\n          case 2:\n            key.itm_type = ws.tuesday;\n            break;\n\n          case 3:\n            key.itm_type = ws.wednesday;\n            break;\n\n          case 4:\n            key.itm_type = ws.thursday;\n            break;\n\n          case 5:\n            key.itm_type = ws.friday;\n            break;\n\n          case 6:\n            key.itm_type = ws.saturday;\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      this.updateState({});\n    };\n\n    this.onSubmit = async () => {\n      let {\n        formFields\n      } = this.state;\n      if (formFields.cal_data.length == 0) return;\n      this.updateState({\n        isLoading: true\n      });\n      var data = {\n        monthlySchedule: {},\n        weekSchedule: {},\n        altWeekSchedule: {}\n      };\n      data.monthlySchedule = formFields.cal_data;\n      data.weekSchedule.id = formFields.ws_id;\n      data.weekSchedule.monday = formFields.ws.monday;\n      data.weekSchedule.tuesday = formFields.ws.tuesday;\n      data.weekSchedule.wednesday = formFields.ws.wednesday;\n      data.weekSchedule.thursday = formFields.ws.thursday;\n      data.weekSchedule.friday = formFields.ws.friday;\n      data.weekSchedule.saturday = formFields.ws.saturday;\n      data.weekSchedule.sunday = formFields.ws.sunday;\n      data.altWeekSchedule.id = formFields.altws_id;\n      data.altWeekSchedule.monday = formFields.altws.monday;\n      data.altWeekSchedule.tuesday = formFields.altws.tuesday;\n      data.altWeekSchedule.wednesday = formFields.altws.wednesday;\n      data.altWeekSchedule.thursday = formFields.altws.thursday;\n      data.altWeekSchedule.friday = formFields.altws.friday;\n      data.altWeekSchedule.saturday = formFields.altws.saturday;\n      data.altWeekSchedule.sunday = formFields.altws.sunday;\n\n      try {\n        await this.props.updateStaffPlusSchedule(JSON.stringify(data));\n      } catch (error) {\n        console.log(error);\n        this.updateState({\n          isLoading: false\n        });\n      }\n\n      this.updateState({\n        isLoading: false\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentWillMount() {\n    const queryParams = new URLSearchParams(window.location.search);\n    const menu = queryParams.get(\"menu\");\n    if (menu) if (menu == \"full\" || menu == \"indi\") this.updateState({\n      currentMenu: \"/\" + menu\n    });\n    const date = new Date();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const year = date.getFullYear();\n    this.updateState({\n      selectedMonth: `${year}-${month}`,\n      startMonth: `${year}-${month}`,\n      endMonth: `${year}-${month}`,\n      fullScheduleMonth: `${year}-${month}`\n    });\n    this.getDatafromStore();\n  }\n\n  render() {\n    let {\n      currentMenu,\n      formFields,\n      startMonth,\n      endMonth,\n      jobOption,\n      jobOption_selected,\n      staffList_selected,\n      staffList,\n      filteredSiteOptions,\n      isLoading,\n      selected_site,\n      siteOptions,\n      selectedMonth,\n      scheduleOptions,\n      fullScheduleMonth,\n      pageMeta\n    } = this.state;\n    let {\n      ws,\n      altws,\n      cal_data,\n      staff_data\n    } = formFields;\n\n    const handleMenuSelection = value => {\n      this.updateState({\n        currentMenu: value\n      });\n    };\n\n    const handleMonthChange = e => {\n      this.state[e.target.name] = e.target.value;\n\n      if (e.target.name == \"startMonth\") {\n        this.state.endMonth = this.state.startMonth;\n        this.state.selectedMonth = this.state.startMonth;\n      } else if (e.target.name == \"endMonth\") this.state.selectedMonth = this.state.startMonth;\n\n      if (e.target.name != \"selectedMonth\") this.getScheduleData();\n      this.updateState({});\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-lg-2 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      activeItemId: currentMenu,\n      onSelect: ({\n        itemId\n      }) => handleMenuSelection(itemId),\n      items: [{\n        title: \"Individual Schedule\",\n        itemId: \"/indi\"\n      }, {\n        title: \"Full Schedule\",\n        itemId: \"/full\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    })), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 19\n      }\n    }, \"Loading...\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }, currentMenu == \"/indi\" ? \"Individual\" : \"Full\", \" Staff Schedule\"))), currentMenu == \"/indi\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 25\n      }\n    }, \"Employee Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: jobOption,\n      value: jobOption_selected,\n      onChange: this.onJobChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 25\n      }\n    }, \"Staff\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: staffList,\n      value: staffList_selected,\n      onChange: this.onStaffChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 25\n      }\n    }, \"Site List\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: filteredSiteOptions,\n      value: selected_site,\n      onChange: this.onSiteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 25\n      }\n    }, \"Work Schedule\"), /*#__PURE__*/React.createElement(ScheduleTable, {\n      data: ws,\n      altws_data: altws,\n      optionList: scheduleOptions,\n      onChange: data => {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"ws\"] = data;\n        this.updateState({\n          formFields\n        });\n      },\n      onAltChange: data => {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"altws\"] = data;\n        this.updateState({\n          formFields\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 25\n      }\n    })))), cal_data.length == 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Apply to Monthly Schedule\",\n      mainbg: true,\n      onClick: this.onApplyToMonthlySchedule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 25\n      }\n    }, \"Start Year and Month\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"month\",\n      value: startMonth,\n      name: \"startMonth\",\n      onChange: handleMonthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 25\n      }\n    }, \"End Year and Month\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"month\",\n      value: endMonth,\n      min: startMonth,\n      name: \"endMonth\",\n      onChange: handleMonthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 25\n      }\n    }, \"Selected Year and Month\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"month\",\n      value: selectedMonth,\n      min: startMonth,\n      max: endMonth,\n      name: \"selectedMonth\",\n      onChange: handleMonthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CalenderTable, {\n      data: cal_data,\n      date: selectedMonth,\n      optionList: scheduleOptions,\n      onChange: data => {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"cal_data\"] = data;\n        this.updateState({\n          formFields\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 27\n      }\n    }))))), cal_data.length == 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-12 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Save\",\n      success: true,\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 27\n      }\n    }))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 25\n      }\n    }, \"Site\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: siteOptions,\n      value: selected_site,\n      name: \"selected_site\",\n      onChange: this.onSiteOptionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 25\n      }\n    }, \"Year and Month\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: \"month\",\n      value: fullScheduleMonth,\n      onChange: this.onFullScheduleMonthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BigCalander, {\n      date: startMonth,\n      data: staff_data,\n      options: scheduleOptions,\n      disabled: true,\n      onChange: this.onFullScheduleSiteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 27\n      }\n    })), pageMeta && /*#__PURE__*/React.createElement(Pagination, {\n      handlePagination: this.getFullScheduleData,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 15\n      }\n    }, scheduleOptions.map(e => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 col-lg-4 col-sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"20px\",\n          height: \"20px\",\n          marginRight: \"5px\",\n          backgroundColor: `${e.color}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 25\n        }\n      }), e.shortDesc, \" - \", e.label));\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  jobtitleList: state.common.jobtitleList,\n  staffPlusDetail: state.staffPlus.staffPlusDetail,\n  staffSchedule: state.staffPlus.staffPlusSchedule,\n  staffAllEmpSchedule: state.staffPlus.staffPlusAllEmpSchedule\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getJobtitle,\n    getStaffPlus,\n    getCommonApi,\n    getStaffSchedule,\n    getAllEmpSchedule,\n    updateStaffPlusSchedule\n  }, dispatch);\n};\n\nexport const StaffSchedule = connect(mapStateToProps, mapDispatchToProps)(StaffScheduleClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/StaffPlus/StaffSchedule/index.js"],"names":["React","connect","bindActionCreators","Navigation","getJobtitle","getCommonApi","getStaffPlus","getStaffSchedule","getAllEmpSchedule","updateStaffPlusSchedule","NormalSelect","NormalInput","Pagination","NormalButton","ScheduleTable","CalenderTable","BigCalander","StaffScheduleClass","Component","state","currentMenu","startMonth","Date","endMonth","selectedMonth","fullScheduleMonth","formFields","ws","ws_id","altws","altws_id","cal_data","status","staff_data","pageMeta","jobOption_selected","jobOption","staffList_selected","staffList","siteOptions","filteredSiteOptions","selected_site","fullSchedule_selected_site","isLoading","isMounted","scheduleOptions","updateState","data","setState","getDatafromStore","props","scheduleRes","siteRes","jobtitleList","key","push","label","level_desc","value","id","itemsite_desc","schedules","itm_code","itm_desc","color","itm_color","shortDesc","updateStaffList","staffPlusDetail","dataList","forEach","emp_name","emp_code","sites","Site_Codeid","updateSiteList","selected","find","e","filter","getScheduleData","startDate","d","getDate","day","a","getMonth","month","year","getFullYear","endDate","weekSchedule","altWeekSchedule","monthlySchedule","staffSchedule","monday","tuesday","wednesday","thursday","friday","saturday","sunday","getFullScheduleData","page","date","staffAllEmpSchedule","pagination","fullSchedule","onJobChanged","target","onStaffChanged","onSiteChange","onSiteOptionChange","onFullScheduleMonthChange","onFullScheduleSiteChange","onApplyToMonthlySchedule","itm_date","getDay","itm_type","onSubmit","length","JSON","stringify","error","console","log","componentWillUnmount","componentWillMount","queryParams","URLSearchParams","window","location","search","menu","get","slice","render","handleMenuSelection","handleMonthChange","name","itemId","title","map","width","height","marginRight","backgroundColor","mapStateToProps","common","staffPlus","staffPlusSchedule","staffPlusAllEmpSchedule","mapDispatchToProps","dispatch","StaffSchedule"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Navigation } from \"react-minimal-side-navigation\";\nimport { getJobtitle, getCommonApi } from \"redux/actions/common\";\nimport {\n  getStaffPlus,\n  getStaffSchedule,\n  getAllEmpSchedule,\n  updateStaffPlusSchedule,\n} from \"redux/actions/staffPlus\";\nimport {\n  NormalSelect,\n  NormalInput,\n  Pagination,\n  NormalButton,\n} from \"component/common\";\nimport { ScheduleTable } from \"./SheduleTable\";\nimport { CalenderTable } from \"./CalenderTable\";\nimport { BigCalander } from \"./BigCalander\";\n\nclass StaffScheduleClass extends React.Component {\n  state = {\n    currentMenu: \"/indi\",\n    startMonth: new Date(),\n    endMonth: new Date(),\n    selectedMonth: new Date(),\n    fullScheduleMonth: new Date(),\n    formFields: {\n      ws: [],\n      ws_id: \"\",\n      altws: [],\n      altws_id: \"\",\n      cal_data: [],\n      status: \"All\",\n      staff_data: [],\n    },\n    pageMeta: {},\n    jobOption_selected: \"\",\n    jobOption: [],\n    staffList_selected: \"\",\n    staffList: [],\n    siteOptions: [],\n    filteredSiteOptions: [],\n    selected_site: \"\",\n    fullSchedule_selected_site: \"\",\n    isLoading: true,\n    isMounted: true,\n    scheduleOptions: [],\n    isMounted: true,\n  };\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  updateState = (data) => {\n    if (this.state.isMounted) this.setState(data);\n  };\n\n  componentWillMount() {\n    const queryParams = new URLSearchParams(window.location.search);\n    const menu = queryParams.get(\"menu\");\n    if (menu)\n      if (menu == \"full\" || menu == \"indi\")\n        this.updateState({ currentMenu: \"/\" + menu });\n    const date = new Date();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const year = date.getFullYear();\n\n    this.updateState({\n      selectedMonth: `${year}-${month}`,\n      startMonth: `${year}-${month}`,\n      endMonth: `${year}-${month}`,\n      fullScheduleMonth: `${year}-${month}`,\n    });\n    this.getDatafromStore();\n  }\n\n  getDatafromStore = async () => {\n    await this.props.getJobtitle();\n    let scheduleRes = await this.props.getCommonApi(\"WorkScheduleHours/\");\n    let siteRes = await this.props.getCommonApi(\"branchlist/\");\n    let { jobtitleList } = this.props;\n    let {\n      jobOption,\n      jobOption_selected,\n      siteOptions,\n      filteredSiteOptions,\n      scheduleOptions,\n    } = this.state;\n    for (let key of jobtitleList) {\n      jobOption.push({ label: key.level_desc, value: key.id });\n    }\n    for (let key of siteRes.data) {\n      siteOptions.push({ value: key.id, label: key.itemsite_desc });\n    }\n    for (let key of scheduleRes.schedules) {\n      scheduleOptions.push({\n        id: key.id,\n        value: key.itm_code,\n        label: key.itm_desc,\n        color: key.itm_color,\n        shortDesc: key.shortDesc,\n      });\n    }\n\n    this.updateState({\n      jobOption,\n      jobOption_selected,\n      siteOptions,\n      filteredSiteOptions,\n      scheduleOptions,\n      isLoading: false,\n    });\n  };\n\n  updateStaffList = async () => {\n    this.updateState({ isLoading: true });\n    let { staffList, staffList_selected, formFields, selected_site } =\n      this.state;\n    formFields.ws = [];\n    formFields.altws = [];\n    formFields.cal_data = [];\n    formFields.staff_data = [];\n    staffList_selected = \"\";\n    selected_site = \"\";\n    if (this.state.jobOption_selected == \"\") {\n      staffList = [];\n    } else {\n      await this.props.getStaffPlus(\n        `?limit=100&EMP_TYPEid=${this.state.jobOption_selected}`\n      );\n\n      let { staffPlusDetail } = this.props;\n\n      staffPlusDetail.dataList.forEach((key) => {\n        staffList.push({\n          label: key.emp_name,\n          value: key.emp_code,\n          sites: key.Site_Codeid,\n        });\n      });\n    }\n    this.updateState({\n      staffList,\n      formFields,\n      staffList_selected,\n      selected_site,\n      isLoading: false,\n    });\n  };\n\n  updateSiteList = () => {\n    let {\n      staffList_selected,\n      staffList,\n      filteredSiteOptions,\n      siteOptions,\n      selected_site,\n      formFields,\n    } = this.state;\n    selected_site = \"\";\n    formFields.ws = [];\n    formFields.altws = [];\n    formFields.cal_data = [];\n    filteredSiteOptions = [];\n    let selected = staffList.find((e) => e.value == staffList_selected);\n    filteredSiteOptions = siteOptions.filter((e) => e.value == selected.sites);\n    this.updateState({ filteredSiteOptions, formFields, selected_site });\n  };\n\n  getScheduleData = async () => {\n    let {\n      startMonth,\n      endMonth,\n      jobOption_selected,\n      selected_site,\n      staffList_selected,\n      formFields,\n    } = this.state;\n    if (\n      selected_site == \"\" ||\n      staffList_selected == \"\" ||\n      jobOption_selected == \"\"\n    )\n      return;\n    let startDate = new Date(startMonth);\n    let d = startDate.getDate();\n    let day = d < 10 ? \"0\" + d : d;\n    let a = startDate.getMonth() + 1;\n    let month = a < 10 ? \"0\" + a : a;\n    let year = startDate.getFullYear();\n    startDate = `${year}-${month}-${1}`;\n\n    let endDate = new Date(endMonth);\n    endDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 0);\n    d = endDate.getDate();\n    day = d < 10 ? \"0\" + d : d;\n    a = endDate.getMonth() + 1;\n    month = a < 10 ? \"0\" + a : a;\n    year = endDate.getFullYear();\n    endDate = `${year}-${month}-${day}`;\n    this.updateState({ isLoading: true });\n    await this.props.getStaffSchedule(\n      `?emp_code=${staffList_selected}&site_code=${selected_site}&start=${startDate}&end=${endDate}`\n    );\n    let { weekSchedule, altWeekSchedule, monthlySchedule } =\n      this.props.staffSchedule;\n    formFields.ws_id = weekSchedule.id;\n    formFields.ws.monday = weekSchedule.monday;\n    formFields.ws.tuesday = weekSchedule.tuesday;\n    formFields.ws.wednesday = weekSchedule.wednesday;\n    formFields.ws.thursday = weekSchedule.thursday;\n    formFields.ws.friday = weekSchedule.friday;\n    formFields.ws.saturday = weekSchedule.saturday;\n    formFields.ws.sunday = weekSchedule.sunday;\n    formFields.altws_id = altWeekSchedule.id;\n    formFields.altws.monday = altWeekSchedule.monday;\n    formFields.altws.tuesday = altWeekSchedule.tuesday;\n    formFields.altws.wednesday = altWeekSchedule.wednesday;\n    formFields.altws.thursday = altWeekSchedule.thursday;\n    formFields.altws.friday = altWeekSchedule.friday;\n    formFields.altws.saturday = altWeekSchedule.saturday;\n    formFields.altws.sunday = altWeekSchedule.sunday;\n    formFields.cal_data = monthlySchedule;\n    this.updateState({ formFields, isLoading: false });\n  };\n\n  getFullScheduleData = async (page = 1) => {\n    let { selected_site, fullScheduleMonth, formFields, pageMeta } = this.state;\n    formFields.staff_data = [];\n    if (selected_site == \"\") {\n      return this.updateState({ formFields });\n    }\n    this.updateState({ isLoading: true });\n    let date = new Date(fullScheduleMonth);\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    await this.props.getAllEmpSchedule(\n      `?site_id=${selected_site}&limit=10&year=${year}&month=${month}&page=${page}`\n    );\n    let { staffAllEmpSchedule } = this.props;\n    pageMeta = staffAllEmpSchedule.pagination;\n    formFields.staff_data = staffAllEmpSchedule.fullSchedule;\n    this.updateState({ formFields, pageMeta, isLoading: false });\n  };\n\n  onJobChanged = (e) => {\n    this.state.jobOption_selected = e.target.value;\n    this.updateState({});\n    this.updateStaffList();\n  };\n\n  onStaffChanged = (e) => {\n    this.state.staffList_selected = e.target.value;\n    this.updateState({});\n    this.updateSiteList();\n  };\n\n  onSiteChange = (e) => {\n    this.state.selected_site = e.target.value;\n    this.updateState({});\n    this.getScheduleData();\n  };\n\n  onSiteOptionChange = (e) => {\n    this.state.selected_site = e.target.value;\n    this.updateState({});\n    this.getFullScheduleData({});\n  };\n\n  onFullScheduleMonthChange = (e) => {\n    this.state.fullScheduleMonth = e.target.value;\n    this.updateState({});\n    this.getFullScheduleData({});\n  };\n\n  onFullScheduleSiteChange = (e) => {\n    this.state.fullSchedule_selected_site = e.target.value;\n    this.updateState({});\n    this.getFullScheduleData({});\n  };\n\n  onApplyToMonthlySchedule = () => {\n    let { ws, cal_data } = this.state.formFields;\n    for (let key of cal_data) {\n      var date = new Date(key.itm_date);\n      var day = date.getDay();\n      switch (day) {\n        case 0:\n          key.itm_type = ws.sunday;\n          break;\n        case 1:\n          key.itm_type = ws.monday;\n          break;\n        case 2:\n          key.itm_type = ws.tuesday;\n          break;\n        case 3:\n          key.itm_type = ws.wednesday;\n          break;\n        case 4:\n          key.itm_type = ws.thursday;\n          break;\n        case 5:\n          key.itm_type = ws.friday;\n          break;\n        case 6:\n          key.itm_type = ws.saturday;\n          break;\n        default:\n          break;\n      }\n    }\n    this.updateState({});\n  };\n\n  onSubmit = async () => {\n    let { formFields } = this.state;\n    if (formFields.cal_data.length == 0) return;\n    this.updateState({ isLoading: true });\n    var data = { monthlySchedule: {}, weekSchedule: {}, altWeekSchedule: {} };\n    data.monthlySchedule = formFields.cal_data;\n    data.weekSchedule.id = formFields.ws_id;\n    data.weekSchedule.monday = formFields.ws.monday;\n    data.weekSchedule.tuesday = formFields.ws.tuesday;\n    data.weekSchedule.wednesday = formFields.ws.wednesday;\n    data.weekSchedule.thursday = formFields.ws.thursday;\n    data.weekSchedule.friday = formFields.ws.friday;\n    data.weekSchedule.saturday = formFields.ws.saturday;\n    data.weekSchedule.sunday = formFields.ws.sunday;\n    data.altWeekSchedule.id = formFields.altws_id;\n    data.altWeekSchedule.monday = formFields.altws.monday;\n    data.altWeekSchedule.tuesday = formFields.altws.tuesday;\n    data.altWeekSchedule.wednesday = formFields.altws.wednesday;\n    data.altWeekSchedule.thursday = formFields.altws.thursday;\n    data.altWeekSchedule.friday = formFields.altws.friday;\n    data.altWeekSchedule.saturday = formFields.altws.saturday;\n    data.altWeekSchedule.sunday = formFields.altws.sunday;\n    try {\n      await this.props.updateStaffPlusSchedule(JSON.stringify(data));\n    } catch (error) {\n      console.log(error);\n      this.updateState({ isLoading: false });\n    }\n    this.updateState({ isLoading: false });\n  };\n\n  render() {\n    let {\n      currentMenu,\n      formFields,\n      startMonth,\n      endMonth,\n      jobOption,\n      jobOption_selected,\n      staffList_selected,\n      staffList,\n      filteredSiteOptions,\n      isLoading,\n      selected_site,\n      siteOptions,\n      selectedMonth,\n      scheduleOptions,\n      fullScheduleMonth,\n      pageMeta,\n    } = this.state;\n\n    let { ws, altws, cal_data, staff_data } = formFields;\n\n    const handleMenuSelection = (value) => {\n      this.updateState({ currentMenu: value });\n    };\n\n    const handleMonthChange = (e) => {\n      this.state[e.target.name] = e.target.value;\n      if (e.target.name == \"startMonth\") {\n        this.state.endMonth = this.state.startMonth;\n        this.state.selectedMonth = this.state.startMonth;\n      } else if (e.target.name == \"endMonth\")\n        this.state.selectedMonth = this.state.startMonth;\n      if (e.target.name != \"selectedMonth\") this.getScheduleData();\n      this.updateState({});\n    };\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 col-lg-2 mb-4\">\n            <Navigation\n              activeItemId={currentMenu}\n              onSelect={({ itemId }) => handleMenuSelection(itemId)}\n              items={[\n                {\n                  title: \"Individual Schedule\",\n                  itemId: \"/indi\",\n                },\n                {\n                  title: \"Full Schedule\",\n                  itemId: \"/full\",\n                },\n              ]}\n            />\n          </div>\n          {isLoading ? (\n            <div className=\"col\">\n              <div class=\"d-flex mt-5 align-items-center justify-content-center\">\n                <div class=\"spinner-border\" role=\"status\">\n                  <span class=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"col-lg-10 col-md-12\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-md-8 mb-4\">\n                  <h3>\n                    {currentMenu == \"/indi\" ? \"Individual\" : \"Full\"} Staff\n                    Schedule\n                  </h3>\n                </div>\n              </div>\n              {currentMenu == \"/indi\" ? (\n                <>\n                  <div className=\"form-group mb-4 pb-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          Employee Type\n                        </label>\n                        <div className=\"input-group\">\n                          <NormalSelect\n                            options={jobOption}\n                            value={jobOption_selected}\n                            onChange={this.onJobChanged}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group mb-4 pb-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          Staff\n                        </label>\n                        <div className=\"input-group\">\n                          <NormalSelect\n                            options={staffList}\n                            value={staffList_selected}\n                            onChange={this.onStaffChanged}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group mb-4 pb-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          Site List\n                        </label>\n                        <div className=\"input-group\">\n                          <NormalSelect\n                            options={filteredSiteOptions}\n                            value={selected_site}\n                            onChange={this.onSiteChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group mb-4 pb-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          Work Schedule\n                        </label>\n                        <ScheduleTable\n                          data={ws}\n                          altws_data={altws}\n                          optionList={scheduleOptions}\n                          onChange={(data) => {\n                            let { formFields } = this.state;\n                            formFields[\"ws\"] = data;\n                            this.updateState({\n                              formFields,\n                            });\n                          }}\n                          onAltChange={(data) => {\n                            let { formFields } = this.state;\n                            formFields[\"altws\"] = data;\n                            this.updateState({\n                              formFields,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {cal_data.length == 0 ? null : (\n                    <div className=\"form-group mb-4 pb-2\">\n                      <div className=\"row\">\n                        <div className=\"col-md-6 col-sm-12\">\n                          <NormalButton\n                            label=\"Apply to Monthly Schedule\"\n                            mainbg={true}\n                            onClick={this.onApplyToMonthlySchedule}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"form-group mb-4 pb-2\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4 mb-4\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          Start Year and Month\n                        </label>\n                        <div className=\"input-group\">\n                          <NormalInput\n                            type=\"month\"\n                            value={startMonth}\n                            name=\"startMonth\"\n                            onChange={handleMonthChange}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-md-4 mb-4\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          End Year and Month\n                        </label>\n                        <div className=\"input-group\">\n                          <NormalInput\n                            type=\"month\"\n                            value={endMonth}\n                            min={startMonth}\n                            name=\"endMonth\"\n                            onChange={handleMonthChange}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-md-6 mb-4\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          Selected Year and Month\n                        </label>\n                        <div className=\"input-group\">\n                          <NormalInput\n                            type=\"month\"\n                            value={selectedMonth}\n                            min={startMonth}\n                            max={endMonth}\n                            name=\"selectedMonth\"\n                            onChange={handleMonthChange}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-12\">\n                        <div className=\"input-group\">\n                          <CalenderTable\n                            data={cal_data}\n                            date={selectedMonth}\n                            optionList={scheduleOptions}\n                            onChange={(data) => {\n                              let { formFields } = this.state;\n                              formFields[\"cal_data\"] = data;\n                              this.updateState({\n                                formFields,\n                              });\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {cal_data.length == 0 ? null : (\n                    <div className=\"form-group mb-4 pb-2\">\n                      <div className=\"d-flex justify-content-center\">\n                        <div className=\"col-md-6 col-sm-12 p-0\">\n                          <NormalButton\n                            label=\"Save\"\n                            success={true}\n                            onClick={this.onSubmit}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </>\n              ) : (\n                <>\n                  <div className=\"form-group mb-4 pb-2\">\n                    <div className=\"row\">\n                      <div className=\"col-12 mb-4\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          Site\n                        </label>\n                        <div className=\"input-group\">\n                          <NormalSelect\n                            options={siteOptions}\n                            value={selected_site}\n                            name=\"selected_site\"\n                            onChange={this.onSiteOptionChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group mb-4 pb-2\">\n                    <div className=\"row\">\n                      <div className=\"col-4 mb-4\">\n                        <label className=\"text-left text-black common-label-text fs-17 pb-3\">\n                          Year and Month\n                        </label>\n                        <div className=\"input-group\">\n                          <NormalInput\n                            type=\"month\"\n                            value={fullScheduleMonth}\n                            onChange={this.onFullScheduleMonthChange}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-12\">\n                        <div className=\"input-group\">\n                          <BigCalander\n                            date={startMonth}\n                            data={staff_data}\n                            options={scheduleOptions}\n                            disabled={true}\n                            onChange={this.onFullScheduleSiteChange}\n                          />\n                        </div>\n                        {pageMeta && (\n                          <Pagination\n                            handlePagination={this.getFullScheduleData}\n                            pageMeta={pageMeta}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n              <div className=\"row m-2\">\n                {scheduleOptions.map((e) => {\n                  return (\n                    <div className=\"col-md-6 col-lg-4 col-sm-12\">\n                      <div className=\"row w-100\">\n                        <div\n                          style={{\n                            width: \"20px\",\n                            height: \"20px\",\n                            marginRight: \"5px\",\n                            backgroundColor: `${e.color}`,\n                          }}\n                        />\n                        {e.shortDesc} - {e.label}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  jobtitleList: state.common.jobtitleList,\n  staffPlusDetail: state.staffPlus.staffPlusDetail,\n  staffSchedule: state.staffPlus.staffPlusSchedule,\n  staffAllEmpSchedule: state.staffPlus.staffPlusAllEmpSchedule,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getJobtitle,\n      getStaffPlus,\n      getCommonApi,\n      getStaffSchedule,\n      getAllEmpSchedule,\n      updateStaffPlusSchedule,\n    },\n    dispatch\n  );\n};\n\nexport const StaffSchedule = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StaffScheduleClass);\n"]},"metadata":{},"sourceType":"module"}