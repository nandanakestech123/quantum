{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\NewAppointment\\\\NewCreateAppointment\\\\NewSelectTreatment.js\";\nimport React, { Component } from \"react\";\nimport { NormalSelect, NormalButton, NormalModal, NormalInput, NormalDateTime, NormalCheckbox, NormalTimePicker } from \"component/common\";\nimport \"./style.scss\";\nimport { updateForm, getSelectedTreatmentList } from \"redux/actions/appointment\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport closeIcon from \"assets/images/close.png\";\nimport req_therapist from \"assets/images/app-icons/1.png\";\nimport { getCommonApi, commonCreateApi, commonPatchApi } from \"redux/actions/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport _ from \"lodash\";\nimport { TableWrapper } from \"component/common\";\nimport { TreatmentPackage } from \"./modal/index\";\nimport { Toast } from \"service/toast\";\nimport { AppointmentForm } from \"./AppointmentForm\";\nimport { history } from \"helpers\";\nimport { TreatmentHistory } from \"component/Admin/NewAppointment/NewListAppointment/modal/TreatmentHistory\";\nimport { UpcomingAppointment } from \"component/Admin/NewAppointment/NewListAppointment/modal/UpcomingAppointment\";\nimport { withTranslation } from \"react-i18next\";\nexport class NewSelectTreatmentClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treatmentDetail: [],\n      formFields: {\n        appt_id: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        Item_Codeid: null,\n        add_duration: \"\",\n        emp_no: 0,\n        requesttherapist: false,\n        Item_CodeName: \"\",\n        edit_remark: \"\",\n        recur_days: null,\n        recur_qty: null,\n        item_text: null,\n        checktype: \"\",\n        treat_parentcode: null\n      },\n      selectedList: [{\n        appt_id: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        Item_Codeid: null,\n        add_duration: \"\",\n        emp_no: 0,\n        requesttherapist: false,\n        Item_CodeName: \"\",\n        edit_remark: \"\",\n        recur_days: null,\n        recur_qty: null,\n        item_text: null,\n        checktype: \"\",\n        treat_parentcode: null\n      }],\n      outletOption: [],\n      staffOption: [],\n      roomOption: [],\n      list: [],\n      isOpenModal: false,\n      categoryList: [],\n      treatmentList: [],\n      siteList: [],\n      treatmentField: {\n        category: \"\",\n        treatment: \"\"\n      },\n      timeDropdown: [],\n      duration: [],\n      index: null,\n      search: \"\",\n      selectTreatmentId: \"\",\n      treatmentListHeader: [{\n        label: \"Category\",\n        className: \"w-50\"\n      }, {\n        label: \"Service\",\n        className: \"w-75\"\n      }, {\n        label: \"Duration\",\n        className: \"w-25\"\n      }, {\n        label: \"price\",\n        className: \"w-50\"\n      }],\n      meta: {},\n      isTreatementModal: false,\n      appointmentId: null,\n      PackageIndex: 0,\n      selectedRec_days: null,\n      selectedRec_qty: null,\n      recurringList: [],\n      recurringSelectedItems: [],\n      recurringSelectAll: false,\n      settingData: {},\n      PasteAppointmentId: 0,\n      InitAppointmentStatus: \"\",\n      isTreatmentHistoryModal: false,\n      isUpcomingAppointmentModal: false\n    };\n\n    this.showErrorMessage = () => {\n      this.child.onFocus();\n    };\n\n    this.timeToDateFormat = TimeValue => {\n      let time = String(TimeValue).split(\":\");\n      let newTime = new Date(new Date().setHours(time[0], time[1], 0, 0));\n      return newTime;\n    };\n\n    this.handleRenderApptDetail = async (appt_id, copy) => {\n      let {\n        selectedList,\n        InitAppointmentStatus\n      } = this.state;\n      this.props.getCommonApi(`appointmentedit/${appt_id}/`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(data, \"renderappointmentdetail\");\n\n        if (status === 200) {\n          if (data.treatment) {\n            InitAppointmentStatus = data.appointment.appt_status;\n            selectedList = [];\n            await this.setState({\n              selectedList: selectedList,\n              InitAppointmentStatus\n            });\n            this.props.updateForm(\"treatmentList\", selectedList);\n\n            for (let treat of data.treatment) {\n              let startTime = \"\";\n              let endTime = \"\";\n              let apptid = null;\n\n              if (copy) {\n                startTime = treat.start_time;\n                endTime = treat.end_time;\n                apptid = null;\n              } else {\n                startTime = this.timeToDateFormat(treat.start_time);\n                endTime = treat.end_time;\n                apptid = treat.appt_id;\n              }\n\n              selectedList.push({\n                start_time: startTime,\n                end_time: endTime,\n                emp_no: treat.emp_id,\n                appt_id: apptid,\n                Item_Codeid: treat.item_id,\n                Item_CodeName: treat.item_name,\n                add_duration: treat.add_duration,\n                requesttherapist: treat.requesttherapist,\n                recur_days: treat.recur_days,\n                recur_qty: treat.recur_qty,\n                item_text: treat.item_name,\n                checktype: treat.checktype,\n                treat_parentcode: treat.treat_parentcode\n              });\n              this.setState({\n                selectedList\n              });\n            }\n\n            this.props.updateForm(\"treatmentList\", selectedList);\n          }\n        }\n      });\n    };\n\n    this.handleItemSettings = () => {\n      let {\n        settingData\n      } = this.state;\n      this.props.getCommonApi(`userlist/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(key, \"settingsData appointmentCreate\");\n\n        if (status === 200) {\n          settingData = data;\n          this.setState({\n            settingData\n          });\n        }\n      });\n    };\n\n    this.getStaffAvailability = () => {\n      this.props.getCommonApi(`staffsavailable/?Appt_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          // for (let value of data) {\n          //     staffList.push({ value: value.id, label: value.emp_name })\n          // }\n          this.setState({\n            list: data\n          });\n        }\n      });\n    };\n\n    this.handleSearch = event => {\n      event.persist();\n      console.log(event.target.value, event.target, event, \"dfhdfjghkjfghj\");\n      let {\n        treatmentField\n      } = this.state;\n      treatmentField[\"treatment\"] = event.target.value;\n      this.setState({\n        search: event.target.value,\n        treatmentField\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          let data = {\n            search: searchString\n          }; // this.queryHandler(data)\n\n          this.search(data);\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = data => {\n      let {\n        page = 1,\n        limit = 10,\n        search = \"\"\n      } = data;\n      let {\n        selectTreatmentId\n      } = this.state;\n      this.props.getCommonApi(`stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`).then(res => {\n        console.log(res, \"treatmentList treatment_parentcode\");\n\n        if (res.status === 200) {\n          this.setState({\n            treatmentList: res.data.dataList,\n            meta: res.data.meta.pagination\n          });\n        }\n      });\n    };\n\n    this.handlePagination = page => {\n      this.search(page);\n    };\n\n    this.handleChangeTreatment = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        treatmentField,\n        search,\n        selectTreatmentId\n      } = this.state;\n      console.log(\"uihwkjrwkej\", name, value);\n      treatmentField[name] = value;\n\n      if (name === \"category\") {\n        selectTreatmentId = value;\n      } else if (name === \"treatment\") {\n        search = value;\n      }\n\n      await this.setState({\n        treatmentField,\n        selectTreatmentId,\n        search\n      });\n      let page = 1,\n          limit = 10;\n      this.props.getCommonApi(`stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          this.setState({\n            treatmentList: res.data.dataList,\n            meta: res.data.meta.pagination\n          });\n        }\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }, index) => {\n      let {\n        selectedList,\n        appointmentId\n      } = this.state;\n\n      if (name === \"add_duration\") {\n        if (appointmentId) {\n          selectedList[index][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[index][\"start_time\"]), value ? value : \"00:00\");\n        } else {\n          selectedList[index][\"end_time\"] = this.addTimes(selectedList[index][\"start_time\"], value ? value : \"00:00\");\n        }\n\n        selectedList[index][\"add_duration\"] = value;\n\n        if (selectedList.length - 1 > index) {\n          let endTime = \"\";\n\n          if (appointmentId) {\n            endTime = this.timeToDateFormat(selectedList[index][\"end_time\"]);\n          } else {\n            endTime = selectedList[index][\"end_time\"];\n          }\n\n          selectedList[index + 1][\"start_time\"] = endTime;\n\n          if (selectedList[index + 1][\"add_duration\"] !== \"\") {\n            selectedList[index + 1][\"end_time\"] = this.addTimes(selectedList[index][\"end_time\"], selectedList[index + 1][\"add_duration\"]);\n          }\n        }\n      } else if (name === \"Item_CodeName\") {\n        selectedList[index][\"Item_Codeid\"] = 6213;\n        selectedList[index][\"Item_CodeName\"] = value;\n        selectedList[index][\"item_text\"] = value;\n        selectedList[index][\"checktype\"] = \"freetext\";\n        selectedList[index][\"treat_parentcode\"] = null;\n      } else if (name === \"recur_days\" || name === \"recur_qty\") {\n        if (value <= 0 || value === \"\") {\n          selectedList[index][name] = null;\n        } else {\n          selectedList[index][name] = Number(value);\n        }\n      } else {\n        selectedList[index][name] = value;\n      }\n\n      await this.setState({\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.handleMultiSelect = data => {\n      let {\n        formFields\n      } = this.state;\n      let list = [];\n\n      for (let key of data) {\n        list.push(key.value);\n      }\n\n      formFields[\"emp_no\"] = list;\n      this.setState({\n        formFields\n      });\n      console.log(formFields, \"oyokkjk\");\n    };\n\n    this.handleDatePick = async ({\n      target: {\n        value,\n        name\n      }\n    }, index) => {\n      let {\n        selectedList,\n        appointmentId\n      } = this.state;\n      let time = this.getHoursFromDate(value);\n      let duration = \"\";\n\n      if (selectedList[index][\"add_duration\"] !== \"\") {\n        duration = selectedList[index][\"add_duration\"];\n      } else {\n        duration = \"00:00\";\n      }\n\n      selectedList[index][\"start_time\"] = value ? value : this.timeToDateFormat(selectedList[index][\"start_time\"]);\n\n      if (time) {\n        selectedList[index][\"end_time\"] = this.addTimes(time, duration);\n      }\n\n      if (selectedList.length - 1 > index) {\n        let endTime = \"\";\n\n        if (appointmentId) {\n          endTime = this.timeToDateFormat(selectedList[index][\"end_time\"]);\n        } else {\n          endTime = selectedList[index][\"end_time\"];\n        }\n\n        selectedList[index + 1][\"start_time\"] = endTime;\n\n        if (selectedList[index + 1][\"add_duration\"] !== \"\") {\n          selectedList[index + 1][\"end_time\"] = this.addTimes(selectedList[index][\"end_time\"], selectedList[index + 1][\"add_duration\"]);\n        }\n      }\n\n      await this.setState({\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.getHoursFromDate = date => {\n      let hour = date.getHours();\n      let minute = date.getMinutes();\n      let hours = hour > 9 ? hour : \"0\" + hour;\n      let minutes = minute > 9 ? minute : \"0\" + minute;\n      return hours + \":\" + minutes;\n    };\n\n    this.stafflistvalidation = appointmentTreatmentList => {\n      if (appointmentTreatmentList.length > 0) {\n        for (let item of appointmentTreatmentList) {\n          if (!item.emp_no || item.emp_no === \"\" || item.emp_no === null) {\n            Toast({\n              type: \"error\",\n              message: \"Please select Staff\"\n            });\n            return false;\n          } else {\n            return true;\n          }\n        }\n      }\n    };\n\n    this.handleUpdate = () => {\n      let {\n        appointmentCustomerDetail,\n        appointmentTreatmentList\n      } = this.props;\n      let {\n        appointmentId,\n        InitAppointmentStatus\n      } = this.state;\n      let finalTreatment = [];\n\n      for (let TreatmentList of appointmentTreatmentList) {\n        finalTreatment.push({\n          appt_id: TreatmentList.appt_id,\n          start_time: this.getHoursFromDate(TreatmentList.start_time),\n          end_time: TreatmentList.end_time,\n          add_duration: TreatmentList.add_duration,\n          item_id: TreatmentList.Item_Codeid,\n          item_text: TreatmentList.item_text,\n          emp_id: TreatmentList.emp_no,\n          requesttherapist: TreatmentList.requesttherapist,\n          recur_qty: Number(\"\"),\n          recur_days: \"\",\n          checktype: TreatmentList.checktype,\n          treat_parentcode: TreatmentList.treat_parentcode\n        });\n      }\n\n      console.log(finalTreatment, \"filteredupdateFunctionAppointmentData\");\n      let orig_remark = \"\";\n      let AppStatus = \"\";\n\n      if (appointmentCustomerDetail.remark_setting) {\n        orig_remark = null;\n      } else {\n        orig_remark = appointmentCustomerDetail.new_remark;\n      }\n\n      if (String(InitAppointmentStatus).toUpperCase() === \"ARRIVED\" && String(appointmentCustomerDetail.bookingStatus).toUpperCase() === \"ARRIVED\") {\n        AppStatus = null;\n      } else {\n        AppStatus = appointmentCustomerDetail.bookingStatus;\n      }\n\n      if (appointmentCustomerDetail.customerName && appointmentCustomerDetail.bookingStatus) {\n        if (this.stafflistvalidation(appointmentTreatmentList)) {\n          let data = {\n            appointment: {\n              appt_date: dateFormat(new Date(appointmentCustomerDetail.appointmentDate), \"yyyy-mm-dd\"),\n              appt_status: AppStatus,\n              channel_id: Number(appointmentCustomerDetail.Appt_typeid),\n              ori_remark: orig_remark,\n              edit_remark: appointmentCustomerDetail.edit_remark,\n              source_id: Number(appointmentCustomerDetail.Source_Codeid),\n              Room_Codeid: Number(appointmentCustomerDetail.Room_Codeid),\n              sec_status: appointmentCustomerDetail.sec_status,\n              remark_setting: appointmentCustomerDetail.remark_setting\n            },\n            treatment: finalTreatment\n          };\n          this.props.commonPatchApi(`appointmentedit/${appointmentId}/`, data).then(async res => {\n            console.log(res, \"cart check while update booking\");\n\n            if (res.status === 200) {\n              this.handleCloseDialog();\n              this.handleSaveorUpdate();\n            } else if (res.status === 201) {\n              let formFields = {\n                custId: 0,\n                custName: \"\",\n                cust_refer: \"\"\n              };\n              formFields[\"custId\"] = appointmentCustomerDetail.customerName;\n              formFields[\"custName\"] = appointmentCustomerDetail.custName;\n              formFields[\"cust_refer\"] = appointmentCustomerDetail.cust_refer;\n              await this.props.updateForm(\"basicApptDetail\", formFields);\n              this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${appointmentCustomerDetail.customerName}`).then(res => {\n                history.push(\"/admin/cart\");\n              });\n            }\n          });\n        }\n      } else {\n        this.showErrorMessage();\n      }\n    };\n\n    this.handleRecurringUpdate = () => {\n      let {\n        appointmentCustomerDetail,\n        appointmentTreatmentList\n      } = this.props;\n      let {\n        appointmentId,\n        selectedRec_days,\n        selectedRec_qty,\n        recurringList,\n        recurringSelectAll\n      } = this.state;\n      let finalRecurring = [];\n\n      for (var recurringItem of recurringList) {\n        if (recurringItem.selected) {\n          let value = recurringItem.id;\n          finalRecurring.push(value);\n        }\n      }\n\n      console.log(finalRecurring, \"finalrecurringList\");\n\n      if (appointmentCustomerDetail.customerName && appointmentCustomerDetail.bookingStatus) {\n        if (this.stafflistvalidation(appointmentTreatmentList)) {\n          let data = {\n            appt_date: dateFormat(new Date(appointmentCustomerDetail.appointmentDate), \"yyyy-mm-dd\"),\n            Room_Codeid: appointmentCustomerDetail.Room_Codeid,\n            appt_status: appointmentCustomerDetail.bookingStatus,\n            sec_status: appointmentCustomerDetail.sec_status,\n            edit_remark: appointmentCustomerDetail.edit_remark,\n            start_time: this.getHoursFromDate(appointmentTreatmentList[0].start_time),\n            end_time: appointmentTreatmentList[0].end_time,\n            item_id: appointmentTreatmentList[0].Item_Codeid,\n            add_duration: appointmentTreatmentList[0].add_duration,\n            emp_id: appointmentTreatmentList[0].emp_no,\n            requesttherapist: appointmentTreatmentList[0].requesttherapist,\n            item_text: appointmentTreatmentList[0].item_text,\n            recur_days: selectedRec_days === appointmentTreatmentList[0].recur_days || appointmentTreatmentList[0].recur_days === \"\" || appointmentTreatmentList[0].recur_days <= 0 ? null : appointmentTreatmentList[0].recur_days,\n            recur_qty: Number(selectedRec_qty) === Number(appointmentTreatmentList[0].recur_qty) || Number(appointmentTreatmentList[0].recur_qty) === \"\" || Number(appointmentTreatmentList[0].recur_qty) <= 0 ? null : Number(appointmentTreatmentList[0].recur_qty),\n            recur_ids: finalRecurring\n          };\n          console.log(data, \"UpdatedappointmentTreatmentListWhenupdate\");\n\n          if (recurringSelectAll) {\n            this.props.commonPatchApi(`appointmentrecur/${appointmentId}/?type=${`all`} `, data).then(async res => {\n              if (res.status === 200) {\n                this.handleCloseDialog();\n                this.handleSaveorUpdate();\n              }\n            });\n          } else {\n            this.props.commonPatchApi(`appointmentrecur/${appointmentId}/`, data).then(async res => {\n              console.log(res, \"type all clicked result\");\n\n              if (res.status === 200) {\n                this.handleCloseDialog();\n                this.handleSaveorUpdate();\n              }\n            });\n          }\n        }\n      } else {\n        this.showErrorMessage();\n      }\n    };\n\n    this.handleSubmit = () => {\n      // this.props.handleConfirmBooking()\n      let {\n        appointmentCustomerDetail,\n        appointmentTreatmentList\n      } = this.props;\n      console.log(appointmentCustomerDetail, \"appointmentcustomerdetailwhenSave\");\n      console.log(appointmentTreatmentList, \"savedappointmentTreatmentListWhenSave\");\n\n      if (appointmentCustomerDetail.customerName && appointmentCustomerDetail.bookingStatus) {\n        if (this.stafflistvalidation(appointmentTreatmentList)) {\n          let data = {\n            Appointment: {\n              appt_date: dateFormat(new Date(appointmentCustomerDetail.appointmentDate), \"yyyy-mm-dd\"),\n              Appt_typeid: appointmentCustomerDetail.Appt_typeid,\n              cust_noid: appointmentCustomerDetail.customerName,\n              new_remark: appointmentCustomerDetail.new_remark,\n              // emp_noid: appointmentCustomerDetail.emp_id,\n              Source_Codeid: appointmentCustomerDetail.Source_Codeid,\n              Room_Codeid: appointmentCustomerDetail.Room_Codeid,\n              appt_status: appointmentCustomerDetail.bookingStatus,\n              sec_status: appointmentCustomerDetail.sec_status,\n              ItemSite_Codeid: appointmentCustomerDetail.ItemSite_Codeid,\n              walkin: appointmentCustomerDetail.walkin\n            },\n            Treatment: appointmentTreatmentList\n          };\n          this.props.commonCreateApi(`appointment/`, data).then(async res => {\n            if (res.status === 201) {\n              this.handleCloseDialog();\n              this.handleSaveorUpdate();\n            }\n          });\n        }\n      } else {\n        this.showErrorMessage();\n      }\n    };\n\n    this.getDateTime = data => {\n      let date = new Date(data);\n      date = String(date).split(\" \");\n      let date1 = date[2] + \"th \" + date[1] + \", \" + date[3];\n      let time = date[4].split(\":\");\n      let time1 = String(Number(time[0]) > 12 ? Number(time[0]) - 12 : time[0]) + \":\" + time[1] + (Number(time[0]) > 12 ? \"PM\" : \"AM\");\n      return time1 + \", \" + date1;\n    };\n\n    this.handleDialog = () => {\n      this.setState({\n        isOpenModal: false,\n        index: null\n      });\n    };\n\n    this.handleMultipleCustomer = () => {\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.handleSelectPackage = async data => {\n      let {\n        selectedList,\n        PackageIndex,\n        appointmentId\n      } = this.state;\n\n      if (PackageIndex === 0 && selectedList[0][\"Item_CodeName\"] === \"\") {\n        selectedList[0][\"start_time\"] = selectedList[0][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[0][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[0][\"start_time\"]), data.add_duration ? data.add_duration : \"00:00\");\n        } else {\n          selectedList[0][\"end_time\"] = this.addTimes(selectedList[0][\"start_time\"], data.add_duration ? data.add_duration : \"00:00\");\n        }\n\n        selectedList[0][\"Item_Codeid\"] = data.id;\n        selectedList[0][\"Item_CodeName\"] = data.item_desc;\n        selectedList[0][\"item_text\"] = null;\n        selectedList[0][\"add_duration\"] = data.add_duration;\n        selectedList[0][\"checktype\"] = \"package\";\n        selectedList[0][\"treat_parentcode\"] = data.treatment_parentcode;\n        await this.setState({\n          selectedList,\n          PackageIndex: PackageIndex + 1\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else if (selectedList[selectedList.length - 1][\"Item_CodeName\"] === \"\") {\n        selectedList[selectedList.length - 1][\"start_time\"] = selectedList[selectedList.length - 1][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[selectedList.length - 1][\"start_time\"]), data.add_duration ? data.add_duration : \"00:00\");\n        } else {\n          selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(selectedList[selectedList.length - 1][\"start_time\"], data.add_duration ? data.add_duration : \"00:00\");\n        }\n\n        selectedList[selectedList.length - 1][\"Item_Codeid\"] = data.id;\n        selectedList[selectedList.length - 1][\"Item_CodeName\"] = data.item_desc;\n        selectedList[selectedList.length - 1][\"item_text\"] = null;\n        selectedList[selectedList.length - 1][\"add_duration\"] = data.add_duration;\n        selectedList[selectedList.length - 1][\"checktype\"] = \"package\";\n        selectedList[selectedList.length - 1][\"treat_parentcode\"] = data.treatment_parentcode;\n        await this.setState({\n          selectedList,\n          PackageIndex: PackageIndex + 1\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else if (selectedList[selectedList.length - 1][\"Item_CodeName\"] !== \"\" && appointmentId) {\n        selectedList[selectedList.length - 1][\"start_time\"] = selectedList[selectedList.length - 1][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[selectedList.length - 1][\"start_time\"]), data.add_duration ? data.add_duration : \"00:00\");\n        } else {\n          selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(selectedList[selectedList.length - 1][\"start_time\"], data.add_duration ? data.add_duration : \"00:00\");\n        }\n\n        selectedList[selectedList.length - 1][\"Item_Codeid\"] = data.id;\n        selectedList[selectedList.length - 1][\"Item_CodeName\"] = data.item_desc;\n        selectedList[selectedList.length - 1][\"item_text\"] = null;\n        selectedList[selectedList.length - 1][\"add_duration\"] = data.add_duration;\n        selectedList[selectedList.length - 1][\"checktype\"] = \"package\";\n        selectedList[selectedList.length - 1][\"treat_parentcode\"] = data.treatment_parentcode;\n        await this.setState({\n          selectedList,\n          PackageIndex: PackageIndex + 1\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else {\n        var listCount = selectedList.length - 1;\n        let treatment = {};\n\n        if (appointmentId) {\n          treatment[\"start_time\"] = this.timeToDateFormat(selectedList[listCount][\"end_time\"]);\n        } else {\n          treatment[\"start_time\"] = selectedList[listCount][\"end_time\"];\n        }\n\n        treatment[\"Item_Codeid\"] = data.id;\n        treatment[\"Item_CodeName\"] = data.item_desc;\n        treatment[\"item_text\"] = null;\n        treatment[\"add_duration\"] = data.add_duration;\n        treatment[\"checktype\"] = \"package\";\n        treatment[\"treat_parentcode\"] = data.treatment_parentcode;\n        selectedList.push(treatment);\n        await this.setState({\n          selectedList\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      }\n\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.handleSelectTreatment = async data => {\n      let {\n        selectedList,\n        index,\n        appointmentId\n      } = this.state;\n\n      if (index == 0 && selectedList.length == 1) {\n        selectedList[0][\"start_time\"] = selectedList[0][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[0][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[0][\"start_time\"]), data.add_duration ? data.add_duration : \"00:00\");\n        } else {\n          selectedList[0][\"end_time\"] = this.addTimes(selectedList[0][\"start_time\"], data.add_duration ? data.add_duration : \"00:00\");\n        }\n\n        selectedList[0][\"Item_Codeid\"] = data.id;\n        selectedList[0][\"Item_CodeName\"] = data.item_desc;\n        selectedList[0][\"add_duration\"] = data.add_duration;\n        selectedList[0][\"checktype\"] = \"service\";\n        selectedList[0][\"treat_parentcode\"] = null;\n        await this.setState({\n          selectedList\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else {\n        selectedList[index][\"start_time\"] = selectedList[index][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[index][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[index][\"start_time\"]), data.add_duration ? data.add_duration : \"00:00\");\n        } else {\n          selectedList[index][\"end_time\"] = this.addTimes(selectedList[index][\"start_time\"], data.add_duration ? data.add_duration : \"00:00\");\n        }\n\n        selectedList[index][\"Item_Codeid\"] = data.id;\n        selectedList[index][\"Item_CodeName\"] = data.item_desc;\n        selectedList[index][\"add_duration\"] = data.add_duration;\n        selectedList[index][\"checktype\"] = \"service\";\n        selectedList[index][\"treat_parentcode\"] = null;\n        let endTime = \"\";\n\n        if (appointmentId) {\n          endTime = this.timeToDateFormat(selectedList[index][\"end_time\"]);\n        } else {\n          endTime = selectedList[index][\"end_time\"];\n        }\n\n        if (selectedList.length - 1 > index) {\n          selectedList[index + 1][\"start_time\"] = endTime;\n\n          if (selectedList[index + 1][\"add_duration\"] !== \"\") {\n            selectedList[index + 1][\"end_time\"] = this.addTimes(selectedList[index][\"end_time\"], selectedList[index + 1][\"add_duration\"]);\n          }\n        }\n\n        await this.setState({\n          selectedList\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      }\n\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.timeToMins = time => {\n      var b = time.split(\":\");\n      return b[0] * 60 + +b[1];\n    };\n\n    this.timeFromMins = mins => {\n      function z(n) {\n        return (n < 10 ? \"0\" : \"\") + n;\n      }\n\n      var h = (mins / 60 | 0) % 24;\n      var m = mins % 60;\n      return z(h) + \":\" + z(m);\n    };\n\n    this.addTimes = (t0, t1) => {\n      return this.timeFromMins(this.timeToMins(t0) + this.timeToMins(t1));\n    };\n\n    this.handleAddtreatment = async index => {\n      let {\n        selectedList,\n        formFields,\n        appointmentId\n      } = this.state;\n\n      if (selectedList[index][\"end_time\"]) {\n        let start = \"\";\n\n        if (appointmentId) {\n          start = this.timeToDateFormat(selectedList[selectedList.length - 1].end_time);\n        } else {\n          start = selectedList[selectedList.length - 1].end_time;\n        }\n\n        formFields = {\n          appt_id: null,\n          start_time: start,\n          end_time: \"\",\n          Item_Codeid: 6213,\n          add_duration: \"\",\n          emp_no: 0,\n          requesttherapist: false,\n          recur_days: null,\n          recur_qty: null,\n          item_text: null,\n          checktype: \"\",\n          treat_parentcode: null\n        };\n        selectedList.push({\n          appt_id: null,\n          start_time: start,\n          end_time: \"\",\n          Item_Codeid: 6213,\n          Item_CodeName: \"\",\n          add_duration: \"\",\n          emp_no: 0,\n          requesttherapist: false,\n          recur_days: null,\n          recur_qty: null,\n          item_text: null,\n          checktype: \"\",\n          treat_parentcode: null\n        });\n        await this.setState({\n          selectedList,\n          formFields\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"End time shouldn't be empty\"\n        });\n      }\n    };\n\n    this.deleteTreatment = async index => {\n      let {\n        selectedList\n      } = this.state;\n      selectedList.splice(index, 1);\n      this.setState({\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.handleTreatementmodal = () => {\n      let {\n        appointmentCustomerDetail\n      } = this.props;\n      let customerId = appointmentCustomerDetail.customerName;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isTreatementModal: !prevState.isTreatementModal\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.handleCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }, index) => {\n      let {\n        treatmentList\n      } = this.state;\n      let {\n        selectedList\n      } = this.state;\n      selectedList[index][\"requesttherapist\"] = value;\n      await this.setState({\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.handleCloseDialog = async () => {\n      this.props.handleCloseDialog();\n    };\n\n    this.handleSaveorUpdate = async () => {\n      this.props.handleSaveorUpdate();\n    };\n\n    this.handleRecurringlistCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }, item) => {\n      let {\n        recurringList\n      } = this.state;\n      let listCheckbox = recurringList.find(acc => acc.id === item.id);\n\n      if (listCheckbox) {\n        listCheckbox[\"selected\"] = value;\n        await this.setState({ ...this.state.recurringList,\n          listCheckbox\n        });\n      }\n\n      let Checkbox = recurringList.filter(acc => acc.selected === true).length;\n\n      if (Checkbox == this.state.recurringList.length) {\n        await this.setState({\n          recurringSelectAll: true\n        });\n      } else {\n        await this.setState({\n          recurringSelectAll: false\n        });\n      }\n    };\n\n    this.handleRecurringSelectAllCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        recurringList\n      } = this.state;\n      await this.setState({\n        recurringSelectAll: value\n      });\n\n      for (let item of recurringList) {\n        item[\"selected\"] = value;\n        await this.setState({ ...this.state.recurringList,\n          item\n        });\n      }\n    };\n\n    this.handleCopyAppointment = async () => {\n      let {\n        appointmentId\n      } = this.state;\n      let formFields = {};\n      formFields[\"appointmentId\"] = appointmentId;\n      await this.props.updateForm(\"AppointmentCopy\", formFields);\n      console.log(this.props.AppointmentCopy, \"after copy click appointment copy id\");\n      Toast({\n        type: \"success\",\n        message: \"Appointment copied\"\n      });\n    };\n\n    this.handlePasteAppointment = async () => {\n      let {\n        AppointmentCopy\n      } = this.props;\n\n      if (AppointmentCopy) {\n        this.setState({\n          PasteAppointmentId: AppointmentCopy.appointmentId,\n          selectedList: []\n        });\n        this.handleRenderApptDetail(AppointmentCopy.appointmentId, true);\n      }\n    };\n\n    this.handleGotoCart = async () => {\n      let {\n        appointmentCustomerDetail\n      } = this.props;\n      let formFields = {\n        custId: 0,\n        custName: \"\"\n      };\n      formFields[\"custId\"] = appointmentCustomerDetail.customerName;\n      formFields[\"custName\"] = appointmentCustomerDetail.custName;\n      formFields[\"cust_refer\"] = appointmentCustomerDetail.cust_refer;\n      await this.props.updateForm(\"basicApptDetail\", formFields);\n      history.push(\"/admin/cart\");\n    };\n\n    this.handleUpcomingAppointment = () => {\n      let {\n        appointmentCustomerDetail\n      } = this.props;\n      let customerId = appointmentCustomerDetail.customerName;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isUpcomingAppointmentModal: !prevState.isUpcomingAppointmentModal\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.handleTreatmentHistory = () => {\n      let {\n        appointmentCustomerDetail\n      } = this.props;\n      let customerId = appointmentCustomerDetail.customerName;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isTreatmentHistoryModal: !prevState.isTreatmentHistoryModal\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.child = React.createRef();\n  }\n\n  componentDidMount() {\n    this.search({});\n    this.handleItemSettings();\n    let {\n      categoryList,\n      staffOption,\n      selectedList,\n      formFields,\n      duration\n    } = this.state;\n    let {\n      basicApptDetail,\n      AppointmentCopy\n    } = this.props;\n    console.log(AppointmentCopy, \"Basic app detail data\");\n\n    if (basicApptDetail.appt_id) {\n      this.setState({\n        appointmentId: basicApptDetail.appt_id\n      });\n      this.handleRenderApptDetail(basicApptDetail.appt_id, false);\n    } else {\n      let {\n        selectedList\n      } = this.state;\n      selectedList[0][\"start_time\"] = basicApptDetail ? basicApptDetail.time : \"\";\n      selectedList[0][\"emp_no\"] = basicApptDetail ? basicApptDetail.staff_id : 0;\n      this.setState({\n        selectedList\n      });\n      this.props.updateForm(\"treatmentList\", selectedList);\n    }\n\n    this.props.getCommonApi(`itemdept/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          categoryList.push({\n            value: value.id,\n            label: value.itm_desc\n          });\n        }\n\n        this.setState({\n          categoryList\n        });\n      }\n    });\n    this.props.getCommonApi(`appointment/Staffs/?Outlet=${basicApptDetail.branchId}&date=${dateFormat(new Date())}`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          staffOption.push({\n            value: value.id,\n            label: value.emp_name\n          });\n        }\n\n        this.setState({\n          staffOption\n        });\n      }\n    });\n    this.props.getCommonApi(`treatment/Duration/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          duration.push({\n            value: value,\n            label: value\n          });\n        }\n\n        this.setState({\n          duration\n        });\n      }\n    });\n    this.getStaffAvailability();\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n  }\n\n  render() {\n    let {\n      outletOption,\n      staffOption,\n      roomOption,\n      selectedList,\n      siteList,\n      list,\n      formFields,\n      timeDropdown,\n      duration,\n      isOpenModal,\n      treatmentField,\n      treatmentList = [],\n      categoryList,\n      treatmentListHeader,\n      meta,\n      isTreatementModal,\n      appointmentId,\n      selectedRec_days,\n      selectedRec_qty,\n      recurringList,\n      recurringSelectAll,\n      settingData,\n      PasteAppointmentId,\n      isTreatmentHistoryModal,\n      isUpcomingAppointmentModal\n    } = this.state;\n    let {\n      customerDetail,\n      selectedTreatmentList,\n      customerId,\n      t\n    } = this.props;\n    let {\n      outlet,\n      staff,\n      rooms\n    } = customerDetail;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, PasteAppointmentId <= 0 ? /*#__PURE__*/React.createElement(AppointmentForm, {\n      onRef: ref => this.child = ref,\n      selectedCustomer: this.props.selectedCustomer,\n      PasteAppointmentId: PasteAppointmentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 11\n      }\n    }) : null, PasteAppointmentId > 0 ? /*#__PURE__*/React.createElement(AppointmentForm, {\n      onRef: ref => this.child = ref,\n      selectedCustomer: this.props.selectedCustomer,\n      PasteAppointmentId: PasteAppointmentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-appointment select-treatment-appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatment-section p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-treatment select-list w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1256,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex selected selected-header mb-4 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 25\n      }\n    }, t(\"Start\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 25\n      }\n    }, t(\"End\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 25\n      }\n    }, t(\"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 25\n      }\n    }, t(\"Duration\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1267,\n        columnNumber: 25\n      }\n    }, t(\"Treatment Staff\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1268,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: req_therapist,\n      alt: \"\",\n      height: \"25\",\n      width: \"25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 header-detail d-flex justify-content-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 25\n      }\n    }, t(\"Recur Days\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 header-detail d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 25\n      }\n    }, t(\"Recur Qty\"))), selectedList.length > 0 ? selectedList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex selected  mb-4\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 31\n        }\n      }, appointmentId ? /*#__PURE__*/React.createElement(NormalTimePicker, {\n        className: `cursor-pointer`,\n        onChange: e => this.handleDatePick(e, index),\n        label: \"start_time\",\n        name: \"start_time\",\n        timeOnly: true,\n        dateFormat: `HH:mm`,\n        showTime: true,\n        selected: false,\n        placeholder: \"\",\n        timeIntervals: 5,\n        value: item.start_time,\n        showIcon: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 35\n        }\n      }) : /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"start\" // options={timeDropdown}\n        ,\n        value: item.start_time,\n        name: \"start_time\",\n        onChange: () => {},\n        className: \"customer-name p-0\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1317,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"end\" // options={timeDropdown}\n        ,\n        value: item.end_time,\n        name: \"end_time\",\n        onChange: () => {},\n        className: \"customer-name p-0\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1328,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1329,\n          columnNumber: 33\n        }\n      }), settingData && settingData.service_sel && settingData.service_text ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => this.setState({\n          isOpenModal: true,\n          index: index\n        }),\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 35\n        }\n      }) : null, settingData && settingData.service_sel && !settingData.service_text ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => this.setState({\n          isOpenModal: true,\n          index: index\n        }),\n        onChange: () => {},\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 35\n        }\n      }) : null, settingData && !settingData.service_sel && settingData.service_text ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => {},\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 35\n        }\n      }) : null, settingData && !settingData.service_sel && !settingData.service_text ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => {},\n        onChange: () => {},\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1382,\n          columnNumber: 35\n        }\n      }) : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 mr-1 p-0 header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n      , {\n        options: duration,\n        value: item.add_duration,\n        name: \"add_duration\",\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1394,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n      , {\n        options: staffOption,\n        value: item.emp_no,\n        name: \"emp_no\",\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1404,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 31\n        }\n      }, item.requesttherapist ? /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, index),\n        value: item.requesttherapist,\n        name: \"requesttherapist\",\n        checked: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 35\n        }\n      }) : /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, index),\n        value: item.requesttherapist,\n        name: \"requesttherapist\",\n        checked: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 d-flex justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        type: \"number\",\n        name: \"recur_days\",\n        value: item.recur_days ? item.recur_days : \"\",\n        onChange: e => this.handleChange(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 d-flex justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1442,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        type: \"number\",\n        name: \"recur_qty\",\n        value: item.recur_qty ? item.recur_qty : \"\",\n        onChange: e => this.handleChange(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 33\n        }\n      })), selectedList.length === index + 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ml-3\",\n        onClick: () => this.handleAddtreatment(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"31\",\n        height: \"30\",\n        viewBox: \"0 0 31 30\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1455,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        width: \"31\",\n        height: \"30\",\n        fill: \"#F9F9F9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M15 8V22\",\n        stroke: \"#848484\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M8 15H22\",\n        stroke: \"#848484\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 37\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null, appointmentId && item.appt_id ? null : /*#__PURE__*/React.createElement(\"img\", {\n        width: \"25\",\n        height: \"25\",\n        onClick: () => this.deleteTreatment(index),\n        className: \"ml-3\",\n        src: closeIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 37\n        }\n      })));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row selected text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1501,\n        columnNumber: 25\n      }\n    }, t(\"No Data\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1505,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1506,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment w-100\",\n      mainbg: true,\n      className: \"col-12 mr-1  te\",\n      label: \"Treatment Package\",\n      onClick: this.handleTreatementmodal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-11 ml-1 up\",\n      label: \"Upcoming\",\n      onClick: this.handleUpcomingAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 his\",\n      label: \"History\",\n      onClick: this.handleTreatmentHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-12 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 29\n      }\n    }, appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12\",\n      label: \"Customer Profile\",\n      onClick: () => history.push(`/admin/customerplus/${customerId}/account`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1536,\n        columnNumber: 33\n      }\n    }) : null, appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12\",\n      label: \"Go to Cart\",\n      onClick: this.handleGotoCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1549,\n        columnNumber: 33\n      }\n    }) : null, !appointmentId && this.props.AppointmentCopy && this.props.AppointmentCopy.appointmentId > 0 ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment ml-2\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Paste Appointment\",\n      onClick: this.handlePasteAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561,\n        columnNumber: 33\n      }\n    }) : null, appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12\",\n      label: \"Copy Appointment\",\n      onClick: this.handleCopyAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1570,\n        columnNumber: 33\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1581,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1582,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment mr-2\",\n      mainbg: true,\n      className: \"col-12 cancel\",\n      label: \"Cancel\",\n      onClick: this.handleCloseDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1583,\n        columnNumber: 31\n      }\n    }), appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"submit-btn w-100\",\n      mainbg: false,\n      className: \"col-12 submit-btn W-100\",\n      label: \"Update Booking\",\n      onClick: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1591,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"submit-btn w-100\",\n      mainbg: false,\n      className: \"col-12 submit-btn W-100\",\n      label: \"Confirm Booking\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1599,\n        columnNumber: 33\n      }\n    }))))), recurringList && recurringList.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1612,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1613,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1614,\n        columnNumber: 29\n      }\n    }, \"Recurring Related Appointments\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row selected selected-header mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1618,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      label: `All`,\n      onChange: e => this.handleRecurringSelectAllCheckbox(e),\n      value: recurringSelectAll,\n      name: \"recurringSelectAll\",\n      checked: recurringSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1619,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1629,\n        columnNumber: 29\n      }\n    }, t(\"Date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1630,\n        columnNumber: 29\n      }\n    }, t(\"Start\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1631,\n        columnNumber: 29\n      }\n    }, t(\"End\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 29\n      }\n    }, t(\"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 29\n      }\n    }, t(\"Duration\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1639,\n        columnNumber: 29\n      }\n    }, t(\"Treatment staff\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1642,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: req_therapist,\n      alt: \"\",\n      height: \"25\",\n      width: \"25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 31\n      }\n    }))), recurringList && recurringList.length > 0 ? recurringList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row selected  mb-4\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1654,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1655,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleRecurringlistCheckbox(e, item),\n        value: item.selected,\n        name: \"recurringItem\",\n        checked: item.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1656,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1668,\n          columnNumber: 35\n        }\n      }, item.date), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1669,\n          columnNumber: 35\n        }\n      }, item.start_time), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1672,\n          columnNumber: 35\n        }\n      }, item.end_time), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 p-0 header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1675,\n          columnNumber: 35\n        }\n      }, item.item_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1679,\n          columnNumber: 35\n        }\n      }, item.add_duration), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1682,\n          columnNumber: 35\n        }\n      }, item.emp_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1685,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleRecurringlistCheckbox(e, item),\n        value: item.requesttherapist,\n        name: \"requesttherapist\",\n        checked: item.requesttherapist,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1686,\n          columnNumber: 37\n        }\n      })));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1703,\n        columnNumber: 29\n      }\n    }, t(\"No Data\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1707,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1708,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1709,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1710,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12\",\n      label: \"Cancel\",\n      onClick: this.handleCloseDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1711,\n        columnNumber: 35\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1719,\n        columnNumber: 33\n      }\n    }, appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"submit-btn\",\n      mainbg: false,\n      className: \"col-12 submit-btn ml-4\",\n      label: \"Update Recurring\",\n      onClick: this.handleRecurringUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1721,\n        columnNumber: 37\n      }\n    }) : null))))) : null)))))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: isOpenModal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1742,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1748,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-list container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1754,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pl-0 mb-3 fw-500 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1755,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1756,\n        columnNumber: 17\n      }\n    }, t(\"Select Treatment\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1758,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1759,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 19\n      }\n    }, t(\"Category\"), /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: categoryList,\n      value: treatmentField.category,\n      name: \"category\",\n      onChange: this.handleChangeTreatment,\n      className: \"customer-name p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1762,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1771,\n        columnNumber: 19\n      }\n    }, t(\"Service\"), /*#__PURE__*/React.createElement(\"input\", {\n      // placeholder=\"Enter here\"\n      // options={siteList}\n      value: treatmentField.treatment,\n      name: \"treatment\",\n      onChange: this.handleSearch,\n      className: \"search px-3 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1773,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1785,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: treatmentListHeader,\n      queryHandler: this.handlePagination,\n      pageMeta: meta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1786,\n        columnNumber: 17\n      }\n    }, treatmentList.length > 0 ? treatmentList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"w-100\",\n        onClick: () => this.handleSelectTreatment(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1794,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1799,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1801,\n          columnNumber: 29\n        }\n      }, item.Item_Class)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1805,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1807,\n          columnNumber: 29\n        }\n      }, item.item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1811,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1813,\n          columnNumber: 29\n        }\n      }, item.add_duration)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1817,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1819,\n          columnNumber: 29\n        }\n      }, item.item_price)));\n    }) : /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1827,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1828,\n        columnNumber: 23\n      }\n    }, t(\"No data Available\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center justify-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"col-3\",\n      mainbg: true,\n      className: \"col-12 ml-4\",\n      label: \"Cancel\",\n      onClick: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1837,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848,\n        columnNumber: 11\n      }\n    }, isTreatementModal ? /*#__PURE__*/React.createElement(TreatmentPackage, {\n      isTreatementModal: isTreatementModal,\n      handleTreatementmodal: this.handleTreatementmodal,\n      handleSelectPackage: this.handleSelectPackage,\n      customerNumber: this.props.appointmentCustomerDetail.customerName,\n      custName: this.props.appointmentCustomerDetail.custName,\n      custPhone: this.props.appointmentCustomerDetail.custPhone,\n      cust_refer: this.props.appointmentCustomerDetail.cust_refer,\n      CustomerRemark: this.props.appointmentCustomerDetail.cust_remark,\n      CustomerRemarkFlag: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1850,\n        columnNumber: 15\n      }\n    }) : \"\"), console.log(this.props.appointmentCustomerDetail, \"appointmentcustomerdetail\"), isTreatmentHistoryModal ? /*#__PURE__*/React.createElement(TreatmentHistory, {\n      isTreatmentHistoryModal: isTreatmentHistoryModal,\n      handleTreatmentHistory: this.handleTreatmentHistory,\n      customerNumber: this.props.appointmentCustomerDetail.customerName,\n      custName: this.props.appointmentCustomerDetail.custName,\n      custPhone: this.props.appointmentCustomerDetail.custPhone,\n      cust_refer: this.props.appointmentCustomerDetail.cust_refer,\n      CustomerRemark: this.props.appointmentCustomerDetail.cust_remark,\n      CustomerRemarkFlag: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1874,\n        columnNumber: 13\n      }\n    }) : \"\", isUpcomingAppointmentModal ? /*#__PURE__*/React.createElement(UpcomingAppointment, {\n      isUpcomingAppointmentModal: isUpcomingAppointmentModal,\n      handleUpcomingAppointment: this.handleUpcomingAppointment,\n      customerNumber: this.props.appointmentCustomerDetail.customerName,\n      custName: this.props.appointmentCustomerDetail.custName,\n      custPhone: this.props.appointmentCustomerDetail.custPhone,\n      cust_refer: this.props.appointmentCustomerDetail.cust_refer,\n      CustomerRemark: this.props.appointmentCustomerDetail.cust_remark,\n      CustomerRemarkFlag: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1888,\n        columnNumber: 13\n      }\n    }) : \"\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerDetail: state.appointment.customerDetail,\n  appointmentDetail: state.appointment.appointmentDetail,\n  selectedTreatmentList: state.appointment.selectedTreatmentList,\n  basicApptDetail: state.appointment.basicApptDetail,\n  appointmentCustomerDetail: state.appointment.appointmentCustomerDetail,\n  appointmentTreatmentList: state.appointment.appointmentTreatmentList,\n  AppointmentCopy: state.appointment.AppointmentCopy\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateForm,\n    getSelectedTreatmentList,\n    getCommonApi,\n    commonCreateApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const NewSelectTreatment = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(NewSelectTreatmentClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/NewAppointment/NewCreateAppointment/NewSelectTreatment.js"],"names":["React","Component","NormalSelect","NormalButton","NormalModal","NormalInput","NormalDateTime","NormalCheckbox","NormalTimePicker","updateForm","getSelectedTreatmentList","connect","bindActionCreators","SimpleReactValidator","closeIcon","req_therapist","getCommonApi","commonCreateApi","commonPatchApi","dateFormat","_","TableWrapper","TreatmentPackage","Toast","AppointmentForm","history","TreatmentHistory","UpcomingAppointment","withTranslation","NewSelectTreatmentClass","constructor","props","state","treatmentDetail","formFields","appt_id","start_time","end_time","Item_Codeid","add_duration","emp_no","requesttherapist","Item_CodeName","edit_remark","recur_days","recur_qty","item_text","checktype","treat_parentcode","selectedList","outletOption","staffOption","roomOption","list","isOpenModal","categoryList","treatmentList","siteList","treatmentField","category","treatment","timeDropdown","duration","index","search","selectTreatmentId","treatmentListHeader","label","className","meta","isTreatementModal","appointmentId","PackageIndex","selectedRec_days","selectedRec_qty","recurringList","recurringSelectedItems","recurringSelectAll","settingData","PasteAppointmentId","InitAppointmentStatus","isTreatmentHistoryModal","isUpcomingAppointmentModal","showErrorMessage","child","onFocus","timeToDateFormat","TimeValue","time","String","split","newTime","Date","setHours","handleRenderApptDetail","copy","then","key","status","data","console","log","appointment","appt_status","setState","treat","startTime","endTime","apptid","push","emp_id","item_id","item_name","handleItemSettings","getStaffAvailability","handleSearch","event","persist","target","value","debouncedFn","debounce","searchString","page","limit","res","dataList","pagination","handlePagination","handleChangeTreatment","name","handleChange","addTimes","getHoursFromDate","length","Number","handleMultiSelect","handleDatePick","date","hour","getHours","minute","getMinutes","hours","minutes","stafflistvalidation","appointmentTreatmentList","item","type","message","handleUpdate","appointmentCustomerDetail","finalTreatment","TreatmentList","orig_remark","AppStatus","remark_setting","new_remark","toUpperCase","bookingStatus","customerName","appt_date","appointmentDate","channel_id","Appt_typeid","ori_remark","source_id","Source_Codeid","Room_Codeid","sec_status","handleCloseDialog","handleSaveorUpdate","custId","custName","cust_refer","handleRecurringUpdate","finalRecurring","recurringItem","selected","id","recur_ids","handleSubmit","Appointment","cust_noid","ItemSite_Codeid","walkin","Treatment","getDateTime","date1","time1","handleDialog","handleMultipleCustomer","handleSelectPackage","item_desc","treatment_parentcode","listCount","handleSelectTreatment","timeToMins","b","timeFromMins","mins","z","n","h","m","t0","t1","handleAddtreatment","start","deleteTreatment","splice","handleTreatementmodal","customerId","prevState","handleCheckbox","handleRecurringlistCheckbox","listCheckbox","find","acc","Checkbox","filter","handleRecurringSelectAllCheckbox","handleCopyAppointment","AppointmentCopy","handlePasteAppointment","handleGotoCart","handleUpcomingAppointment","handleTreatmentHistory","createRef","componentDidMount","basicApptDetail","staff_id","itm_desc","branchId","emp_name","componentWillMount","validator","element","autoForceUpdate","render","customerDetail","selectedTreatmentList","t","outlet","staff","rooms","ref","selectedCustomer","map","e","service_sel","service_text","minWidth","Item_Class","item_price","custPhone","cust_remark","mapStateToProps","appointmentDetail","mapDispatchToProps","dispatch","NewSelectTreatment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,gBAPF,QAQO,kBARP;AASA,OAAO,cAAP;AACA,SACEC,UADF,EAEEC,wBAFF,QAGO,2BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,cAHF,QAIO,sBAJP;AAKA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,gBAAT,QAAiC,0EAAjC;AACA,SAASC,mBAAT,QAAoC,6EAApC;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,OAAO,MAAMC,uBAAN,SAAsC5B,SAAtC,CAAgD;AACrD6B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,eAAe,EAAE,EADX;AAENC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE,EADC;AAEVC,QAAAA,UAAU,EAAE,EAFF;AAGVC,QAAAA,QAAQ,EAAE,EAHA;AAIVC,QAAAA,WAAW,EAAE,IAJH;AAKVC,QAAAA,YAAY,EAAE,EALJ;AAMVC,QAAAA,MAAM,EAAE,CANE;AAOVC,QAAAA,gBAAgB,EAAE,KAPR;AAQVC,QAAAA,aAAa,EAAE,EARL;AASVC,QAAAA,WAAW,EAAE,EATH;AAUVC,QAAAA,UAAU,EAAE,IAVF;AAWVC,QAAAA,SAAS,EAAE,IAXD;AAYVC,QAAAA,SAAS,EAAE,IAZD;AAaVC,QAAAA,SAAS,EAAE,EAbD;AAcVC,QAAAA,gBAAgB,EAAE;AAdR,OAFN;AAkBNC,MAAAA,YAAY,EAAE,CACZ;AACEd,QAAAA,OAAO,EAAE,EADX;AAEEC,QAAAA,UAAU,EAAE,EAFd;AAGEC,QAAAA,QAAQ,EAAE,EAHZ;AAIEC,QAAAA,WAAW,EAAE,IAJf;AAKEC,QAAAA,YAAY,EAAE,EALhB;AAMEC,QAAAA,MAAM,EAAE,CANV;AAOEC,QAAAA,gBAAgB,EAAE,KAPpB;AAQEC,QAAAA,aAAa,EAAE,EARjB;AASEC,QAAAA,WAAW,EAAE,EATf;AAUEC,QAAAA,UAAU,EAAE,IAVd;AAWEC,QAAAA,SAAS,EAAE,IAXb;AAYEC,QAAAA,SAAS,EAAE,IAZb;AAaEC,QAAAA,SAAS,EAAE,EAbb;AAcEC,QAAAA,gBAAgB,EAAE;AAdpB,OADY,CAlBR;AAoCNE,MAAAA,YAAY,EAAE,EApCR;AAqCNC,MAAAA,WAAW,EAAE,EArCP;AAsCNC,MAAAA,UAAU,EAAE,EAtCN;AAuCNC,MAAAA,IAAI,EAAE,EAvCA;AAwCNC,MAAAA,WAAW,EAAE,KAxCP;AAyCNC,MAAAA,YAAY,EAAE,EAzCR;AA0CNC,MAAAA,aAAa,EAAE,EA1CT;AA2CNC,MAAAA,QAAQ,EAAE,EA3CJ;AA4CNC,MAAAA,cAAc,EAAE;AACdC,QAAAA,QAAQ,EAAE,EADI;AAEdC,QAAAA,SAAS,EAAE;AAFG,OA5CV;AAgDNC,MAAAA,YAAY,EAAE,EAhDR;AAiDNC,MAAAA,QAAQ,EAAE,EAjDJ;AAkDNC,MAAAA,KAAK,EAAE,IAlDD;AAmDNC,MAAAA,MAAM,EAAE,EAnDF;AAoDNC,MAAAA,iBAAiB,EAAE,EApDb;AAqDNC,MAAAA,mBAAmB,EAAE,CACnB;AAAEC,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OADmB,EAEnB;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,SAAS,EAAE;AAA/B,OAFmB,EAGnB;AAAED,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAHmB,EAInB;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAJmB,CArDf;AA2DNC,MAAAA,IAAI,EAAE,EA3DA;AA4DNC,MAAAA,iBAAiB,EAAE,KA5Db;AA6DNC,MAAAA,aAAa,EAAE,IA7DT;AA8DNC,MAAAA,YAAY,EAAE,CA9DR;AA+DNC,MAAAA,gBAAgB,EAAE,IA/DZ;AAgENC,MAAAA,eAAe,EAAE,IAhEX;AAiENC,MAAAA,aAAa,EAAE,EAjET;AAkENC,MAAAA,sBAAsB,EAAE,EAlElB;AAmENC,MAAAA,kBAAkB,EAAE,KAnEd;AAoENC,MAAAA,WAAW,EAAE,EApEP;AAqENC,MAAAA,kBAAkB,EAAE,CArEd;AAsENC,MAAAA,qBAAqB,EAAE,EAtEjB;AAuENC,MAAAA,uBAAuB,EAAE,KAvEnB;AAwENC,MAAAA,0BAA0B,EAAE;AAxEtB,KAJW;;AAAA,SA8EnBC,gBA9EmB,GA8EA,MAAM;AACvB,WAAKC,KAAL,CAAWC,OAAX;AACD,KAhFkB;;AAAA,SA6InBC,gBA7ImB,GA6IAC,SAAS,IAAI;AAC9B,UAAIC,IAAI,GAAGC,MAAM,CAACF,SAAD,CAAN,CAAkBG,KAAlB,CAAwB,GAAxB,CAAX;AACA,UAAIC,OAAO,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,QAAX,CAAoBL,IAAI,CAAC,CAAD,CAAxB,EAA6BA,IAAI,CAAC,CAAD,CAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAAT,CAAd;AACA,aAAOG,OAAP;AACD,KAjJkB;;AAAA,SAkJnBG,sBAlJmB,GAkJM,OAAO3D,OAAP,EAAgB4D,IAAhB,KAAyB;AAChD,UAAI;AAAE9C,QAAAA,YAAF;AAAgB+B,QAAAA;AAAhB,UAA0C,KAAKhD,KAAnD;AAEA,WAAKD,KAAL,CAAWf,YAAX,CAAyB,mBAAkBmB,OAAQ,GAAnD,EAAuD6D,IAAvD,CAA4D,MAAMC,GAAN,IAAa;AACvE,YAAI;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAAmBF,GAAvB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,yBAAlB;;AACA,YAAID,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAIC,IAAI,CAACvC,SAAT,EAAoB;AAClBoB,YAAAA,qBAAqB,GAAGmB,IAAI,CAACG,WAAL,CAAiBC,WAAzC;AACAtD,YAAAA,YAAY,GAAG,EAAf;AACA,kBAAM,KAAKuD,QAAL,CAAc;AAClBvD,cAAAA,YAAY,EAAEA,YADI;AAElB+B,cAAAA;AAFkB,aAAd,CAAN;AAIA,iBAAKjD,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC;;AACA,iBAAK,IAAIwD,KAAT,IAAkBN,IAAI,CAACvC,SAAvB,EAAkC;AAChC,kBAAI8C,SAAS,GAAG,EAAhB;AACA,kBAAIC,OAAO,GAAG,EAAd;AACA,kBAAIC,MAAM,GAAG,IAAb;;AACA,kBAAIb,IAAJ,EAAU;AACRW,gBAAAA,SAAS,GAAGD,KAAK,CAACrE,UAAlB;AACAuE,gBAAAA,OAAO,GAAGF,KAAK,CAACpE,QAAhB;AACAuE,gBAAAA,MAAM,GAAG,IAAT;AACD,eAJD,MAIO;AACLF,gBAAAA,SAAS,GAAG,KAAKpB,gBAAL,CAAsBmB,KAAK,CAACrE,UAA5B,CAAZ;AACAuE,gBAAAA,OAAO,GAAGF,KAAK,CAACpE,QAAhB;AACAuE,gBAAAA,MAAM,GAAGH,KAAK,CAACtE,OAAf;AACD;;AACDc,cAAAA,YAAY,CAAC4D,IAAb,CAAkB;AAChBzE,gBAAAA,UAAU,EAAEsE,SADI;AAEhBrE,gBAAAA,QAAQ,EAAEsE,OAFM;AAGhBnE,gBAAAA,MAAM,EAAEiE,KAAK,CAACK,MAHE;AAIhB3E,gBAAAA,OAAO,EAAEyE,MAJO;AAKhBtE,gBAAAA,WAAW,EAAEmE,KAAK,CAACM,OALH;AAMhBrE,gBAAAA,aAAa,EAAE+D,KAAK,CAACO,SANL;AAOhBzE,gBAAAA,YAAY,EAAEkE,KAAK,CAAClE,YAPJ;AAQhBE,gBAAAA,gBAAgB,EAAEgE,KAAK,CAAChE,gBARR;AAShBG,gBAAAA,UAAU,EAAE6D,KAAK,CAAC7D,UATF;AAUhBC,gBAAAA,SAAS,EAAE4D,KAAK,CAAC5D,SAVD;AAWhBC,gBAAAA,SAAS,EAAE2D,KAAK,CAACO,SAXD;AAYhBjE,gBAAAA,SAAS,EAAE0D,KAAK,CAAC1D,SAZD;AAahBC,gBAAAA,gBAAgB,EAAEyD,KAAK,CAACzD;AAbR,eAAlB;AAeA,mBAAKwD,QAAL,CAAc;AACZvD,gBAAAA;AADY,eAAd;AAGD;;AACD,iBAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC;AACD;AACF;AACF,OA/CD;AAgDD,KArMkB;;AAAA,SAsMnBgE,kBAtMmB,GAsME,MAAM;AACzB,UAAI;AAAEnC,QAAAA;AAAF,UAAkB,KAAK9C,KAA3B;AACA,WAAKD,KAAL,CAAWf,YAAX,CAAyB,WAAzB,EAAqCgF,IAArC,CAA0CC,GAAG,IAAI;AAC/C,YAAI;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAAmBF,GAAvB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAAiB,gCAAjB;;AACA,YAAIC,MAAM,KAAK,GAAf,EAAoB;AAClBpB,UAAAA,WAAW,GAAGqB,IAAd;AACA,eAAKK,QAAL,CAAc;AAAE1B,YAAAA;AAAF,WAAd;AACD;AACF,OAPD;AAQD,KAhNkB;;AAAA,SA4NnBoC,oBA5NmB,GA4NI,MAAM;AAC3B,WAAKnF,KAAL,CACGf,YADH,CAEK,8BAA6BG,UAAU,CAAC,IAAIyE,IAAJ,EAAD,EAAa,YAAb,CAA2B,EAFvE,EAIGI,IAJH,CAIQC,GAAG,IAAI;AACX,YAAI;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAAmBF,GAAvB;;AACA,YAAIC,MAAM,KAAK,GAAf,EAAoB;AAClB;AACA;AACA;AACA,eAAKM,QAAL,CAAc;AAAEnD,YAAAA,IAAI,EAAE8C;AAAR,WAAd;AACD;AACF,OAZH;AAaD,KA1OkB;;AAAA,SA4OnBgB,YA5OmB,GA4OJC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACC,OAAN;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAK,CAACE,MAAN,CAAaC,KAAzB,EAAgCH,KAAK,CAACE,MAAtC,EAA8CF,KAA9C,EAAqD,gBAArD;AACA,UAAI;AAAE1D,QAAAA;AAAF,UAAqB,KAAK1B,KAA9B;AACA0B,MAAAA,cAAc,CAAC,WAAD,CAAd,GAA8B0D,KAAK,CAACE,MAAN,CAAaC,KAA3C;AACA,WAAKf,QAAL,CAAc;AAAExC,QAAAA,MAAM,EAAEoD,KAAK,CAACE,MAAN,CAAaC,KAAvB;AAA8B7D,QAAAA;AAA9B,OAAd;;AACA,UAAI,CAAC,KAAK8D,WAAV,EAAuB;AACrB,aAAKA,WAAL,GAAmBpG,CAAC,CAACqG,QAAF,CAAW,MAAM;AAClC,cAAIC,YAAY,GAAGN,KAAK,CAACE,MAAN,CAAaC,KAAhC;AACA,cAAIpB,IAAI,GAAG;AAAEnC,YAAAA,MAAM,EAAE0D;AAAV,WAAX,CAFkC,CAGlC;;AACA,eAAK1D,MAAL,CAAYmC,IAAZ;AACD,SALkB,EAKhB,GALgB,CAAnB;AAMD;;AACD,WAAKqB,WAAL;AACD,KA3PkB;;AAAA,SA6PnBxD,MA7PmB,GA6PVmC,IAAI,IAAI;AACf,UAAI;AAAEwB,QAAAA,IAAI,GAAG,CAAT;AAAYC,QAAAA,KAAK,GAAG,EAApB;AAAwB5D,QAAAA,MAAM,GAAG;AAAjC,UAAwCmC,IAA5C;AACA,UAAI;AAAElC,QAAAA;AAAF,UAAwB,KAAKjC,KAAjC;AACA,WAAKD,KAAL,CACGf,YADH,CAEK,0BAAyBiD,iBAAkB,WAAUD,MAAO,SAAQ2D,IAAK,UAASC,KAAM,EAF7F,EAIG5B,IAJH,CAIQ6B,GAAG,IAAI;AACXzB,QAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ,EAAiB,oCAAjB;;AACA,YAAIA,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAKM,QAAL,CAAc;AACZhD,YAAAA,aAAa,EAAEqE,GAAG,CAAC1B,IAAJ,CAAS2B,QADZ;AAEZzD,YAAAA,IAAI,EAAEwD,GAAG,CAAC1B,IAAJ,CAAS9B,IAAT,CAAc0D;AAFR,WAAd;AAID;AACF,OAZH;AAaD,KA7QkB;;AAAA,SA+QnBC,gBA/QmB,GA+QAL,IAAI,IAAI;AACzB,WAAK3D,MAAL,CAAY2D,IAAZ;AACD,KAjRkB;;AAAA,SAmRnBM,qBAnRmB,GAmRK,OAAO;AAAEX,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASW,QAAAA;AAAT;AAAV,KAAP,KAAuC;AAC7D,UAAI;AAAExE,QAAAA,cAAF;AAAkBM,QAAAA,MAAlB;AAA0BC,QAAAA;AAA1B,UAAgD,KAAKjC,KAAzD;AACAoE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B6B,IAA3B,EAAiCX,KAAjC;AACA7D,MAAAA,cAAc,CAACwE,IAAD,CAAd,GAAuBX,KAAvB;;AACA,UAAIW,IAAI,KAAK,UAAb,EAAyB;AACvBjE,QAAAA,iBAAiB,GAAGsD,KAApB;AACD,OAFD,MAEO,IAAIW,IAAI,KAAK,WAAb,EAA0B;AAC/BlE,QAAAA,MAAM,GAAGuD,KAAT;AACD;;AACD,YAAM,KAAKf,QAAL,CAAc;AAClB9C,QAAAA,cADkB;AAElBO,QAAAA,iBAFkB;AAGlBD,QAAAA;AAHkB,OAAd,CAAN;AAMA,UAAI2D,IAAI,GAAG,CAAX;AAAA,UACEC,KAAK,GAAG,EADV;AAEA,WAAK7F,KAAL,CACGf,YADH,CAEK,0BAAyBiD,iBAAkB,WAAUD,MAAO,SAAQ2D,IAAK,UAASC,KAAM,EAF7F,EAIG5B,IAJH,CAIQ6B,GAAG,IAAI;AACXzB,QAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;;AACA,YAAIA,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAKM,QAAL,CAAc;AACZhD,YAAAA,aAAa,EAAEqE,GAAG,CAAC1B,IAAJ,CAAS2B,QADZ;AAEZzD,YAAAA,IAAI,EAAEwD,GAAG,CAAC1B,IAAJ,CAAS9B,IAAT,CAAc0D;AAFR,WAAd;AAID;AACF,OAZH;AAaD,KAjTkB;;AAAA,SAmTnBI,YAnTmB,GAmTJ,OAAO;AAAEb,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASW,QAAAA;AAAT;AAAV,KAAP,EAAoCnE,KAApC,KAA8C;AAC3D,UAAI;AAAEd,QAAAA,YAAF;AAAgBsB,QAAAA;AAAhB,UAAkC,KAAKvC,KAA3C;;AAEA,UAAIkG,IAAI,KAAK,cAAb,EAA6B;AAC3B,YAAI3D,aAAJ,EAAmB;AACjBtB,UAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,IAAkC,KAAKqE,QAAL,CAChC,KAAKC,gBAAL,CAAsBpF,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,CAAtB,CADgC,EAEhCwD,KAAK,GAAGA,KAAH,GAAW,OAFgB,CAAlC;AAID,SALD,MAKO;AACLtE,UAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,IAAkC,KAAKqE,QAAL,CAChCnF,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,CADgC,EAEhCwD,KAAK,GAAGA,KAAH,GAAW,OAFgB,CAAlC;AAID;;AACDtE,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,cAApB,IAAsCwD,KAAtC;;AACA,YAAItE,YAAY,CAACqF,MAAb,GAAsB,CAAtB,GAA0BvE,KAA9B,EAAqC;AACnC,cAAI4C,OAAO,GAAG,EAAd;;AACA,cAAIpC,aAAJ,EAAmB;AACjBoC,YAAAA,OAAO,GAAG,KAAKrB,gBAAL,CAAsBrC,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CAAtB,CAAV;AACD,WAFD,MAEO;AACL4C,YAAAA,OAAO,GAAG1D,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CAAV;AACD;;AACDd,UAAAA,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,YAAxB,IAAwC4C,OAAxC;;AACA,cAAI1D,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,cAAxB,MAA4C,EAAhD,EAAoD;AAClDd,YAAAA,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,UAAxB,IAAsC,KAAKqE,QAAL,CACpCnF,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CADoC,EAEpCd,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,cAAxB,CAFoC,CAAtC;AAID;AACF;AACF,OA5BD,MA4BO,IAAImE,IAAI,KAAK,eAAb,EAA8B;AACnCjF,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,aAApB,IAAqC,IAArC;AACAd,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,eAApB,IAAuCwD,KAAvC;AACAtE,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,WAApB,IAAmCwD,KAAnC;AACAtE,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,WAApB,IAAmC,UAAnC;AACAd,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,kBAApB,IAA0C,IAA1C;AACD,OANM,MAMA,IAAImE,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK,WAAtC,EAAmD;AACxD,YAAIX,KAAK,IAAI,CAAT,IAAcA,KAAK,KAAK,EAA5B,EAAgC;AAC9BtE,UAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoBmE,IAApB,IAA4B,IAA5B;AACD,SAFD,MAEO;AACLjF,UAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoBmE,IAApB,IAA4BK,MAAM,CAAChB,KAAD,CAAlC;AACD;AACF,OANM,MAMA;AACLtE,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoBmE,IAApB,IAA4BX,KAA5B;AACD;;AAED,YAAM,KAAKf,QAAL,CAAc;AAClBvD,QAAAA;AADkB,OAAd,CAAN;AAGA,YAAM,KAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,KAtWkB;;AAAA,SAwWnBuF,iBAxWmB,GAwWCrC,IAAI,IAAI;AAC1B,UAAI;AAAEjE,QAAAA;AAAF,UAAiB,KAAKF,KAA1B;AACA,UAAIqB,IAAI,GAAG,EAAX;;AACA,WAAK,IAAI4C,GAAT,IAAgBE,IAAhB,EAAsB;AACpB9C,QAAAA,IAAI,CAACwD,IAAL,CAAUZ,GAAG,CAACsB,KAAd;AACD;;AACDrF,MAAAA,UAAU,CAAC,QAAD,CAAV,GAAuBmB,IAAvB;AACA,WAAKmD,QAAL,CAAc;AAAEtE,QAAAA;AAAF,OAAd;AACAkE,MAAAA,OAAO,CAACC,GAAR,CAAYnE,UAAZ,EAAwB,SAAxB;AACD,KAjXkB;;AAAA,SA0YnBuG,cA1YmB,GA0YF,OAAO;AAAEnB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASW,QAAAA;AAAT;AAAV,KAAP,EAAoCnE,KAApC,KAA8C;AAC7D,UAAI;AAAEd,QAAAA,YAAF;AAAgBsB,QAAAA;AAAhB,UAAkC,KAAKvC,KAA3C;AACA,UAAIwD,IAAI,GAAG,KAAK6C,gBAAL,CAAsBd,KAAtB,CAAX;AACA,UAAIzD,QAAQ,GAAG,EAAf;;AACA,UAAIb,YAAY,CAACc,KAAD,CAAZ,CAAoB,cAApB,MAAwC,EAA5C,EAAgD;AAC9CD,QAAAA,QAAQ,GAAGb,YAAY,CAACc,KAAD,CAAZ,CAAoB,cAApB,CAAX;AACD,OAFD,MAEO;AACLD,QAAAA,QAAQ,GAAG,OAAX;AACD;;AACDb,MAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,IAAoCwD,KAAK,GACrCA,KADqC,GAErC,KAAKjC,gBAAL,CAAsBrC,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,CAAtB,CAFJ;;AAGA,UAAIyB,IAAJ,EAAU;AACRvC,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,IAAkC,KAAKqE,QAAL,CAAc5C,IAAd,EAAoB1B,QAApB,CAAlC;AACD;;AACD,UAAIb,YAAY,CAACqF,MAAb,GAAsB,CAAtB,GAA0BvE,KAA9B,EAAqC;AACnC,YAAI4C,OAAO,GAAG,EAAd;;AACA,YAAIpC,aAAJ,EAAmB;AACjBoC,UAAAA,OAAO,GAAG,KAAKrB,gBAAL,CAAsBrC,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CAAtB,CAAV;AACD,SAFD,MAEO;AACL4C,UAAAA,OAAO,GAAG1D,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CAAV;AACD;;AACDd,QAAAA,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,YAAxB,IAAwC4C,OAAxC;;AACA,YAAI1D,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,cAAxB,MAA4C,EAAhD,EAAoD;AAClDd,UAAAA,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,UAAxB,IAAsC,KAAKqE,QAAL,CACpCnF,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CADoC,EAEpCd,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,cAAxB,CAFoC,CAAtC;AAID;AACF;;AACD,YAAM,KAAKyC,QAAL,CAAc;AAClBvD,QAAAA;AADkB,OAAd,CAAN;AAGA,YAAM,KAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,KA5akB;;AAAA,SA8anBoF,gBA9amB,GA8aAK,IAAI,IAAI;AACzB,UAAIC,IAAI,GAAGD,IAAI,CAACE,QAAL,EAAX;AACA,UAAIC,MAAM,GAAGH,IAAI,CAACI,UAAL,EAAb;AACA,UAAIC,KAAK,GAAGJ,IAAI,GAAG,CAAP,GAAWA,IAAX,GAAkB,MAAMA,IAApC;AACA,UAAIK,OAAO,GAAGH,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsB,MAAMA,MAA1C;AACA,aAAOE,KAAK,GAAG,GAAR,GAAcC,OAArB;AACD,KApbkB;;AAAA,SAsbnBC,mBAtbmB,GAsbGC,wBAAwB,IAAI;AAChD,UAAIA,wBAAwB,CAACZ,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,aAAK,IAAIa,IAAT,IAAiBD,wBAAjB,EAA2C;AACzC,cAAI,CAACC,IAAI,CAAC3G,MAAN,IAAgB2G,IAAI,CAAC3G,MAAL,KAAgB,EAAhC,IAAsC2G,IAAI,CAAC3G,MAAL,KAAgB,IAA1D,EAAgE;AAC9DjB,YAAAA,KAAK,CAAC;AAAE6H,cAAAA,IAAI,EAAE,OAAR;AAAiBC,cAAAA,OAAO,EAAE;AAA1B,aAAD,CAAL;AACA,mBAAO,KAAP;AACD,WAHD,MAGO;AACL,mBAAO,IAAP;AACD;AACF;AACF;AACF,KAjckB;;AAAA,SAkcnBC,YAlcmB,GAkcJ,MAAM;AACnB,UAAI;AAAEC,QAAAA,yBAAF;AAA6BL,QAAAA;AAA7B,UAA0D,KAAKnH,KAAnE;AACA,UAAI;AAAEwC,QAAAA,aAAF;AAAiBS,QAAAA;AAAjB,UAA2C,KAAKhD,KAApD;AACA,UAAIwH,cAAc,GAAG,EAArB;;AACA,WAAK,IAAIC,aAAT,IAA0BP,wBAA1B,EAAoD;AAClDM,QAAAA,cAAc,CAAC3C,IAAf,CAAoB;AAClB1E,UAAAA,OAAO,EAAEsH,aAAa,CAACtH,OADL;AAElBC,UAAAA,UAAU,EAAE,KAAKiG,gBAAL,CAAsBoB,aAAa,CAACrH,UAApC,CAFM;AAGlBC,UAAAA,QAAQ,EAAEoH,aAAa,CAACpH,QAHN;AAIlBE,UAAAA,YAAY,EAAEkH,aAAa,CAAClH,YAJV;AAKlBwE,UAAAA,OAAO,EAAE0C,aAAa,CAACnH,WALL;AAMlBQ,UAAAA,SAAS,EAAE2G,aAAa,CAAC3G,SANP;AAOlBgE,UAAAA,MAAM,EAAE2C,aAAa,CAACjH,MAPJ;AAQlBC,UAAAA,gBAAgB,EAAEgH,aAAa,CAAChH,gBARd;AASlBI,UAAAA,SAAS,EAAE0F,MAAM,CAAC,EAAD,CATC;AAUlB3F,UAAAA,UAAU,EAAE,EAVM;AAWlBG,UAAAA,SAAS,EAAE0G,aAAa,CAAC1G,SAXP;AAYlBC,UAAAA,gBAAgB,EAAEyG,aAAa,CAACzG;AAZd,SAApB;AAcD;;AACDoD,MAAAA,OAAO,CAACC,GAAR,CAAYmD,cAAZ,EAA4B,uCAA5B;AACA,UAAIE,WAAW,GAAG,EAAlB;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,UAAIJ,yBAAyB,CAACK,cAA9B,EAA8C;AAC5CF,QAAAA,WAAW,GAAG,IAAd;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,GAAGH,yBAAyB,CAACM,UAAxC;AACD;;AACD,UACEpE,MAAM,CAACT,qBAAD,CAAN,CAA8B8E,WAA9B,OAAgD,SAAhD,IACArE,MAAM,CAAC8D,yBAAyB,CAACQ,aAA3B,CAAN,CAAgDD,WAAhD,OACE,SAHJ,EAIE;AACAH,QAAAA,SAAS,GAAG,IAAZ;AACD,OAND,MAMO;AACLA,QAAAA,SAAS,GAAGJ,yBAAyB,CAACQ,aAAtC;AACD;;AACD,UACER,yBAAyB,CAACS,YAA1B,IACAT,yBAAyB,CAACQ,aAF5B,EAGE;AACA,YAAI,KAAKd,mBAAL,CAAyBC,wBAAzB,CAAJ,EAAwD;AACtD,cAAI/C,IAAI,GAAG;AACTG,YAAAA,WAAW,EAAE;AACX2D,cAAAA,SAAS,EAAE9I,UAAU,CACnB,IAAIyE,IAAJ,CAAS2D,yBAAyB,CAACW,eAAnC,CADmB,EAEnB,YAFmB,CADV;AAKX3D,cAAAA,WAAW,EAAEoD,SALF;AAMXQ,cAAAA,UAAU,EAAE5B,MAAM,CAACgB,yBAAyB,CAACa,WAA3B,CANP;AAOXC,cAAAA,UAAU,EAAEX,WAPD;AAQX/G,cAAAA,WAAW,EAAE4G,yBAAyB,CAAC5G,WAR5B;AASX2H,cAAAA,SAAS,EAAE/B,MAAM,CAACgB,yBAAyB,CAACgB,aAA3B,CATN;AAUXC,cAAAA,WAAW,EAAEjC,MAAM,CAACgB,yBAAyB,CAACiB,WAA3B,CAVR;AAWXC,cAAAA,UAAU,EAAElB,yBAAyB,CAACkB,UAX3B;AAYXb,cAAAA,cAAc,EAAEL,yBAAyB,CAACK;AAZ/B,aADJ;AAeThG,YAAAA,SAAS,EAAE4F;AAfF,WAAX;AAkBA,eAAKzH,KAAL,CACGb,cADH,CACmB,mBAAkBqD,aAAc,GADnD,EACuD4B,IADvD,EAEGH,IAFH,CAEQ,MAAM6B,GAAN,IAAa;AACjBzB,YAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ,EAAiB,iCAAjB;;AACA,gBAAIA,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB;AACtB,mBAAKwE,iBAAL;AACA,mBAAKC,kBAAL;AACD,aAHD,MAGO,IAAI9C,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB;AAC7B,kBAAIhE,UAAU,GAAG;AAAE0I,gBAAAA,MAAM,EAAE,CAAV;AAAaC,gBAAAA,QAAQ,EAAE,EAAvB;AAA2BC,gBAAAA,UAAU,EAAE;AAAvC,eAAjB;AACA5I,cAAAA,UAAU,CAAC,QAAD,CAAV,GAAuBqH,yBAAyB,CAACS,YAAjD;AACA9H,cAAAA,UAAU,CAAC,UAAD,CAAV,GAAyBqH,yBAAyB,CAACsB,QAAnD;AACA3I,cAAAA,UAAU,CAAC,YAAD,CAAV,GAA2BqH,yBAAyB,CAACuB,UAArD;AACA,oBAAM,KAAK/I,KAAL,CAAWtB,UAAX,CAAsB,iBAAtB,EAAyCyB,UAAzC,CAAN;AACA,mBAAKH,KAAL,CACGf,YADH,CAEK,6BAA4BG,UAAU,CACrC,IAAIyE,IAAJ,EADqC,EAErC,YAFqC,CAGrC,cAAa2D,yBAAyB,CAACS,YAAa,EAL1D,EAOGhE,IAPH,CAOQ6B,GAAG,IAAI;AACXpG,gBAAAA,OAAO,CAACoF,IAAR,CAAa,aAAb;AACD,eATH;AAUD;AACF,WAxBH;AAyBD;AACF,OAjDD,MAiDO;AACL,aAAK1B,gBAAL;AACD;AACF,KA3hBkB;;AAAA,SAinBnB4F,qBAjnBmB,GAinBK,MAAM;AAC5B,UAAI;AAAExB,QAAAA,yBAAF;AAA6BL,QAAAA;AAA7B,UAA0D,KAAKnH,KAAnE;AACA,UAAI;AACFwC,QAAAA,aADE;AAEFE,QAAAA,gBAFE;AAGFC,QAAAA,eAHE;AAIFC,QAAAA,aAJE;AAKFE,QAAAA;AALE,UAMA,KAAK7C,KANT;AAOA,UAAIgJ,cAAc,GAAG,EAArB;;AACA,WAAK,IAAIC,aAAT,IAA0BtG,aAA1B,EAAyC;AACvC,YAAIsG,aAAa,CAACC,QAAlB,EAA4B;AAC1B,cAAI3D,KAAK,GAAG0D,aAAa,CAACE,EAA1B;AACAH,UAAAA,cAAc,CAACnE,IAAf,CAAoBU,KAApB;AACD;AACF;;AACDnB,MAAAA,OAAO,CAACC,GAAR,CAAY2E,cAAZ,EAA4B,oBAA5B;;AACA,UACEzB,yBAAyB,CAACS,YAA1B,IACAT,yBAAyB,CAACQ,aAF5B,EAGE;AACA,YAAI,KAAKd,mBAAL,CAAyBC,wBAAzB,CAAJ,EAAwD;AACtD,cAAI/C,IAAI,GAAG;AACT8D,YAAAA,SAAS,EAAE9I,UAAU,CACnB,IAAIyE,IAAJ,CAAS2D,yBAAyB,CAACW,eAAnC,CADmB,EAEnB,YAFmB,CADZ;AAKTM,YAAAA,WAAW,EAAEjB,yBAAyB,CAACiB,WAL9B;AAMTjE,YAAAA,WAAW,EAAEgD,yBAAyB,CAACQ,aAN9B;AAOTU,YAAAA,UAAU,EAAElB,yBAAyB,CAACkB,UAP7B;AAQT9H,YAAAA,WAAW,EAAE4G,yBAAyB,CAAC5G,WAR9B;AASTP,YAAAA,UAAU,EAAE,KAAKiG,gBAAL,CACVa,wBAAwB,CAAC,CAAD,CAAxB,CAA4B9G,UADlB,CATH;AAYTC,YAAAA,QAAQ,EAAE6G,wBAAwB,CAAC,CAAD,CAAxB,CAA4B7G,QAZ7B;AAaT0E,YAAAA,OAAO,EAAEmC,wBAAwB,CAAC,CAAD,CAAxB,CAA4B5G,WAb5B;AAcTC,YAAAA,YAAY,EAAE2G,wBAAwB,CAAC,CAAD,CAAxB,CAA4B3G,YAdjC;AAeTuE,YAAAA,MAAM,EAAEoC,wBAAwB,CAAC,CAAD,CAAxB,CAA4B1G,MAf3B;AAgBTC,YAAAA,gBAAgB,EAAEyG,wBAAwB,CAAC,CAAD,CAAxB,CAA4BzG,gBAhBrC;AAiBTK,YAAAA,SAAS,EAAEoG,wBAAwB,CAAC,CAAD,CAAxB,CAA4BpG,SAjB9B;AAkBTF,YAAAA,UAAU,EACR6B,gBAAgB,KAAKyE,wBAAwB,CAAC,CAAD,CAAxB,CAA4BtG,UAAjD,IACAsG,wBAAwB,CAAC,CAAD,CAAxB,CAA4BtG,UAA5B,KAA2C,EAD3C,IAEAsG,wBAAwB,CAAC,CAAD,CAAxB,CAA4BtG,UAA5B,IAA0C,CAF1C,GAGI,IAHJ,GAIIsG,wBAAwB,CAAC,CAAD,CAAxB,CAA4BtG,UAvBzB;AAwBTC,YAAAA,SAAS,EACP0F,MAAM,CAAC7D,eAAD,CAAN,KACE6D,MAAM,CAACW,wBAAwB,CAAC,CAAD,CAAxB,CAA4BrG,SAA7B,CADR,IAEA0F,MAAM,CAACW,wBAAwB,CAAC,CAAD,CAAxB,CAA4BrG,SAA7B,CAAN,KAAkD,EAFlD,IAGA0F,MAAM,CAACW,wBAAwB,CAAC,CAAD,CAAxB,CAA4BrG,SAA7B,CAAN,IAAiD,CAHjD,GAII,IAJJ,GAKI0F,MAAM,CAACW,wBAAwB,CAAC,CAAD,CAAxB,CAA4BrG,SAA7B,CA9BH;AA+BTuI,YAAAA,SAAS,EAAEJ;AA/BF,WAAX;AAiCA5E,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,2CAAlB;;AACA,cAAItB,kBAAJ,EAAwB;AACtB,iBAAK9C,KAAL,CACGb,cADH,CAEK,oBAAmBqD,aAAc,UAAU,KAAK,GAFrD,EAGI4B,IAHJ,EAKGH,IALH,CAKQ,MAAM6B,GAAN,IAAa;AACjB,kBAAIA,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB;AACtB,qBAAKwE,iBAAL;AACA,qBAAKC,kBAAL;AACD;AACF,aAVH;AAWD,WAZD,MAYO;AACL,iBAAK5I,KAAL,CACGb,cADH,CACmB,oBAAmBqD,aAAc,GADpD,EACwD4B,IADxD,EAEGH,IAFH,CAEQ,MAAM6B,GAAN,IAAa;AACjBzB,cAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ,EAAiB,yBAAjB;;AACA,kBAAIA,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB;AACtB,qBAAKwE,iBAAL;AACA,qBAAKC,kBAAL;AACD;AACF,aARH;AASD;AACF;AACF,OA/DD,MA+DO;AACL,aAAKxF,gBAAL;AACD;AACF,KApsBkB;;AAAA,SAqsBnBkG,YArsBmB,GAqsBJ,MAAM;AACnB;AACA,UAAI;AAAE9B,QAAAA,yBAAF;AAA6BL,QAAAA;AAA7B,UAA0D,KAAKnH,KAAnE;AACAqE,MAAAA,OAAO,CAACC,GAAR,CAAYkD,yBAAZ,EAAuC,mCAAvC;AACAnD,MAAAA,OAAO,CAACC,GAAR,CACE6C,wBADF,EAEE,uCAFF;;AAIA,UACEK,yBAAyB,CAACS,YAA1B,IACAT,yBAAyB,CAACQ,aAF5B,EAGE;AACA,YAAI,KAAKd,mBAAL,CAAyBC,wBAAzB,CAAJ,EAAwD;AACtD,cAAI/C,IAAI,GAAG;AACTmF,YAAAA,WAAW,EAAE;AACXrB,cAAAA,SAAS,EAAE9I,UAAU,CACnB,IAAIyE,IAAJ,CAAS2D,yBAAyB,CAACW,eAAnC,CADmB,EAEnB,YAFmB,CADV;AAKXE,cAAAA,WAAW,EAAEb,yBAAyB,CAACa,WAL5B;AAMXmB,cAAAA,SAAS,EAAEhC,yBAAyB,CAACS,YAN1B;AAOXH,cAAAA,UAAU,EAAEN,yBAAyB,CAACM,UAP3B;AAQX;AACAU,cAAAA,aAAa,EAAEhB,yBAAyB,CAACgB,aAT9B;AAUXC,cAAAA,WAAW,EAAEjB,yBAAyB,CAACiB,WAV5B;AAWXjE,cAAAA,WAAW,EAAEgD,yBAAyB,CAACQ,aAX5B;AAYXU,cAAAA,UAAU,EAAElB,yBAAyB,CAACkB,UAZ3B;AAaXe,cAAAA,eAAe,EAAEjC,yBAAyB,CAACiC,eAbhC;AAcXC,cAAAA,MAAM,EAAElC,yBAAyB,CAACkC;AAdvB,aADJ;AAiBTC,YAAAA,SAAS,EAAExC;AAjBF,WAAX;AAoBA,eAAKnH,KAAL,CAAWd,eAAX,CAA4B,cAA5B,EAA2CkF,IAA3C,EAAiDH,IAAjD,CAAsD,MAAM6B,GAAN,IAAa;AACjE,gBAAIA,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB;AACtB,mBAAKwE,iBAAL;AACA,mBAAKC,kBAAL;AACD;AACF,WALD;AAMD;AACF,OAhCD,MAgCO;AACL,aAAKxF,gBAAL;AACD;AACF,KAhvBkB;;AAAA,SAkvBnBwG,WAlvBmB,GAkvBLxF,IAAI,IAAI;AACpB,UAAIuC,IAAI,GAAG,IAAI9C,IAAJ,CAASO,IAAT,CAAX;AACAuC,MAAAA,IAAI,GAAGjD,MAAM,CAACiD,IAAD,CAAN,CAAahD,KAAb,CAAmB,GAAnB,CAAP;AACA,UAAIkG,KAAK,GAAGlD,IAAI,CAAC,CAAD,CAAJ,GAAU,KAAV,GAAkBA,IAAI,CAAC,CAAD,CAAtB,GAA4B,IAA5B,GAAmCA,IAAI,CAAC,CAAD,CAAnD;AACA,UAAIlD,IAAI,GAAGkD,IAAI,CAAC,CAAD,CAAJ,CAAQhD,KAAR,CAAc,GAAd,CAAX;AACA,UAAImG,KAAK,GACPpG,MAAM,CAAC8C,MAAM,CAAC/C,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,EAAlB,GAAuB+C,MAAM,CAAC/C,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,EAAzC,GAA8CA,IAAI,CAAC,CAAD,CAAnD,CAAN,GACA,GADA,GAEAA,IAAI,CAAC,CAAD,CAFJ,IAGC+C,MAAM,CAAC/C,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,EAAlB,GAAuB,IAAvB,GAA8B,IAH/B,CADF;AAKA,aAAOqG,KAAK,GAAG,IAAR,GAAeD,KAAtB;AACD,KA7vBkB;;AAAA,SA+vBnBE,YA/vBmB,GA+vBJ,MAAM;AACnB,WAAKtF,QAAL,CAAc;AAAElD,QAAAA,WAAW,EAAE,KAAf;AAAsBS,QAAAA,KAAK,EAAE;AAA7B,OAAd;AACD,KAjwBkB;;AAAA,SAmwBnBgI,sBAnwBmB,GAmwBM,MAAM;AAC7B,WAAKvF,QAAL,CAAc;AAAElD,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KArwBkB;;AAAA,SAuwBnB0I,mBAvwBmB,GAuwBG,MAAM7F,IAAN,IAAc;AAClC,UAAI;AAAElD,QAAAA,YAAF;AAAgBuB,QAAAA,YAAhB;AAA8BD,QAAAA;AAA9B,UAAgD,KAAKvC,KAAzD;;AAEA,UAAIwC,YAAY,KAAK,CAAjB,IAAsBvB,YAAY,CAAC,CAAD,CAAZ,CAAgB,eAAhB,MAAqC,EAA/D,EAAmE;AACjEA,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,IAAgCA,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,CAAhC;;AACA,YAAIsB,aAAJ,EAAmB;AACjBtB,UAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,UAAhB,IAA8B,KAAKmF,QAAL,CAC5B,KAAKC,gBAAL,CAAsBpF,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,CAAtB,CAD4B,EAE5BkD,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAFZ,CAA9B;AAID,SALD,MAKO;AACLU,UAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,UAAhB,IAA8B,KAAKmF,QAAL,CAC5BnF,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,CAD4B,EAE5BkD,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAFZ,CAA9B;AAID;;AACDU,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,aAAhB,IAAiCkD,IAAI,CAACgF,EAAtC;AACAlI,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,eAAhB,IAAmCkD,IAAI,CAAC8F,SAAxC;AACAhJ,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,WAAhB,IAA+B,IAA/B;AACAA,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,cAAhB,IAAkCkD,IAAI,CAAC5D,YAAvC;AACAU,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,WAAhB,IAA+B,SAA/B;AACAA,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,kBAAhB,IAAsCkD,IAAI,CAAC+F,oBAA3C;AAEA,cAAM,KAAK1F,QAAL,CAAc;AAClBvD,UAAAA,YADkB;AAElBuB,UAAAA,YAAY,EAAEA,YAAY,GAAG;AAFX,SAAd,CAAN;AAIA,cAAM,KAAKzC,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,OAzBD,MAyBO,IAAIA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,eAAtC,MAA2D,EAA/D,EAAmE;AACxErF,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,YAAtC,IACErF,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,YAAtC,CADF;;AAEA,YAAI/D,aAAJ,EAAmB;AACjBtB,UAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,UAAtC,IAAoD,KAAKF,QAAL,CAClD,KAAKC,gBAAL,CACEpF,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,YAAtC,CADF,CADkD,EAIlDnC,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAJU,CAApD;AAMD,SAPD,MAOO;AACLU,UAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,UAAtC,IAAoD,KAAKF,QAAL,CAClDnF,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,YAAtC,CADkD,EAElDnC,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAFU,CAApD;AAID;;AAEDU,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,aAAtC,IAAuDnC,IAAI,CAACgF,EAA5D;AACAlI,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,eAAtC,IAAyDnC,IAAI,CAAC8F,SAA9D;AACAhJ,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,WAAtC,IAAqD,IAArD;AACArF,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,cAAtC,IAAwDnC,IAAI,CAAC5D,YAA7D;AACAU,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,WAAtC,IAAqD,SAArD;AACArF,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,kBAAtC,IACEnC,IAAI,CAAC+F,oBADP;AAGA,cAAM,KAAK1F,QAAL,CAAc;AAClBvD,UAAAA,YADkB;AAElBuB,UAAAA,YAAY,EAAEA,YAAY,GAAG;AAFX,SAAd,CAAN;AAIA,cAAM,KAAKzC,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,OA9BM,MA8BA,IACLA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,eAAtC,MAA2D,EAA3D,IACA/D,aAFK,EAGL;AACAtB,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,YAAtC,IACErF,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,YAAtC,CADF;;AAEA,YAAI/D,aAAJ,EAAmB;AACjBtB,UAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,UAAtC,IAAoD,KAAKF,QAAL,CAClD,KAAKC,gBAAL,CACEpF,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,YAAtC,CADF,CADkD,EAIlDnC,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAJU,CAApD;AAMD,SAPD,MAOO;AACLU,UAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,UAAtC,IAAoD,KAAKF,QAAL,CAClDnF,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,YAAtC,CADkD,EAElDnC,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAFU,CAApD;AAID;;AAEDU,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,aAAtC,IAAuDnC,IAAI,CAACgF,EAA5D;AACAlI,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,eAAtC,IAAyDnC,IAAI,CAAC8F,SAA9D;AACAhJ,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,WAAtC,IAAqD,IAArD;AACArF,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,cAAtC,IAAwDnC,IAAI,CAAC5D,YAA7D;AACAU,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,WAAtC,IAAqD,SAArD;AACArF,QAAAA,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsC,kBAAtC,IACEnC,IAAI,CAAC+F,oBADP;AAGA,cAAM,KAAK1F,QAAL,CAAc;AAClBvD,UAAAA,YADkB;AAElBuB,UAAAA,YAAY,EAAEA,YAAY,GAAG;AAFX,SAAd,CAAN;AAIA,cAAM,KAAKzC,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,OAjCM,MAiCA;AACL,YAAIkJ,SAAS,GAAGlJ,YAAY,CAACqF,MAAb,GAAsB,CAAtC;AACA,YAAI1E,SAAS,GAAG,EAAhB;;AACA,YAAIW,aAAJ,EAAmB;AACjBX,UAAAA,SAAS,CAAC,YAAD,CAAT,GAA0B,KAAK0B,gBAAL,CACxBrC,YAAY,CAACkJ,SAAD,CAAZ,CAAwB,UAAxB,CADwB,CAA1B;AAGD,SAJD,MAIO;AACLvI,UAAAA,SAAS,CAAC,YAAD,CAAT,GAA0BX,YAAY,CAACkJ,SAAD,CAAZ,CAAwB,UAAxB,CAA1B;AACD;;AACDvI,QAAAA,SAAS,CAAC,aAAD,CAAT,GAA2BuC,IAAI,CAACgF,EAAhC;AACAvH,QAAAA,SAAS,CAAC,eAAD,CAAT,GAA6BuC,IAAI,CAAC8F,SAAlC;AACArI,QAAAA,SAAS,CAAC,WAAD,CAAT,GAAyB,IAAzB;AACAA,QAAAA,SAAS,CAAC,cAAD,CAAT,GAA4BuC,IAAI,CAAC5D,YAAjC;AACAqB,QAAAA,SAAS,CAAC,WAAD,CAAT,GAAyB,SAAzB;AACAA,QAAAA,SAAS,CAAC,kBAAD,CAAT,GAAgCuC,IAAI,CAAC+F,oBAArC;AACAjJ,QAAAA,YAAY,CAAC4D,IAAb,CAAkBjD,SAAlB;AACA,cAAM,KAAK4C,QAAL,CAAc;AAClBvD,UAAAA;AADkB,SAAd,CAAN;AAGA,cAAM,KAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD;;AAED,WAAKuD,QAAL,CAAc;AAAElD,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KA13BkB;;AAAA,SA43BnB8I,qBA53BmB,GA43BK,MAAMjG,IAAN,IAAc;AACpC,UAAI;AAAElD,QAAAA,YAAF;AAAgBc,QAAAA,KAAhB;AAAuBQ,QAAAA;AAAvB,UAAyC,KAAKvC,KAAlD;;AAEA,UAAI+B,KAAK,IAAI,CAAT,IAAcd,YAAY,CAACqF,MAAb,IAAuB,CAAzC,EAA4C;AAC1CrF,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,IAAgCA,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,CAAhC;;AACA,YAAIsB,aAAJ,EAAmB;AACjBtB,UAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,UAAhB,IAA8B,KAAKmF,QAAL,CAC5B,KAAKC,gBAAL,CAAsBpF,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,CAAtB,CAD4B,EAE5BkD,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAFZ,CAA9B;AAID,SALD,MAKO;AACLU,UAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,UAAhB,IAA8B,KAAKmF,QAAL,CAC5BnF,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,CAD4B,EAE5BkD,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAFZ,CAA9B;AAID;;AACDU,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,aAAhB,IAAiCkD,IAAI,CAACgF,EAAtC;AACAlI,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,eAAhB,IAAmCkD,IAAI,CAAC8F,SAAxC;AACAhJ,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,cAAhB,IAAkCkD,IAAI,CAAC5D,YAAvC;AACAU,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,WAAhB,IAA+B,SAA/B;AACAA,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,kBAAhB,IAAsC,IAAtC;AAEA,cAAM,KAAKuD,QAAL,CAAc;AAClBvD,UAAAA;AADkB,SAAd,CAAN;AAGA,cAAM,KAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,OAvBD,MAuBO;AACLA,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,IAAoCd,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,CAApC;;AACA,YAAIQ,aAAJ,EAAmB;AACjBtB,UAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,IAAkC,KAAKqE,QAAL,CAChC,KAAKC,gBAAL,CAAsBpF,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,CAAtB,CADgC,EAEhCoC,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAFR,CAAlC;AAID,SALD,MAKO;AACLU,UAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,IAAkC,KAAKqE,QAAL,CAChCnF,YAAY,CAACc,KAAD,CAAZ,CAAoB,YAApB,CADgC,EAEhCoC,IAAI,CAAC5D,YAAL,GAAoB4D,IAAI,CAAC5D,YAAzB,GAAwC,OAFR,CAAlC;AAID;;AACDU,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,aAApB,IAAqCoC,IAAI,CAACgF,EAA1C;AACAlI,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,eAApB,IAAuCoC,IAAI,CAAC8F,SAA5C;AACAhJ,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,cAApB,IAAsCoC,IAAI,CAAC5D,YAA3C;AACAU,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,WAApB,IAAmC,SAAnC;AACAd,QAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,kBAApB,IAA0C,IAA1C;AAEA,YAAI4C,OAAO,GAAG,EAAd;;AACA,YAAIpC,aAAJ,EAAmB;AACjBoC,UAAAA,OAAO,GAAG,KAAKrB,gBAAL,CAAsBrC,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CAAtB,CAAV;AACD,SAFD,MAEO;AACL4C,UAAAA,OAAO,GAAG1D,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CAAV;AACD;;AACD,YAAId,YAAY,CAACqF,MAAb,GAAsB,CAAtB,GAA0BvE,KAA9B,EAAqC;AACnCd,UAAAA,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,YAAxB,IAAwC4C,OAAxC;;AACA,cAAI1D,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,cAAxB,MAA4C,EAAhD,EAAoD;AAClDd,YAAAA,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,UAAxB,IAAsC,KAAKqE,QAAL,CACpCnF,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CADoC,EAEpCd,YAAY,CAACc,KAAK,GAAG,CAAT,CAAZ,CAAwB,cAAxB,CAFoC,CAAtC;AAID;AACF;;AACD,cAAM,KAAKyC,QAAL,CAAc;AAClBvD,UAAAA;AADkB,SAAd,CAAN;AAGA,cAAM,KAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD;;AACD,WAAKuD,QAAL,CAAc;AAAElD,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KA97BkB;;AAAA,SAg8BnB+I,UAh8BmB,GAg8BN7G,IAAI,IAAI;AACnB,UAAI8G,CAAC,GAAG9G,IAAI,CAACE,KAAL,CAAW,GAAX,CAAR;AACA,aAAO4G,CAAC,CAAC,CAAD,CAAD,GAAO,EAAP,GAAY,CAACA,CAAC,CAAC,CAAD,CAArB;AACD,KAn8BkB;;AAAA,SAu8BnBC,YAv8BmB,GAu8BJC,IAAI,IAAI;AACrB,eAASC,CAAT,CAAWC,CAAX,EAAc;AACZ,eAAO,CAACA,CAAC,GAAG,EAAJ,GAAS,GAAT,GAAe,EAAhB,IAAsBA,CAA7B;AACD;;AACD,UAAIC,CAAC,GAAG,CAAEH,IAAI,GAAG,EAAR,GAAc,CAAf,IAAoB,EAA5B;AACA,UAAII,CAAC,GAAGJ,IAAI,GAAG,EAAf;AACA,aAAOC,CAAC,CAACE,CAAD,CAAD,GAAO,GAAP,GAAaF,CAAC,CAACG,CAAD,CAArB;AACD,KA98BkB;;AAAA,SAi9BnBxE,QAj9BmB,GAi9BR,CAACyE,EAAD,EAAKC,EAAL,KAAY;AACrB,aAAO,KAAKP,YAAL,CAAkB,KAAKF,UAAL,CAAgBQ,EAAhB,IAAsB,KAAKR,UAAL,CAAgBS,EAAhB,CAAxC,CAAP;AACD,KAn9BkB;;AAAA,SAi+BnBC,kBAj+BmB,GAi+BE,MAAMhJ,KAAN,IAAe;AAClC,UAAI;AAAEd,QAAAA,YAAF;AAAgBf,QAAAA,UAAhB;AAA4BqC,QAAAA;AAA5B,UAA8C,KAAKvC,KAAvD;;AAEA,UAAIiB,YAAY,CAACc,KAAD,CAAZ,CAAoB,UAApB,CAAJ,EAAqC;AACnC,YAAIiJ,KAAK,GAAG,EAAZ;;AACA,YAAIzI,aAAJ,EAAmB;AACjByI,UAAAA,KAAK,GAAG,KAAK1H,gBAAL,CACNrC,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsCjG,QADhC,CAAR;AAGD,SAJD,MAIO;AACL2K,UAAAA,KAAK,GAAG/J,YAAY,CAACA,YAAY,CAACqF,MAAb,GAAsB,CAAvB,CAAZ,CAAsCjG,QAA9C;AACD;;AACDH,QAAAA,UAAU,GAAG;AACXC,UAAAA,OAAO,EAAE,IADE;AAEXC,UAAAA,UAAU,EAAE4K,KAFD;AAGX3K,UAAAA,QAAQ,EAAE,EAHC;AAIXC,UAAAA,WAAW,EAAE,IAJF;AAKXC,UAAAA,YAAY,EAAE,EALH;AAMXC,UAAAA,MAAM,EAAE,CANG;AAOXC,UAAAA,gBAAgB,EAAE,KAPP;AAQXG,UAAAA,UAAU,EAAE,IARD;AASXC,UAAAA,SAAS,EAAE,IATA;AAUXC,UAAAA,SAAS,EAAE,IAVA;AAWXC,UAAAA,SAAS,EAAE,EAXA;AAYXC,UAAAA,gBAAgB,EAAE;AAZP,SAAb;AAcAC,QAAAA,YAAY,CAAC4D,IAAb,CAAkB;AAChB1E,UAAAA,OAAO,EAAE,IADO;AAEhBC,UAAAA,UAAU,EAAE4K,KAFI;AAGhB3K,UAAAA,QAAQ,EAAE,EAHM;AAIhBC,UAAAA,WAAW,EAAE,IAJG;AAKhBI,UAAAA,aAAa,EAAE,EALC;AAMhBH,UAAAA,YAAY,EAAE,EANE;AAOhBC,UAAAA,MAAM,EAAE,CAPQ;AAQhBC,UAAAA,gBAAgB,EAAE,KARF;AAShBG,UAAAA,UAAU,EAAE,IATI;AAUhBC,UAAAA,SAAS,EAAE,IAVK;AAWhBC,UAAAA,SAAS,EAAE,IAXK;AAYhBC,UAAAA,SAAS,EAAE,EAZK;AAahBC,UAAAA,gBAAgB,EAAE;AAbF,SAAlB;AAgBA,cAAM,KAAKwD,QAAL,CAAc;AAAEvD,UAAAA,YAAF;AAAgBf,UAAAA;AAAhB,SAAd,CAAN;AAEA,cAAM,KAAKH,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,OA1CD,MA0CO;AACL1B,QAAAA,KAAK,CAAC;AAAE6H,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD,CAAL;AACD;AACF,KAjhCkB;;AAAA,SAmhCnB4D,eAnhCmB,GAmhCD,MAAMlJ,KAAN,IAAe;AAC/B,UAAI;AAAEd,QAAAA;AAAF,UAAmB,KAAKjB,KAA5B;AACAiB,MAAAA,YAAY,CAACiK,MAAb,CAAoBnJ,KAApB,EAA2B,CAA3B;AACA,WAAKyC,QAAL,CAAc;AAAEvD,QAAAA;AAAF,OAAd;AACA,YAAM,KAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,KAxhCkB;;AAAA,SA0hCnBkK,qBA1hCmB,GA0hCK,MAAM;AAC5B,UAAI;AAAE5D,QAAAA;AAAF,UAAgC,KAAKxH,KAAzC;AACA,UAAIqL,UAAU,GAAG7D,yBAAyB,CAACS,YAA3C;;AACA,UAAIoD,UAAU,GAAG,CAAjB,EAAoB;AAClB,aAAK5G,QAAL,CAAc6G,SAAS,KAAK;AAC1B/I,UAAAA,iBAAiB,EAAE,CAAC+I,SAAS,CAAC/I;AADJ,SAAL,CAAvB;AAGD,OAJD,MAIO;AACL/C,QAAAA,KAAK,CAAC;AAAE6H,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD,CAAL;AACD;AACF,KApiCkB;;AAAA,SAgjCnBiE,cAhjCmB,GAgjCF,OAAO;AAAEhG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASW,QAAAA;AAAT;AAAV,KAAP,EAAoCnE,KAApC,KAA8C;AAC7D,UAAI;AAAEP,QAAAA;AAAF,UAAoB,KAAKxB,KAA7B;AACA,UAAI;AAAEiB,QAAAA;AAAF,UAAmB,KAAKjB,KAA5B;AACAiB,MAAAA,YAAY,CAACc,KAAD,CAAZ,CAAoB,kBAApB,IAA0CwD,KAA1C;AACA,YAAM,KAAKf,QAAL,CAAc;AAClBvD,QAAAA;AADkB,OAAd,CAAN;AAGA,YAAM,KAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC,CAAN;AACD,KAxjCkB;;AAAA,SA0jCnByH,iBA1jCmB,GA0jCC,YAAY;AAC9B,WAAK3I,KAAL,CAAW2I,iBAAX;AACD,KA5jCkB;;AAAA,SA6jCnBC,kBA7jCmB,GA6jCE,YAAY;AAC/B,WAAK5I,KAAL,CAAW4I,kBAAX;AACD,KA/jCkB;;AAAA,SAgkCnB4C,2BAhkCmB,GAgkCW,OAAO;AAAEjG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASW,QAAAA;AAAT;AAAV,KAAP,EAAoCiB,IAApC,KAA6C;AACzE,UAAI;AAAExE,QAAAA;AAAF,UAAoB,KAAK3C,KAA7B;AACA,UAAIwL,YAAY,GAAG7I,aAAa,CAAC8I,IAAd,CAAmBC,GAAG,IAAIA,GAAG,CAACvC,EAAJ,KAAWhC,IAAI,CAACgC,EAA1C,CAAnB;;AACA,UAAIqC,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAAC,UAAD,CAAZ,GAA2BjG,KAA3B;AACA,cAAM,KAAKf,QAAL,CAAc,EAAE,GAAG,KAAKxE,KAAL,CAAW2C,aAAhB;AAA+B6I,UAAAA;AAA/B,SAAd,CAAN;AACD;;AACD,UAAIG,QAAQ,GAAGhJ,aAAa,CAACiJ,MAAd,CAAqBF,GAAG,IAAIA,GAAG,CAACxC,QAAJ,KAAiB,IAA7C,EAAmD5C,MAAlE;;AACA,UAAIqF,QAAQ,IAAI,KAAK3L,KAAL,CAAW2C,aAAX,CAAyB2D,MAAzC,EAAiD;AAC/C,cAAM,KAAK9B,QAAL,CAAc;AAAE3B,UAAAA,kBAAkB,EAAE;AAAtB,SAAd,CAAN;AACD,OAFD,MAEO;AACL,cAAM,KAAK2B,QAAL,CAAc;AAAE3B,UAAAA,kBAAkB,EAAE;AAAtB,SAAd,CAAN;AACD;AACF,KA7kCkB;;AAAA,SA+kCnBgJ,gCA/kCmB,GA+kCgB,OAAO;AAAEvG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASW,QAAAA;AAAT;AAAV,KAAP,KAAuC;AACxE,UAAI;AAAEvD,QAAAA;AAAF,UAAoB,KAAK3C,KAA7B;AACA,YAAM,KAAKwE,QAAL,CAAc;AAAE3B,QAAAA,kBAAkB,EAAE0C;AAAtB,OAAd,CAAN;;AACA,WAAK,IAAI4B,IAAT,IAAiBxE,aAAjB,EAAgC;AAC9BwE,QAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmB5B,KAAnB;AACA,cAAM,KAAKf,QAAL,CAAc,EAAE,GAAG,KAAKxE,KAAL,CAAW2C,aAAhB;AAA+BwE,UAAAA;AAA/B,SAAd,CAAN;AACD;AACF,KAtlCkB;;AAAA,SAulCnB2E,qBAvlCmB,GAulCK,YAAY;AAClC,UAAI;AAAEvJ,QAAAA;AAAF,UAAoB,KAAKvC,KAA7B;AACA,UAAIE,UAAU,GAAG,EAAjB;AACAA,MAAAA,UAAU,CAAC,eAAD,CAAV,GAA8BqC,aAA9B;AACA,YAAM,KAAKxC,KAAL,CAAWtB,UAAX,CAAsB,iBAAtB,EAAyCyB,UAAzC,CAAN;AACAkE,MAAAA,OAAO,CAACC,GAAR,CACE,KAAKtE,KAAL,CAAWgM,eADb,EAEE,sCAFF;AAIAxM,MAAAA,KAAK,CAAC;AAAE6H,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE;AAA5B,OAAD,CAAL;AACD,KAjmCkB;;AAAA,SAkmCnB2E,sBAlmCmB,GAkmCM,YAAY;AACnC,UAAI;AAAED,QAAAA;AAAF,UAAsB,KAAKhM,KAA/B;;AACA,UAAIgM,eAAJ,EAAqB;AACnB,aAAKvH,QAAL,CAAc;AACZzB,UAAAA,kBAAkB,EAAEgJ,eAAe,CAACxJ,aADxB;AAEZtB,UAAAA,YAAY,EAAE;AAFF,SAAd;AAIA,aAAK6C,sBAAL,CAA4BiI,eAAe,CAACxJ,aAA5C,EAA2D,IAA3D;AACD;AACF,KA3mCkB;;AAAA,SA6mCnB0J,cA7mCmB,GA6mCF,YAAY;AAC3B,UAAI;AAAE1E,QAAAA;AAAF,UAAgC,KAAKxH,KAAzC;AACA,UAAIG,UAAU,GAAG;AAAE0I,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAjB;AACA3I,MAAAA,UAAU,CAAC,QAAD,CAAV,GAAuBqH,yBAAyB,CAACS,YAAjD;AACA9H,MAAAA,UAAU,CAAC,UAAD,CAAV,GAAyBqH,yBAAyB,CAACsB,QAAnD;AACA3I,MAAAA,UAAU,CAAC,YAAD,CAAV,GAA2BqH,yBAAyB,CAACuB,UAArD;AACA,YAAM,KAAK/I,KAAL,CAAWtB,UAAX,CAAsB,iBAAtB,EAAyCyB,UAAzC,CAAN;AAEAT,MAAAA,OAAO,CAACoF,IAAR,CAAa,aAAb;AACD,KAtnCkB;;AAAA,SAunCnBqH,yBAvnCmB,GAunCS,MAAM;AAChC,UAAI;AAAE3E,QAAAA;AAAF,UAAgC,KAAKxH,KAAzC;AACA,UAAIqL,UAAU,GAAG7D,yBAAyB,CAACS,YAA3C;;AACA,UAAIoD,UAAU,GAAG,CAAjB,EAAoB;AAClB,aAAK5G,QAAL,CAAc6G,SAAS,KAAK;AAC1BnI,UAAAA,0BAA0B,EAAE,CAACmI,SAAS,CAACnI;AADb,SAAL,CAAvB;AAGD,OAJD,MAIO;AACL3D,QAAAA,KAAK,CAAC;AAAE6H,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD,CAAL;AACD;AACF,KAjoCkB;;AAAA,SAkoCnB8E,sBAloCmB,GAkoCM,MAAM;AAC7B,UAAI;AAAE5E,QAAAA;AAAF,UAAgC,KAAKxH,KAAzC;AACA,UAAIqL,UAAU,GAAG7D,yBAAyB,CAACS,YAA3C;;AACA,UAAIoD,UAAU,GAAG,CAAjB,EAAoB;AAClB,aAAK5G,QAAL,CAAc6G,SAAS,KAAK;AAC1BpI,UAAAA,uBAAuB,EAAE,CAACoI,SAAS,CAACpI;AADV,SAAL,CAAvB;AAGD,OAJD,MAIO;AACL1D,QAAAA,KAAK,CAAC;AAAE6H,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD,CAAL;AACD;AACF,KA5oCkB;;AAEjB,SAAKjE,KAAL,GAAapF,KAAK,CAACoO,SAAN,EAAb;AACD;;AA8EDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKrK,MAAL,CAAY,EAAZ;AACA,SAAKiD,kBAAL;AACA,QAAI;AAAE1D,MAAAA,YAAF;AAAgBJ,MAAAA,WAAhB;AAA6BF,MAAAA,YAA7B;AAA2Cf,MAAAA,UAA3C;AAAuD4B,MAAAA;AAAvD,QACF,KAAK9B,KADP;AAGA,QAAI;AAAEsM,MAAAA,eAAF;AAAmBP,MAAAA;AAAnB,QAAuC,KAAKhM,KAAhD;AACAqE,IAAAA,OAAO,CAACC,GAAR,CAAY0H,eAAZ,EAA6B,uBAA7B;;AAEA,QAAIO,eAAe,CAACnM,OAApB,EAA6B;AAC3B,WAAKqE,QAAL,CAAc;AAAEjC,QAAAA,aAAa,EAAE+J,eAAe,CAACnM;AAAjC,OAAd;AACA,WAAK2D,sBAAL,CAA4BwI,eAAe,CAACnM,OAA5C,EAAqD,KAArD;AACD,KAHD,MAGO;AACL,UAAI;AAAEc,QAAAA;AAAF,UAAmB,KAAKjB,KAA5B;AACAiB,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAAhB,IAAgCqL,eAAe,GAC3CA,eAAe,CAAC9I,IAD2B,GAE3C,EAFJ;AAGAvC,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,QAAhB,IAA4BqL,eAAe,GACvCA,eAAe,CAACC,QADuB,GAEvC,CAFJ;AAGA,WAAK/H,QAAL,CAAc;AACZvD,QAAAA;AADY,OAAd;AAGA,WAAKlB,KAAL,CAAWtB,UAAX,CAAsB,eAAtB,EAAuCwC,YAAvC;AACD;;AACD,SAAKlB,KAAL,CAAWf,YAAX,CAAyB,WAAzB,EAAqCgF,IAArC,CAA0CC,GAAG,IAAI;AAC/C,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmBF,GAAvB;;AACA,UAAIC,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAK,IAAIqB,KAAT,IAAkBpB,IAAlB,EAAwB;AACtB5C,UAAAA,YAAY,CAACsD,IAAb,CAAkB;AAAEU,YAAAA,KAAK,EAAEA,KAAK,CAAC4D,EAAf;AAAmBhH,YAAAA,KAAK,EAAEoD,KAAK,CAACiH;AAAhC,WAAlB;AACD;;AACD,aAAKhI,QAAL,CAAc;AAAEjD,UAAAA;AAAF,SAAd;AACD;AACF,KARD;AASA,SAAKxB,KAAL,CACGf,YADH,CAEK,8BACCsN,eAAe,CAACG,QACjB,SAAQtN,UAAU,CAAC,IAAIyE,IAAJ,EAAD,CAAa,EAJpC,EAMGI,IANH,CAMQC,GAAG,IAAI;AACX,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmBF,GAAvB;;AACA,UAAIC,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAK,IAAIqB,KAAT,IAAkBpB,IAAlB,EAAwB;AACtBhD,UAAAA,WAAW,CAAC0D,IAAZ,CAAiB;AAAEU,YAAAA,KAAK,EAAEA,KAAK,CAAC4D,EAAf;AAAmBhH,YAAAA,KAAK,EAAEoD,KAAK,CAACmH;AAAhC,WAAjB;AACD;;AACD,aAAKlI,QAAL,CAAc;AAAErD,UAAAA;AAAF,SAAd;AACD;AACF,KAdH;AAeA,SAAKpB,KAAL,CAAWf,YAAX,CAAyB,qBAAzB,EAA+CgF,IAA/C,CAAoDC,GAAG,IAAI;AACzD,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmBF,GAAvB;;AACA,UAAIC,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAK,IAAIqB,KAAT,IAAkBpB,IAAlB,EAAwB;AACtBrC,UAAAA,QAAQ,CAAC+C,IAAT,CAAc;AAAEU,YAAAA,KAAK,EAAEA,KAAT;AAAgBpD,YAAAA,KAAK,EAAEoD;AAAvB,WAAd;AACD;;AACD,aAAKf,QAAL,CAAc;AAAE1C,UAAAA;AAAF,SAAd;AACD;AACF,KARD;AASA,SAAKoD,oBAAL;AACD;;AAqEDyH,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,SAAL,GAAiB,IAAI/N,oBAAJ,CAAyB;AACxCgO,MAAAA,OAAO,EAAExF,OAAO,iBACd;AAAM,QAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OADH,CAFsC;AAMxCyF,MAAAA,eAAe,EAAE;AANuB,KAAzB,CAAjB;AAQD;;AAo7BDC,EAAAA,MAAM,GAAG;AACP,QAAI;AACF7L,MAAAA,YADE;AAEFC,MAAAA,WAFE;AAGFC,MAAAA,UAHE;AAIFH,MAAAA,YAJE;AAKFQ,MAAAA,QALE;AAMFJ,MAAAA,IANE;AAOFnB,MAAAA,UAPE;AAQF2B,MAAAA,YARE;AASFC,MAAAA,QATE;AAUFR,MAAAA,WAVE;AAWFI,MAAAA,cAXE;AAYFF,MAAAA,aAAa,GAAG,EAZd;AAaFD,MAAAA,YAbE;AAcFW,MAAAA,mBAdE;AAeFG,MAAAA,IAfE;AAgBFC,MAAAA,iBAhBE;AAiBFC,MAAAA,aAjBE;AAkBFE,MAAAA,gBAlBE;AAmBFC,MAAAA,eAnBE;AAoBFC,MAAAA,aApBE;AAqBFE,MAAAA,kBArBE;AAsBFC,MAAAA,WAtBE;AAuBFC,MAAAA,kBAvBE;AAwBFE,MAAAA,uBAxBE;AAyBFC,MAAAA;AAzBE,QA0BA,KAAKlD,KA1BT;AA2BA,QAAI;AAAEgN,MAAAA,cAAF;AAAkBC,MAAAA,qBAAlB;AAAyC7B,MAAAA,UAAzC;AAAqD8B,MAAAA;AAArD,QAA2D,KAAKnN,KAApE;AACA,QAAI;AAAEoN,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,QAA2BL,cAA/B;AACA,wBACE,0CACGjK,kBAAkB,IAAI,CAAtB,gBACC,oBAAC,eAAD;AACE,MAAA,KAAK,EAAEuK,GAAG,IAAK,KAAKlK,KAAL,GAAakK,GAD9B;AAEE,MAAA,gBAAgB,EAAE,KAAKvN,KAAL,CAAWwN,gBAF/B;AAGE,MAAA,kBAAkB,EAAExK,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMG,IAPN,EAQGA,kBAAkB,GAAG,CAArB,gBACC,oBAAC,eAAD;AACE,MAAA,KAAK,EAAEuK,GAAG,IAAK,KAAKlK,KAAL,GAAakK,GAD9B;AAEE,MAAA,gBAAgB,EAAE,KAAKvN,KAAL,CAAWwN,gBAF/B;AAGE,MAAA,kBAAkB,EAAExK,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMG,IAdN,eAeE;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BmK,CAAC,CAAC,OAAD,CAA7B,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,CAAC,CAAC,KAAD,CAA7B,CAFF,eAGE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,SAAD,CADJ,CAHF,eAOE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,UAAD,CADJ,CAPF,eAUE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,CAAC,CAAC,iBAAD,CAA7B,CAVF,eAWE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEnO,aADP;AAEE,MAAA,GAAG,EAAC,EAFN;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,KAAK,EAAC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,eAmBE;AAAK,MAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGmO,CAAC,CAAC,YAAD,CADJ,CAnBF,eAsBE;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,WAAD,CADJ,CAtBF,CADF,EA2BGjM,YAAY,CAACqF,MAAb,GAAsB,CAAtB,GACCrF,YAAY,CAACuM,GAAb,CAAiB,CAACrG,IAAD,EAAOpF,KAAP,KAAiB;AAChC,0BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,GAAG,EAAEA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGQ,aAAa,gBACZ,oBAAC,gBAAD;AACE,QAAA,SAAS,EAAG,gBADd;AAEE,QAAA,QAAQ,EAAEkL,CAAC,IACT,KAAKhH,cAAL,CAAoBgH,CAApB,EAAuB1L,KAAvB,CAHJ;AAKE,QAAA,KAAK,EAAC,YALR;AAME,QAAA,IAAI,EAAC,YANP;AAOE,QAAA,QAAQ,EAAE,IAPZ;AAQE,QAAA,UAAU,EAAG,OARf;AASE,QAAA,QAAQ,EAAE,IATZ;AAUE,QAAA,QAAQ,EAAE,KAVZ;AAWE,QAAA,WAAW,EAAC,EAXd;AAYE,QAAA,aAAa,EAAE,CAZjB;AAaE,QAAA,KAAK,EAAEoF,IAAI,CAAC/G,UAbd;AAcE,QAAA,QAAQ,EAAE,KAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY,gBAkBZ,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,OADd,CAEE;AAFF;AAGE,QAAA,KAAK,EAAE+G,IAAI,CAAC/G,UAHd;AAIE,QAAA,IAAI,EAAC,YAJP;AAKE,QAAA,QAAQ,EAAE,MAAM,CAAE,CALpB;AAME,QAAA,SAAS,EAAC,mBANZ;AAOE,QAAA,QAAQ,EAAE,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,CADF,eA+BE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,KADd,CAEE;AAFF;AAGE,QAAA,KAAK,EAAE+G,IAAI,CAAC9G,QAHd;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,QAAQ,EAAE,MAAM,CAAE,CALpB;AAME,QAAA,SAAS,EAAC,mBANZ;AAOE,QAAA,QAAQ,EAAE,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA/BF,eA0CE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGyC,WAAW,IACZA,WAAW,CAAC4K,WADX,IAED5K,WAAW,CAAC6K,YAFX,gBAGC,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,SADd,CAEE;AAFF;AAGE,QAAA,KAAK,EAAExG,IAAI,CAACzG,aAHd;AAIE,QAAA,IAAI,EAAC,eAJP;AAKE,QAAA,OAAO,EAAE,MACP,KAAK8D,QAAL,CAAc;AACZlD,UAAAA,WAAW,EAAE,IADD;AAEZS,UAAAA,KAAK,EAAEA;AAFK,SAAd,CANJ;AAWE,QAAA,QAAQ,EAAE0L,CAAC,IAAI,KAAKtH,YAAL,CAAkBsH,CAAlB,EAAqB1L,KAArB,CAXjB;AAYE,QAAA,SAAS,EAAC,wBAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,GAiBG,IAnBN,EAoBGe,WAAW,IACZA,WAAW,CAAC4K,WADX,IAED,CAAC5K,WAAW,CAAC6K,YAFZ,gBAGC,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,SADd,CAEE;AAFF;AAGE,QAAA,KAAK,EAAExG,IAAI,CAACzG,aAHd;AAIE,QAAA,IAAI,EAAC,eAJP;AAKE,QAAA,OAAO,EAAE,MACP,KAAK8D,QAAL,CAAc;AACZlD,UAAAA,WAAW,EAAE,IADD;AAEZS,UAAAA,KAAK,EAAEA;AAFK,SAAd,CANJ;AAWE,QAAA,QAAQ,EAAE,MAAM,CAAE,CAXpB;AAYE,QAAA,SAAS,EAAC,wBAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,GAiBG,IArCN,EAsCGe,WAAW,IACZ,CAACA,WAAW,CAAC4K,WADZ,IAED5K,WAAW,CAAC6K,YAFX,gBAGC,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,SADd,CAEE;AAFF;AAGE,QAAA,KAAK,EAAExG,IAAI,CAACzG,aAHd;AAIE,QAAA,IAAI,EAAC,eAJP;AAKE,QAAA,OAAO,EAAE,MAAM,CAAE,CALnB;AAME,QAAA,QAAQ,EAAE+M,CAAC,IAAI,KAAKtH,YAAL,CAAkBsH,CAAlB,EAAqB1L,KAArB,CANjB;AAOE,QAAA,SAAS,EAAC,wBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,GAYG,IAlDN,EAmDGe,WAAW,IACZ,CAACA,WAAW,CAAC4K,WADZ,IAED,CAAC5K,WAAW,CAAC6K,YAFZ,gBAGC,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,SADd,CAEE;AAFF;AAGE,QAAA,KAAK,EAAExG,IAAI,CAACzG,aAHd;AAIE,QAAA,IAAI,EAAC,eAJP;AAKE,QAAA,OAAO,EAAE,MAAM,CAAE,CALnB;AAME,QAAA,QAAQ,EAAE,MAAM,CAAE,CANpB;AAOE,QAAA,SAAS,EAAC,wBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,GAYG,IA/DN,CA1CF,eA2GE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD,CACE;AADF;AAEE,QAAA,OAAO,EAAEoB,QAFX;AAGE,QAAA,KAAK,EAAEqF,IAAI,CAAC5G,YAHd;AAIE,QAAA,IAAI,EAAC,cAJP;AAKE,QAAA,QAAQ,EAAEkN,CAAC,IAAI,KAAKtH,YAAL,CAAkBsH,CAAlB,EAAqB1L,KAArB,CALjB;AAME,QAAA,SAAS,EAAC,mBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA3GF,eAqHE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD,CACE;AADF;AAEE,QAAA,OAAO,EAAEZ,WAFX;AAGE,QAAA,KAAK,EAAEgG,IAAI,CAAC3G,MAHd;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,QAAQ,EAAEiN,CAAC,IAAI,KAAKtH,YAAL,CAAkBsH,CAAlB,EAAqB1L,KAArB,CALjB;AAME,QAAA,SAAS,EAAC,mBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CArHF,eA+HE;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGoF,IAAI,CAAC1G,gBAAL,gBACC,oBAAC,cAAD;AACE,QAAA,QAAQ,EAAEgN,CAAC,IACT,KAAKnC,cAAL,CAAoBmC,CAApB,EAAuB1L,KAAvB,CAFJ;AAIE,QAAA,KAAK,EAAEoF,IAAI,CAAC1G,gBAJd;AAKE,QAAA,IAAI,EAAC,kBALP;AAME,QAAA,OAAO,EAAE,IANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,gBAUC,oBAAC,cAAD;AACE,QAAA,QAAQ,EAAEgN,CAAC,IACT,KAAKnC,cAAL,CAAoBmC,CAApB,EAAuB1L,KAAvB,CAFJ;AAIE,QAAA,KAAK,EAAEoF,IAAI,CAAC1G,gBAJd;AAKE,QAAA,IAAI,EAAC,kBALP;AAME,QAAA,OAAO,EAAE,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CA/HF,eAoJE;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,KAAK,EAAE0G,IAAI,CAACvG,UAAL,GAAkBuG,IAAI,CAACvG,UAAvB,GAAoC,EAH7C;AAIE,QAAA,QAAQ,EAAE6M,CAAC,IAAI,KAAKtH,YAAL,CAAkBsH,CAAlB,EAAqB1L,KAArB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CApJF,eA4JE;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAEoF,IAAI,CAACtG,SAAL,GAAiBsG,IAAI,CAACtG,SAAtB,GAAkC,EAH3C;AAIE,QAAA,QAAQ,EAAE4M,CAAC,IAAI,KAAKtH,YAAL,CAAkBsH,CAAlB,EAAqB1L,KAArB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA5JF,EAoKGd,YAAY,CAACqF,MAAb,KAAwBvE,KAAK,GAAG,CAAhC,gBACC;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKgJ,kBAAL,CAAwBhJ,KAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AACE,QAAA,KAAK,EAAC,IADR;AAEE,QAAA,MAAM,EAAC,IAFT;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAC,4BALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AACE,QAAA,KAAK,EAAC,IADR;AAEE,QAAA,MAAM,EAAC,IAFT;AAGE,QAAA,IAAI,EAAC,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAYE;AACE,QAAA,CAAC,EAAC,UADJ;AAEE,QAAA,MAAM,EAAC,SAFT;AAGE,QAAA,aAAa,EAAC,OAHhB;AAIE,QAAA,cAAc,EAAC,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,eAkBE;AACE,QAAA,CAAC,EAAC,UADJ;AAEE,QAAA,MAAM,EAAC,SAFT;AAGE,QAAA,aAAa,EAAC,OAHhB;AAIE,QAAA,cAAc,EAAC,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,CAJF,CADD,gBAgCC,0CACGQ,aAAa,IAAI4E,IAAI,CAAChH,OAAtB,GAAgC,IAAhC,gBACC;AACE,QAAA,KAAK,EAAC,IADR;AAEE,QAAA,MAAM,EAAC,IAFT;AAGE,QAAA,OAAO,EAAE,MACP,KAAK8K,eAAL,CAAqBlJ,KAArB,CAJJ;AAME,QAAA,SAAS,EAAC,MANZ;AAOE,QAAA,GAAG,EAAEjD,SAPP;AAQE,QAAA,GAAG,EAAC,EARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CApMJ,CADF;AAsND,KAvND,CADD,gBA0NC;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGoO,CAAC,CAAC,SAAD,CADJ,CArPJ,eAyPE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,iBADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAIE,MAAA,KAAK,EAAC,mBAJR;AAKE,MAAA,OAAO,EAAE,KAAK/B,qBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,WADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,gBAHZ;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,OAAO,EAAE,KAAKe,yBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eAeE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,WADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,OAAO,EAAE,KAAKC,sBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF,CADF,eA2BE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG5J,aAAa,gBACZ,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,WADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,OAAO,EAAE,MACP9C,OAAO,CAACoF,IAAR,CACG,uBAAsBuG,UAAW,UADpC,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,GAYV,IAbN,EAcG7I,aAAa,gBACZ,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,WADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,KAAK,EAAC,YAJR;AAKE,MAAA,OAAO,EAAE,KAAK0J,cALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,GAQV,IAtBN,EAwBG,CAAC1J,aAAD,IACD,KAAKxC,KAAL,CAAWgM,eADV,IAED,KAAKhM,KAAL,CAAWgM,eAAX,CAA2BxJ,aAA3B,GAA2C,CAF1C,gBAGC,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,gBADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,eAHZ;AAIE,MAAA,KAAK,EAAC,mBAJR;AAKE,MAAA,OAAO,EAAE,KAAKyJ,sBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,GAUG,IAlCN,EAmCGzJ,aAAa,gBACZ,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,WADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,OAAO,EAAE,KAAKuJ,qBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,GAQV,IA3CN,CADF,CA3BF,eA2EE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,gBADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,eAHZ;AAIE,MAAA,KAAK,EAAC,QAJR;AAKE,MAAA,OAAO,EAAE,KAAKpD,iBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQGnG,aAAa,gBACZ,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,kBADf;AAEE,MAAA,MAAM,EAAE,KAFV;AAGE,MAAA,SAAS,EAAC,yBAHZ;AAIE,MAAA,KAAK,EAAC,gBAJR;AAKE,MAAA,OAAO,EAAE,KAAK+E,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,gBASZ,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,kBADf;AAEE,MAAA,MAAM,EAAE,KAFV;AAGE,MAAA,SAAS,EAAC,yBAHZ;AAIE,MAAA,KAAK,EAAC,iBAJR;AAKE,MAAA,OAAO,EAAE,KAAK+B,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADF,CA3EF,CADF,CAzPF,EAmWG1G,aAAa,IAAIA,aAAa,CAAC2D,MAAd,GAAuB,CAAxC,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AACE,MAAA,KAAK,EAAG,KADV;AAEE,MAAA,QAAQ,EAAEmH,CAAC,IACT,KAAK5B,gCAAL,CAAsC4B,CAAtC,CAHJ;AAKE,MAAA,KAAK,EAAE5K,kBALT;AAME,MAAA,IAAI,EAAC,oBANP;AAOE,MAAA,OAAO,EAAEA,kBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAYE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BqK,CAAC,CAAC,MAAD,CAA7B,CAZF,eAaE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,CAAC,CAAC,OAAD,CAA7B,CAbF,eAcE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,CAAC,CAAC,KAAD,CAA7B,CAdF,eAeE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,SAAD,CADJ,CAfF,eAmBE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,UAAD,CADJ,CAnBF,eAsBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,iBAAD,CADJ,CAtBF,eAyBE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEnO,aADP;AAEE,MAAA,GAAG,EAAC,EAFN;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,KAAK,EAAC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzBF,CALF,EAuCG4D,aAAa,IAAIA,aAAa,CAAC2D,MAAd,GAAuB,CAAxC,GACC3D,aAAa,CAAC6K,GAAd,CAAkB,CAACrG,IAAD,EAAOpF,KAAP,KAAiB;AACjC,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAEA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AACE,QAAA,QAAQ,EAAE0L,CAAC,IACT,KAAKlC,2BAAL,CACEkC,CADF,EAEEtG,IAFF,CAFJ;AAOE,QAAA,KAAK,EAAEA,IAAI,CAAC+B,QAPd;AAQE,QAAA,IAAI,EAAC,eARP;AASE,QAAA,OAAO,EAAE/B,IAAI,CAAC+B,QAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAcE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B/B,IAAI,CAACT,IAAjC,CAdF,eAeE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGS,IAAI,CAAC/G,UADR,CAfF,eAkBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG+G,IAAI,CAAC9G,QADR,CAlBF,eAqBE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG8G,IAAI,CAACnC,SADR,CArBF,eAyBE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGmC,IAAI,CAAC5G,YADR,CAzBF,eA4BE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG4G,IAAI,CAACuF,QADR,CA5BF,eA+BE;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AACE,QAAA,QAAQ,EAAEe,CAAC,IACT,KAAKlC,2BAAL,CACEkC,CADF,EAEEtG,IAFF,CAFJ;AAOE,QAAA,KAAK,EAAEA,IAAI,CAAC1G,gBAPd;AAQE,QAAA,IAAI,EAAC,kBARP;AASE,QAAA,OAAO,EAAE0G,IAAI,CAAC1G,gBAThB;AAUE,QAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA/BF,CADF;AAgDD,KAjDD,CADD,gBAoDC;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGyM,CAAC,CAAC,SAAD,CADJ,CA3FJ,eA+FE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,WADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,KAAK,EAAC,QAJR;AAKE,MAAA,OAAO,EAAE,KAAKxE,iBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnG,aAAa,gBACZ,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,YADf;AAEE,MAAA,MAAM,EAAE,KAFV;AAGE,MAAA,SAAS,EAAC,wBAHZ;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,OAAO,EAAE,KAAKwG,qBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,GAQV,IATN,CAVF,CADF,CADF,CA/FF,CADD,GA2HG,IA9dN,CADF,CADF,CADF,CADF,CADF,CADF,eA4eE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE,sCADb;AAEE,MAAA,KAAK,EAAE;AAAE6E,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAGE,MAAA,KAAK,EAAEtM,WAHT;AAIE,MAAA,WAAW,EAAE,KAAKwI,YAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,OAAO,EAAE,KAAKA,YADhB;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,GAAG,EAAEhL,SAHP;AAIE,MAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAYE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKoO,CAAC,CAAC,kBAAD,CAAN,CADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,UAAD,CADJ,eAEE,oBAAC,YAAD,CACE;AADF;AAEE,MAAA,OAAO,EAAE3L,YAFX;AAGE,MAAA,KAAK,EAAEG,cAAc,CAACC,QAHxB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,QAAQ,EAAE,KAAKsE,qBALjB;AAME,MAAA,SAAS,EAAC,mBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAYE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiH,CAAC,CAAC,SAAD,CADJ,eAEE;AACE;AACA;AACA,MAAA,KAAK,EAAExL,cAAc,CAACE,SAHxB;AAIE,MAAA,IAAI,EAAC,WAJP;AAKE,MAAA,QAAQ,EAAE,KAAKuD,YALjB;AAME,MAAA,SAAS,EAAC,iBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAZF,CADF,CAJF,eA+BE;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,aAAa,EAAEjD,mBADjB;AAEE,MAAA,YAAY,EAAE,KAAK8D,gBAFrB;AAGE,MAAA,QAAQ,EAAE3D,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGb,aAAa,CAAC8E,MAAd,GAAuB,CAAvB,GACC9E,aAAa,CAACgM,GAAd,CAAkB,CAACrG,IAAD,EAAOpF,KAAP,KAAiB;AACjC,0BACE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKqI,qBAAL,CAA2BjD,IAA3B,CAFjB;AAGE,QAAA,GAAG,EAAEpF,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGoF,IAAI,CAAC0G,UADR,CAFF,CALF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG1G,IAAI,CAAC8C,SADR,CAFF,CAXF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG9C,IAAI,CAAC5G,YADR,CAFF,CAjBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG4G,IAAI,CAAC2G,UADR,CAFF,CAvBF,CADF;AAgCD,KAjCD,CADD,gBAoCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,CAAC,CAAC,mBAAD,CADJ,CADF,CAzCJ,CADF,CA/BF,eAkFE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,OADf;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,SAAS,EAAC,aAHZ;AAIE,MAAA,KAAK,EAAC,QAJR;AAKE,MAAA,OAAO,EAAE,KAAKpD,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlFF,CAZF,CA5eF,eAslBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxH,iBAAiB,gBAChB,oBAAC,gBAAD;AACE,MAAA,iBAAiB,EAAEA,iBADrB;AAEE,MAAA,qBAAqB,EAAE,KAAK6I,qBAF9B;AAGE,MAAA,mBAAmB,EAAE,KAAKnB,mBAH5B;AAIE,MAAA,cAAc,EACZ,KAAKjK,KAAL,CAAWwH,yBAAX,CAAqCS,YALzC;AAOE,MAAA,QAAQ,EAAE,KAAKjI,KAAL,CAAWwH,yBAAX,CAAqCsB,QAPjD;AAQE,MAAA,SAAS,EAAE,KAAK9I,KAAL,CAAWwH,yBAAX,CAAqCwG,SARlD;AASE,MAAA,UAAU,EAAE,KAAKhO,KAAL,CAAWwH,yBAAX,CAAqCuB,UATnD;AAUE,MAAA,cAAc,EACZ,KAAK/I,KAAL,CAAWwH,yBAAX,CAAqCyG,WAXzC;AAaE,MAAA,kBAAkB,EAAE,KAbtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB,GAiBhB,EAlBJ,CAtlBF,EA2mBG5J,OAAO,CAACC,GAAR,CACC,KAAKtE,KAAL,CAAWwH,yBADZ,EAEC,2BAFD,CA3mBH,EA+mBGtE,uBAAuB,gBACtB,oBAAC,gBAAD;AACE,MAAA,uBAAuB,EAAEA,uBAD3B;AAEE,MAAA,sBAAsB,EAAE,KAAKkJ,sBAF/B;AAGE,MAAA,cAAc,EAAE,KAAKpM,KAAL,CAAWwH,yBAAX,CAAqCS,YAHvD;AAIE,MAAA,QAAQ,EAAE,KAAKjI,KAAL,CAAWwH,yBAAX,CAAqCsB,QAJjD;AAKE,MAAA,SAAS,EAAE,KAAK9I,KAAL,CAAWwH,yBAAX,CAAqCwG,SALlD;AAME,MAAA,UAAU,EAAE,KAAKhO,KAAL,CAAWwH,yBAAX,CAAqCuB,UANnD;AAOE,MAAA,cAAc,EAAE,KAAK/I,KAAL,CAAWwH,yBAAX,CAAqCyG,WAPvD;AAQE,MAAA,kBAAkB,EAAE,IARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB,GAYtB,EA3nBJ,EA6nBG9K,0BAA0B,gBACzB,oBAAC,mBAAD;AACE,MAAA,0BAA0B,EAAEA,0BAD9B;AAEE,MAAA,yBAAyB,EAAE,KAAKgJ,yBAFlC;AAGE,MAAA,cAAc,EAAE,KAAKnM,KAAL,CAAWwH,yBAAX,CAAqCS,YAHvD;AAIE,MAAA,QAAQ,EAAE,KAAKjI,KAAL,CAAWwH,yBAAX,CAAqCsB,QAJjD;AAKE,MAAA,SAAS,EAAE,KAAK9I,KAAL,CAAWwH,yBAAX,CAAqCwG,SALlD;AAME,MAAA,UAAU,EAAE,KAAKhO,KAAL,CAAWwH,yBAAX,CAAqCuB,UANnD;AAOE,MAAA,cAAc,EAAE,KAAK/I,KAAL,CAAWwH,yBAAX,CAAqCyG,WAPvD;AAQE,MAAA,kBAAkB,EAAE,KARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB,GAYzB,EAzoBJ,CAfF,CADF;AA8pBD;;AA30DoD;;AA80DvD,MAAMC,eAAe,GAAGjO,KAAK,KAAK;AAChCgN,EAAAA,cAAc,EAAEhN,KAAK,CAACsE,WAAN,CAAkB0I,cADF;AAEhCkB,EAAAA,iBAAiB,EAAElO,KAAK,CAACsE,WAAN,CAAkB4J,iBAFL;AAGhCjB,EAAAA,qBAAqB,EAAEjN,KAAK,CAACsE,WAAN,CAAkB2I,qBAHT;AAIhCX,EAAAA,eAAe,EAAEtM,KAAK,CAACsE,WAAN,CAAkBgI,eAJH;AAKhC/E,EAAAA,yBAAyB,EAAEvH,KAAK,CAACsE,WAAN,CAAkBiD,yBALb;AAMhCL,EAAAA,wBAAwB,EAAElH,KAAK,CAACsE,WAAN,CAAkB4C,wBANZ;AAOhC6E,EAAAA,eAAe,EAAE/L,KAAK,CAACsE,WAAN,CAAkByH;AAPH,CAAL,CAA7B;;AAUA,MAAMoC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAOxP,kBAAkB,CACvB;AACEH,IAAAA,UADF;AAEEC,IAAAA,wBAFF;AAGEM,IAAAA,YAHF;AAIEC,IAAAA,eAJF;AAKEC,IAAAA;AALF,GADuB,EAQvBkP,QARuB,CAAzB;AAUD,CAXD;;AAaA,OAAO,MAAMC,kBAAkB,GAAGzO,eAAe,GAC/CjB,OAAO,CAACsP,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtO,uBAA7C,CAD+C,CAA1C","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalSelect,\r\n  NormalButton,\r\n  NormalModal,\r\n  NormalInput,\r\n  NormalDateTime,\r\n  NormalCheckbox,\r\n  NormalTimePicker,\r\n} from \"component/common\";\r\nimport \"./style.scss\";\r\nimport {\r\n  updateForm,\r\n  getSelectedTreatmentList,\r\n} from \"redux/actions/appointment\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport req_therapist from \"assets/images/app-icons/1.png\";\r\nimport {\r\n  getCommonApi,\r\n  commonCreateApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport _ from \"lodash\";\r\nimport { TableWrapper } from \"component/common\";\r\nimport { TreatmentPackage } from \"./modal/index\";\r\nimport { Toast } from \"service/toast\";\r\nimport { AppointmentForm } from \"./AppointmentForm\";\r\nimport { history } from \"helpers\";\r\nimport { TreatmentHistory } from \"component/Admin/NewAppointment/NewListAppointment/modal/TreatmentHistory\";\r\nimport { UpcomingAppointment } from \"component/Admin/NewAppointment/NewListAppointment/modal/UpcomingAppointment\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class NewSelectTreatmentClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.child = React.createRef();\r\n  }\r\n  state = {\r\n    treatmentDetail: [],\r\n    formFields: {\r\n      appt_id: \"\",\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      Item_Codeid: null,\r\n      add_duration: \"\",\r\n      emp_no: 0,\r\n      requesttherapist: false,\r\n      Item_CodeName: \"\",\r\n      edit_remark: \"\",\r\n      recur_days: null,\r\n      recur_qty: null,\r\n      item_text: null,\r\n      checktype: \"\",\r\n      treat_parentcode: null,\r\n    },\r\n    selectedList: [\r\n      {\r\n        appt_id: \"\",\r\n        start_time: \"\",\r\n        end_time: \"\",\r\n        Item_Codeid: null,\r\n        add_duration: \"\",\r\n        emp_no: 0,\r\n        requesttherapist: false,\r\n        Item_CodeName: \"\",\r\n        edit_remark: \"\",\r\n        recur_days: null,\r\n        recur_qty: null,\r\n        item_text: null,\r\n        checktype: \"\",\r\n        treat_parentcode: null,\r\n      },\r\n    ],\r\n    outletOption: [],\r\n    staffOption: [],\r\n    roomOption: [],\r\n    list: [],\r\n    isOpenModal: false,\r\n    categoryList: [],\r\n    treatmentList: [],\r\n    siteList: [],\r\n    treatmentField: {\r\n      category: \"\",\r\n      treatment: \"\",\r\n    },\r\n    timeDropdown: [],\r\n    duration: [],\r\n    index: null,\r\n    search: \"\",\r\n    selectTreatmentId: \"\",\r\n    treatmentListHeader: [\r\n      { label: \"Category\", className: \"w-50\" },\r\n      { label: \"Service\", className: \"w-75\" },\r\n      { label: \"Duration\", className: \"w-25\" },\r\n      { label: \"price\", className: \"w-50\" },\r\n    ],\r\n    meta: {},\r\n    isTreatementModal: false,\r\n    appointmentId: null,\r\n    PackageIndex: 0,\r\n    selectedRec_days: null,\r\n    selectedRec_qty: null,\r\n    recurringList: [],\r\n    recurringSelectedItems: [],\r\n    recurringSelectAll: false,\r\n    settingData: {},\r\n    PasteAppointmentId: 0,\r\n    InitAppointmentStatus: \"\",\r\n    isTreatmentHistoryModal: false,\r\n    isUpcomingAppointmentModal: false,\r\n  };\r\n  showErrorMessage = () => {\r\n    this.child.onFocus();\r\n  };\r\n  componentDidMount() {\r\n    this.search({});\r\n    this.handleItemSettings();\r\n    let { categoryList, staffOption, selectedList, formFields, duration } =\r\n      this.state;\r\n\r\n    let { basicApptDetail, AppointmentCopy } = this.props;\r\n    console.log(AppointmentCopy, \"Basic app detail data\");\r\n\r\n    if (basicApptDetail.appt_id) {\r\n      this.setState({ appointmentId: basicApptDetail.appt_id });\r\n      this.handleRenderApptDetail(basicApptDetail.appt_id, false);\r\n    } else {\r\n      let { selectedList } = this.state;\r\n      selectedList[0][\"start_time\"] = basicApptDetail\r\n        ? basicApptDetail.time\r\n        : \"\";\r\n      selectedList[0][\"emp_no\"] = basicApptDetail\r\n        ? basicApptDetail.staff_id\r\n        : 0;\r\n      this.setState({\r\n        selectedList,\r\n      });\r\n      this.props.updateForm(\"treatmentList\", selectedList);\r\n    }\r\n    this.props.getCommonApi(`itemdept/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          categoryList.push({ value: value.id, label: value.itm_desc });\r\n        }\r\n        this.setState({ categoryList });\r\n      }\r\n    });\r\n    this.props\r\n      .getCommonApi(\r\n        `appointment/Staffs/?Outlet=${\r\n          basicApptDetail.branchId\r\n        }&date=${dateFormat(new Date())}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          for (let value of data) {\r\n            staffOption.push({ value: value.id, label: value.emp_name });\r\n          }\r\n          this.setState({ staffOption });\r\n        }\r\n      });\r\n    this.props.getCommonApi(`treatment/Duration/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          duration.push({ value: value, label: value });\r\n        }\r\n        this.setState({ duration });\r\n      }\r\n    });\r\n    this.getStaffAvailability();\r\n  }\r\n  timeToDateFormat = TimeValue => {\r\n    let time = String(TimeValue).split(\":\");\r\n    let newTime = new Date(new Date().setHours(time[0], time[1], 0, 0));\r\n    return newTime;\r\n  };\r\n  handleRenderApptDetail = async (appt_id, copy) => {\r\n    let { selectedList, InitAppointmentStatus } = this.state;\r\n\r\n    this.props.getCommonApi(`appointmentedit/${appt_id}/`).then(async key => {\r\n      let { status, data } = key;\r\n      console.log(data, \"renderappointmentdetail\");\r\n      if (status === 200) {\r\n        if (data.treatment) {\r\n          InitAppointmentStatus = data.appointment.appt_status;\r\n          selectedList = [];\r\n          await this.setState({\r\n            selectedList: selectedList,\r\n            InitAppointmentStatus,\r\n          });\r\n          this.props.updateForm(\"treatmentList\", selectedList);\r\n          for (let treat of data.treatment) {\r\n            let startTime = \"\";\r\n            let endTime = \"\";\r\n            let apptid = null;\r\n            if (copy) {\r\n              startTime = treat.start_time;\r\n              endTime = treat.end_time;\r\n              apptid = null;\r\n            } else {\r\n              startTime = this.timeToDateFormat(treat.start_time);\r\n              endTime = treat.end_time;\r\n              apptid = treat.appt_id;\r\n            }\r\n            selectedList.push({\r\n              start_time: startTime,\r\n              end_time: endTime,\r\n              emp_no: treat.emp_id,\r\n              appt_id: apptid,\r\n              Item_Codeid: treat.item_id,\r\n              Item_CodeName: treat.item_name,\r\n              add_duration: treat.add_duration,\r\n              requesttherapist: treat.requesttherapist,\r\n              recur_days: treat.recur_days,\r\n              recur_qty: treat.recur_qty,\r\n              item_text: treat.item_name,\r\n              checktype: treat.checktype,\r\n              treat_parentcode: treat.treat_parentcode,\r\n            });\r\n            this.setState({\r\n              selectedList,\r\n            });\r\n          }\r\n          this.props.updateForm(\"treatmentList\", selectedList);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleItemSettings = () => {\r\n    let { settingData } = this.state;\r\n    this.props.getCommonApi(`userlist/`).then(key => {\r\n      let { status, data } = key;\r\n      console.log(key, \"settingsData appointmentCreate\");\r\n      if (status === 200) {\r\n        settingData = data;\r\n        this.setState({ settingData });\r\n      }\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n  }\r\n\r\n  getStaffAvailability = () => {\r\n    this.props\r\n      .getCommonApi(\r\n        `staffsavailable/?Appt_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          // for (let value of data) {\r\n          //     staffList.push({ value: value.id, label: value.emp_name })\r\n          // }\r\n          this.setState({ list: data });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleSearch = event => {\r\n    event.persist();\r\n    console.log(event.target.value, event.target, event, \"dfhdfjghkjfghj\");\r\n    let { treatmentField } = this.state;\r\n    treatmentField[\"treatment\"] = event.target.value;\r\n    this.setState({ search: event.target.value, treatmentField });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(() => {\r\n        let searchString = event.target.value;\r\n        let data = { search: searchString };\r\n        // this.queryHandler(data)\r\n        this.search(data);\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  search = data => {\r\n    let { page = 1, limit = 10, search = \"\" } = data;\r\n    let { selectTreatmentId } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(res => {\r\n        console.log(res, \"treatmentList treatment_parentcode\");\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            treatmentList: res.data.dataList,\r\n            meta: res.data.meta.pagination,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handlePagination = page => {\r\n    this.search(page);\r\n  };\r\n\r\n  handleChangeTreatment = async ({ target: { value, name } }) => {\r\n    let { treatmentField, search, selectTreatmentId } = this.state;\r\n    console.log(\"uihwkjrwkej\", name, value);\r\n    treatmentField[name] = value;\r\n    if (name === \"category\") {\r\n      selectTreatmentId = value;\r\n    } else if (name === \"treatment\") {\r\n      search = value;\r\n    }\r\n    await this.setState({\r\n      treatmentField,\r\n      selectTreatmentId,\r\n      search,\r\n    });\r\n\r\n    let page = 1,\r\n      limit = 10;\r\n    this.props\r\n      .getCommonApi(\r\n        `stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            treatmentList: res.data.dataList,\r\n            meta: res.data.meta.pagination,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }, index) => {\r\n    let { selectedList, appointmentId } = this.state;\r\n\r\n    if (name === \"add_duration\") {\r\n      if (appointmentId) {\r\n        selectedList[index][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(selectedList[index][\"start_time\"]),\r\n          value ? value : \"00:00\"\r\n        );\r\n      } else {\r\n        selectedList[index][\"end_time\"] = this.addTimes(\r\n          selectedList[index][\"start_time\"],\r\n          value ? value : \"00:00\"\r\n        );\r\n      }\r\n      selectedList[index][\"add_duration\"] = value;\r\n      if (selectedList.length - 1 > index) {\r\n        let endTime = \"\";\r\n        if (appointmentId) {\r\n          endTime = this.timeToDateFormat(selectedList[index][\"end_time\"]);\r\n        } else {\r\n          endTime = selectedList[index][\"end_time\"];\r\n        }\r\n        selectedList[index + 1][\"start_time\"] = endTime;\r\n        if (selectedList[index + 1][\"add_duration\"] !== \"\") {\r\n          selectedList[index + 1][\"end_time\"] = this.addTimes(\r\n            selectedList[index][\"end_time\"],\r\n            selectedList[index + 1][\"add_duration\"]\r\n          );\r\n        }\r\n      }\r\n    } else if (name === \"Item_CodeName\") {\r\n      selectedList[index][\"Item_Codeid\"] = 6213;\r\n      selectedList[index][\"Item_CodeName\"] = value;\r\n      selectedList[index][\"item_text\"] = value;\r\n      selectedList[index][\"checktype\"] = \"freetext\";\r\n      selectedList[index][\"treat_parentcode\"] = null;\r\n    } else if (name === \"recur_days\" || name === \"recur_qty\") {\r\n      if (value <= 0 || value === \"\") {\r\n        selectedList[index][name] = null;\r\n      } else {\r\n        selectedList[index][name] = Number(value);\r\n      }\r\n    } else {\r\n      selectedList[index][name] = value;\r\n    }\r\n\r\n    await this.setState({\r\n      selectedList,\r\n    });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  handleMultiSelect = data => {\r\n    let { formFields } = this.state;\r\n    let list = [];\r\n    for (let key of data) {\r\n      list.push(key.value);\r\n    }\r\n    formFields[\"emp_no\"] = list;\r\n    this.setState({ formFields });\r\n    console.log(formFields, \"oyokkjk\");\r\n  };\r\n\r\n  // handleDatePick = async (name, value) => {\r\n  //   debugger;\r\n  //   let { formFields, selectedList } = this.state;\r\n  //   let time = this.getHoursFromDate(value);\r\n  //   formFields[\"start_time\"] = time;\r\n  //   selectedList[0][\"start_time\"] = time ? time : formFields[\"start_time\"];\r\n  //   if (time) {\r\n  //     formFields[\"end_time\"] = this.addTimes(\r\n  //       formFields[\"start_time\"],\r\n  //       formFields[\"add_duration\"]\r\n  //     );\r\n  //     selectedList[0][\"end_time\"] = this.addTimes(\r\n  //       selectedList[0][\"start_time\"],\r\n  //       formFields[\"add_duration\"]\r\n  //     );\r\n  //   }\r\n  //   await this.setState({\r\n  //     formFields,\r\n  //     selectedList,\r\n  //   });\r\n  //   await this.props.updateForm(\"treatmentList\", selectedList);\r\n  // };\r\n\r\n  handleDatePick = async ({ target: { value, name } }, index) => {\r\n    let { selectedList, appointmentId } = this.state;\r\n    let time = this.getHoursFromDate(value);\r\n    let duration = \"\";\r\n    if (selectedList[index][\"add_duration\"] !== \"\") {\r\n      duration = selectedList[index][\"add_duration\"];\r\n    } else {\r\n      duration = \"00:00\";\r\n    }\r\n    selectedList[index][\"start_time\"] = value\r\n      ? value\r\n      : this.timeToDateFormat(selectedList[index][\"start_time\"]);\r\n    if (time) {\r\n      selectedList[index][\"end_time\"] = this.addTimes(time, duration);\r\n    }\r\n    if (selectedList.length - 1 > index) {\r\n      let endTime = \"\";\r\n      if (appointmentId) {\r\n        endTime = this.timeToDateFormat(selectedList[index][\"end_time\"]);\r\n      } else {\r\n        endTime = selectedList[index][\"end_time\"];\r\n      }\r\n      selectedList[index + 1][\"start_time\"] = endTime;\r\n      if (selectedList[index + 1][\"add_duration\"] !== \"\") {\r\n        selectedList[index + 1][\"end_time\"] = this.addTimes(\r\n          selectedList[index][\"end_time\"],\r\n          selectedList[index + 1][\"add_duration\"]\r\n        );\r\n      }\r\n    }\r\n    await this.setState({\r\n      selectedList,\r\n    });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  getHoursFromDate = date => {\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let hours = hour > 9 ? hour : \"0\" + hour;\r\n    let minutes = minute > 9 ? minute : \"0\" + minute;\r\n    return hours + \":\" + minutes;\r\n  };\r\n\r\n  stafflistvalidation = appointmentTreatmentList => {\r\n    if (appointmentTreatmentList.length > 0) {\r\n      for (let item of appointmentTreatmentList) {\r\n        if (!item.emp_no || item.emp_no === \"\" || item.emp_no === null) {\r\n          Toast({ type: \"error\", message: \"Please select Staff\" });\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  handleUpdate = () => {\r\n    let { appointmentCustomerDetail, appointmentTreatmentList } = this.props;\r\n    let { appointmentId, InitAppointmentStatus } = this.state;\r\n    let finalTreatment = [];\r\n    for (let TreatmentList of appointmentTreatmentList) {\r\n      finalTreatment.push({\r\n        appt_id: TreatmentList.appt_id,\r\n        start_time: this.getHoursFromDate(TreatmentList.start_time),\r\n        end_time: TreatmentList.end_time,\r\n        add_duration: TreatmentList.add_duration,\r\n        item_id: TreatmentList.Item_Codeid,\r\n        item_text: TreatmentList.item_text,\r\n        emp_id: TreatmentList.emp_no,\r\n        requesttherapist: TreatmentList.requesttherapist,\r\n        recur_qty: Number(\"\"),\r\n        recur_days: \"\",\r\n        checktype: TreatmentList.checktype,\r\n        treat_parentcode: TreatmentList.treat_parentcode,\r\n      });\r\n    }\r\n    console.log(finalTreatment, \"filteredupdateFunctionAppointmentData\");\r\n    let orig_remark = \"\";\r\n    let AppStatus = \"\";\r\n    if (appointmentCustomerDetail.remark_setting) {\r\n      orig_remark = null;\r\n    } else {\r\n      orig_remark = appointmentCustomerDetail.new_remark;\r\n    }\r\n    if (\r\n      String(InitAppointmentStatus).toUpperCase() === \"ARRIVED\" &&\r\n      String(appointmentCustomerDetail.bookingStatus).toUpperCase() ===\r\n        \"ARRIVED\"\r\n    ) {\r\n      AppStatus = null;\r\n    } else {\r\n      AppStatus = appointmentCustomerDetail.bookingStatus;\r\n    }\r\n    if (\r\n      appointmentCustomerDetail.customerName &&\r\n      appointmentCustomerDetail.bookingStatus\r\n    ) {\r\n      if (this.stafflistvalidation(appointmentTreatmentList)) {\r\n        let data = {\r\n          appointment: {\r\n            appt_date: dateFormat(\r\n              new Date(appointmentCustomerDetail.appointmentDate),\r\n              \"yyyy-mm-dd\"\r\n            ),\r\n            appt_status: AppStatus,\r\n            channel_id: Number(appointmentCustomerDetail.Appt_typeid),\r\n            ori_remark: orig_remark,\r\n            edit_remark: appointmentCustomerDetail.edit_remark,\r\n            source_id: Number(appointmentCustomerDetail.Source_Codeid),\r\n            Room_Codeid: Number(appointmentCustomerDetail.Room_Codeid),\r\n            sec_status: appointmentCustomerDetail.sec_status,\r\n            remark_setting: appointmentCustomerDetail.remark_setting,\r\n          },\r\n          treatment: finalTreatment,\r\n        };\r\n\r\n        this.props\r\n          .commonPatchApi(`appointmentedit/${appointmentId}/`, data)\r\n          .then(async res => {\r\n            console.log(res, \"cart check while update booking\");\r\n            if (res.status === 200) {\r\n              this.handleCloseDialog();\r\n              this.handleSaveorUpdate();\r\n            } else if (res.status === 201) {\r\n              let formFields = { custId: 0, custName: \"\", cust_refer: \"\" };\r\n              formFields[\"custId\"] = appointmentCustomerDetail.customerName;\r\n              formFields[\"custName\"] = appointmentCustomerDetail.custName;\r\n              formFields[\"cust_refer\"] = appointmentCustomerDetail.cust_refer;\r\n              await this.props.updateForm(\"basicApptDetail\", formFields);\r\n              this.props\r\n                .getCommonApi(\r\n                  `itemcart/Check/?cart_date=${dateFormat(\r\n                    new Date(),\r\n                    \"yyyy-mm-dd\"\r\n                  )}&cust_noid=${appointmentCustomerDetail.customerName}`\r\n                )\r\n                .then(res => {\r\n                  history.push(\"/admin/cart\");\r\n                });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.showErrorMessage();\r\n    }\r\n  };\r\n\r\n  // handleUpdate = () => {\r\n  //   let { appointmentCustomerDetail, appointmentTreatmentList } = this.props;\r\n  //   let { appointmentId, selectedRec_days, selectedRec_qty } = this.state;\r\n  //   let orig_remark = \"\";\r\n  //   if (appointmentCustomerDetail.remark_setting) {\r\n  //     orig_remark = null;\r\n  //   } else {\r\n  //     orig_remark = appointmentCustomerDetail.new_remark;\r\n  //   }\r\n  //   if (\r\n  //     appointmentCustomerDetail.customerName &&\r\n  //     appointmentCustomerDetail.bookingStatus\r\n  //   ) {\r\n  //     if (this.stafflistvalidation(appointmentTreatmentList)) {\r\n  //       let data = {\r\n  //         appt_date: dateFormat(\r\n  //           new Date(appointmentCustomerDetail.appointmentDate),\r\n  //           \"yyyy-mm-dd\"\r\n  //         ),\r\n  //         Room_Codeid: appointmentCustomerDetail.Room_Codeid,\r\n  //         appt_status: appointmentCustomerDetail.bookingStatus,\r\n  //         sec_status: appointmentCustomerDetail.sec_status,\r\n  //         ori_remark: orig_remark,\r\n  //         edit_remark: appointmentCustomerDetail.edit_remark,\r\n  //         start_time: this.getHoursFromDate(\r\n  //           appointmentTreatmentList[0].start_time\r\n  //         ),\r\n  //         end_time: appointmentTreatmentList[0].end_time,\r\n  //         item_id: appointmentTreatmentList[0].Item_Codeid,\r\n  //         add_duration: appointmentTreatmentList[0].add_duration,\r\n  //         emp_id: appointmentTreatmentList[0].emp_no,\r\n  //         requesttherapist: appointmentTreatmentList[0].requesttherapist,\r\n  //         item_text: appointmentTreatmentList[0].item_text,\r\n  //         recur_days:\r\n  //           selectedRec_days === appointmentTreatmentList[0].recur_days ||\r\n  //           appointmentTreatmentList[0].recur_days === \"\" ||\r\n  //           appointmentTreatmentList[0].recur_days <= 0\r\n  //             ? null\r\n  //             : appointmentTreatmentList[0].recur_days,\r\n  //         recur_qty:\r\n  //           Number(selectedRec_qty) ===\r\n  //             Number(appointmentTreatmentList[0].recur_qty) ||\r\n  //           Number(appointmentTreatmentList[0].recur_qty) === \"\" ||\r\n  //           Number(appointmentTreatmentList[0].recur_qty) <= 0\r\n  //             ? null\r\n  //             : Number(appointmentTreatmentList[0].recur_qty),\r\n  //         checktype: appointmentTreatmentList[0].checktype,\r\n  //         treat_parentcode: appointmentTreatmentList[0].treat_parentcode,\r\n  //         remark_setting: appointmentCustomerDetail.remark_setting,\r\n  //       };\r\n  //       console.log(data, \"UpdatedappointmentTreatmentListWhenupdate\");\r\n\r\n  //       this.props\r\n  //         .commonPatchApi(`appointmentresources/${appointmentId}/`, data)\r\n  //         .then(async res => {\r\n  //           console.log(res, \"cart check while update booking\");\r\n  //           if (res.status === 200) {\r\n  //             this.handleCloseDialog();\r\n  //             this.handleSaveorUpdate();\r\n  //           } else if (res.status === 201) {\r\n  //             // this.handleCloseDialog();\r\n  //             // this.handleSaveorUpdate();\r\n  //             let formFields = { custId: 0, custName: \"\" };\r\n  //             formFields[\"custId\"] = appointmentCustomerDetail.customerName;\r\n  //             formFields[\"custName\"] = appointmentCustomerDetail.custName;\r\n\r\n  //             await this.props.updateForm(\"basicApptDetail\", formFields);\r\n  //             this.props\r\n  //               .getCommonApi(\r\n  //                 `itemcart/Check/?cart_date=${dateFormat(\r\n  //                   new Date(),\r\n  //                   \"yyyy-mm-dd\"\r\n  //                 )}&cust_noid=${appointmentCustomerDetail.customerName}`\r\n  //               )\r\n  //               .then(res => {\r\n  //                 history.push(\"/admin/cart\");\r\n  //               });\r\n  //           }\r\n  //         });\r\n  //     }\r\n  //   } else {\r\n  //     this.showErrorMessage();\r\n  //   }\r\n  // };\r\n  handleRecurringUpdate = () => {\r\n    let { appointmentCustomerDetail, appointmentTreatmentList } = this.props;\r\n    let {\r\n      appointmentId,\r\n      selectedRec_days,\r\n      selectedRec_qty,\r\n      recurringList,\r\n      recurringSelectAll,\r\n    } = this.state;\r\n    let finalRecurring = [];\r\n    for (var recurringItem of recurringList) {\r\n      if (recurringItem.selected) {\r\n        let value = recurringItem.id;\r\n        finalRecurring.push(value);\r\n      }\r\n    }\r\n    console.log(finalRecurring, \"finalrecurringList\");\r\n    if (\r\n      appointmentCustomerDetail.customerName &&\r\n      appointmentCustomerDetail.bookingStatus\r\n    ) {\r\n      if (this.stafflistvalidation(appointmentTreatmentList)) {\r\n        let data = {\r\n          appt_date: dateFormat(\r\n            new Date(appointmentCustomerDetail.appointmentDate),\r\n            \"yyyy-mm-dd\"\r\n          ),\r\n          Room_Codeid: appointmentCustomerDetail.Room_Codeid,\r\n          appt_status: appointmentCustomerDetail.bookingStatus,\r\n          sec_status: appointmentCustomerDetail.sec_status,\r\n          edit_remark: appointmentCustomerDetail.edit_remark,\r\n          start_time: this.getHoursFromDate(\r\n            appointmentTreatmentList[0].start_time\r\n          ),\r\n          end_time: appointmentTreatmentList[0].end_time,\r\n          item_id: appointmentTreatmentList[0].Item_Codeid,\r\n          add_duration: appointmentTreatmentList[0].add_duration,\r\n          emp_id: appointmentTreatmentList[0].emp_no,\r\n          requesttherapist: appointmentTreatmentList[0].requesttherapist,\r\n          item_text: appointmentTreatmentList[0].item_text,\r\n          recur_days:\r\n            selectedRec_days === appointmentTreatmentList[0].recur_days ||\r\n            appointmentTreatmentList[0].recur_days === \"\" ||\r\n            appointmentTreatmentList[0].recur_days <= 0\r\n              ? null\r\n              : appointmentTreatmentList[0].recur_days,\r\n          recur_qty:\r\n            Number(selectedRec_qty) ===\r\n              Number(appointmentTreatmentList[0].recur_qty) ||\r\n            Number(appointmentTreatmentList[0].recur_qty) === \"\" ||\r\n            Number(appointmentTreatmentList[0].recur_qty) <= 0\r\n              ? null\r\n              : Number(appointmentTreatmentList[0].recur_qty),\r\n          recur_ids: finalRecurring,\r\n        };\r\n        console.log(data, \"UpdatedappointmentTreatmentListWhenupdate\");\r\n        if (recurringSelectAll) {\r\n          this.props\r\n            .commonPatchApi(\r\n              `appointmentrecur/${appointmentId}/?type=${`all`} `,\r\n              data\r\n            )\r\n            .then(async res => {\r\n              if (res.status === 200) {\r\n                this.handleCloseDialog();\r\n                this.handleSaveorUpdate();\r\n              }\r\n            });\r\n        } else {\r\n          this.props\r\n            .commonPatchApi(`appointmentrecur/${appointmentId}/`, data)\r\n            .then(async res => {\r\n              console.log(res, \"type all clicked result\");\r\n              if (res.status === 200) {\r\n                this.handleCloseDialog();\r\n                this.handleSaveorUpdate();\r\n              }\r\n            });\r\n        }\r\n      }\r\n    } else {\r\n      this.showErrorMessage();\r\n    }\r\n  };\r\n  handleSubmit = () => {\r\n    // this.props.handleConfirmBooking()\r\n    let { appointmentCustomerDetail, appointmentTreatmentList } = this.props;\r\n    console.log(appointmentCustomerDetail, \"appointmentcustomerdetailwhenSave\");\r\n    console.log(\r\n      appointmentTreatmentList,\r\n      \"savedappointmentTreatmentListWhenSave\"\r\n    );\r\n    if (\r\n      appointmentCustomerDetail.customerName &&\r\n      appointmentCustomerDetail.bookingStatus\r\n    ) {\r\n      if (this.stafflistvalidation(appointmentTreatmentList)) {\r\n        let data = {\r\n          Appointment: {\r\n            appt_date: dateFormat(\r\n              new Date(appointmentCustomerDetail.appointmentDate),\r\n              \"yyyy-mm-dd\"\r\n            ),\r\n            Appt_typeid: appointmentCustomerDetail.Appt_typeid,\r\n            cust_noid: appointmentCustomerDetail.customerName,\r\n            new_remark: appointmentCustomerDetail.new_remark,\r\n            // emp_noid: appointmentCustomerDetail.emp_id,\r\n            Source_Codeid: appointmentCustomerDetail.Source_Codeid,\r\n            Room_Codeid: appointmentCustomerDetail.Room_Codeid,\r\n            appt_status: appointmentCustomerDetail.bookingStatus,\r\n            sec_status: appointmentCustomerDetail.sec_status,\r\n            ItemSite_Codeid: appointmentCustomerDetail.ItemSite_Codeid,\r\n            walkin: appointmentCustomerDetail.walkin,\r\n          },\r\n          Treatment: appointmentTreatmentList,\r\n        };\r\n\r\n        this.props.commonCreateApi(`appointment/`, data).then(async res => {\r\n          if (res.status === 201) {\r\n            this.handleCloseDialog();\r\n            this.handleSaveorUpdate();\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.showErrorMessage();\r\n    }\r\n  };\r\n\r\n  getDateTime = data => {\r\n    let date = new Date(data);\r\n    date = String(date).split(\" \");\r\n    let date1 = date[2] + \"th \" + date[1] + \", \" + date[3];\r\n    let time = date[4].split(\":\");\r\n    let time1 =\r\n      String(Number(time[0]) > 12 ? Number(time[0]) - 12 : time[0]) +\r\n      \":\" +\r\n      time[1] +\r\n      (Number(time[0]) > 12 ? \"PM\" : \"AM\");\r\n    return time1 + \", \" + date1;\r\n  };\r\n\r\n  handleDialog = () => {\r\n    this.setState({ isOpenModal: false, index: null });\r\n  };\r\n\r\n  handleMultipleCustomer = () => {\r\n    this.setState({ isOpenModal: false });\r\n  };\r\n\r\n  handleSelectPackage = async data => {\r\n    let { selectedList, PackageIndex, appointmentId } = this.state;\r\n\r\n    if (PackageIndex === 0 && selectedList[0][\"Item_CodeName\"] === \"\") {\r\n      selectedList[0][\"start_time\"] = selectedList[0][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[0][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(selectedList[0][\"start_time\"]),\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      } else {\r\n        selectedList[0][\"end_time\"] = this.addTimes(\r\n          selectedList[0][\"start_time\"],\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      }\r\n      selectedList[0][\"Item_Codeid\"] = data.id;\r\n      selectedList[0][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[0][\"item_text\"] = null;\r\n      selectedList[0][\"add_duration\"] = data.add_duration;\r\n      selectedList[0][\"checktype\"] = \"package\";\r\n      selectedList[0][\"treat_parentcode\"] = data.treatment_parentcode;\r\n\r\n      await this.setState({\r\n        selectedList,\r\n        PackageIndex: PackageIndex + 1,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else if (selectedList[selectedList.length - 1][\"Item_CodeName\"] === \"\") {\r\n      selectedList[selectedList.length - 1][\"start_time\"] =\r\n        selectedList[selectedList.length - 1][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(\r\n            selectedList[selectedList.length - 1][\"start_time\"]\r\n          ),\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      } else {\r\n        selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(\r\n          selectedList[selectedList.length - 1][\"start_time\"],\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      }\r\n\r\n      selectedList[selectedList.length - 1][\"Item_Codeid\"] = data.id;\r\n      selectedList[selectedList.length - 1][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[selectedList.length - 1][\"item_text\"] = null;\r\n      selectedList[selectedList.length - 1][\"add_duration\"] = data.add_duration;\r\n      selectedList[selectedList.length - 1][\"checktype\"] = \"package\";\r\n      selectedList[selectedList.length - 1][\"treat_parentcode\"] =\r\n        data.treatment_parentcode;\r\n\r\n      await this.setState({\r\n        selectedList,\r\n        PackageIndex: PackageIndex + 1,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else if (\r\n      selectedList[selectedList.length - 1][\"Item_CodeName\"] !== \"\" &&\r\n      appointmentId\r\n    ) {\r\n      selectedList[selectedList.length - 1][\"start_time\"] =\r\n        selectedList[selectedList.length - 1][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(\r\n            selectedList[selectedList.length - 1][\"start_time\"]\r\n          ),\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      } else {\r\n        selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(\r\n          selectedList[selectedList.length - 1][\"start_time\"],\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      }\r\n\r\n      selectedList[selectedList.length - 1][\"Item_Codeid\"] = data.id;\r\n      selectedList[selectedList.length - 1][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[selectedList.length - 1][\"item_text\"] = null;\r\n      selectedList[selectedList.length - 1][\"add_duration\"] = data.add_duration;\r\n      selectedList[selectedList.length - 1][\"checktype\"] = \"package\";\r\n      selectedList[selectedList.length - 1][\"treat_parentcode\"] =\r\n        data.treatment_parentcode;\r\n\r\n      await this.setState({\r\n        selectedList,\r\n        PackageIndex: PackageIndex + 1,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else {\r\n      var listCount = selectedList.length - 1;\r\n      let treatment = {};\r\n      if (appointmentId) {\r\n        treatment[\"start_time\"] = this.timeToDateFormat(\r\n          selectedList[listCount][\"end_time\"]\r\n        );\r\n      } else {\r\n        treatment[\"start_time\"] = selectedList[listCount][\"end_time\"];\r\n      }\r\n      treatment[\"Item_Codeid\"] = data.id;\r\n      treatment[\"Item_CodeName\"] = data.item_desc;\r\n      treatment[\"item_text\"] = null;\r\n      treatment[\"add_duration\"] = data.add_duration;\r\n      treatment[\"checktype\"] = \"package\";\r\n      treatment[\"treat_parentcode\"] = data.treatment_parentcode;\r\n      selectedList.push(treatment);\r\n      await this.setState({\r\n        selectedList,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    }\r\n\r\n    this.setState({ isOpenModal: false });\r\n  };\r\n\r\n  handleSelectTreatment = async data => {\r\n    let { selectedList, index, appointmentId } = this.state;\r\n\r\n    if (index == 0 && selectedList.length == 1) {\r\n      selectedList[0][\"start_time\"] = selectedList[0][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[0][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(selectedList[0][\"start_time\"]),\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      } else {\r\n        selectedList[0][\"end_time\"] = this.addTimes(\r\n          selectedList[0][\"start_time\"],\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      }\r\n      selectedList[0][\"Item_Codeid\"] = data.id;\r\n      selectedList[0][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[0][\"add_duration\"] = data.add_duration;\r\n      selectedList[0][\"checktype\"] = \"service\";\r\n      selectedList[0][\"treat_parentcode\"] = null;\r\n\r\n      await this.setState({\r\n        selectedList,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else {\r\n      selectedList[index][\"start_time\"] = selectedList[index][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[index][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(selectedList[index][\"start_time\"]),\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      } else {\r\n        selectedList[index][\"end_time\"] = this.addTimes(\r\n          selectedList[index][\"start_time\"],\r\n          data.add_duration ? data.add_duration : \"00:00\"\r\n        );\r\n      }\r\n      selectedList[index][\"Item_Codeid\"] = data.id;\r\n      selectedList[index][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[index][\"add_duration\"] = data.add_duration;\r\n      selectedList[index][\"checktype\"] = \"service\";\r\n      selectedList[index][\"treat_parentcode\"] = null;\r\n\r\n      let endTime = \"\";\r\n      if (appointmentId) {\r\n        endTime = this.timeToDateFormat(selectedList[index][\"end_time\"]);\r\n      } else {\r\n        endTime = selectedList[index][\"end_time\"];\r\n      }\r\n      if (selectedList.length - 1 > index) {\r\n        selectedList[index + 1][\"start_time\"] = endTime;\r\n        if (selectedList[index + 1][\"add_duration\"] !== \"\") {\r\n          selectedList[index + 1][\"end_time\"] = this.addTimes(\r\n            selectedList[index][\"end_time\"],\r\n            selectedList[index + 1][\"add_duration\"]\r\n          );\r\n        }\r\n      }\r\n      await this.setState({\r\n        selectedList,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    }\r\n    this.setState({ isOpenModal: false });\r\n  };\r\n\r\n  timeToMins = time => {\r\n    var b = time.split(\":\");\r\n    return b[0] * 60 + +b[1];\r\n  };\r\n\r\n  // Convert minutes to a time in format hh:mm\r\n  // Returned value is in range 00  to 24 hrs\r\n  timeFromMins = mins => {\r\n    function z(n) {\r\n      return (n < 10 ? \"0\" : \"\") + n;\r\n    }\r\n    var h = ((mins / 60) | 0) % 24;\r\n    var m = mins % 60;\r\n    return z(h) + \":\" + z(m);\r\n  };\r\n\r\n  // Add two times in hh:mm format\r\n  addTimes = (t0, t1) => {\r\n    return this.timeFromMins(this.timeToMins(t0) + this.timeToMins(t1));\r\n  };\r\n\r\n  // handleNewTimeChange = selectedTime => {\r\n  //   let time = new Date(dateFormat(selectedTime));\r\n  //   let selectedTimeNew = time.getTime();\r\n  //   console.log(selectedTimeNew);\r\n  //   let { selectedList, formFields } = this.state;\r\n  //   formFields = {\r\n  //     start_time: selectedTimeNew,\r\n  //     end_time: \"\",\r\n  //     add_duration: \"\",\r\n  //   };\r\n  // };\r\n\r\n  handleAddtreatment = async index => {\r\n    let { selectedList, formFields, appointmentId } = this.state;\r\n\r\n    if (selectedList[index][\"end_time\"]) {\r\n      let start = \"\";\r\n      if (appointmentId) {\r\n        start = this.timeToDateFormat(\r\n          selectedList[selectedList.length - 1].end_time\r\n        );\r\n      } else {\r\n        start = selectedList[selectedList.length - 1].end_time;\r\n      }\r\n      formFields = {\r\n        appt_id: null,\r\n        start_time: start,\r\n        end_time: \"\",\r\n        Item_Codeid: 6213,\r\n        add_duration: \"\",\r\n        emp_no: 0,\r\n        requesttherapist: false,\r\n        recur_days: null,\r\n        recur_qty: null,\r\n        item_text: null,\r\n        checktype: \"\",\r\n        treat_parentcode: null,\r\n      };\r\n      selectedList.push({\r\n        appt_id: null,\r\n        start_time: start,\r\n        end_time: \"\",\r\n        Item_Codeid: 6213,\r\n        Item_CodeName: \"\",\r\n        add_duration: \"\",\r\n        emp_no: 0,\r\n        requesttherapist: false,\r\n        recur_days: null,\r\n        recur_qty: null,\r\n        item_text: null,\r\n        checktype: \"\",\r\n        treat_parentcode: null,\r\n      });\r\n\r\n      await this.setState({ selectedList, formFields });\r\n\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else {\r\n      Toast({ type: \"error\", message: \"End time shouldn't be empty\" });\r\n    }\r\n  };\r\n\r\n  deleteTreatment = async index => {\r\n    let { selectedList } = this.state;\r\n    selectedList.splice(index, 1);\r\n    this.setState({ selectedList });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  handleTreatementmodal = () => {\r\n    let { appointmentCustomerDetail } = this.props;\r\n    let customerId = appointmentCustomerDetail.customerName;\r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isTreatementModal: !prevState.isTreatementModal,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n  // handleChangeremark = async ({ target: { value, name } }) => {\r\n  //   let { formFields, selectedList } = this.state;\r\n  //   formFields[name] = value;\r\n  //   selectedList[0][name] = value;\r\n  //   await this.setState({\r\n  //     formFields,\r\n  //     selectedList,\r\n  //   });\r\n  //   await this.props.updateForm(\"treatmentList\", selectedList);\r\n  // };\r\n\r\n  handleCheckbox = async ({ target: { value, name } }, index) => {\r\n    let { treatmentList } = this.state;\r\n    let { selectedList } = this.state;\r\n    selectedList[index][\"requesttherapist\"] = value;\r\n    await this.setState({\r\n      selectedList,\r\n    });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  handleCloseDialog = async () => {\r\n    this.props.handleCloseDialog();\r\n  };\r\n  handleSaveorUpdate = async () => {\r\n    this.props.handleSaveorUpdate();\r\n  };\r\n  handleRecurringlistCheckbox = async ({ target: { value, name } }, item) => {\r\n    let { recurringList } = this.state;\r\n    let listCheckbox = recurringList.find(acc => acc.id === item.id);\r\n    if (listCheckbox) {\r\n      listCheckbox[\"selected\"] = value;\r\n      await this.setState({ ...this.state.recurringList, listCheckbox });\r\n    }\r\n    let Checkbox = recurringList.filter(acc => acc.selected === true).length;\r\n    if (Checkbox == this.state.recurringList.length) {\r\n      await this.setState({ recurringSelectAll: true });\r\n    } else {\r\n      await this.setState({ recurringSelectAll: false });\r\n    }\r\n  };\r\n\r\n  handleRecurringSelectAllCheckbox = async ({ target: { value, name } }) => {\r\n    let { recurringList } = this.state;\r\n    await this.setState({ recurringSelectAll: value });\r\n    for (let item of recurringList) {\r\n      item[\"selected\"] = value;\r\n      await this.setState({ ...this.state.recurringList, item });\r\n    }\r\n  };\r\n  handleCopyAppointment = async () => {\r\n    let { appointmentId } = this.state;\r\n    let formFields = {};\r\n    formFields[\"appointmentId\"] = appointmentId;\r\n    await this.props.updateForm(\"AppointmentCopy\", formFields);\r\n    console.log(\r\n      this.props.AppointmentCopy,\r\n      \"after copy click appointment copy id\"\r\n    );\r\n    Toast({ type: \"success\", message: \"Appointment copied\" });\r\n  };\r\n  handlePasteAppointment = async () => {\r\n    let { AppointmentCopy } = this.props;\r\n    if (AppointmentCopy) {\r\n      this.setState({\r\n        PasteAppointmentId: AppointmentCopy.appointmentId,\r\n        selectedList: [],\r\n      });\r\n      this.handleRenderApptDetail(AppointmentCopy.appointmentId, true);\r\n    }\r\n  };\r\n\r\n  handleGotoCart = async () => {\r\n    let { appointmentCustomerDetail } = this.props;\r\n    let formFields = { custId: 0, custName: \"\" };\r\n    formFields[\"custId\"] = appointmentCustomerDetail.customerName;\r\n    formFields[\"custName\"] = appointmentCustomerDetail.custName;\r\n    formFields[\"cust_refer\"] = appointmentCustomerDetail.cust_refer;\r\n    await this.props.updateForm(\"basicApptDetail\", formFields);\r\n\r\n    history.push(\"/admin/cart\");\r\n  };\r\n  handleUpcomingAppointment = () => {\r\n    let { appointmentCustomerDetail } = this.props;\r\n    let customerId = appointmentCustomerDetail.customerName;\r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isUpcomingAppointmentModal: !prevState.isUpcomingAppointmentModal,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n  handleTreatmentHistory = () => {\r\n    let { appointmentCustomerDetail } = this.props;\r\n    let customerId = appointmentCustomerDetail.customerName;\r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isTreatmentHistoryModal: !prevState.isTreatmentHistoryModal,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      outletOption,\r\n      staffOption,\r\n      roomOption,\r\n      selectedList,\r\n      siteList,\r\n      list,\r\n      formFields,\r\n      timeDropdown,\r\n      duration,\r\n      isOpenModal,\r\n      treatmentField,\r\n      treatmentList = [],\r\n      categoryList,\r\n      treatmentListHeader,\r\n      meta,\r\n      isTreatementModal,\r\n      appointmentId,\r\n      selectedRec_days,\r\n      selectedRec_qty,\r\n      recurringList,\r\n      recurringSelectAll,\r\n      settingData,\r\n      PasteAppointmentId,\r\n      isTreatmentHistoryModal,\r\n      isUpcomingAppointmentModal,\r\n    } = this.state;\r\n    let { customerDetail, selectedTreatmentList, customerId, t } = this.props;\r\n    let { outlet, staff, rooms } = customerDetail;\r\n    return (\r\n      <>\r\n        {PasteAppointmentId <= 0 ? (\r\n          <AppointmentForm\r\n            onRef={ref => (this.child = ref)}\r\n            selectedCustomer={this.props.selectedCustomer}\r\n            PasteAppointmentId={PasteAppointmentId}\r\n          ></AppointmentForm>\r\n        ) : null}\r\n        {PasteAppointmentId > 0 ? (\r\n          <AppointmentForm\r\n            onRef={ref => (this.child = ref)}\r\n            selectedCustomer={this.props.selectedCustomer}\r\n            PasteAppointmentId={PasteAppointmentId}\r\n          ></AppointmentForm>\r\n        ) : null}\r\n        <div className=\"create-appointment select-treatment-appointment\">\r\n          <div className=\"row\">\r\n            <div className=\" col-md-12\">\r\n              <div className=\"appointment\">\r\n                <div className=\"appointment-holder\">\r\n                  <div className=\"treatment-section p-0\">\r\n                    <div className=\"select-treatment select-list w-100\">\r\n                      <div className=\"d-flex selected selected-header mb-4 w-100\">\r\n                        <div className=\"col-1 p-0\">{t(\"Start\")}</div>\r\n                        <div className=\"col-1 p-0\">{t(\"End\")}</div>\r\n                        <div className=\"col-3 p-0 header-detail\">\r\n                          {t(\"Service\")}\r\n                        </div>\r\n\r\n                        <div className=\"col-1 p-0 header-detail\">\r\n                          {t(\"Duration\")}\r\n                        </div>\r\n                        <div className=\"col-2 p-0\">{t(\"Treatment Staff\")}</div>\r\n                        <div className=\"col-1 p-0 d-flex justify-content-center\">\r\n                          <img\r\n                            src={req_therapist}\r\n                            alt=\"\"\r\n                            height=\"25\"\r\n                            width=\"25\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-1 p-0 header-detail d-flex justify-content-start\">\r\n                          {t(\"Recur Days\")}\r\n                        </div>\r\n                        <div className=\"col-1 p-0 header-detail d-flex justify-content-center\">\r\n                          {t(\"Recur Qty\")}\r\n                        </div>\r\n                      </div>\r\n                      {selectedList.length > 0 ? (\r\n                        selectedList.map((item, index) => {\r\n                          return (\r\n                            <div className=\"d-flex selected  mb-4\" key={index}>\r\n                              <div className=\"col-1 mr-1 p-0\">\r\n                                {appointmentId ? (\r\n                                  <NormalTimePicker\r\n                                    className={`cursor-pointer`}\r\n                                    onChange={e =>\r\n                                      this.handleDatePick(e, index)\r\n                                    }\r\n                                    label=\"start_time\"\r\n                                    name=\"start_time\"\r\n                                    timeOnly={true}\r\n                                    dateFormat={`HH:mm`}\r\n                                    showTime={true}\r\n                                    selected={false}\r\n                                    placeholder=\"\"\r\n                                    timeIntervals={5}\r\n                                    value={item.start_time}\r\n                                    showIcon={false}\r\n                                  />\r\n                                ) : (\r\n                                  <NormalInput\r\n                                    placeholder=\"start\"\r\n                                    // options={timeDropdown}\r\n                                    value={item.start_time}\r\n                                    name=\"start_time\"\r\n                                    onChange={() => {}}\r\n                                    className=\"customer-name p-0\"\r\n                                    disabled={true}\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-1 mr-1 p-0\">\r\n                                <NormalInput\r\n                                  placeholder=\"end\"\r\n                                  // options={timeDropdown}\r\n                                  value={item.end_time}\r\n                                  name=\"end_time\"\r\n                                  onChange={() => {}}\r\n                                  className=\"customer-name p-0\"\r\n                                  disabled={true}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-3 mr-1 p-0\">\r\n                                <div className=\"header-detail\"></div>\r\n                                {settingData &&\r\n                                settingData.service_sel &&\r\n                                settingData.service_text ? (\r\n                                  <NormalInput\r\n                                    placeholder=\"service\"\r\n                                    // options={siteList}\r\n                                    value={item.Item_CodeName}\r\n                                    name=\"Item_CodeName\"\r\n                                    onClick={() =>\r\n                                      this.setState({\r\n                                        isOpenModal: true,\r\n                                        index: index,\r\n                                      })\r\n                                    }\r\n                                    onChange={e => this.handleChange(e, index)}\r\n                                    className=\"customer-name p-0 px-2\"\r\n                                  />\r\n                                ) : null}\r\n                                {settingData &&\r\n                                settingData.service_sel &&\r\n                                !settingData.service_text ? (\r\n                                  <NormalInput\r\n                                    placeholder=\"service\"\r\n                                    // options={siteList}\r\n                                    value={item.Item_CodeName}\r\n                                    name=\"Item_CodeName\"\r\n                                    onClick={() =>\r\n                                      this.setState({\r\n                                        isOpenModal: true,\r\n                                        index: index,\r\n                                      })\r\n                                    }\r\n                                    onChange={() => {}}\r\n                                    className=\"customer-name p-0 px-2\"\r\n                                  />\r\n                                ) : null}\r\n                                {settingData &&\r\n                                !settingData.service_sel &&\r\n                                settingData.service_text ? (\r\n                                  <NormalInput\r\n                                    placeholder=\"service\"\r\n                                    // options={siteList}\r\n                                    value={item.Item_CodeName}\r\n                                    name=\"Item_CodeName\"\r\n                                    onClick={() => {}}\r\n                                    onChange={e => this.handleChange(e, index)}\r\n                                    className=\"customer-name p-0 px-2\"\r\n                                  />\r\n                                ) : null}\r\n                                {settingData &&\r\n                                !settingData.service_sel &&\r\n                                !settingData.service_text ? (\r\n                                  <NormalInput\r\n                                    placeholder=\"service\"\r\n                                    // options={siteList}\r\n                                    value={item.Item_CodeName}\r\n                                    name=\"Item_CodeName\"\r\n                                    onClick={() => {}}\r\n                                    onChange={() => {}}\r\n                                    className=\"customer-name p-0 px-2\"\r\n                                  />\r\n                                ) : null}\r\n                              </div>\r\n                              <div className=\"col-1 mr-1 p-0 header-detail\">\r\n                                <NormalSelect\r\n                                  // placeholder=\"Enter here\"\r\n                                  options={duration}\r\n                                  value={item.add_duration}\r\n                                  name=\"add_duration\"\r\n                                  onChange={e => this.handleChange(e, index)}\r\n                                  className=\"customer-name p-0\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-2 p-0\">\r\n                                <NormalSelect\r\n                                  // placeholder=\"Enter here\"\r\n                                  options={staffOption}\r\n                                  value={item.emp_no}\r\n                                  name=\"emp_no\"\r\n                                  onChange={e => this.handleChange(e, index)}\r\n                                  className=\"customer-name p-0\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-1 p-0 d-flex justify-content-center\">\r\n                                {item.requesttherapist ? (\r\n                                  <NormalCheckbox\r\n                                    onChange={e =>\r\n                                      this.handleCheckbox(e, index)\r\n                                    }\r\n                                    value={item.requesttherapist}\r\n                                    name=\"requesttherapist\"\r\n                                    checked={true}\r\n                                  />\r\n                                ) : (\r\n                                  <NormalCheckbox\r\n                                    onChange={e =>\r\n                                      this.handleCheckbox(e, index)\r\n                                    }\r\n                                    value={item.requesttherapist}\r\n                                    name=\"requesttherapist\"\r\n                                    checked={false}\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-1 p-0 d-flex justify-content-start\">\r\n                                <NormalInput\r\n                                  type=\"number\"\r\n                                  name=\"recur_days\"\r\n                                  value={item.recur_days ? item.recur_days : \"\"}\r\n                                  onChange={e => this.handleChange(e, index)}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-1 p-0 d-flex justify-content-start\">\r\n                                <NormalInput\r\n                                  type=\"number\"\r\n                                  name=\"recur_qty\"\r\n                                  value={item.recur_qty ? item.recur_qty : \"\"}\r\n                                  onChange={e => this.handleChange(e, index)}\r\n                                />\r\n                              </div>\r\n                              {selectedList.length === index + 1 ? (\r\n                                <div\r\n                                  className=\"ml-3\"\r\n                                  onClick={() => this.handleAddtreatment(index)}\r\n                                >\r\n                                  <svg\r\n                                    width=\"31\"\r\n                                    height=\"30\"\r\n                                    viewBox=\"0 0 31 30\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  >\r\n                                    <rect\r\n                                      width=\"31\"\r\n                                      height=\"30\"\r\n                                      fill=\"#F9F9F9\"\r\n                                    />\r\n                                    <path\r\n                                      d=\"M15 8V22\"\r\n                                      stroke=\"#848484\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                      d=\"M8 15H22\"\r\n                                      stroke=\"#848484\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    />\r\n                                  </svg>\r\n                                </div>\r\n                              ) : (\r\n                                <>\r\n                                  {appointmentId && item.appt_id ? null : (\r\n                                    <img\r\n                                      width=\"25\"\r\n                                      height=\"25\"\r\n                                      onClick={() =>\r\n                                        this.deleteTreatment(index)\r\n                                      }\r\n                                      className=\"ml-3\"\r\n                                      src={closeIcon}\r\n                                      alt=\"\"\r\n                                    />\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })\r\n                      ) : (\r\n                        <div className=\"row selected text-center mb-4\">\r\n                          {t(\"No Data\")}\r\n                        </div>\r\n                      )}\r\n                      <div className=\"mt-5\">\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"col-md-4 col-12 p-0\">\r\n                            <div className=\"d-flex justify-content-start\">\r\n                              <NormalButton\r\n                                buttonClass={\"treatment w-100\"}\r\n                                mainbg={true}\r\n                                className=\"col-12 mr-1  te\"\r\n                                label=\"Treatment Package\"\r\n                                onClick={this.handleTreatementmodal}\r\n                              />\r\n                              <NormalButton\r\n                                buttonClass={\"treatment\"}\r\n                                mainbg={true}\r\n                                className=\"col-11 ml-1 up\"\r\n                                label=\"Upcoming\"\r\n                                onClick={this.handleUpcomingAppointment}\r\n                              />\r\n                              <NormalButton\r\n                                buttonClass={\"treatment\"}\r\n                                mainbg={true}\r\n                                className=\"col-12 his\"\r\n                                label=\"History\"\r\n                                onClick={this.handleTreatmentHistory}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-md-5 col-12 p-0\">\r\n                            <div className=\"d-flex justify-content-around\">\r\n                              {appointmentId ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"treatment\"}\r\n                                  mainbg={true}\r\n                                  className=\"col-12\"\r\n                                  label=\"Customer Profile\"\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      `/admin/customerplus/${customerId}/account`\r\n                                    )\r\n                                  }\r\n                                />\r\n                              ) : null}\r\n                              {appointmentId ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"treatment\"}\r\n                                  mainbg={true}\r\n                                  className=\"col-12\"\r\n                                  label=\"Go to Cart\"\r\n                                  onClick={this.handleGotoCart}\r\n                                />\r\n                              ) : null}\r\n\r\n                              {!appointmentId &&\r\n                              this.props.AppointmentCopy &&\r\n                              this.props.AppointmentCopy.appointmentId > 0 ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"treatment ml-2\"}\r\n                                  mainbg={true}\r\n                                  className=\"col-12 fs-15 \"\r\n                                  label=\"Paste Appointment\"\r\n                                  onClick={this.handlePasteAppointment}\r\n                                />\r\n                              ) : null}\r\n                              {appointmentId ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"treatment\"}\r\n                                  mainbg={true}\r\n                                  className=\"col-12\"\r\n                                  label=\"Copy Appointment\"\r\n                                  onClick={this.handleCopyAppointment}\r\n                                />\r\n                              ) : null}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-md-3 col-12 p-0\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                              <NormalButton\r\n                                buttonClass={\"treatment mr-2\"}\r\n                                mainbg={true}\r\n                                className=\"col-12 cancel\"\r\n                                label=\"Cancel\"\r\n                                onClick={this.handleCloseDialog}\r\n                              />\r\n                              {appointmentId ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"submit-btn w-100\"}\r\n                                  mainbg={false}\r\n                                  className=\"col-12 submit-btn W-100\"\r\n                                  label=\"Update Booking\"\r\n                                  onClick={this.handleUpdate}\r\n                                />\r\n                              ) : (\r\n                                <NormalButton\r\n                                  buttonClass={\"submit-btn w-100\"}\r\n                                  mainbg={false}\r\n                                  className=\"col-12 submit-btn W-100\"\r\n                                  label=\"Confirm Booking\"\r\n                                  onClick={this.handleSubmit}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {recurringList && recurringList.length > 0 ? (\r\n                        <div className=\"mt-5 mb-3\">\r\n                          <div>\r\n                            <p>Recurring Related Appointments</p>\r\n                          </div>\r\n\r\n                          <div className=\"row selected selected-header mb-2\">\r\n                            <div className=\"col-1\">\r\n                              <NormalCheckbox\r\n                                label={`All`}\r\n                                onChange={e =>\r\n                                  this.handleRecurringSelectAllCheckbox(e)\r\n                                }\r\n                                value={recurringSelectAll}\r\n                                name=\"recurringSelectAll\"\r\n                                checked={recurringSelectAll}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-2 p-0\">{t(\"Date\")}</div>\r\n                            <div className=\"col-1 p-0\">{t(\"Start\")}</div>\r\n                            <div className=\"col-1 p-0\">{t(\"End\")}</div>\r\n                            <div className=\"col-3 p-0 header-detail\">\r\n                              {t(\"Service\")}\r\n                            </div>\r\n\r\n                            <div className=\"col-1 p-0 header-detail\">\r\n                              {t(\"Duration\")}\r\n                            </div>\r\n                            <div className=\"col-2 p-0\">\r\n                              {t(\"Treatment staff\")}\r\n                            </div>\r\n                            <div className=\"col-1 p-0 d-flex justify-content-center\">\r\n                              <img\r\n                                src={req_therapist}\r\n                                alt=\"\"\r\n                                height=\"25\"\r\n                                width=\"25\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {recurringList && recurringList.length > 0 ? (\r\n                            recurringList.map((item, index) => {\r\n                              return (\r\n                                <div className=\"row selected  mb-4\" key={index}>\r\n                                  <div className=\"col-1 text-center\">\r\n                                    <NormalCheckbox\r\n                                      onChange={e =>\r\n                                        this.handleRecurringlistCheckbox(\r\n                                          e,\r\n                                          item\r\n                                        )\r\n                                      }\r\n                                      value={item.selected}\r\n                                      name=\"recurringItem\"\r\n                                      checked={item.selected}\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-2 p-0\">{item.date}</div>\r\n                                  <div className=\"col-1 p-0\">\r\n                                    {item.start_time}\r\n                                  </div>\r\n                                  <div className=\"col-1 p-0\">\r\n                                    {item.end_time}\r\n                                  </div>\r\n                                  <div className=\"col-3 p-0 header-detail\">\r\n                                    {item.item_name}\r\n                                  </div>\r\n\r\n                                  <div className=\"col-1 p-0 header-detail\">\r\n                                    {item.add_duration}\r\n                                  </div>\r\n                                  <div className=\"col-2 p-0\">\r\n                                    {item.emp_name}\r\n                                  </div>\r\n                                  <div className=\"col-1 p-0 d-flex justify-content-center\">\r\n                                    <NormalCheckbox\r\n                                      onChange={e =>\r\n                                        this.handleRecurringlistCheckbox(\r\n                                          e,\r\n                                          item\r\n                                        )\r\n                                      }\r\n                                      value={item.requesttherapist}\r\n                                      name=\"requesttherapist\"\r\n                                      checked={item.requesttherapist}\r\n                                      disabled\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          ) : (\r\n                            <div className=\"row text-center w-100\">\r\n                              {t(\"No Data\")}\r\n                            </div>\r\n                          )}\r\n                          <div className=\"d-flex justify-content-end\">\r\n                            <div className=\"mt-5\">\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <div>\r\n                                  <NormalButton\r\n                                    buttonClass={\"treatment\"}\r\n                                    mainbg={true}\r\n                                    className=\"col-12\"\r\n                                    label=\"Cancel\"\r\n                                    onClick={this.handleCloseDialog}\r\n                                  />\r\n                                </div>\r\n                                <div>\r\n                                  {appointmentId ? (\r\n                                    <NormalButton\r\n                                      buttonClass={\"submit-btn\"}\r\n                                      mainbg={false}\r\n                                      className=\"col-12 submit-btn ml-4\"\r\n                                      label=\"Update Recurring\"\r\n                                      onClick={this.handleRecurringUpdate}\r\n                                    />\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <NormalModal\r\n            className={\"multiple-appointment select-category\"}\r\n            style={{ minWidth: \"60%\" }}\r\n            modal={isOpenModal}\r\n            handleModal={this.handleDialog}\r\n          >\r\n            <img\r\n              onClick={this.handleDialog}\r\n              className=\"close\"\r\n              src={closeIcon}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"customer-list container\">\r\n              <div className=\"col-12 pl-0 mb-3 fw-500 py-2\">\r\n                <h5>{t(\"Select Treatment\")}</h5>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    {t(\"Category\")}\r\n                    <NormalSelect\r\n                      // placeholder=\"Enter here\"\r\n                      options={categoryList}\r\n                      value={treatmentField.category}\r\n                      name=\"category\"\r\n                      onChange={this.handleChangeTreatment}\r\n                      className=\"customer-name p-0\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    {t(\"Service\")}\r\n                    <input\r\n                      // placeholder=\"Enter here\"\r\n                      // options={siteList}\r\n                      value={treatmentField.treatment}\r\n                      name=\"treatment\"\r\n                      onChange={this.handleSearch}\r\n                      className=\"search px-3 p-0\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"table-container table-responsive mt-3\">\r\n                <TableWrapper\r\n                  headerDetails={treatmentListHeader}\r\n                  queryHandler={this.handlePagination}\r\n                  pageMeta={meta}\r\n                >\r\n                  {treatmentList.length > 0 ? (\r\n                    treatmentList.map((item, index) => {\r\n                      return (\r\n                        <tr\r\n                          className=\"w-100\"\r\n                          onClick={() => this.handleSelectTreatment(item)}\r\n                          key={index}\r\n                        >\r\n                          <td>\r\n                            {\" \"}\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {item.Item_Class}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {item.item_desc}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {item.add_duration}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {item.item_price}\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                        {t(\"No data Available\")}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                </TableWrapper>\r\n              </div>\r\n\r\n              <div className=\"row text-center justify-center w-100\">\r\n                <NormalButton\r\n                  buttonClass={\"col-3\"}\r\n                  mainbg={true}\r\n                  className=\"col-12 ml-4\"\r\n                  label=\"Cancel\"\r\n                  onClick={this.handleDialog}\r\n                />\r\n              </div>\r\n            </div>\r\n          </NormalModal>\r\n\r\n          <div className=\"col-12\">\r\n            {isTreatementModal ? (\r\n              <TreatmentPackage\r\n                isTreatementModal={isTreatementModal}\r\n                handleTreatementmodal={this.handleTreatementmodal}\r\n                handleSelectPackage={this.handleSelectPackage}\r\n                customerNumber={\r\n                  this.props.appointmentCustomerDetail.customerName\r\n                }\r\n                custName={this.props.appointmentCustomerDetail.custName}\r\n                custPhone={this.props.appointmentCustomerDetail.custPhone}\r\n                cust_refer={this.props.appointmentCustomerDetail.cust_refer}\r\n                CustomerRemark={\r\n                  this.props.appointmentCustomerDetail.cust_remark\r\n                }\r\n                CustomerRemarkFlag={false}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {console.log(\r\n            this.props.appointmentCustomerDetail,\r\n            \"appointmentcustomerdetail\"\r\n          )}\r\n          {isTreatmentHistoryModal ? (\r\n            <TreatmentHistory\r\n              isTreatmentHistoryModal={isTreatmentHistoryModal}\r\n              handleTreatmentHistory={this.handleTreatmentHistory}\r\n              customerNumber={this.props.appointmentCustomerDetail.customerName}\r\n              custName={this.props.appointmentCustomerDetail.custName}\r\n              custPhone={this.props.appointmentCustomerDetail.custPhone}\r\n              cust_refer={this.props.appointmentCustomerDetail.cust_refer}\r\n              CustomerRemark={this.props.appointmentCustomerDetail.cust_remark}\r\n              CustomerRemarkFlag={true}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {isUpcomingAppointmentModal ? (\r\n            <UpcomingAppointment\r\n              isUpcomingAppointmentModal={isUpcomingAppointmentModal}\r\n              handleUpcomingAppointment={this.handleUpcomingAppointment}\r\n              customerNumber={this.props.appointmentCustomerDetail.customerName}\r\n              custName={this.props.appointmentCustomerDetail.custName}\r\n              custPhone={this.props.appointmentCustomerDetail.custPhone}\r\n              cust_refer={this.props.appointmentCustomerDetail.cust_refer}\r\n              CustomerRemark={this.props.appointmentCustomerDetail.cust_remark}\r\n              CustomerRemarkFlag={false}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customerDetail: state.appointment.customerDetail,\r\n  appointmentDetail: state.appointment.appointmentDetail,\r\n  selectedTreatmentList: state.appointment.selectedTreatmentList,\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  appointmentCustomerDetail: state.appointment.appointmentCustomerDetail,\r\n  appointmentTreatmentList: state.appointment.appointmentTreatmentList,\r\n  AppointmentCopy: state.appointment.AppointmentCopy,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      updateForm,\r\n      getSelectedTreatmentList,\r\n      getCommonApi,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const NewSelectTreatment = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(NewSelectTreatmentClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}