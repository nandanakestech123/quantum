{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Project\\\\ListProject\\\\index.js\";\nimport React from \"react\";\nimport { Toast } from \"service/toast\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, getProjectStatus, getJobtitle } from \"redux/actions/common\";\nimport { NormalButton, NormalDate, TableWrapper, NormalMultiSelect } from \"component/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { withTranslation } from \"react-i18next\";\nimport { NormalInput } from \"component/common\";\nimport { Link } from \"react-router-dom\";\nimport updateBtn from \"../../../../assets/images/edit1.png\";\nimport deleteBtn from \"../../../../assets/images/delete1.png\";\nimport { getProject, deleteProject } from \"redux/actions/project\";\nimport { getTokenDetails } from \"redux/actions/auth\";\nimport _ from \"lodash\";\nimport CustomerSearch from \"component/Admin/Quantum/CustomerSearch\";\nexport class ListProjectClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Project Title\"\n      }, {\n        label: \"Customer Name\"\n      }, {\n        label: \"Status\"\n      }, // { label: \"Action\" },\n      {\n        label: \"Edit\"\n      }, {\n        label: \"Delete\"\n      }],\n      projectList: [],\n      pageMeta: {// per_page: 8,\n        // current_page: 1,\n        // total: 7,\n        // total_pages: 1\n        // chunk: 10,\n        // page: 1,\n        // total: 10,\n        // totalPages: 2,\n      },\n      formField: {\n        projectTitle: \"\",\n        status: \"\",\n        custName: \"\"\n      },\n      statusOption: [],\n      selectedStatus: [],\n      statusArr: [],\n      statusStr: \"\",\n      active: false,\n      currentIndex: -1,\n      page: 1,\n      // limit: 10,\n      limit: 5,\n      isOpenvoidCheckout: false // is_loading: false,\n      // isMounted: true,\n      // salesCollectionHeader: [\n      //   { label: \"Sales Collection\" },\n      //   { label: \"Before Tax\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Qty\" },\n      // ],\n      // nonSalesCollectionHeader: [\n      //   { label: \"Non Sales Collection\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Qty\" },\n      // ],\n      // deptSalesHeader: [{ label: \"Dept Sales\" }, { label: \"Amount\" }],\n      // salesTransactionHeader: [\n      //   { label: \"Sales Transaction\" },\n      //   { label: \"Amount\" },\n      //   { label: \"Paid\" },\n      //   { label: \"Outstanding\" },\n      // ],\n      // ARTransactionHeader: [{ label: \"AR Transaction\" }, { label: \"Amount\" }],\n      // TreatmentDoneHeader: [\n      //   { label: \"Customer\" },\n      //   { label: \"Customer Reference\" },\n      //   { label: \"Treatment Done\" },\n      //   { label: \"Description\" },\n      //   { label: \"Staff\" },\n      //   { label: \"Amount\" },\n      // DayDate: new Date(),\n      // runDayEnd: false,\n      // reportDate: \"\",\n      // sales_collec: null,\n      // sales_trasac: null,\n      // ar_trasac: null,\n      // treatment_done: null,\n      // dept_sales: null,\n\n    };\n\n    this.componentWillMount = () => {\n      console.log(\"this.props in list project\", this.props);\n      console.log(\"this.props.tokenDetail\", this.props.tokenDetail);\n      console.log(\"this.props.tokenDetail.username\", this.props.tokenDetail.username);\n      this.getStatus();\n    };\n\n    this.handleMultiSelect = e => {\n      let {\n        selectedStatus,\n        statusArr,\n        statusStr\n      } = this.state;\n      selectedStatus = e;\n      console.log(\"selectedStatus\", selectedStatus);\n      this.setState({\n        statusStr: \"\",\n        statusArr: []\n      });\n\n      for (let key of selectedStatus) {\n        statusArr.push(key.label);\n      }\n\n      statusStr = statusArr.toString();\n      console.log(\"statusArr\", statusArr);\n      console.log(\"statusStr\", statusStr); // this.updateState({});\n\n      this.setState({\n        statusStr\n      });\n    };\n\n    this.getProjects = () => {\n      let {\n        projectList,\n        pageMeta,\n        formField,\n        page,\n        limit,\n        statusStr,\n        statusArr\n      } = this.state;\n      let {\n        projectTitle,\n        status,\n        custName\n      } = formField; // let From = new Date();\n      // if (fromDate && fromDate !== \"\") {\n      //   From = fromDate;\n      // } else {\n      //   this.setState({ fromDate: From });\n      // }\n      // let To = new Date();\n      // if (toDate && toDate !== \"\") {\n      //   To = toDate;\n      // } else {\n      //   this.setState({ toDate: To });\n      // }\n\n      console.log(\"statusStr in getprojects:\", statusStr);\n      console.log(\"statusArr in getprojects:\", statusArr);\n      console.log(\"this.props.tokenDetail.username\", this.props.tokenDetail.username);\n      this.props.getCommonApi(`projectlist/?searchtitle=${projectTitle}&searchstatus=${statusStr}&searchname=${custName}&page=${page}&limit=${limit}`).then(async res => {\n        console.log(res, \"dsfdfaafg\");\n        await this.setState({\n          projectList: []\n        });\n        projectList = res.data.dataList; // pageMeta = res.data.meta.pagination;\n\n        pageMeta = res.data.pagination; // pageMeta = {per_page:2, current_page:1, total:2, total_pages:4}\n\n        this.setState({\n          projectList,\n          pageMeta\n        }); // this.setState({ projectList });\n\n        console.log(\"projectList\", projectList);\n        console.log(\"pageMeta\", pageMeta);\n        console.log(\"statusStr after clear\", statusStr);\n        console.log(\"statusArr after clear\", statusArr);\n      });\n    };\n\n    this.getStatus = () => {\n      let {\n        statusOption\n      } = this.state;\n      statusOption = [];\n      console.log(\"sdfsdhfghjghj\", this.props);\n      this.props.getCommonApi(`dropdownproject`).then(res => {\n        // activeMenu = []\n        console.log(\"res.data\", res);\n\n        for (let key of res.data) {\n          statusOption.push({\n            value: key.id,\n            label: key.dropdown_item,\n            code: key.dropdown_desc,\n            active: key.active\n          });\n        }\n\n        console.log(\"statusOption\", statusOption);\n        this.setState({\n          statusOption\n        });\n      });\n    };\n\n    this.handlePagination = async pageNo => {\n      let {\n        page\n      } = this.state;\n      page = pageNo.page;\n      await this.setState({\n        page\n      });\n      this.getProjects();\n    };\n\n    this.handleClick = key => {\n      if (!this.state.active) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      this.setState(prevState => ({\n        active: !prevState.active,\n        currentIndex: key\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleClick();\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formField\n      } = this.state;\n      formField[name] = value;\n      await this.setState({\n        formField\n      });\n    };\n\n    this.handleSearch = () => {\n      this.getProjects();\n      console.log(\"projectStatusList\", this.props.projectStatusList);\n    };\n\n    this.handleDeleteProject = id => {\n      this.props.deleteProject(`${id}/`).then(res => this.getProjects({}));\n    };\n\n    this.handleClick = key => {\n      if (!this.state.visible) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      this.setState(prevState => ({\n        visible: !prevState.visible\n      }));\n    };\n\n    this.handleCustomerSearch = async event => {\n      // event.persist();\n      let {\n        formField,\n        visible\n      } = this.state;\n      formField.custName = event.target.value;\n      await this.setState({\n        formField,\n        visible: true\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          this.search();\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = searchString => {\n      let {\n        formField\n      } = this.state;\n      this.props.getCommonApi(`custappt/?search=${formField.custName}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          this.setState({\n            customerOption: data\n          });\n        }\n      });\n    };\n\n    this.handleSelectCustomer = async data => {\n      let {\n        formField\n      } = this.state;\n      formField[\"custName\"] = data.cust_name;\n      await this.setState({\n        formField,\n        customerOption: []\n      });\n      this.handleClick();\n    };\n  }\n\n  // componentWillUnmount() {\n  //   this.state.isMounted = false;\n  // }\n  // updateState = data => {\n  //   if (this.state.isMounted) this.setState(data);\n  // };\n  componentDidMount() {\n    // let From = new Date();\n    // let { formField } = this.state;\n    // let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\n    // formField[\"fromDate\"] = firstdayMonth;\n    // this.setState({\n    //   formField,\n    // });\n    this.getProjects(); // this.queryHandler({});\n  }\n\n  render() {\n    let {\n      headerDetails,\n      pageMeta,\n      projectList,\n      formField,\n      statusOption,\n      customerOption,\n      visible\n    } = this.state;\n    let {\n      tokenDetail\n    } = this.props;\n    let {\n      projectTitle,\n      status,\n      custName\n    } = formField;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-section col-md-10 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label-head mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }\n    }, t(\"Project\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row m-0 filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }\n    }, t(\"Project Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: projectTitle,\n      name: \"projectTitle\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }\n    }, t(\"Customer Name\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Search Customer..\",\n      value: custName,\n      name: \"custName\",\n      onChange: this.handleCustomerSearch,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2 mb-3\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Search\",\n      outline: false,\n      onClick: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row m-0 filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 15\n      }\n    }, t(\"Status\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      options: statusOption // value={status}\n      // name=\"status\"\n      ,\n      handleMultiSelect: this.handleMultiSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Add project\",\n      onClick: () => this.props.history.push(\"project/add\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 13\n      }\n    }))), visible ? /*#__PURE__*/React.createElement(CustomerSearch, {\n      t: t,\n      customerOption: customerOption,\n      handleSelectCustomer: item => this.handleSelectCustomer(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 15\n      }\n    }, projectList ? projectList.map((item, index) => {\n      let {\n        title,\n        customer_name,\n        status,\n        id\n      } = item;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 29\n        }\n      }, title)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 29\n        }\n      }, customer_name)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 29\n        }\n      }, status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: updateBtn,\n        width: \"35\",\n        height: \"35\",\n        alt: \"\",\n        className: \"action-img bg-transparent\",\n        onClick: () => this.props.history.push(`/admin/project/${id}/editProject`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: deleteBtn,\n        width: \"35\",\n        height: \"35\",\n        alt: \"\",\n        className: \"action-img bg-transparent\",\n        onClick: () => this.handleDeleteProject(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 31\n        }\n      }))));\n    }) : null)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tokenDetail: state.authStore.tokenDetails // projectStatusList: state.common.projectStatusList,\n\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    deleteProject,\n    getTokenDetails // getProjectStatus,\n    // getJobtitle,\n\n  }, dispatch);\n};\n\nexport const ListProject = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ListProjectClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Project/ListProject/index.js"],"names":["React","Toast","connect","bindActionCreators","getCommonApi","getProjectStatus","getJobtitle","NormalButton","NormalDate","TableWrapper","NormalMultiSelect","dateFormat","withTranslation","NormalInput","Link","updateBtn","deleteBtn","getProject","deleteProject","getTokenDetails","_","CustomerSearch","ListProjectClass","Component","state","headerDetails","label","projectList","pageMeta","formField","projectTitle","status","custName","statusOption","selectedStatus","statusArr","statusStr","active","currentIndex","page","limit","isOpenvoidCheckout","componentWillMount","console","log","props","tokenDetail","username","getStatus","handleMultiSelect","e","setState","key","push","toString","getProjects","then","res","data","dataList","pagination","value","id","dropdown_item","code","dropdown_desc","handlePagination","pageNo","handleClick","document","addEventListener","handleOutsideClick","removeEventListener","prevState","node","contains","target","handleChange","name","handleSearch","projectStatusList","handleDeleteProject","visible","handleCustomerSearch","event","debouncedFn","debounce","search","searchString","customerOption","handleSelectCustomer","cust_name","componentDidMount","render","t","history","item","map","index","title","customer_name","mapStateToProps","authStore","tokenDetails","mapDispatchToProps","dispatch","ListProject"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Toast } from \"service/toast\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  getProjectStatus,\r\n  getJobtitle,\r\n} from \"redux/actions/common\";\r\nimport {\r\n  NormalButton,\r\n  NormalDate,\r\n  TableWrapper,\r\n  NormalMultiSelect,\r\n} from \"component/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { NormalInput } from \"component/common\";\r\nimport { Link } from \"react-router-dom\";\r\nimport updateBtn from \"../../../../assets/images/edit1.png\";\r\nimport deleteBtn from \"../../../../assets/images/delete1.png\";\r\nimport { getProject, deleteProject } from \"redux/actions/project\";\r\nimport { getTokenDetails } from \"redux/actions/auth\";\r\nimport _ from \"lodash\";\r\nimport CustomerSearch from \"component/Admin/Quantum/CustomerSearch\";\r\n\r\nexport class ListProjectClass extends React.Component {\r\n  state = {\r\n    headerDetails: [\r\n      { label: \"Project Title\" },\r\n      { label: \"Customer Name\" },\r\n      { label: \"Status\" },\r\n      // { label: \"Action\" },\r\n      { label: \"Edit\" },\r\n      { label: \"Delete\" },\r\n    ],\r\n\r\n    projectList: [],\r\n    pageMeta: {\r\n      // per_page: 8,\r\n      // current_page: 1,\r\n      // total: 7,\r\n      // total_pages: 1\r\n      // chunk: 10,\r\n      // page: 1,\r\n      // total: 10,\r\n      // totalPages: 2,\r\n    },\r\n\r\n    formField: {\r\n      projectTitle: \"\",\r\n      status: \"\",\r\n      custName: \"\",\r\n    },\r\n    statusOption: [],\r\n\r\n    selectedStatus: [],\r\n    statusArr: [],\r\n    statusStr: \"\",\r\n\r\n    active: false,\r\n    currentIndex: -1,\r\n    page: 1,\r\n    // limit: 10,\r\n    limit: 5,\r\n    isOpenvoidCheckout: false,\r\n    // is_loading: false,\r\n    // isMounted: true,\r\n\r\n    // salesCollectionHeader: [\r\n    //   { label: \"Sales Collection\" },\r\n    //   { label: \"Before Tax\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Qty\" },\r\n    // ],\r\n    // nonSalesCollectionHeader: [\r\n    //   { label: \"Non Sales Collection\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Qty\" },\r\n    // ],\r\n    // deptSalesHeader: [{ label: \"Dept Sales\" }, { label: \"Amount\" }],\r\n    // salesTransactionHeader: [\r\n    //   { label: \"Sales Transaction\" },\r\n    //   { label: \"Amount\" },\r\n    //   { label: \"Paid\" },\r\n    //   { label: \"Outstanding\" },\r\n    // ],\r\n    // ARTransactionHeader: [{ label: \"AR Transaction\" }, { label: \"Amount\" }],\r\n    // TreatmentDoneHeader: [\r\n    //   { label: \"Customer\" },\r\n    //   { label: \"Customer Reference\" },\r\n    //   { label: \"Treatment Done\" },\r\n    //   { label: \"Description\" },\r\n    //   { label: \"Staff\" },\r\n    //   { label: \"Amount\" },\r\n    // DayDate: new Date(),\r\n    // runDayEnd: false,\r\n    // reportDate: \"\",\r\n    // sales_collec: null,\r\n    // sales_trasac: null,\r\n    // ar_trasac: null,\r\n    // treatment_done: null,\r\n    // dept_sales: null,\r\n  };\r\n\r\n  // componentWillUnmount() {\r\n  //   this.state.isMounted = false;\r\n  // }\r\n\r\n  // updateState = data => {\r\n  //   if (this.state.isMounted) this.setState(data);\r\n  // };\r\n\r\n  componentDidMount() {\r\n    // let From = new Date();\r\n    // let { formField } = this.state;\r\n    // let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\r\n    // formField[\"fromDate\"] = firstdayMonth;\r\n    // this.setState({\r\n    //   formField,\r\n    // });\r\n\r\n    this.getProjects();\r\n    // this.queryHandler({});\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    console.log(\"this.props in list project\", this.props);\r\n    console.log(\"this.props.tokenDetail\", this.props.tokenDetail);\r\n    console.log(\r\n      \"this.props.tokenDetail.username\",\r\n      this.props.tokenDetail.username\r\n    );\r\n    this.getStatus();\r\n  };\r\n\r\n  // componentWillUnmount = () => {\r\n  //   this.handleMultiSelect()\r\n  // }\r\n\r\n  // updateState = data => {\r\n  //   if (this.state.isMounted) this.setState(data);\r\n  // };\r\n\r\n  handleMultiSelect = e => {\r\n    let { selectedStatus, statusArr, statusStr } = this.state;\r\n    selectedStatus = e;\r\n    console.log(\"selectedStatus\", selectedStatus);\r\n\r\n    this.setState({\r\n      statusStr: \"\",\r\n      statusArr: [],\r\n    });\r\n\r\n    for (let key of selectedStatus) {\r\n      statusArr.push(key.label);\r\n    }\r\n    statusStr = statusArr.toString();\r\n    console.log(\"statusArr\", statusArr);\r\n    console.log(\"statusStr\", statusStr);\r\n\r\n    // this.updateState({});\r\n    this.setState({\r\n      statusStr,\r\n    });\r\n  };\r\n  // handleMultiSelect = () => {\r\n  //   // let { projectList, pageMeta, formField, page, limit } = this.state;\r\n  //   // let { projectTitle, status, custName } = formField;\r\n\r\n  //   // this.formField.status = e;\r\n  //   // console.log(\"this.formField.status\",this.formField.status)\r\n  //   // this.setState({ this.formField.status });\r\n\r\n  //   let { formField } = this.state;\r\n  //   formField[status] = value;\r\n  //   await this.setState({\r\n  //     formField,\r\n  //   });\r\n  // };\r\n\r\n  // handleChange = async ({ target: { value, name } }) => {\r\n  //   let { formField } = this.state;\r\n  //   formField[name] = value;\r\n  //   await this.setState({\r\n  //     formField,\r\n  //   });\r\n  // };\r\n\r\n  getProjects = () => {\r\n    let {\r\n      projectList,\r\n      pageMeta,\r\n      formField,\r\n      page,\r\n      limit,\r\n      statusStr,\r\n      statusArr,\r\n    } = this.state;\r\n    let { projectTitle, status, custName } = formField;\r\n\r\n    // let From = new Date();\r\n    // if (fromDate && fromDate !== \"\") {\r\n    //   From = fromDate;\r\n    // } else {\r\n    //   this.setState({ fromDate: From });\r\n    // }\r\n    // let To = new Date();\r\n    // if (toDate && toDate !== \"\") {\r\n    //   To = toDate;\r\n    // } else {\r\n    //   this.setState({ toDate: To });\r\n    // }\r\n    console.log(\"statusStr in getprojects:\", statusStr);\r\n    console.log(\"statusArr in getprojects:\", statusArr);\r\n    console.log(\r\n      \"this.props.tokenDetail.username\",\r\n      this.props.tokenDetail.username\r\n    );\r\n\r\n    this.props\r\n      .getCommonApi(\r\n        `projectlist/?searchtitle=${projectTitle}&searchstatus=${statusStr}&searchname=${custName}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(async res => {\r\n        console.log(res, \"dsfdfaafg\");\r\n        await this.setState({ projectList: [] });\r\n        projectList = res.data.dataList;\r\n        // pageMeta = res.data.meta.pagination;\r\n        pageMeta = res.data.pagination;\r\n        // pageMeta = {per_page:2, current_page:1, total:2, total_pages:4}\r\n        this.setState({ projectList, pageMeta });\r\n        // this.setState({ projectList });\r\n        console.log(\"projectList\", projectList);\r\n        console.log(\"pageMeta\", pageMeta);\r\n        console.log(\"statusStr after clear\", statusStr);\r\n        console.log(\"statusArr after clear\", statusArr);\r\n      });\r\n  };\r\n\r\n  getStatus = () => {\r\n    let { statusOption } = this.state;\r\n    statusOption = [];\r\n    console.log(\"sdfsdhfghjghj\", this.props);\r\n    this.props.getCommonApi(`dropdownproject`).then(res => {\r\n      // activeMenu = []\r\n      console.log(\"res.data\", res);\r\n      for (let key of res.data) {\r\n        statusOption.push({\r\n          value: key.id,\r\n          label: key.dropdown_item,\r\n          code: key.dropdown_desc,\r\n          active: key.active,\r\n        });\r\n      }\r\n      console.log(\"statusOption\", statusOption);\r\n      this.setState({ statusOption });\r\n    });\r\n  };\r\n\r\n  handlePagination = async pageNo => {\r\n    let { page } = this.state;\r\n    page = pageNo.page;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    this.getProjects();\r\n  };\r\n  // pagination\r\n  // handlePagination = page => {\r\n  //   this.queryHandler(page);\r\n  // };\r\n\r\n  handleClick = key => {\r\n    if (!this.state.active) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      active: !prevState.active,\r\n      currentIndex: key,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleClick();\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formField } = this.state;\r\n    formField[name] = value;\r\n    await this.setState({\r\n      formField,\r\n    });\r\n  };\r\n\r\n  handleSearch = () => {\r\n    this.getProjects();\r\n    console.log(\"projectStatusList\", this.props.projectStatusList);\r\n  };\r\n\r\n  // seach change with api call\r\n  // handlesearch = event => {\r\n  //   event.persist();\r\n\r\n  //   if (!this.debouncedFn) {\r\n  //     this.debouncedFn = _.debounce(() => {\r\n  //       let searchString = event.target.value;\r\n  //       let data = { search: searchString };\r\n  //       this.queryHandler(data);\r\n  //     }, 500);\r\n  //   }\r\n  //   this.debouncedFn();\r\n  // };\r\n\r\n  // getProject = async data => {\r\n  //   this.updateState({ isLoading: true });\r\n  //   let { search } = this.state;\r\n  //   let { page = 1, limit = 10 } = data;\r\n  //   await this.props\r\n  //     .getProject(`?page=${page}&limit=${limit}&search=${search}`)\r\n  //     .then(res => {\r\n  //       let { data } = res;\r\n  //       console.log(data);\r\n  //       //  let { customerDetails } = this.props;\r\n  //       this.updateState({\r\n  //         customerList: data.dataList,\r\n  //         meta: data.meta?.pagination,\r\n  //         isLoading: false,\r\n  //       });\r\n  //     });\r\n  // };\r\n\r\n  // api call for staff\r\n  // queryHandler = async data => {\r\n  //   this.updateState({ is_loading: true });\r\n  //   let { page = 1, limit = 10 } = data;\r\n  //   await this.props.getProject(\r\n  //     `?page=${page}&limit=${limit}`\r\n  //   );\r\n  //   let { projectDetails } = this.props;\r\n  //   let { projectList, pageMeta } = this.state;\r\n  //   projectList = projectDetails.data;\r\n  //   pageMeta = projectDetails.meta?.pagination;\r\n  //   this.updateState({\r\n  //     projectList,\r\n  //     pageMeta,\r\n  //     is_loading: false,\r\n  //   });\r\n  // };\r\n\r\n  // delete api call for staff\r\n  handleDeleteProject = id => {\r\n    this.props.deleteProject(`${id}/`).then(res => this.getProjects({}));\r\n  };\r\n  handleClick = key => {\r\n    if (!this.state.visible) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      visible: !prevState.visible,\r\n    }));\r\n  };\r\n  handleCustomerSearch = async event => {\r\n    // event.persist();\r\n    let { formField, visible } = this.state;\r\n    formField.custName = event.target.value;\r\n    await this.setState({ formField, visible: true });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {\r\n        this.search();\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n  search = searchString => {\r\n    let { formField } = this.state;\r\n    this.props\r\n      .getCommonApi(`custappt/?search=${formField.custName}`)\r\n      .then(key => {\r\n        let { status, data } = key;\r\n\r\n        if (status === 200) {\r\n          this.setState({ customerOption: data });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleSelectCustomer = async data => {\r\n    let { formField } = this.state;\r\n    formField[\"custName\"] = data.cust_name;\r\n    await this.setState({\r\n      formField,\r\n      customerOption: [],\r\n    });\r\n    this.handleClick();\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      pageMeta,\r\n      projectList,\r\n      formField,\r\n      statusOption,\r\n      customerOption,\r\n      visible,\r\n    } = this.state;\r\n    let { tokenDetail } = this.props;\r\n\r\n    let { projectTitle, status, custName } = formField;\r\n\r\n    let { t } = this.props;\r\n\r\n    return (\r\n      <div className=\"project-section col-md-10 align-items-center\">\r\n        <div className=\"col-md-12 d-flex\">\r\n          {/* <p className=\"label-head mb-4\">{t(\"Project Listing\")}</p> */}\r\n          <p className=\"label-head mb-4\">{t(\"Project\")}</p>\r\n        </div>\r\n\r\n        <div className=\"row m-0 filter\">\r\n          <div className=\"col-md-4 col-12\">\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                {t(\"Project Title\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalInput\r\n                  value={projectTitle}\r\n                  name=\"projectTitle\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-5 col-12\">\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                {t(\"Customer Name\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalInput\r\n                  placeholder=\"Search Customer..\"\r\n                  value={custName}\r\n                  name=\"custName\"\r\n                  onChange={this.handleCustomerSearch}\r\n                  onClick={this.handleClick}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3 col-12\">\r\n            <NormalButton\r\n              buttonClass={\"mx-2 mb-3\"}\r\n              mainbg={true}\r\n              className=\"confirm\"\r\n              label=\"Search\"\r\n              outline={false}\r\n              onClick={this.handleSearch}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row m-0 filter\">\r\n          <div className=\"col-md-9 col-12\">\r\n            <div className=\"d-flex mb-2\">\r\n              <label className=\"text-black common-label-text mr-2\">\r\n                {t(\"Status\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                {/* <NormalInput\r\n                  value={status}\r\n                  name=\"status\"\r\n                  onChange={this.handleChange}\r\n                /> */}\r\n                <NormalMultiSelect\r\n                  options={statusOption}\r\n                  // value={status}\r\n                  // name=\"status\"\r\n                  handleMultiSelect={this.handleMultiSelect}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"col-md-2 col-12\"></div> */}\r\n\r\n          <div className=\"col-md-3 col-12\">\r\n            <NormalButton\r\n              buttonClass={\"mx-2\"}\r\n              mainbg={true}\r\n              className=\"confirm\"\r\n              label=\"Add project\"\r\n              onClick={() => this.props.history.push(\"project/add\")}\r\n            />\r\n          </div>\r\n        </div>\r\n        {visible ? (\r\n          <CustomerSearch\r\n            t={t}\r\n            customerOption={customerOption}\r\n            handleSelectCustomer={item => this.handleSelectCustomer(item)}\r\n          />\r\n        ) : null}\r\n        <div className=\"project-table\">\r\n          <div className=\"py-4\">\r\n            <div className=\"table-container\">\r\n              <TableWrapper\r\n                headerDetails={headerDetails}\r\n                queryHandler={this.handlePagination}\r\n                pageMeta={pageMeta}\r\n              >\r\n                {projectList\r\n                  ? projectList.map((item, index) => {\r\n                      let { title, customer_name, status, id } = item;\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {title}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {customer_name}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {status}\r\n                            </div>\r\n                          </td>\r\n\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              <img\r\n                                src={updateBtn}\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                                alt=\"\"\r\n                                className=\"action-img bg-transparent\"\r\n                                onClick={() =>\r\n                                  this.props.history.push(\r\n                                    `/admin/project/${id}/editProject`\r\n                                  )\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </td>\r\n\r\n                          <td>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              <img\r\n                                src={deleteBtn}\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                                alt=\"\"\r\n                                className=\"action-img bg-transparent\"\r\n                                onClick={() => this.handleDeleteProject(id)}\r\n                              />\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </TableWrapper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  tokenDetail: state.authStore.tokenDetails,\r\n  // projectStatusList: state.common.projectStatusList,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      deleteProject,\r\n      getTokenDetails,\r\n      // getProjectStatus,\r\n      // getJobtitle,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const ListProject = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(ListProjectClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}