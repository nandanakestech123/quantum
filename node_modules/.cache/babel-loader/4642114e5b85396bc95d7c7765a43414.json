{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart_components/zoom_and_pan.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.default = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _wheel = require(\"../../events/core/wheel\");\n\nvar transformEvents = _interopRequireWildcard(require(\"../../events/transform\"));\n\nvar _drag = require(\"../../events/drag\");\n\nfunction _getRequireWildcardCache() {\n  if (\"function\" !== typeof WeakMap) {\n    return null;\n  }\n\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar EVENTS_NS = \".zoomAndPanNS\";\nvar DRAG_START_EVENT_NAME = _drag.start + EVENTS_NS;\nvar DRAG_EVENT_NAME = _drag.move + EVENTS_NS;\nvar DRAG_END_EVENT_NAME = _drag.end + EVENTS_NS;\nvar PINCH_START_EVENT_NAME = transformEvents.pinchstart + EVENTS_NS;\nvar PINCH_EVENT_NAME = transformEvents.pinch + EVENTS_NS;\nvar PINCH_END_EVENT_NAME = transformEvents.pinchend + EVENTS_NS;\nvar SCROLL_BAR_START_EVENT_NAME = \"dxc-scroll-start\" + EVENTS_NS;\nvar SCROLL_BAR_MOVE_EVENT_NAME = \"dxc-scroll-move\" + EVENTS_NS;\nvar SCROLL_BAR_END_EVENT_NAME = \"dxc-scroll-end\" + EVENTS_NS;\nvar GESTURE_TIMEOUT = 300;\nvar MIN_DRAG_DELTA = 5;\nvar _min = Math.min;\nvar _max = Math.max;\nvar _abs = Math.abs;\n\nfunction canvasToRect(canvas) {\n  return {\n    x: canvas.left,\n    y: canvas.top,\n    width: canvas.width - canvas.left - canvas.right,\n    height: canvas.height - canvas.top - canvas.bottom\n  };\n}\n\nfunction checkCoords(rect, coords) {\n  var x = coords.x;\n  var y = coords.y;\n  return x >= rect.x && x <= rect.width + rect.x && y >= rect.y && y <= rect.height + rect.y;\n}\n\nfunction sortAxes(axes, onlyAxisToNotify) {\n  if (onlyAxisToNotify) {\n    axes = axes.sort(function (a, b) {\n      if (a === onlyAxisToNotify) {\n        return -1;\n      }\n\n      if (b === onlyAxisToNotify) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  return axes;\n}\n\nfunction isNotEmptyAxisBusinessRange(axis) {\n  return !axis.getTranslator().getBusinessRange().isEmpty();\n}\n\nfunction axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e) {\n  var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\n  var range = getRange(axis);\n\n  var _axis$checkZoomingLow = axis.checkZoomingLowerLimitOvercome(actionField, scale, range),\n      stopInteraction = _axis$checkZoomingLow.stopInteraction,\n      correctedRange = _axis$checkZoomingLow.correctedRange;\n\n  var result = axis.handleZooming(stopInteraction ? null : correctedRange, getParameters(silent), e, actionField);\n  stopInteraction && axis.handleZoomEnd();\n  return {\n    stopInteraction: stopInteraction,\n    result: result\n  };\n}\n\nvar _default = {\n  name: \"zoom_and_pan\",\n  init: function () {\n    var chart = this;\n    var renderer = this._renderer;\n\n    function cancelEvent(e) {\n      if (e.originalEvent) {\n        cancelEvent(e.originalEvent);\n      }\n\n      if (false !== e.cancelable) {\n        e.cancel = true;\n      }\n    }\n\n    function startAxesViewportChanging(zoomAndPan, actionField, e) {\n      var options = zoomAndPan.options;\n      var actionData = zoomAndPan.actionData;\n      var axes = [];\n\n      if (options.argumentAxis[actionField]) {\n        axes.push(chart.getArgumentAxis());\n      }\n\n      if (options.valueAxis[actionField]) {\n        axes = axes.concat(actionData.valueAxes);\n      }\n\n      axes.reduce(function (isPrevented, axis) {\n        if (isPrevented) {\n          return isPrevented;\n        }\n\n        if (isNotEmptyAxisBusinessRange(axis)) {\n          return axis.handleZooming(null, {\n            end: true\n          }, e, actionField).isPrevented;\n        }\n\n        return isPrevented;\n      }, false) && cancelEvent(e);\n    }\n\n    function axesViewportChanging(zoomAndPan, actionField, e, offsetCalc, centerCalc) {\n      function zoomAxes(axes, criteria, coordField, e, actionData) {\n        var zoom = {\n          zoomed: false\n        };\n        criteria && axes.filter(isNotEmptyAxisBusinessRange).forEach(function (axis) {\n          var options = axis.getOptions();\n          var viewport = axis.visualRange();\n          var scale = axis.getTranslator().getEventScale(e);\n          var translate = -offsetCalc(e, actionData, coordField, scale);\n          zoom = (0, _extend.extend)(true, zoom, axis.getTranslator().zoom(translate, scale, axis.getZoomBounds()));\n          var range = axis.adjustRange((0, _utils.getVizRangeObject)([zoom.min, zoom.max]));\n\n          var _axis$checkZoomingLow2 = axis.checkZoomingLowerLimitOvercome(actionField, scale, range),\n              stopInteraction = _axis$checkZoomingLow2.stopInteraction,\n              correctedRange = _axis$checkZoomingLow2.correctedRange;\n\n          if (!(0, _type.isDefined)(viewport) || viewport.startValue.valueOf() !== correctedRange.startValue.valueOf() || viewport.endValue.valueOf() !== correctedRange.endValue.valueOf()) {\n            axis.handleZooming(stopInteraction ? null : correctedRange, {\n              start: true,\n              end: true\n            }, e, actionField);\n\n            if (!stopInteraction) {\n              zoom.zoomed = true;\n              zoom.deltaTranslate = translate - zoom.translate;\n            }\n          } else {\n            if (\"touch\" === e.pointerType && \"discrete\" === options.type) {\n              var isMinPosition = axis.isExtremePosition(false);\n              var isMaxPosition = axis.isExtremePosition(true);\n              var zoomInEnabled = scale > 1 && !stopInteraction;\n              var zoomOutEnabled = scale < 1 && (!isMinPosition || !isMaxPosition);\n              var panningEnabled = 1 === scale && !(isMinPosition && (translate < 0 && !options.inverted || translate > 0 && options.inverted) || isMaxPosition && (translate > 0 && !options.inverted || translate < 0 && options.inverted));\n              zoom.enabled = zoomInEnabled || zoomOutEnabled || panningEnabled;\n            }\n          }\n        });\n        return zoom;\n      }\n\n      function storeOffset(e, actionData, zoom, coordField) {\n        if (zoom.zoomed) {\n          actionData.offset[coordField] = (e.offset ? e.offset[coordField] : actionData.offset[coordField]) + zoom.deltaTranslate;\n        }\n      }\n\n      function storeCenter(center, actionData, zoom, coordField) {\n        if (zoom.zoomed) {\n          actionData.center[coordField] = center[coordField] + zoom.deltaTranslate;\n        }\n      }\n\n      var rotated = chart.option(\"rotated\");\n      var actionData = zoomAndPan.actionData;\n      var options = zoomAndPan.options;\n      var argZoom = {};\n      var valZoom = {};\n\n      if (!actionData.fallback) {\n        argZoom = zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData);\n        valZoom = zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData);\n\n        chart._requestChange([\"VISUAL_RANGE\"]);\n\n        storeOffset(e, actionData, argZoom, rotated ? \"y\" : \"x\");\n        storeOffset(e, actionData, valZoom, rotated ? \"x\" : \"y\");\n      }\n\n      var center = centerCalc(e);\n      storeCenter(center, actionData, argZoom, rotated ? \"y\" : \"x\");\n      storeCenter(center, actionData, valZoom, rotated ? \"x\" : \"y\");\n\n      if (!argZoom.zoomed && !valZoom.zoomed) {\n        actionData.center = center;\n      }\n\n      return argZoom.zoomed || valZoom.zoomed || actionData.fallback || argZoom.enabled || valZoom.enabled;\n    }\n\n    function finishAxesViewportChanging(zoomAndPan, actionField, e, offsetCalc) {\n      function zoomAxes(axes, criteria, coordField, actionData, onlyAxisToNotify) {\n        var zoomStarted = false;\n        var scale = e.scale || 1;\n\n        var getRange = function (axis) {\n          var zoom = axis.getTranslator().zoom(-offsetCalc(e, actionData, coordField, scale), scale, axis.getZoomBounds());\n          return {\n            startValue: zoom.min,\n            endValue: zoom.max\n          };\n        };\n\n        var getParameters = function (silent) {\n          return {\n            start: true,\n            end: silent\n          };\n        };\n\n        criteria && axes.forEach(function (axis) {\n          zoomStarted = !axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e).stopInteraction;\n        });\n        return zoomStarted;\n      }\n\n      var rotated = chart.option(\"rotated\");\n      var actionData = zoomAndPan.actionData;\n      var options = zoomAndPan.options;\n      var zoomStarted = true;\n\n      if (actionData.fallback) {\n        zoomStarted &= zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", actionData, chart.getArgumentAxis());\n        zoomStarted |= zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", actionData);\n      } else {\n        var axes = [];\n\n        if (options.argumentAxis[actionField]) {\n          axes.push(chart.getArgumentAxis());\n        }\n\n        if (options.valueAxis[actionField]) {\n          axes = axes.concat(actionData.valueAxes);\n        }\n\n        axes.filter(isNotEmptyAxisBusinessRange).forEach(function (axis) {\n          axis.handleZooming(null, {\n            start: true\n          }, e, actionField);\n        });\n        zoomStarted = zoomStarted && axes.length;\n      }\n\n      zoomStarted && chart._requestChange([\"VISUAL_RANGE\"]);\n    }\n\n    function prepareActionData(coords, action) {\n      var axes = chart._argumentAxes.filter(function (axis) {\n        return checkCoords(canvasToRect(axis.getCanvas()), coords);\n      });\n\n      return {\n        fallback: chart._lastRenderingTime > GESTURE_TIMEOUT,\n        cancel: !axes.length || !(0, _type.isDefined)(action),\n        action: action,\n        curAxisRect: axes.length && canvasToRect(axes[0].getCanvas()),\n        valueAxes: axes.length && chart._valueAxes.filter(function (axis) {\n          return checkCoords(canvasToRect(axis.getCanvas()), coords);\n        }),\n        offset: {\n          x: 0,\n          y: 0\n        },\n        center: coords,\n        startCenter: coords\n      };\n    }\n\n    function getPointerCoord(rect, e) {\n      var rootOffset = renderer.getRootOffset();\n      return {\n        x: _min(_max(e.pageX - rootOffset.left, rect.x), rect.width + rect.x),\n        y: _min(_max(e.pageY - rootOffset.top, rect.y), rect.height + rect.y)\n      };\n    }\n\n    function calcCenterForPinch(e) {\n      var rootOffset = renderer.getRootOffset();\n      var x1 = e.pointers[0].pageX;\n      var x2 = e.pointers[1].pageX;\n      var y1 = e.pointers[0].pageY;\n      var y2 = e.pointers[1].pageY;\n      return {\n        x: _min(x1, x2) + _abs(x2 - x1) / 2 - rootOffset.left,\n        y: _min(y1, y2) + _abs(y2 - y1) / 2 - rootOffset.top\n      };\n    }\n\n    function calcCenterForDrag(e) {\n      var rootOffset = renderer.getRootOffset();\n      return {\n        x: e.pageX - rootOffset.left,\n        y: e.pageY - rootOffset.top\n      };\n    }\n\n    function calcOffsetForDrag(e, actionData, coordField) {\n      return e.offset[coordField] - actionData.offset[coordField];\n    }\n\n    function preventDefaults(e) {\n      if (false !== e.cancelable) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      chart._stopCurrentHandling();\n    }\n\n    var zoomAndPan = {\n      dragStartHandler: function (e) {\n        var options = zoomAndPan.options;\n        var isTouch = \"touch\" === e.pointerType;\n        var wantPan = options.argumentAxis.pan || options.valueAxis.pan;\n        var wantZoom = options.argumentAxis.zoom || options.valueAxis.zoom;\n        var panKeyPressed = (0, _type.isDefined)(options.panKey) && e[(0, _utils.normalizeEnum)(options.panKey) + \"Key\"];\n        var dragToZoom = options.dragToZoom;\n        var action;\n        e._cancelPreventDefault = true;\n\n        if (isTouch) {\n          if (options.allowTouchGestures && wantPan) {\n            var cancelPanning = !zoomAndPan.panningVisualRangeEnabled() || zoomAndPan.skipEvent;\n            action = cancelPanning ? null : \"pan\";\n          }\n        } else {\n          if (dragToZoom && wantPan && panKeyPressed) {\n            action = \"pan\";\n          } else {\n            if (!dragToZoom && wantPan) {\n              action = \"pan\";\n            } else {\n              if (dragToZoom && wantZoom) {\n                action = \"zoom\";\n              }\n            }\n          }\n        }\n\n        var actionData = prepareActionData(calcCenterForDrag(e), action);\n\n        if (actionData.cancel) {\n          zoomAndPan.skipEvent = false;\n\n          if (false !== e.cancelable) {\n            e.cancel = true;\n          }\n\n          return;\n        }\n\n        zoomAndPan.actionData = actionData;\n\n        if (\"zoom\" === action) {\n          actionData.startCoords = getPointerCoord(actionData.curAxisRect, e);\n          actionData.rect = renderer.rect(0, 0, 0, 0).attr(options.dragBoxStyle).append(renderer.root);\n        } else {\n          startAxesViewportChanging(zoomAndPan, \"pan\", e);\n        }\n      },\n      dragHandler: function (e) {\n        var rotated = chart.option(\"rotated\");\n        var options = zoomAndPan.options;\n        var actionData = zoomAndPan.actionData;\n        var isTouch = \"touch\" === e.pointerType;\n        e._cancelPreventDefault = true;\n\n        if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled()) {\n          return;\n        }\n\n        if (\"zoom\" === actionData.action) {\n          preventDefaults(e);\n          var curCanvas = actionData.curAxisRect;\n          var startCoords = actionData.startCoords;\n          var curCoords = getPointerCoord(curCanvas, e);\n          var zoomArg = options.argumentAxis.zoom;\n          var zoomVal = options.valueAxis.zoom;\n          var rect = {\n            x: _min(startCoords.x, curCoords.x),\n            y: _min(startCoords.y, curCoords.y),\n            width: _abs(startCoords.x - curCoords.x),\n            height: _abs(startCoords.y - curCoords.y)\n          };\n\n          if (!zoomArg || !zoomVal) {\n            if (!zoomArg && !rotated || !zoomVal && rotated) {\n              rect.x = curCanvas.x;\n              rect.width = curCanvas.width;\n            } else {\n              rect.y = curCanvas.y;\n              rect.height = curCanvas.height;\n            }\n          }\n\n          actionData.rect.attr(rect);\n        } else {\n          if (\"pan\" === actionData.action) {\n            axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, function (e) {\n              return e.offset;\n            });\n            var deltaOffsetY = Math.abs(e.offset.y - actionData.offset.y);\n            var deltaOffsetX = Math.abs(e.offset.x - actionData.offset.x);\n\n            if (isTouch && (deltaOffsetY > MIN_DRAG_DELTA && deltaOffsetY > Math.abs(actionData.offset.x) || deltaOffsetX > MIN_DRAG_DELTA && deltaOffsetX > Math.abs(actionData.offset.y))) {\n              return;\n            }\n\n            preventDefaults(e);\n          }\n        }\n      },\n      dragEndHandler: function (e) {\n        var rotated = chart.option(\"rotated\");\n        var options = zoomAndPan.options;\n        var actionData = zoomAndPan.actionData;\n        var isTouch = \"touch\" === e.pointerType;\n        var panIsEmpty = actionData && \"pan\" === actionData.action && !actionData.fallback && 0 === actionData.offset.x && 0 === actionData.offset.y;\n\n        if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled() || panIsEmpty) {\n          return;\n        }\n\n        (!isTouch || !zoomAndPan.actionData.isNative) && preventDefaults(e);\n\n        if (\"zoom\" === actionData.action) {\n          var zoomAxes = function (axes, criteria, coordField, startCoords, curCoords, onlyAxisToNotify) {\n            axes = sortAxes(axes, onlyAxisToNotify);\n            var curCoord = curCoords[coordField];\n            var startCoord = startCoords[coordField];\n            var zoomStarted = false;\n\n            var getParameters = function (silent) {\n              return {\n                start: !!silent,\n                end: !!silent\n              };\n            };\n\n            if (criteria && _abs(curCoord - startCoord) > MIN_DRAG_DELTA) {\n              axes.some(function (axis) {\n                var tr = axis.getTranslator();\n\n                if (tr.getBusinessRange().isEmpty()) {\n                  return;\n                }\n\n                var getRange = function () {\n                  return [tr.from(startCoord), tr.from(curCoord)];\n                };\n\n                var _axisZoom = axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionData.action, tr.getMinScale(true), e),\n                    stopInteraction = _axisZoom.stopInteraction,\n                    result = _axisZoom.result;\n\n                zoomStarted = !stopInteraction;\n                return onlyAxisToNotify && result.isPrevented;\n              });\n            }\n\n            return zoomStarted;\n          };\n\n          var curCoords = getPointerCoord(actionData.curAxisRect, e);\n          var argumentAxesZoomed = zoomAxes(chart._argumentAxes, options.argumentAxis.zoom, rotated ? \"y\" : \"x\", actionData.startCoords, curCoords, chart.getArgumentAxis());\n          var valueAxesZoomed = zoomAxes(actionData.valueAxes, options.valueAxis.zoom, rotated ? \"x\" : \"y\", actionData.startCoords, curCoords);\n\n          if (valueAxesZoomed || argumentAxesZoomed) {\n            chart._requestChange([\"VISUAL_RANGE\"]);\n          }\n\n          actionData.rect.dispose();\n        } else {\n          if (\"pan\" === actionData.action) {\n            finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\n          }\n        }\n\n        zoomAndPan.actionData = null;\n      },\n      pinchStartHandler: function (e) {\n        var actionData = prepareActionData(calcCenterForPinch(e), \"zoom\");\n        actionData.isNative = !zoomAndPan.panningVisualRangeEnabled();\n\n        if (actionData.cancel) {\n          cancelEvent(e);\n          return;\n        }\n\n        zoomAndPan.actionData = actionData;\n        startAxesViewportChanging(zoomAndPan, \"zoom\", e);\n      },\n      pinchHandler: function (e) {\n        if (!zoomAndPan.actionData) {\n          return;\n        }\n\n        var viewportChanged = axesViewportChanging(zoomAndPan, \"zoom\", e, function (e, actionData, coordField, scale) {\n          return calcCenterForPinch(e)[coordField] - actionData.center[coordField] + (actionData.center[coordField] - actionData.center[coordField] * scale);\n        }, calcCenterForPinch);\n        zoomAndPan.defineTouchBehavior(!viewportChanged, e);\n        !viewportChanged && (zoomAndPan.actionData = null);\n      },\n      pinchEndHandler: function (e) {\n        if (!zoomAndPan.actionData) {\n          return;\n        }\n\n        finishAxesViewportChanging(zoomAndPan, \"zoom\", e, function (e, actionData, coordField, scale) {\n          return actionData.center[coordField] - actionData.startCenter[coordField] + (actionData.startCenter[coordField] - actionData.startCenter[coordField] * scale);\n        });\n        zoomAndPan.actionData = null;\n      },\n      cleanup: function () {\n        renderer.root.off(EVENTS_NS);\n        zoomAndPan.actionData && zoomAndPan.actionData.rect && zoomAndPan.actionData.rect.dispose();\n        zoomAndPan.actionData = null;\n        renderer.root.css({\n          \"touch-action\": \"\",\n          \"-ms-touch-action\": \"\"\n        });\n      },\n      setup: function (options) {\n        zoomAndPan.cleanup();\n\n        if (!options.argumentAxis.pan) {\n          renderer.root.on(SCROLL_BAR_START_EVENT_NAME, cancelEvent);\n        }\n\n        if (options.argumentAxis.none && options.valueAxis.none) {\n          return;\n        }\n\n        zoomAndPan.options = options;\n        var rotated = chart.option(\"rotated\");\n\n        if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowMouseWheel) {\n          renderer.root.on(_wheel.name + EVENTS_NS, function (e) {\n            function zoomAxes(axes, coord, delta, onlyAxisToNotify) {\n              axes = sortAxes(axes, onlyAxisToNotify);\n              var zoomStarted = false;\n\n              var getParameters = function (silent) {\n                return {\n                  start: !!silent,\n                  end: !!silent\n                };\n              };\n\n              axes.some(function (axis) {\n                var translator = axis.getTranslator();\n\n                if (translator.getBusinessRange().isEmpty()) {\n                  return;\n                }\n\n                var scale = translator.getMinScale(delta > 0);\n\n                var getRange = function () {\n                  var zoom = translator.zoom(-(coord - coord * scale), scale, axis.getZoomBounds());\n                  return {\n                    startValue: zoom.min,\n                    endValue: zoom.max\n                  };\n                };\n\n                var _axisZoom2 = axisZoom(axis, onlyAxisToNotify, getRange, getParameters, \"zoom\", scale, e),\n                    stopInteraction = _axisZoom2.stopInteraction,\n                    result = _axisZoom2.result;\n\n                zoomStarted = !stopInteraction;\n                return onlyAxisToNotify && result.isPrevented;\n              });\n              return zoomStarted;\n            }\n\n            var coords = calcCenterForDrag(e);\n            var axesZoomed = false;\n            var targetAxes;\n\n            if (options.valueAxis.zoom) {\n              targetAxes = chart._valueAxes.filter(function (axis) {\n                return checkCoords(canvasToRect(axis.getCanvas()), coords);\n              });\n\n              if (0 === targetAxes.length) {\n                var targetCanvas = chart._valueAxes.reduce(function (r, axis) {\n                  if (!r && axis.coordsIn(coords.x, coords.y)) {\n                    r = axis.getCanvas();\n                  }\n\n                  return r;\n                }, null);\n\n                if (targetCanvas) {\n                  targetAxes = chart._valueAxes.filter(function (axis) {\n                    return checkCoords(canvasToRect(axis.getCanvas()), {\n                      x: targetCanvas.left,\n                      y: targetCanvas.top\n                    });\n                  });\n                }\n              }\n\n              axesZoomed |= zoomAxes(targetAxes, rotated ? coords.x : coords.y, e.delta);\n            }\n\n            if (options.argumentAxis.zoom) {\n              var canZoom = chart._argumentAxes.some(function (axis) {\n                if (checkCoords(canvasToRect(axis.getCanvas()), coords) || axis.coordsIn(coords.x, coords.y)) {\n                  return true;\n                }\n\n                return false;\n              });\n\n              axesZoomed |= canZoom && zoomAxes(chart._argumentAxes, rotated ? coords.y : coords.x, e.delta, chart.getArgumentAxis());\n            }\n\n            if (axesZoomed) {\n              chart._requestChange([\"VISUAL_RANGE\"]);\n\n              zoomAndPan.panningVisualRangeEnabled(targetAxes) && preventDefaults(e);\n            }\n          });\n        }\n\n        if (options.allowTouchGestures) {\n          if (options.argumentAxis.zoom || options.valueAxis.zoom) {\n            renderer.root.on(PINCH_START_EVENT_NAME, {\n              passive: false\n            }, zoomAndPan.pinchStartHandler).on(PINCH_EVENT_NAME, {\n              passive: false\n            }, zoomAndPan.pinchHandler).on(PINCH_END_EVENT_NAME, zoomAndPan.pinchEndHandler);\n          }\n        }\n\n        renderer.root.on(DRAG_START_EVENT_NAME, {\n          immediate: true,\n          passive: false\n        }, zoomAndPan.dragStartHandler).on(DRAG_EVENT_NAME, {\n          immediate: true,\n          passive: false\n        }, zoomAndPan.dragHandler).on(DRAG_END_EVENT_NAME, zoomAndPan.dragEndHandler);\n\n        if (options.argumentAxis.pan) {\n          renderer.root.on(SCROLL_BAR_START_EVENT_NAME, function (e) {\n            zoomAndPan.actionData = {\n              valueAxes: [],\n              offset: {\n                x: 0,\n                y: 0\n              },\n              center: {\n                x: 0,\n                y: 0\n              }\n            };\n            preventDefaults(e);\n            startAxesViewportChanging(zoomAndPan, \"pan\", e);\n          }).on(SCROLL_BAR_MOVE_EVENT_NAME, function (e) {\n            preventDefaults(e);\n            axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, function (e) {\n              return e.offset;\n            });\n          }).on(SCROLL_BAR_END_EVENT_NAME, function (e) {\n            preventDefaults(e);\n            finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\n            zoomAndPan.actionData = null;\n          });\n        }\n      },\n      defineTouchBehavior: function (isDefault, e) {\n        zoomAndPan.actionData && (zoomAndPan.actionData.isNative = isDefault);\n\n        if (!isDefault) {\n          preventDefaults(e);\n        }\n      },\n      panningVisualRangeEnabled: function (targetAxes) {\n        if (null !== targetAxes && void 0 !== targetAxes && targetAxes.length) {\n          return targetAxes.some(function (axis) {\n            return !axis.isExtremePosition(false) || !axis.isExtremePosition(true);\n          });\n        }\n\n        var enablePanByValueAxis = chart._valueAxes.some(function (axis) {\n          return !axis.isExtremePosition(false) || !axis.isExtremePosition(true);\n        });\n\n        var enablePanByArgumentAxis = chart._argumentAxes.some(function (axis) {\n          return !axis.isExtremePosition(false) || !axis.isExtremePosition(true);\n        });\n\n        return enablePanByValueAxis || enablePanByArgumentAxis;\n      }\n    };\n    this._zoomAndPan = zoomAndPan;\n  },\n  members: {\n    _setupZoomAndPan: function () {\n      this._zoomAndPan.setup(this._themeManager.getOptions(\"zoomAndPan\"));\n    }\n  },\n  dispose: function () {\n    this._zoomAndPan.cleanup();\n  },\n  customize: function (constructor) {\n    constructor.addChange({\n      code: \"ZOOM_AND_PAN\",\n      handler: function () {\n        this._setupZoomAndPan();\n      },\n      isThemeDependent: true,\n      isOptionChange: true,\n      option: \"zoomAndPan\"\n    });\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/chart_components/zoom_and_pan.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","default","_type","require","_extend","_utils","_wheel","transformEvents","_interopRequireWildcard","_drag","_getRequireWildcardCache","WeakMap","cache","__esModule","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","EVENTS_NS","DRAG_START_EVENT_NAME","start","DRAG_EVENT_NAME","move","DRAG_END_EVENT_NAME","end","PINCH_START_EVENT_NAME","pinchstart","PINCH_EVENT_NAME","pinch","PINCH_END_EVENT_NAME","pinchend","SCROLL_BAR_START_EVENT_NAME","SCROLL_BAR_MOVE_EVENT_NAME","SCROLL_BAR_END_EVENT_NAME","GESTURE_TIMEOUT","MIN_DRAG_DELTA","_min","Math","min","_max","max","_abs","abs","canvasToRect","canvas","x","left","y","top","width","right","height","bottom","checkCoords","rect","coords","sortAxes","axes","onlyAxisToNotify","sort","a","b","isNotEmptyAxisBusinessRange","axis","getTranslator","getBusinessRange","isEmpty","axisZoom","getRange","getParameters","actionField","scale","e","silent","range","_axis$checkZoomingLow","checkZoomingLowerLimitOvercome","stopInteraction","correctedRange","result","handleZooming","handleZoomEnd","_default","name","init","chart","renderer","_renderer","cancelEvent","originalEvent","cancelable","cancel","startAxesViewportChanging","zoomAndPan","options","actionData","argumentAxis","push","getArgumentAxis","valueAxis","concat","valueAxes","reduce","isPrevented","axesViewportChanging","offsetCalc","centerCalc","zoomAxes","criteria","coordField","zoom","zoomed","filter","forEach","getOptions","viewport","visualRange","getEventScale","translate","extend","getZoomBounds","adjustRange","getVizRangeObject","_axis$checkZoomingLow2","isDefined","startValue","valueOf","endValue","deltaTranslate","pointerType","type","isMinPosition","isExtremePosition","isMaxPosition","zoomInEnabled","zoomOutEnabled","panningEnabled","inverted","enabled","storeOffset","offset","storeCenter","center","rotated","option","argZoom","valZoom","fallback","_argumentAxes","_requestChange","finishAxesViewportChanging","zoomStarted","length","prepareActionData","action","getCanvas","_lastRenderingTime","curAxisRect","_valueAxes","startCenter","getPointerCoord","rootOffset","getRootOffset","pageX","pageY","calcCenterForPinch","x1","pointers","x2","y1","y2","calcCenterForDrag","calcOffsetForDrag","preventDefaults","preventDefault","stopPropagation","_stopCurrentHandling","dragStartHandler","isTouch","wantPan","pan","wantZoom","panKeyPressed","panKey","normalizeEnum","dragToZoom","_cancelPreventDefault","allowTouchGestures","cancelPanning","panningVisualRangeEnabled","skipEvent","startCoords","attr","dragBoxStyle","append","root","dragHandler","curCanvas","curCoords","zoomArg","zoomVal","deltaOffsetY","deltaOffsetX","dragEndHandler","panIsEmpty","isNative","curCoord","startCoord","some","tr","from","_axisZoom","getMinScale","argumentAxesZoomed","valueAxesZoomed","dispose","pinchStartHandler","pinchHandler","viewportChanged","defineTouchBehavior","pinchEndHandler","cleanup","off","css","setup","on","none","allowMouseWheel","coord","delta","translator","_axisZoom2","axesZoomed","targetAxes","targetCanvas","r","coordsIn","canZoom","passive","immediate","isDefault","enablePanByValueAxis","enablePanByArgumentAxis","_zoomAndPan","members","_setupZoomAndPan","_themeManager","customize","addChange","code","handler","isThemeDependent","isOptionChange","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart_components/zoom_and_pan.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _wheel = require(\"../../events/core/wheel\");\r\nvar transformEvents = _interopRequireWildcard(require(\"../../events/transform\"));\r\nvar _drag = require(\"../../events/drag\");\r\n\r\nfunction _getRequireWildcardCache() {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cache = new WeakMap;\r\n    _getRequireWildcardCache = function() {\r\n        return cache\r\n    };\r\n    return cache\r\n}\r\n\r\nfunction _interopRequireWildcard(obj) {\r\n    if (obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache();\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\nvar EVENTS_NS = \".zoomAndPanNS\";\r\nvar DRAG_START_EVENT_NAME = _drag.start + EVENTS_NS;\r\nvar DRAG_EVENT_NAME = _drag.move + EVENTS_NS;\r\nvar DRAG_END_EVENT_NAME = _drag.end + EVENTS_NS;\r\nvar PINCH_START_EVENT_NAME = transformEvents.pinchstart + EVENTS_NS;\r\nvar PINCH_EVENT_NAME = transformEvents.pinch + EVENTS_NS;\r\nvar PINCH_END_EVENT_NAME = transformEvents.pinchend + EVENTS_NS;\r\nvar SCROLL_BAR_START_EVENT_NAME = \"dxc-scroll-start\" + EVENTS_NS;\r\nvar SCROLL_BAR_MOVE_EVENT_NAME = \"dxc-scroll-move\" + EVENTS_NS;\r\nvar SCROLL_BAR_END_EVENT_NAME = \"dxc-scroll-end\" + EVENTS_NS;\r\nvar GESTURE_TIMEOUT = 300;\r\nvar MIN_DRAG_DELTA = 5;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _abs = Math.abs;\r\n\r\nfunction canvasToRect(canvas) {\r\n    return {\r\n        x: canvas.left,\r\n        y: canvas.top,\r\n        width: canvas.width - canvas.left - canvas.right,\r\n        height: canvas.height - canvas.top - canvas.bottom\r\n    }\r\n}\r\n\r\nfunction checkCoords(rect, coords) {\r\n    var x = coords.x;\r\n    var y = coords.y;\r\n    return x >= rect.x && x <= rect.width + rect.x && y >= rect.y && y <= rect.height + rect.y\r\n}\r\n\r\nfunction sortAxes(axes, onlyAxisToNotify) {\r\n    if (onlyAxisToNotify) {\r\n        axes = axes.sort(function(a, b) {\r\n            if (a === onlyAxisToNotify) {\r\n                return -1\r\n            }\r\n            if (b === onlyAxisToNotify) {\r\n                return 1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n    return axes\r\n}\r\n\r\nfunction isNotEmptyAxisBusinessRange(axis) {\r\n    return !axis.getTranslator().getBusinessRange().isEmpty()\r\n}\r\n\r\nfunction axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e) {\r\n    var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\r\n    var range = getRange(axis);\r\n    var _axis$checkZoomingLow = axis.checkZoomingLowerLimitOvercome(actionField, scale, range),\r\n        stopInteraction = _axis$checkZoomingLow.stopInteraction,\r\n        correctedRange = _axis$checkZoomingLow.correctedRange;\r\n    var result = axis.handleZooming(stopInteraction ? null : correctedRange, getParameters(silent), e, actionField);\r\n    stopInteraction && axis.handleZoomEnd();\r\n    return {\r\n        stopInteraction: stopInteraction,\r\n        result: result\r\n    }\r\n}\r\nvar _default = {\r\n    name: \"zoom_and_pan\",\r\n    init: function() {\r\n        var chart = this;\r\n        var renderer = this._renderer;\r\n\r\n        function cancelEvent(e) {\r\n            if (e.originalEvent) {\r\n                cancelEvent(e.originalEvent)\r\n            }\r\n            if (false !== e.cancelable) {\r\n                e.cancel = true\r\n            }\r\n        }\r\n\r\n        function startAxesViewportChanging(zoomAndPan, actionField, e) {\r\n            var options = zoomAndPan.options;\r\n            var actionData = zoomAndPan.actionData;\r\n            var axes = [];\r\n            if (options.argumentAxis[actionField]) {\r\n                axes.push(chart.getArgumentAxis())\r\n            }\r\n            if (options.valueAxis[actionField]) {\r\n                axes = axes.concat(actionData.valueAxes)\r\n            }\r\n            axes.reduce(function(isPrevented, axis) {\r\n                if (isPrevented) {\r\n                    return isPrevented\r\n                }\r\n                if (isNotEmptyAxisBusinessRange(axis)) {\r\n                    return axis.handleZooming(null, {\r\n                        end: true\r\n                    }, e, actionField).isPrevented\r\n                }\r\n                return isPrevented\r\n            }, false) && cancelEvent(e)\r\n        }\r\n\r\n        function axesViewportChanging(zoomAndPan, actionField, e, offsetCalc, centerCalc) {\r\n            function zoomAxes(axes, criteria, coordField, e, actionData) {\r\n                var zoom = {\r\n                    zoomed: false\r\n                };\r\n                criteria && axes.filter(isNotEmptyAxisBusinessRange).forEach(function(axis) {\r\n                    var options = axis.getOptions();\r\n                    var viewport = axis.visualRange();\r\n                    var scale = axis.getTranslator().getEventScale(e);\r\n                    var translate = -offsetCalc(e, actionData, coordField, scale);\r\n                    zoom = (0, _extend.extend)(true, zoom, axis.getTranslator().zoom(translate, scale, axis.getZoomBounds()));\r\n                    var range = axis.adjustRange((0, _utils.getVizRangeObject)([zoom.min, zoom.max]));\r\n                    var _axis$checkZoomingLow2 = axis.checkZoomingLowerLimitOvercome(actionField, scale, range),\r\n                        stopInteraction = _axis$checkZoomingLow2.stopInteraction,\r\n                        correctedRange = _axis$checkZoomingLow2.correctedRange;\r\n                    if (!(0, _type.isDefined)(viewport) || viewport.startValue.valueOf() !== correctedRange.startValue.valueOf() || viewport.endValue.valueOf() !== correctedRange.endValue.valueOf()) {\r\n                        axis.handleZooming(stopInteraction ? null : correctedRange, {\r\n                            start: true,\r\n                            end: true\r\n                        }, e, actionField);\r\n                        if (!stopInteraction) {\r\n                            zoom.zoomed = true;\r\n                            zoom.deltaTranslate = translate - zoom.translate\r\n                        }\r\n                    } else {\r\n                        if (\"touch\" === e.pointerType && \"discrete\" === options.type) {\r\n                            var isMinPosition = axis.isExtremePosition(false);\r\n                            var isMaxPosition = axis.isExtremePosition(true);\r\n                            var zoomInEnabled = scale > 1 && !stopInteraction;\r\n                            var zoomOutEnabled = scale < 1 && (!isMinPosition || !isMaxPosition);\r\n                            var panningEnabled = 1 === scale && !(isMinPosition && (translate < 0 && !options.inverted || translate > 0 && options.inverted) || isMaxPosition && (translate > 0 && !options.inverted || translate < 0 && options.inverted));\r\n                            zoom.enabled = zoomInEnabled || zoomOutEnabled || panningEnabled\r\n                        }\r\n                    }\r\n                });\r\n                return zoom\r\n            }\r\n\r\n            function storeOffset(e, actionData, zoom, coordField) {\r\n                if (zoom.zoomed) {\r\n                    actionData.offset[coordField] = (e.offset ? e.offset[coordField] : actionData.offset[coordField]) + zoom.deltaTranslate\r\n                }\r\n            }\r\n\r\n            function storeCenter(center, actionData, zoom, coordField) {\r\n                if (zoom.zoomed) {\r\n                    actionData.center[coordField] = center[coordField] + zoom.deltaTranslate\r\n                }\r\n            }\r\n            var rotated = chart.option(\"rotated\");\r\n            var actionData = zoomAndPan.actionData;\r\n            var options = zoomAndPan.options;\r\n            var argZoom = {};\r\n            var valZoom = {};\r\n            if (!actionData.fallback) {\r\n                argZoom = zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData);\r\n                valZoom = zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData);\r\n                chart._requestChange([\"VISUAL_RANGE\"]);\r\n                storeOffset(e, actionData, argZoom, rotated ? \"y\" : \"x\");\r\n                storeOffset(e, actionData, valZoom, rotated ? \"x\" : \"y\")\r\n            }\r\n            var center = centerCalc(e);\r\n            storeCenter(center, actionData, argZoom, rotated ? \"y\" : \"x\");\r\n            storeCenter(center, actionData, valZoom, rotated ? \"x\" : \"y\");\r\n            if (!argZoom.zoomed && !valZoom.zoomed) {\r\n                actionData.center = center\r\n            }\r\n            return argZoom.zoomed || valZoom.zoomed || actionData.fallback || argZoom.enabled || valZoom.enabled\r\n        }\r\n\r\n        function finishAxesViewportChanging(zoomAndPan, actionField, e, offsetCalc) {\r\n            function zoomAxes(axes, criteria, coordField, actionData, onlyAxisToNotify) {\r\n                var zoomStarted = false;\r\n                var scale = e.scale || 1;\r\n                var getRange = function(axis) {\r\n                    var zoom = axis.getTranslator().zoom(-offsetCalc(e, actionData, coordField, scale), scale, axis.getZoomBounds());\r\n                    return {\r\n                        startValue: zoom.min,\r\n                        endValue: zoom.max\r\n                    }\r\n                };\r\n                var getParameters = function(silent) {\r\n                    return {\r\n                        start: true,\r\n                        end: silent\r\n                    }\r\n                };\r\n                criteria && axes.forEach(function(axis) {\r\n                    zoomStarted = !axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e).stopInteraction\r\n                });\r\n                return zoomStarted\r\n            }\r\n            var rotated = chart.option(\"rotated\");\r\n            var actionData = zoomAndPan.actionData;\r\n            var options = zoomAndPan.options;\r\n            var zoomStarted = true;\r\n            if (actionData.fallback) {\r\n                zoomStarted &= zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", actionData, chart.getArgumentAxis());\r\n                zoomStarted |= zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", actionData)\r\n            } else {\r\n                var axes = [];\r\n                if (options.argumentAxis[actionField]) {\r\n                    axes.push(chart.getArgumentAxis())\r\n                }\r\n                if (options.valueAxis[actionField]) {\r\n                    axes = axes.concat(actionData.valueAxes)\r\n                }\r\n                axes.filter(isNotEmptyAxisBusinessRange).forEach(function(axis) {\r\n                    axis.handleZooming(null, {\r\n                        start: true\r\n                    }, e, actionField)\r\n                });\r\n                zoomStarted = zoomStarted && axes.length\r\n            }\r\n            zoomStarted && chart._requestChange([\"VISUAL_RANGE\"])\r\n        }\r\n\r\n        function prepareActionData(coords, action) {\r\n            var axes = chart._argumentAxes.filter(function(axis) {\r\n                return checkCoords(canvasToRect(axis.getCanvas()), coords)\r\n            });\r\n            return {\r\n                fallback: chart._lastRenderingTime > GESTURE_TIMEOUT,\r\n                cancel: !axes.length || !(0, _type.isDefined)(action),\r\n                action: action,\r\n                curAxisRect: axes.length && canvasToRect(axes[0].getCanvas()),\r\n                valueAxes: axes.length && chart._valueAxes.filter(function(axis) {\r\n                    return checkCoords(canvasToRect(axis.getCanvas()), coords)\r\n                }),\r\n                offset: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                center: coords,\r\n                startCenter: coords\r\n            }\r\n        }\r\n\r\n        function getPointerCoord(rect, e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            return {\r\n                x: _min(_max(e.pageX - rootOffset.left, rect.x), rect.width + rect.x),\r\n                y: _min(_max(e.pageY - rootOffset.top, rect.y), rect.height + rect.y)\r\n            }\r\n        }\r\n\r\n        function calcCenterForPinch(e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            var x1 = e.pointers[0].pageX;\r\n            var x2 = e.pointers[1].pageX;\r\n            var y1 = e.pointers[0].pageY;\r\n            var y2 = e.pointers[1].pageY;\r\n            return {\r\n                x: _min(x1, x2) + _abs(x2 - x1) / 2 - rootOffset.left,\r\n                y: _min(y1, y2) + _abs(y2 - y1) / 2 - rootOffset.top\r\n            }\r\n        }\r\n\r\n        function calcCenterForDrag(e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            return {\r\n                x: e.pageX - rootOffset.left,\r\n                y: e.pageY - rootOffset.top\r\n            }\r\n        }\r\n\r\n        function calcOffsetForDrag(e, actionData, coordField) {\r\n            return e.offset[coordField] - actionData.offset[coordField]\r\n        }\r\n\r\n        function preventDefaults(e) {\r\n            if (false !== e.cancelable) {\r\n                e.preventDefault();\r\n                e.stopPropagation()\r\n            }\r\n            chart._stopCurrentHandling()\r\n        }\r\n        var zoomAndPan = {\r\n            dragStartHandler: function(e) {\r\n                var options = zoomAndPan.options;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                var wantPan = options.argumentAxis.pan || options.valueAxis.pan;\r\n                var wantZoom = options.argumentAxis.zoom || options.valueAxis.zoom;\r\n                var panKeyPressed = (0, _type.isDefined)(options.panKey) && e[(0, _utils.normalizeEnum)(options.panKey) + \"Key\"];\r\n                var dragToZoom = options.dragToZoom;\r\n                var action;\r\n                e._cancelPreventDefault = true;\r\n                if (isTouch) {\r\n                    if (options.allowTouchGestures && wantPan) {\r\n                        var cancelPanning = !zoomAndPan.panningVisualRangeEnabled() || zoomAndPan.skipEvent;\r\n                        action = cancelPanning ? null : \"pan\"\r\n                    }\r\n                } else {\r\n                    if (dragToZoom && wantPan && panKeyPressed) {\r\n                        action = \"pan\"\r\n                    } else {\r\n                        if (!dragToZoom && wantPan) {\r\n                            action = \"pan\"\r\n                        } else {\r\n                            if (dragToZoom && wantZoom) {\r\n                                action = \"zoom\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                var actionData = prepareActionData(calcCenterForDrag(e), action);\r\n                if (actionData.cancel) {\r\n                    zoomAndPan.skipEvent = false;\r\n                    if (false !== e.cancelable) {\r\n                        e.cancel = true\r\n                    }\r\n                    return\r\n                }\r\n                zoomAndPan.actionData = actionData;\r\n                if (\"zoom\" === action) {\r\n                    actionData.startCoords = getPointerCoord(actionData.curAxisRect, e);\r\n                    actionData.rect = renderer.rect(0, 0, 0, 0).attr(options.dragBoxStyle).append(renderer.root)\r\n                } else {\r\n                    startAxesViewportChanging(zoomAndPan, \"pan\", e)\r\n                }\r\n            },\r\n            dragHandler: function(e) {\r\n                var rotated = chart.option(\"rotated\");\r\n                var options = zoomAndPan.options;\r\n                var actionData = zoomAndPan.actionData;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                e._cancelPreventDefault = true;\r\n                if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled()) {\r\n                    return\r\n                }\r\n                if (\"zoom\" === actionData.action) {\r\n                    preventDefaults(e);\r\n                    var curCanvas = actionData.curAxisRect;\r\n                    var startCoords = actionData.startCoords;\r\n                    var curCoords = getPointerCoord(curCanvas, e);\r\n                    var zoomArg = options.argumentAxis.zoom;\r\n                    var zoomVal = options.valueAxis.zoom;\r\n                    var rect = {\r\n                        x: _min(startCoords.x, curCoords.x),\r\n                        y: _min(startCoords.y, curCoords.y),\r\n                        width: _abs(startCoords.x - curCoords.x),\r\n                        height: _abs(startCoords.y - curCoords.y)\r\n                    };\r\n                    if (!zoomArg || !zoomVal) {\r\n                        if (!zoomArg && !rotated || !zoomVal && rotated) {\r\n                            rect.x = curCanvas.x;\r\n                            rect.width = curCanvas.width\r\n                        } else {\r\n                            rect.y = curCanvas.y;\r\n                            rect.height = curCanvas.height\r\n                        }\r\n                    }\r\n                    actionData.rect.attr(rect)\r\n                } else {\r\n                    if (\"pan\" === actionData.action) {\r\n                        axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, function(e) {\r\n                            return e.offset\r\n                        });\r\n                        var deltaOffsetY = Math.abs(e.offset.y - actionData.offset.y);\r\n                        var deltaOffsetX = Math.abs(e.offset.x - actionData.offset.x);\r\n                        if (isTouch && (deltaOffsetY > MIN_DRAG_DELTA && deltaOffsetY > Math.abs(actionData.offset.x) || deltaOffsetX > MIN_DRAG_DELTA && deltaOffsetX > Math.abs(actionData.offset.y))) {\r\n                            return\r\n                        }\r\n                        preventDefaults(e)\r\n                    }\r\n                }\r\n            },\r\n            dragEndHandler: function(e) {\r\n                var rotated = chart.option(\"rotated\");\r\n                var options = zoomAndPan.options;\r\n                var actionData = zoomAndPan.actionData;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                var panIsEmpty = actionData && \"pan\" === actionData.action && !actionData.fallback && 0 === actionData.offset.x && 0 === actionData.offset.y;\r\n                if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled() || panIsEmpty) {\r\n                    return\r\n                }(!isTouch || !zoomAndPan.actionData.isNative) && preventDefaults(e);\r\n                if (\"zoom\" === actionData.action) {\r\n                    var zoomAxes = function(axes, criteria, coordField, startCoords, curCoords, onlyAxisToNotify) {\r\n                        axes = sortAxes(axes, onlyAxisToNotify);\r\n                        var curCoord = curCoords[coordField];\r\n                        var startCoord = startCoords[coordField];\r\n                        var zoomStarted = false;\r\n                        var getParameters = function(silent) {\r\n                            return {\r\n                                start: !!silent,\r\n                                end: !!silent\r\n                            }\r\n                        };\r\n                        if (criteria && _abs(curCoord - startCoord) > MIN_DRAG_DELTA) {\r\n                            axes.some(function(axis) {\r\n                                var tr = axis.getTranslator();\r\n                                if (tr.getBusinessRange().isEmpty()) {\r\n                                    return\r\n                                }\r\n                                var getRange = function() {\r\n                                    return [tr.from(startCoord), tr.from(curCoord)]\r\n                                };\r\n                                var _axisZoom = axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionData.action, tr.getMinScale(true), e),\r\n                                    stopInteraction = _axisZoom.stopInteraction,\r\n                                    result = _axisZoom.result;\r\n                                zoomStarted = !stopInteraction;\r\n                                return onlyAxisToNotify && result.isPrevented\r\n                            })\r\n                        }\r\n                        return zoomStarted\r\n                    };\r\n                    var curCoords = getPointerCoord(actionData.curAxisRect, e);\r\n                    var argumentAxesZoomed = zoomAxes(chart._argumentAxes, options.argumentAxis.zoom, rotated ? \"y\" : \"x\", actionData.startCoords, curCoords, chart.getArgumentAxis());\r\n                    var valueAxesZoomed = zoomAxes(actionData.valueAxes, options.valueAxis.zoom, rotated ? \"x\" : \"y\", actionData.startCoords, curCoords);\r\n                    if (valueAxesZoomed || argumentAxesZoomed) {\r\n                        chart._requestChange([\"VISUAL_RANGE\"])\r\n                    }\r\n                    actionData.rect.dispose()\r\n                } else {\r\n                    if (\"pan\" === actionData.action) {\r\n                        finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag)\r\n                    }\r\n                }\r\n                zoomAndPan.actionData = null\r\n            },\r\n            pinchStartHandler: function(e) {\r\n                var actionData = prepareActionData(calcCenterForPinch(e), \"zoom\");\r\n                actionData.isNative = !zoomAndPan.panningVisualRangeEnabled();\r\n                if (actionData.cancel) {\r\n                    cancelEvent(e);\r\n                    return\r\n                }\r\n                zoomAndPan.actionData = actionData;\r\n                startAxesViewportChanging(zoomAndPan, \"zoom\", e)\r\n            },\r\n            pinchHandler: function(e) {\r\n                if (!zoomAndPan.actionData) {\r\n                    return\r\n                }\r\n                var viewportChanged = axesViewportChanging(zoomAndPan, \"zoom\", e, function(e, actionData, coordField, scale) {\r\n                    return calcCenterForPinch(e)[coordField] - actionData.center[coordField] + (actionData.center[coordField] - actionData.center[coordField] * scale)\r\n                }, calcCenterForPinch);\r\n                zoomAndPan.defineTouchBehavior(!viewportChanged, e);\r\n                !viewportChanged && (zoomAndPan.actionData = null)\r\n            },\r\n            pinchEndHandler: function(e) {\r\n                if (!zoomAndPan.actionData) {\r\n                    return\r\n                }\r\n                finishAxesViewportChanging(zoomAndPan, \"zoom\", e, function(e, actionData, coordField, scale) {\r\n                    return actionData.center[coordField] - actionData.startCenter[coordField] + (actionData.startCenter[coordField] - actionData.startCenter[coordField] * scale)\r\n                });\r\n                zoomAndPan.actionData = null\r\n            },\r\n            cleanup: function() {\r\n                renderer.root.off(EVENTS_NS);\r\n                zoomAndPan.actionData && zoomAndPan.actionData.rect && zoomAndPan.actionData.rect.dispose();\r\n                zoomAndPan.actionData = null;\r\n                renderer.root.css({\r\n                    \"touch-action\": \"\",\r\n                    \"-ms-touch-action\": \"\"\r\n                })\r\n            },\r\n            setup: function(options) {\r\n                zoomAndPan.cleanup();\r\n                if (!options.argumentAxis.pan) {\r\n                    renderer.root.on(SCROLL_BAR_START_EVENT_NAME, cancelEvent)\r\n                }\r\n                if (options.argumentAxis.none && options.valueAxis.none) {\r\n                    return\r\n                }\r\n                zoomAndPan.options = options;\r\n                var rotated = chart.option(\"rotated\");\r\n                if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowMouseWheel) {\r\n                    renderer.root.on(_wheel.name + EVENTS_NS, function(e) {\r\n                        function zoomAxes(axes, coord, delta, onlyAxisToNotify) {\r\n                            axes = sortAxes(axes, onlyAxisToNotify);\r\n                            var zoomStarted = false;\r\n                            var getParameters = function(silent) {\r\n                                return {\r\n                                    start: !!silent,\r\n                                    end: !!silent\r\n                                }\r\n                            };\r\n                            axes.some(function(axis) {\r\n                                var translator = axis.getTranslator();\r\n                                if (translator.getBusinessRange().isEmpty()) {\r\n                                    return\r\n                                }\r\n                                var scale = translator.getMinScale(delta > 0);\r\n                                var getRange = function() {\r\n                                    var zoom = translator.zoom(-(coord - coord * scale), scale, axis.getZoomBounds());\r\n                                    return {\r\n                                        startValue: zoom.min,\r\n                                        endValue: zoom.max\r\n                                    }\r\n                                };\r\n                                var _axisZoom2 = axisZoom(axis, onlyAxisToNotify, getRange, getParameters, \"zoom\", scale, e),\r\n                                    stopInteraction = _axisZoom2.stopInteraction,\r\n                                    result = _axisZoom2.result;\r\n                                zoomStarted = !stopInteraction;\r\n                                return onlyAxisToNotify && result.isPrevented\r\n                            });\r\n                            return zoomStarted\r\n                        }\r\n                        var coords = calcCenterForDrag(e);\r\n                        var axesZoomed = false;\r\n                        var targetAxes;\r\n                        if (options.valueAxis.zoom) {\r\n                            targetAxes = chart._valueAxes.filter(function(axis) {\r\n                                return checkCoords(canvasToRect(axis.getCanvas()), coords)\r\n                            });\r\n                            if (0 === targetAxes.length) {\r\n                                var targetCanvas = chart._valueAxes.reduce(function(r, axis) {\r\n                                    if (!r && axis.coordsIn(coords.x, coords.y)) {\r\n                                        r = axis.getCanvas()\r\n                                    }\r\n                                    return r\r\n                                }, null);\r\n                                if (targetCanvas) {\r\n                                    targetAxes = chart._valueAxes.filter(function(axis) {\r\n                                        return checkCoords(canvasToRect(axis.getCanvas()), {\r\n                                            x: targetCanvas.left,\r\n                                            y: targetCanvas.top\r\n                                        })\r\n                                    })\r\n                                }\r\n                            }\r\n                            axesZoomed |= zoomAxes(targetAxes, rotated ? coords.x : coords.y, e.delta)\r\n                        }\r\n                        if (options.argumentAxis.zoom) {\r\n                            var canZoom = chart._argumentAxes.some(function(axis) {\r\n                                if (checkCoords(canvasToRect(axis.getCanvas()), coords) || axis.coordsIn(coords.x, coords.y)) {\r\n                                    return true\r\n                                }\r\n                                return false\r\n                            });\r\n                            axesZoomed |= canZoom && zoomAxes(chart._argumentAxes, rotated ? coords.y : coords.x, e.delta, chart.getArgumentAxis())\r\n                        }\r\n                        if (axesZoomed) {\r\n                            chart._requestChange([\"VISUAL_RANGE\"]);\r\n                            zoomAndPan.panningVisualRangeEnabled(targetAxes) && preventDefaults(e)\r\n                        }\r\n                    })\r\n                }\r\n                if (options.allowTouchGestures) {\r\n                    if (options.argumentAxis.zoom || options.valueAxis.zoom) {\r\n                        renderer.root.on(PINCH_START_EVENT_NAME, {\r\n                            passive: false\r\n                        }, zoomAndPan.pinchStartHandler).on(PINCH_EVENT_NAME, {\r\n                            passive: false\r\n                        }, zoomAndPan.pinchHandler).on(PINCH_END_EVENT_NAME, zoomAndPan.pinchEndHandler)\r\n                    }\r\n                }\r\n                renderer.root.on(DRAG_START_EVENT_NAME, {\r\n                    immediate: true,\r\n                    passive: false\r\n                }, zoomAndPan.dragStartHandler).on(DRAG_EVENT_NAME, {\r\n                    immediate: true,\r\n                    passive: false\r\n                }, zoomAndPan.dragHandler).on(DRAG_END_EVENT_NAME, zoomAndPan.dragEndHandler);\r\n                if (options.argumentAxis.pan) {\r\n                    renderer.root.on(SCROLL_BAR_START_EVENT_NAME, function(e) {\r\n                        zoomAndPan.actionData = {\r\n                            valueAxes: [],\r\n                            offset: {\r\n                                x: 0,\r\n                                y: 0\r\n                            },\r\n                            center: {\r\n                                x: 0,\r\n                                y: 0\r\n                            }\r\n                        };\r\n                        preventDefaults(e);\r\n                        startAxesViewportChanging(zoomAndPan, \"pan\", e)\r\n                    }).on(SCROLL_BAR_MOVE_EVENT_NAME, function(e) {\r\n                        preventDefaults(e);\r\n                        axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, function(e) {\r\n                            return e.offset\r\n                        })\r\n                    }).on(SCROLL_BAR_END_EVENT_NAME, function(e) {\r\n                        preventDefaults(e);\r\n                        finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\r\n                        zoomAndPan.actionData = null\r\n                    })\r\n                }\r\n            },\r\n            defineTouchBehavior: function(isDefault, e) {\r\n                zoomAndPan.actionData && (zoomAndPan.actionData.isNative = isDefault);\r\n                if (!isDefault) {\r\n                    preventDefaults(e)\r\n                }\r\n            },\r\n            panningVisualRangeEnabled: function(targetAxes) {\r\n                if (null !== targetAxes && void 0 !== targetAxes && targetAxes.length) {\r\n                    return targetAxes.some(function(axis) {\r\n                        return !axis.isExtremePosition(false) || !axis.isExtremePosition(true)\r\n                    })\r\n                }\r\n                var enablePanByValueAxis = chart._valueAxes.some(function(axis) {\r\n                    return !axis.isExtremePosition(false) || !axis.isExtremePosition(true)\r\n                });\r\n                var enablePanByArgumentAxis = chart._argumentAxes.some(function(axis) {\r\n                    return !axis.isExtremePosition(false) || !axis.isExtremePosition(true)\r\n                });\r\n                return enablePanByValueAxis || enablePanByArgumentAxis\r\n            }\r\n        };\r\n        this._zoomAndPan = zoomAndPan\r\n    },\r\n    members: {\r\n        _setupZoomAndPan: function() {\r\n            this._zoomAndPan.setup(this._themeManager.getOptions(\"zoomAndPan\"))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._zoomAndPan.cleanup()\r\n    },\r\n    customize: function(constructor) {\r\n        constructor.addChange({\r\n            code: \"ZOOM_AND_PAN\",\r\n            handler: function() {\r\n                this._setupZoomAndPan()\r\n            },\r\n            isThemeDependent: true,\r\n            isOptionChange: true,\r\n            option: \"zoomAndPan\"\r\n        })\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}