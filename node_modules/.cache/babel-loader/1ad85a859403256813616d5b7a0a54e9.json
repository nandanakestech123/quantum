{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Payroll\\\\Payslippdf\\\\Payslip.js\";\nimport React from \"react\";\nimport { Page, Document, Image, StyleSheet, Text, Font, View } from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport allfont from \"../../../../assets/fonts/ZCOOL_XiaoWei/ZCOOLXiaoWei-Regular.ttf\";\nimport { PayslipHeader } from \"./PayslipHeader\";\nimport { PayslipSingleLineHeader } from \"./PayslipSingleLineHeader\";\nimport { PayslipTableRow } from \"./PayslipTableRow\";\nimport { PayslipStaticRow } from \"./PayslipStaticRow\";\nFont.register({\n  family: \"ZCOOL XiaoWei\",\n  src: allfont\n});\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35\n  },\n  title: {\n    fontSize: 18,\n    textAlign: \"center\",\n    fontFamily: \"ZCOOL XiaoWei\",\n    paddingBottom: 5\n  },\n  secondTitle: {\n    fontSize: 14,\n    paddingTop: 5,\n    paddingBottom: 5,\n    textAlign: \"center\",\n    fontFamily: \"ZCOOL XiaoWei\",\n    borderBottom: 1,\n    borderBottomColor: \"grey\"\n  },\n  author: {\n    fontSize: 12,\n    textAlign: \"center\"\n  },\n  subtitle: {\n    fontSize: 12,\n    textAlign: \"left\",\n    fontFamily: \"ZCOOL XiaoWei\",\n    marginTop: 5\n  },\n  texttitle: {\n    fontSize: 10,\n    marginBottom: 5,\n    textAlign: \"left\",\n    fontFamily: \"ZCOOL XiaoWei\",\n    paddingTop: 2,\n    paddingBottom: 5,\n    marginTop: 3\n  },\n  texttitleheader: {\n    fontSize: 12,\n    marginBottom: 5,\n    textAlign: \"center\",\n    fontFamily: \"ZCOOL XiaoWei\",\n    paddingTop: 2,\n    paddingBottom: 5,\n    marginTop: 3\n  },\n  texttitlejustify: {\n    fontSize: 12,\n    marginTop: 10,\n    textAlign: \"justify\",\n    fontFamily: \"ZCOOL XiaoWei\",\n    paddingTop: 10,\n    lineHeight: 1.5\n  },\n  text: {\n    fontSize: 14,\n    textAlign: \"justify\",\n    fontFamily: \"ZCOOL XiaoWei\",\n    paddingTop: 5\n  },\n  textStamp: {\n    fontSize: 14,\n    textAlign: \"left\",\n    fontFamily: \"ZCOOL XiaoWei\",\n    borderTop: 1,\n    borderTopColor: \"grey\"\n  },\n  image: {\n    width: 100,\n    height: 30,\n    textAlign: \"center\"\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\"\n  },\n  pageNumber: {\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    color: \"grey\"\n  },\n  columnOne: {\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    width: \"30%\"\n  },\n  columnOneHalf: {\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    width: \"50%\"\n  },\n  columnTwo: {\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    width: \"40%\"\n  },\n  container: {\n    flexDirection: \"row\",\n    paddingTop: \"5px\"\n  },\n  footer: {\n    position: \"absolute\",\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n    fontSize: 12,\n    bottom: 225,\n    left: 0,\n    right: 0,\n    textAlign: \"center\"\n  }\n}); // EmpName,\n// FromDate,\n// toDate,\n// BasicSalary,\n// hourlySalHour,\n// hourlySalRate,\n// firstOverTimeRate,\n// firstOverTimeHour,\n// totOTPay,\n// totCommission,\n// totAllowance,\n// totDeduct,\n// AddPay,\n// netPay,\n// empCPFCont,\n// dateofPay,\n// modeofPay,\n// secondOverTimeHour,\n// secondOverTimeRate,\n\nclass Payslip extends React.Component {\n  render() {\n    let {\n      MainInfo\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Document, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, MainInfo.length > 0 && MainInfo.map((MainInfo, index) => /*#__PURE__*/React.createElement(Page, {\n      key: index,\n      style: styles.body,\n      size: \"A4\",\n      orientation: \"portrait\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: styles.texttitleheader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"Payslip for\", \" \", MainInfo && MainInfo.FromDate ? moment(MainInfo.FromDate).format(\"DD-MM-YYYY\") : \"\", \" \", \"to\", \" \", MainInfo && MainInfo.toDate ? moment(MainInfo.toDate).format(\"DD-MM-YYYY\") : \"\", \" \"), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipSingleLineHeader, {\n      columnLabel: `Name of the Employer`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      style: styles.texttitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, MainInfo.company_name && MainInfo.company_name ? MainInfo.company_name : \"\"), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipSingleLineHeader, {\n      columnLabel: `Name of the Employee`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      style: styles.texttitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, MainInfo && MainInfo.EmpName ? MainInfo.EmpName : \"\"), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipHeader, {\n      firstColumn: `Item`,\n      secondColumn: `Amount`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Basic Pay`,\n      value: MainInfo && MainInfo.BasicSalary ? MainInfo.BasicSalary : \"0.00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Total Allowances`,\n      subLabel: `breakdown shown below`,\n      value: MainInfo && MainInfo.totAllowance ? MainInfo.totAllowance : \"0.00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    })), MainInfo.TotAllowanceList && MainInfo.TotAllowanceList.length > 0 && /*#__PURE__*/React.createElement(PayslipTableRow, {\n      TableList: MainInfo.TotAllowanceList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Total Deductions`,\n      subLabel: `breakdown shown below`,\n      value: MainInfo && MainInfo.totDeduct ? MainInfo.totDeduct : \"0.00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Employee's CPF deduction`,\n      subLabel: `breakdown shown below`,\n      value: MainInfo && MainInfo.totDeduct ? MainInfo.totDeduct : \"0.00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, MainInfo.TotDeductionList && MainInfo.TotDeductionList.length > 0 && /*#__PURE__*/React.createElement(PayslipTableRow, {\n      TableList: MainInfo.TotDeductionList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipSingleLineHeader, {\n      columnLabel: `Date of Payment`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      style: styles.texttitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, MainInfo && MainInfo.dateofPay ? moment(MainInfo.dateofPay).format(\"DD-MM-YYYY\") : \"\"), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipSingleLineHeader, {\n      columnLabel: `Mode of Payment`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      style: styles.texttitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }, MainInfo && MainInfo.modeofPayId_text ? MainInfo.modeofPayId_text : \"\"), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipSingleLineHeader, {\n      columnLabel: `Over time Details`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Overtime Hours Worked`,\n      subLabel: ``,\n      value: MainInfo ? Number(MainInfo.firstOverTimeHour) + Number(MainInfo.secondOverTimeHour) : \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Total Overtime Pay`,\n      subLabel: `breakdown shown below`,\n      value: MainInfo && MainInfo.totOTPay ? MainInfo.totOTPay : \"0.00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipHeader, {\n      firstColumn: `Item`,\n      secondColumn: `Amount`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Others Additional Payments`,\n      subLabel: `(Breakdown shown below)`,\n      value: MainInfo && MainInfo.AddPay ? MainInfo.AddPay : \"0.00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, MainInfo.AddPaymentList && MainInfo.AddPaymentList.length > 0 && /*#__PURE__*/React.createElement(PayslipTableRow, {\n      TableList: MainInfo.AddPaymentList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Net Pay`,\n      subLabel: `breakdown shown below`,\n      value: MainInfo && MainInfo.netPay ? MainInfo.netPay : \"0.00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PayslipStaticRow, {\n      Label: `Employer's CPF Contributions`,\n      subLabel: \"\",\n      value: MainInfo && MainInfo.empCPFCont ? MainInfo.empCPFCont : \"0.00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default Payslip;","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Payroll/Payslippdf/Payslip.js"],"names":["React","Page","Document","Image","StyleSheet","Text","Font","View","moment","allfont","PayslipHeader","PayslipSingleLineHeader","PayslipTableRow","PayslipStaticRow","register","family","src","styles","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","fontFamily","secondTitle","borderBottom","borderBottomColor","author","subtitle","marginTop","texttitle","marginBottom","texttitleheader","texttitlejustify","lineHeight","text","textStamp","borderTop","borderTopColor","image","width","height","header","color","pageNumber","position","bottom","left","right","columnOne","flexDirection","justifyContent","columnOneHalf","columnTwo","container","footer","Payslip","Component","render","MainInfo","props","length","map","index","FromDate","format","toDate","company_name","EmpName","BasicSalary","totAllowance","TotAllowanceList","totDeduct","TotDeductionList","dateofPay","modeofPayId_text","Number","firstOverTimeHour","secondOverTimeHour","totOTPay","AddPay","AddPaymentList","netPay","empCPFCont"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Page,\r\n  Document,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  Font,\r\n  View,\r\n} from \"@react-pdf/renderer\";\r\nimport moment from \"moment\";\r\n\r\nimport allfont from \"../../../../assets/fonts/ZCOOL_XiaoWei/ZCOOLXiaoWei-Regular.ttf\";\r\n\r\nimport { PayslipHeader } from \"./PayslipHeader\";\r\nimport { PayslipSingleLineHeader } from \"./PayslipSingleLineHeader\";\r\nimport { PayslipTableRow } from \"./PayslipTableRow\";\r\nimport { PayslipStaticRow } from \"./PayslipStaticRow\";\r\n\r\nFont.register({\r\n  family: \"ZCOOL XiaoWei\",\r\n  src: allfont,\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n    fontFamily: \"ZCOOL XiaoWei\",\r\n    paddingBottom: 5,\r\n  },\r\n  secondTitle: {\r\n    fontSize: 14,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    textAlign: \"center\",\r\n    fontFamily: \"ZCOOL XiaoWei\",\r\n    borderBottom: 1,\r\n    borderBottomColor: \"grey\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n  },\r\n  subtitle: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    fontFamily: \"ZCOOL XiaoWei\",\r\n    marginTop: 5,\r\n  },\r\n  texttitle: {\r\n    fontSize: 10,\r\n    marginBottom: 5,\r\n    textAlign: \"left\",\r\n    fontFamily: \"ZCOOL XiaoWei\",\r\n    paddingTop: 2,\r\n    paddingBottom: 5,\r\n    marginTop: 3,\r\n  },\r\n  texttitleheader: {\r\n    fontSize: 12,\r\n    marginBottom: 5,\r\n    textAlign: \"center\",\r\n    fontFamily: \"ZCOOL XiaoWei\",\r\n    paddingTop: 2,\r\n    paddingBottom: 5,\r\n    marginTop: 3,\r\n  },\r\n  texttitlejustify: {\r\n    fontSize: 12,\r\n    marginTop: 10,\r\n    textAlign: \"justify\",\r\n    fontFamily: \"ZCOOL XiaoWei\",\r\n    paddingTop: 10,\r\n    lineHeight: 1.5,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n    fontFamily: \"ZCOOL XiaoWei\",\r\n    paddingTop: 5,\r\n  },\r\n  textStamp: {\r\n    fontSize: 14,\r\n    textAlign: \"left\",\r\n    fontFamily: \"ZCOOL XiaoWei\",\r\n    borderTop: 1,\r\n    borderTopColor: \"grey\",\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 30,\r\n    textAlign: \"center\",\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  columnOne: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"30%\",\r\n  },\r\n  columnOneHalf: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"50%\",\r\n  },\r\n\r\n  columnTwo: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"40%\",\r\n  },\r\n  container: {\r\n    flexDirection: \"row\",\r\n    paddingTop: \"5px\",\r\n  },\r\n  footer: {\r\n    position: \"absolute\",\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n    fontSize: 12,\r\n    bottom: 225,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n// EmpName,\r\n// FromDate,\r\n// toDate,\r\n// BasicSalary,\r\n// hourlySalHour,\r\n// hourlySalRate,\r\n// firstOverTimeRate,\r\n// firstOverTimeHour,\r\n// totOTPay,\r\n// totCommission,\r\n// totAllowance,\r\n// totDeduct,\r\n// AddPay,\r\n// netPay,\r\n// empCPFCont,\r\n// dateofPay,\r\n// modeofPay,\r\n// secondOverTimeHour,\r\n// secondOverTimeRate,\r\n\r\nclass Payslip extends React.Component {\r\n  render() {\r\n    let { MainInfo } = this.props;\r\n\r\n    return (\r\n      <Document>\r\n        {MainInfo.length > 0 &&\r\n          MainInfo.map((MainInfo, index) => (\r\n            <Page\r\n              key={index}\r\n              style={styles.body}\r\n              size=\"A4\"\r\n              orientation={\"portrait\"}\r\n            >\r\n              {/* <Text style={styles.title} fixed>\r\n                {HeaderDetail.siteHeader}\r\n              </Text>\r\n              <Text style={styles.secondTitle} fixed>\r\n                {HeaderDetail.siteAddress}\r\n              </Text> */}\r\n              <Text style={styles.texttitleheader}>\r\n                Payslip for{\" \"}\r\n                {MainInfo && MainInfo.FromDate\r\n                  ? moment(MainInfo.FromDate).format(\"DD-MM-YYYY\")\r\n                  : \"\"}{\" \"}\r\n                to{\" \"}\r\n                {MainInfo && MainInfo.toDate\r\n                  ? moment(MainInfo.toDate).format(\"DD-MM-YYYY\")\r\n                  : \"\"}{\" \"}\r\n              </Text>\r\n              <View style={styles.container}>\r\n                <PayslipSingleLineHeader columnLabel={`Name of the Employer`} />\r\n              </View>\r\n              <Text style={styles.texttitle}>\r\n                {MainInfo.company_name && MainInfo.company_name\r\n                  ? MainInfo.company_name\r\n                  : \"\"}\r\n              </Text>\r\n\r\n              <View style={styles.container}>\r\n                <PayslipSingleLineHeader columnLabel={`Name of the Employee`} />\r\n              </View>\r\n              <Text style={styles.texttitle}>\r\n                {MainInfo && MainInfo.EmpName ? MainInfo.EmpName : \"\"}\r\n              </Text>\r\n              <View style={styles.container}>\r\n                <PayslipHeader firstColumn={`Item`} secondColumn={`Amount`} />\r\n              </View>\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Basic Pay`}\r\n                  value={\r\n                    MainInfo && MainInfo.BasicSalary\r\n                      ? MainInfo.BasicSalary\r\n                      : \"0.00\"\r\n                  }\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Total Allowances`}\r\n                  subLabel={`breakdown shown below`}\r\n                  value={\r\n                    MainInfo && MainInfo.totAllowance\r\n                      ? MainInfo.totAllowance\r\n                      : \"0.00\"\r\n                  }\r\n                />\r\n              </View>\r\n              {MainInfo.TotAllowanceList &&\r\n                MainInfo.TotAllowanceList.length > 0 && (\r\n                  <PayslipTableRow TableList={MainInfo.TotAllowanceList} />\r\n                )}\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Total Deductions`}\r\n                  subLabel={`breakdown shown below`}\r\n                  value={\r\n                    MainInfo && MainInfo.totDeduct ? MainInfo.totDeduct : \"0.00\"\r\n                  }\r\n                />\r\n              </View>\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Employee's CPF deduction`}\r\n                  subLabel={`breakdown shown below`}\r\n                  value={\r\n                    MainInfo && MainInfo.totDeduct ? MainInfo.totDeduct : \"0.00\"\r\n                  }\r\n                />\r\n              </View>\r\n              <View style={styles.container}>\r\n                {MainInfo.TotDeductionList &&\r\n                  MainInfo.TotDeductionList.length > 0 && (\r\n                    <PayslipTableRow TableList={MainInfo.TotDeductionList} />\r\n                  )}\r\n              </View>\r\n\r\n              <View style={styles.container}>\r\n                <PayslipSingleLineHeader columnLabel={`Date of Payment`} />\r\n              </View>\r\n              <Text style={styles.texttitle}>\r\n                {MainInfo && MainInfo.dateofPay\r\n                  ? moment(MainInfo.dateofPay).format(\"DD-MM-YYYY\")\r\n                  : \"\"}\r\n              </Text>\r\n              <View style={styles.container}>\r\n                <PayslipSingleLineHeader columnLabel={`Mode of Payment`} />\r\n              </View>\r\n              <Text style={styles.texttitle}>\r\n                {MainInfo && MainInfo.modeofPayId_text\r\n                  ? MainInfo.modeofPayId_text\r\n                  : \"\"}\r\n              </Text>\r\n\r\n              <View style={styles.container}>\r\n                <PayslipSingleLineHeader columnLabel={`Over time Details`} />\r\n              </View>\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Overtime Hours Worked`}\r\n                  subLabel={``}\r\n                  value={\r\n                    MainInfo\r\n                      ? Number(MainInfo.firstOverTimeHour) +\r\n                        Number(MainInfo.secondOverTimeHour)\r\n                      : \"0\"\r\n                  }\r\n                />\r\n              </View>\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Total Overtime Pay`}\r\n                  subLabel={`breakdown shown below`}\r\n                  value={\r\n                    MainInfo && MainInfo.totOTPay ? MainInfo.totOTPay : \"0.00\"\r\n                  }\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.container}>\r\n                <PayslipHeader firstColumn={`Item`} secondColumn={`Amount`} />\r\n              </View>\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Others Additional Payments`}\r\n                  subLabel={`(Breakdown shown below)`}\r\n                  value={MainInfo && MainInfo.AddPay ? MainInfo.AddPay : \"0.00\"}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.container}>\r\n                {MainInfo.AddPaymentList &&\r\n                  MainInfo.AddPaymentList.length > 0 && (\r\n                    <PayslipTableRow TableList={MainInfo.AddPaymentList} />\r\n                  )}\r\n              </View>\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Net Pay`}\r\n                  subLabel={`breakdown shown below`}\r\n                  value={MainInfo && MainInfo.netPay ? MainInfo.netPay : \"0.00\"}\r\n                />\r\n              </View>\r\n              <View style={styles.container}>\r\n                <PayslipStaticRow\r\n                  Label={`Employer's CPF Contributions`}\r\n                  subLabel={\"\"}\r\n                  value={\r\n                    MainInfo && MainInfo.empCPFCont\r\n                      ? MainInfo.empCPFCont\r\n                      : \"0.00\"\r\n                  }\r\n                />\r\n              </View>\r\n            </Page>\r\n          ))}\r\n      </Document>\r\n    );\r\n  }\r\n}\r\nexport default Payslip;\r\n"]},"metadata":{},"sourceType":"module"}