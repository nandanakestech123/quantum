{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Inventory\\\\ItemUsageList\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalSelect, NormalButton, NormalDate, TableWrapper, NormalMultiSelect } from \"component/common\";\nimport { withTranslation } from \"react-i18next\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nexport class ItemUsageListClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemMemoList: [],\n      meta: {},\n      itemMemoListHeader: [{\n        label: \"Branch\"\n      }, {\n        label: \"Treatment\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Usage products\"\n      }, {\n        label: \"Qty\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"UOM\"\n      }, {\n        label: \"Stock\"\n      }, {\n        label: \"Item Code\"\n      }, {\n        label: \"Link Code\"\n      }],\n      startDate: new Date(),\n      endDate: new Date(),\n      Treatment: [],\n      inventoryItem: [],\n      InventoryList: [],\n      TreatmentList: [],\n      isMounted: true,\n      page: 1,\n      limit: 10\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.geTreatmentMultiList = async () => {\n      let {\n        TreatmentList\n      } = this.state;\n      await this.props.getCommonApi(\"servicelist/\").then(async res => {\n        for (let key of res.data) {\n          TreatmentList.push({\n            value: key.id,\n            label: key.item_name\n          });\n        }\n\n        await this.updateState({\n          TreatmentList\n        });\n      });\n    };\n\n    this.getMultiInventoryList = async () => {\n      let {\n        InventoryList\n      } = this.state;\n      await this.props.getCommonApi(\"productlist/\").then(async res => {\n        for (let key of res.data) {\n          InventoryList.push({\n            value: key.id,\n            label: key.item_name\n          });\n        }\n\n        await this.updateState({\n          InventoryList\n        });\n      });\n    };\n\n    this.getItemMemoList = data => {\n      let {\n        page,\n        limit,\n        startDate,\n        endDate,\n        inventoryItem,\n        Treatment,\n        meta\n      } = this.state;\n      let inventory = [];\n      let treatment = [];\n      inventory = inventoryItem.map(e => e.value).reduce((a, e) => a === \"\" ? e : a + \",\" + e, \"\");\n      treatment = Treatment.map(e => e.value).reduce((a, e) => a === \"\" ? e : a + \",\" + e, \"\");\n      this.props.getCommonApi(`treatmentusagelist/?from_date=${dateFormat(startDate)}&to_date=${dateFormat(endDate)}&item_desc=${inventory}&treatment_desc=${treatment}&page=${page}&limit=${limit}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(key, \"itemmemolist\");\n\n        if (status === 200) {\n          if (data) {\n            this.setState({\n              itemMemoList: data.dataList,\n              meta: data.meta.pagination\n            });\n          }\n        }\n      });\n    };\n\n    this.handlePagination = async page => {\n      console.log(page, \"dsfsdfsdfsdf\");\n      await this.setState({\n        page: page.page\n      });\n      this.getItemMemoList(page);\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      await this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleTreatmentMultiSelect = (data = []) => {\n      console.log(data);\n      this.updateState({\n        Treatment: data\n      });\n    };\n\n    this.handleProductMultiSelect = (data = []) => {\n      console.log(data);\n      this.updateState({\n        inventoryItem: data\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentDidMount() {\n    this.getItemMemoList({});\n    this.geTreatmentMultiList();\n    this.getMultiInventoryList();\n  }\n\n  render() {\n    let {\n      itemMemoList,\n      itemMemoListHeader,\n      startDate,\n      InventoryList,\n      TreatmentList,\n      Treatment,\n      inventoryItem,\n      endDate,\n      meta\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"itemUsageList-section col-md-11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label-head mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, t(\"Treatment Usage\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, t(\"From Date\")), /*#__PURE__*/React.createElement(NormalDate, {\n      value: new Date(startDate),\n      name: \"startDate\",\n      type: \"date\",\n      onChange: this.handleChange,\n      maxDate: new Date(),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, t(\"To Date\")), /*#__PURE__*/React.createElement(NormalDate, {\n      value: new Date(endDate),\n      name: \"endDate\",\n      type: \"date\",\n      onChange: this.handleChange,\n      minDate: new Date(startDate),\n      maxDate: new Date(),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, t(\"Treatment\")), /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      placeholder: \"search service\",\n      handleMultiSelect: this.handleTreatmentMultiSelect,\n      options: TreatmentList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, t(\"Inventory Item\")), /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      handleMultiSelect: this.handleProductMultiSelect,\n      options: InventoryList,\n      placeholder: \"search product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: `d-flex py-2`,\n      mainbgrev: true,\n      className: \"col-12 mt-3\",\n      label: \"search\",\n      onClick: () => this.getItemMemoList({}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: itemMemoListHeader,\n      queryHandler: this.handlePagination,\n      pageMeta: meta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, itemMemoList && itemMemoList.length > 0 ? itemMemoList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"w-100\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-left ${!item.is_allow ? \"text-danger\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 23\n        }\n      }, item.site_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }\n      }, item.treatment_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 23\n        }\n      }, item.item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 23\n        }\n      }, item.qty)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 23\n        }\n      }, item.uom)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 23\n        }\n      }, item.service_stock)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 23\n        }\n      }, item.item_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 23\n        }\n      }, item.link_code)));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, `No data`))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi\n  }, dispatch);\n};\n\nexport const ItemUsageList = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ItemUsageListClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Inventory/ItemUsageList/index.js"],"names":["React","Component","NormalInput","NormalSelect","NormalButton","NormalDate","TableWrapper","NormalMultiSelect","withTranslation","dateFormat","getCommonApi","bindActionCreators","connect","ItemUsageListClass","state","itemMemoList","meta","itemMemoListHeader","label","divClass","startDate","Date","endDate","Treatment","inventoryItem","InventoryList","TreatmentList","isMounted","page","limit","updateState","data","setState","geTreatmentMultiList","props","then","res","key","push","value","id","item_name","getMultiInventoryList","getItemMemoList","inventory","treatment","map","e","reduce","a","status","console","log","dataList","pagination","handlePagination","handleChange","target","name","handleTreatmentMultiSelect","handleProductMultiSelect","componentWillUnmount","componentDidMount","render","t","length","item","index","is_allow","site_code","treatment_code","item_desc","qty","uom","service_stock","item_code","link_code","mapStateToProps","mapDispatchToProps","dispatch","ItemUsageList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalInput,\r\n  NormalSelect,\r\n  NormalButton,\r\n  NormalDate,\r\n  TableWrapper,\r\n  NormalMultiSelect,\r\n} from \"component/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { getCommonApi } from \"redux/actions/common\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\n\r\nexport class ItemUsageListClass extends Component {\r\n  state = {\r\n    itemMemoList: [],\r\n    meta: {},\r\n    itemMemoListHeader: [\r\n      { label: \"Branch\" },\r\n      { label: \"Treatment\", divClass: \"justify-content-end text-right\" },\r\n      { label: \"Usage products\" },\r\n      { label: \"Qty\", divClass: \"justify-content-end text-right\" },\r\n      { label: \"UOM\" },\r\n      { label: \"Stock\" },\r\n      { label: \"Item Code\" },\r\n      { label: \"Link Code\" },\r\n    ],\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    Treatment: [],\r\n    inventoryItem: [],\r\n    InventoryList: [],\r\n    TreatmentList: [],\r\n    isMounted: true,\r\n    page: 1,\r\n    limit: 10,\r\n  };\r\n  componentWillUnmount() {\r\n    this.state.isMounted = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getItemMemoList({});\r\n    this.geTreatmentMultiList();\r\n    this.getMultiInventoryList();\r\n  }\r\n  updateState = data => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n  geTreatmentMultiList = async () => {\r\n    let { TreatmentList } = this.state;\r\n    await this.props.getCommonApi(\"servicelist/\").then(async res => {\r\n      for (let key of res.data) {\r\n        TreatmentList.push({ value: key.id, label: key.item_name });\r\n      }\r\n      await this.updateState({ TreatmentList });\r\n    });\r\n  };\r\n\r\n  getMultiInventoryList = async () => {\r\n    let { InventoryList } = this.state;\r\n    await this.props.getCommonApi(\"productlist/\").then(async res => {\r\n      for (let key of res.data) {\r\n        InventoryList.push({ value: key.id, label: key.item_name });\r\n      }\r\n      await this.updateState({ InventoryList });\r\n    });\r\n  };\r\n\r\n  getItemMemoList = data => {\r\n    let { page, limit, startDate, endDate, inventoryItem, Treatment, meta } =\r\n      this.state;\r\n\r\n    let inventory = [];\r\n    let treatment = [];\r\n    inventory = inventoryItem\r\n      .map(e => e.value)\r\n      .reduce((a, e) => (a === \"\" ? e : a + \",\" + e), \"\");\r\n    treatment = Treatment.map(e => e.value).reduce(\r\n      (a, e) => (a === \"\" ? e : a + \",\" + e),\r\n      \"\"\r\n    );\r\n    this.props\r\n      .getCommonApi(\r\n        `treatmentusagelist/?from_date=${dateFormat(\r\n          startDate\r\n        )}&to_date=${dateFormat(\r\n          endDate\r\n        )}&item_desc=${inventory}&treatment_desc=${treatment}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        console.log(key, \"itemmemolist\");\r\n        if (status === 200) {\r\n          if (data) {\r\n            this.setState({\r\n              itemMemoList: data.dataList,\r\n              meta: data.meta.pagination,\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  handlePagination = async page => {\r\n    console.log(page, \"dsfsdfsdfsdf\");\r\n    await this.setState({ page: page.page });\r\n    this.getItemMemoList(page);\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    await this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleTreatmentMultiSelect = (data = []) => {\r\n    console.log(data);\r\n    this.updateState({ Treatment: data });\r\n  };\r\n\r\n  handleProductMultiSelect = (data = []) => {\r\n    console.log(data);\r\n    this.updateState({ inventoryItem: data });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      itemMemoList,\r\n      itemMemoListHeader,\r\n      startDate,\r\n      InventoryList,\r\n      TreatmentList,\r\n      Treatment,\r\n      inventoryItem,\r\n      endDate,\r\n      meta,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <div className=\"itemUsageList-section col-md-11\">\r\n        <div className=\"col-md-12\">\r\n          <p className=\"label-head mb-4\">{t(\"Treatment Usage\")}</p>\r\n        </div>\r\n        <div className=\"d-flex flex-wrap py-4\">\r\n          <div className=\"col-md-2 col-12 mb-1\">\r\n            <label>{t(\"From Date\")}</label>\r\n            <NormalDate\r\n              value={new Date(startDate)}\r\n              name=\"startDate\"\r\n              type=\"date\"\r\n              onChange={this.handleChange}\r\n              maxDate={new Date()}\r\n              showDisabledMonthNavigation\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 col-12 mb-1\">\r\n            <label>{t(\"To Date\")}</label>\r\n            <NormalDate\r\n              value={new Date(endDate)}\r\n              name=\"endDate\"\r\n              type=\"date\"\r\n              onChange={this.handleChange}\r\n              minDate={new Date(startDate)}\r\n              maxDate={new Date()}\r\n              showDisabledMonthNavigation\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-12 mb-1\">\r\n            <label>{t(\"Treatment\")}</label>\r\n\r\n            <NormalMultiSelect\r\n              placeholder=\"search service\"\r\n              handleMultiSelect={this.handleTreatmentMultiSelect}\r\n              options={TreatmentList}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-12 mb-1\">\r\n            <label>{t(\"Inventory Item\")}</label>\r\n\r\n            <NormalMultiSelect\r\n              handleMultiSelect={this.handleProductMultiSelect}\r\n              options={InventoryList}\r\n              placeholder=\"search product\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 col-12 mb-1\">\r\n            <NormalButton\r\n              buttonClass={`d-flex py-2`}\r\n              mainbgrev={true}\r\n              className=\"col-12 mt-3\"\r\n              label=\"search\"\r\n              onClick={() => this.getItemMemoList({})}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"table-container table-responsive mt-3\">\r\n          <TableWrapper\r\n            headerDetails={itemMemoListHeader}\r\n            queryHandler={this.handlePagination}\r\n            pageMeta={meta}\r\n          >\r\n            {itemMemoList && itemMemoList.length > 0 ? (\r\n              itemMemoList.map((item, index) => {\r\n                return (\r\n                  <tr className=\"w-100\" key={index}>\r\n                    <td>\r\n                      <div\r\n                        className={`text-left ${\r\n                          !item.is_allow ? \"text-danger\" : \"\"\r\n                        }`}\r\n                      >\r\n                        {item.site_code}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-right\">{item.treatment_code}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-left\">{item.item_desc}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-right\">{item.qty}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-left\">{item.uom}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-left\">{item.service_stock}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-left\">{item.item_code}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"text-left\">{item.link_code}</div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"12\">\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    {`No data`}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </TableWrapper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const ItemUsageList = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(ItemUsageListClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}