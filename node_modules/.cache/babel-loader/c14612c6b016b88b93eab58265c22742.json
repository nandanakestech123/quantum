{"ast":null,"code":"/**\r\n * DevExtreme (viz/tree_map/tiling.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.getAlgorithm = getAlgorithm;\nexports.addAlgorithm = addAlgorithm;\nexports.setDefaultAlgorithm = setDefaultAlgorithm;\nexports.buildSidesData = buildSidesData;\nexports.calculateRectangles = calculateRectangles;\nexports.getStaticSideIndex = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _round = Math.round;\nvar algorithms = {};\nvar defaultAlgorithm;\n\nfunction getAlgorithm(value) {\n  return algorithms[(0, _utils.normalizeEnum)(value)] || (0, _type.isFunction)(value) && value || defaultAlgorithm;\n}\n\nfunction addAlgorithm(name, callback) {\n  algorithms[name] = callback;\n}\n\nfunction setDefaultAlgorithm(name) {\n  defaultAlgorithm = algorithms[name];\n}\n\nvar directionToIndexOffsets = {};\ndirectionToIndexOffsets[-1] = [2, 0];\ndirectionToIndexOffsets[1] = [0, 2];\n\nvar getStaticSideIndex = function (rect) {\n  return rect[2] - rect[0] < rect[3] - rect[1] ? 0 : 1;\n};\n\nexports.getStaticSideIndex = getStaticSideIndex;\n\nfunction buildSidesData(rect, directions, _staticSideIndex) {\n  var staticSideIndex = void 0 !== _staticSideIndex ? _staticSideIndex : getStaticSideIndex(rect);\n  var variedSideIndex = 1 - staticSideIndex;\n  var staticSideDirection = directions[staticSideIndex];\n  var variedSideDirection = directions[variedSideIndex];\n  var staticSideIndexOffsets = directionToIndexOffsets[staticSideDirection];\n  var variedSideIndexOffsets = directionToIndexOffsets[variedSideDirection];\n  return {\n    staticSide: rect[2 + staticSideIndex] - rect[staticSideIndex],\n    variedSide: rect[2 + variedSideIndex] - rect[variedSideIndex],\n    static1: staticSideIndex + staticSideIndexOffsets[0],\n    static2: staticSideIndex + staticSideIndexOffsets[1],\n    varied1: variedSideIndex + variedSideIndexOffsets[0],\n    varied2: variedSideIndex + variedSideIndexOffsets[1],\n    staticDir: staticSideDirection,\n    variedDir: variedSideDirection\n  };\n}\n\nfunction calculateRectangles(nodes, head, totalRect, sidesData, rowData) {\n  var i;\n  var ii;\n  var variedSidePart = [0, 0, 0, 0];\n  var static1 = sidesData.static1;\n  var static2 = sidesData.static2;\n  var position = totalRect[static1];\n  var dir = sidesData.staticDir;\n  var side = sidesData.staticSide;\n  var sum = rowData.sum;\n  var rect;\n  var delta;\n  variedSidePart[sidesData.varied1] = totalRect[sidesData.varied1];\n  variedSidePart[sidesData.varied2] = totalRect[sidesData.varied1] + sidesData.variedDir * rowData.side;\n\n  for (i = head, ii = head + rowData.count; i < ii; ++i) {\n    rect = variedSidePart.slice();\n    rect[static1] = position;\n    delta = _round(side * nodes[i].value / sum) || 0;\n    sum -= nodes[i].value;\n    side -= delta;\n    position += dir * delta;\n    rect[static2] = position;\n    nodes[i].rect = rect;\n  }\n\n  totalRect[sidesData.varied1] = variedSidePart[sidesData.varied2];\n}","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/tree_map/tiling.js"],"names":["exports","getAlgorithm","addAlgorithm","setDefaultAlgorithm","buildSidesData","calculateRectangles","getStaticSideIndex","_type","require","_utils","_round","Math","round","algorithms","defaultAlgorithm","value","normalizeEnum","isFunction","name","callback","directionToIndexOffsets","rect","directions","_staticSideIndex","staticSideIndex","variedSideIndex","staticSideDirection","variedSideDirection","staticSideIndexOffsets","variedSideIndexOffsets","staticSide","variedSide","static1","static2","varied1","varied2","staticDir","variedDir","nodes","head","totalRect","sidesData","rowData","i","ii","variedSidePart","position","dir","side","sum","delta","count","slice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACC,YAAR,GAAuBA,YAAvB;AACAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AACAF,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;AACAH,OAAO,CAACI,cAAR,GAAyBA,cAAzB;AACAJ,OAAO,CAACK,mBAAR,GAA8BA,mBAA9B;AACAL,OAAO,CAACM,kBAAR,GAA6B,KAAK,CAAlC;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIE,MAAM,GAAGC,IAAI,CAACC,KAAlB;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,gBAAJ;;AAEA,SAASb,YAAT,CAAsBc,KAAtB,EAA6B;AACzB,SAAOF,UAAU,CAAC,CAAC,GAAGJ,MAAM,CAACO,aAAX,EAA0BD,KAA1B,CAAD,CAAV,IAAgD,CAAC,GAAGR,KAAK,CAACU,UAAV,EAAsBF,KAAtB,KAAgCA,KAAhF,IAAyFD,gBAAhG;AACH;;AAED,SAASZ,YAAT,CAAsBgB,IAAtB,EAA4BC,QAA5B,EAAsC;AAClCN,EAAAA,UAAU,CAACK,IAAD,CAAV,GAAmBC,QAAnB;AACH;;AAED,SAAShB,mBAAT,CAA6Be,IAA7B,EAAmC;AAC/BJ,EAAAA,gBAAgB,GAAGD,UAAU,CAACK,IAAD,CAA7B;AACH;;AACD,IAAIE,uBAAuB,GAAG,EAA9B;AACAA,uBAAuB,CAAC,CAAC,CAAF,CAAvB,GAA8B,CAAC,CAAD,EAAI,CAAJ,CAA9B;AACAA,uBAAuB,CAAC,CAAD,CAAvB,GAA6B,CAAC,CAAD,EAAI,CAAJ,CAA7B;;AACA,IAAId,kBAAkB,GAAG,UAASe,IAAT,EAAe;AACpC,SAAOA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd,GAAoBA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAlC,GAAwC,CAAxC,GAA4C,CAAnD;AACH,CAFD;;AAGArB,OAAO,CAACM,kBAAR,GAA6BA,kBAA7B;;AAEA,SAASF,cAAT,CAAwBiB,IAAxB,EAA8BC,UAA9B,EAA0CC,gBAA1C,EAA4D;AACxD,MAAIC,eAAe,GAAG,KAAK,CAAL,KAAWD,gBAAX,GAA8BA,gBAA9B,GAAiDjB,kBAAkB,CAACe,IAAD,CAAzF;AACA,MAAII,eAAe,GAAG,IAAID,eAA1B;AACA,MAAIE,mBAAmB,GAAGJ,UAAU,CAACE,eAAD,CAApC;AACA,MAAIG,mBAAmB,GAAGL,UAAU,CAACG,eAAD,CAApC;AACA,MAAIG,sBAAsB,GAAGR,uBAAuB,CAACM,mBAAD,CAApD;AACA,MAAIG,sBAAsB,GAAGT,uBAAuB,CAACO,mBAAD,CAApD;AACA,SAAO;AACHG,IAAAA,UAAU,EAAET,IAAI,CAAC,IAAIG,eAAL,CAAJ,GAA4BH,IAAI,CAACG,eAAD,CADzC;AAEHO,IAAAA,UAAU,EAAEV,IAAI,CAAC,IAAII,eAAL,CAAJ,GAA4BJ,IAAI,CAACI,eAAD,CAFzC;AAGHO,IAAAA,OAAO,EAAER,eAAe,GAAGI,sBAAsB,CAAC,CAAD,CAH9C;AAIHK,IAAAA,OAAO,EAAET,eAAe,GAAGI,sBAAsB,CAAC,CAAD,CAJ9C;AAKHM,IAAAA,OAAO,EAAET,eAAe,GAAGI,sBAAsB,CAAC,CAAD,CAL9C;AAMHM,IAAAA,OAAO,EAAEV,eAAe,GAAGI,sBAAsB,CAAC,CAAD,CAN9C;AAOHO,IAAAA,SAAS,EAAEV,mBAPR;AAQHW,IAAAA,SAAS,EAAEV;AARR,GAAP;AAUH;;AAED,SAAStB,mBAAT,CAA6BiC,KAA7B,EAAoCC,IAApC,EAA0CC,SAA1C,EAAqDC,SAArD,EAAgEC,OAAhE,EAAyE;AACrE,MAAIC,CAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;AACA,MAAIb,OAAO,GAAGS,SAAS,CAACT,OAAxB;AACA,MAAIC,OAAO,GAAGQ,SAAS,CAACR,OAAxB;AACA,MAAIa,QAAQ,GAAGN,SAAS,CAACR,OAAD,CAAxB;AACA,MAAIe,GAAG,GAAGN,SAAS,CAACL,SAApB;AACA,MAAIY,IAAI,GAAGP,SAAS,CAACX,UAArB;AACA,MAAImB,GAAG,GAAGP,OAAO,CAACO,GAAlB;AACA,MAAI5B,IAAJ;AACA,MAAI6B,KAAJ;AACAL,EAAAA,cAAc,CAACJ,SAAS,CAACP,OAAX,CAAd,GAAoCM,SAAS,CAACC,SAAS,CAACP,OAAX,CAA7C;AACAW,EAAAA,cAAc,CAACJ,SAAS,CAACN,OAAX,CAAd,GAAoCK,SAAS,CAACC,SAAS,CAACP,OAAX,CAAT,GAA+BO,SAAS,CAACJ,SAAV,GAAsBK,OAAO,CAACM,IAAjG;;AACA,OAAKL,CAAC,GAAGJ,IAAJ,EAAUK,EAAE,GAAGL,IAAI,GAAGG,OAAO,CAACS,KAAnC,EAA0CR,CAAC,GAAGC,EAA9C,EAAkD,EAAED,CAApD,EAAuD;AACnDtB,IAAAA,IAAI,GAAGwB,cAAc,CAACO,KAAf,EAAP;AACA/B,IAAAA,IAAI,CAACW,OAAD,CAAJ,GAAgBc,QAAhB;AACAI,IAAAA,KAAK,GAAGxC,MAAM,CAACsC,IAAI,GAAGV,KAAK,CAACK,CAAD,CAAL,CAAS5B,KAAhB,GAAwBkC,GAAzB,CAAN,IAAuC,CAA/C;AACAA,IAAAA,GAAG,IAAIX,KAAK,CAACK,CAAD,CAAL,CAAS5B,KAAhB;AACAiC,IAAAA,IAAI,IAAIE,KAAR;AACAJ,IAAAA,QAAQ,IAAIC,GAAG,GAAGG,KAAlB;AACA7B,IAAAA,IAAI,CAACY,OAAD,CAAJ,GAAgBa,QAAhB;AACAR,IAAAA,KAAK,CAACK,CAAD,CAAL,CAAStB,IAAT,GAAgBA,IAAhB;AACH;;AACDmB,EAAAA,SAAS,CAACC,SAAS,CAACP,OAAX,CAAT,GAA+BW,cAAc,CAACJ,SAAS,CAACN,OAAX,CAA7C;AACH","sourcesContent":["/**\r\n * DevExtreme (viz/tree_map/tiling.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getAlgorithm = getAlgorithm;\r\nexports.addAlgorithm = addAlgorithm;\r\nexports.setDefaultAlgorithm = setDefaultAlgorithm;\r\nexports.buildSidesData = buildSidesData;\r\nexports.calculateRectangles = calculateRectangles;\r\nexports.getStaticSideIndex = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _round = Math.round;\r\nvar algorithms = {};\r\nvar defaultAlgorithm;\r\n\r\nfunction getAlgorithm(value) {\r\n    return algorithms[(0, _utils.normalizeEnum)(value)] || (0, _type.isFunction)(value) && value || defaultAlgorithm\r\n}\r\n\r\nfunction addAlgorithm(name, callback) {\r\n    algorithms[name] = callback\r\n}\r\n\r\nfunction setDefaultAlgorithm(name) {\r\n    defaultAlgorithm = algorithms[name]\r\n}\r\nvar directionToIndexOffsets = {};\r\ndirectionToIndexOffsets[-1] = [2, 0];\r\ndirectionToIndexOffsets[1] = [0, 2];\r\nvar getStaticSideIndex = function(rect) {\r\n    return rect[2] - rect[0] < rect[3] - rect[1] ? 0 : 1\r\n};\r\nexports.getStaticSideIndex = getStaticSideIndex;\r\n\r\nfunction buildSidesData(rect, directions, _staticSideIndex) {\r\n    var staticSideIndex = void 0 !== _staticSideIndex ? _staticSideIndex : getStaticSideIndex(rect);\r\n    var variedSideIndex = 1 - staticSideIndex;\r\n    var staticSideDirection = directions[staticSideIndex];\r\n    var variedSideDirection = directions[variedSideIndex];\r\n    var staticSideIndexOffsets = directionToIndexOffsets[staticSideDirection];\r\n    var variedSideIndexOffsets = directionToIndexOffsets[variedSideDirection];\r\n    return {\r\n        staticSide: rect[2 + staticSideIndex] - rect[staticSideIndex],\r\n        variedSide: rect[2 + variedSideIndex] - rect[variedSideIndex],\r\n        static1: staticSideIndex + staticSideIndexOffsets[0],\r\n        static2: staticSideIndex + staticSideIndexOffsets[1],\r\n        varied1: variedSideIndex + variedSideIndexOffsets[0],\r\n        varied2: variedSideIndex + variedSideIndexOffsets[1],\r\n        staticDir: staticSideDirection,\r\n        variedDir: variedSideDirection\r\n    }\r\n}\r\n\r\nfunction calculateRectangles(nodes, head, totalRect, sidesData, rowData) {\r\n    var i;\r\n    var ii;\r\n    var variedSidePart = [0, 0, 0, 0];\r\n    var static1 = sidesData.static1;\r\n    var static2 = sidesData.static2;\r\n    var position = totalRect[static1];\r\n    var dir = sidesData.staticDir;\r\n    var side = sidesData.staticSide;\r\n    var sum = rowData.sum;\r\n    var rect;\r\n    var delta;\r\n    variedSidePart[sidesData.varied1] = totalRect[sidesData.varied1];\r\n    variedSidePart[sidesData.varied2] = totalRect[sidesData.varied1] + sidesData.variedDir * rowData.side;\r\n    for (i = head, ii = head + rowData.count; i < ii; ++i) {\r\n        rect = variedSidePart.slice();\r\n        rect[static1] = position;\r\n        delta = _round(side * nodes[i].value / sum) || 0;\r\n        sum -= nodes[i].value;\r\n        side -= delta;\r\n        position += dir * delta;\r\n        rect[static2] = position;\r\n        nodes[i].rect = rect\r\n    }\r\n    totalRect[sidesData.varied1] = variedSidePart[sidesData.varied2]\r\n}\r\n"]},"metadata":{},"sourceType":"script"}