{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.area_item.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.AreaItem = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _element = require(\"../../core/element\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _position = require(\"../../core/utils/position\");\n\nvar _type = require(\"../../core/utils/type\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar PIVOTGRID_EXPAND_CLASS = \"dx-expand\";\n\nvar getRealElementWidth = function (element) {\n  var width = 0;\n  var offsetWidth = element.offsetWidth;\n\n  if (element.getBoundingClientRect) {\n    var clientRect = (0, _position.getBoundingRect)(element);\n    width = clientRect.width;\n\n    if (!width) {\n      width = clientRect.right - clientRect.left;\n    }\n\n    if (width <= offsetWidth - 1) {\n      width = offsetWidth;\n    }\n  }\n\n  return width > 0 ? width : offsetWidth;\n};\n\nfunction getFakeTableOffset(scrollPos, elementOffset, tableSize, viewPortSize) {\n  var offset = 0;\n  var halfTableCount = 0;\n  var halfTableSize = tableSize / 2;\n\n  if (scrollPos + viewPortSize - (elementOffset + tableSize) > 1) {\n    if (scrollPos >= elementOffset + tableSize + halfTableSize) {\n      halfTableCount = parseInt((scrollPos - (elementOffset + tableSize)) / halfTableSize, 10);\n    }\n\n    offset = elementOffset + tableSize + halfTableSize * halfTableCount;\n  } else {\n    if (scrollPos < elementOffset) {\n      if (scrollPos <= elementOffset - halfTableSize) {\n        halfTableCount = parseInt((scrollPos - (elementOffset - halfTableSize)) / halfTableSize, 10);\n      }\n\n      offset = elementOffset - (tableSize - halfTableSize * halfTableCount);\n    } else {\n      offset = elementOffset;\n    }\n  }\n\n  return offset;\n}\n\nvar AreaItem = _class.default.inherit({\n  _getRowElement: function (index) {\n    var that = this;\n\n    if (that._tableElement && that._tableElement.length > 0) {\n      return that._tableElement[0].rows[index];\n    }\n\n    return null;\n  },\n  _createGroupElement: function () {\n    return (0, _renderer.default)(\"<div>\");\n  },\n  _createTableElement: function () {\n    return (0, _renderer.default)(\"<table>\");\n  },\n  _getCellText: function (cell, encodeHtml) {\n    var cellText = cell.isWhiteSpace ? \"&nbsp\" : cell.text || \"&nbsp\";\n\n    if (encodeHtml && (cellText.indexOf(\"<\") !== -1 || cellText.indexOf(\">\") !== -1)) {\n      cellText = (0, _renderer.default)(\"<div>\").text(cellText).html();\n    }\n\n    return cellText;\n  },\n  _getRowClassNames: function () {},\n  _applyCustomStyles: function (options) {\n    if (options.cell.width) {\n      options.cssArray.push(\"min-width:\" + options.cell.width + \"px\");\n    }\n\n    if (options.cell.sorted) {\n      options.classArray.push(\"dx-pivotgrid-sorted\");\n    }\n  },\n  _getMainElementMarkup: function () {\n    return \"<tbody>\";\n  },\n  _getCloseMainElementMarkup: function () {\n    return \"</tbody>\";\n  },\n  _renderTableContent: function (tableElement, data) {\n    var that = this;\n    var rowsCount = data.length;\n    var row;\n    var cell;\n    var i;\n    var j;\n    var rowElement;\n    var cellElement;\n    var cellText;\n    var rtlEnabled = that.option(\"rtlEnabled\");\n    var markupArray = [];\n    var encodeHtml = that.option(\"encodeHtml\");\n    var rowClassNames;\n    var colspan = \"colspan='\";\n    var rowspan = \"rowspan='\";\n    tableElement.data(\"area\", that._getAreaName());\n    tableElement.data(\"data\", data);\n    tableElement.css(\"width\", \"\");\n    markupArray.push(that._getMainElementMarkup());\n\n    for (i = 0; i < rowsCount; i++) {\n      row = data[i];\n      var columnMarkupArray = [];\n      rowClassNames = [];\n      markupArray.push(\"<tr \");\n\n      for (j = 0; j < row.length; j++) {\n        cell = row[j];\n\n        this._getRowClassNames(i, cell, rowClassNames);\n\n        columnMarkupArray.push(\"<td \");\n\n        if (cell) {\n          cell.rowspan && columnMarkupArray.push(rowspan + (cell.rowspan || 1) + \"'\");\n          cell.colspan && columnMarkupArray.push(colspan + (cell.colspan || 1) + \"'\");\n          var styleOptions = {\n            cellElement: cellElement,\n            cell: cell,\n            cellsCount: row.length,\n            cellIndex: j,\n            rowElement: rowElement,\n            rowIndex: i,\n            rowsCount: rowsCount,\n            rtlEnabled: rtlEnabled,\n            classArray: [],\n            cssArray: []\n          };\n\n          that._applyCustomStyles(styleOptions);\n\n          if (styleOptions.cssArray.length) {\n            columnMarkupArray.push(\"style='\");\n            columnMarkupArray.push(styleOptions.cssArray.join(\";\"));\n            columnMarkupArray.push(\"'\");\n          }\n\n          if (styleOptions.classArray.length) {\n            columnMarkupArray.push(\"class='\");\n            columnMarkupArray.push(styleOptions.classArray.join(\" \"));\n            columnMarkupArray.push(\"'\");\n          }\n\n          columnMarkupArray.push(\">\");\n\n          if ((0, _type.isDefined)(cell.expanded)) {\n            columnMarkupArray.push(\"<div class='dx-expand-icon-container'><span class='\" + PIVOTGRID_EXPAND_CLASS + \"'></span></div>\");\n          }\n\n          cellText = this._getCellText(cell, encodeHtml);\n        } else {\n          cellText = \"\";\n        }\n\n        columnMarkupArray.push(\"<span \");\n\n        if ((0, _type.isDefined)(cell.wordWrapEnabled)) {\n          columnMarkupArray.push(\"style='white-space:\", cell.wordWrapEnabled ? \"normal\" : \"nowrap\", \";'\");\n        }\n\n        columnMarkupArray.push(\">\" + cellText + \"</span>\");\n\n        if (cell.sorted) {\n          columnMarkupArray.push(\"<span class='dx-icon-sorted'></span>\");\n        }\n\n        columnMarkupArray.push(\"</td>\");\n      }\n\n      if (rowClassNames.length) {\n        markupArray.push(\"class='\");\n        markupArray.push(rowClassNames.join(\" \"));\n        markupArray.push(\"'\");\n      }\n\n      markupArray.push(\">\");\n      markupArray.push(columnMarkupArray.join(\"\"));\n      markupArray.push(\"</tr>\");\n    }\n\n    markupArray.push(this._getCloseMainElementMarkup());\n    tableElement.append(markupArray.join(\"\"));\n\n    this._triggerOnCellPrepared(tableElement, data);\n  },\n  _triggerOnCellPrepared: function (tableElement, data) {\n    var that = this;\n    var rowElements = tableElement.find(\"tr\");\n\n    var areaName = that._getAreaName();\n\n    var onCellPrepared = that.option(\"onCellPrepared\");\n\n    var hasEvent = that.component._eventsStrategy.hasEvent(\"cellPrepared\");\n\n    var rowElement;\n    var $cellElement;\n    var onCellPreparedArgs;\n\n    var defaultActionArgs = this.component._defaultActionArgs();\n\n    var row;\n    var cell;\n    var rowIndex;\n    var columnIndex;\n\n    if (onCellPrepared || hasEvent) {\n      for (rowIndex = 0; rowIndex < data.length; rowIndex++) {\n        row = data[rowIndex];\n        rowElement = rowElements.eq(rowIndex);\n\n        for (columnIndex = 0; columnIndex < row.length; columnIndex++) {\n          cell = row[columnIndex];\n          $cellElement = rowElement.children().eq(columnIndex);\n          onCellPreparedArgs = {\n            area: areaName,\n            rowIndex: rowIndex,\n            columnIndex: columnIndex,\n            cellElement: (0, _element.getPublicElement)($cellElement),\n            cell: cell\n          };\n\n          if (hasEvent) {\n            that.component._trigger(\"onCellPrepared\", onCellPreparedArgs);\n          } else {\n            onCellPrepared((0, _extend.extend)(onCellPreparedArgs, defaultActionArgs));\n          }\n        }\n      }\n    }\n  },\n  _getRowHeight: function (index) {\n    var row = this._getRowElement(index);\n\n    var height = 0;\n    var offsetHeight = row.offsetHeight;\n\n    if (row && row.lastChild) {\n      if (row.getBoundingClientRect) {\n        var clientRect = (0, _position.getBoundingRect)(row);\n        height = clientRect.height;\n\n        if (height <= offsetHeight - 1) {\n          height = offsetHeight;\n        }\n      }\n\n      return height > 0 ? height : offsetHeight;\n    }\n\n    return 0;\n  },\n  _setRowHeight: function (index, value) {\n    var row = this._getRowElement(index);\n\n    if (row) {\n      row.style.height = value + \"px\";\n    }\n  },\n  ctor: function (component) {\n    this.component = component;\n  },\n  option: function () {\n    return this.component.option.apply(this.component, arguments);\n  },\n  getRowsLength: function () {\n    var that = this;\n\n    if (that._tableElement && that._tableElement.length > 0) {\n      return that._tableElement[0].rows.length;\n    }\n\n    return 0;\n  },\n  getRowsHeight: function () {\n    var that = this;\n    var result = [];\n    var rowsLength = that.getRowsLength();\n    var i;\n\n    for (i = 0; i < rowsLength; i++) {\n      result.push(that._getRowHeight(i));\n    }\n\n    return result;\n  },\n  setRowsHeight: function (values) {\n    var that = this;\n    var totalHeight = 0;\n    var valuesLength = values.length;\n    var i;\n\n    for (i = 0; i < valuesLength; i++) {\n      totalHeight += values[i];\n\n      that._setRowHeight(i, values[i]);\n    }\n\n    this._tableHeight = totalHeight;\n    this._tableElement[0].style.height = totalHeight + \"px\";\n  },\n  getColumnsWidth: function () {\n    var rowsLength = this.getRowsLength();\n    var rowIndex;\n    var row;\n    var i;\n    var columnIndex;\n    var processedCells = [];\n    var result = [];\n\n    var fillCells = function (cells, rowIndex, columnIndex, rowSpan, colSpan) {\n      var rowOffset;\n      var columnOffset;\n\n      for (rowOffset = 0; rowOffset < rowSpan; rowOffset++) {\n        for (columnOffset = 0; columnOffset < colSpan; columnOffset++) {\n          cells[rowIndex + rowOffset] = cells[rowIndex + rowOffset] || [];\n          cells[rowIndex + rowOffset][columnIndex + columnOffset] = true;\n        }\n      }\n    };\n\n    if (rowsLength) {\n      for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n        processedCells[rowIndex] = processedCells[rowIndex] || [];\n        row = this._getRowElement(rowIndex);\n\n        for (i = 0; i < row.cells.length; i++) {\n          for (columnIndex = 0; processedCells[rowIndex][columnIndex]; columnIndex++) {}\n\n          fillCells(processedCells, rowIndex, columnIndex, row.cells[i].rowSpan, row.cells[i].colSpan);\n\n          if (1 === row.cells[i].colSpan) {\n            result[columnIndex] = result[columnIndex] || getRealElementWidth(row.cells[i]);\n          }\n        }\n      }\n    }\n\n    return result;\n  },\n  setColumnsWidth: function (values) {\n    var i;\n    var tableElement = this._tableElement[0];\n    var colgroupElementHTML = \"\";\n    var columnsCount = this.getColumnsCount();\n    var columnWidth = [];\n\n    for (i = 0; i < columnsCount; i++) {\n      columnWidth.push(values[i] || 0);\n    }\n\n    for (i = columnsCount; i < values.length && values; i++) {\n      columnWidth[columnsCount - 1] += values[i];\n    }\n\n    for (i = 0; i < columnsCount; i++) {\n      colgroupElementHTML += '<col style=\"width: ' + columnWidth[i] + 'px\">';\n    }\n\n    this._colgroupElement.html(colgroupElementHTML);\n\n    this._tableWidth = columnWidth.reduce(function (sum, width) {\n      return sum + width;\n    }, 0);\n    tableElement.style.width = this._tableWidth + \"px\";\n    tableElement.style.tableLayout = \"fixed\";\n  },\n  resetColumnsWidth: function () {\n    this._colgroupElement.find(\"col\").width(\"auto\");\n\n    this._tableElement.css({\n      width: \"\",\n      tableLayout: \"\"\n    });\n  },\n  groupWidth: function (value) {\n    if (void 0 === value) {\n      return this._groupElement.width();\n    } else {\n      if (value >= 0) {\n        this._groupWidth = value;\n        return this._groupElement[0].style.width = value + \"px\";\n      } else {\n        return this._groupElement[0].style.width = value;\n      }\n    }\n  },\n  groupHeight: function (value) {\n    if (void 0 === value) {\n      return this._groupElement.height();\n    }\n\n    this._groupHeight = null;\n\n    if (value >= 0) {\n      this._groupHeight = value;\n      this._groupElement[0].style.height = value + \"px\";\n    } else {\n      this._groupElement[0].style.height = value;\n    }\n  },\n  groupElement: function () {\n    return this._groupElement;\n  },\n  tableElement: function () {\n    return this._tableElement;\n  },\n  element: function () {\n    return this._rootElement;\n  },\n  headElement: function () {\n    return this._tableElement.find(\"thead\");\n  },\n  _setTableCss: function (styles) {\n    if (this.option(\"rtlEnabled\")) {\n      styles.right = styles.left;\n      delete styles.left;\n    }\n\n    this.tableElement().css(styles);\n  },\n  setVirtualContentParams: function (params) {\n    this._virtualContent.css({\n      width: params.width,\n      height: params.height\n    });\n\n    this.groupElement().addClass(\"dx-virtual-mode\");\n  },\n  disableVirtualMode: function () {\n    this.groupElement().removeClass(\"dx-virtual-mode\");\n  },\n  _renderVirtualContent: function () {\n    var that = this;\n\n    if (!that._virtualContent && \"virtual\" === that.option(\"scrolling.mode\")) {\n      that._virtualContent = (0, _renderer.default)(\"<div>\").addClass(\"dx-virtual-content\").insertBefore(that._tableElement);\n    }\n  },\n  reset: function () {\n    var that = this;\n    var tableElement = that._tableElement[0];\n    that._fakeTable && that._fakeTable.detach();\n    that._fakeTable = null;\n    that.disableVirtualMode();\n    that.groupWidth(\"100%\");\n    that.groupHeight(\"auto\");\n    that.resetColumnsWidth();\n\n    if (tableElement) {\n      for (var i = 0; i < tableElement.rows.length; i++) {\n        tableElement.rows[i].style.height = \"\";\n      }\n\n      tableElement.style.height = \"\";\n      tableElement.style.width = \"100%\";\n    }\n  },\n  _updateFakeTableVisibility: function () {\n    var that = this;\n    var tableElement = that.tableElement()[0];\n    var horizontalOffsetName = that.option(\"rtlEnabled\") ? \"right\" : \"left\";\n    var fakeTableElement = that._fakeTable[0];\n\n    if (tableElement.style.top === fakeTableElement.style.top && fakeTableElement.style[horizontalOffsetName] === tableElement.style[horizontalOffsetName]) {\n      that._fakeTable.addClass(\"dx-hidden\");\n    } else {\n      that._fakeTable.removeClass(\"dx-hidden\");\n    }\n  },\n  _moveFakeTableHorizontally: function (scrollPos) {\n    var that = this;\n    var rtlEnabled = that.option(\"rtlEnabled\");\n    var offsetStyleName = rtlEnabled ? \"right\" : \"left\";\n    var tableElementOffset = parseFloat(that.tableElement()[0].style[offsetStyleName]);\n    var offset = getFakeTableOffset(scrollPos, tableElementOffset, that._tableWidth, that._groupWidth);\n\n    if (parseFloat(that._fakeTable[0].style[offsetStyleName]) !== offset) {\n      that._fakeTable[0].style[offsetStyleName] = offset + \"px\";\n    }\n  },\n  _moveFakeTableTop: function (scrollPos) {\n    var that = this;\n    var tableElementOffsetTop = parseFloat(that.tableElement()[0].style.top);\n    var offsetTop = getFakeTableOffset(scrollPos, tableElementOffsetTop, that._tableHeight, that._groupHeight);\n\n    if (parseFloat(that._fakeTable[0].style.top) !== offsetTop) {\n      that._fakeTable[0].style.top = offsetTop + \"px\";\n    }\n  },\n  _moveFakeTable: function () {\n    this._updateFakeTableVisibility();\n  },\n  _createFakeTable: function () {\n    var that = this;\n\n    if (!that._fakeTable) {\n      that._fakeTable = that.tableElement().clone().addClass(\"dx-pivot-grid-fake-table\").appendTo(that._virtualContent);\n    }\n  },\n  render: function (rootElement, data) {\n    var that = this;\n\n    if (that._tableElement) {\n      try {\n        that._tableElement[0].innerHTML = \"\";\n      } catch (e) {\n        that._tableElement.empty();\n      }\n\n      that._tableElement.attr(\"style\", \"\");\n    } else {\n      that._groupElement = that._createGroupElement();\n      that._tableElement = that._createTableElement();\n\n      that._tableElement.appendTo(that._groupElement);\n\n      that._groupElement.appendTo(rootElement);\n\n      that._rootElement = rootElement;\n    }\n\n    that._colgroupElement = (0, _renderer.default)(\"<colgroup>\").appendTo(that._tableElement);\n\n    that._renderTableContent(that._tableElement, data);\n\n    that._renderVirtualContent();\n  },\n  _getScrollable: function () {\n    return this.groupElement().data(\"dxScrollable\");\n  },\n  on: function (eventName, handler) {\n    var that = this;\n\n    var scrollable = that._getScrollable();\n\n    if (scrollable) {\n      scrollable.on(eventName, function (e) {\n        if (that.option(\"rtlEnabled\") && (0, _type.isDefined)(e.scrollOffset.left)) {\n          e.scrollOffset.left = scrollable.$content().width() - scrollable._container().width() - e.scrollOffset.left;\n        }\n\n        handler(e);\n      });\n    }\n\n    return this;\n  },\n  off: function (eventName) {\n    var scrollable = this._getScrollable();\n\n    if (scrollable) {\n      scrollable.off(eventName);\n    }\n\n    return this;\n  },\n  scrollTo: function (pos) {\n    var scrollable = this._getScrollable();\n\n    var scrollablePos = pos;\n\n    if (scrollable) {\n      if (this.option(\"rtlEnabled\")) {\n        if (\"column\" === this._getAreaName()) {\n          scrollablePos = scrollable.$content().width() - scrollable._container().width() - pos;\n        } else {\n          if (\"data\" === this._getAreaName()) {\n            scrollablePos = {\n              x: scrollable.$content().width() - scrollable._container().width() - pos.x,\n              y: pos.y\n            };\n          }\n        }\n      }\n\n      scrollable.scrollTo(scrollablePos);\n\n      if (this._virtualContent) {\n        this._createFakeTable();\n\n        this._moveFakeTable(pos);\n      }\n    }\n  },\n  updateScrollable: function () {\n    var scrollable = this._getScrollable();\n\n    if (scrollable) {\n      return scrollable.update();\n    }\n  },\n  getColumnsCount: function () {\n    var columnCount = 0;\n\n    var row = this._getRowElement(0);\n\n    var cells;\n\n    if (row) {\n      cells = row.cells;\n\n      for (var i = 0, len = cells.length; i < len; ++i) {\n        columnCount += cells[i].colSpan;\n      }\n    }\n\n    return columnCount;\n  },\n  getData: function () {\n    var tableElement = this._tableElement;\n    return tableElement ? tableElement.data(\"data\") : [];\n  }\n});\n\nexports.AreaItem = AreaItem;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/ui.pivot_grid.area_item.js"],"names":["exports","AreaItem","_renderer","_interopRequireDefault","require","_class","_element","_extend","_position","_type","obj","__esModule","PIVOTGRID_EXPAND_CLASS","getRealElementWidth","element","width","offsetWidth","getBoundingClientRect","clientRect","getBoundingRect","right","left","getFakeTableOffset","scrollPos","elementOffset","tableSize","viewPortSize","offset","halfTableCount","halfTableSize","parseInt","default","inherit","_getRowElement","index","that","_tableElement","length","rows","_createGroupElement","_createTableElement","_getCellText","cell","encodeHtml","cellText","isWhiteSpace","text","indexOf","html","_getRowClassNames","_applyCustomStyles","options","cssArray","push","sorted","classArray","_getMainElementMarkup","_getCloseMainElementMarkup","_renderTableContent","tableElement","data","rowsCount","row","i","j","rowElement","cellElement","rtlEnabled","option","markupArray","rowClassNames","colspan","rowspan","_getAreaName","css","columnMarkupArray","styleOptions","cellsCount","cellIndex","rowIndex","join","isDefined","expanded","wordWrapEnabled","append","_triggerOnCellPrepared","rowElements","find","areaName","onCellPrepared","hasEvent","component","_eventsStrategy","$cellElement","onCellPreparedArgs","defaultActionArgs","_defaultActionArgs","columnIndex","eq","children","area","getPublicElement","_trigger","extend","_getRowHeight","height","offsetHeight","lastChild","_setRowHeight","value","style","ctor","apply","arguments","getRowsLength","getRowsHeight","result","rowsLength","setRowsHeight","values","totalHeight","valuesLength","_tableHeight","getColumnsWidth","processedCells","fillCells","cells","rowSpan","colSpan","rowOffset","columnOffset","setColumnsWidth","colgroupElementHTML","columnsCount","getColumnsCount","columnWidth","_colgroupElement","_tableWidth","reduce","sum","tableLayout","resetColumnsWidth","groupWidth","_groupElement","_groupWidth","groupHeight","_groupHeight","groupElement","_rootElement","headElement","_setTableCss","styles","setVirtualContentParams","params","_virtualContent","addClass","disableVirtualMode","removeClass","_renderVirtualContent","insertBefore","reset","_fakeTable","detach","_updateFakeTableVisibility","horizontalOffsetName","fakeTableElement","top","_moveFakeTableHorizontally","offsetStyleName","tableElementOffset","parseFloat","_moveFakeTableTop","tableElementOffsetTop","offsetTop","_moveFakeTable","_createFakeTable","clone","appendTo","render","rootElement","innerHTML","e","empty","attr","_getScrollable","on","eventName","handler","scrollable","scrollOffset","$content","_container","off","scrollTo","pos","scrollablePos","x","y","updateScrollable","update","columnCount","len","getData"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.area_item.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.AreaItem = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _element = require(\"../../core/element\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PIVOTGRID_EXPAND_CLASS = \"dx-expand\";\r\nvar getRealElementWidth = function(element) {\r\n    var width = 0;\r\n    var offsetWidth = element.offsetWidth;\r\n    if (element.getBoundingClientRect) {\r\n        var clientRect = (0, _position.getBoundingRect)(element);\r\n        width = clientRect.width;\r\n        if (!width) {\r\n            width = clientRect.right - clientRect.left\r\n        }\r\n        if (width <= offsetWidth - 1) {\r\n            width = offsetWidth\r\n        }\r\n    }\r\n    return width > 0 ? width : offsetWidth\r\n};\r\n\r\nfunction getFakeTableOffset(scrollPos, elementOffset, tableSize, viewPortSize) {\r\n    var offset = 0;\r\n    var halfTableCount = 0;\r\n    var halfTableSize = tableSize / 2;\r\n    if (scrollPos + viewPortSize - (elementOffset + tableSize) > 1) {\r\n        if (scrollPos >= elementOffset + tableSize + halfTableSize) {\r\n            halfTableCount = parseInt((scrollPos - (elementOffset + tableSize)) / halfTableSize, 10)\r\n        }\r\n        offset = elementOffset + tableSize + halfTableSize * halfTableCount\r\n    } else {\r\n        if (scrollPos < elementOffset) {\r\n            if (scrollPos <= elementOffset - halfTableSize) {\r\n                halfTableCount = parseInt((scrollPos - (elementOffset - halfTableSize)) / halfTableSize, 10)\r\n            }\r\n            offset = elementOffset - (tableSize - halfTableSize * halfTableCount)\r\n        } else {\r\n            offset = elementOffset\r\n        }\r\n    }\r\n    return offset\r\n}\r\nvar AreaItem = _class.default.inherit({\r\n    _getRowElement: function(index) {\r\n        var that = this;\r\n        if (that._tableElement && that._tableElement.length > 0) {\r\n            return that._tableElement[0].rows[index]\r\n        }\r\n        return null\r\n    },\r\n    _createGroupElement: function() {\r\n        return (0, _renderer.default)(\"<div>\")\r\n    },\r\n    _createTableElement: function() {\r\n        return (0, _renderer.default)(\"<table>\")\r\n    },\r\n    _getCellText: function(cell, encodeHtml) {\r\n        var cellText = cell.isWhiteSpace ? \"&nbsp\" : cell.text || \"&nbsp\";\r\n        if (encodeHtml && (cellText.indexOf(\"<\") !== -1 || cellText.indexOf(\">\") !== -1)) {\r\n            cellText = (0, _renderer.default)(\"<div>\").text(cellText).html()\r\n        }\r\n        return cellText\r\n    },\r\n    _getRowClassNames: function() {},\r\n    _applyCustomStyles: function(options) {\r\n        if (options.cell.width) {\r\n            options.cssArray.push(\"min-width:\" + options.cell.width + \"px\")\r\n        }\r\n        if (options.cell.sorted) {\r\n            options.classArray.push(\"dx-pivotgrid-sorted\")\r\n        }\r\n    },\r\n    _getMainElementMarkup: function() {\r\n        return \"<tbody>\"\r\n    },\r\n    _getCloseMainElementMarkup: function() {\r\n        return \"</tbody>\"\r\n    },\r\n    _renderTableContent: function(tableElement, data) {\r\n        var that = this;\r\n        var rowsCount = data.length;\r\n        var row;\r\n        var cell;\r\n        var i;\r\n        var j;\r\n        var rowElement;\r\n        var cellElement;\r\n        var cellText;\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var markupArray = [];\r\n        var encodeHtml = that.option(\"encodeHtml\");\r\n        var rowClassNames;\r\n        var colspan = \"colspan='\";\r\n        var rowspan = \"rowspan='\";\r\n        tableElement.data(\"area\", that._getAreaName());\r\n        tableElement.data(\"data\", data);\r\n        tableElement.css(\"width\", \"\");\r\n        markupArray.push(that._getMainElementMarkup());\r\n        for (i = 0; i < rowsCount; i++) {\r\n            row = data[i];\r\n            var columnMarkupArray = [];\r\n            rowClassNames = [];\r\n            markupArray.push(\"<tr \");\r\n            for (j = 0; j < row.length; j++) {\r\n                cell = row[j];\r\n                this._getRowClassNames(i, cell, rowClassNames);\r\n                columnMarkupArray.push(\"<td \");\r\n                if (cell) {\r\n                    cell.rowspan && columnMarkupArray.push(rowspan + (cell.rowspan || 1) + \"'\");\r\n                    cell.colspan && columnMarkupArray.push(colspan + (cell.colspan || 1) + \"'\");\r\n                    var styleOptions = {\r\n                        cellElement: cellElement,\r\n                        cell: cell,\r\n                        cellsCount: row.length,\r\n                        cellIndex: j,\r\n                        rowElement: rowElement,\r\n                        rowIndex: i,\r\n                        rowsCount: rowsCount,\r\n                        rtlEnabled: rtlEnabled,\r\n                        classArray: [],\r\n                        cssArray: []\r\n                    };\r\n                    that._applyCustomStyles(styleOptions);\r\n                    if (styleOptions.cssArray.length) {\r\n                        columnMarkupArray.push(\"style='\");\r\n                        columnMarkupArray.push(styleOptions.cssArray.join(\";\"));\r\n                        columnMarkupArray.push(\"'\")\r\n                    }\r\n                    if (styleOptions.classArray.length) {\r\n                        columnMarkupArray.push(\"class='\");\r\n                        columnMarkupArray.push(styleOptions.classArray.join(\" \"));\r\n                        columnMarkupArray.push(\"'\")\r\n                    }\r\n                    columnMarkupArray.push(\">\");\r\n                    if ((0, _type.isDefined)(cell.expanded)) {\r\n                        columnMarkupArray.push(\"<div class='dx-expand-icon-container'><span class='\" + PIVOTGRID_EXPAND_CLASS + \"'></span></div>\")\r\n                    }\r\n                    cellText = this._getCellText(cell, encodeHtml)\r\n                } else {\r\n                    cellText = \"\"\r\n                }\r\n                columnMarkupArray.push(\"<span \");\r\n                if ((0, _type.isDefined)(cell.wordWrapEnabled)) {\r\n                    columnMarkupArray.push(\"style='white-space:\", cell.wordWrapEnabled ? \"normal\" : \"nowrap\", \";'\")\r\n                }\r\n                columnMarkupArray.push(\">\" + cellText + \"</span>\");\r\n                if (cell.sorted) {\r\n                    columnMarkupArray.push(\"<span class='dx-icon-sorted'></span>\")\r\n                }\r\n                columnMarkupArray.push(\"</td>\")\r\n            }\r\n            if (rowClassNames.length) {\r\n                markupArray.push(\"class='\");\r\n                markupArray.push(rowClassNames.join(\" \"));\r\n                markupArray.push(\"'\")\r\n            }\r\n            markupArray.push(\">\");\r\n            markupArray.push(columnMarkupArray.join(\"\"));\r\n            markupArray.push(\"</tr>\")\r\n        }\r\n        markupArray.push(this._getCloseMainElementMarkup());\r\n        tableElement.append(markupArray.join(\"\"));\r\n        this._triggerOnCellPrepared(tableElement, data)\r\n    },\r\n    _triggerOnCellPrepared: function(tableElement, data) {\r\n        var that = this;\r\n        var rowElements = tableElement.find(\"tr\");\r\n        var areaName = that._getAreaName();\r\n        var onCellPrepared = that.option(\"onCellPrepared\");\r\n        var hasEvent = that.component._eventsStrategy.hasEvent(\"cellPrepared\");\r\n        var rowElement;\r\n        var $cellElement;\r\n        var onCellPreparedArgs;\r\n        var defaultActionArgs = this.component._defaultActionArgs();\r\n        var row;\r\n        var cell;\r\n        var rowIndex;\r\n        var columnIndex;\r\n        if (onCellPrepared || hasEvent) {\r\n            for (rowIndex = 0; rowIndex < data.length; rowIndex++) {\r\n                row = data[rowIndex];\r\n                rowElement = rowElements.eq(rowIndex);\r\n                for (columnIndex = 0; columnIndex < row.length; columnIndex++) {\r\n                    cell = row[columnIndex];\r\n                    $cellElement = rowElement.children().eq(columnIndex);\r\n                    onCellPreparedArgs = {\r\n                        area: areaName,\r\n                        rowIndex: rowIndex,\r\n                        columnIndex: columnIndex,\r\n                        cellElement: (0, _element.getPublicElement)($cellElement),\r\n                        cell: cell\r\n                    };\r\n                    if (hasEvent) {\r\n                        that.component._trigger(\"onCellPrepared\", onCellPreparedArgs)\r\n                    } else {\r\n                        onCellPrepared((0, _extend.extend)(onCellPreparedArgs, defaultActionArgs))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getRowHeight: function(index) {\r\n        var row = this._getRowElement(index);\r\n        var height = 0;\r\n        var offsetHeight = row.offsetHeight;\r\n        if (row && row.lastChild) {\r\n            if (row.getBoundingClientRect) {\r\n                var clientRect = (0, _position.getBoundingRect)(row);\r\n                height = clientRect.height;\r\n                if (height <= offsetHeight - 1) {\r\n                    height = offsetHeight\r\n                }\r\n            }\r\n            return height > 0 ? height : offsetHeight\r\n        }\r\n        return 0\r\n    },\r\n    _setRowHeight: function(index, value) {\r\n        var row = this._getRowElement(index);\r\n        if (row) {\r\n            row.style.height = value + \"px\"\r\n        }\r\n    },\r\n    ctor: function(component) {\r\n        this.component = component\r\n    },\r\n    option: function() {\r\n        return this.component.option.apply(this.component, arguments)\r\n    },\r\n    getRowsLength: function() {\r\n        var that = this;\r\n        if (that._tableElement && that._tableElement.length > 0) {\r\n            return that._tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    getRowsHeight: function() {\r\n        var that = this;\r\n        var result = [];\r\n        var rowsLength = that.getRowsLength();\r\n        var i;\r\n        for (i = 0; i < rowsLength; i++) {\r\n            result.push(that._getRowHeight(i))\r\n        }\r\n        return result\r\n    },\r\n    setRowsHeight: function(values) {\r\n        var that = this;\r\n        var totalHeight = 0;\r\n        var valuesLength = values.length;\r\n        var i;\r\n        for (i = 0; i < valuesLength; i++) {\r\n            totalHeight += values[i];\r\n            that._setRowHeight(i, values[i])\r\n        }\r\n        this._tableHeight = totalHeight;\r\n        this._tableElement[0].style.height = totalHeight + \"px\"\r\n    },\r\n    getColumnsWidth: function() {\r\n        var rowsLength = this.getRowsLength();\r\n        var rowIndex;\r\n        var row;\r\n        var i;\r\n        var columnIndex;\r\n        var processedCells = [];\r\n        var result = [];\r\n        var fillCells = function(cells, rowIndex, columnIndex, rowSpan, colSpan) {\r\n            var rowOffset;\r\n            var columnOffset;\r\n            for (rowOffset = 0; rowOffset < rowSpan; rowOffset++) {\r\n                for (columnOffset = 0; columnOffset < colSpan; columnOffset++) {\r\n                    cells[rowIndex + rowOffset] = cells[rowIndex + rowOffset] || [];\r\n                    cells[rowIndex + rowOffset][columnIndex + columnOffset] = true\r\n                }\r\n            }\r\n        };\r\n        if (rowsLength) {\r\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\r\n                processedCells[rowIndex] = processedCells[rowIndex] || [];\r\n                row = this._getRowElement(rowIndex);\r\n                for (i = 0; i < row.cells.length; i++) {\r\n                    for (columnIndex = 0; processedCells[rowIndex][columnIndex]; columnIndex++) {}\r\n                    fillCells(processedCells, rowIndex, columnIndex, row.cells[i].rowSpan, row.cells[i].colSpan);\r\n                    if (1 === row.cells[i].colSpan) {\r\n                        result[columnIndex] = result[columnIndex] || getRealElementWidth(row.cells[i])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    setColumnsWidth: function(values) {\r\n        var i;\r\n        var tableElement = this._tableElement[0];\r\n        var colgroupElementHTML = \"\";\r\n        var columnsCount = this.getColumnsCount();\r\n        var columnWidth = [];\r\n        for (i = 0; i < columnsCount; i++) {\r\n            columnWidth.push(values[i] || 0)\r\n        }\r\n        for (i = columnsCount; i < values.length && values; i++) {\r\n            columnWidth[columnsCount - 1] += values[i]\r\n        }\r\n        for (i = 0; i < columnsCount; i++) {\r\n            colgroupElementHTML += '<col style=\"width: ' + columnWidth[i] + 'px\">'\r\n        }\r\n        this._colgroupElement.html(colgroupElementHTML);\r\n        this._tableWidth = columnWidth.reduce(function(sum, width) {\r\n            return sum + width\r\n        }, 0);\r\n        tableElement.style.width = this._tableWidth + \"px\";\r\n        tableElement.style.tableLayout = \"fixed\"\r\n    },\r\n    resetColumnsWidth: function() {\r\n        this._colgroupElement.find(\"col\").width(\"auto\");\r\n        this._tableElement.css({\r\n            width: \"\",\r\n            tableLayout: \"\"\r\n        })\r\n    },\r\n    groupWidth: function(value) {\r\n        if (void 0 === value) {\r\n            return this._groupElement.width()\r\n        } else {\r\n            if (value >= 0) {\r\n                this._groupWidth = value;\r\n                return this._groupElement[0].style.width = value + \"px\"\r\n            } else {\r\n                return this._groupElement[0].style.width = value\r\n            }\r\n        }\r\n    },\r\n    groupHeight: function(value) {\r\n        if (void 0 === value) {\r\n            return this._groupElement.height()\r\n        }\r\n        this._groupHeight = null;\r\n        if (value >= 0) {\r\n            this._groupHeight = value;\r\n            this._groupElement[0].style.height = value + \"px\"\r\n        } else {\r\n            this._groupElement[0].style.height = value\r\n        }\r\n    },\r\n    groupElement: function() {\r\n        return this._groupElement\r\n    },\r\n    tableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    element: function() {\r\n        return this._rootElement\r\n    },\r\n    headElement: function() {\r\n        return this._tableElement.find(\"thead\")\r\n    },\r\n    _setTableCss: function(styles) {\r\n        if (this.option(\"rtlEnabled\")) {\r\n            styles.right = styles.left;\r\n            delete styles.left\r\n        }\r\n        this.tableElement().css(styles)\r\n    },\r\n    setVirtualContentParams: function(params) {\r\n        this._virtualContent.css({\r\n            width: params.width,\r\n            height: params.height\r\n        });\r\n        this.groupElement().addClass(\"dx-virtual-mode\")\r\n    },\r\n    disableVirtualMode: function() {\r\n        this.groupElement().removeClass(\"dx-virtual-mode\")\r\n    },\r\n    _renderVirtualContent: function() {\r\n        var that = this;\r\n        if (!that._virtualContent && \"virtual\" === that.option(\"scrolling.mode\")) {\r\n            that._virtualContent = (0, _renderer.default)(\"<div>\").addClass(\"dx-virtual-content\").insertBefore(that._tableElement)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var that = this;\r\n        var tableElement = that._tableElement[0];\r\n        that._fakeTable && that._fakeTable.detach();\r\n        that._fakeTable = null;\r\n        that.disableVirtualMode();\r\n        that.groupWidth(\"100%\");\r\n        that.groupHeight(\"auto\");\r\n        that.resetColumnsWidth();\r\n        if (tableElement) {\r\n            for (var i = 0; i < tableElement.rows.length; i++) {\r\n                tableElement.rows[i].style.height = \"\"\r\n            }\r\n            tableElement.style.height = \"\";\r\n            tableElement.style.width = \"100%\"\r\n        }\r\n    },\r\n    _updateFakeTableVisibility: function() {\r\n        var that = this;\r\n        var tableElement = that.tableElement()[0];\r\n        var horizontalOffsetName = that.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        var fakeTableElement = that._fakeTable[0];\r\n        if (tableElement.style.top === fakeTableElement.style.top && fakeTableElement.style[horizontalOffsetName] === tableElement.style[horizontalOffsetName]) {\r\n            that._fakeTable.addClass(\"dx-hidden\")\r\n        } else {\r\n            that._fakeTable.removeClass(\"dx-hidden\")\r\n        }\r\n    },\r\n    _moveFakeTableHorizontally: function(scrollPos) {\r\n        var that = this;\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var offsetStyleName = rtlEnabled ? \"right\" : \"left\";\r\n        var tableElementOffset = parseFloat(that.tableElement()[0].style[offsetStyleName]);\r\n        var offset = getFakeTableOffset(scrollPos, tableElementOffset, that._tableWidth, that._groupWidth);\r\n        if (parseFloat(that._fakeTable[0].style[offsetStyleName]) !== offset) {\r\n            that._fakeTable[0].style[offsetStyleName] = offset + \"px\"\r\n        }\r\n    },\r\n    _moveFakeTableTop: function(scrollPos) {\r\n        var that = this;\r\n        var tableElementOffsetTop = parseFloat(that.tableElement()[0].style.top);\r\n        var offsetTop = getFakeTableOffset(scrollPos, tableElementOffsetTop, that._tableHeight, that._groupHeight);\r\n        if (parseFloat(that._fakeTable[0].style.top) !== offsetTop) {\r\n            that._fakeTable[0].style.top = offsetTop + \"px\"\r\n        }\r\n    },\r\n    _moveFakeTable: function() {\r\n        this._updateFakeTableVisibility()\r\n    },\r\n    _createFakeTable: function() {\r\n        var that = this;\r\n        if (!that._fakeTable) {\r\n            that._fakeTable = that.tableElement().clone().addClass(\"dx-pivot-grid-fake-table\").appendTo(that._virtualContent)\r\n        }\r\n    },\r\n    render: function(rootElement, data) {\r\n        var that = this;\r\n        if (that._tableElement) {\r\n            try {\r\n                that._tableElement[0].innerHTML = \"\"\r\n            } catch (e) {\r\n                that._tableElement.empty()\r\n            }\r\n            that._tableElement.attr(\"style\", \"\")\r\n        } else {\r\n            that._groupElement = that._createGroupElement();\r\n            that._tableElement = that._createTableElement();\r\n            that._tableElement.appendTo(that._groupElement);\r\n            that._groupElement.appendTo(rootElement);\r\n            that._rootElement = rootElement\r\n        }\r\n        that._colgroupElement = (0, _renderer.default)(\"<colgroup>\").appendTo(that._tableElement);\r\n        that._renderTableContent(that._tableElement, data);\r\n        that._renderVirtualContent()\r\n    },\r\n    _getScrollable: function() {\r\n        return this.groupElement().data(\"dxScrollable\")\r\n    },\r\n    on: function(eventName, handler) {\r\n        var that = this;\r\n        var scrollable = that._getScrollable();\r\n        if (scrollable) {\r\n            scrollable.on(eventName, function(e) {\r\n                if (that.option(\"rtlEnabled\") && (0, _type.isDefined)(e.scrollOffset.left)) {\r\n                    e.scrollOffset.left = scrollable.$content().width() - scrollable._container().width() - e.scrollOffset.left\r\n                }\r\n                handler(e)\r\n            })\r\n        }\r\n        return this\r\n    },\r\n    off: function(eventName) {\r\n        var scrollable = this._getScrollable();\r\n        if (scrollable) {\r\n            scrollable.off(eventName)\r\n        }\r\n        return this\r\n    },\r\n    scrollTo: function(pos) {\r\n        var scrollable = this._getScrollable();\r\n        var scrollablePos = pos;\r\n        if (scrollable) {\r\n            if (this.option(\"rtlEnabled\")) {\r\n                if (\"column\" === this._getAreaName()) {\r\n                    scrollablePos = scrollable.$content().width() - scrollable._container().width() - pos\r\n                } else {\r\n                    if (\"data\" === this._getAreaName()) {\r\n                        scrollablePos = {\r\n                            x: scrollable.$content().width() - scrollable._container().width() - pos.x,\r\n                            y: pos.y\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            scrollable.scrollTo(scrollablePos);\r\n            if (this._virtualContent) {\r\n                this._createFakeTable();\r\n                this._moveFakeTable(pos)\r\n            }\r\n        }\r\n    },\r\n    updateScrollable: function() {\r\n        var scrollable = this._getScrollable();\r\n        if (scrollable) {\r\n            return scrollable.update()\r\n        }\r\n    },\r\n    getColumnsCount: function() {\r\n        var columnCount = 0;\r\n        var row = this._getRowElement(0);\r\n        var cells;\r\n        if (row) {\r\n            cells = row.cells;\r\n            for (var i = 0, len = cells.length; i < len; ++i) {\r\n                columnCount += cells[i].colSpan\r\n            }\r\n        }\r\n        return columnCount\r\n    },\r\n    getData: function() {\r\n        var tableElement = this._tableElement;\r\n        return tableElement ? tableElement.data(\"data\") : []\r\n    }\r\n});\r\nexports.AreaItem = AreaItem;\r\n"]},"metadata":{},"sourceType":"script"}