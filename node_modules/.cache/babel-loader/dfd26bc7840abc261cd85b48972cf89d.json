{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\NewAppointment\\\\NewListAppointment\\\\modal\\\\StaffSorting.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, NormalModal } from \"component/common\";\nimport closeIcon from \"assets/images/close.png\";\nimport { Toast } from \"service/toast\";\nimport { commonCreateApi, getCommonApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { dateFormat } from \"service/helperFunctions\";\nexport class StaffSortingClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedList: [],\n      currentSelection: {},\n      isSelected: {\n        selectedItem: false,\n        selectedId: 0\n      },\n      index: 0,\n      SortedEmployee: [],\n      filterDate: new Date(),\n      staffSortlist: []\n    };\n\n    this.getStaffForSorting = () => {\n      this.setState({\n        staffSortlist: []\n      });\n      let {\n        filterDate,\n        staffSortlist\n      } = this.state;\n      this.props.getCommonApi(`appointmentsort/?date=${dateFormat(filterDate, \"yyyy-mm-dd\")}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            staffSortlist.push({\n              value: value.id,\n              label: value.display_name\n            });\n          }\n\n          this.setState({\n            staffSortlist\n          });\n        }\n      });\n    };\n\n    this.currentselection = async item => {\n      let {\n        currentSelection,\n        isSelected\n      } = this.state;\n      currentSelection[\"value\"] = item.value;\n      currentSelection[\"label\"] = item.label;\n      await this.setState({\n        currentSelection\n      });\n      isSelected[\"selectedId\"] = item.value;\n      isSelected[\"selectedItem\"] = true;\n      await this.setState({\n        isSelected\n      });\n    };\n\n    this.removefromsort = async (item, index) => {\n      var array = [...this.state.selectedList]; // make a separate copy of the array\n\n      let filterList = array.find(account => account.value === item.value);\n\n      if (filterList) {\n        array.splice(index, 1);\n        await this.setState({\n          selectedList: array\n        });\n      }\n    };\n\n    this.addSingleSelect = async () => {\n      let {\n        selectedList,\n        currentSelection\n      } = this.state;\n\n      if (currentSelection && currentSelection.value) {\n        let filterList = selectedList.find(account => account.value === currentSelection.value);\n\n        if (filterList) {\n          filterList[\"value\"] = currentSelection.value;\n          filterList[\"label\"] = currentSelection.label;\n          this.setState({ ...this.state.selectedList,\n            filterList\n          });\n          this.setState({\n            currentSelection: {}\n          });\n        } else {\n          let data = {};\n          data[\"value\"] = currentSelection.value;\n          data[\"label\"] = currentSelection.label;\n          selectedList.push(data);\n          this.setState({ ...selectedList,\n            selectedList\n          });\n          this.setState({\n            currentSelection: {}\n          });\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select Staff\"\n        });\n        return false;\n      }\n    };\n\n    this.addAllSelect = async () => {\n      await this.setState({\n        currentSelection: {},\n        isSelected: {}\n      });\n      let {\n        staffSortlist\n      } = this.state;\n      await this.setState({\n        selectedList: staffSortlist\n      });\n    };\n\n    this.handleDialog = () => {\n      this.setState({\n        selectedList: [],\n        currentSelection: {},\n        isSelected: {},\n        SortedEmployee: []\n      });\n      this.props.handleDialog();\n    };\n\n    this.sendEmployeeSortList = async () => {\n      let {\n        selectedList,\n        SortedEmployee\n      } = this.state;\n\n      for (let item of selectedList) {\n        let value = item.value;\n        SortedEmployee.push(value);\n      }\n\n      await this.setState({\n        SortedEmployee\n      });\n\n      if (SortedEmployee.length > 0) {\n        let data = {\n          emp_ids: SortedEmployee\n        };\n        this.props.commonCreateApi(`appointmentsort/`, data).then(async res => {\n          if (res.status === 201) {\n            this.props.handleChange();\n            this.handleDialog();\n          }\n        });\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select employee order list\"\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      filterDate: this.props.filterDate\n    });\n    this.getStaffForSorting();\n  }\n\n  render() {\n    let {\n      isOpenModal\n    } = this.props;\n    let {\n      selectedList,\n      isSelected,\n      staffSortlist\n    } = this.state;\n    return /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"55%\"\n      },\n      modal: isOpenModal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Staff Sorting\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-11 mt-2 mb-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 table-header w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, \"Employee List\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"response-table w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, staffSortlist && staffSortlist.length > 0 ? staffSortlist.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${isSelected.selectedItem && isSelected.selectedId == item.value ? \"active\" : \"\"} `,\n        onClick: () => this.currentselection(item),\n        key: item.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 23\n        }\n      }, item.label));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-3 mt-3 mb-3 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2 w-100 p-0\",\n      mainbg: true,\n      className: \" fs-20 confirm\",\n      label: `>`,\n      outline: false,\n      onClick: () => this.addSingleSelect(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2 w-100  p-0\",\n      mainbg: true,\n      className: \" fs-20 confirm\",\n      label: `>>`,\n      outline: false,\n      onClick: () => this.addAllSelect(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2 w-100  p-0\",\n      mainbg: true,\n      className: \" fs-12 confirm\",\n      label: `Clear`,\n      outline: false,\n      onClick: () => {\n        this.setState({\n          selectedList: [],\n          currentSelection: {},\n          isSelected: {}\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-11 mt-2 mb-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mt-4 table-header w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-9 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }, \"Employee Order\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"response-table w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, selectedList.length > 0 ? selectedList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary\",\n        key: item.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 23\n        }\n      }, item.label), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 remove-icon\",\n        onClick: () => this.removefromsort(item, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }\n      })));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, \"No Data\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100  p-0\",\n      mainbg: true,\n      className: \" fs-20 confirm\",\n      label: `Save`,\n      outline: false,\n      onClick: () => this.sendEmployeeSortList(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100 p-0\",\n      mainbg: true,\n      className: \" fs-12 confirm\",\n      label: `Cancel`,\n      outline: false,\n      onClick: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    commonCreateApi,\n    getCommonApi\n  }, dispatch);\n};\n\nexport const StaffSorting = connect(null, mapDispatchToProps)(StaffSortingClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/NewAppointment/NewListAppointment/modal/StaffSorting.js"],"names":["React","Component","NormalButton","NormalModal","closeIcon","Toast","commonCreateApi","getCommonApi","connect","bindActionCreators","dateFormat","StaffSortingClass","state","selectedList","currentSelection","isSelected","selectedItem","selectedId","index","SortedEmployee","filterDate","Date","staffSortlist","getStaffForSorting","setState","props","then","key","status","data","value","push","id","label","display_name","currentselection","item","removefromsort","array","filterList","find","account","splice","addSingleSelect","type","message","addAllSelect","handleDialog","sendEmployeeSortList","length","emp_ids","res","handleChange","componentWillMount","render","isOpenModal","minWidth","map","mapDispatchToProps","dispatch","StaffSorting"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NormalButton, NormalModal } from \"component/common\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { Toast } from \"service/toast\";\r\nimport { commonCreateApi, getCommonApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\n\r\nexport class StaffSortingClass extends Component {\r\n  state = {\r\n    selectedList: [],\r\n    currentSelection: {},\r\n    isSelected: {\r\n      selectedItem: false,\r\n      selectedId: 0,\r\n    },\r\n    index: 0,\r\n    SortedEmployee: [],\r\n    filterDate: new Date(),\r\n    staffSortlist: [],\r\n  };\r\n  componentWillMount() {\r\n    this.setState({ filterDate: this.props.filterDate });\r\n    this.getStaffForSorting();\r\n  }\r\n  getStaffForSorting = () => {\r\n    this.setState({ staffSortlist: [] });\r\n    let { filterDate, staffSortlist } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `appointmentsort/?date=${dateFormat(filterDate, \"yyyy-mm-dd\")}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          for (let value of data) {\r\n            staffSortlist.push({ value: value.id, label: value.display_name });\r\n          }\r\n          this.setState({ staffSortlist });\r\n        }\r\n      });\r\n  };\r\n  currentselection = async item => {\r\n    let { currentSelection, isSelected } = this.state;\r\n    currentSelection[\"value\"] = item.value;\r\n    currentSelection[\"label\"] = item.label;\r\n    await this.setState({\r\n      currentSelection,\r\n    });\r\n    isSelected[\"selectedId\"] = item.value;\r\n    isSelected[\"selectedItem\"] = true;\r\n    await this.setState({ isSelected });\r\n  };\r\n  removefromsort = async (item, index) => {\r\n    var array = [...this.state.selectedList]; // make a separate copy of the array\r\n    let filterList = array.find(account => account.value === item.value);\r\n    if (filterList) {\r\n      array.splice(index, 1);\r\n      await this.setState({ selectedList: array });\r\n    }\r\n  };\r\n  addSingleSelect = async () => {\r\n    let { selectedList, currentSelection } = this.state;\r\n\r\n    if (currentSelection && currentSelection.value) {\r\n      let filterList = selectedList.find(\r\n        account => account.value === currentSelection.value\r\n      );\r\n      if (filterList) {\r\n        filterList[\"value\"] = currentSelection.value;\r\n        filterList[\"label\"] = currentSelection.label;\r\n        this.setState({ ...this.state.selectedList, filterList });\r\n        this.setState({ currentSelection: {} });\r\n      } else {\r\n        let data = {};\r\n        data[\"value\"] = currentSelection.value;\r\n        data[\"label\"] = currentSelection.label;\r\n        selectedList.push(data);\r\n        this.setState({ ...selectedList, selectedList });\r\n        this.setState({ currentSelection: {} });\r\n      }\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select Staff\" });\r\n      return false;\r\n    }\r\n  };\r\n  addAllSelect = async () => {\r\n    await this.setState({ currentSelection: {}, isSelected: {} });\r\n    let { staffSortlist } = this.state;\r\n    await this.setState({ selectedList: staffSortlist });\r\n  };\r\n  handleDialog = () => {\r\n    this.setState({\r\n      selectedList: [],\r\n      currentSelection: {},\r\n      isSelected: {},\r\n      SortedEmployee: [],\r\n    });\r\n    this.props.handleDialog();\r\n  };\r\n\r\n  sendEmployeeSortList = async () => {\r\n    let { selectedList, SortedEmployee } = this.state;\r\n    for (let item of selectedList) {\r\n      let value = item.value;\r\n      SortedEmployee.push(value);\r\n    }\r\n    await this.setState({ SortedEmployee });\r\n    if (SortedEmployee.length > 0) {\r\n      let data = { emp_ids: SortedEmployee };\r\n      this.props.commonCreateApi(`appointmentsort/`, data).then(async res => {\r\n        if (res.status === 201) {\r\n          this.props.handleChange();\r\n          this.handleDialog();\r\n        }\r\n      });\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select employee order list\" });\r\n    }\r\n  };\r\n  render() {\r\n    let { isOpenModal } = this.props;\r\n    let { selectedList, isSelected, staffSortlist } = this.state;\r\n\r\n    return (\r\n      <NormalModal\r\n        className={\"multiple-appointment select-category\"}\r\n        style={{ minWidth: \"55%\" }}\r\n        modal={isOpenModal}\r\n        handleModal={this.handleDialog}\r\n      >\r\n        <img\r\n          onClick={this.handleDialog}\r\n          className=\"close\"\r\n          src={closeIcon}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"row pl-2\">\r\n          <h4 className=\"text-left\">Staff Sorting</h4>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center p-3\">\r\n          <div className=\"col-md-5 col-11 mt-2 mb-5 mx-3\">\r\n            <div className=\"row mt-4 table-header w-100 m-0\">\r\n              <div className=\"col-12 text-center\">Employee List</div>\r\n            </div>\r\n            <div className=\"response-table w-100\">\r\n              {staffSortlist && staffSortlist.length > 0 ? (\r\n                staffSortlist.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className={`d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${\r\n                        isSelected.selectedItem &&\r\n                        isSelected.selectedId == item.value\r\n                          ? \"active\"\r\n                          : \"\"\r\n                      } `}\r\n                      onClick={() => this.currentselection(item)}\r\n                      key={item.value}\r\n                    >\r\n                      <div className=\"col-1\">{item.label}</div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"text-center w-100\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-2 col-3 mt-3 mb-3 mx-3\">\r\n            <div className=\"row mt-4 w-100 m-0\">\r\n              <NormalButton\r\n                buttonClass={\"mx-2 w-100 p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-20 confirm\"\r\n                label={`>`}\r\n                outline={false}\r\n                onClick={() => this.addSingleSelect()}\r\n              />\r\n            </div>\r\n            <div className=\"row mt-4 w-100 m-0\">\r\n              <NormalButton\r\n                buttonClass={\"mx-2 w-100  p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-20 confirm\"\r\n                label={`>>`}\r\n                outline={false}\r\n                onClick={() => this.addAllSelect()}\r\n              />\r\n            </div>\r\n            <div className=\"row mt-4 w-100 m-0\">\r\n              <NormalButton\r\n                buttonClass={\"mx-2 w-100  p-0\"}\r\n                mainbg={true}\r\n                className=\" fs-12 confirm\"\r\n                label={`Clear`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selectedList: [],\r\n                    currentSelection: {},\r\n                    isSelected: {},\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-5 col-11 mt-2 mb-5 mx-3\">\r\n            <div className=\"col-12 mt-4 table-header w-100 m-0\">\r\n              <div className=\"col-9 text-center\">Employee Order</div>\r\n              <div className=\"col-3\"></div>\r\n            </div>\r\n            <div className=\"response-table w-100\">\r\n              {selectedList.length > 0 ? (\r\n                selectedList.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className=\"d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary\"\r\n                      key={item.value}\r\n                    >\r\n                      <div className=\"col-10\">{item.label}</div>\r\n                      <div\r\n                        className=\"col-2 remove-icon\"\r\n                        onClick={() => this.removefromsort(item, index)}\r\n                      >\r\n                        <i className=\"icon-close\"></i>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"text-center w-100\">No Data</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end\">\r\n          <div className=\"col-md-2 col-6\">\r\n            <NormalButton\r\n              buttonClass={\"w-100  p-0\"}\r\n              mainbg={true}\r\n              className=\" fs-20 confirm\"\r\n              label={`Save`}\r\n              outline={false}\r\n              onClick={() => this.sendEmployeeSortList()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 col-6\">\r\n            <NormalButton\r\n              buttonClass={\"w-100 p-0\"}\r\n              mainbg={true}\r\n              className=\" fs-12 confirm\"\r\n              label={`Cancel`}\r\n              outline={false}\r\n              onClick={this.handleDialog}\r\n            />\r\n          </div>\r\n        </div>\r\n      </NormalModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      commonCreateApi,\r\n      getCommonApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const StaffSorting = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(StaffSortingClass);\r\n"]},"metadata":{},"sourceType":"module"}