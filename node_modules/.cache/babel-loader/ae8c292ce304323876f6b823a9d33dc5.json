{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\StaffPlus\\\\StaffSchedule\\\\SheduleTable\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\n\nclass ScheduleTableClass extends Component {\n  render() {\n    let {\n      onChange,\n      onAltChange,\n      data = {\n        monday: null,\n        tuesday: null,\n        wednesday: null,\n        thursday: null,\n        friday: null,\n        saturday: null,\n        sunday: null\n      },\n      altws_data = {\n        monday: null,\n        tuesday: null,\n        wednesday: null,\n        thursday: null,\n        friday: null,\n        saturday: null,\n        sunday: null\n      },\n      optionList = [],\n      disabled = false,\n      t\n    } = this.props;\n\n    const handleOnClick = name => {\n      var _this$props$disabled;\n\n      debugger;\n      let sections = document.querySelectorAll(\".dropdown-content\");\n\n      for (let i = 0; i < sections.length; i++) {\n        sections[i].classList.remove(\"show\"); // querySelectorAll return an array of dom elements, u can access them directly.\n      }\n\n      if ((_this$props$disabled = this.props.disabled) !== null && _this$props$disabled !== void 0 ? _this$props$disabled : false) return;else document.getElementById(name).classList.toggle(\"show\");\n    };\n\n    const handOnOptionClick = (index, value) => {\n      debugger;\n      let sections = document.querySelectorAll(\".dropdown-content\");\n\n      for (let i = 0; i < sections.length; i++) {\n        sections[i].classList.remove(\"show\"); // querySelectorAll return an array of dom elements, u can access them directly.\n      }\n\n      if (disabled) return;\n      data[index] = value;\n      onChange(data);\n    };\n\n    const handALTOnOptionClick = (index, value) => {\n      let sections = document.querySelectorAll(\".dropdown-content\");\n\n      for (let i = 0; i < sections.length; i++) {\n        sections[i].classList.remove(\"show\"); // querySelectorAll return an array of dom elements, u can access them directly.\n      }\n\n      if (disabled) return;\n      altws_data[index] = value;\n      onAltChange(altws_data);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"table-header-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Mon\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Tue\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Wed\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Thu\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Fri\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Sat\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Sun\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"table-header-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"WS\"), Object.keys(data).map(function (keyName) {\n      var _optionList$find$shor, _optionList$find;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: \"ws\" + keyName,\n        onClick: () => handleOnClick(\"ws\" + keyName),\n        style: {\n          backgroundColor: optionList.find(val => val.value == data[keyName]) != null ? optionList.find(val => val.value == data[keyName]).color : \"white\",\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, t((_optionList$find$shor = (_optionList$find = optionList.find(val => val.value == data[keyName])) === null || _optionList$find === void 0 ? void 0 : _optionList$find.shortDesc) !== null && _optionList$find$shor !== void 0 ? _optionList$find$shor : \"None\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"ws\" + keyName,\n        class: \"dropdown-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, optionList.map(val => {\n        return /*#__PURE__*/React.createElement(\"label\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          key: \"ws\" + val.id,\n          onDoubleClick: () => handOnOptionClick(keyName, val.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 27\n          }\n        }, t(val.label));\n      })));\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"table-header-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"ALTWS\"), Object.keys(altws_data).map(function (keyName) {\n      var _optionList$find$shor2, _optionList$find2;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: \"alt\" + keyName,\n        onClick: () => handleOnClick(\"alt\" + keyName),\n        style: {\n          backgroundColor: optionList.find(val => val.value == altws_data[keyName]) != null ? optionList.find(val => val.value == altws_data[keyName]).color : \"white\",\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, t((_optionList$find$shor2 = (_optionList$find2 = optionList.find(val => val.value == altws_data[keyName])) === null || _optionList$find2 === void 0 ? void 0 : _optionList$find2.shortDesc) !== null && _optionList$find$shor2 !== void 0 ? _optionList$find$shor2 : \"None\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"alt\" + keyName,\n        class: \"dropdown-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, optionList.map(val => {\n        return /*#__PURE__*/React.createElement(\"label\", {\n          key: \"alt\" + val.id,\n          onClick: () => {},\n          onDoubleClick: () => handALTOnOptionClick(keyName, val.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 27\n          }\n        }, t(val.label));\n      })));\n    })))));\n  }\n\n}\n\nexport const ScheduleTable = withTranslation()(ScheduleTableClass);","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/StaffPlus/StaffSchedule/SheduleTable/index.js"],"names":["React","Component","withTranslation","ScheduleTableClass","render","onChange","onAltChange","data","monday","tuesday","wednesday","thursday","friday","saturday","sunday","altws_data","optionList","disabled","t","props","handleOnClick","name","sections","document","querySelectorAll","i","length","classList","remove","getElementById","toggle","handOnOptionClick","index","value","handALTOnOptionClick","Object","keys","map","keyName","backgroundColor","find","val","color","cursor","shortDesc","id","label","ScheduleTable"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nclass ScheduleTableClass extends Component {\r\n  render() {\r\n    let {\r\n      onChange,\r\n      onAltChange,\r\n      data = {\r\n        monday: null,\r\n        tuesday: null,\r\n        wednesday: null,\r\n        thursday: null,\r\n        friday: null,\r\n        saturday: null,\r\n        sunday: null,\r\n      },\r\n      altws_data = {\r\n        monday: null,\r\n        tuesday: null,\r\n        wednesday: null,\r\n        thursday: null,\r\n        friday: null,\r\n        saturday: null,\r\n        sunday: null,\r\n      },\r\n      optionList = [],\r\n      disabled = false,\r\n      t,\r\n    } = this.props;\r\n\r\n    const handleOnClick = name => {\r\n      debugger;\r\n      let sections = document.querySelectorAll(\".dropdown-content\");\r\n      for (let i = 0; i < sections.length; i++) {\r\n        sections[i].classList.remove(\"show\");\r\n        // querySelectorAll return an array of dom elements, u can access them directly.\r\n      }\r\n\r\n      if (this.props.disabled ?? false) return;\r\n      else document.getElementById(name).classList.toggle(\"show\");\r\n    };\r\n\r\n    const handOnOptionClick = (index, value) => {\r\n      debugger;\r\n      let sections = document.querySelectorAll(\".dropdown-content\");\r\n      for (let i = 0; i < sections.length; i++) {\r\n        sections[i].classList.remove(\"show\");\r\n        // querySelectorAll return an array of dom elements, u can access them directly.\r\n      }\r\n      if (disabled) return;\r\n      data[index] = value;\r\n      onChange(data);\r\n    };\r\n    const handALTOnOptionClick = (index, value) => {\r\n      let sections = document.querySelectorAll(\".dropdown-content\");\r\n      for (let i = 0; i < sections.length; i++) {\r\n        sections[i].classList.remove(\"show\");\r\n        // querySelectorAll return an array of dom elements, u can access them directly.\r\n      }\r\n      if (disabled) return;\r\n      altws_data[index] = value;\r\n      onAltChange(altws_data);\r\n    };\r\n    return (\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr className=\"table-header-color\">\r\n              <th></th>\r\n              <th>Mon</th>\r\n              <th>Tue</th>\r\n              <th>Wed</th>\r\n              <th>Thu</th>\r\n              <th>Fri</th>\r\n              <th>Sat</th>\r\n              <th>Sun</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"table-header-color\">WS</td>\r\n              {Object.keys(data).map(function (keyName) {\r\n                return (\r\n                  <td\r\n                    key={\"ws\" + keyName}\r\n                    onClick={() => handleOnClick(\"ws\" + keyName)}\r\n                    style={{\r\n                      backgroundColor:\r\n                        optionList.find(val => val.value == data[keyName]) !=\r\n                        null\r\n                          ? optionList.find(val => val.value == data[keyName])\r\n                              .color\r\n                          : \"white\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {t(\r\n                      optionList.find(val => val.value == data[keyName])\r\n                        ?.shortDesc ?? \"None\"\r\n                    )}\r\n                    <div id={\"ws\" + keyName} class=\"dropdown-content\">\r\n                      {optionList.map(val => {\r\n                        return (\r\n                          <label\r\n                            style={{ cursor: \"pointer\" }}\r\n                            key={\"ws\" + val.id}\r\n                            onDoubleClick={() =>\r\n                              handOnOptionClick(keyName, val.value)\r\n                            }\r\n                          >\r\n                            {t(val.label)}\r\n                          </label>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n            <tr>\r\n              <td className=\"table-header-color\">ALTWS</td>\r\n              {Object.keys(altws_data).map(function (keyName) {\r\n                return (\r\n                  <td\r\n                    key={\"alt\" + keyName}\r\n                    onClick={() => handleOnClick(\"alt\" + keyName)}\r\n                    style={{\r\n                      backgroundColor:\r\n                        optionList.find(\r\n                          val => val.value == altws_data[keyName]\r\n                        ) != null\r\n                          ? optionList.find(\r\n                              val => val.value == altws_data[keyName]\r\n                            ).color\r\n                          : \"white\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {t(\r\n                      optionList.find(val => val.value == altws_data[keyName])\r\n                        ?.shortDesc ?? \"None\"\r\n                    )}\r\n                    <div id={\"alt\" + keyName} class=\"dropdown-content\">\r\n                      {optionList.map(val => {\r\n                        return (\r\n                          <label\r\n                            key={\"alt\" + val.id}\r\n                            onClick={() => {}}\r\n                            onDoubleClick={() =>\r\n                              handALTOnOptionClick(keyName, val.value)\r\n                            }\r\n                          >\r\n                            {t(val.label)}\r\n                          </label>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const ScheduleTable = withTranslation()(ScheduleTableClass);\r\n"]},"metadata":{},"sourceType":"module"}