{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Reports\\\\Types\\\\StockMovementDetailReport.js\";\nimport { NormalButton, NormalDateTime, NormalMultiSelect, NormalSelect } from \"component/common\";\nimport React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { Viewer, Designer } from \"@grapecity/activereports-react\";\nimport \"../style.scss\";\nimport { Fragment } from \"react\";\n\nclass UnearnedRevenueReportClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedSites: \"\",\n      siteOptions: [],\n      selectedSiteGroup: \"\",\n      siteGroupOptions: [],\n      isEdit: false,\n      isMounted: true,\n      isLoading: true,\n      start: Date.now(),\n      inOptions: [{\n        label: \"Month\",\n        value: \"month\"\n      }, {\n        label: \"Week\",\n        value: \"week\"\n      }, {\n        label: \"Day\",\n        value: \"day\"\n      }],\n      selectedInOption: \"week\",\n      data: null\n    };\n\n    this.updateState = state => {\n      if (this.state.isMounted) this.setState(state);\n    };\n\n    this.getData = async () => {\n      let {\n        siteOptions,\n        siteGroupOptions\n      } = this.state;\n      let branchRes = await this.props.getCommonApi(\"branchlist/\");\n      let siteGroupRes = await this.props.getCommonApi(\"site_group_list/\");\n\n      for (let key of branchRes.data) {\n        siteOptions.push({\n          value: key.itemsite_code,\n          label: key.itemsite_desc\n        });\n      }\n\n      for (let key of siteGroupRes.data.groups) {\n        siteGroupOptions.push({\n          value: key.code,\n          label: key.description\n        });\n      }\n\n      this.updateState({\n        siteOptions,\n        siteGroupOptions,\n        isLoading: false\n      });\n    };\n\n    this.getFormatedDate = input => {\n      let date = new Date(input);\n      let d = date.getDate();\n      let day = d < 10 ? \"0\" + d : d;\n      let a = date.getMonth() + 1;\n      let month = a < 10 ? \"0\" + a : a;\n      let year = date.getFullYear();\n      return `${year}-${month}-${day}`;\n    };\n\n    this.handleChanges = e => {\n      this.state[e.target.name] = e.target.value;\n      this.updateState({});\n    };\n\n    this.handleMultiSelect = (data = []) => {\n      if (data.length == 0) return this.updateState({\n        selectedSites: \"\"\n      });\n      let {\n        selectedSites\n      } = this.state;\n      selectedSites = [];\n      data.forEach(element => {\n        selectedSites.push(element.value);\n      });\n      selectedSites = selectedSites.reduce((a, e) => a + \",\" + e);\n      this.updateState({\n        selectedSites\n      });\n    };\n\n    this.handleDatePick = (name, value) => {\n      this.state[name] = value;\n      this.updateState({});\n    };\n\n    this.onRun = async () => {\n      this.updateState({\n        isLoading: true\n      });\n      let {\n        data,\n        selectedSites,\n        selectedInOption,\n        selectedSiteGroup,\n        start\n      } = this.state;\n      let additionalParams = \"\";\n      if (selectedSiteGroup) additionalParams = `&siteGroup=${selectedSiteGroup}`;else additionalParams = `&siteCodes=${selectedSites}`;\n      let res = await this.props.getCommonApi(`SalesDailyReporting?start=${this.getFormatedDate(start)}&in=${selectedInOption}${additionalParams}`);\n      console.log(res);\n      data = res.data;\n      this.updateState({\n        data,\n        isLoading: false\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    let {\n      t\n    } = this.props;\n    let {\n      inOptions\n    } = this.state;\n    inOptions = inOptions.map(e => {\n      return { ...e,\n        label: t(e.label)\n      };\n    });\n    let reportName = \"urr-report-template.json\";\n\n    let report = require(`./Files/${reportName}`);\n\n    function onSaveReport(info) {\n      console.log(\"save clicked\");\n      console.log(info);\n      return Promise.resolve({\n        displayName: \"report\"\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid report-types\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, t(\"Stock Movement - Detail\")))), this.state.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex mt-5 align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Loading...\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-lg-2 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: t(\"Run\"),\n      mainbg: \"true\",\n      onClick: this.onRun,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-lg-3 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: this.state.isEdit ? t(\"Switch to View Mode\") : t(\"Switch to Edit Mode\"),\n      mainbg: \"true\",\n      onClick: () => this.updateState({\n        isEdit: !this.state.isEdit\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, t(\"From Date\")), /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      value: this.state.start,\n      name: \"start\",\n      showYearDropdown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, t(\"In\")), /*#__PURE__*/React.createElement(NormalSelect, {\n      onChange: this.handleChanges,\n      options: inOptions,\n      value: this.state.selectedInOption,\n      name: \"selectedInOption\",\n      showYearDropdown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, t(\"Site Group\")), /*#__PURE__*/React.createElement(NormalSelect, {\n      onChange: this.handleChanges,\n      options: this.state.siteGroupOptions,\n      value: this.state.selectedSiteGroup,\n      name: \"selectedSiteGroup\",\n      showYearDropdown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, t(\"Sites\")), /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      handleMultiSelect: this.handleMultiSelect,\n      options: this.state.siteOptions,\n      value: this.state.selectedSites,\n      name: \"selectedSites\",\n      showYearDropdown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, this.state.data ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"designer-host\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Designer, {\n      report: {\n        id: reportName,\n        displayName: reportName\n      },\n      language: localStorage.getItem(\"lang\"),\n      onSave: onSaveReport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"viewer-host\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Viewer, {\n      report: {\n        Uri: report\n      },\n      availableExports: [],\n      sidebarVisible: true,\n      language: localStorage.getItem(\"lang\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }))) : null)));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi\n  }, dispatch);\n};\n\nexport const StockMovementDetailReport = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(UnearnedRevenueReportClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Reports/Types/StockMovementDetailReport.js"],"names":["NormalButton","NormalDateTime","NormalMultiSelect","NormalSelect","React","Component","withTranslation","connect","bindActionCreators","getCommonApi","Viewer","Designer","Fragment","UnearnedRevenueReportClass","state","selectedSites","siteOptions","selectedSiteGroup","siteGroupOptions","isEdit","isMounted","isLoading","start","Date","now","inOptions","label","value","selectedInOption","data","updateState","setState","getData","branchRes","props","siteGroupRes","key","push","itemsite_code","itemsite_desc","groups","code","description","getFormatedDate","input","date","d","getDate","day","a","getMonth","month","year","getFullYear","handleChanges","e","target","name","handleMultiSelect","length","forEach","element","reduce","handleDatePick","onRun","additionalParams","res","console","log","componentWillUnmount","componentDidMount","render","t","map","reportName","report","require","onSaveReport","info","Promise","resolve","displayName","id","localStorage","getItem","Uri","mapStateToProps","mapDispatchToProps","dispatch","StockMovementDetailReport"],"mappings":"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","sourcesContent":["import {\n  NormalButton,\n  NormalDateTime,\n  NormalMultiSelect,\n  NormalSelect,\n} from \"component/common\";\nimport React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { Viewer, Designer } from \"@grapecity/activereports-react\";\nimport \"../style.scss\";\nimport { Fragment } from \"react\";\n\nclass UnearnedRevenueReportClass extends Component {\n  state = {\n    selectedSites: \"\",\n    siteOptions: [],\n    selectedSiteGroup: \"\",\n    siteGroupOptions: [],\n    isEdit: false,\n    isMounted: true,\n    isLoading: true,\n    start: Date.now(),\n    inOptions: [\n      { label: \"Month\", value: \"month\" },\n      { label: \"Week\", value: \"week\" },\n      { label: \"Day\", value: \"day\" },\n    ],\n    selectedInOption: \"week\",\n    data: null,\n  };\n\n  updateState = (state) => {\n    if (this.state.isMounted) this.setState(state);\n  };\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = async () => {\n    let { siteOptions, siteGroupOptions } = this.state;\n    let branchRes = await this.props.getCommonApi(\"branchlist/\");\n    let siteGroupRes = await this.props.getCommonApi(\"site_group_list/\");\n    for (let key of branchRes.data) {\n      siteOptions.push({\n        value: key.itemsite_code,\n        label: key.itemsite_desc,\n      });\n    }\n    for (let key of siteGroupRes.data.groups) {\n      siteGroupOptions.push({ value: key.code, label: key.description });\n    }\n    this.updateState({ siteOptions, siteGroupOptions, isLoading: false });\n  };\n\n  getFormatedDate = (input) => {\n    let date = new Date(input);\n    let d = date.getDate();\n    let day = d < 10 ? \"0\" + d : d;\n    let a = date.getMonth() + 1;\n    let month = a < 10 ? \"0\" + a : a;\n    let year = date.getFullYear();\n    return `${year}-${month}-${day}`;\n  };\n\n  handleChanges = (e) => {\n    this.state[e.target.name] = e.target.value;\n    this.updateState({});\n  };\n\n  handleMultiSelect = (data = []) => {\n    if (data.length == 0) return this.updateState({ selectedSites: \"\" });\n    let { selectedSites } = this.state;\n    selectedSites = [];\n    data.forEach((element) => {\n      selectedSites.push(element.value);\n    });\n    selectedSites = selectedSites.reduce((a, e) => a + \",\" + e);\n    this.updateState({ selectedSites });\n  };\n\n  handleDatePick = (name, value) => {\n    this.state[name] = value;\n    this.updateState({});\n  };\n\n  onRun = async () => {\n    this.updateState({ isLoading: true });\n    let { data, selectedSites, selectedInOption, selectedSiteGroup, start } =\n      this.state;\n    let additionalParams = \"\";\n    if (selectedSiteGroup) additionalParams = `&siteGroup=${selectedSiteGroup}`;\n    else additionalParams = `&siteCodes=${selectedSites}`;\n    let res = await this.props.getCommonApi(\n      `SalesDailyReporting?start=${this.getFormatedDate(\n        start\n      )}&in=${selectedInOption}${additionalParams}`\n    );\n    console.log(res);\n    data = res.data;\n    this.updateState({ data, isLoading: false });\n  };\n\n  render() {\n    let { t } = this.props;\n    let { inOptions } = this.state;\n    inOptions = inOptions.map((e) => {\n      return { ...e, label: t(e.label) };\n    });\n\n    let reportName = \"urr-report-template.json\";\n    let report = require(`./Files/${reportName}`);\n\n    function onSaveReport(info) {\n      console.log(\"save clicked\");\n      console.log(info);\n      return Promise.resolve({ displayName: \"report\" });\n    }\n    return (\n      <div className=\"container-fluid report-types\">\n        <div className=\"row mb-4\">\n          <div className=\"col\">\n            <h3>{t(\"Stock Movement - Detail\")}</h3>\n          </div>\n        </div>\n        {this.state.isLoading ? (\n          <div class=\"d-flex mt-5 align-items-center justify-content-center\">\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"row mb-2\">\n              <div className=\"col-md-3 col-lg-2 mb-4\">\n                <NormalButton\n                  label={t(\"Run\")}\n                  mainbg=\"true\"\n                  onClick={this.onRun}\n                />\n              </div>\n              <div className=\"col-md-4 col-lg-3 mb-4\">\n                <NormalButton\n                  label={\n                    this.state.isEdit\n                      ? t(\"Switch to View Mode\")\n                      : t(\"Switch to Edit Mode\")\n                  }\n                  mainbg=\"true\"\n                  onClick={() =>\n                    this.updateState({ isEdit: !this.state.isEdit })\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"row mb-4\">\n              <div className=\"col-md-4 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-1\">\n                  {t(\"From Date\")}\n                </label>\n                <NormalDateTime\n                  onChange={this.handleDatePick}\n                  value={this.state.start}\n                  name=\"start\"\n                  showYearDropdown={true}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-1\">\n                  {t(\"In\")}\n                </label>\n                <NormalSelect\n                  onChange={this.handleChanges}\n                  options={inOptions}\n                  value={this.state.selectedInOption}\n                  name=\"selectedInOption\"\n                  showYearDropdown={true}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-1\">\n                  {t(\"Site Group\")}\n                </label>\n                <NormalSelect\n                  onChange={this.handleChanges}\n                  options={this.state.siteGroupOptions}\n                  value={this.state.selectedSiteGroup}\n                  name=\"selectedSiteGroup\"\n                  showYearDropdown={true}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <label className=\"text-left text-black common-label-text fs-17 pb-1\">\n                  {t(\"Sites\")}\n                </label>\n                <NormalMultiSelect\n                  handleMultiSelect={this.handleMultiSelect}\n                  options={this.state.siteOptions}\n                  value={this.state.selectedSites}\n                  name=\"selectedSites\"\n                  showYearDropdown={true}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-4\">\n              {this.state.data ? (\n                <Fragment>\n                  {this.state.isEdit ? (\n                    <div id=\"designer-host\">\n                      <Designer\n                        report={{\n                          id: reportName,\n                          displayName: reportName,\n                        }}\n                        language={localStorage.getItem(\"lang\")}\n                        onSave={onSaveReport}\n                      />\n                    </div>\n                  ) : (\n                    <div id=\"viewer-host\">\n                      <Viewer\n                        report={{ Uri: report }}\n                        availableExports={[]}\n                        sidebarVisible={true}\n                        language={localStorage.getItem(\"lang\")}\n                      />\n                    </div>\n                  )}\n                </Fragment>\n              ) : null}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getCommonApi,\n    },\n    dispatch\n  );\n};\n\nexport const StockMovementDetailReport = withTranslation()(\n  connect(mapStateToProps, mapDispatchToProps)(UnearnedRevenueReportClass)\n);\n"]},"metadata":{},"sourceType":"module"}