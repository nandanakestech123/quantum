{"ast":null,"code":"/**\r\n * DevExtreme (ui/tree_list/ui.tree_list.state_storing.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _uiTree_list = _interopRequireDefault(require(\"./ui.tree_list.core\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.state_storing\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar origApplyState = _uiGrid_core.default.extenders.controllers.stateStoring.applyState;\n\n_uiTree_list.default.registerModule(\"stateStoring\", (0, _extend.extend)(true, {}, _uiGrid_core.default, {\n  extenders: {\n    controllers: {\n      stateStoring: {\n        applyState: function (state) {\n          origApplyState.apply(this, arguments);\n\n          if (Object.prototype.hasOwnProperty.call(state, \"expandedRowKeys\")) {\n            this.option(\"expandedRowKeys\", state.expandedRowKeys && state.expandedRowKeys.slice());\n          }\n        }\n      },\n      data: {\n        getUserState: function () {\n          var state = this.callBase.apply(this, arguments);\n\n          if (!this.option(\"autoExpandAll\")) {\n            state.expandedRowKeys = this.option(\"expandedRowKeys\");\n          }\n\n          return state;\n        }\n      }\n    }\n  }\n}));","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/tree_list/ui.tree_list.state_storing.js"],"names":["_uiTree_list","_interopRequireDefault","require","_extend","_uiGrid_core","obj","__esModule","origApplyState","default","extenders","controllers","stateStoring","applyState","registerModule","extend","state","apply","arguments","Object","prototype","hasOwnProperty","call","option","expandedRowKeys","slice","data","getUserState","callBase"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,YAAY,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAAzC;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIE,YAAY,GAAGH,sBAAsB,CAACC,OAAO,CAAC,yCAAD,CAAR,CAAzC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AACD,IAAIE,cAAc,GAAGH,YAAY,CAACI,OAAb,CAAqBC,SAArB,CAA+BC,WAA/B,CAA2CC,YAA3C,CAAwDC,UAA7E;;AACAZ,YAAY,CAACQ,OAAb,CAAqBK,cAArB,CAAoC,cAApC,EAAoD,CAAC,GAAGV,OAAO,CAACW,MAAZ,EAAoB,IAApB,EAA0B,EAA1B,EAA8BV,YAAY,CAACI,OAA3C,EAAoD;AACpGC,EAAAA,SAAS,EAAE;AACPC,IAAAA,WAAW,EAAE;AACTC,MAAAA,YAAY,EAAE;AACVC,QAAAA,UAAU,EAAE,UAASG,KAAT,EAAgB;AACxBR,UAAAA,cAAc,CAACS,KAAf,CAAqB,IAArB,EAA2BC,SAA3B;;AACA,cAAIC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,KAArC,EAA4C,iBAA5C,CAAJ,EAAoE;AAChE,iBAAKO,MAAL,CAAY,iBAAZ,EAA+BP,KAAK,CAACQ,eAAN,IAAyBR,KAAK,CAACQ,eAAN,CAAsBC,KAAtB,EAAxD;AACH;AACJ;AANS,OADL;AASTC,MAAAA,IAAI,EAAE;AACFC,QAAAA,YAAY,EAAE,YAAW;AACrB,cAAIX,KAAK,GAAG,KAAKY,QAAL,CAAcX,KAAd,CAAoB,IAApB,EAA0BC,SAA1B,CAAZ;;AACA,cAAI,CAAC,KAAKK,MAAL,CAAY,eAAZ,CAAL,EAAmC;AAC/BP,YAAAA,KAAK,CAACQ,eAAN,GAAwB,KAAKD,MAAL,CAAY,iBAAZ,CAAxB;AACH;;AACD,iBAAOP,KAAP;AACH;AAPC;AATG;AADN;AADyF,CAApD,CAApD","sourcesContent":["/**\r\n * DevExtreme (ui/tree_list/ui.tree_list.state_storing.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _uiTree_list = _interopRequireDefault(require(\"./ui.tree_list.core\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.state_storing\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar origApplyState = _uiGrid_core.default.extenders.controllers.stateStoring.applyState;\r\n_uiTree_list.default.registerModule(\"stateStoring\", (0, _extend.extend)(true, {}, _uiGrid_core.default, {\r\n    extenders: {\r\n        controllers: {\r\n            stateStoring: {\r\n                applyState: function(state) {\r\n                    origApplyState.apply(this, arguments);\r\n                    if (Object.prototype.hasOwnProperty.call(state, \"expandedRowKeys\")) {\r\n                        this.option(\"expandedRowKeys\", state.expandedRowKeys && state.expandedRowKeys.slice())\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                getUserState: function() {\r\n                    var state = this.callBase.apply(this, arguments);\r\n                    if (!this.option(\"autoExpandAll\")) {\r\n                        state.expandedRowKeys = this.option(\"expandedRowKeys\")\r\n                    }\r\n                    return state\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}