{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Payroll\\\\ListPayroll\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, NormalSelect, NormalModal, NormalCheckbox, NormalDateTime, NormalDate } from \"component/common\";\nimport { InputSearch, TableWrapper } from \"component/common\";\nimport \"./style.scss\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { history } from \"helpers\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, commonCreateApi } from \"redux/actions/common\";\nimport { withTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\nimport closeIcon from \"assets/images/close.png\";\nimport { Toast } from \"service/toast\";\nimport { CredentialConfirmation } from \"component/Admin/Cart/credentialConfirmation\";\nimport moment from \"moment\";\nimport Payslip from \"../Payslippdf/Payslip\";\nimport { PDFViewer, PDFDownloadLink, BlobProvider } from \"@react-pdf/renderer\";\nexport class PayrollMainClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: 1,\n      limit: 10,\n      selectAll: false,\n      headerDetails: [{\n        label: \"\",\n        width: \"20px\",\n        selectAll: true,\n        selectAllCheck: false,\n        checkboxChange: e => this.handleSelectAllCheckbox(e)\n      }, {\n        label: \"Staff ID\"\n      }, {\n        label: \"NRIC\"\n      }, {\n        label: \"Staff Name\",\n        divClass: \"\",\n        width: \"125px\"\n      }, {\n        label: \"Site\",\n        divClass: \"\",\n        width: \"120px\"\n      }, {\n        label: \"Emp Level\"\n      }, {\n        label: \"Basic\"\n      }, {\n        label: \"OT\"\n      }, {\n        label: \"Commission\"\n      }, {\n        label: \"Others\"\n      }, {\n        label: \"Total\"\n      }, {\n        label: \"Status\"\n      }],\n      pageMeta: {},\n      formField: {\n        pay_month: \"\",\n        pay_year: \"\",\n        pay_site: \"\",\n        pay_active: \"\",\n        pay_EmpLevel: \"\",\n        pay_status: \"\",\n        searchText: \"\",\n        fromDate: new Date()\n      },\n      active: false,\n      currentIndex: -1,\n      payStatusOptions: [{\n        value: \"new\",\n        label: \"New\"\n      }, {\n        value: \"open\",\n        label: \"Open\"\n      }, {\n        value: \"posted\",\n        label: \"Posted\"\n      }],\n      payEmpLevelOptions: [],\n      paySiteOptions: [],\n      payYearOptions: [],\n      payMonthOptions: [{\n        value: 1,\n        label: \"Jan\"\n      }, {\n        value: 2,\n        label: \"Feb\"\n      }, {\n        value: 3,\n        label: \"Mar\"\n      }, {\n        value: 4,\n        label: \"Apr\"\n      }, {\n        value: 5,\n        label: \"May\"\n      }, {\n        value: 6,\n        label: \"Jun\"\n      }, {\n        value: 7,\n        label: \"Jul\"\n      }, {\n        value: 8,\n        label: \"Aug\"\n      }, {\n        value: 9,\n        label: \"Sep\"\n      }, {\n        value: 10,\n        label: \"Oct\"\n      }, {\n        value: 11,\n        label: \"Nov\"\n      }, {\n        value: 12,\n        label: \"Dec\"\n      }],\n      payActiveOptions: [{\n        value: 1,\n        label: \"Active\"\n      }, {\n        value: 0,\n        label: \"In Active\"\n      }, {\n        value: \"\",\n        label: \"All\"\n      }],\n      isLoginConfirmation: false,\n      isAllow: false,\n      selected: false,\n      isPrintPdfClick: false,\n      PayrollList: [// {\n        // payrollId: \"1\",\n        // EmpName: \"kaleeswaran\",\n        // EmpCode: \"HS010121\",\n        // nric: \"\",\n        // FromDate: new Date(),\n        // toDate: new Date(),\n        // BasicSalary: \"60000\",\n        // hourlySalHour: \"\",\n        // hourlySalRate: \"\",\n        // firstOverTimeRate: \"\",\n        // firstOverTimeHour: \"\",\n        // totOTPay: \"\",\n        // totCommission: \"\",\n        // totAllowance: \"\",\n        // totDeduct: \"\",\n        // AddPay: \"\",\n        // netPay: \"\",\n        // empCPFCont: \"\",\n        // dateofPay: new Date(),\n        // modeofPayId: \"\",\n        // modeofPay: \"\",\n        // secondOverTimeHour: \"\",\n        // secondOverTimeRate: \"\",\n        // TotAllowanceList: [\n        //   { desc: \"desc\", type: 2, typeName: \"totallowtype2\", amount: 500 },\n        // ],\n        // TotDeductionList: [\n        //   {\n        //     desc: \"deducdesc\",\n        //     type: 1,\n        //     typeName: \"totdeductype1\",\n        //     amount: 200,\n        //   },\n        // ],\n        // AddPaymentList: [\n        //   {\n        //     desc: \"paydesc\",\n        //     type: 3,\n        //     typeName: \"paytype3\",\n        //     amount: 300,\n        //   },\n        // ],\n        // checkbox: false,\n        //  },\n        // {\n        // payrollId: \"2\",\n        // EmpName: \"rajan\",\n        // EmpCode: \"HS010121\",\n        // FromDate: new Date(),\n        // nric: \"\",\n        // toDate: new Date(),\n        // BasicSalary: \"2000\",\n        // hourlySalHour: \"\",\n        // hourlySalRate: \"\",\n        // firstOverTimeRate: \"\",\n        // firstOverTimeHour: \"\",\n        // totOTPay: \"\",\n        // totCommission: \"\",\n        // totAllowance: \"\",\n        // totDeduct: \"\",\n        // AddPay: \"\",\n        // netPay: \"\",\n        // empCPFCont: \"\",\n        // dateofPay: new Date(),\n        // modeofPayId: \"\",\n        // modeofPay: \"\",\n        // secondOverTimeHour: \"\",\n        // secondOverTimeRate: \"\",\n        // TotAllowanceList: [],\n        // TotDeductionList: [],\n        // AddPaymentList: [],\n        // checkbox: false,\n        //  },\n      ],\n      accountHeader: {\n        name: \"Employer name\",\n        address: \"\",\n        logo: \"\"\n      }\n    };\n\n    this.getPayrollList = query => {\n      let {\n        formField,\n        limit\n      } = this.state;\n      let {\n        page = this.state.page\n      } = query;\n      let PayrollList = Object.assign({}, this.state.PayrollList);\n      let {\n        pay_status,\n        pay_EmpLevel,\n        pay_active,\n        pay_site,\n        pay_year,\n        pay_month,\n        fromDate,\n        searchText\n      } = formField;\n      this.props.getCommonApi(`employeesalary/?month=${pay_month ? pay_month : \"\"}&year=${pay_year ? new Date(pay_year).getFullYear() : 0}&site_code=${pay_site ? pay_site : \"\"}&active=${pay_active ? pay_active : \"\"}&emplevel=${pay_EmpLevel ? pay_EmpLevel : \"\"}&status=${pay_status ? pay_status : \"\"}&page=${page}&limit=${limit}&search=${searchText ? searchText : \"\"}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        let {\n          pageMeta\n        } = this.state;\n\n        if (status === 200) {\n          if (data) {\n            PayrollList = data.printData;\n            pageMeta = data.pagination;\n          }\n\n          this.setState({\n            PayrollList,\n            pageMeta\n          });\n        } else {\n          pageMeta = {};\n          PayrollList = [];\n          this.setState({\n            PayrollList,\n            pageMeta\n          });\n        }\n      });\n    };\n\n    this.getSiteCode = () => {\n      let {\n        paySiteOptions\n      } = this.state;\n      this.props.getCommonApi(`branchlist/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(data, \"sitecodelist\");\n\n        if (status === 200) {\n          for (let value of data) {\n            paySiteOptions.push({\n              value: value.id,\n              label: value.itemsite_code // selected: false,\n\n            });\n          }\n\n          this.setState({\n            paySiteOptions\n          });\n        }\n      });\n    };\n\n    this.handleChange = async event => {\n      let formField = this.state;\n      formField[event.target.name] = event.target.value;\n      await this.setState({\n        formField\n      });\n      this.getPayrollList({});\n    };\n\n    this.handlesearch = event => {\n      console.log(event.target.value);\n      let {\n        formField\n      } = this.state;\n      formField[\"searchText\"] = event.target.value;\n      this.setState({\n        formField\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          this.getPayrollList({});\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleLoginConfirmationDialog = async () => {\n      await this.setState(prevState => ({\n        isLoginConfirmation: !prevState.isLoginConfirmation\n      }));\n    };\n\n    this.handleOpenTrac = async () => {\n      await this.setState(prevState => ({\n        isAllow: !prevState.isAllow\n      }));\n      this.getPayrollList({});\n    };\n\n    this.handleauthentication = async (user, pass) => {\n      let Body = {\n        username: user,\n        password: pass,\n        type: \"Payroll\"\n      };\n      this.props.commonCreateApi(`userauthorizationpopup/`, Body).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status == 200) {\n          await this.setState(prevState => ({\n            isLoginConfirmation: !prevState.isLoginConfirmation\n          }));\n          this.handleOpenTrac();\n        }\n      });\n    };\n\n    this.handleCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }, item) => {\n      let {\n        PayrollList\n      } = this.state;\n      let PayrollListCheckbox = PayrollList.find(acc => acc.payrollId === item.payrollId);\n\n      if (PayrollListCheckbox) {\n        PayrollListCheckbox[name] = value;\n        await this.setState({ ...this.state.PayrollList,\n          PayrollListCheckbox\n        });\n      }\n\n      this.UpdateSelectAllcheckbox();\n    };\n\n    this.UpdateSelectAllcheckbox = () => {\n      debugger;\n      let {\n        PayrollList,\n        headerDetails\n      } = this.state;\n      let PayrollListfullyChecked = PayrollList.find(acc => acc.checkbox === false);\n\n      if (!PayrollListfullyChecked) {\n        headerDetails[0][\"selectAllCheck\"] = true;\n        this.setState({\n          selectAll: true\n        });\n      }\n\n      if (PayrollListfullyChecked) {\n        headerDetails[0][\"selectAllCheck\"] = false;\n        this.setState({\n          selectAll: false\n        });\n      }\n    };\n\n    this.handleSelectAllCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        PayrollList,\n        headerDetails\n      } = this.state;\n\n      if (PayrollList) {\n        headerDetails[0][\"selectAllCheck\"] = value;\n        await this.setState({\n          selectAll: value,\n          headerDetails\n        });\n\n        for (let item of PayrollList) {\n          item[\"checkbox\"] = value;\n          await this.setState({ ...this.state.PayrollList,\n            item\n          });\n        }\n\n        await this.setState({\n          PayrollList\n        });\n      }\n    };\n\n    this.handlePrintPdfFormat = url => {\n      let {\n        formField\n      } = this.state;\n      console.log(formField, \"payslipmain\");\n      this.setState({\n        isPrintPdfClick: false\n      });\n      var a = document.createElement(\"a\");\n      a.setAttribute(\"download\", `${new Date()}.pdf`);\n      a.setAttribute(\"href\", url);\n      a.click();\n      window.open(url);\n    };\n\n    this.handleNext = async () => {\n      let {\n        page\n      } = this.state;\n      page = page + 1;\n      await this.setState({\n        page\n      });\n\n      if (page > 0) {\n        this.getPayrollList({});\n      }\n    };\n\n    this.handleBack = async () => {\n      let {\n        page\n      } = this.state;\n      page = page - 1;\n      await this.setState({\n        page\n      });\n\n      if (page > 0) {\n        this.getPayrollList({});\n      }\n    };\n\n    this.handlePagination = page => {\n      debugger;\n      this.getPayrollList(page);\n    };\n\n    this.hanldePostSelected = () => {\n      let {\n        PayrollList\n      } = this.state;\n\n      if (PayrollList.length > 0) {\n        let PayrollListCheckbox = PayrollList.find(acc => acc.checkbox === true);\n\n        if (PayrollListCheckbox) {\n          let {\n            PayrollList\n          } = this.state;\n          let payrollIds = [];\n\n          for (let item of PayrollList) {\n            if (item.checkbox) {\n              payrollIds.push({\n                value: item.payrollId\n              });\n            }\n          }\n\n          let body = {\n            post_ids: payrollIds.map(e => e.value)\n          };\n\n          try {\n            this.props.commonCreateApi(`employeesalary/postselectedlist/`, body).then(key => {\n              let {\n                status\n              } = key;\n\n              if (status == 200) {\n                this.getPayrollList();\n              }\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Please Select Item for update!\"\n          });\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"No data found!\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.tokenDetails.emp_payroll_setup) {\n      this.setState({\n        isLoginConfirmation: true\n      });\n    }\n\n    let From = new Date();\n    let {\n      formField\n    } = this.state;\n    let firstdayMonth = new Date(From.getFullYear() - 20, From.getMonth(), 1);\n    formField[\"fromDate\"] = firstdayMonth;\n    this.setState({\n      formField\n    });\n    let {\n      payEmpLevelOptions,\n      payStatusOptions\n    } = this.state;\n    this.props.getCommonApi(\"jobtitle/\").then(res => {\n      for (let key of res.data) {\n        payEmpLevelOptions.push({\n          value: key.id,\n          label: key.level_desc\n        });\n      }\n\n      this.setState({\n        payEmpLevelOptions\n      });\n    });\n    this.getSiteCode();\n  }\n\n  render() {\n    let {\n      headerDetails,\n      pageMeta,\n      PayrollList,\n      formField,\n      payStatusOptions,\n      payEmpLevelOptions,\n      paySiteOptions,\n      payYearOptions,\n      payMonthOptions,\n      payActiveOptions,\n      isLoginConfirmation,\n      isAllow,\n      isPrintPdfClick,\n      printData,\n      accountHeader\n    } = this.state;\n    let {\n      pay_status,\n      pay_EmpLevel,\n      pay_active,\n      pay_site,\n      pay_year,\n      pay_month,\n      fromDate,\n      searchText\n    } = formField;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, isAllow ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payroll-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label-head mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }\n    }, t(\"List of Staffs\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 19\n      }\n    }, t(\"Month\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholderrequired: false,\n      options: payMonthOptions,\n      value: t(pay_month),\n      iconname: \"icon-down-key\",\n      name: \"pay_month\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 19\n      }\n    }, t(\"Year\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalDate, {\n      selected: pay_year,\n      onChange: date => this.handleChange(date),\n      showYearPicker: true,\n      dateFormat: \"yyyy\" // yearItemNumber={9}\n      ,\n      value: pay_year,\n      name: \"pay_year\",\n      type: \"date\",\n      minDate: new Date(fromDate) // minDate={new Date(fromDate)}\n      ,\n      maxDate: new Date(),\n      popperPlacement: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 19\n      }\n    }, t(\"Site Code\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholderrequired: false,\n      options: paySiteOptions,\n      value: t(pay_site),\n      iconname: \"icon-down-key\",\n      name: \"pay_site\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 19\n      }\n    }, t(\"Active\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholderrequired: false,\n      options: payActiveOptions,\n      value: t(pay_active),\n      iconname: \"icon-down-key\",\n      name: \"pay_active\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 19\n      }\n    }, t(\"Employee Level\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholderrequired: false,\n      options: payEmpLevelOptions,\n      value: t(pay_EmpLevel),\n      iconname: \"icon-down-key\",\n      name: \"pay_EmpLevel\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 19\n      }\n    }, t(\"Status\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholderrequired: false,\n      options: payStatusOptions,\n      value: t(pay_status),\n      iconname: \"icon-down-key\",\n      name: \"pay_status\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payroll-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputSearch, {\n      placeholder: \"Search staff\",\n      value: searchText,\n      name: \"searchText\",\n      onChange: this.handlesearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: `true`,\n      label: `Add New`,\n      onClick: () => {\n        history.push(\"Payroll/add\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 21\n      }\n    }, PayrollList ? PayrollList.map((dataitem, index) => {\n      let {\n        payrollId,\n        EmpName,\n        EmpCode,\n        emp_level_id,\n        emp_level_name,\n        FromDate,\n        toDate,\n        nric,\n        BasicSalary,\n        otsalary,\n        othersalary,\n        totalsalary,\n        salarystatus,\n        checkbox,\n        hourlySalHour,\n        hourlySalRate,\n        firstOverTimeRate,\n        firstOverTimeHour,\n        totOTPay,\n        totCommission,\n        totAllowance,\n        totDeduct,\n        AddPay,\n        netPay,\n        empCPFCont,\n        dateofPay,\n        modeofPayId,\n        modeofPay,\n        secondOverTimeHour,\n        secondOverTimeRate,\n        TotAllowanceList,\n        TotDeducionList,\n        AddPaymentList,\n        site_code\n      } = dataitem;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `d-flex align-items-center justify-content-center`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, dataitem),\n        name: \"checkbox\",\n        checked: checkbox,\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 35\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 33\n        }\n      }, EmpCode)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 33\n        }\n      }, nric)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 33\n        }\n      }, EmpName)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 33\n        }\n      }, site_code)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 33\n        }\n      }, emp_level_name)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 33\n        }\n      }, BasicSalary)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 33\n        }\n      }, totOTPay)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 33\n        }\n      }, totCommission)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 33\n        }\n      }, AddPay)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 33\n        }\n      }, netPay)), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => history.push(`payroll/edit/${payrollId}/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 33\n        }\n      }, salarystatus)));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 27\n      }\n    }, t(\"No Data\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: `p-2`,\n      submitBtn: true,\n      label: `Post Selected`,\n      onClick: _.debounce(async () => {\n        {\n          this.hanldePostSelected();\n        }\n      }, 500),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: `p-2`,\n      submitBtn: true,\n      label: `Print Selected`,\n      onClick: _.debounce(async () => {\n        {\n          PayrollList && PayrollList.length > 0 && this.setState({\n            isPrintPdfClick: true\n          });\n        }\n      }, 500),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 17\n      }\n    })))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 15\n      }\n    }, t(\"You dont have a access to see this page\")))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"d-flex justify-content-center\",\n      style: {\n        minWidth: \"15%\"\n      },\n      modal: isLoginConfirmation,\n      handleModal: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleLoginConfirmationDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CredentialConfirmation, {\n      handleLoginSubmit: (user, pass) => this.handleauthentication(user, pass),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 11\n      }\n    })), isPrintPdfClick && /*#__PURE__*/React.createElement(PDFDownloadLink, {\n      document: /*#__PURE__*/React.createElement(Payslip, {\n        MainInfo: PayrollList.filter(print => print.checkbox != false),\n        Flag: 1,\n        landscape: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 11\n      }\n    }, ({\n      blob,\n      url,\n      loading,\n      error\n    }) => !loading && url ? this.handlePrintPdfFormat(url) : null));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonCreateApi\n  }, dispatch);\n};\n\nexport const PayrollMain = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(PayrollMainClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Payroll/ListPayroll/index.js"],"names":["React","Component","NormalButton","NormalSelect","NormalModal","NormalCheckbox","NormalDateTime","NormalDate","InputSearch","TableWrapper","dateFormat","history","connect","bindActionCreators","getCommonApi","commonCreateApi","withTranslation","_","closeIcon","Toast","CredentialConfirmation","moment","Payslip","PDFViewer","PDFDownloadLink","BlobProvider","PayrollMainClass","state","page","limit","selectAll","headerDetails","label","width","selectAllCheck","checkboxChange","e","handleSelectAllCheckbox","divClass","pageMeta","formField","pay_month","pay_year","pay_site","pay_active","pay_EmpLevel","pay_status","searchText","fromDate","Date","active","currentIndex","payStatusOptions","value","payEmpLevelOptions","paySiteOptions","payYearOptions","payMonthOptions","payActiveOptions","isLoginConfirmation","isAllow","selected","isPrintPdfClick","PayrollList","accountHeader","name","address","logo","getPayrollList","query","Object","assign","props","getFullYear","then","key","status","data","printData","pagination","setState","getSiteCode","console","log","push","id","itemsite_code","handleChange","event","target","handlesearch","debouncedFn","debounce","handleLoginConfirmationDialog","prevState","handleOpenTrac","handleauthentication","user","pass","Body","username","password","type","handleCheckbox","item","PayrollListCheckbox","find","acc","payrollId","UpdateSelectAllcheckbox","PayrollListfullyChecked","checkbox","handlePrintPdfFormat","url","a","document","createElement","setAttribute","click","window","open","handleNext","handleBack","handlePagination","hanldePostSelected","length","payrollIds","body","post_ids","map","message","componentDidMount","tokenDetails","emp_payroll_setup","From","firstdayMonth","getMonth","res","level_desc","render","t","date","dataitem","index","EmpName","EmpCode","emp_level_id","emp_level_name","FromDate","toDate","nric","BasicSalary","otsalary","othersalary","totalsalary","salarystatus","hourlySalHour","hourlySalRate","firstOverTimeRate","firstOverTimeHour","totOTPay","totCommission","totAllowance","totDeduct","AddPay","netPay","empCPFCont","dateofPay","modeofPayId","modeofPay","secondOverTimeHour","secondOverTimeRate","TotAllowanceList","TotDeducionList","AddPaymentList","site_code","minWidth","filter","print","blob","loading","error","mapStateToProps","authStore","mapDispatchToProps","dispatch","PayrollMain"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalButton,\r\n  NormalSelect,\r\n  NormalModal,\r\n  NormalCheckbox,\r\n  NormalDateTime,\r\n  NormalDate,\r\n} from \"component/common\";\r\nimport { InputSearch, TableWrapper } from \"component/common\";\r\nimport \"./style.scss\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { history } from \"helpers\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, commonCreateApi } from \"redux/actions/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport _ from \"lodash\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { Toast } from \"service/toast\";\r\nimport { CredentialConfirmation } from \"component/Admin/Cart/credentialConfirmation\";\r\nimport moment from \"moment\";\r\nimport Payslip from \"../Payslippdf/Payslip\";\r\n\r\nimport { PDFViewer, PDFDownloadLink, BlobProvider } from \"@react-pdf/renderer\";\r\n\r\nexport class PayrollMainClass extends Component {\r\n  state = {\r\n    page: 1,\r\n    limit: 10,\r\n    selectAll: false,\r\n    headerDetails: [\r\n      {\r\n        label: \"\",\r\n        width: \"20px\",\r\n        selectAll: true,\r\n        selectAllCheck: false,\r\n        checkboxChange: e => this.handleSelectAllCheckbox(e),\r\n      },\r\n      { label: \"Staff ID\" },\r\n      { label: \"NRIC\" },\r\n      {\r\n        label: \"Staff Name\",\r\n        divClass: \"\",\r\n        width: \"125px\",\r\n      },\r\n      {\r\n        label: \"Site\",\r\n        divClass: \"\",\r\n        width: \"120px\",\r\n      },\r\n      { label: \"Emp Level\" },\r\n      { label: \"Basic\" },\r\n      { label: \"OT\" },\r\n\r\n      { label: \"Commission\" },\r\n      { label: \"Others\" },\r\n      { label: \"Total\" },\r\n      { label: \"Status\" },\r\n    ],\r\n    pageMeta: {},\r\n    formField: {\r\n      pay_month: \"\",\r\n      pay_year: \"\",\r\n      pay_site: \"\",\r\n      pay_active: \"\",\r\n      pay_EmpLevel: \"\",\r\n      pay_status: \"\",\r\n      searchText: \"\",\r\n      fromDate: new Date(),\r\n    },\r\n    active: false,\r\n    currentIndex: -1,\r\n    payStatusOptions: [\r\n      { value: \"new\", label: \"New\" },\r\n      { value: \"open\", label: \"Open\" },\r\n      { value: \"posted\", label: \"Posted\" },\r\n    ],\r\n    payEmpLevelOptions: [],\r\n    paySiteOptions: [],\r\n    payYearOptions: [],\r\n    payMonthOptions: [\r\n      { value: 1, label: \"Jan\" },\r\n      { value: 2, label: \"Feb\" },\r\n      { value: 3, label: \"Mar\" },\r\n      { value: 4, label: \"Apr\" },\r\n      { value: 5, label: \"May\" },\r\n      { value: 6, label: \"Jun\" },\r\n      { value: 7, label: \"Jul\" },\r\n      { value: 8, label: \"Aug\" },\r\n      { value: 9, label: \"Sep\" },\r\n      { value: 10, label: \"Oct\" },\r\n      { value: 11, label: \"Nov\" },\r\n      { value: 12, label: \"Dec\" },\r\n    ],\r\n    payActiveOptions: [\r\n      { value: 1, label: \"Active\" },\r\n      { value: 0, label: \"In Active\" },\r\n      { value: \"\", label: \"All\" },\r\n    ],\r\n    isLoginConfirmation: false,\r\n    isAllow: false,\r\n    selected: false,\r\n    isPrintPdfClick: false,\r\n    PayrollList: [\r\n      // {\r\n      // payrollId: \"1\",\r\n      // EmpName: \"kaleeswaran\",\r\n      // EmpCode: \"HS010121\",\r\n      // nric: \"\",\r\n      // FromDate: new Date(),\r\n      // toDate: new Date(),\r\n      // BasicSalary: \"60000\",\r\n      // hourlySalHour: \"\",\r\n      // hourlySalRate: \"\",\r\n      // firstOverTimeRate: \"\",\r\n      // firstOverTimeHour: \"\",\r\n      // totOTPay: \"\",\r\n      // totCommission: \"\",\r\n      // totAllowance: \"\",\r\n      // totDeduct: \"\",\r\n      // AddPay: \"\",\r\n      // netPay: \"\",\r\n      // empCPFCont: \"\",\r\n      // dateofPay: new Date(),\r\n      // modeofPayId: \"\",\r\n      // modeofPay: \"\",\r\n      // secondOverTimeHour: \"\",\r\n      // secondOverTimeRate: \"\",\r\n      // TotAllowanceList: [\r\n      //   { desc: \"desc\", type: 2, typeName: \"totallowtype2\", amount: 500 },\r\n      // ],\r\n      // TotDeductionList: [\r\n      //   {\r\n      //     desc: \"deducdesc\",\r\n      //     type: 1,\r\n      //     typeName: \"totdeductype1\",\r\n      //     amount: 200,\r\n      //   },\r\n      // ],\r\n      // AddPaymentList: [\r\n      //   {\r\n      //     desc: \"paydesc\",\r\n      //     type: 3,\r\n      //     typeName: \"paytype3\",\r\n      //     amount: 300,\r\n      //   },\r\n      // ],\r\n      // checkbox: false,\r\n      //  },\r\n      // {\r\n      // payrollId: \"2\",\r\n      // EmpName: \"rajan\",\r\n      // EmpCode: \"HS010121\",\r\n      // FromDate: new Date(),\r\n      // nric: \"\",\r\n      // toDate: new Date(),\r\n      // BasicSalary: \"2000\",\r\n      // hourlySalHour: \"\",\r\n      // hourlySalRate: \"\",\r\n      // firstOverTimeRate: \"\",\r\n      // firstOverTimeHour: \"\",\r\n      // totOTPay: \"\",\r\n      // totCommission: \"\",\r\n      // totAllowance: \"\",\r\n      // totDeduct: \"\",\r\n      // AddPay: \"\",\r\n      // netPay: \"\",\r\n      // empCPFCont: \"\",\r\n      // dateofPay: new Date(),\r\n      // modeofPayId: \"\",\r\n      // modeofPay: \"\",\r\n      // secondOverTimeHour: \"\",\r\n      // secondOverTimeRate: \"\",\r\n      // TotAllowanceList: [],\r\n      // TotDeductionList: [],\r\n      // AddPaymentList: [],\r\n      // checkbox: false,\r\n      //  },\r\n    ],\r\n    accountHeader: { name: \"Employer name\", address: \"\", logo: \"\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.tokenDetails.emp_payroll_setup) {\r\n      this.setState({\r\n        isLoginConfirmation: true,\r\n      });\r\n    }\r\n\r\n    let From = new Date();\r\n    let { formField } = this.state;\r\n    let firstdayMonth = new Date(From.getFullYear() - 20, From.getMonth(), 1);\r\n    formField[\"fromDate\"] = firstdayMonth;\r\n    this.setState({\r\n      formField,\r\n    });\r\n    let { payEmpLevelOptions, payStatusOptions } = this.state;\r\n    this.props.getCommonApi(\"jobtitle/\").then(res => {\r\n      for (let key of res.data) {\r\n        payEmpLevelOptions.push({ value: key.id, label: key.level_desc });\r\n      }\r\n      this.setState({ payEmpLevelOptions });\r\n    });\r\n\r\n    this.getSiteCode();\r\n  }\r\n  getPayrollList = query => {\r\n    let { formField, limit } = this.state;\r\n    let { page = this.state.page } = query;\r\n    let PayrollList = Object.assign({}, this.state.PayrollList);\r\n\r\n    let {\r\n      pay_status,\r\n      pay_EmpLevel,\r\n      pay_active,\r\n      pay_site,\r\n      pay_year,\r\n      pay_month,\r\n      fromDate,\r\n      searchText,\r\n    } = formField;\r\n    this.props\r\n      .getCommonApi(\r\n        `employeesalary/?month=${pay_month ? pay_month : \"\"}&year=${\r\n          pay_year ? new Date(pay_year).getFullYear() : 0\r\n        }&site_code=${pay_site ? pay_site : \"\"}&active=${\r\n          pay_active ? pay_active : \"\"\r\n        }&emplevel=${pay_EmpLevel ? pay_EmpLevel : \"\"}&status=${\r\n          pay_status ? pay_status : \"\"\r\n        }&page=${page}&limit=${limit}&search=${searchText ? searchText : \"\"}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        let { pageMeta } = this.state;\r\n        if (status === 200) {\r\n          if (data) {\r\n            PayrollList = data.printData;\r\n            pageMeta = data.pagination;\r\n          }\r\n          this.setState({\r\n            PayrollList,\r\n            pageMeta,\r\n          });\r\n        } else {\r\n          pageMeta = {};\r\n          PayrollList = [];\r\n          this.setState({\r\n            PayrollList,\r\n            pageMeta,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  getSiteCode = () => {\r\n    let { paySiteOptions } = this.state;\r\n    this.props.getCommonApi(`branchlist/`).then(key => {\r\n      let { status, data } = key;\r\n      console.log(data, \"sitecodelist\");\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          paySiteOptions.push({\r\n            value: value.id,\r\n            label: value.itemsite_code,\r\n            // selected: false,\r\n          });\r\n        }\r\n        this.setState({ paySiteOptions });\r\n      }\r\n    });\r\n  };\r\n  handleChange = async event => {\r\n    let formField = this.state;\r\n    formField[event.target.name] = event.target.value;\r\n    await this.setState({\r\n      formField,\r\n    });\r\n    this.getPayrollList({});\r\n  };\r\n\r\n  handlesearch = event => {\r\n    console.log(event.target.value);\r\n    let { formField } = this.state;\r\n    formField[\"searchText\"] = event.target.value;\r\n    this.setState({ formField });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {\r\n        this.getPayrollList({});\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  handleLoginConfirmationDialog = async () => {\r\n    await this.setState(prevState => ({\r\n      isLoginConfirmation: !prevState.isLoginConfirmation,\r\n    }));\r\n  };\r\n\r\n  handleOpenTrac = async () => {\r\n    await this.setState(prevState => ({\r\n      isAllow: !prevState.isAllow,\r\n    }));\r\n    this.getPayrollList({});\r\n  };\r\n\r\n  handleauthentication = async (user, pass) => {\r\n    let Body = {\r\n      username: user,\r\n      password: pass,\r\n      type: \"Payroll\",\r\n    };\r\n    this.props\r\n      .commonCreateApi(`userauthorizationpopup/`, Body)\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        if (status == 200) {\r\n          await this.setState(prevState => ({\r\n            isLoginConfirmation: !prevState.isLoginConfirmation,\r\n          }));\r\n          this.handleOpenTrac();\r\n        }\r\n      });\r\n  };\r\n\r\n  handleCheckbox = async ({ target: { value, name } }, item) => {\r\n    let { PayrollList } = this.state;\r\n    let PayrollListCheckbox = PayrollList.find(\r\n      acc => acc.payrollId === item.payrollId\r\n    );\r\n    if (PayrollListCheckbox) {\r\n      PayrollListCheckbox[name] = value;\r\n      await this.setState({ ...this.state.PayrollList, PayrollListCheckbox });\r\n    }\r\n    this.UpdateSelectAllcheckbox();\r\n  };\r\n\r\n  UpdateSelectAllcheckbox = () => {\r\n    debugger;\r\n    let { PayrollList, headerDetails } = this.state;\r\n    let PayrollListfullyChecked = PayrollList.find(\r\n      acc => acc.checkbox === false\r\n    );\r\n\r\n    if (!PayrollListfullyChecked) {\r\n      headerDetails[0][\"selectAllCheck\"] = true;\r\n      this.setState({\r\n        selectAll: true,\r\n      });\r\n    }\r\n\r\n    if (PayrollListfullyChecked) {\r\n      headerDetails[0][\"selectAllCheck\"] = false;\r\n      this.setState({\r\n        selectAll: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSelectAllCheckbox = async ({ target: { value, name } }) => {\r\n    let { PayrollList, headerDetails } = this.state;\r\n    if (PayrollList) {\r\n      headerDetails[0][\"selectAllCheck\"] = value;\r\n      await this.setState({ selectAll: value, headerDetails });\r\n      for (let item of PayrollList) {\r\n        item[\"checkbox\"] = value;\r\n        await this.setState({ ...this.state.PayrollList, item });\r\n      }\r\n      await this.setState({ PayrollList });\r\n    }\r\n  };\r\n\r\n  handlePrintPdfFormat = url => {\r\n    let { formField } = this.state;\r\n    console.log(formField, \"payslipmain\");\r\n    this.setState({\r\n      isPrintPdfClick: false,\r\n    });\r\n    var a = document.createElement(\"a\");\r\n    a.setAttribute(\"download\", `${new Date()}.pdf`);\r\n    a.setAttribute(\"href\", url);\r\n    a.click();\r\n    window.open(url);\r\n  };\r\n\r\n  handleNext = async () => {\r\n    let { page } = this.state;\r\n    page = page + 1;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    if (page > 0) {\r\n      this.getPayrollList({});\r\n    }\r\n  };\r\n\r\n  handleBack = async () => {\r\n    let { page } = this.state;\r\n    page = page - 1;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    if (page > 0) {\r\n      this.getPayrollList({});\r\n    }\r\n  };\r\n\r\n  handlePagination = page => {\r\n    debugger;\r\n    this.getPayrollList(page);\r\n  };\r\n\r\n  hanldePostSelected = () => {\r\n    let { PayrollList } = this.state;\r\n    if (PayrollList.length > 0) {\r\n      let PayrollListCheckbox = PayrollList.find(acc => acc.checkbox === true);\r\n      if (PayrollListCheckbox) {\r\n        let { PayrollList } = this.state;\r\n        let payrollIds = [];\r\n        for (let item of PayrollList) {\r\n          if (item.checkbox) {\r\n            payrollIds.push({\r\n              value: item.payrollId,\r\n            });\r\n          }\r\n        }\r\n\r\n        let body = {\r\n          post_ids: payrollIds.map(e => e.value),\r\n        };\r\n        try {\r\n          this.props\r\n            .commonCreateApi(`employeesalary/postselectedlist/`, body)\r\n            .then(key => {\r\n              let { status } = key;\r\n              if (status == 200) {\r\n                this.getPayrollList();\r\n              }\r\n            });\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Please Select Item for update!\",\r\n        });\r\n      }\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"No data found!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      pageMeta,\r\n      PayrollList,\r\n      formField,\r\n      payStatusOptions,\r\n      payEmpLevelOptions,\r\n      paySiteOptions,\r\n      payYearOptions,\r\n      payMonthOptions,\r\n      payActiveOptions,\r\n      isLoginConfirmation,\r\n      isAllow,\r\n      isPrintPdfClick,\r\n      printData,\r\n      accountHeader,\r\n    } = this.state;\r\n    let {\r\n      pay_status,\r\n      pay_EmpLevel,\r\n      pay_active,\r\n      pay_site,\r\n      pay_year,\r\n      pay_month,\r\n      fromDate,\r\n      searchText,\r\n    } = formField;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        {isAllow ? (\r\n          <>\r\n            <div className=\"payroll-section\">\r\n              <div className=\"col-md-12 d-flex align-items-center\">\r\n                <p className=\"label-head mb-4\">{t(\"List of Staffs\")}</p>\r\n              </div>\r\n              <div className=\"d-flex flex-wrap\">\r\n                <div className=\"col-md-2 col-12\">\r\n                  <label className=\"text-left w-100 text-black common-label-text mb-2\">\r\n                    {t(\"Month\")}\r\n                  </label>\r\n                  <div className=\"input-group\">\r\n                    <NormalSelect\r\n                      placeholderrequired={false}\r\n                      options={payMonthOptions}\r\n                      value={t(pay_month)}\r\n                      iconname=\"icon-down-key\"\r\n                      name=\"pay_month\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 col-12\">\r\n                  <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                    {t(\"Year\")}\r\n                  </label>\r\n                  <div className=\"input-group\">\r\n                    <NormalDate\r\n                      selected={pay_year}\r\n                      onChange={date => this.handleChange(date)}\r\n                      showYearPicker\r\n                      dateFormat=\"yyyy\"\r\n                      // yearItemNumber={9}\r\n                      value={pay_year}\r\n                      name=\"pay_year\"\r\n                      type=\"date\"\r\n                      minDate={new Date(fromDate)}\r\n                      // minDate={new Date(fromDate)}\r\n                      maxDate={new Date()}\r\n                      popperPlacement={\"bottom\"}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 col-12\">\r\n                  <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                    {t(\"Site Code\")}\r\n                  </label>\r\n                  <div className=\"input-group\">\r\n                    <NormalSelect\r\n                      placeholderrequired={false}\r\n                      options={paySiteOptions}\r\n                      value={t(pay_site)}\r\n                      iconname=\"icon-down-key\"\r\n                      name=\"pay_site\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 col-12\">\r\n                  <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                    {t(\"Active\")}\r\n                  </label>\r\n                  <div className=\"input-group\">\r\n                    <NormalSelect\r\n                      placeholderrequired={false}\r\n                      options={payActiveOptions}\r\n                      value={t(pay_active)}\r\n                      iconname=\"icon-down-key\"\r\n                      name=\"pay_active\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 col-12\">\r\n                  <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                    {t(\"Employee Level\")}\r\n                  </label>\r\n                  <div className=\"input-group\">\r\n                    <NormalSelect\r\n                      placeholderrequired={false}\r\n                      options={payEmpLevelOptions}\r\n                      value={t(pay_EmpLevel)}\r\n                      iconname=\"icon-down-key\"\r\n                      name=\"pay_EmpLevel\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 col-12\">\r\n                  <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                    {t(\"Status\")}\r\n                  </label>\r\n                  <div className=\"input-group\">\r\n                    <NormalSelect\r\n                      placeholderrequired={false}\r\n                      options={payStatusOptions}\r\n                      value={t(pay_status)}\r\n                      iconname=\"icon-down-key\"\r\n                      name=\"pay_status\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"payroll-table\">\r\n                <div className=\"py-4\">\r\n                  <div className=\"d-flex flex-wrap justify-content-end\">\r\n                    <div className=\"col-md-2 col-12 mb-2\">\r\n                      <InputSearch\r\n                        placeholder=\"Search staff\"\r\n                        value={searchText}\r\n                        name=\"searchText\"\r\n                        onChange={this.handlesearch}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-2 col-12 mb-2\">\r\n                      <NormalButton\r\n                        mainbg={`true`}\r\n                        label={`Add New`}\r\n                        onClick={() => {\r\n                          history.push(\"Payroll/add\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"table-container\">\r\n                    <TableWrapper\r\n                      headerDetails={headerDetails}\r\n                      queryHandler={this.handlePagination}\r\n                      pageMeta={pageMeta}\r\n                    >\r\n                      {PayrollList ? (\r\n                        PayrollList.map((dataitem, index) => {\r\n                          let {\r\n                            payrollId,\r\n                            EmpName,\r\n                            EmpCode,\r\n                            emp_level_id,\r\n                            emp_level_name,\r\n                            FromDate,\r\n                            toDate,\r\n                            nric,\r\n                            BasicSalary,\r\n                            otsalary,\r\n                            othersalary,\r\n                            totalsalary,\r\n                            salarystatus,\r\n                            checkbox,\r\n                            hourlySalHour,\r\n                            hourlySalRate,\r\n                            firstOverTimeRate,\r\n                            firstOverTimeHour,\r\n                            totOTPay,\r\n                            totCommission,\r\n                            totAllowance,\r\n                            totDeduct,\r\n                            AddPay,\r\n                            netPay,\r\n                            empCPFCont,\r\n                            dateofPay,\r\n                            modeofPayId,\r\n                            modeofPay,\r\n                            secondOverTimeHour,\r\n                            secondOverTimeRate,\r\n                            TotAllowanceList,\r\n                            TotDeducionList,\r\n                            AddPaymentList,\r\n                            site_code,\r\n                          } = dataitem;\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td>\r\n                                <div\r\n                                  className={`d-flex align-items-center justify-content-center`}\r\n                                >\r\n                                  <NormalCheckbox\r\n                                    onChange={e =>\r\n                                      this.handleCheckbox(e, dataitem)\r\n                                    }\r\n                                    name=\"checkbox\"\r\n                                    checked={checkbox}\r\n                                    type=\"checkbox\"\r\n                                  />\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{EmpCode}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{nric}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{EmpName}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{site_code}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">\r\n                                  {emp_level_name}\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{BasicSalary}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{totOTPay}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{totCommission}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{AddPay}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{netPay}</div>\r\n                              </td>\r\n                              <td\r\n                                onClick={() =>\r\n                                  history.push(`payroll/edit/${payrollId}/`)\r\n                                }\r\n                              >\r\n                                <div className=\"text-left\">{salarystatus}</div>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={12}>{t(\"No Data\")}</td>\r\n                        </tr>\r\n                      )}\r\n                    </TableWrapper>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex flex-wrap justify-content-end\">\r\n                <NormalButton\r\n                  buttonClass={`p-2`}\r\n                  submitBtn={true}\r\n                  label={`Post Selected`}\r\n                  onClick={_.debounce(async () => {\r\n                    {\r\n                      this.hanldePostSelected();\r\n                    }\r\n                  }, 500)}\r\n                />\r\n                <NormalButton\r\n                  buttonClass={`p-2`}\r\n                  submitBtn={true}\r\n                  label={`Print Selected`}\r\n                  onClick={_.debounce(async () => {\r\n                    {\r\n                      PayrollList &&\r\n                        PayrollList.length > 0 &&\r\n                        this.setState({ isPrintPdfClick: true });\r\n                    }\r\n                  }, 500)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div>\r\n            <div className=\"d-flex flex justify-content-center\">\r\n              <h5>{t(\"You dont have a access to see this page\")}</h5>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <NormalModal\r\n          className={\"d-flex justify-content-center\"}\r\n          style={{ minWidth: \"15%\" }}\r\n          modal={isLoginConfirmation}\r\n          handleModal={() => {}}\r\n        >\r\n          <img\r\n            onClick={this.handleLoginConfirmationDialog}\r\n            className=\"close cursor-pointer\"\r\n            src={closeIcon}\r\n            alt=\"\"\r\n          />\r\n          <CredentialConfirmation\r\n            handleLoginSubmit={(user, pass) =>\r\n              this.handleauthentication(user, pass)\r\n            }\r\n          />\r\n        </NormalModal>\r\n        {isPrintPdfClick && (\r\n          <PDFDownloadLink\r\n            document={\r\n              <Payslip\r\n                MainInfo={PayrollList.filter(print => print.checkbox != false)}\r\n                Flag={1}\r\n                landscape={false}\r\n              />\r\n            }\r\n          >\r\n            {({ blob, url, loading, error }) =>\r\n              !loading && url ? this.handlePrintPdfFormat(url) : null\r\n            }\r\n          </PDFDownloadLink>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonCreateApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const PayrollMain = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(PayrollMainClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}