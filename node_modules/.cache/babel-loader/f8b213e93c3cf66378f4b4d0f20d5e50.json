{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/local_store.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.LocalStore = void 0;\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _utils = _interopRequireDefault(require(\"../../data/utils\"));\n\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\n\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\n\nvar _data_source = require(\"../../data/data_source/data_source\");\n\nvar _custom_store = _interopRequireDefault(require(\"../../data/custom_store\"));\n\nvar _data = require(\"../../core/utils/data\");\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\n\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar PATH_DELIMETER = \"/./\";\n\nvar LocalStore = _class.default.inherit(function () {\n  var DATE_INTERVAL_SELECTORS = {\n    year: function (date) {\n      return date && date.getFullYear();\n    },\n    quarter: function (date) {\n      return date && Math.floor(date.getMonth() / 3) + 1;\n    },\n    month: function (date) {\n      return date && date.getMonth() + 1;\n    },\n    day: function (date) {\n      return date && date.getDate();\n    },\n    dayOfWeek: function (date) {\n      return date && date.getDay();\n    }\n  };\n\n  function getDataSelector(dataField) {\n    return dataField.indexOf(\".\") !== -1 ? (0, _data.compileGetter)(dataField) : function (data) {\n      return data[dataField];\n    };\n  }\n\n  function getDateValue(dataSelector) {\n    return function (data) {\n      var value = dataSelector(data);\n\n      if (value && !(value instanceof Date)) {\n        value = _date_serialization.default.deserializeDate(value);\n      }\n\n      return value;\n    };\n  }\n\n  function prepareFields(fields) {\n    (0, _iterator.each)(fields || [], function (_, field) {\n      var fieldSelector;\n      var intervalSelector;\n      var dataField = field.dataField;\n      var groupInterval;\n      var levels = field.levels;\n      var dataSelector;\n\n      if (!field.selector) {\n        if (!dataField) {\n          dataSelector = function (data) {\n            return data;\n          };\n        } else {\n          dataSelector = getDataSelector(dataField);\n        }\n\n        if (levels) {\n          prepareFields(levels);\n        }\n\n        if (\"date\" === field.dataType) {\n          intervalSelector = DATE_INTERVAL_SELECTORS[field.groupInterval];\n          var valueSelector = getDateValue(dataSelector);\n\n          fieldSelector = function (data) {\n            var value = valueSelector(data);\n            return intervalSelector ? intervalSelector(value) : value;\n          };\n        } else {\n          if (\"number\" === field.dataType) {\n            groupInterval = (0, _type.isNumeric)(field.groupInterval) && field.groupInterval > 0 && field.groupInterval;\n\n            fieldSelector = function (data) {\n              var value = dataSelector(data);\n\n              if ((0, _type.isString)(value)) {\n                value = Number(value);\n              }\n\n              return groupInterval ? Math.floor(value / groupInterval) * groupInterval : value;\n            };\n          } else {\n            fieldSelector = dataSelector;\n          }\n        }\n\n        (0, _uiPivot_grid.setDefaultFieldValueFormatting)(field);\n        (0, _uiPivot_grid.setFieldProperty)(field, \"selector\", fieldSelector);\n      }\n    });\n  }\n\n  var addHierarchyItem = function (value, hierarchyItems, pathHash, childrenHash) {\n    var hierarchyItem = childrenHash[pathHash];\n\n    if (!hierarchyItem) {\n      hierarchyItem = {\n        value: value,\n        index: childrenHash.length++\n      };\n      childrenHash[pathHash] = hierarchyItem;\n      hierarchyItems.push(hierarchyItem);\n    }\n\n    return hierarchyItem;\n  };\n\n  function fillHierarchyItemIndexesCore(indexes, options, children, expandIndex, pathHash) {\n    var dimension = options.dimensions[expandIndex];\n    var expandedPathsHash = options.expandedPathsHash;\n    var dimensionValue;\n    var hierarchyItem;\n\n    if (dimension) {\n      dimensionValue = dimension.selector(options.data);\n      pathHash = void 0 !== pathHash ? pathHash + PATH_DELIMETER + dimensionValue : dimensionValue + \"\";\n      hierarchyItem = addHierarchyItem(dimensionValue, children, pathHash, options.childrenHash);\n      indexes.push(hierarchyItem.index);\n\n      if (expandedPathsHash && expandedPathsHash[pathHash] || dimension.expanded) {\n        if (!hierarchyItem.children) {\n          hierarchyItem.children = [];\n        }\n\n        fillHierarchyItemIndexesCore(indexes, options, hierarchyItem.children, expandIndex + 1, pathHash);\n      }\n    }\n  }\n\n  function generateHierarchyItems(data, loadOptions, headers, headerName) {\n    var result = [0];\n    var expandIndex = loadOptions.headerName === headerName ? loadOptions.path.length : 0;\n    var expandedPaths = \"rows\" === headerName ? loadOptions.rowExpandedPaths : loadOptions.columnExpandedPaths;\n    var options = {\n      data: data,\n      childrenHash: headers[headerName + \"Hash\"],\n      dimensions: loadOptions[headerName],\n      expandedPathsHash: loadOptions.headerName !== headerName && expandedPaths && expandedPaths.hash\n    };\n    fillHierarchyItemIndexesCore(result, options, headers[headerName], expandIndex);\n    return result;\n  }\n\n  function generateAggregationCells(data, cells, headers, options) {\n    var cellSet = [];\n    var x;\n    var y;\n    var rowIndex;\n    var columnIndex;\n    var rowIndexes = generateHierarchyItems(data, options, headers, \"rows\");\n    var columnIndexes = generateHierarchyItems(data, options, headers, \"columns\");\n\n    for (y = 0; y < rowIndexes.length; y++) {\n      rowIndex = rowIndexes[y];\n      cells[rowIndex] = cells[rowIndex] || [];\n\n      for (x = 0; x < columnIndexes.length; x++) {\n        columnIndex = columnIndexes[x];\n        cellSet.push(cells[rowIndex][columnIndex] = cells[rowIndex][columnIndex] || []);\n      }\n    }\n\n    return cellSet;\n  }\n\n  function fillHashExpandedPath(expandedPaths) {\n    if (expandedPaths) {\n      var hash = expandedPaths.hash = {};\n      expandedPaths.forEach(function (path) {\n        var pathValue = path.map(function (value) {\n          return value + \"\";\n        }).join(PATH_DELIMETER);\n        hash[pathValue] = true;\n      });\n    }\n  }\n\n  function prepareLoadOption(options) {\n    options.rows = options.rows || [];\n    options.columns = options.columns || [];\n    options.filters = options.filters || [];\n    fillHashExpandedPath(options.columnExpandedPaths);\n    fillHashExpandedPath(options.rowExpandedPaths);\n    prepareFields(options.columns);\n    prepareFields(options.rows);\n    prepareFields(options.values);\n    prepareFields(options.filters);\n  }\n\n  function getAggregator(field) {\n    if (\"custom\" === field.summaryType) {\n      field.calculateCustomSummary = field.calculateCustomSummary || _common.noop;\n      return {\n        seed: function () {\n          var options = {\n            summaryProcess: \"start\",\n            totalValue: void 0\n          };\n          field.calculateCustomSummary(options);\n          return options;\n        },\n        step: function (options, value) {\n          options.summaryProcess = \"calculate\";\n          options.value = value;\n          field.calculateCustomSummary(options);\n          return options;\n        },\n        finalize: function (options) {\n          options.summaryProcess = \"finalize\";\n          delete options.value;\n          field.calculateCustomSummary(options);\n          return options.totalValue;\n        }\n      };\n    }\n\n    return _utils.default.aggregators[field.summaryType] || _utils.default.aggregators.count;\n  }\n\n  function aggregationStep(measures, aggregationCells, data) {\n    for (var aggregatorIndex = 0; aggregatorIndex < measures.length; aggregatorIndex++) {\n      var cellField = measures[aggregatorIndex];\n      var cellValue = cellField.selector(data);\n      var aggregator = getAggregator(cellField);\n      var isAggregatorSeedFunction = \"function\" === typeof aggregator.seed;\n\n      for (var cellSetIndex = 0; cellSetIndex < aggregationCells.length; cellSetIndex++) {\n        var cell = aggregationCells[cellSetIndex];\n\n        if (cell.length <= aggregatorIndex) {\n          cell[aggregatorIndex] = isAggregatorSeedFunction ? aggregator.seed() : aggregator.seed;\n        }\n\n        if (void 0 === cell[aggregatorIndex]) {\n          cell[aggregatorIndex] = cellValue;\n        } else {\n          if ((0, _type.isDefined)(cellValue)) {\n            cell[aggregatorIndex] = aggregator.step(cell[aggregatorIndex], cellValue);\n          }\n        }\n      }\n    }\n  }\n\n  function aggregationFinalize(measures, cells) {\n    (0, _iterator.each)(measures, function (aggregatorIndex, cellField) {\n      var aggregator = getAggregator(cellField);\n\n      if (aggregator.finalize) {\n        (0, _iterator.each)(cells, function (_, row) {\n          (0, _iterator.each)(row, function (_, cell) {\n            if (cell && void 0 !== cell[aggregatorIndex]) {\n              cell[aggregatorIndex] = aggregator.finalize(cell[aggregatorIndex]);\n            }\n          });\n        });\n      }\n    });\n  }\n\n  function areValuesEqual(filterValue, fieldValue) {\n    var valueOfFilter = filterValue && filterValue.valueOf();\n    var valueOfField = fieldValue && fieldValue.valueOf();\n\n    if (Array.isArray(filterValue)) {\n      fieldValue = fieldValue || [];\n\n      for (var i = 0; i < filterValue.length; i++) {\n        valueOfFilter = filterValue[i] && filterValue[i].valueOf();\n        valueOfField = fieldValue[i] && fieldValue[i].valueOf();\n\n        if (valueOfFilter !== valueOfField) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return valueOfFilter === valueOfField;\n    }\n  }\n\n  function getGroupValue(levels, data) {\n    var value = [];\n    (0, _iterator.each)(levels, function (_, field) {\n      value.push(field.selector(data));\n    });\n    return value;\n  }\n\n  function createDimensionFilters(dimension) {\n    var filters = [];\n    (0, _iterator.each)(dimension, function (_, field) {\n      var filterValues = field.filterValues || [];\n      var groupName = field.groupName;\n\n      if (groupName && (0, _type.isNumeric)(field.groupIndex)) {\n        return;\n      }\n\n      var filter = function (dataItem) {\n        var value = field.levels ? getGroupValue(field.levels, dataItem) : field.selector(dataItem);\n        var result = false;\n\n        for (var i = 0; i < filterValues.length; i++) {\n          if (areValuesEqual(filterValues[i], value)) {\n            result = true;\n            break;\n          }\n        }\n\n        return \"exclude\" === field.filterType ? !result : result;\n      };\n\n      filterValues.length && filters.push(filter);\n    });\n    return filters;\n  }\n\n  function createFilter(options) {\n    var filters = createDimensionFilters(options.rows).concat(createDimensionFilters(options.columns)).concat(createDimensionFilters(options.filters));\n    var expandedDimensions = options[options.headerName];\n    var path = options.path;\n\n    if (expandedDimensions) {\n      filters.push(function (dataItem) {\n        var expandValue;\n\n        for (var i = 0; i < path.length; i++) {\n          expandValue = expandedDimensions[i].selector(dataItem);\n\n          if ((0, _data.toComparable)(expandValue, true) !== (0, _data.toComparable)(path[i], true)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n\n    return function (dataItem) {\n      for (var i = 0; i < filters.length; i++) {\n        if (!filters[i](dataItem)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }\n\n  function loadCore(items, options, notifyProgress) {\n    var headers = {\n      columns: [],\n      rows: [],\n      columnsHash: {\n        length: 1\n      },\n      rowsHash: {\n        length: 1\n      }\n    };\n    var values = [];\n    var aggregationCells;\n    var data;\n    var d = new _deferred.Deferred();\n    var i = 0;\n    var filter = createFilter(options);\n\n    function processData() {\n      var t = new Date();\n      var startIndex = i;\n\n      for (; i < items.length; i++) {\n        if (i > startIndex && i % 1e4 === 0) {\n          if (new Date() - t >= 300) {\n            notifyProgress(i / items.length);\n            setTimeout(processData, 0);\n            return;\n          }\n        }\n\n        data = items[i];\n\n        if (filter(data)) {\n          aggregationCells = generateAggregationCells(data, values, headers, options);\n          aggregationStep(options.values, aggregationCells, data);\n        }\n      }\n\n      aggregationFinalize(options.values, values);\n      notifyProgress(1);\n      d.resolve({\n        rows: headers.rows,\n        columns: headers.columns,\n        values: values,\n        grandTotalRowIndex: 0,\n        grandTotalColumnIndex: 0\n      });\n    }\n\n    processData();\n    return d;\n  }\n\n  function filterDataSource(dataSource, fieldSelectors) {\n    var filter = dataSource.filter();\n\n    if (dataSource.store() instanceof _custom_store.default && filter) {\n      filter = processFilter(filter, fieldSelectors);\n      return (0, _query.default)(dataSource.items()).filter(filter).toArray();\n    }\n\n    return dataSource.items();\n  }\n\n  function loadDataSource(dataSource, fieldSelectors, reload) {\n    var d = new _deferred.Deferred();\n\n    var customizeStoreLoadOptionsHandler = function (options) {\n      if (dataSource.store() instanceof _array_store.default) {\n        options.storeLoadOptions.filter = processFilter(options.storeLoadOptions.filter, fieldSelectors);\n      }\n    };\n\n    dataSource.on(\"customizeStoreLoadOptions\", customizeStoreLoadOptionsHandler);\n\n    if (!dataSource.isLoaded() || reload) {\n      var loadDeferred = reload ? dataSource.load() : dataSource.reload();\n      (0, _deferred.when)(loadDeferred).done(function () {\n        loadDataSource(dataSource, fieldSelectors).done(function () {\n          d.resolve(filterDataSource(dataSource, fieldSelectors));\n        }).fail(d.reject);\n      }).fail(d.reject);\n    } else {\n      d.resolve(filterDataSource(dataSource, fieldSelectors));\n    }\n\n    return d.always(function () {\n      dataSource.off(\"customizeStoreLoadOptions\", customizeStoreLoadOptionsHandler);\n    });\n  }\n\n  function fillSelectorsByFields(selectors, fields) {\n    fields.forEach(function (field) {\n      if (field.dataField && \"date\" === field.dataType) {\n        var valueSelector = getDateValue(getDataSelector(field.dataField));\n\n        selectors[field.dataField] = function (data) {\n          return valueSelector(data);\n        };\n      }\n    });\n  }\n\n  function getFieldSelectors(options) {\n    var selectors = {};\n\n    if (Array.isArray(options)) {\n      fillSelectorsByFields(selectors, options);\n    } else {\n      if (options) {\n        [\"rows\", \"columns\", \"filters\"].forEach(function (area) {\n          options[area] && fillSelectorsByFields(selectors, options[area]);\n        });\n      }\n    }\n\n    return selectors;\n  }\n\n  function processFilter(filter, fieldSelectors) {\n    if (!Array.isArray(filter)) {\n      return filter;\n    }\n\n    filter = filter.slice(0);\n\n    if ((0, _type.isString)(filter[0]) && (filter[1] instanceof Date || filter[2] instanceof Date)) {\n      filter[0] = fieldSelectors[filter[0]];\n    }\n\n    for (var i = 0; i < filter.length; i++) {\n      filter[i] = processFilter(filter[i], fieldSelectors);\n    }\n\n    return filter;\n  }\n\n  return {\n    ctor: function (options) {\n      this._progressChanged = options.onProgressChanged || _common.noop;\n      this._dataSource = new _data_source.DataSource(options);\n\n      this._dataSource.paginate(false);\n    },\n    getFields: function (fields) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var d = new _deferred.Deferred();\n      loadDataSource(dataSource, getFieldSelectors(fields)).done(function (data) {\n        d.resolve((0, _uiPivot_grid.discoverObjectFields)(data, fields));\n      }).fail(d.reject);\n      return d;\n    },\n    key: function () {\n      return this._dataSource.key();\n    },\n    load: function (options) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var d = new _deferred.Deferred();\n      prepareLoadOption(options);\n      loadDataSource(dataSource, getFieldSelectors(options), options.reload).done(function (data) {\n        (0, _deferred.when)(loadCore(data, options, that._progressChanged)).done(d.resolve);\n      }).fail(d.reject);\n      return d;\n    },\n    filter: function () {\n      var dataSource = this._dataSource;\n      return dataSource.filter.apply(dataSource, arguments);\n    },\n    supportPaging: function () {\n      return false;\n    },\n    getDrillDownItems: function (loadOptions, params) {\n      loadOptions = loadOptions || {};\n      params = params || {};\n      prepareLoadOption(loadOptions);\n      var drillDownItems = [];\n\n      var items = this._dataSource.items();\n\n      var item;\n      var maxRowCount = params.maxRowCount;\n      var customColumns = params.customColumns;\n      var filter = createFilter(loadOptions);\n      var pathFilter = createFilter({\n        rows: (0, _uiPivot_grid.getFiltersByPath)(loadOptions.rows, params.rowPath),\n        columns: (0, _uiPivot_grid.getFiltersByPath)(loadOptions.columns, params.columnPath),\n        filters: []\n      });\n\n      for (var i = 0; i < items.length; i++) {\n        if (pathFilter(items[i]) && filter(items[i])) {\n          if (customColumns) {\n            item = {};\n\n            for (var j = 0; j < customColumns.length; j++) {\n              item[customColumns[j]] = items[i][customColumns[j]];\n            }\n          } else {\n            item = items[i];\n          }\n\n          drillDownItems.push(item);\n        }\n\n        if (maxRowCount > 0 && drillDownItems.length === maxRowCount) {\n          break;\n        }\n      }\n\n      return drillDownItems;\n    }\n  };\n}()).include(_uiPivot_grid.storeDrillDownMixin);\n\nexports.LocalStore = LocalStore;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/local_store.js"],"names":["exports","LocalStore","_deferred","require","_utils","_interopRequireDefault","_query","_date_serialization","_data_source","_custom_store","_data","_class","_common","_type","_iterator","_uiPivot_grid","_array_store","obj","__esModule","PATH_DELIMETER","default","inherit","DATE_INTERVAL_SELECTORS","year","date","getFullYear","quarter","Math","floor","getMonth","month","day","getDate","dayOfWeek","getDay","getDataSelector","dataField","indexOf","compileGetter","data","getDateValue","dataSelector","value","Date","deserializeDate","prepareFields","fields","each","_","field","fieldSelector","intervalSelector","groupInterval","levels","selector","dataType","valueSelector","isNumeric","isString","Number","setDefaultFieldValueFormatting","setFieldProperty","addHierarchyItem","hierarchyItems","pathHash","childrenHash","hierarchyItem","index","length","push","fillHierarchyItemIndexesCore","indexes","options","children","expandIndex","dimension","dimensions","expandedPathsHash","dimensionValue","expanded","generateHierarchyItems","loadOptions","headers","headerName","result","path","expandedPaths","rowExpandedPaths","columnExpandedPaths","hash","generateAggregationCells","cells","cellSet","x","y","rowIndex","columnIndex","rowIndexes","columnIndexes","fillHashExpandedPath","forEach","pathValue","map","join","prepareLoadOption","rows","columns","filters","values","getAggregator","summaryType","calculateCustomSummary","noop","seed","summaryProcess","totalValue","step","finalize","aggregators","count","aggregationStep","measures","aggregationCells","aggregatorIndex","cellField","cellValue","aggregator","isAggregatorSeedFunction","cellSetIndex","cell","isDefined","aggregationFinalize","row","areValuesEqual","filterValue","fieldValue","valueOfFilter","valueOf","valueOfField","Array","isArray","i","getGroupValue","createDimensionFilters","filterValues","groupName","groupIndex","filter","dataItem","filterType","createFilter","concat","expandedDimensions","expandValue","toComparable","loadCore","items","notifyProgress","columnsHash","rowsHash","d","Deferred","processData","t","startIndex","setTimeout","resolve","grandTotalRowIndex","grandTotalColumnIndex","filterDataSource","dataSource","fieldSelectors","store","processFilter","toArray","loadDataSource","reload","customizeStoreLoadOptionsHandler","storeLoadOptions","on","isLoaded","loadDeferred","load","when","done","fail","reject","always","off","fillSelectorsByFields","selectors","getFieldSelectors","area","slice","ctor","_progressChanged","onProgressChanged","_dataSource","DataSource","paginate","getFields","that","discoverObjectFields","key","apply","arguments","supportPaging","getDrillDownItems","params","drillDownItems","item","maxRowCount","customColumns","pathFilter","getFiltersByPath","rowPath","columnPath","j","include","storeDrillDownMixin"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/local_store.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.LocalStore = void 0;\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _utils = _interopRequireDefault(require(\"../../data/utils\"));\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _data_source = require(\"../../data/data_source/data_source\");\r\nvar _custom_store = _interopRequireDefault(require(\"../../data/custom_store\"));\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\r\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PATH_DELIMETER = \"/./\";\r\nvar LocalStore = _class.default.inherit(function() {\r\n    var DATE_INTERVAL_SELECTORS = {\r\n        year: function(date) {\r\n            return date && date.getFullYear()\r\n        },\r\n        quarter: function(date) {\r\n            return date && Math.floor(date.getMonth() / 3) + 1\r\n        },\r\n        month: function(date) {\r\n            return date && date.getMonth() + 1\r\n        },\r\n        day: function(date) {\r\n            return date && date.getDate()\r\n        },\r\n        dayOfWeek: function(date) {\r\n            return date && date.getDay()\r\n        }\r\n    };\r\n\r\n    function getDataSelector(dataField) {\r\n        return dataField.indexOf(\".\") !== -1 ? (0, _data.compileGetter)(dataField) : function(data) {\r\n            return data[dataField]\r\n        }\r\n    }\r\n\r\n    function getDateValue(dataSelector) {\r\n        return function(data) {\r\n            var value = dataSelector(data);\r\n            if (value && !(value instanceof Date)) {\r\n                value = _date_serialization.default.deserializeDate(value)\r\n            }\r\n            return value\r\n        }\r\n    }\r\n\r\n    function prepareFields(fields) {\r\n        (0, _iterator.each)(fields || [], function(_, field) {\r\n            var fieldSelector;\r\n            var intervalSelector;\r\n            var dataField = field.dataField;\r\n            var groupInterval;\r\n            var levels = field.levels;\r\n            var dataSelector;\r\n            if (!field.selector) {\r\n                if (!dataField) {\r\n                    dataSelector = function(data) {\r\n                        return data\r\n                    }\r\n                } else {\r\n                    dataSelector = getDataSelector(dataField)\r\n                }\r\n                if (levels) {\r\n                    prepareFields(levels)\r\n                }\r\n                if (\"date\" === field.dataType) {\r\n                    intervalSelector = DATE_INTERVAL_SELECTORS[field.groupInterval];\r\n                    var valueSelector = getDateValue(dataSelector);\r\n                    fieldSelector = function(data) {\r\n                        var value = valueSelector(data);\r\n                        return intervalSelector ? intervalSelector(value) : value\r\n                    }\r\n                } else {\r\n                    if (\"number\" === field.dataType) {\r\n                        groupInterval = (0, _type.isNumeric)(field.groupInterval) && field.groupInterval > 0 && field.groupInterval;\r\n                        fieldSelector = function(data) {\r\n                            var value = dataSelector(data);\r\n                            if ((0, _type.isString)(value)) {\r\n                                value = Number(value)\r\n                            }\r\n                            return groupInterval ? Math.floor(value / groupInterval) * groupInterval : value\r\n                        }\r\n                    } else {\r\n                        fieldSelector = dataSelector\r\n                    }\r\n                }(0, _uiPivot_grid.setDefaultFieldValueFormatting)(field);\r\n                (0, _uiPivot_grid.setFieldProperty)(field, \"selector\", fieldSelector)\r\n            }\r\n        })\r\n    }\r\n    var addHierarchyItem = function(value, hierarchyItems, pathHash, childrenHash) {\r\n        var hierarchyItem = childrenHash[pathHash];\r\n        if (!hierarchyItem) {\r\n            hierarchyItem = {\r\n                value: value,\r\n                index: childrenHash.length++\r\n            };\r\n            childrenHash[pathHash] = hierarchyItem;\r\n            hierarchyItems.push(hierarchyItem)\r\n        }\r\n        return hierarchyItem\r\n    };\r\n\r\n    function fillHierarchyItemIndexesCore(indexes, options, children, expandIndex, pathHash) {\r\n        var dimension = options.dimensions[expandIndex];\r\n        var expandedPathsHash = options.expandedPathsHash;\r\n        var dimensionValue;\r\n        var hierarchyItem;\r\n        if (dimension) {\r\n            dimensionValue = dimension.selector(options.data);\r\n            pathHash = void 0 !== pathHash ? pathHash + PATH_DELIMETER + dimensionValue : dimensionValue + \"\";\r\n            hierarchyItem = addHierarchyItem(dimensionValue, children, pathHash, options.childrenHash);\r\n            indexes.push(hierarchyItem.index);\r\n            if (expandedPathsHash && expandedPathsHash[pathHash] || dimension.expanded) {\r\n                if (!hierarchyItem.children) {\r\n                    hierarchyItem.children = []\r\n                }\r\n                fillHierarchyItemIndexesCore(indexes, options, hierarchyItem.children, expandIndex + 1, pathHash)\r\n            }\r\n        }\r\n    }\r\n\r\n    function generateHierarchyItems(data, loadOptions, headers, headerName) {\r\n        var result = [0];\r\n        var expandIndex = loadOptions.headerName === headerName ? loadOptions.path.length : 0;\r\n        var expandedPaths = \"rows\" === headerName ? loadOptions.rowExpandedPaths : loadOptions.columnExpandedPaths;\r\n        var options = {\r\n            data: data,\r\n            childrenHash: headers[headerName + \"Hash\"],\r\n            dimensions: loadOptions[headerName],\r\n            expandedPathsHash: loadOptions.headerName !== headerName && expandedPaths && expandedPaths.hash\r\n        };\r\n        fillHierarchyItemIndexesCore(result, options, headers[headerName], expandIndex);\r\n        return result\r\n    }\r\n\r\n    function generateAggregationCells(data, cells, headers, options) {\r\n        var cellSet = [];\r\n        var x;\r\n        var y;\r\n        var rowIndex;\r\n        var columnIndex;\r\n        var rowIndexes = generateHierarchyItems(data, options, headers, \"rows\");\r\n        var columnIndexes = generateHierarchyItems(data, options, headers, \"columns\");\r\n        for (y = 0; y < rowIndexes.length; y++) {\r\n            rowIndex = rowIndexes[y];\r\n            cells[rowIndex] = cells[rowIndex] || [];\r\n            for (x = 0; x < columnIndexes.length; x++) {\r\n                columnIndex = columnIndexes[x];\r\n                cellSet.push(cells[rowIndex][columnIndex] = cells[rowIndex][columnIndex] || [])\r\n            }\r\n        }\r\n        return cellSet\r\n    }\r\n\r\n    function fillHashExpandedPath(expandedPaths) {\r\n        if (expandedPaths) {\r\n            var hash = expandedPaths.hash = {};\r\n            expandedPaths.forEach(function(path) {\r\n                var pathValue = path.map(function(value) {\r\n                    return value + \"\"\r\n                }).join(PATH_DELIMETER);\r\n                hash[pathValue] = true\r\n            })\r\n        }\r\n    }\r\n\r\n    function prepareLoadOption(options) {\r\n        options.rows = options.rows || [];\r\n        options.columns = options.columns || [];\r\n        options.filters = options.filters || [];\r\n        fillHashExpandedPath(options.columnExpandedPaths);\r\n        fillHashExpandedPath(options.rowExpandedPaths);\r\n        prepareFields(options.columns);\r\n        prepareFields(options.rows);\r\n        prepareFields(options.values);\r\n        prepareFields(options.filters)\r\n    }\r\n\r\n    function getAggregator(field) {\r\n        if (\"custom\" === field.summaryType) {\r\n            field.calculateCustomSummary = field.calculateCustomSummary || _common.noop;\r\n            return {\r\n                seed: function() {\r\n                    var options = {\r\n                        summaryProcess: \"start\",\r\n                        totalValue: void 0\r\n                    };\r\n                    field.calculateCustomSummary(options);\r\n                    return options\r\n                },\r\n                step: function(options, value) {\r\n                    options.summaryProcess = \"calculate\";\r\n                    options.value = value;\r\n                    field.calculateCustomSummary(options);\r\n                    return options\r\n                },\r\n                finalize: function(options) {\r\n                    options.summaryProcess = \"finalize\";\r\n                    delete options.value;\r\n                    field.calculateCustomSummary(options);\r\n                    return options.totalValue\r\n                }\r\n            }\r\n        }\r\n        return _utils.default.aggregators[field.summaryType] || _utils.default.aggregators.count\r\n    }\r\n\r\n    function aggregationStep(measures, aggregationCells, data) {\r\n        for (var aggregatorIndex = 0; aggregatorIndex < measures.length; aggregatorIndex++) {\r\n            var cellField = measures[aggregatorIndex];\r\n            var cellValue = cellField.selector(data);\r\n            var aggregator = getAggregator(cellField);\r\n            var isAggregatorSeedFunction = \"function\" === typeof aggregator.seed;\r\n            for (var cellSetIndex = 0; cellSetIndex < aggregationCells.length; cellSetIndex++) {\r\n                var cell = aggregationCells[cellSetIndex];\r\n                if (cell.length <= aggregatorIndex) {\r\n                    cell[aggregatorIndex] = isAggregatorSeedFunction ? aggregator.seed() : aggregator.seed\r\n                }\r\n                if (void 0 === cell[aggregatorIndex]) {\r\n                    cell[aggregatorIndex] = cellValue\r\n                } else {\r\n                    if ((0, _type.isDefined)(cellValue)) {\r\n                        cell[aggregatorIndex] = aggregator.step(cell[aggregatorIndex], cellValue)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function aggregationFinalize(measures, cells) {\r\n        (0, _iterator.each)(measures, function(aggregatorIndex, cellField) {\r\n            var aggregator = getAggregator(cellField);\r\n            if (aggregator.finalize) {\r\n                (0, _iterator.each)(cells, function(_, row) {\r\n                    (0, _iterator.each)(row, function(_, cell) {\r\n                        if (cell && void 0 !== cell[aggregatorIndex]) {\r\n                            cell[aggregatorIndex] = aggregator.finalize(cell[aggregatorIndex])\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    function areValuesEqual(filterValue, fieldValue) {\r\n        var valueOfFilter = filterValue && filterValue.valueOf();\r\n        var valueOfField = fieldValue && fieldValue.valueOf();\r\n        if (Array.isArray(filterValue)) {\r\n            fieldValue = fieldValue || [];\r\n            for (var i = 0; i < filterValue.length; i++) {\r\n                valueOfFilter = filterValue[i] && filterValue[i].valueOf();\r\n                valueOfField = fieldValue[i] && fieldValue[i].valueOf();\r\n                if (valueOfFilter !== valueOfField) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        } else {\r\n            return valueOfFilter === valueOfField\r\n        }\r\n    }\r\n\r\n    function getGroupValue(levels, data) {\r\n        var value = [];\r\n        (0, _iterator.each)(levels, function(_, field) {\r\n            value.push(field.selector(data))\r\n        });\r\n        return value\r\n    }\r\n\r\n    function createDimensionFilters(dimension) {\r\n        var filters = [];\r\n        (0, _iterator.each)(dimension, function(_, field) {\r\n            var filterValues = field.filterValues || [];\r\n            var groupName = field.groupName;\r\n            if (groupName && (0, _type.isNumeric)(field.groupIndex)) {\r\n                return\r\n            }\r\n            var filter = function(dataItem) {\r\n                var value = field.levels ? getGroupValue(field.levels, dataItem) : field.selector(dataItem);\r\n                var result = false;\r\n                for (var i = 0; i < filterValues.length; i++) {\r\n                    if (areValuesEqual(filterValues[i], value)) {\r\n                        result = true;\r\n                        break\r\n                    }\r\n                }\r\n                return \"exclude\" === field.filterType ? !result : result\r\n            };\r\n            filterValues.length && filters.push(filter)\r\n        });\r\n        return filters\r\n    }\r\n\r\n    function createFilter(options) {\r\n        var filters = createDimensionFilters(options.rows).concat(createDimensionFilters(options.columns)).concat(createDimensionFilters(options.filters));\r\n        var expandedDimensions = options[options.headerName];\r\n        var path = options.path;\r\n        if (expandedDimensions) {\r\n            filters.push(function(dataItem) {\r\n                var expandValue;\r\n                for (var i = 0; i < path.length; i++) {\r\n                    expandValue = expandedDimensions[i].selector(dataItem);\r\n                    if ((0, _data.toComparable)(expandValue, true) !== (0, _data.toComparable)(path[i], true)) {\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            })\r\n        }\r\n        return function(dataItem) {\r\n            for (var i = 0; i < filters.length; i++) {\r\n                if (!filters[i](dataItem)) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n    }\r\n\r\n    function loadCore(items, options, notifyProgress) {\r\n        var headers = {\r\n            columns: [],\r\n            rows: [],\r\n            columnsHash: {\r\n                length: 1\r\n            },\r\n            rowsHash: {\r\n                length: 1\r\n            }\r\n        };\r\n        var values = [];\r\n        var aggregationCells;\r\n        var data;\r\n        var d = new _deferred.Deferred;\r\n        var i = 0;\r\n        var filter = createFilter(options);\r\n\r\n        function processData() {\r\n            var t = new Date;\r\n            var startIndex = i;\r\n            for (; i < items.length; i++) {\r\n                if (i > startIndex && i % 1e4 === 0) {\r\n                    if (new Date - t >= 300) {\r\n                        notifyProgress(i / items.length);\r\n                        setTimeout(processData, 0);\r\n                        return\r\n                    }\r\n                }\r\n                data = items[i];\r\n                if (filter(data)) {\r\n                    aggregationCells = generateAggregationCells(data, values, headers, options);\r\n                    aggregationStep(options.values, aggregationCells, data)\r\n                }\r\n            }\r\n            aggregationFinalize(options.values, values);\r\n            notifyProgress(1);\r\n            d.resolve({\r\n                rows: headers.rows,\r\n                columns: headers.columns,\r\n                values: values,\r\n                grandTotalRowIndex: 0,\r\n                grandTotalColumnIndex: 0\r\n            })\r\n        }\r\n        processData();\r\n        return d\r\n    }\r\n\r\n    function filterDataSource(dataSource, fieldSelectors) {\r\n        var filter = dataSource.filter();\r\n        if (dataSource.store() instanceof _custom_store.default && filter) {\r\n            filter = processFilter(filter, fieldSelectors);\r\n            return (0, _query.default)(dataSource.items()).filter(filter).toArray()\r\n        }\r\n        return dataSource.items()\r\n    }\r\n\r\n    function loadDataSource(dataSource, fieldSelectors, reload) {\r\n        var d = new _deferred.Deferred;\r\n        var customizeStoreLoadOptionsHandler = function(options) {\r\n            if (dataSource.store() instanceof _array_store.default) {\r\n                options.storeLoadOptions.filter = processFilter(options.storeLoadOptions.filter, fieldSelectors)\r\n            }\r\n        };\r\n        dataSource.on(\"customizeStoreLoadOptions\", customizeStoreLoadOptionsHandler);\r\n        if (!dataSource.isLoaded() || reload) {\r\n            var loadDeferred = reload ? dataSource.load() : dataSource.reload();\r\n            (0, _deferred.when)(loadDeferred).done(function() {\r\n                loadDataSource(dataSource, fieldSelectors).done(function() {\r\n                    d.resolve(filterDataSource(dataSource, fieldSelectors))\r\n                }).fail(d.reject)\r\n            }).fail(d.reject)\r\n        } else {\r\n            d.resolve(filterDataSource(dataSource, fieldSelectors))\r\n        }\r\n        return d.always(function() {\r\n            dataSource.off(\"customizeStoreLoadOptions\", customizeStoreLoadOptionsHandler)\r\n        })\r\n    }\r\n\r\n    function fillSelectorsByFields(selectors, fields) {\r\n        fields.forEach(function(field) {\r\n            if (field.dataField && \"date\" === field.dataType) {\r\n                var valueSelector = getDateValue(getDataSelector(field.dataField));\r\n                selectors[field.dataField] = function(data) {\r\n                    return valueSelector(data)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    function getFieldSelectors(options) {\r\n        var selectors = {};\r\n        if (Array.isArray(options)) {\r\n            fillSelectorsByFields(selectors, options)\r\n        } else {\r\n            if (options) {\r\n                [\"rows\", \"columns\", \"filters\"].forEach(function(area) {\r\n                    options[area] && fillSelectorsByFields(selectors, options[area])\r\n                })\r\n            }\r\n        }\r\n        return selectors\r\n    }\r\n\r\n    function processFilter(filter, fieldSelectors) {\r\n        if (!Array.isArray(filter)) {\r\n            return filter\r\n        }\r\n        filter = filter.slice(0);\r\n        if ((0, _type.isString)(filter[0]) && (filter[1] instanceof Date || filter[2] instanceof Date)) {\r\n            filter[0] = fieldSelectors[filter[0]]\r\n        }\r\n        for (var i = 0; i < filter.length; i++) {\r\n            filter[i] = processFilter(filter[i], fieldSelectors)\r\n        }\r\n        return filter\r\n    }\r\n    return {\r\n        ctor: function(options) {\r\n            this._progressChanged = options.onProgressChanged || _common.noop;\r\n            this._dataSource = new _data_source.DataSource(options);\r\n            this._dataSource.paginate(false)\r\n        },\r\n        getFields: function(fields) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new _deferred.Deferred;\r\n            loadDataSource(dataSource, getFieldSelectors(fields)).done(function(data) {\r\n                d.resolve((0, _uiPivot_grid.discoverObjectFields)(data, fields))\r\n            }).fail(d.reject);\r\n            return d\r\n        },\r\n        key: function() {\r\n            return this._dataSource.key()\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new _deferred.Deferred;\r\n            prepareLoadOption(options);\r\n            loadDataSource(dataSource, getFieldSelectors(options), options.reload).done(function(data) {\r\n                (0, _deferred.when)(loadCore(data, options, that._progressChanged)).done(d.resolve)\r\n            }).fail(d.reject);\r\n            return d\r\n        },\r\n        filter: function() {\r\n            var dataSource = this._dataSource;\r\n            return dataSource.filter.apply(dataSource, arguments)\r\n        },\r\n        supportPaging: function() {\r\n            return false\r\n        },\r\n        getDrillDownItems: function(loadOptions, params) {\r\n            loadOptions = loadOptions || {};\r\n            params = params || {};\r\n            prepareLoadOption(loadOptions);\r\n            var drillDownItems = [];\r\n            var items = this._dataSource.items();\r\n            var item;\r\n            var maxRowCount = params.maxRowCount;\r\n            var customColumns = params.customColumns;\r\n            var filter = createFilter(loadOptions);\r\n            var pathFilter = createFilter({\r\n                rows: (0, _uiPivot_grid.getFiltersByPath)(loadOptions.rows, params.rowPath),\r\n                columns: (0, _uiPivot_grid.getFiltersByPath)(loadOptions.columns, params.columnPath),\r\n                filters: []\r\n            });\r\n            for (var i = 0; i < items.length; i++) {\r\n                if (pathFilter(items[i]) && filter(items[i])) {\r\n                    if (customColumns) {\r\n                        item = {};\r\n                        for (var j = 0; j < customColumns.length; j++) {\r\n                            item[customColumns[j]] = items[i][customColumns[j]]\r\n                        }\r\n                    } else {\r\n                        item = items[i]\r\n                    }\r\n                    drillDownItems.push(item)\r\n                }\r\n                if (maxRowCount > 0 && drillDownItems.length === maxRowCount) {\r\n                    break\r\n                }\r\n            }\r\n            return drillDownItems\r\n        }\r\n    }\r\n}()).include(_uiPivot_grid.storeDrillDownMixin);\r\nexports.LocalStore = LocalStore;\r\n"]},"metadata":{},"sourceType":"script"}