{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Backend\\\\Itemdataentry\\\\popup\\\\editlink.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, NormalInput } from \"component/common\";\nimport { withTranslation } from \"react-i18next\";\nimport { updateCommon } from \"redux/actions/Backend\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Toast } from \"service/toast\";\nexport default class EditlinkpopupClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      linkcode: this.props.code,\n      linkdesc: this.props.name\n    };\n\n    this.handleinput = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      console.log(this.props.name);\n      let {\n        linkcode,\n        linkdesc\n      } = this.state;\n\n      if (name == \"linkcode\") {\n        linkcode = value;\n        this.setState({\n          linkcode\n        });\n      }\n\n      if (name == \"linkdesc\") {\n        linkdesc = value;\n        this.setState({\n          linkdesc\n        });\n      }\n    };\n\n    this.handlesubmit = async () => {\n      let {\n        linkcode,\n        linkdesc\n      } = this.state;\n\n      if (linkdesc == \" \") {\n        Toast({\n          type: \"error\",\n          message: \"Please check required field\"\n        });\n      } else {\n        let newlist = {\n          linkCode: linkcode,\n          itemCode: linkcode,\n          linkDesc: linkdesc,\n          linkFactor: 0,\n          linkType: \"\",\n          itmIsactive: false,\n          rptCodeStatus: false\n        };\n        await this.props.updateCommon(`ItemLinks/update?where=%7B%22linkCode%22%3A%22${linkcode}%22%7D\n      `, newlist).then(data => {});\n        this.props.handleModal();\n        this.props.listoflinklist();\n      }\n    };\n  }\n\n  render() {\n    let {\n      linkcode,\n      linkdesc\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Edit Link\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Link Code\"), /*#__PURE__*/React.createElement(NormalInput, {\n      onChange: this.handleinput,\n      value: linkcode,\n      name: \"linkcode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Link Description\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(NormalInput, {\n      onChange: this.handleinput,\n      value: linkdesc,\n      name: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mt-3 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      label: \"Cancel\",\n      onClick: () => this.props.handleModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      label: \"Submit\",\n      onClick: () => this.handlesubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateCommon\n  }, dispatch);\n};\n\nexport const Editlinkpopup = withTranslation()(connect(null, mapDispatchToProps)(EditlinkpopupClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Backend/Itemdataentry/popup/editlink.js"],"names":["React","Component","NormalButton","NormalInput","withTranslation","updateCommon","connect","bindActionCreators","Toast","EditlinkpopupClass","state","linkcode","props","code","linkdesc","name","handleinput","target","value","console","log","setState","handlesubmit","type","message","newlist","linkCode","itemCode","linkDesc","linkFactor","linkType","itmIsactive","rptCodeStatus","then","data","handleModal","listoflinklist","render","color","mapDispatchToProps","dispatch","Editlinkpopup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,kBAA1C;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,eAAe,MAAMC,kBAAN,SAAiCR,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACxDS,KADwD,GAChD;AACNC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,IADf;AAENC,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAFf,KADgD;;AAAA,SAKxDC,WALwD,GAK1C,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASH,QAAAA;AAAT;AAAV,KAAD,KAAiC;AAC7CI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWG,IAAvB;AAEA,UAAI;AAAEJ,QAAAA,QAAF;AAAYG,QAAAA;AAAZ,UAAyB,KAAKJ,KAAlC;;AACA,UAAIK,IAAI,IAAI,UAAZ,EAAwB;AACtBJ,QAAAA,QAAQ,GAAGO,KAAX;AACA,aAAKG,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACD;;AACD,UAAII,IAAI,IAAI,UAAZ,EAAwB;AACtBD,QAAAA,QAAQ,GAAGI,KAAX;AACA,aAAKG,QAAL,CAAc;AAAEP,UAAAA;AAAF,SAAd;AACD;AACF,KAjBuD;;AAAA,SAkBxDQ,YAlBwD,GAkBzC,YAAY;AACzB,UAAI;AAAEX,QAAAA,QAAF;AAAYG,QAAAA;AAAZ,UAAyB,KAAKJ,KAAlC;;AACA,UAAII,QAAQ,IAAI,GAAhB,EAAqB;AACnBN,QAAAA,KAAK,CAAC;AACJe,UAAAA,IAAI,EAAE,OADF;AAEJC,UAAAA,OAAO,EAAE;AAFL,SAAD,CAAL;AAID,OALD,MAKO;AACL,YAAIC,OAAO,GAAG;AACZC,UAAAA,QAAQ,EAAEf,QADE;AAEZgB,UAAAA,QAAQ,EAAEhB,QAFE;AAGZiB,UAAAA,QAAQ,EAAEd,QAHE;AAIZe,UAAAA,UAAU,EAAE,CAJA;AAKZC,UAAAA,QAAQ,EAAE,EALE;AAMZC,UAAAA,WAAW,EAAE,KAND;AAOZC,UAAAA,aAAa,EAAE;AAPH,SAAd;AASA,cAAM,KAAKpB,KAAL,CACHP,YADG,CAED,iDAAgDM,QAAS;AACpE,OAHY,EAIFc,OAJE,EAMHQ,IANG,CAMGC,IAAD,IAAU,CAAE,CANd,CAAN;AAQA,aAAKtB,KAAL,CAAWuB,WAAX;AACA,aAAKvB,KAAL,CAAWwB,cAAX;AACD;AACF,KA9CuD;AAAA;;AAgDxDC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAE1B,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,QAAyB,KAAKJ,KAAlC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE,KAAKM,WADjB;AAEE,MAAA,KAAK,EAAEL,QAFT;AAGE,MAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eASE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAM,MAAA,KAAK,EAAE;AAAE2B,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,eAGE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE,KAAKtB,WADjB;AAEE,MAAA,KAAK,EAAEF,QAFT;AAGE,MAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CATF,CAFF,eAqBE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE,IADV;AAEE,MAAA,KAAK,EAAE,QAFT;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWuB,WAAX,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAQE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE,IADV;AAEE,MAAA,KAAK,EAAE,QAFT;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKb,YAAL,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CArBF,CADF;AAwCD;;AA3FuD;;AA8F1D,MAAMiB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAOjC,kBAAkB,CACvB;AACEF,IAAAA;AADF,GADuB,EAIvBmC,QAJuB,CAAzB;AAMD,CAPD;;AAQA,OAAO,MAAMC,aAAa,GAAGrC,eAAe,GAC1CE,OAAO,CAAC,IAAD,EAAOiC,kBAAP,CAAP,CAAkC9B,kBAAlC,CAD0C,CAArC","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NormalButton, NormalInput } from \"component/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { updateCommon } from \"redux/actions/Backend\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nexport default class EditlinkpopupClass extends Component {\r\n  state = {\r\n    linkcode: this.props.code,\r\n    linkdesc: this.props.name,\r\n  };\r\n  handleinput = ({ target: { value, name } }) => {\r\n    console.log(this.props.name);\r\n\r\n    let { linkcode, linkdesc } = this.state;\r\n    if (name == \"linkcode\") {\r\n      linkcode = value;\r\n      this.setState({ linkcode });\r\n    }\r\n    if (name == \"linkdesc\") {\r\n      linkdesc = value;\r\n      this.setState({ linkdesc });\r\n    }\r\n  };\r\n  handlesubmit = async () => {\r\n    let { linkcode, linkdesc } = this.state;\r\n    if (linkdesc == \" \") {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Please check required field\",\r\n      });\r\n    } else {\r\n      let newlist = {\r\n        linkCode: linkcode,\r\n        itemCode: linkcode,\r\n        linkDesc: linkdesc,\r\n        linkFactor: 0,\r\n        linkType: \"\",\r\n        itmIsactive: false,\r\n        rptCodeStatus: false,\r\n      };\r\n      await this.props\r\n        .updateCommon(\r\n          `ItemLinks/update?where=%7B%22linkCode%22%3A%22${linkcode}%22%7D\r\n      `,\r\n          newlist\r\n        )\r\n        .then((data) => {});\r\n\r\n      this.props.handleModal();\r\n      this.props.listoflinklist();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { linkcode, linkdesc } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h6>Edit Link</h6>\r\n        <div className=\"d-flex mt-3\">\r\n          <div className=\"col-6 mt-3\">\r\n            <p>Link Code</p>\r\n            <NormalInput\r\n              onChange={this.handleinput}\r\n              value={linkcode}\r\n              name=\"linkcode\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6 mt-3\">\r\n            <span>Link Description</span>\r\n            <span style={{ color: \"red\" }}>*</span>\r\n            <NormalInput\r\n              onChange={this.handleinput}\r\n              value={linkdesc}\r\n              name=\"linkdesc\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex mt-3 justify-content-between\">\r\n          <div className=\"pl-2\">\r\n            <NormalButton\r\n              mainbg={true}\r\n              label={\"Cancel\"}\r\n              onClick={() => this.props.handleModal()}\r\n            />\r\n          </div>\r\n          <div className=\"pr-2\">\r\n            <NormalButton\r\n              mainbg={true}\r\n              label={\"Submit\"}\r\n              onClick={() => this.handlesubmit()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateCommon,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\nexport const Editlinkpopup = withTranslation()(\r\n  connect(null, mapDispatchToProps)(EditlinkpopupClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}