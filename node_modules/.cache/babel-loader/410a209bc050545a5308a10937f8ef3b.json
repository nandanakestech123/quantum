{"ast":null,"code":"/**\r\n * DevExtreme (viz/range_selector/sliders_controller.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.SlidersController = SlidersController;\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _common2 = require(\"./common\");\n\nvar _slider = _interopRequireDefault(require(\"./slider\"));\n\nvar _utils = require(\"../core/utils\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _math = require(\"../../core/utils/math\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar animationSettings = _common2.utils.animationSettings;\nvar emptySliderMarkerText = _common2.consts.emptySliderMarkerText;\n\nfunction buildRectPoints(left, top, right, bottom) {\n  return [left, top, right, top, right, bottom, left, bottom];\n}\n\nfunction isLess(a, b) {\n  return a < b;\n}\n\nfunction isGreater(a, b) {\n  return a > b;\n}\n\nfunction selectClosestValue(target, values) {\n  var start = 0;\n  var end = values ? values.length - 1 : 0;\n  var middle;\n  var val = target;\n\n  while (end - start > 1) {\n    middle = start + end >> 1;\n    val = values[middle];\n\n    if (val === target) {\n      return target;\n    } else {\n      if (target < val) {\n        end = middle;\n      } else {\n        start = middle;\n      }\n    }\n  }\n\n  if (values) {\n    val = values[target - values[start] <= values[end] - target ? start : end];\n  }\n\n  return val;\n}\n\nfunction dummyProcessSelectionChanged() {\n  this._lastSelectedRange = this.getSelectedRange();\n  delete this._processSelectionChanged;\n}\n\nfunction suppressSetSelectedRange(controller) {\n  controller.setSelectedRange = _common.noop;\n\n  if (controller._processSelectionChanged === dummyProcessSelectionChanged) {\n    controller._processSelectionChanged();\n  }\n}\n\nfunction restoreSetSelectedRange(controller) {\n  delete controller.setSelectedRange;\n}\n\nfunction SlidersController(params) {\n  var that = this;\n  var sliderParams = {\n    renderer: params.renderer,\n    root: params.root,\n    trackersGroup: params.trackersGroup,\n    translator: params.translator\n  };\n  that._params = params;\n  that._areaTracker = params.renderer.path(null, \"area\").attr({\n    \"class\": \"area-tracker\",\n    fill: \"#000000\",\n    opacity: 1e-4\n  }).append(params.trackersGroup);\n  that._selectedAreaTracker = params.renderer.path(null, \"area\").attr({\n    \"class\": \"selected-area-tracker\",\n    fill: \"#000000\",\n    opacity: 1e-4\n  }).append(params.trackersGroup);\n  that._shutter = params.renderer.path(null, \"area\").append(params.root);\n  that._sliders = [new _slider.default(sliderParams, 0), new _slider.default(sliderParams, 1)];\n  that._processSelectionChanged = dummyProcessSelectionChanged;\n}\n\nSlidersController.prototype = {\n  constructor: SlidersController,\n  dispose: function () {\n    this._sliders[0].dispose();\n\n    this._sliders[1].dispose();\n  },\n  getTrackerTargets: function () {\n    return {\n      area: this._areaTracker,\n      selectedArea: this._selectedAreaTracker,\n      sliders: this._sliders\n    };\n  },\n  _processSelectionChanged: function (e) {\n    var that = this;\n    var selectedRange = that.getSelectedRange();\n\n    if (!(0, _utils.rangesAreEqual)(selectedRange, that._lastSelectedRange)) {\n      that._params.updateSelectedRange(selectedRange, that._lastSelectedRange, e);\n\n      that._lastSelectedRange = selectedRange;\n    }\n  },\n  update: function (verticalRange, behavior, isCompactMode, sliderHandleOptions, sliderMarkerOptions, shutterOptions, rangeBounds, fullTicks, selectedRangeColor) {\n    var that = this;\n\n    var screenRange = that._params.translator.getScreenRange();\n\n    that._verticalRange = verticalRange;\n    that._minRange = rangeBounds.minRange;\n    that._maxRange = rangeBounds.maxRange;\n    that._animationEnabled = behavior.animationEnabled && that._params.renderer.animationEnabled();\n    that._allowSlidersSwap = behavior.allowSlidersSwap;\n\n    that._sliders[0].update(verticalRange, sliderHandleOptions, sliderMarkerOptions);\n\n    that._sliders[1].update(verticalRange, sliderHandleOptions, sliderMarkerOptions);\n\n    that._sliders[0]._position = that._sliders[1]._position = screenRange[0];\n    that._values = !that._params.translator.isValueProlonged && behavior.snapToTicks ? fullTicks : null;\n\n    that._areaTracker.attr({\n      points: buildRectPoints(screenRange[0], verticalRange[0], screenRange[1], verticalRange[1])\n    });\n\n    that._isCompactMode = isCompactMode;\n    that._shutterOffset = sliderHandleOptions.width / 2;\n\n    that._updateSelectedView(shutterOptions, selectedRangeColor);\n\n    that._isOnMoving = \"onmoving\" === (0, _utils.normalizeEnum)(behavior.callValueChanged);\n\n    that._updateSelectedRange();\n\n    that._applyTotalPosition(false);\n  },\n  _updateSelectedView: function (shutterOptions, selectedRangeColor) {\n    var settings = {\n      fill: null,\n      \"fill-opacity\": null,\n      stroke: null,\n      \"stroke-width\": null\n    };\n\n    if (this._isCompactMode) {\n      settings.stroke = selectedRangeColor;\n      settings[\"stroke-width\"] = 3;\n      settings.sharp = \"v\";\n    } else {\n      settings.fill = shutterOptions.color;\n      settings[\"fill-opacity\"] = shutterOptions.opacity;\n    }\n\n    this._shutter.attr(settings);\n  },\n  _updateSelectedRange: function () {\n    var that = this;\n    var sliders = that._sliders;\n    sliders[0].cancelAnimation();\n    sliders[1].cancelAnimation();\n\n    that._shutter.stopAnimation();\n\n    if (that._params.translator.getBusinessRange().isEmpty()) {\n      sliders[0]._setText(emptySliderMarkerText);\n\n      sliders[1]._setText(emptySliderMarkerText);\n\n      sliders[0]._value = sliders[1]._value = void 0;\n      sliders[0]._position = that._params.translator.getScreenRange()[0];\n      sliders[1]._position = that._params.translator.getScreenRange()[1];\n\n      that._applyTotalPosition(false);\n\n      suppressSetSelectedRange(that);\n    } else {\n      restoreSetSelectedRange(that);\n    }\n  },\n  _applyTotalPosition: function (isAnimated) {\n    var sliders = this._sliders;\n    isAnimated = this._animationEnabled && isAnimated;\n    sliders[0].applyPosition(isAnimated);\n    sliders[1].applyPosition(isAnimated);\n    var areOverlapped = sliders[0].getCloudBorder() > sliders[1].getCloudBorder();\n    sliders[0].setOverlapped(areOverlapped);\n    sliders[1].setOverlapped(areOverlapped);\n\n    this._applyAreaTrackersPosition();\n\n    this._applySelectedRangePosition(isAnimated);\n  },\n  _applyAreaTrackersPosition: function () {\n    var that = this;\n\n    var position1 = that._sliders[0].getPosition();\n\n    var position2 = that._sliders[1].getPosition();\n\n    that._selectedAreaTracker.attr({\n      points: buildRectPoints(position1, that._verticalRange[0], position2, that._verticalRange[1])\n    }).css({\n      cursor: Math.abs(that._params.translator.getScreenRange()[1] - that._params.translator.getScreenRange()[0] - position2 + position1) < .001 ? \"default\" : \"pointer\"\n    });\n  },\n  _applySelectedRangePosition: function (isAnimated) {\n    var that = this;\n    var verticalRange = that._verticalRange;\n\n    var pos1 = that._sliders[0].getPosition();\n\n    var pos2 = that._sliders[1].getPosition();\n\n    var screenRange;\n    var points;\n\n    if (that._isCompactMode) {\n      points = [pos1 + Math.ceil(that._shutterOffset), (verticalRange[0] + verticalRange[1]) / 2, pos2 - Math.floor(that._shutterOffset), (verticalRange[0] + verticalRange[1]) / 2];\n    } else {\n      screenRange = that._params.axis.getVisibleArea();\n      points = [buildRectPoints(screenRange[0], verticalRange[0], Math.max(pos1 - Math.floor(that._shutterOffset), screenRange[0]), verticalRange[1]), buildRectPoints(screenRange[1], verticalRange[0], Math.min(pos2 + Math.ceil(that._shutterOffset), screenRange[1]), verticalRange[1])];\n    }\n\n    if (isAnimated) {\n      that._shutter.animate({\n        points: points\n      }, animationSettings);\n    } else {\n      that._shutter.attr({\n        points: points\n      });\n    }\n  },\n  getSelectedRange: function () {\n    return {\n      startValue: this._sliders[0].getValue(),\n      endValue: this._sliders[1].getValue()\n    };\n  },\n  setSelectedRange: function (visualRange, e) {\n    visualRange = visualRange || {};\n    var that = this;\n    var translator = that._params.translator;\n    var businessRange = translator.getBusinessRange();\n    var compare = \"discrete\" === businessRange.axisType ? function (a, b) {\n      return a < b;\n    } : function (a, b) {\n      return a <= b;\n    };\n\n    var _adjustVisualRange = (0, _utils.adjustVisualRange)({\n      dataType: businessRange.dataType,\n      axisType: businessRange.axisType,\n      base: businessRange.base\n    }, {\n      startValue: translator.isValid(visualRange.startValue) ? translator.getCorrectValue(visualRange.startValue, 1) : void 0,\n      endValue: translator.isValid(visualRange.endValue) ? translator.getCorrectValue(visualRange.endValue, -1) : void 0,\n      length: visualRange.length\n    }, {\n      min: businessRange.minVisible,\n      max: businessRange.maxVisible,\n      categories: businessRange.categories\n    }),\n        startValue = _adjustVisualRange.startValue,\n        endValue = _adjustVisualRange.endValue;\n\n    startValue = (0, _type.isNumeric)(startValue) ? (0, _math.adjust)(startValue) : startValue;\n    endValue = (0, _type.isNumeric)(endValue) ? (0, _math.adjust)(endValue) : endValue;\n    var values = compare(translator.to(startValue, -1), translator.to(endValue, 1)) ? [startValue, endValue] : [endValue, startValue];\n\n    that._sliders[0].setDisplayValue(values[0]);\n\n    that._sliders[1].setDisplayValue(values[1]);\n\n    that._sliders[0]._position = translator.to(values[0], -1);\n    that._sliders[1]._position = translator.to(values[1], 1);\n\n    that._applyTotalPosition(true);\n\n    that._processSelectionChanged(e);\n  },\n  beginSelectedAreaMoving: function (initialPosition) {\n    var that = this;\n    var sliders = that._sliders;\n    var offset = (sliders[0].getPosition() + sliders[1].getPosition()) / 2 - initialPosition;\n    var currentPosition = initialPosition;\n\n    move.complete = function (e) {\n      that._dockSelectedArea(e);\n    };\n\n    return move;\n\n    function move(position, e) {\n      if (position !== currentPosition && position > currentPosition === position > (sliders[0].getPosition() + sliders[1].getPosition()) / 2 - offset) {\n        that._moveSelectedArea(position + offset, false, e);\n      }\n\n      currentPosition = position;\n    }\n  },\n  _dockSelectedArea: function (e) {\n    var translator = this._params.translator;\n    var sliders = this._sliders;\n    sliders[0]._position = translator.to(sliders[0].getValue(), -1);\n    sliders[1]._position = translator.to(sliders[1].getValue(), 1);\n\n    this._applyTotalPosition(true);\n\n    this._processSelectionChanged(e);\n  },\n  moveSelectedArea: function (screenPosition, e) {\n    this._moveSelectedArea(screenPosition, true, e);\n\n    this._dockSelectedArea(e);\n  },\n  _moveSelectedArea: function (screenPosition, isAnimated, e) {\n    var that = this;\n    var translator = that._params.translator;\n    var sliders = that._sliders;\n    var interval = sliders[1].getPosition() - sliders[0].getPosition();\n    var startPosition = screenPosition - interval / 2;\n    var endPosition = screenPosition + interval / 2;\n\n    if (startPosition < translator.getScreenRange()[0]) {\n      startPosition = translator.getScreenRange()[0];\n      endPosition = startPosition + interval;\n    }\n\n    if (endPosition > translator.getScreenRange()[1]) {\n      endPosition = translator.getScreenRange()[1];\n      startPosition = endPosition - interval;\n    }\n\n    var startValue = selectClosestValue(translator.from(startPosition, -1), that._values);\n    sliders[0].setDisplayValue(startValue);\n    sliders[1].setDisplayValue(selectClosestValue(translator.from(translator.to(startValue, -1) + interval, 1), that._values));\n    sliders[0]._position = startPosition;\n    sliders[1]._position = endPosition;\n\n    that._applyTotalPosition(isAnimated);\n\n    if (that._isOnMoving) {\n      that._processSelectionChanged(e);\n    }\n  },\n  placeSliderAndBeginMoving: function (firstPosition, secondPosition, e) {\n    var that = this;\n    var translator = that._params.translator;\n    var sliders = that._sliders;\n    var index = firstPosition < secondPosition ? 0 : 1;\n    var dir = index > 0 ? 1 : -1;\n    var compare = index > 0 ? isGreater : isLess;\n    var antiCompare = index > 0 ? isLess : isGreater;\n    var thresholdPosition;\n    var positions = [];\n    var values = [];\n    values[index] = translator.from(firstPosition, dir);\n    values[1 - index] = translator.from(secondPosition, -dir);\n    positions[1 - index] = secondPosition;\n\n    if (translator.isValueProlonged) {\n      if (compare(firstPosition, translator.to(values[index], dir))) {\n        values[index] = translator.from(firstPosition, -dir);\n      }\n\n      if (compare(secondPosition, translator.to(values[index], -dir))) {\n        values[1 - index] = values[index];\n      }\n    }\n\n    if (that._minRange) {\n      thresholdPosition = translator.to(translator.add(selectClosestValue(values[index], that._values), that._minRange, -dir), -dir);\n\n      if (compare(secondPosition, thresholdPosition)) {\n        values[1 - index] = translator.add(values[index], that._minRange, -dir);\n      }\n\n      thresholdPosition = translator.to(translator.add(translator.getRange()[1 - index], that._minRange, dir), -dir);\n\n      if (antiCompare(firstPosition, thresholdPosition)) {\n        values[1 - index] = translator.getRange()[1 - index];\n        values[index] = translator.add(values[1 - index], that._minRange, dir);\n        positions[1 - index] = firstPosition;\n      }\n    }\n\n    values[0] = selectClosestValue(values[0], that._values);\n    values[1] = selectClosestValue(values[1], that._values);\n    positions[index] = translator.to(values[index], dir);\n    sliders[0].setDisplayValue(values[0]);\n    sliders[1].setDisplayValue(values[1]);\n    sliders[0]._position = positions[0];\n    sliders[1]._position = positions[1];\n\n    that._applyTotalPosition(true);\n\n    if (that._isOnMoving) {\n      that._processSelectionChanged(e);\n    }\n\n    var handler = that.beginSliderMoving(1 - index, secondPosition);\n\n    sliders[1 - index]._sliderGroup.stopAnimation();\n\n    that._shutter.stopAnimation();\n\n    handler(secondPosition);\n    return handler;\n  },\n  beginSliderMoving: function (initialIndex, initialPosition) {\n    var that = this;\n    var translator = that._params.translator;\n    var sliders = that._sliders;\n    var minPosition = translator.getScreenRange()[0];\n    var maxPosition = translator.getScreenRange()[1];\n    var index = initialIndex;\n    var staticPosition = sliders[1 - index].getPosition();\n    var currentPosition = initialPosition;\n    var dir = index > 0 ? 1 : -1;\n    var compareMin = index > 0 ? isLess : isGreater;\n    var compareMax = index > 0 ? isGreater : isLess;\n    var moveOffset = sliders[index].getPosition() - initialPosition;\n    var swapOffset = compareMin(sliders[index].getPosition(), initialPosition) ? -moveOffset : moveOffset;\n\n    move.complete = function (e) {\n      sliders[index]._setValid(true);\n\n      that._dockSelectedArea(e);\n    };\n\n    return move;\n\n    function move(position, e) {\n      var isValid;\n      var temp;\n      var pos;\n      var slider;\n      var value;\n\n      if (position !== currentPosition) {\n        if (compareMin(position + swapOffset, staticPosition)) {\n          isValid = that._allowSlidersSwap;\n\n          if (isValid && !translator.isValueProlonged && that._minRange) {\n            isValid = translator.isValid(translator.add(sliders[1 - index].getValue(), that._minRange, -dir));\n          }\n\n          if (isValid) {\n            that._changeMovingSlider(index);\n\n            index = 1 - index;\n            dir = -dir;\n            temp = compareMin;\n            compareMin = compareMax;\n            compareMax = temp;\n            moveOffset = -dir * Math.abs(moveOffset);\n            swapOffset = -moveOffset;\n          }\n        }\n\n        if (compareMax(position + moveOffset, staticPosition)) {\n          isValid = true;\n          slider = sliders[index];\n          value = sliders[1 - index].getValue();\n          pos = Math.max(Math.min(position + moveOffset, maxPosition), minPosition);\n\n          if (isValid && translator.isValueProlonged) {\n            isValid = !compareMin(pos, translator.to(value, dir));\n          }\n\n          var invalidStateValue;\n\n          if (isValid && that._minRange) {\n            isValid = !compareMin(pos, translator.to(translator.add(value, that._minRange, dir), dir));\n\n            if (!isValid) {\n              invalidStateValue = translator.add(value, that._minRange, dir);\n            }\n          }\n\n          if (isValid && that._maxRange) {\n            isValid = !compareMax(pos, translator.to(translator.add(value, that._maxRange, dir), dir));\n\n            if (!isValid) {\n              invalidStateValue = translator.add(value, that._maxRange, dir);\n            }\n          }\n\n          slider._setValid(isValid);\n\n          slider.setDisplayValue(isValid ? selectClosestValue(translator.from(pos, dir), that._values) : (0, _type.isDefined)(invalidStateValue) ? invalidStateValue : slider.getValue());\n          slider._position = pos;\n\n          that._applyTotalPosition(false);\n\n          slider.toForeground();\n\n          if (that._isOnMoving) {\n            that._processSelectionChanged(e);\n          }\n        }\n      }\n\n      currentPosition = position;\n    }\n  },\n  _changeMovingSlider: function (index) {\n    var that = this;\n    var translator = that._params.translator;\n    var sliders = that._sliders;\n    var position = sliders[1 - index].getPosition();\n    var dir = index > 0 ? 1 : -1;\n    var newValue;\n    sliders[index].setDisplayValue(selectClosestValue(translator.from(position, dir), that._values));\n    newValue = translator.from(position, -dir);\n\n    if (translator.isValueProlonged) {\n      newValue = translator.from(position, dir);\n    } else {\n      if (that._minRange) {\n        newValue = translator.add(newValue, that._minRange, -dir);\n      }\n    }\n\n    sliders[1 - index].setDisplayValue(selectClosestValue(newValue, that._values));\n\n    sliders[index]._setValid(true);\n\n    sliders[index]._marker._update();\n\n    sliders[0]._position = sliders[1]._position = position;\n  },\n  foregroundSlider: function (index) {\n    this._sliders[index].toForeground();\n  }\n};","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/range_selector/sliders_controller.js"],"names":["exports","SlidersController","_common","require","_common2","_slider","_interopRequireDefault","_utils","_type","_math","obj","__esModule","animationSettings","utils","emptySliderMarkerText","consts","buildRectPoints","left","top","right","bottom","isLess","a","b","isGreater","selectClosestValue","target","values","start","end","length","middle","val","dummyProcessSelectionChanged","_lastSelectedRange","getSelectedRange","_processSelectionChanged","suppressSetSelectedRange","controller","setSelectedRange","noop","restoreSetSelectedRange","params","that","sliderParams","renderer","root","trackersGroup","translator","_params","_areaTracker","path","attr","fill","opacity","append","_selectedAreaTracker","_shutter","_sliders","default","prototype","constructor","dispose","getTrackerTargets","area","selectedArea","sliders","e","selectedRange","rangesAreEqual","updateSelectedRange","update","verticalRange","behavior","isCompactMode","sliderHandleOptions","sliderMarkerOptions","shutterOptions","rangeBounds","fullTicks","selectedRangeColor","screenRange","getScreenRange","_verticalRange","_minRange","minRange","_maxRange","maxRange","_animationEnabled","animationEnabled","_allowSlidersSwap","allowSlidersSwap","_position","_values","isValueProlonged","snapToTicks","points","_isCompactMode","_shutterOffset","width","_updateSelectedView","_isOnMoving","normalizeEnum","callValueChanged","_updateSelectedRange","_applyTotalPosition","settings","stroke","sharp","color","cancelAnimation","stopAnimation","getBusinessRange","isEmpty","_setText","_value","isAnimated","applyPosition","areOverlapped","getCloudBorder","setOverlapped","_applyAreaTrackersPosition","_applySelectedRangePosition","position1","getPosition","position2","css","cursor","Math","abs","pos1","pos2","ceil","floor","axis","getVisibleArea","max","min","animate","startValue","getValue","endValue","visualRange","businessRange","compare","axisType","_adjustVisualRange","adjustVisualRange","dataType","base","isValid","getCorrectValue","minVisible","maxVisible","categories","isNumeric","adjust","to","setDisplayValue","beginSelectedAreaMoving","initialPosition","offset","currentPosition","move","complete","_dockSelectedArea","position","_moveSelectedArea","moveSelectedArea","screenPosition","interval","startPosition","endPosition","from","placeSliderAndBeginMoving","firstPosition","secondPosition","index","dir","antiCompare","thresholdPosition","positions","add","getRange","handler","beginSliderMoving","_sliderGroup","initialIndex","minPosition","maxPosition","staticPosition","compareMin","compareMax","moveOffset","swapOffset","_setValid","temp","pos","slider","value","_changeMovingSlider","invalidStateValue","isDefined","toForeground","newValue","_marker","_update","foregroundSlider"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/range_selector/sliders_controller.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.SlidersController = SlidersController;\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _common2 = require(\"./common\");\r\nvar _slider = _interopRequireDefault(require(\"./slider\"));\r\nvar _utils = require(\"../core/utils\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _math = require(\"../../core/utils/math\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar animationSettings = _common2.utils.animationSettings;\r\nvar emptySliderMarkerText = _common2.consts.emptySliderMarkerText;\r\n\r\nfunction buildRectPoints(left, top, right, bottom) {\r\n    return [left, top, right, top, right, bottom, left, bottom]\r\n}\r\n\r\nfunction isLess(a, b) {\r\n    return a < b\r\n}\r\n\r\nfunction isGreater(a, b) {\r\n    return a > b\r\n}\r\n\r\nfunction selectClosestValue(target, values) {\r\n    var start = 0;\r\n    var end = values ? values.length - 1 : 0;\r\n    var middle;\r\n    var val = target;\r\n    while (end - start > 1) {\r\n        middle = start + end >> 1;\r\n        val = values[middle];\r\n        if (val === target) {\r\n            return target\r\n        } else {\r\n            if (target < val) {\r\n                end = middle\r\n            } else {\r\n                start = middle\r\n            }\r\n        }\r\n    }\r\n    if (values) {\r\n        val = values[target - values[start] <= values[end] - target ? start : end]\r\n    }\r\n    return val\r\n}\r\n\r\nfunction dummyProcessSelectionChanged() {\r\n    this._lastSelectedRange = this.getSelectedRange();\r\n    delete this._processSelectionChanged\r\n}\r\n\r\nfunction suppressSetSelectedRange(controller) {\r\n    controller.setSelectedRange = _common.noop;\r\n    if (controller._processSelectionChanged === dummyProcessSelectionChanged) {\r\n        controller._processSelectionChanged()\r\n    }\r\n}\r\n\r\nfunction restoreSetSelectedRange(controller) {\r\n    delete controller.setSelectedRange\r\n}\r\n\r\nfunction SlidersController(params) {\r\n    var that = this;\r\n    var sliderParams = {\r\n        renderer: params.renderer,\r\n        root: params.root,\r\n        trackersGroup: params.trackersGroup,\r\n        translator: params.translator\r\n    };\r\n    that._params = params;\r\n    that._areaTracker = params.renderer.path(null, \"area\").attr({\r\n        \"class\": \"area-tracker\",\r\n        fill: \"#000000\",\r\n        opacity: 1e-4\r\n    }).append(params.trackersGroup);\r\n    that._selectedAreaTracker = params.renderer.path(null, \"area\").attr({\r\n        \"class\": \"selected-area-tracker\",\r\n        fill: \"#000000\",\r\n        opacity: 1e-4\r\n    }).append(params.trackersGroup);\r\n    that._shutter = params.renderer.path(null, \"area\").append(params.root);\r\n    that._sliders = [new _slider.default(sliderParams, 0), new _slider.default(sliderParams, 1)];\r\n    that._processSelectionChanged = dummyProcessSelectionChanged\r\n}\r\nSlidersController.prototype = {\r\n    constructor: SlidersController,\r\n    dispose: function() {\r\n        this._sliders[0].dispose();\r\n        this._sliders[1].dispose()\r\n    },\r\n    getTrackerTargets: function() {\r\n        return {\r\n            area: this._areaTracker,\r\n            selectedArea: this._selectedAreaTracker,\r\n            sliders: this._sliders\r\n        }\r\n    },\r\n    _processSelectionChanged: function(e) {\r\n        var that = this;\r\n        var selectedRange = that.getSelectedRange();\r\n        if (!(0, _utils.rangesAreEqual)(selectedRange, that._lastSelectedRange)) {\r\n            that._params.updateSelectedRange(selectedRange, that._lastSelectedRange, e);\r\n            that._lastSelectedRange = selectedRange\r\n        }\r\n    },\r\n    update: function(verticalRange, behavior, isCompactMode, sliderHandleOptions, sliderMarkerOptions, shutterOptions, rangeBounds, fullTicks, selectedRangeColor) {\r\n        var that = this;\r\n        var screenRange = that._params.translator.getScreenRange();\r\n        that._verticalRange = verticalRange;\r\n        that._minRange = rangeBounds.minRange;\r\n        that._maxRange = rangeBounds.maxRange;\r\n        that._animationEnabled = behavior.animationEnabled && that._params.renderer.animationEnabled();\r\n        that._allowSlidersSwap = behavior.allowSlidersSwap;\r\n        that._sliders[0].update(verticalRange, sliderHandleOptions, sliderMarkerOptions);\r\n        that._sliders[1].update(verticalRange, sliderHandleOptions, sliderMarkerOptions);\r\n        that._sliders[0]._position = that._sliders[1]._position = screenRange[0];\r\n        that._values = !that._params.translator.isValueProlonged && behavior.snapToTicks ? fullTicks : null;\r\n        that._areaTracker.attr({\r\n            points: buildRectPoints(screenRange[0], verticalRange[0], screenRange[1], verticalRange[1])\r\n        });\r\n        that._isCompactMode = isCompactMode;\r\n        that._shutterOffset = sliderHandleOptions.width / 2;\r\n        that._updateSelectedView(shutterOptions, selectedRangeColor);\r\n        that._isOnMoving = \"onmoving\" === (0, _utils.normalizeEnum)(behavior.callValueChanged);\r\n        that._updateSelectedRange();\r\n        that._applyTotalPosition(false)\r\n    },\r\n    _updateSelectedView: function(shutterOptions, selectedRangeColor) {\r\n        var settings = {\r\n            fill: null,\r\n            \"fill-opacity\": null,\r\n            stroke: null,\r\n            \"stroke-width\": null\r\n        };\r\n        if (this._isCompactMode) {\r\n            settings.stroke = selectedRangeColor;\r\n            settings[\"stroke-width\"] = 3;\r\n            settings.sharp = \"v\"\r\n        } else {\r\n            settings.fill = shutterOptions.color;\r\n            settings[\"fill-opacity\"] = shutterOptions.opacity\r\n        }\r\n        this._shutter.attr(settings)\r\n    },\r\n    _updateSelectedRange: function() {\r\n        var that = this;\r\n        var sliders = that._sliders;\r\n        sliders[0].cancelAnimation();\r\n        sliders[1].cancelAnimation();\r\n        that._shutter.stopAnimation();\r\n        if (that._params.translator.getBusinessRange().isEmpty()) {\r\n            sliders[0]._setText(emptySliderMarkerText);\r\n            sliders[1]._setText(emptySliderMarkerText);\r\n            sliders[0]._value = sliders[1]._value = void 0;\r\n            sliders[0]._position = that._params.translator.getScreenRange()[0];\r\n            sliders[1]._position = that._params.translator.getScreenRange()[1];\r\n            that._applyTotalPosition(false);\r\n            suppressSetSelectedRange(that)\r\n        } else {\r\n            restoreSetSelectedRange(that)\r\n        }\r\n    },\r\n    _applyTotalPosition: function(isAnimated) {\r\n        var sliders = this._sliders;\r\n        isAnimated = this._animationEnabled && isAnimated;\r\n        sliders[0].applyPosition(isAnimated);\r\n        sliders[1].applyPosition(isAnimated);\r\n        var areOverlapped = sliders[0].getCloudBorder() > sliders[1].getCloudBorder();\r\n        sliders[0].setOverlapped(areOverlapped);\r\n        sliders[1].setOverlapped(areOverlapped);\r\n        this._applyAreaTrackersPosition();\r\n        this._applySelectedRangePosition(isAnimated)\r\n    },\r\n    _applyAreaTrackersPosition: function() {\r\n        var that = this;\r\n        var position1 = that._sliders[0].getPosition();\r\n        var position2 = that._sliders[1].getPosition();\r\n        that._selectedAreaTracker.attr({\r\n            points: buildRectPoints(position1, that._verticalRange[0], position2, that._verticalRange[1])\r\n        }).css({\r\n            cursor: Math.abs(that._params.translator.getScreenRange()[1] - that._params.translator.getScreenRange()[0] - position2 + position1) < .001 ? \"default\" : \"pointer\"\r\n        })\r\n    },\r\n    _applySelectedRangePosition: function(isAnimated) {\r\n        var that = this;\r\n        var verticalRange = that._verticalRange;\r\n        var pos1 = that._sliders[0].getPosition();\r\n        var pos2 = that._sliders[1].getPosition();\r\n        var screenRange;\r\n        var points;\r\n        if (that._isCompactMode) {\r\n            points = [pos1 + Math.ceil(that._shutterOffset), (verticalRange[0] + verticalRange[1]) / 2, pos2 - Math.floor(that._shutterOffset), (verticalRange[0] + verticalRange[1]) / 2]\r\n        } else {\r\n            screenRange = that._params.axis.getVisibleArea();\r\n            points = [buildRectPoints(screenRange[0], verticalRange[0], Math.max(pos1 - Math.floor(that._shutterOffset), screenRange[0]), verticalRange[1]), buildRectPoints(screenRange[1], verticalRange[0], Math.min(pos2 + Math.ceil(that._shutterOffset), screenRange[1]), verticalRange[1])]\r\n        }\r\n        if (isAnimated) {\r\n            that._shutter.animate({\r\n                points: points\r\n            }, animationSettings)\r\n        } else {\r\n            that._shutter.attr({\r\n                points: points\r\n            })\r\n        }\r\n    },\r\n    getSelectedRange: function() {\r\n        return {\r\n            startValue: this._sliders[0].getValue(),\r\n            endValue: this._sliders[1].getValue()\r\n        }\r\n    },\r\n    setSelectedRange: function(visualRange, e) {\r\n        visualRange = visualRange || {};\r\n        var that = this;\r\n        var translator = that._params.translator;\r\n        var businessRange = translator.getBusinessRange();\r\n        var compare = \"discrete\" === businessRange.axisType ? function(a, b) {\r\n            return a < b\r\n        } : function(a, b) {\r\n            return a <= b\r\n        };\r\n        var _adjustVisualRange = (0, _utils.adjustVisualRange)({\r\n                dataType: businessRange.dataType,\r\n                axisType: businessRange.axisType,\r\n                base: businessRange.base\r\n            }, {\r\n                startValue: translator.isValid(visualRange.startValue) ? translator.getCorrectValue(visualRange.startValue, 1) : void 0,\r\n                endValue: translator.isValid(visualRange.endValue) ? translator.getCorrectValue(visualRange.endValue, -1) : void 0,\r\n                length: visualRange.length\r\n            }, {\r\n                min: businessRange.minVisible,\r\n                max: businessRange.maxVisible,\r\n                categories: businessRange.categories\r\n            }),\r\n            startValue = _adjustVisualRange.startValue,\r\n            endValue = _adjustVisualRange.endValue;\r\n        startValue = (0, _type.isNumeric)(startValue) ? (0, _math.adjust)(startValue) : startValue;\r\n        endValue = (0, _type.isNumeric)(endValue) ? (0, _math.adjust)(endValue) : endValue;\r\n        var values = compare(translator.to(startValue, -1), translator.to(endValue, 1)) ? [startValue, endValue] : [endValue, startValue];\r\n        that._sliders[0].setDisplayValue(values[0]);\r\n        that._sliders[1].setDisplayValue(values[1]);\r\n        that._sliders[0]._position = translator.to(values[0], -1);\r\n        that._sliders[1]._position = translator.to(values[1], 1);\r\n        that._applyTotalPosition(true);\r\n        that._processSelectionChanged(e)\r\n    },\r\n    beginSelectedAreaMoving: function(initialPosition) {\r\n        var that = this;\r\n        var sliders = that._sliders;\r\n        var offset = (sliders[0].getPosition() + sliders[1].getPosition()) / 2 - initialPosition;\r\n        var currentPosition = initialPosition;\r\n        move.complete = function(e) {\r\n            that._dockSelectedArea(e)\r\n        };\r\n        return move;\r\n\r\n        function move(position, e) {\r\n            if (position !== currentPosition && position > currentPosition === position > (sliders[0].getPosition() + sliders[1].getPosition()) / 2 - offset) {\r\n                that._moveSelectedArea(position + offset, false, e)\r\n            }\r\n            currentPosition = position\r\n        }\r\n    },\r\n    _dockSelectedArea: function(e) {\r\n        var translator = this._params.translator;\r\n        var sliders = this._sliders;\r\n        sliders[0]._position = translator.to(sliders[0].getValue(), -1);\r\n        sliders[1]._position = translator.to(sliders[1].getValue(), 1);\r\n        this._applyTotalPosition(true);\r\n        this._processSelectionChanged(e)\r\n    },\r\n    moveSelectedArea: function(screenPosition, e) {\r\n        this._moveSelectedArea(screenPosition, true, e);\r\n        this._dockSelectedArea(e)\r\n    },\r\n    _moveSelectedArea: function(screenPosition, isAnimated, e) {\r\n        var that = this;\r\n        var translator = that._params.translator;\r\n        var sliders = that._sliders;\r\n        var interval = sliders[1].getPosition() - sliders[0].getPosition();\r\n        var startPosition = screenPosition - interval / 2;\r\n        var endPosition = screenPosition + interval / 2;\r\n        if (startPosition < translator.getScreenRange()[0]) {\r\n            startPosition = translator.getScreenRange()[0];\r\n            endPosition = startPosition + interval\r\n        }\r\n        if (endPosition > translator.getScreenRange()[1]) {\r\n            endPosition = translator.getScreenRange()[1];\r\n            startPosition = endPosition - interval\r\n        }\r\n        var startValue = selectClosestValue(translator.from(startPosition, -1), that._values);\r\n        sliders[0].setDisplayValue(startValue);\r\n        sliders[1].setDisplayValue(selectClosestValue(translator.from(translator.to(startValue, -1) + interval, 1), that._values));\r\n        sliders[0]._position = startPosition;\r\n        sliders[1]._position = endPosition;\r\n        that._applyTotalPosition(isAnimated);\r\n        if (that._isOnMoving) {\r\n            that._processSelectionChanged(e)\r\n        }\r\n    },\r\n    placeSliderAndBeginMoving: function(firstPosition, secondPosition, e) {\r\n        var that = this;\r\n        var translator = that._params.translator;\r\n        var sliders = that._sliders;\r\n        var index = firstPosition < secondPosition ? 0 : 1;\r\n        var dir = index > 0 ? 1 : -1;\r\n        var compare = index > 0 ? isGreater : isLess;\r\n        var antiCompare = index > 0 ? isLess : isGreater;\r\n        var thresholdPosition;\r\n        var positions = [];\r\n        var values = [];\r\n        values[index] = translator.from(firstPosition, dir);\r\n        values[1 - index] = translator.from(secondPosition, -dir);\r\n        positions[1 - index] = secondPosition;\r\n        if (translator.isValueProlonged) {\r\n            if (compare(firstPosition, translator.to(values[index], dir))) {\r\n                values[index] = translator.from(firstPosition, -dir)\r\n            }\r\n            if (compare(secondPosition, translator.to(values[index], -dir))) {\r\n                values[1 - index] = values[index]\r\n            }\r\n        }\r\n        if (that._minRange) {\r\n            thresholdPosition = translator.to(translator.add(selectClosestValue(values[index], that._values), that._minRange, -dir), -dir);\r\n            if (compare(secondPosition, thresholdPosition)) {\r\n                values[1 - index] = translator.add(values[index], that._minRange, -dir)\r\n            }\r\n            thresholdPosition = translator.to(translator.add(translator.getRange()[1 - index], that._minRange, dir), -dir);\r\n            if (antiCompare(firstPosition, thresholdPosition)) {\r\n                values[1 - index] = translator.getRange()[1 - index];\r\n                values[index] = translator.add(values[1 - index], that._minRange, dir);\r\n                positions[1 - index] = firstPosition\r\n            }\r\n        }\r\n        values[0] = selectClosestValue(values[0], that._values);\r\n        values[1] = selectClosestValue(values[1], that._values);\r\n        positions[index] = translator.to(values[index], dir);\r\n        sliders[0].setDisplayValue(values[0]);\r\n        sliders[1].setDisplayValue(values[1]);\r\n        sliders[0]._position = positions[0];\r\n        sliders[1]._position = positions[1];\r\n        that._applyTotalPosition(true);\r\n        if (that._isOnMoving) {\r\n            that._processSelectionChanged(e)\r\n        }\r\n        var handler = that.beginSliderMoving(1 - index, secondPosition);\r\n        sliders[1 - index]._sliderGroup.stopAnimation();\r\n        that._shutter.stopAnimation();\r\n        handler(secondPosition);\r\n        return handler\r\n    },\r\n    beginSliderMoving: function(initialIndex, initialPosition) {\r\n        var that = this;\r\n        var translator = that._params.translator;\r\n        var sliders = that._sliders;\r\n        var minPosition = translator.getScreenRange()[0];\r\n        var maxPosition = translator.getScreenRange()[1];\r\n        var index = initialIndex;\r\n        var staticPosition = sliders[1 - index].getPosition();\r\n        var currentPosition = initialPosition;\r\n        var dir = index > 0 ? 1 : -1;\r\n        var compareMin = index > 0 ? isLess : isGreater;\r\n        var compareMax = index > 0 ? isGreater : isLess;\r\n        var moveOffset = sliders[index].getPosition() - initialPosition;\r\n        var swapOffset = compareMin(sliders[index].getPosition(), initialPosition) ? -moveOffset : moveOffset;\r\n        move.complete = function(e) {\r\n            sliders[index]._setValid(true);\r\n            that._dockSelectedArea(e)\r\n        };\r\n        return move;\r\n\r\n        function move(position, e) {\r\n            var isValid;\r\n            var temp;\r\n            var pos;\r\n            var slider;\r\n            var value;\r\n            if (position !== currentPosition) {\r\n                if (compareMin(position + swapOffset, staticPosition)) {\r\n                    isValid = that._allowSlidersSwap;\r\n                    if (isValid && !translator.isValueProlonged && that._minRange) {\r\n                        isValid = translator.isValid(translator.add(sliders[1 - index].getValue(), that._minRange, -dir))\r\n                    }\r\n                    if (isValid) {\r\n                        that._changeMovingSlider(index);\r\n                        index = 1 - index;\r\n                        dir = -dir;\r\n                        temp = compareMin;\r\n                        compareMin = compareMax;\r\n                        compareMax = temp;\r\n                        moveOffset = -dir * Math.abs(moveOffset);\r\n                        swapOffset = -moveOffset\r\n                    }\r\n                }\r\n                if (compareMax(position + moveOffset, staticPosition)) {\r\n                    isValid = true;\r\n                    slider = sliders[index];\r\n                    value = sliders[1 - index].getValue();\r\n                    pos = Math.max(Math.min(position + moveOffset, maxPosition), minPosition);\r\n                    if (isValid && translator.isValueProlonged) {\r\n                        isValid = !compareMin(pos, translator.to(value, dir))\r\n                    }\r\n                    var invalidStateValue;\r\n                    if (isValid && that._minRange) {\r\n                        isValid = !compareMin(pos, translator.to(translator.add(value, that._minRange, dir), dir));\r\n                        if (!isValid) {\r\n                            invalidStateValue = translator.add(value, that._minRange, dir)\r\n                        }\r\n                    }\r\n                    if (isValid && that._maxRange) {\r\n                        isValid = !compareMax(pos, translator.to(translator.add(value, that._maxRange, dir), dir));\r\n                        if (!isValid) {\r\n                            invalidStateValue = translator.add(value, that._maxRange, dir)\r\n                        }\r\n                    }\r\n                    slider._setValid(isValid);\r\n                    slider.setDisplayValue(isValid ? selectClosestValue(translator.from(pos, dir), that._values) : (0, _type.isDefined)(invalidStateValue) ? invalidStateValue : slider.getValue());\r\n                    slider._position = pos;\r\n                    that._applyTotalPosition(false);\r\n                    slider.toForeground();\r\n                    if (that._isOnMoving) {\r\n                        that._processSelectionChanged(e)\r\n                    }\r\n                }\r\n            }\r\n            currentPosition = position\r\n        }\r\n    },\r\n    _changeMovingSlider: function(index) {\r\n        var that = this;\r\n        var translator = that._params.translator;\r\n        var sliders = that._sliders;\r\n        var position = sliders[1 - index].getPosition();\r\n        var dir = index > 0 ? 1 : -1;\r\n        var newValue;\r\n        sliders[index].setDisplayValue(selectClosestValue(translator.from(position, dir), that._values));\r\n        newValue = translator.from(position, -dir);\r\n        if (translator.isValueProlonged) {\r\n            newValue = translator.from(position, dir)\r\n        } else {\r\n            if (that._minRange) {\r\n                newValue = translator.add(newValue, that._minRange, -dir)\r\n            }\r\n        }\r\n        sliders[1 - index].setDisplayValue(selectClosestValue(newValue, that._values));\r\n        sliders[index]._setValid(true);\r\n        sliders[index]._marker._update();\r\n        sliders[0]._position = sliders[1]._position = position\r\n    },\r\n    foregroundSlider: function(index) {\r\n        this._sliders[index].toForeground()\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}