{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\treatmentDone\\\\TreatmentUsagePopup.js\";\nimport React, { Component } from \"react\";\nimport { updateForm, getCommonApi, commonCreateApi, commonPatchApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { NormalButton, NormalModal, NormalInput, NormalCheckbox, TableWrapper, NormalTextarea } from \"component/common\";\nimport classnames from \"classnames\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport closeIcon from \"assets/images/close.png\";\nimport { ItemUsageUpdatePopup } from \"./ItemUsageUpdatePopup\";\nimport { Toast } from \"service/toast\";\nimport { TreatmentUsageDetail } from \"./TreatmentUsageDetail\";\nimport { withTranslation } from \"react-i18next\";\nexport class TreatmentUsagePopupClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      TreatmentUsageListHeader: [{\n        label: \"No\"\n      }, {\n        label: \"Item Code\"\n      }, {\n        label: \"Link Code\"\n      }, {\n        label: \"Item Desc\"\n      }, {\n        label: \"Quantity\"\n      }, {\n        label: \"UOM\"\n      }, {\n        label: \"Optional\"\n      }, {\n        label: \"Remove\"\n      }],\n      TreatmentUsageList: [],\n      meta: {},\n      ExchangeTreatmentListHeader: [{\n        label: \"No\"\n      }, {\n        label: \"Staff Code\"\n      }, {\n        label: \"Staff Name\"\n      }, {\n        label: \"Trmt No\"\n      }, {\n        label: \"Original Item Code\"\n      }, {\n        label: \"Original Item Desc\"\n      }, {\n        label: \"Exchange Item Code\"\n      }, {\n        label: \"Exchange Item Desc\"\n      }, {\n        label: \"Trans#\"\n      }, {\n        label: \"Trans. Date\"\n      }, {\n        label: \"Exchange Date\"\n      }],\n      ExchangeTreatmentList: [],\n      ExchangeMeta: {},\n      activeTab: \"3\",\n      isItemUsageUpdatePopup: false,\n      TreatmentHistoryId: 0,\n      treatment_code: \"\",\n      course: \"\",\n      remarks: \"\",\n      EditableRemark: true,\n      ExchangeStaffListHeader: [{\n        label: \"No\"\n      }, {\n        label: \"Staff Code\"\n      }, {\n        label: \"Staff Name\"\n      }],\n      ExchangeStaffList: [],\n      autoProductFlag: \"False\",\n      cust_data: {}\n    };\n\n    this.componentDidMount = () => {\n      this.getTreatmentUsageList(this.props.TreatmentHistoryId);\n    };\n\n    this.getTreatmentUsageList = data => {\n      let {\n        TreatmentUsageList\n      } = this.state;\n      this.setState({\n        TreatmentHistoryId: data\n      });\n\n      if (data > 0) {\n        this.props.getCommonApi(`stockusage/${data}/`).then(async res => {\n          await this.setState({\n            treatmentUsageList: []\n          });\n          let {\n            data,\n            status\n          } = res;\n          console.log(res, \"treatmenthistory list autoproductflag\");\n\n          if (status === 200 && res.error !== true) {\n            if (data) {\n              await this.setState({\n                TreatmentHistoryId: data.id,\n                treatment_code: data.treatment_code,\n                course: data.course,\n                remarks: data.remarks,\n                autoProductFlag: data.auto,\n                cust_data: data.cust\n              });\n              let ExchangeStaffList = data.staffs;\n\n              for (let datalist of data.usage) {\n                let item_code = datalist.item_code;\n                let link_code = datalist.link_code;\n                let item_desc = datalist.item_desc;\n                let qty = datalist.qty;\n                let uom = datalist.uom;\n                let optional = datalist.optional;\n                let optionalSelected = false;\n                let stock_id = 0;\n                let Treatmentid = 0;\n\n                if (datalist && !datalist.auto_table) {\n                  Treatmentid = data.id;\n                  stock_id = datalist.id;\n                } else {\n                  stock_id = datalist.stock_id;\n                  Treatmentid = 0;\n                }\n\n                TreatmentUsageList.push({\n                  item_code,\n                  link_code,\n                  item_desc,\n                  qty,\n                  uom,\n                  stock_id,\n                  Treatmentid,\n                  optional,\n                  optionalSelected\n                });\n              }\n\n              await this.setState({\n                TreatmentUsageList,\n                ExchangeStaffList\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.toggle = tab => {\n      if (tab == \"3\") {\n        this.setState({\n          EditableRemark: true\n        });\n      } else if (tab == \"1\") {\n        let {\n          TreatmentUsageList\n        } = this.state;\n        let filterEditableRemark = TreatmentUsageList.find(account => account.Treatmentid === 0);\n\n        if (filterEditableRemark) {\n          this.setState({\n            EditableRemark: true\n          });\n        } else {\n          this.setState({\n            EditableRemark: false\n          });\n        }\n      } else {\n        this.setState({\n          EditableRemark: false\n        });\n      }\n\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    this.itemCloseUsageUpdatePopup = () => {\n      this.setState(prevState => ({\n        isItemUsageUpdatePopup: !prevState.isItemUsageUpdatePopup\n      }));\n    };\n\n    this.itemUsageUpdatePopup = () => {\n      let {\n        autoProductFlag\n      } = this.state;\n\n      if (autoProductFlag == \"False\") {\n        this.setState(prevState => ({\n          isItemUsageUpdatePopup: !prevState.isItemUsageUpdatePopup\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Auto product update enabled for this treatment!\"\n        });\n      }\n    };\n\n    this.remarkHandle = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.includeNewItems = async data => {\n      await this.setState({\n        isItemUsageUpdatePopup: false,\n        EditableRemark: true\n      });\n      let {\n        TreatmentUsageList\n      } = this.state;\n\n      for (let value of data) {\n        TreatmentUsageList.push({\n          item_code: value.item_code,\n          link_code: value.link_code,\n          item_desc: value.ItemDesc,\n          qty: parseInt(value.qty),\n          uom: value.uom,\n          stock_id: value.stock_id,\n          Treatmentid: 0,\n          optional: true,\n          optionalSelected: false\n        });\n      }\n\n      await this.setState({\n        TreatmentUsageList\n      });\n    };\n\n    this.handleSave = () => {\n      let {\n        TreatmentUsageList,\n        TreatmentHistoryId,\n        remarks\n      } = this.state;\n      let data = [];\n\n      for (let final of TreatmentUsageList) {\n        if (final.Treatmentid == 0 && !final.optionalSelected) {\n          data.push({\n            item_code: final.item_code,\n            link_code: final.link_code,\n            item_desc: final.item_desc,\n            qty: final.qty,\n            uom: final.uom,\n            stock_id: final.stock_id\n          });\n        }\n      }\n\n      if (data.length > 0) {\n        this.props.commonCreateApi(`stockusage/?treat_id=${TreatmentHistoryId}&treat_remarks=${remarks}`, data).then(async res => {\n          if (res.status === 201) {\n            this.setState({\n              TreatmentUsageList: [],\n              TreatmentHistoryId: 0\n            });\n            this.props.treatmentUsagePopupclose();\n          }\n        });\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please Add New Product and then try!\"\n        });\n      }\n    };\n\n    this.deleteSelectedItem = async item => {\n      if (item.Treatmentid === 0) {\n        await this.setState(data => ({\n          TreatmentUsageList: data.TreatmentUsageList.filter(x => x.stock_id != item.stock_id)\n        }));\n        let {\n          TreatmentUsageList\n        } = this.state;\n        let filterEditableRemark = TreatmentUsageList.find(account => account.Treatmentid === 0);\n\n        if (filterEditableRemark) {\n          this.setState({\n            EditableRemark: true\n          });\n        } else {\n          this.setState({\n            EditableRemark: false\n          });\n        }\n      } else {\n        let {\n          TreatmentHistoryId\n        } = this.state;\n        this.props.commonPatchApi(`stockusage/${item.stock_id}/?treat_id=${TreatmentHistoryId}`).then(async res => {\n          if (res.status === 200) {\n            await this.setState(data => ({\n              TreatmentUsageList: data.TreatmentUsageList.filter(x => x.stock_id != item.stock_id)\n            }));\n          }\n        });\n      }\n    };\n\n    this.handleCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }, index) => {\n      let {\n        TreatmentUsageList\n      } = this.state;\n      let allowOptional = TreatmentUsageList[index][\"optional\"];\n\n      if (allowOptional) {\n        TreatmentUsageList[index][name] = value;\n        await this.setState({\n          TreatmentUsageList\n        });\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"This is not an Optional Product!\"\n        });\n      }\n    };\n  }\n\n  render() {\n    let {\n      TreatmentUsageList,\n      TreatmentUsageListHeader,\n      meta,\n      isItemUsageUpdatePopup,\n      ExchangeTreatmentList,\n      ExchangeTreatmentListHeader,\n      ExchangeMeta,\n      TreatmentHistoryId,\n      treatment_code,\n      course,\n      remarks,\n      EditableRemark,\n      ExchangeStaffList,\n      ExchangeStaffListHeader,\n      cust_data\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"select-category\",\n      style: {\n        minWidth: \"75%\"\n      },\n      modal: this.props.isTreatmentUsagePopup,\n      handleModal: this.props.treatmentUsagePopupclose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.props.treatmentUsagePopupclose,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex h4 justify-content-center p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }, t(\"Treatment Usage\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-list container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, t(\"Customer Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left fs-15 fw-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 15\n      }\n    }, cust_data.cust_name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }, t(\"Reference\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left fs-15 fw-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    }, cust_data.cust_refer))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-left mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }, t(\"Treatment Code\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left fs-15 fw-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, treatment_code)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }\n    }, t(\"Treatment Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left fs-15 fw-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, course))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-left mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 15\n      }\n    }, t(\"Remarks\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left fs-15 fw-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }\n    }, EditableRemark ? /*#__PURE__*/React.createElement(NormalTextarea, {\n      value: remarks,\n      name: \"remarks\",\n      onChange: this.remarkHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(NormalTextarea, {\n      value: remarks,\n      name: \"remarks\",\n      onChange: this.remarkHandle,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"beautesoft-navlink customer-detail mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filled-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === \"3\"\n      }),\n      onClick: () => {\n        this.toggle(\"3\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    }, t(\"Detail\"))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === \"1\"\n      }),\n      onClick: () => {\n        this.toggle(\"1\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }, t(\"Stock Usage\"))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === \"4\"\n      }),\n      onClick: () => {\n        this.toggle(\"4\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, t(\"Staff\"))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === \"2\"\n      }),\n      onClick: () => {\n        this.toggle(\"2\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, t(\"Exchange\"), \" \", t(\"Treatment\"))))), /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }\n    }, this.state.activeTab === \"1\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-2 fs-15 mt-3\",\n      label: \"Add Item Usage\",\n      onClick: this.itemUsageUpdatePopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: TreatmentUsageListHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 25\n      }\n    }, TreatmentUsageList && TreatmentUsageList.length > 0 ? TreatmentUsageList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"w-100\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 37\n        }\n      }, index + 1)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 37\n        }\n      }, item.item_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 37\n        }\n      }, item.link_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 37\n        }\n      }, item.item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 37\n        }\n      }, item.qty)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 37\n        }\n      }, item.uom)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, index),\n        value: item.optionalSelected,\n        name: \"optionalSelected\",\n        checked: item.optionalSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 39\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        onClick: () => this.deleteSelectedItem(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        width: \"25\",\n        height: \"25\",\n        className: \"ml-3\",\n        src: closeIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 39\n        }\n      }))));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 33\n      }\n    }, t(\"No Data Available\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center justify-content-end w-100 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"col-2\",\n      mainbg: true,\n      className: \"col-12 ml-4 fs-15 \",\n      label: \"Save\",\n      onClick: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"col-2\",\n      mainbg: true,\n      className: \"col-12 ml-4 fs-15 \",\n      label: \"Cancel\",\n      onClick: this.props.treatmentUsagePopupclose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 25\n      }\n    }))) : null), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 17\n      }\n    }, this.state.activeTab === \"2\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: ExchangeTreatmentListHeader //queryHandler={this.handlePagination}\n      ,\n      pageMeta: ExchangeMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 23\n      }\n    }, ExchangeTreatmentList && ExchangeTreatmentList.length > 0 ? ExchangeTreatmentList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"w-100\",\n        onClick: () => this.handleSelectTreatment(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 35\n        }\n      }, item.Item_Class)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 35\n        }\n      }, item.item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 35\n        }\n      }, item.add_duration)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 35\n        }\n      }, item.item_price)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 35\n        }\n      }, item.item_price)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 35\n        }\n      }, item.item_price)));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 31\n      }\n    }, t(\"No Data Available\")))))) : null), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 17\n      }\n    }, this.state.activeTab === \"3\" ? /*#__PURE__*/React.createElement(TreatmentUsageDetail, {\n      TreatmentHistoryId: this.props.TreatmentHistoryId,\n      remarks: remarks,\n      treatment_code: this.state.treatment_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 21\n      }\n    }) : null), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 17\n      }\n    }, this.state.activeTab === \"4\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: ExchangeStaffListHeader //queryHandler={this.handlePagination}\n      ,\n      pageMeta: ExchangeMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 23\n      }\n    }, ExchangeStaffList && ExchangeStaffList.length > 0 ? ExchangeStaffList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"w-100\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 35\n        }\n      }, item.no)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 35\n        }\n      }, item.staff_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 35\n        }\n      }, item.helper_name)));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 31\n      }\n    }, t(\"No Data Available\")))))) : null))))), isItemUsageUpdatePopup ? /*#__PURE__*/React.createElement(ItemUsageUpdatePopup, {\n      isItemUsageUpdatePopup: isItemUsageUpdatePopup,\n      itemUsageUpdatePopup: this.itemCloseUsageUpdatePopup,\n      newItemlist: StockItemUsageList => this.includeNewItems(StockItemUsageList),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({// filter: state.dashboard\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateForm,\n    getCommonApi,\n    commonCreateApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const TreatmentUsagePopup = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TreatmentUsagePopupClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Cart/treatmentDone/TreatmentUsagePopup.js"],"names":["React","Component","updateForm","getCommonApi","commonCreateApi","commonPatchApi","connect","bindActionCreators","NormalButton","NormalModal","NormalInput","NormalCheckbox","TableWrapper","NormalTextarea","classnames","Nav","NavItem","NavLink","TabContent","TabPane","closeIcon","ItemUsageUpdatePopup","Toast","TreatmentUsageDetail","withTranslation","TreatmentUsagePopupClass","state","TreatmentUsageListHeader","label","TreatmentUsageList","meta","ExchangeTreatmentListHeader","ExchangeTreatmentList","ExchangeMeta","activeTab","isItemUsageUpdatePopup","TreatmentHistoryId","treatment_code","course","remarks","EditableRemark","ExchangeStaffListHeader","ExchangeStaffList","autoProductFlag","cust_data","componentDidMount","getTreatmentUsageList","props","data","setState","then","res","treatmentUsageList","status","console","log","error","id","auto","cust","staffs","datalist","usage","item_code","link_code","item_desc","qty","uom","optional","optionalSelected","stock_id","Treatmentid","auto_table","push","toggle","tab","filterEditableRemark","find","account","itemCloseUsageUpdatePopup","prevState","itemUsageUpdatePopup","type","message","remarkHandle","target","name","value","includeNewItems","ItemDesc","parseInt","handleSave","final","length","treatmentUsagePopupclose","deleteSelectedItem","item","filter","x","handleCheckbox","index","allowOptional","render","t","minWidth","isTreatmentUsagePopup","cust_name","cust_refer","active","map","e","handleSelectTreatment","Item_Class","add_duration","item_price","no","staff_code","helper_name","StockItemUsageList","mapStateToProps","mapDispatchToProps","dispatch","TreatmentUsagePopup"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  updateForm,\r\n  getCommonApi,\r\n  commonCreateApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  NormalButton,\r\n  NormalModal,\r\n  NormalInput,\r\n  NormalCheckbox,\r\n  TableWrapper,\r\n  NormalTextarea,\r\n} from \"component/common\";\r\nimport classnames from \"classnames\";\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { ItemUsageUpdatePopup } from \"./ItemUsageUpdatePopup\";\r\nimport { Toast } from \"service/toast\";\r\nimport { TreatmentUsageDetail } from \"./TreatmentUsageDetail\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class TreatmentUsagePopupClass extends Component {\r\n  state = {\r\n    TreatmentUsageListHeader: [\r\n      { label: \"No\" },\r\n      { label: \"Item Code\" },\r\n      { label: \"Link Code\" },\r\n      { label: \"Item Desc\" },\r\n      { label: \"Quantity\" },\r\n      { label: \"UOM\" },\r\n      { label: \"Optional\" },\r\n      { label: \"Remove\" },\r\n    ],\r\n    TreatmentUsageList: [],\r\n    meta: {},\r\n    ExchangeTreatmentListHeader: [\r\n      { label: \"No\" },\r\n      { label: \"Staff Code\" },\r\n      { label: \"Staff Name\" },\r\n      { label: \"Trmt No\" },\r\n      { label: \"Original Item Code\" },\r\n      { label: \"Original Item Desc\" },\r\n      { label: \"Exchange Item Code\" },\r\n      { label: \"Exchange Item Desc\" },\r\n      { label: \"Trans#\" },\r\n      { label: \"Trans. Date\" },\r\n      { label: \"Exchange Date\" },\r\n    ],\r\n    ExchangeTreatmentList: [],\r\n    ExchangeMeta: {},\r\n    activeTab: \"3\",\r\n    isItemUsageUpdatePopup: false,\r\n    TreatmentHistoryId: 0,\r\n    treatment_code: \"\",\r\n    course: \"\",\r\n    remarks: \"\",\r\n    EditableRemark: true,\r\n    ExchangeStaffListHeader: [\r\n      { label: \"No\" },\r\n      { label: \"Staff Code\" },\r\n      { label: \"Staff Name\" },\r\n    ],\r\n    ExchangeStaffList: [],\r\n    autoProductFlag: \"False\",\r\n    cust_data: {},\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getTreatmentUsageList(this.props.TreatmentHistoryId);\r\n  };\r\n\r\n  getTreatmentUsageList = data => {\r\n    let { TreatmentUsageList } = this.state;\r\n    this.setState({\r\n      TreatmentHistoryId: data,\r\n    });\r\n    if (data > 0) {\r\n      this.props.getCommonApi(`stockusage/${data}/`).then(async res => {\r\n        await this.setState({ treatmentUsageList: [] });\r\n        let { data, status } = res;\r\n        console.log(res, \"treatmenthistory list autoproductflag\");\r\n        if (status === 200 && res.error !== true) {\r\n          if (data) {\r\n            await this.setState({\r\n              TreatmentHistoryId: data.id,\r\n              treatment_code: data.treatment_code,\r\n              course: data.course,\r\n              remarks: data.remarks,\r\n              autoProductFlag: data.auto,\r\n              cust_data: data.cust,\r\n            });\r\n\r\n            let ExchangeStaffList = data.staffs;\r\n            for (let datalist of data.usage) {\r\n              let item_code = datalist.item_code;\r\n              let link_code = datalist.link_code;\r\n              let item_desc = datalist.item_desc;\r\n              let qty = datalist.qty;\r\n              let uom = datalist.uom;\r\n              let optional = datalist.optional;\r\n              let optionalSelected = false;\r\n              let stock_id = 0;\r\n              let Treatmentid = 0;\r\n              if (datalist && !datalist.auto_table) {\r\n                Treatmentid = data.id;\r\n                stock_id = datalist.id;\r\n              } else {\r\n                stock_id = datalist.stock_id;\r\n                Treatmentid = 0;\r\n              }\r\n              TreatmentUsageList.push({\r\n                item_code,\r\n                link_code,\r\n                item_desc,\r\n                qty,\r\n                uom,\r\n                stock_id,\r\n                Treatmentid,\r\n                optional,\r\n                optionalSelected,\r\n              });\r\n            }\r\n            await this.setState({ TreatmentUsageList, ExchangeStaffList });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n  toggle = tab => {\r\n    if (tab == \"3\") {\r\n      this.setState({ EditableRemark: true });\r\n    } else if (tab == \"1\") {\r\n      let { TreatmentUsageList } = this.state;\r\n      let filterEditableRemark = TreatmentUsageList.find(\r\n        account => account.Treatmentid === 0\r\n      );\r\n      if (filterEditableRemark) {\r\n        this.setState({ EditableRemark: true });\r\n      } else {\r\n        this.setState({ EditableRemark: false });\r\n      }\r\n    } else {\r\n      this.setState({ EditableRemark: false });\r\n    }\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  itemCloseUsageUpdatePopup = () => {\r\n    this.setState(prevState => ({\r\n      isItemUsageUpdatePopup: !prevState.isItemUsageUpdatePopup,\r\n    }));\r\n  };\r\n  itemUsageUpdatePopup = () => {\r\n    let { autoProductFlag } = this.state;\r\n    if (autoProductFlag == \"False\") {\r\n      this.setState(prevState => ({\r\n        isItemUsageUpdatePopup: !prevState.isItemUsageUpdatePopup,\r\n      }));\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Auto product update enabled for this treatment!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  remarkHandle = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n  includeNewItems = async data => {\r\n    await this.setState({\r\n      isItemUsageUpdatePopup: false,\r\n      EditableRemark: true,\r\n    });\r\n\r\n    let { TreatmentUsageList } = this.state;\r\n    for (let value of data) {\r\n      TreatmentUsageList.push({\r\n        item_code: value.item_code,\r\n        link_code: value.link_code,\r\n        item_desc: value.ItemDesc,\r\n        qty: parseInt(value.qty),\r\n        uom: value.uom,\r\n        stock_id: value.stock_id,\r\n        Treatmentid: 0,\r\n        optional: true,\r\n        optionalSelected: false,\r\n      });\r\n    }\r\n    await this.setState({ TreatmentUsageList });\r\n  };\r\n  handleSave = () => {\r\n    let { TreatmentUsageList, TreatmentHistoryId, remarks } = this.state;\r\n\r\n    let data = [];\r\n    for (let final of TreatmentUsageList) {\r\n      if (final.Treatmentid == 0 && !final.optionalSelected) {\r\n        data.push({\r\n          item_code: final.item_code,\r\n          link_code: final.link_code,\r\n          item_desc: final.item_desc,\r\n          qty: final.qty,\r\n          uom: final.uom,\r\n          stock_id: final.stock_id,\r\n        });\r\n      }\r\n    }\r\n    if (data.length > 0) {\r\n      this.props\r\n        .commonCreateApi(\r\n          `stockusage/?treat_id=${TreatmentHistoryId}&treat_remarks=${remarks}`,\r\n          data\r\n        )\r\n        .then(async res => {\r\n          if (res.status === 201) {\r\n            this.setState({ TreatmentUsageList: [], TreatmentHistoryId: 0 });\r\n            this.props.treatmentUsagePopupclose();\r\n          }\r\n        });\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please Add New Product and then try!\" });\r\n    }\r\n  };\r\n  deleteSelectedItem = async item => {\r\n    if (item.Treatmentid === 0) {\r\n      await this.setState(data => ({\r\n        TreatmentUsageList: data.TreatmentUsageList.filter(\r\n          x => x.stock_id != item.stock_id\r\n        ),\r\n      }));\r\n      let { TreatmentUsageList } = this.state;\r\n      let filterEditableRemark = TreatmentUsageList.find(\r\n        account => account.Treatmentid === 0\r\n      );\r\n      if (filterEditableRemark) {\r\n        this.setState({\r\n          EditableRemark: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          EditableRemark: false,\r\n        });\r\n      }\r\n    } else {\r\n      let { TreatmentHistoryId } = this.state;\r\n      this.props\r\n        .commonPatchApi(\r\n          `stockusage/${item.stock_id}/?treat_id=${TreatmentHistoryId}`\r\n        )\r\n        .then(async res => {\r\n          if (res.status === 200) {\r\n            await this.setState(data => ({\r\n              TreatmentUsageList: data.TreatmentUsageList.filter(\r\n                x => x.stock_id != item.stock_id\r\n              ),\r\n            }));\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleCheckbox = async ({ target: { value, name } }, index) => {\r\n    let { TreatmentUsageList } = this.state;\r\n\r\n    let allowOptional = TreatmentUsageList[index][\"optional\"];\r\n    if (allowOptional) {\r\n      TreatmentUsageList[index][name] = value;\r\n      await this.setState({\r\n        TreatmentUsageList,\r\n      });\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"This is not an Optional Product!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      TreatmentUsageList,\r\n      TreatmentUsageListHeader,\r\n      meta,\r\n      isItemUsageUpdatePopup,\r\n      ExchangeTreatmentList,\r\n      ExchangeTreatmentListHeader,\r\n      ExchangeMeta,\r\n      TreatmentHistoryId,\r\n      treatment_code,\r\n      course,\r\n      remarks,\r\n      EditableRemark,\r\n      ExchangeStaffList,\r\n      ExchangeStaffListHeader,\r\n      cust_data,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <NormalModal\r\n        className={\"select-category\"}\r\n        style={{ minWidth: \"75%\" }}\r\n        modal={this.props.isTreatmentUsagePopup}\r\n        handleModal={this.props.treatmentUsagePopupclose}\r\n      >\r\n        <img\r\n          onClick={this.props.treatmentUsagePopupclose}\r\n          className=\"close\"\r\n          src={closeIcon}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"d-flex h4 justify-content-center p-1\">\r\n          {t(\"Treatment Usage\")}\r\n        </div>\r\n        <div className=\"customer-list container\">\r\n          <div className=\"d-flex justify-content-left\">\r\n            <div className=\"col-2\">\r\n              <div className=\"text-left\">{t(\"Customer Name\")}</div>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <div className=\"text-left fs-15 fw-500\">\r\n                {cust_data.cust_name}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <div className=\"text-left\">{t(\"Reference\")}</div>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <div className=\"text-left fs-15 fw-500\">\r\n                {cust_data.cust_refer}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-left mt-2\">\r\n            <div className=\"col-2\">\r\n              <div className=\"text-left\">{t(\"Treatment Code\")}</div>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <div className=\"text-left fs-15 fw-500\">{treatment_code}</div>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <div className=\"text-left\">{t(\"Treatment Name\")}</div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className=\"text-left fs-15 fw-500\">{course}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-left mt-2\">\r\n            <div className=\"col-2\">\r\n              <div className=\"text-left\">{t(\"Remarks\")}</div>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <div className=\"text-left fs-15 fw-500\">\r\n                {EditableRemark ? (\r\n                  <NormalTextarea\r\n                    value={remarks}\r\n                    name=\"remarks\"\r\n                    onChange={this.remarkHandle}\r\n                  />\r\n                ) : (\r\n                  <NormalTextarea\r\n                    value={remarks}\r\n                    name=\"remarks\"\r\n                    onChange={this.remarkHandle}\r\n                    disabled\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"beautesoft-navlink customer-detail mt-3\">\r\n            <div className=\"filled-tabs\">\r\n              <div className=\"tabs-block\">\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({\r\n                        active: this.state.activeTab === \"3\",\r\n                      })}\r\n                      onClick={() => {\r\n                        this.toggle(\"3\");\r\n                      }}\r\n                    >\r\n                      {t(\"Detail\")}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({\r\n                        active: this.state.activeTab === \"1\",\r\n                      })}\r\n                      onClick={() => {\r\n                        this.toggle(\"1\");\r\n                      }}\r\n                    >\r\n                      {t(\"Stock Usage\")}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({\r\n                        active: this.state.activeTab === \"4\",\r\n                      })}\r\n                      onClick={() => {\r\n                        this.toggle(\"4\");\r\n                      }}\r\n                    >\r\n                      {t(\"Staff\")}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({\r\n                        active: this.state.activeTab === \"2\",\r\n                      })}\r\n                      onClick={() => {\r\n                        this.toggle(\"2\");\r\n                      }}\r\n                    >\r\n                      {t(\"Exchange\")} {t(\"Treatment\")}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </div>\r\n              <TabContent activeTab={this.state.activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                  {this.state.activeTab === \"1\" ? (\r\n                    <div>\r\n                      <NormalButton\r\n                        mainbg={true}\r\n                        className=\"col-2 fs-15 mt-3\"\r\n                        label=\"Add Item Usage\"\r\n                        onClick={this.itemUsageUpdatePopup}\r\n                      />\r\n\r\n                      <div className=\"table-container table-responsive mt-3\">\r\n                        <TableWrapper headerDetails={TreatmentUsageListHeader}>\r\n                          {TreatmentUsageList &&\r\n                          TreatmentUsageList.length > 0 ? (\r\n                            TreatmentUsageList.map((item, index) => {\r\n                              return (\r\n                                <tr className=\"w-100\" key={index}>\r\n                                  <td>\r\n                                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                                      {index + 1}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                                      {item.item_code}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                                      {item.link_code}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                                      {item.item_desc}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                                      {item.qty}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                                      {item.uom}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                                      <NormalCheckbox\r\n                                        onChange={e =>\r\n                                          this.handleCheckbox(e, index)\r\n                                        }\r\n                                        value={item.optionalSelected}\r\n                                        name=\"optionalSelected\"\r\n                                        checked={item.optionalSelected}\r\n                                      />\r\n                                    </div>\r\n                                  </td>\r\n\r\n                                  <td>\r\n                                    <div\r\n                                      className=\"d-flex align-items-center justify-content-center\"\r\n                                      onClick={() =>\r\n                                        this.deleteSelectedItem(item)\r\n                                      }\r\n                                    >\r\n                                      <img\r\n                                        width=\"25\"\r\n                                        height=\"25\"\r\n                                        className=\"ml-3\"\r\n                                        src={closeIcon}\r\n                                        alt=\"\"\r\n                                      />\r\n                                    </div>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })\r\n                          ) : (\r\n                            <tr className=\"w-100\">\r\n                              <td>\r\n                                <div className=\"d-flex align-items-center justify-content-center\">\r\n                                  {t(\"No Data Available\")}\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          )}\r\n                        </TableWrapper>\r\n                      </div>\r\n                      <div className=\"row text-center justify-content-end w-100 mt-3\">\r\n                        <NormalButton\r\n                          buttonClass={\"col-2\"}\r\n                          mainbg={true}\r\n                          className=\"col-12 ml-4 fs-15 \"\r\n                          label=\"Save\"\r\n                          onClick={this.handleSave}\r\n                        />\r\n                        <NormalButton\r\n                          buttonClass={\"col-2\"}\r\n                          mainbg={true}\r\n                          className=\"col-12 ml-4 fs-15 \"\r\n                          label=\"Cancel\"\r\n                          onClick={this.props.treatmentUsagePopupclose}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  {this.state.activeTab === \"2\" ? (\r\n                    <div className=\"table-container table-responsive mt-3\">\r\n                      <TableWrapper\r\n                        headerDetails={ExchangeTreatmentListHeader}\r\n                        //queryHandler={this.handlePagination}\r\n                        pageMeta={ExchangeMeta}\r\n                      >\r\n                        {ExchangeTreatmentList &&\r\n                        ExchangeTreatmentList.length > 0 ? (\r\n                          ExchangeTreatmentList.map((item, index) => {\r\n                            return (\r\n                              <tr\r\n                                className=\"w-100\"\r\n                                onClick={() => this.handleSelectTreatment(item)}\r\n                                key={index}\r\n                              >\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.Item_Class}\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.item_desc}\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.add_duration}\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.item_price}\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.item_price}\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.item_price}\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        ) : (\r\n                          <tr className=\"w-100\">\r\n                            <td>\r\n                              <div className=\"d-flex align-items-center justify-content-center\">\r\n                                {t(\"No Data Available\")}\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        )}\r\n                      </TableWrapper>\r\n                    </div>\r\n                  ) : null}\r\n                </TabPane>\r\n                <TabPane tabId=\"3\">\r\n                  {this.state.activeTab === \"3\" ? (\r\n                    <TreatmentUsageDetail\r\n                      TreatmentHistoryId={this.props.TreatmentHistoryId}\r\n                      remarks={remarks}\r\n                      treatment_code={this.state.treatment_code}\r\n                    />\r\n                  ) : null}\r\n                </TabPane>\r\n                <TabPane tabId=\"4\">\r\n                  {this.state.activeTab === \"4\" ? (\r\n                    <div className=\"table-container table-responsive mt-3\">\r\n                      <TableWrapper\r\n                        headerDetails={ExchangeStaffListHeader}\r\n                        //queryHandler={this.handlePagination}\r\n                        pageMeta={ExchangeMeta}\r\n                      >\r\n                        {ExchangeStaffList && ExchangeStaffList.length > 0 ? (\r\n                          ExchangeStaffList.map((item, index) => {\r\n                            return (\r\n                              <tr className=\"w-100\" key={index}>\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.no}\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.staff_code}\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    {item.helper_name}\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        ) : (\r\n                          <tr className=\"w-100\">\r\n                            <td>\r\n                              <div className=\"d-flex align-items-center justify-content-center\">\r\n                                {t(\"No Data Available\")}\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        )}\r\n                      </TableWrapper>\r\n                    </div>\r\n                  ) : null}\r\n                </TabPane>\r\n              </TabContent>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isItemUsageUpdatePopup ? (\r\n          <ItemUsageUpdatePopup\r\n            isItemUsageUpdatePopup={isItemUsageUpdatePopup}\r\n            itemUsageUpdatePopup={this.itemCloseUsageUpdatePopup}\r\n            newItemlist={StockItemUsageList =>\r\n              this.includeNewItems(StockItemUsageList)\r\n            }\r\n          />\r\n        ) : null}\r\n      </NormalModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // filter: state.dashboard\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      updateForm,\r\n      getCommonApi,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TreatmentUsagePopup = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(TreatmentUsagePopupClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}