{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/timezones/utils.timezones_data.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _query = _interopRequireDefault(require(\"../../../data/query\"));\n\nvar _errors = _interopRequireDefault(require(\"../../../core/errors\"));\n\nvar _timezones_data = _interopRequireDefault(require(\"./timezones_data\"));\n\nvar _math = require(\"../../../core/utils/math\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar timeZoneDataUtils = {\n  _timeZones: _timezones_data.default.zones,\n  getDisplayedTimeZones: function getDisplayedTimeZones(timestamp) {\n    var _this = this;\n\n    var timeZones = this._timeZones.map(function (timezone) {\n      var offset = _this.getUtcOffset(timezone.offsets, timezone.offsetIndices, timezone.untils, timestamp);\n\n      var title = \"(GMT \".concat(_this.formatOffset(offset), \") \").concat(_this.formatId(timezone.id));\n      return {\n        offset: offset,\n        title: title,\n        id: timezone.id\n      };\n    });\n\n    return (0, _query.default)(timeZones).sortBy(\"offset\").toArray();\n  },\n  formatOffset: function formatOffset(offset) {\n    var hours = Math.floor(offset);\n    var minutesInDecimal = offset - hours;\n    var signString = (0, _math.sign)(offset) >= 0 ? \"+\" : \"-\";\n    var hoursString = \"0\".concat(Math.abs(hours)).slice(-2);\n    var minutesString = minutesInDecimal > 0 ? \":\".concat(60 * minutesInDecimal) : \":00\";\n    return signString + hoursString + minutesString;\n  },\n  formatId: function formatId(id) {\n    return id.split(\"/\").join(\" - \").split(\"_\").join(\" \");\n  },\n  getTimezoneById: function getTimezoneById(id) {\n    var result;\n    var i = 0;\n    var tzList = this._timeZones;\n\n    if (id) {\n      while (!result) {\n        if (!tzList[i]) {\n          _errors.default.log(\"W0009\", id);\n\n          return;\n        }\n\n        var currentId = tzList[i].id;\n\n        if (currentId === id) {\n          result = tzList[i];\n        }\n\n        i++;\n      }\n    }\n\n    return result;\n  },\n  getTimeZoneOffsetById: function getTimeZoneOffsetById(id, timestamp) {\n    var tz = this.getTimezoneById(id);\n    var offsets;\n    var offsetIndices;\n    var untils;\n    var result;\n\n    if (tz) {\n      offsets = tz.offsets;\n      untils = tz.untils;\n      offsetIndices = tz.offsetIndices;\n      result = this.getUtcOffset(offsets, offsetIndices, untils, timestamp);\n    }\n\n    return result;\n  },\n  getUtcOffset: function getUtcOffset(offsets, offsetIndices, untils, dateTimeStamp) {\n    var index = 0;\n    var offsetIndicesList = offsetIndices.split(\"\");\n    var offsetsList = offsets.split(\"|\");\n    var untilsList = untils.split(\"|\").map(function (until) {\n      if (\"Infinity\" === until) {\n        return null;\n      }\n\n      return 1e3 * parseInt(until, 36);\n    });\n    var currentUntil = 0;\n\n    for (var i = 0, listLength = untilsList.length; i < listLength; i++) {\n      currentUntil += untilsList[i];\n\n      if (dateTimeStamp >= currentUntil) {\n        index = i;\n        continue;\n      } else {\n        break;\n      }\n    }\n\n    if (untilsList[index + 1]) {\n      index++;\n    }\n\n    var offset = Number(offsetsList[Number(offsetIndicesList[index])]);\n    return -offset / 60 || offset;\n  }\n};\nvar _default = timeZoneDataUtils;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["F:/webfe/node_modules/devextreme/ui/scheduler/timezones/utils.timezones_data.js"],"names":["exports","default","_query","_interopRequireDefault","require","_errors","_timezones_data","_math","obj","__esModule","timeZoneDataUtils","_timeZones","zones","getDisplayedTimeZones","timestamp","_this","timeZones","map","timezone","offset","getUtcOffset","offsets","offsetIndices","untils","title","concat","formatOffset","formatId","id","sortBy","toArray","hours","Math","floor","minutesInDecimal","signString","sign","hoursString","abs","slice","minutesString","split","join","getTimezoneById","result","i","tzList","log","currentId","getTimeZoneOffsetById","tz","dateTimeStamp","index","offsetIndicesList","offsetsList","untilsList","until","parseInt","currentUntil","listLength","length","Number","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/timezones/utils.timezones_data.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _query = _interopRequireDefault(require(\"../../../data/query\"));\r\nvar _errors = _interopRequireDefault(require(\"../../../core/errors\"));\r\nvar _timezones_data = _interopRequireDefault(require(\"./timezones_data\"));\r\nvar _math = require(\"../../../core/utils/math\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar timeZoneDataUtils = {\r\n    _timeZones: _timezones_data.default.zones,\r\n    getDisplayedTimeZones: function(timestamp) {\r\n        var _this = this;\r\n        var timeZones = this._timeZones.map(function(timezone) {\r\n            var offset = _this.getUtcOffset(timezone.offsets, timezone.offsetIndices, timezone.untils, timestamp);\r\n            var title = \"(GMT \".concat(_this.formatOffset(offset), \") \").concat(_this.formatId(timezone.id));\r\n            return {\r\n                offset: offset,\r\n                title: title,\r\n                id: timezone.id\r\n            }\r\n        });\r\n        return (0, _query.default)(timeZones).sortBy(\"offset\").toArray()\r\n    },\r\n    formatOffset: function(offset) {\r\n        var hours = Math.floor(offset);\r\n        var minutesInDecimal = offset - hours;\r\n        var signString = (0, _math.sign)(offset) >= 0 ? \"+\" : \"-\";\r\n        var hoursString = \"0\".concat(Math.abs(hours)).slice(-2);\r\n        var minutesString = minutesInDecimal > 0 ? \":\".concat(60 * minutesInDecimal) : \":00\";\r\n        return signString + hoursString + minutesString\r\n    },\r\n    formatId: function(id) {\r\n        return id.split(\"/\").join(\" - \").split(\"_\").join(\" \")\r\n    },\r\n    getTimezoneById: function(id) {\r\n        var result;\r\n        var i = 0;\r\n        var tzList = this._timeZones;\r\n        if (id) {\r\n            while (!result) {\r\n                if (!tzList[i]) {\r\n                    _errors.default.log(\"W0009\", id);\r\n                    return\r\n                }\r\n                var currentId = tzList[i].id;\r\n                if (currentId === id) {\r\n                    result = tzList[i]\r\n                }\r\n                i++\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    getTimeZoneOffsetById: function(id, timestamp) {\r\n        var tz = this.getTimezoneById(id);\r\n        var offsets;\r\n        var offsetIndices;\r\n        var untils;\r\n        var result;\r\n        if (tz) {\r\n            offsets = tz.offsets;\r\n            untils = tz.untils;\r\n            offsetIndices = tz.offsetIndices;\r\n            result = this.getUtcOffset(offsets, offsetIndices, untils, timestamp)\r\n        }\r\n        return result\r\n    },\r\n    getUtcOffset: function(offsets, offsetIndices, untils, dateTimeStamp) {\r\n        var index = 0;\r\n        var offsetIndicesList = offsetIndices.split(\"\");\r\n        var offsetsList = offsets.split(\"|\");\r\n        var untilsList = untils.split(\"|\").map(function(until) {\r\n            if (\"Infinity\" === until) {\r\n                return null\r\n            }\r\n            return 1e3 * parseInt(until, 36)\r\n        });\r\n        var currentUntil = 0;\r\n        for (var i = 0, listLength = untilsList.length; i < listLength; i++) {\r\n            currentUntil += untilsList[i];\r\n            if (dateTimeStamp >= currentUntil) {\r\n                index = i;\r\n                continue\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        if (untilsList[index + 1]) {\r\n            index++\r\n        }\r\n        var offset = Number(offsetsList[Number(offsetIndicesList[index])]);\r\n        return -offset / 60 || offset\r\n    }\r\n};\r\nvar _default = timeZoneDataUtils;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}