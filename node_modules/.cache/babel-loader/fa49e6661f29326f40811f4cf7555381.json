{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\TransactionHistory\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, NormalSelect } from \"component/common\";\nimport { InputSearch, TableWrapper } from \"component/common\";\nimport { NormalInput, NormalDateTime, NormalMultiSelect } from \"component/common\";\nimport \"./style.scss\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { history } from \"helpers\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, commonCreateApi } from \"redux/actions/common\";\nimport { withTranslation } from \"react-i18next\";\nimport { Toast } from \"service/toast\";\nexport class TransactionHistoryClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Cust Code\"\n      }, {\n        label: \"Cust Name\"\n      }, {\n        label: \"Paid On\"\n      }, {\n        label: \"Modified Date\",\n        className: \"d-none\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Invoice Amount\",\n        divClass: \"justify-content-end text-right\",\n        width: \"125px\"\n      }, {\n        label: \"Staff Amount\",\n        divClass: \"justify-content-end text-right\",\n        width: \"120px\"\n      }, {\n        label: \"Total Amount\",\n        className: \"d-none\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Paid Amount\",\n        className: \"d-none\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Item\",\n        width: \"300px\",\n        className: \"d-none\"\n      }, {\n        label: \"Transaction No\"\n      }, {\n        label: \"Reference No\"\n      }, {\n        label: \"Billed By\"\n      }, {\n        label: \"No of Qty\",\n        className: \"d-none\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"No of Lines\",\n        className: \"d-none\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"OR\",\n        className: \"d-none\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Status\"\n      }, {\n        label: \"Type\"\n      }, {\n        label: \"Payment Remark\"\n      }, {\n        label: \"\"\n      }],\n      billingList: [],\n      pageMeta: {\n        chunk: 10,\n        page: 1,\n        total: 10,\n        totalPages: 2\n      },\n      formField: {\n        fromDate: new Date(),\n        toDate: new Date(),\n        transCode: \"\",\n        salesStaff: [],\n        custName: \"\",\n        transtype: \"All\"\n      },\n      active: false,\n      currentIndex: -1,\n      page: 1,\n      limit: 10,\n      isOpenvoidCheckout: false,\n      transtypeOptions: [{\n        label: \"All\",\n        value: \"All\"\n      }, {\n        label: \"Sales\",\n        value: \"Sales\"\n      }, {\n        label: \"Void\",\n        value: \"Void\"\n      }, {\n        label: \"TD\",\n        value: \"TD\"\n      }, {\n        label: \"Non-Sales\",\n        value: \"NonSales\"\n      }],\n      settingData: {},\n      TotalTransactionAmount: 0,\n      TotalSalesAmount: 0,\n      salesdefaultStaff: [],\n      disbledstaffid: \"\"\n    };\n\n    this.getdefaultStaffList = async () => {\n      try {\n        let {\n          salesdefaultStaff,\n          formField\n        } = this.state;\n        this.props.getCommonApi(`empcartlist/?sales_staff=1&page=1&limit=1000&check=TransacHistory`).then(async res => {\n          console.log(res, \"salesdefaultstaff\");\n          salesdefaultStaff = [];\n          let {\n            data,\n            status\n          } = res;\n\n          if (status == 200) {\n            if (data.dataList) {\n              if (Number(this.props.tokenDetails.role_code) == 1) {\n                formField[\"salesStaff\"].push({\n                  value: \"0\",\n                  label: \"All\"\n                });\n                await this.setState({\n                  formField\n                });\n              } else {\n                for (let key of data.dataList) {\n                  salesdefaultStaff.push({\n                    value: key.id,\n                    label: key.emp_name\n                  });\n\n                  if (key.id == Number(this.props.tokenDetails.default_loginid) && Number(this.props.tokenDetails.role_code) != 1) {\n                    formField[\"salesStaff\"].push({\n                      value: key.id,\n                      label: key.emp_name\n                    });\n                    await this.setState({\n                      disbledstaffid: key.id,\n                      formField\n                    });\n                  }\n                }\n              }\n\n              await this.setState({\n                salesdefaultStaff\n              });\n              this.getTransactions();\n            } else {\n              this.getTransactions();\n            }\n          } else {\n            this.getTransactions();\n          }\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleItemSettings = () => {\n      let {\n        settingData\n      } = this.state;\n      this.props.getCommonApi(`userlist/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(key, \"settingsData changeprice\");\n\n        if (status === 200) {\n          settingData = data;\n          this.setState({\n            settingData\n          });\n        }\n      });\n    };\n\n    this.getTransactions = dStaffid => {\n      let {\n        billingList,\n        pageMeta,\n        formField,\n        page,\n        limit,\n        TotalTransactionAmount,\n        TotalSalesAmount,\n        disbledstaffid\n      } = this.state;\n      let {\n        fromDate,\n        toDate,\n        transCode,\n        salesStaff,\n        custName,\n        transtype\n      } = formField;\n      let selectedStaff = \"\";\n\n      if (dStaffid) {\n        selectedStaff = dStaffid;\n      } else {\n        selectedStaff = this.state.formField[\"salesStaff\"].map(e => e.value).reduce((a, e) => a === \"\" ? e : a + \",\" + e, \"\");\n      }\n\n      this.setState({\n        TotalTransactionAmount: 0,\n        TotalSalesAmount: 0\n      });\n      let From = new Date();\n\n      if (fromDate && fromDate !== \"\") {\n        From = fromDate;\n      } else {\n        this.setState({\n          fromDate: From\n        });\n      }\n\n      let To = new Date();\n\n      if (toDate && toDate !== \"\") {\n        To = toDate;\n      } else {\n        this.setState({\n          toDate: To\n        });\n      }\n\n      this.props.getCommonApi(`transactionhistory/?from_date=${dateFormat(From, \"yyyy-mm-dd\")}&to_date=${dateFormat(To, \"yyyy-mm-dd\")}&transac_no=${transCode}&sales_staffs=${selectedStaff}&cust_name=${custName}&page=${page}&limit=${limit}&invoice_type=${transtype}`).then(async res => {\n        console.log(res, \"transactionlistdsfdfaafg\");\n        await this.setState({\n          billingList: []\n        });\n        billingList = res.data.dataList;\n        pageMeta = res.data.meta.pagination;\n        TotalTransactionAmount = 0;\n        TotalSalesAmount = 0;\n\n        for (let line of res.data.dataList) {\n          TotalTransactionAmount += Number(line.sa_totamt);\n          TotalSalesAmount += Number(line.sales_amt);\n        }\n\n        this.setState({\n          billingList,\n          pageMeta,\n          TotalTransactionAmount,\n          TotalSalesAmount\n        });\n      });\n    };\n\n    this.handlePrint = id => {\n      let {\n        billingList,\n        pageMeta,\n        formField,\n        page,\n        limit\n      } = this.state;\n      let {\n        fromDate,\n        toDate,\n        transCode,\n        salesStaff,\n        custName\n      } = formField;\n      this.props.getCommonApi(`receiptpdf/?sa_transacno=${id}`).then(res => {});\n    };\n\n    this.handlePagination = async pageNo => {\n      let {\n        page\n      } = this.state;\n      page = pageNo.page;\n      await this.setState({\n        page\n      });\n      this.getTransactions();\n    };\n\n    this.handleShare = id => {\n      this.props.commonCreateApi(`receiptpdfsend/?sa_transacno=${id}`).then(res => {});\n    };\n\n    this.handleInvoice = id => {\n      this.props.getCommonApi(`customerreceiptprint/?sa_transacno=${id}`).then(res => {});\n    };\n\n    this.handleClick = key => {\n      if (!this.state.active) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      this.setState(prevState => ({\n        active: !prevState.active,\n        currentIndex: key\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleClick();\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formField\n      } = this.state;\n      formField[name] = value;\n      await this.setState({\n        formField\n      });\n    };\n\n    this.handleDatePick = async (name, value) => {\n      let {\n        formField\n      } = this.state;\n      formField[name] = value;\n      await this.setState({\n        formField\n      });\n    };\n\n    this.handleSearch = () => {\n      this.getTransactions();\n    };\n\n    this.handleMultiSelectDefaultStaff = async (data = []) => {\n      let {\n        formField,\n        salesdefaultStaff\n      } = this.state;\n      let AllisSelected = data.filter(acc => Number(acc.value) == 0).length;\n      let result = [];\n\n      if (AllisSelected > 0) {\n        data = [];\n        data.push({\n          value: \"0\",\n          label: \"All\"\n        });\n        let {\n          formField,\n          salesdefaultStaff\n        } = this.state;\n        formField[\"salesStaff\"] = data;\n        salesdefaultStaff = data;\n        await this.setState({\n          salesdefaultStaff,\n          formField\n        });\n      } else {\n        result = data;\n        formField[\"salesStaff\"] = result;\n        await this.setState({\n          formField\n        });\n        this.props.getCommonApi(`empcartlist/?sales_staff=1&page=1&limit=1000&check=TransacHistory`).then(async res => {\n          console.log(res, \"salesdefaultstaff\");\n          salesdefaultStaff = [];\n          let {\n            data,\n            status\n          } = res;\n\n          if (status == 200) {\n            if (data.dataList) {\n              for (let key of data.dataList) {\n                salesdefaultStaff.push({\n                  value: key.id,\n                  label: key.emp_name\n                });\n              }\n\n              await this.setState({\n                salesdefaultStaff\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.defaultAllUpdate = async () => {};\n  }\n\n  componentDidMount() {\n    let From = new Date();\n    let {\n      formField\n    } = this.state;\n    let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\n    formField[\"fromDate\"] = firstdayMonth;\n    this.setState({\n      formField\n    });\n    this.getdefaultStaffList();\n    this.handleItemSettings();\n  }\n\n  render() {\n    let {\n      headerDetails,\n      pageMeta,\n      billingList,\n      formField,\n      transtypeOptions,\n      settingData,\n      TotalTransactionAmount,\n      salesdefaultStaff,\n      disbledstaffid\n    } = this.state;\n    let {\n      fromDate,\n      toDate,\n      transCode,\n      salesStaff,\n      custName,\n      transtype\n    } = formField;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"billing-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label-head mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }\n    }, t(\"Transaction History\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row m-0 filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }\n    }, t(\"From Date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      inputcol: \"p-0 inTime\",\n      value: fromDate ? new Date(fromDate) : new Date(),\n      name: \"fromDate\" //className=\"dob-pick\"\n      ,\n      showYearDropdown: true,\n      dateFormat: \"dd/MM/yyyy\",\n      maxDate: new Date(toDate),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, t(\"To Date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalDateTime, {\n      onChange: this.handleDatePick,\n      inputcol: \"p-0 inTime\",\n      value: toDate ? new Date(toDate) : new Date(),\n      name: \"toDate\" // className=\"dob-pick\"\n      ,\n      showYearDropdown: true,\n      dateFormat: \"dd/MM/yyyy\",\n      minDate: new Date(fromDate),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }\n    }, t(\"Cust Name/ ref/ Code\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: custName,\n      name: \"custName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }\n    }, t(\"Sales Staff\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    }, Number(this.props.tokenDetails.role_code) == 1 ? /*#__PURE__*/React.createElement(NormalMultiSelect, {\n      id: `salesStaff`,\n      handleMultiSelect: this.handleMultiSelectDefaultStaff,\n      options: salesdefaultStaff,\n      value: salesStaff,\n      name: \"salesStaff\",\n      disabled: Number(this.props.tokenDetails.role_code) == 1 ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(NormalSelect, {\n      options: salesdefaultStaff,\n      value: disbledstaffid,\n      name: \"salesStaff\",\n      onChange: this.handleChange,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, t(\"Transaction Code\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: transCode,\n      name: \"transCode\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left w-100 text-black common-label-text mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }\n    }, t(\"Transaction Type\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholderrequired: false,\n      options: transtypeOptions,\n      value: t(transtype),\n      iconname: \"icon-down-key\",\n      name: \"transtype\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" w-100 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Search\",\n      outline: false,\n      onClick: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left col h6 w-100 fw-500 common-label-text pr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }\n    }, t(\"Total Staff Amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left h6 w-50 fw-500 common-label-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 19\n      }\n    }, \"$\", this.state.TotalSalesAmount ? Number(this.state.TotalSalesAmount).toFixed(2) : 0))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left col fs-11 w-60 fw-500 common-label-text pr-2 pt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }\n    }, t(\"Total Invoice Amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left fs-11 w-100 fw-500 common-label-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 19\n      }\n    }, \"$\", this.state.TotalTransactionAmount ? Number(this.state.TotalTransactionAmount).toFixed(2) : 0))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"billing-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: pageMeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 17\n      }\n    }, billingList ? billingList.map((dataitem, index) => {\n      let {\n        icon,\n        id,\n        sa_custno,\n        sa_custname,\n        sa_date,\n        sa_totamt,\n        sa_transacno_ref,\n        void_refno,\n        sa_staffname,\n        sa_status,\n        sa_transacno_type,\n        sa_transacno,\n        payment_remarks,\n        isvoid,\n        no_of_qty,\n        no_of_lines,\n        or,\n        paid_amount,\n        total_amount,\n        item,\n        new_date,\n        sales_amt\n      } = dataitem;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 31\n        }\n      }, sa_custno)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 31\n        }\n      }, sa_custname)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 31\n        }\n      }, sa_date)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 31\n        }\n      }, new_date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 31\n        }\n      }, sa_totamt)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 31\n        }\n      }, sales_amt)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 31\n        }\n      }, total_amount)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 31\n        }\n      }, paid_amount)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 31\n        }\n      }, item)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 31\n        }\n      }, sa_transacno_ref)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 31\n        }\n      }, void_refno)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 31\n        }\n      }, sa_staffname)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 31\n        }\n      }, no_of_qty)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 31\n        }\n      }, no_of_lines)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 31\n        }\n      }, or)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 31\n        }\n      }, sa_status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 31\n        }\n      }, sa_transacno_type)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 31\n        }\n      }, payment_remarks)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"mx-0\",\n        mainbgrev: true,\n        className: \"confirm fs-11\",\n        label: t(\"View\"),\n        outline: false,\n        onClick: () => history.push(`/admin/transactionhistory/print/bill/${sa_transacno}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 33\n        }\n      }), (Number(this.props.tokenDetails.role_code) == 1 || Number(this.props.tokenDetails.role_code) == 2) && settingData.showChangePrice ? /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"mx-0 ml-1\",\n        mainbgrev: true,\n        className: \"confirm fs-11\",\n        label: t(\"Change Price\"),\n        outline: false,\n        onClick: () => history.push(`/admin/transactionhistory/pricechange/${id}`),\n        disabled: !isvoid ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 35\n        }\n      }) : \"\")));\n    }) : null))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonCreateApi\n  }, dispatch);\n};\n\nexport const TransactionHistory = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TransactionHistoryClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/TransactionHistory/index.js"],"names":["React","Component","NormalButton","NormalSelect","InputSearch","TableWrapper","NormalInput","NormalDateTime","NormalMultiSelect","dateFormat","history","connect","bindActionCreators","getCommonApi","commonCreateApi","withTranslation","Toast","TransactionHistoryClass","state","headerDetails","label","className","divClass","width","billingList","pageMeta","chunk","page","total","totalPages","formField","fromDate","Date","toDate","transCode","salesStaff","custName","transtype","active","currentIndex","limit","isOpenvoidCheckout","transtypeOptions","value","settingData","TotalTransactionAmount","TotalSalesAmount","salesdefaultStaff","disbledstaffid","getdefaultStaffList","props","then","res","console","log","data","status","dataList","Number","tokenDetails","role_code","push","setState","key","id","emp_name","default_loginid","getTransactions","e","handleItemSettings","dStaffid","selectedStaff","map","reduce","a","From","To","meta","pagination","line","sa_totamt","sales_amt","handlePrint","handlePagination","pageNo","handleShare","handleInvoice","handleClick","document","addEventListener","handleOutsideClick","removeEventListener","prevState","node","contains","target","handleChange","name","handleDatePick","handleSearch","handleMultiSelectDefaultStaff","AllisSelected","filter","acc","length","result","defaultAllUpdate","componentDidMount","firstdayMonth","getFullYear","getMonth","render","t","toFixed","dataitem","index","icon","sa_custno","sa_custname","sa_date","sa_transacno_ref","void_refno","sa_staffname","sa_status","sa_transacno_type","sa_transacno","payment_remarks","isvoid","no_of_qty","no_of_lines","or","paid_amount","total_amount","item","new_date","showChangePrice","mapStateToProps","authStore","mapDispatchToProps","dispatch","TransactionHistory"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NormalButton, NormalSelect } from \"component/common\";\r\nimport { InputSearch, TableWrapper } from \"component/common\";\r\nimport {\r\n  NormalInput,\r\n  NormalDateTime,\r\n  NormalMultiSelect,\r\n} from \"component/common\";\r\n\r\nimport \"./style.scss\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { history } from \"helpers\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, commonCreateApi } from \"redux/actions/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nexport class TransactionHistoryClass extends Component {\r\n  state = {\r\n    headerDetails: [\r\n      { label: \"Cust Code\" },\r\n      { label: \"Cust Name\" },\r\n      { label: \"Paid On\" },\r\n      {\r\n        label: \"Modified Date\",\r\n        className: \"d-none\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Invoice Amount\",\r\n        divClass: \"justify-content-end text-right\",\r\n        width: \"125px\",\r\n      },\r\n      {\r\n        label: \"Staff Amount\",\r\n        divClass: \"justify-content-end text-right\",\r\n        width: \"120px\",\r\n      },\r\n      {\r\n        label: \"Total Amount\",\r\n        className: \"d-none\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Paid Amount\",\r\n        className: \"d-none\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Item\", width: \"300px\", className: \"d-none\" },\r\n      { label: \"Transaction No\" },\r\n      { label: \"Reference No\" },\r\n      { label: \"Billed By\" },\r\n      {\r\n        label: \"No of Qty\",\r\n        className: \"d-none\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"No of Lines\",\r\n        className: \"d-none\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"OR\",\r\n        className: \"d-none\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Status\" },\r\n      { label: \"Type\" },\r\n      { label: \"Payment Remark\" },\r\n      { label: \"\" },\r\n    ],\r\n    billingList: [],\r\n    pageMeta: {\r\n      chunk: 10,\r\n      page: 1,\r\n      total: 10,\r\n      totalPages: 2,\r\n    },\r\n    formField: {\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      transCode: \"\",\r\n      salesStaff: [],\r\n      custName: \"\",\r\n      transtype: \"All\",\r\n    },\r\n    active: false,\r\n    currentIndex: -1,\r\n    page: 1,\r\n    limit: 10,\r\n    isOpenvoidCheckout: false,\r\n    transtypeOptions: [\r\n      { label: \"All\", value: \"All\" },\r\n      { label: \"Sales\", value: \"Sales\" },\r\n      { label: \"Void\", value: \"Void\" },\r\n      { label: \"TD\", value: \"TD\" },\r\n      { label: \"Non-Sales\", value: \"NonSales\" },\r\n    ],\r\n    settingData: {},\r\n    TotalTransactionAmount: 0,\r\n    TotalSalesAmount: 0,\r\n    salesdefaultStaff: [],\r\n    disbledstaffid: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    let From = new Date();\r\n    let { formField } = this.state;\r\n    let firstdayMonth = new Date(From.getFullYear(), From.getMonth(), 1);\r\n    formField[\"fromDate\"] = firstdayMonth;\r\n    this.setState({\r\n      formField,\r\n    });\r\n    this.getdefaultStaffList();\r\n    this.handleItemSettings();\r\n  }\r\n\r\n  getdefaultStaffList = async () => {\r\n    try {\r\n      let { salesdefaultStaff, formField } = this.state;\r\n\r\n      this.props\r\n        .getCommonApi(\r\n          `empcartlist/?sales_staff=1&page=1&limit=1000&check=TransacHistory`\r\n        )\r\n        .then(async res => {\r\n          console.log(res, \"salesdefaultstaff\");\r\n\r\n          salesdefaultStaff = [];\r\n          let { data, status } = res;\r\n          if (status == 200) {\r\n            if (data.dataList) {\r\n              if (Number(this.props.tokenDetails.role_code) == 1) {\r\n                formField[\"salesStaff\"].push({\r\n                  value: \"0\",\r\n                  label: \"All\",\r\n                });\r\n                await this.setState({\r\n                  formField,\r\n                });\r\n              } else {\r\n                for (let key of data.dataList) {\r\n                  salesdefaultStaff.push({\r\n                    value: key.id,\r\n                    label: key.emp_name,\r\n                  });\r\n\r\n                  if (\r\n                    key.id == Number(this.props.tokenDetails.default_loginid) &&\r\n                    Number(this.props.tokenDetails.role_code) != 1\r\n                  ) {\r\n                    formField[\"salesStaff\"].push({\r\n                      value: key.id,\r\n                      label: key.emp_name,\r\n                    });\r\n\r\n                    await this.setState({\r\n                      disbledstaffid: key.id,\r\n                      formField,\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n              await this.setState({ salesdefaultStaff });\r\n              this.getTransactions();\r\n            } else {\r\n              this.getTransactions();\r\n            }\r\n          } else {\r\n            this.getTransactions();\r\n          }\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  handleItemSettings = () => {\r\n    let { settingData } = this.state;\r\n    this.props.getCommonApi(`userlist/`).then(key => {\r\n      let { status, data } = key;\r\n      console.log(key, \"settingsData changeprice\");\r\n      if (status === 200) {\r\n        settingData = data;\r\n        this.setState({ settingData });\r\n      }\r\n    });\r\n  };\r\n  getTransactions = dStaffid => {\r\n    let {\r\n      billingList,\r\n      pageMeta,\r\n      formField,\r\n      page,\r\n      limit,\r\n      TotalTransactionAmount,\r\n      TotalSalesAmount,\r\n      disbledstaffid,\r\n    } = this.state;\r\n    let { fromDate, toDate, transCode, salesStaff, custName, transtype } =\r\n      formField;\r\n    let selectedStaff = \"\";\r\n    if (dStaffid) {\r\n      selectedStaff = dStaffid;\r\n    } else {\r\n      selectedStaff = this.state.formField[\"salesStaff\"]\r\n        .map(e => e.value)\r\n        .reduce((a, e) => (a === \"\" ? e : a + \",\" + e), \"\");\r\n    }\r\n    this.setState({ TotalTransactionAmount: 0, TotalSalesAmount: 0 });\r\n    let From = new Date();\r\n    if (fromDate && fromDate !== \"\") {\r\n      From = fromDate;\r\n    } else {\r\n      this.setState({ fromDate: From });\r\n    }\r\n    let To = new Date();\r\n    if (toDate && toDate !== \"\") {\r\n      To = toDate;\r\n    } else {\r\n      this.setState({ toDate: To });\r\n    }\r\n    this.props\r\n      .getCommonApi(\r\n        `transactionhistory/?from_date=${dateFormat(\r\n          From,\r\n          \"yyyy-mm-dd\"\r\n        )}&to_date=${dateFormat(\r\n          To,\r\n          \"yyyy-mm-dd\"\r\n        )}&transac_no=${transCode}&sales_staffs=${selectedStaff}&cust_name=${custName}&page=${page}&limit=${limit}&invoice_type=${transtype}`\r\n      )\r\n      .then(async res => {\r\n        console.log(res, \"transactionlistdsfdfaafg\");\r\n        await this.setState({ billingList: [] });\r\n        billingList = res.data.dataList;\r\n        pageMeta = res.data.meta.pagination;\r\n        TotalTransactionAmount = 0;\r\n        TotalSalesAmount = 0;\r\n        for (let line of res.data.dataList) {\r\n          TotalTransactionAmount += Number(line.sa_totamt);\r\n          TotalSalesAmount += Number(line.sales_amt);\r\n        }\r\n        this.setState({\r\n          billingList,\r\n          pageMeta,\r\n          TotalTransactionAmount,\r\n          TotalSalesAmount,\r\n        });\r\n      });\r\n  };\r\n  handlePrint = id => {\r\n    let { billingList, pageMeta, formField, page, limit } = this.state;\r\n    let { fromDate, toDate, transCode, salesStaff, custName } = formField;\r\n    this.props.getCommonApi(`receiptpdf/?sa_transacno=${id}`).then(res => {});\r\n  };\r\n\r\n  handlePagination = async pageNo => {\r\n    let { page } = this.state;\r\n    page = pageNo.page;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    this.getTransactions();\r\n  };\r\n\r\n  handleShare = id => {\r\n    this.props\r\n      .commonCreateApi(`receiptpdfsend/?sa_transacno=${id}`)\r\n      .then(res => {});\r\n  };\r\n\r\n  handleInvoice = id => {\r\n    this.props\r\n      .getCommonApi(`customerreceiptprint/?sa_transacno=${id}`)\r\n      .then(res => {});\r\n  };\r\n\r\n  handleClick = key => {\r\n    if (!this.state.active) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      active: !prevState.active,\r\n      currentIndex: key,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleClick();\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formField } = this.state;\r\n    formField[name] = value;\r\n    await this.setState({\r\n      formField,\r\n    });\r\n  };\r\n\r\n  handleDatePick = async (name, value) => {\r\n    let { formField } = this.state;\r\n    formField[name] = value;\r\n    await this.setState({\r\n      formField,\r\n    });\r\n  };\r\n\r\n  handleSearch = () => {\r\n    this.getTransactions();\r\n  };\r\n\r\n  handleMultiSelectDefaultStaff = async (data = []) => {\r\n    let { formField, salesdefaultStaff } = this.state;\r\n\r\n    let AllisSelected = data.filter(acc => Number(acc.value) == 0).length;\r\n    let result = [];\r\n    if (AllisSelected > 0) {\r\n      data = [];\r\n      data.push({ value: \"0\", label: \"All\" });\r\n      let { formField, salesdefaultStaff } = this.state;\r\n      formField[\"salesStaff\"] = data;\r\n\r\n      salesdefaultStaff = data;\r\n\r\n      await this.setState({\r\n        salesdefaultStaff,\r\n        formField,\r\n      });\r\n    } else {\r\n      result = data;\r\n\r\n      formField[\"salesStaff\"] = result;\r\n      await this.setState({\r\n        formField,\r\n      });\r\n      this.props\r\n        .getCommonApi(\r\n          `empcartlist/?sales_staff=1&page=1&limit=1000&check=TransacHistory`\r\n        )\r\n        .then(async res => {\r\n          console.log(res, \"salesdefaultstaff\");\r\n\r\n          salesdefaultStaff = [];\r\n          let { data, status } = res;\r\n          if (status == 200) {\r\n            if (data.dataList) {\r\n              for (let key of data.dataList) {\r\n                salesdefaultStaff.push({\r\n                  value: key.id,\r\n                  label: key.emp_name,\r\n                });\r\n              }\r\n              await this.setState({ salesdefaultStaff });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n  defaultAllUpdate = async () => {};\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      pageMeta,\r\n      billingList,\r\n      formField,\r\n      transtypeOptions,\r\n      settingData,\r\n      TotalTransactionAmount,\r\n      salesdefaultStaff,\r\n      disbledstaffid,\r\n    } = this.state;\r\n    let { fromDate, toDate, transCode, salesStaff, custName, transtype } =\r\n      formField;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"billing-section\">\r\n          <div className=\"col-md-12 d-flex align-items-center\">\r\n            <p className=\"label-head mb-4\">{t(\"Transaction History\")}</p>\r\n          </div>\r\n          <div className=\"row m-0 filter\">\r\n            <div className=\"col-md-3 col-12\">\r\n              <div className=\"d-flex mb-2\">\r\n                <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                  {t(\"From Date\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalDateTime\r\n                    onChange={this.handleDatePick}\r\n                    inputcol=\"p-0 inTime\"\r\n                    value={fromDate ? new Date(fromDate) : new Date()}\r\n                    name=\"fromDate\"\r\n                    //className=\"dob-pick\"\r\n                    showYearDropdown={true}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    maxDate={new Date(toDate)}\r\n                    showDisabledMonthNavigation\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex mb-2\">\r\n                <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                  {t(\"To Date\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalDateTime\r\n                    onChange={this.handleDatePick}\r\n                    inputcol=\"p-0 inTime\"\r\n                    value={toDate ? new Date(toDate) : new Date()}\r\n                    name=\"toDate\"\r\n                    // className=\"dob-pick\"\r\n                    showYearDropdown={true}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    minDate={new Date(fromDate)}\r\n                    showDisabledMonthNavigation\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 col-12\">\r\n              <div className=\"d-flex mb-2\">\r\n                <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                  {t(\"Cust Name/ ref/ Code\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    value={custName}\r\n                    name=\"custName\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex mb-2\">\r\n                <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                  {t(\"Sales Staff\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  {Number(this.props.tokenDetails.role_code) == 1 ? (\r\n                    <NormalMultiSelect\r\n                      id={`salesStaff`}\r\n                      handleMultiSelect={this.handleMultiSelectDefaultStaff}\r\n                      options={salesdefaultStaff}\r\n                      value={salesStaff}\r\n                      name=\"salesStaff\"\r\n                      disabled={\r\n                        Number(this.props.tokenDetails.role_code) == 1\r\n                          ? false\r\n                          : true\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <NormalSelect\r\n                      options={salesdefaultStaff}\r\n                      value={disbledstaffid}\r\n                      name=\"salesStaff\"\r\n                      onChange={this.handleChange}\r\n                      disabled={true}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 col-12\">\r\n              <div className=\"d-flex mb-2\">\r\n                <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                  {t(\"Transaction Code\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    value={transCode}\r\n                    name=\"transCode\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex mb-2\">\r\n                <label className=\"text-left w-100 text-black common-label-text mr-2\">\r\n                  {t(\"Transaction Type\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalSelect\r\n                    placeholderrequired={false}\r\n                    options={transtypeOptions}\r\n                    value={t(transtype)}\r\n                    iconname=\"icon-down-key\"\r\n                    name=\"transtype\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-2 col-12\">\r\n              <div className=\" w-100 mb-2\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label=\"Search\"\r\n                  outline={false}\r\n                  onClick={this.handleSearch}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"d-flex w-100\">\r\n                <label className=\"text-left col h6 w-100 fw-500 common-label-text pr-1\">\r\n                  {t(\"Total Staff Amount\")}\r\n                </label>\r\n                <div className=\"col\">\r\n                  <label className=\"text-left h6 w-50 fw-500 common-label-text\">\r\n                    $\r\n                    {this.state.TotalSalesAmount\r\n                      ? Number(this.state.TotalSalesAmount).toFixed(2)\r\n                      : 0}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-100\">\r\n                <label className=\"text-left col fs-11 w-60 fw-500 common-label-text pr-2 pt-1\">\r\n                  {t(\"Total Invoice Amount\")}\r\n                </label>\r\n                <div className=\"\">\r\n                  <label className=\"text-left fs-11 w-100 fw-500 common-label-text\">\r\n                    $\r\n                    {this.state.TotalTransactionAmount\r\n                      ? Number(this.state.TotalTransactionAmount).toFixed(2)\r\n                      : 0}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"billing-table\">\r\n            <div className=\"py-4\">\r\n              <div className=\"table-container\">\r\n                <TableWrapper\r\n                  headerDetails={headerDetails}\r\n                  queryHandler={this.handlePagination}\r\n                  pageMeta={pageMeta}\r\n                >\r\n                  {billingList\r\n                    ? billingList.map((dataitem, index) => {\r\n                        let {\r\n                          icon,\r\n                          id,\r\n                          sa_custno,\r\n                          sa_custname,\r\n                          sa_date,\r\n                          sa_totamt,\r\n                          sa_transacno_ref,\r\n                          void_refno,\r\n                          sa_staffname,\r\n                          sa_status,\r\n                          sa_transacno_type,\r\n                          sa_transacno,\r\n                          payment_remarks,\r\n                          isvoid,\r\n                          no_of_qty,\r\n                          no_of_lines,\r\n                          or,\r\n                          paid_amount,\r\n                          total_amount,\r\n                          item,\r\n                          new_date,\r\n                          sales_amt,\r\n                        } = dataitem;\r\n                        return (\r\n                          <tr key={index}>\r\n                            {/* {Number(this.props.tokenDetails.role_code) == 1 ||\r\n                            Number(this.props.tokenDetails.role_code) == 2 ? (\r\n                              <td className=\"position-relative\">\r\n                                <NormalButton\r\n                                  buttonClass={\"mx-0\"}\r\n                                  mainbgrev={true}\r\n                                  className=\"confirm fs-11\"\r\n                                  label={t(\"Change Price\")}\r\n                                  outline={false}\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      `/admin/transactionhistory/pricechange/${id}`\r\n                                    )\r\n                                  }\r\n                                  disabled={!isvoid ? false : true}\r\n                                />\r\n                              </td>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n\r\n                            <td>\r\n                              <div className=\"text-left\">{sa_custno}</div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-left\">{sa_custname}</div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-right\">{sa_date}</div>\r\n                            </td>\r\n                            <td className=\"d-none\">\r\n                              <div className=\"text-right\">{new_date}</div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-right\">{sa_totamt}</div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-right\">{sales_amt}</div>\r\n                            </td>\r\n                            <td className=\"d-none\">\r\n                              <div className=\"text-right\">{total_amount}</div>\r\n                            </td>\r\n                            <td className=\"d-none\">\r\n                              <div className=\"text-right\">{paid_amount}</div>\r\n                            </td>\r\n                            <td className=\"d-none\">\r\n                              <div className=\"text-left\">{item}</div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-left\">\r\n                                {sa_transacno_ref}\r\n                              </div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-left\">{void_refno}</div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-left\">{sa_staffname}</div>\r\n                            </td>\r\n                            <td className=\"d-none\">\r\n                              <div className=\"text-right\">{no_of_qty}</div>\r\n                            </td>\r\n                            <td className=\"d-none\">\r\n                              <div className=\"text-right\">{no_of_lines}</div>\r\n                            </td>\r\n                            <td className=\"d-none\">\r\n                              <div className=\"text-right\">{or}</div>\r\n                            </td>\r\n\r\n                            <td>\r\n                              <div className=\"text-left\">{sa_status}</div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-left\">\r\n                                {sa_transacno_type}\r\n                              </div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-left\">{payment_remarks}</div>\r\n                            </td>\r\n                            <td className=\"position-relative\">\r\n                              <div className=\"d-flex justify-content-center\">\r\n                                <NormalButton\r\n                                  buttonClass={\"mx-0\"}\r\n                                  mainbgrev={true}\r\n                                  className=\"confirm fs-11\"\r\n                                  label={t(\"View\")}\r\n                                  outline={false}\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      `/admin/transactionhistory/print/bill/${sa_transacno}`\r\n                                    )\r\n                                  }\r\n                                />\r\n                                {(Number(this.props.tokenDetails.role_code) ==\r\n                                  1 ||\r\n                                  Number(this.props.tokenDetails.role_code) ==\r\n                                    2) &&\r\n                                settingData.showChangePrice ? (\r\n                                  <NormalButton\r\n                                    buttonClass={\"mx-0 ml-1\"}\r\n                                    mainbgrev={true}\r\n                                    className=\"confirm fs-11\"\r\n                                    label={t(\"Change Price\")}\r\n                                    outline={false}\r\n                                    onClick={() =>\r\n                                      history.push(\r\n                                        `/admin/transactionhistory/pricechange/${id}`\r\n                                      )\r\n                                    }\r\n                                    disabled={!isvoid ? false : true}\r\n                                  />\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    : null}\r\n                </TableWrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonCreateApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TransactionHistory = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(TransactionHistoryClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}