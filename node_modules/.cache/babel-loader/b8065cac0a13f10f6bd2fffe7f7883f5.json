{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Backend\\\\Itemclassification\\\\Range\\\\Prepaid\\\\Editpage.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, NormalCheckbox, NormalInput, NormalSelect } from \"component/common\";\nimport { withTranslation } from \"react-i18next\";\nimport { NewItemRanges, ItemBrands, rangelists, updateCommon } from \"redux/actions/Backend\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Toast } from \"service/toast\";\nexport default class EditprepaidClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemId: null,\n      desc: null,\n      brandlist: [],\n      brand: null,\n      checked: true\n    };\n\n    this.componentDidMount = () => {\n      let {\n        itemId\n      } = this.state;\n      itemId = window.location.pathname.split(\"/\")[4];\n      this.setState({\n        itemId\n      });\n      console.log(itemId);\n      this.Listofbrans({});\n      this.Listofrange(itemId);\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.Listofrange = async code => {\n      let {\n        desc,\n        brand,\n        checked,\n        temp\n      } = this.state;\n      await this.props.rangelists().then(res => {\n        let objIndex = res.findIndex(obj => obj.itmCode == code);\n        console.log(objIndex);\n        temp = res[objIndex];\n        this.setState({\n          temp\n        });\n        console.log(temp);\n        desc = temp.itmDesc;\n        brand = temp.itmBrand;\n        checked = temp.itmStatus;\n        console.log(brand);\n        this.setState({\n          desc,\n          brand,\n          checked\n        });\n      });\n    };\n\n    this.Listofbrans = async () => {\n      await this.props.ItemBrands().then(res => {\n        console.log(res);\n        let {\n          brandlist\n        } = this.state;\n\n        for (let key of res) {\n          brandlist.push({\n            value: key.itmCode,\n            label: key.itmDesc\n          });\n        }\n\n        console.log(brandlist);\n        this.setState({\n          brandlist,\n          is_loading: false\n        });\n        console.log(brandlist.length);\n      });\n    };\n\n    this.temp = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      console.log(value, name);\n      let {\n        code,\n        desc,\n        brand,\n        checked\n      } = this.state;\n\n      if (name == \"code\") {\n        code = value;\n        this.setState({\n          code\n        });\n      }\n\n      if (name == \"desc\") {\n        desc = value;\n        this.setState({\n          desc\n        });\n      }\n\n      if (name == \"brand\") {\n        brand = value;\n        this.setState({\n          brand\n        });\n      }\n\n      if (name == \"checked\") {\n        checked = value;\n        this.setState({\n          checked\n        });\n      }\n    };\n\n    this.Addnewbrand = async () => {\n      let {\n        itemId,\n        desc,\n        brand,\n        checked\n      } = this.state;\n      let editbrand = {\n        itmCode: itemId,\n        itmDesc: desc,\n        itmStatus: checked,\n        itmSeq: null,\n        itmBrand: brand,\n        itmDept: null,\n        isproduct: false,\n        picPath: null,\n        prepaidForProduct: false,\n        prepaidForService: false,\n        prepaidForAll: false,\n        isservice: false,\n        isvoucher: false,\n        isprepaid: true,\n        iscompound: false\n      };\n      await this.props.updateCommon(`ItemRanges/update?where=%7B%22itmCode%22%3A%20%22${this.state.itemId}%22%7D\n\n    `, editbrand).then(data => {\n        Toast({\n          type: \"success\",\n          message: \"Successfully updated\"\n        });\n      }).catch(e => console.log(e));\n    };\n  }\n\n  render() {\n    let {\n      t\n    } = this.props;\n    let {\n      itemId,\n      desc,\n      checked,\n      brand,\n      brandlist\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mt-5\",\n      style: {\n        marginLeft: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, t(\"Product Range\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, \"Code\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(NormalInput, {\n      value: itemId,\n      name: \"code\",\n      onChange: this.temp,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(NormalInput, {\n      value: desc,\n      name: \"desc\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, \"Brand\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(NormalSelect, {\n      options: brandlist,\n      value: brand,\n      onChange: this.temp,\n      name: \"brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mt-4 ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      checked: checked,\n      name: \"checked\",\n      onChange: this.temp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, t(\"Active\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      label: \"Update\",\n      onClick: () => this.Addnewbrand(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    NewItemRanges,\n    ItemBrands,\n    updateCommon,\n    rangelists\n  }, dispatch);\n};\n\nexport const Editprepaid = withTranslation()(connect(null, mapDispatchToProps)(EditprepaidClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Backend/Itemclassification/Range/Prepaid/Editpage.js"],"names":["React","Component","NormalButton","NormalCheckbox","NormalInput","NormalSelect","withTranslation","NewItemRanges","ItemBrands","rangelists","updateCommon","connect","bindActionCreators","Toast","EditprepaidClass","state","itemId","desc","brandlist","brand","checked","componentDidMount","window","location","pathname","split","setState","console","log","Listofbrans","Listofrange","updateState","data","isMounted","code","temp","props","then","res","objIndex","findIndex","obj","itmCode","itmDesc","itmBrand","itmStatus","key","push","value","label","is_loading","length","target","name","Addnewbrand","editbrand","itmSeq","itmDept","isproduct","picPath","prepaidForProduct","prepaidForService","prepaidForAll","isservice","isvoucher","isprepaid","iscompound","type","message","catch","e","render","t","marginLeft","color","mapDispatchToProps","dispatch","Editprepaid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalButton,\r\n  NormalCheckbox,\r\n  NormalInput,\r\n  NormalSelect,\r\n} from \"component/common\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  NewItemRanges,\r\n  ItemBrands,\r\n  rangelists,\r\n  updateCommon,\r\n} from \"redux/actions/Backend\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nexport default class EditprepaidClass extends Component {\r\n  state = {\r\n    itemId: null,\r\n    desc: null,\r\n    brandlist: [],\r\n    brand: null,\r\n    checked: true,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    let { itemId } = this.state;\r\n    itemId = window.location.pathname.split(\"/\")[4];\r\n    this.setState({ itemId });\r\n    console.log(itemId);\r\n    this.Listofbrans({});\r\n    this.Listofrange(itemId);\r\n  };\r\n\r\n  updateState = (data) => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  Listofrange = async (code) => {\r\n    let { desc, brand, checked, temp } = this.state;\r\n    await this.props.rangelists().then((res) => {\r\n      let objIndex = res.findIndex((obj) => obj.itmCode == code);\r\n      console.log(objIndex);\r\n      temp = res[objIndex];\r\n      this.setState({\r\n        temp,\r\n      });\r\n      console.log(temp);\r\n      desc = temp.itmDesc;\r\n      brand = temp.itmBrand;\r\n      checked = temp.itmStatus;\r\n      console.log(brand);\r\n      this.setState({\r\n        desc,\r\n        brand,\r\n        checked,\r\n      });\r\n    });\r\n  };\r\n  Listofbrans = async () => {\r\n    await this.props.ItemBrands().then((res) => {\r\n      console.log(res);\r\n      let { brandlist } = this.state;\r\n\r\n      for (let key of res) {\r\n        brandlist.push({ value: key.itmCode, label: key.itmDesc });\r\n      }\r\n      console.log(brandlist);\r\n      this.setState({\r\n        brandlist,\r\n        is_loading: false,\r\n      });\r\n      console.log(brandlist.length);\r\n    });\r\n  };\r\n\r\n  temp = ({ target: { value, name } }) => {\r\n    console.log(value, name);\r\n    let { code, desc, brand, checked } = this.state;\r\n    if (name == \"code\") {\r\n      code = value;\r\n      this.setState({ code });\r\n    }\r\n    if (name == \"desc\") {\r\n      desc = value;\r\n      this.setState({ desc });\r\n    }\r\n    if (name == \"brand\") {\r\n      brand = value;\r\n      this.setState({ brand });\r\n    }\r\n    if (name == \"checked\") {\r\n      checked = value;\r\n      this.setState({ checked });\r\n    }\r\n  };\r\n\r\n  Addnewbrand = async () => {\r\n    let { itemId, desc, brand, checked } = this.state;\r\n    let editbrand = {\r\n      itmCode: itemId,\r\n      itmDesc: desc,\r\n      itmStatus: checked,\r\n      itmSeq: null,\r\n      itmBrand: brand,\r\n      itmDept: null,\r\n      isproduct: false,\r\n      picPath: null,\r\n      prepaidForProduct: false,\r\n      prepaidForService: false,\r\n      prepaidForAll: false,\r\n      isservice: false,\r\n      isvoucher: false,\r\n      isprepaid: true,\r\n      iscompound: false,\r\n    };\r\n    await this.props\r\n      .updateCommon(\r\n        `ItemRanges/update?where=%7B%22itmCode%22%3A%20%22${this.state.itemId}%22%7D\r\n\r\n    `,\r\n        editbrand\r\n      )\r\n      .then((data) => {\r\n        Toast({\r\n          type: \"success\",\r\n          message: \"Successfully updated\",\r\n        });\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  render() {\r\n    let { t } = this.props;\r\n    let { itemId, desc, checked, brand, brandlist } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <h5 className=\"mt-5\" style={{ marginLeft: 15 }}>\r\n            {t(\"Product Range\")}\r\n          </h5>\r\n          <div className=\"d-flex mt-5\">\r\n            <div className=\"col-6\">\r\n              <span>Code</span>\r\n              <span style={{ color: \"red\" }}>*</span>\r\n              <NormalInput\r\n                value={itemId}\r\n                name=\"code\"\r\n                onChange={this.temp}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <span>Description</span>\r\n              <span style={{ color: \"red\" }}>*</span>\r\n              <NormalInput value={desc} name=\"desc\" onChange={this.temp} />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex mt-5\">\r\n            <div className=\"col-6\">\r\n              <span>Brand</span>\r\n              <span style={{ color: \"red\" }}>*</span>\r\n              <NormalSelect\r\n                options={brandlist}\r\n                value={brand}\r\n                onChange={this.temp}\r\n                name=\"brand\"\r\n              />\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"d-flex mt-4 ml-3\">\r\n                <NormalCheckbox\r\n                  checked={checked}\r\n                  name=\"checked\"\r\n                  onChange={this.temp}\r\n                />\r\n                <p>{t(\"Active\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-3 col-1\">\r\n            <NormalButton\r\n              mainbg={true}\r\n              label={\"Update\"}\r\n              onClick={() => this.Addnewbrand()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      NewItemRanges,\r\n      ItemBrands,\r\n      updateCommon,\r\n      rangelists,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const Editprepaid = withTranslation()(\r\n  connect(null, mapDispatchToProps)(EditprepaidClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}