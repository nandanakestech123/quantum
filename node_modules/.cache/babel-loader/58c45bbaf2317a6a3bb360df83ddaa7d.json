{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\treatmentDone\\\\TreatmentHistoryCart.js\";\nimport React, { Component } from \"react\";\nimport { TableWrapper, NormalSelect } from \"component/common\";\nimport { updateForm, getCommonApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport _ from \"lodash\";\nimport { TreatmentUsagePopup } from \"./TreatmentUsagePopup\";\nimport { withTranslation } from \"react-i18next\";\nimport { Toast } from \"service/toast\";\nexport class ListTreatmentHistoryCartClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Branch\"\n      }, {\n        label: \"Trans Date\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Purc Date\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Transac #\"\n      }, {\n        label: \"Treatment ID\"\n      }, {\n        label: \"Link Code\"\n      }, {\n        label: \"Treatment\"\n      }, {\n        label: \"Status\"\n      }, {\n        label: \"Record Status\"\n      }, {\n        label: \"Remarks\"\n      }, {\n        label: \"Customer Remarks\"\n      }, {\n        label: \"Type\"\n      }],\n      TreatmentHistory: [],\n      treatmentList: [],\n      meta: {},\n      customerNumber: 0,\n      yearList: [],\n      selectedYear: new Date().getFullYear(),\n      isTreatmentUsagePopup: false,\n      TreatmentHistoryId: 0,\n      cust_data: {}\n    };\n\n    this.componentDidMount = async () => {\n      await this.setState({\n        customerNumber: this.props.customerNumber\n      });\n      this.props.getCommonApi(\"treatmentdone/Year/\").then(key => {\n        let {\n          status,\n          data\n        } = key;\n        let {\n          yearList\n        } = this.state;\n\n        for (let value of data) {\n          yearList.push({\n            value: value,\n            label: value\n          });\n        }\n\n        this.setState({\n          yearList\n        });\n      });\n      this.getTreatmentHistoryList({});\n    };\n\n    this.getTreatmentHistoryList = data => {\n      let {\n        customerNumber,\n        selectedYear,\n        TreatmentHistory\n      } = this.state;\n\n      if (customerNumber > 0) {\n        let {\n          page = 1,\n          limit = 10,\n          search = \"\"\n        } = data;\n        this.props.getCommonApi(`treatmenthistory/?year=${selectedYear}&cust_id=${customerNumber}&page=${page}&limit=${limit}`).then(async res => {\n          await this.setState({\n            treatmentList: [],\n            meta: {}\n          });\n          let {\n            data,\n            status,\n            cust\n          } = res;\n          console.log(res, \"treatmenthistorycart\");\n\n          if (status === 200) {\n            if (data.dataList) {\n              this.setState({\n                treatmentList: data.dataList,\n                meta: data.meta.pagination,\n                cust_data: cust\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.handlehistoryYearChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        selectedYear\n      } = this.state;\n      selectedYear = value;\n      await this.setState({\n        selectedYear\n      });\n      this.getTreatmentHistoryList({});\n    };\n\n    this.handlePagination = page => {\n      this.getTreatmentHistoryList(page);\n    };\n\n    this.treatmentUsagePopupclose = () => {\n      this.setState(prevState => ({\n        isTreatmentUsagePopup: !prevState.isTreatmentUsagePopup\n      }));\n    };\n\n    this.treatmentUsagePopup = data => {\n      if (data.is_allow) {\n        if (data.status == \"Done\") {\n          this.setState(prevState => ({\n            TreatmentHistoryId: data.id,\n            isTreatmentUsagePopup: !prevState.isTreatmentUsagePopup\n          }));\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Treatment usage is not allowed in other outlets\"\n        });\n      }\n    };\n  }\n\n  render() {\n    let {\n      headerDetails,\n      treatmentList,\n      meta,\n      yearList,\n      selectedYear,\n      isTreatmentUsagePopup,\n      TreatmentHistoryId,\n      cust_data\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex treatment-done-new p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-12 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap select-year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-3 pl-0 mb-2 name py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, t(\"Select Year\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: yearList,\n      value: selectedYear,\n      name: \"selectedYear\",\n      onChange: this.handlehistoryYearChange,\n      className: \"selected-year mb-2 py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, t(\"Customer Name\"), \" : \", cust_data.cust_name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, t(\"Reference\"), \" : \", cust_data.cust_refer)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlePagination,\n      pageMeta: meta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, treatmentList && treatmentList.length > 0 ? treatmentList.map((item, index) => {\n      let {\n        trasac_date,\n        purchase_date,\n        transac,\n        treatment_code,\n        link_code,\n        course,\n        status,\n        record_status,\n        remarks,\n        cust_remark,\n        type,\n        site_code,\n        is_current\n      } = item;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        onClick: () => this.treatmentUsagePopup(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-left ${!is_current ? \"other-branch\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 23\n        }\n      }, site_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 23\n        }\n      }, trasac_date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 23\n        }\n      }, purchase_date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 23\n        }\n      }, transac)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 23\n        }\n      }, treatment_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }\n      }, link_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 23\n        }\n      }, course)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }\n      }, status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }\n      }, record_status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 23\n        }\n      }, remarks)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 23\n        }\n      }, cust_remark)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `\"text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }\n      }, type)));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, t(\"No Data Available\")))))), isTreatmentUsagePopup ? /*#__PURE__*/React.createElement(TreatmentUsagePopup, {\n      isTreatmentUsagePopup: isTreatmentUsagePopup,\n      treatmentUsagePopup: this.treatmentUsagePopup,\n      treatmentUsagePopupclose: this.treatmentUsagePopupclose,\n      TreatmentHistoryId: TreatmentHistoryId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({// filter: state.dashboard\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateForm,\n    getCommonApi\n  }, dispatch);\n};\n\nexport const TreatmentHistoryCart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ListTreatmentHistoryCartClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Cart/treatmentDone/TreatmentHistoryCart.js"],"names":["React","Component","TableWrapper","NormalSelect","updateForm","getCommonApi","connect","bindActionCreators","_","TreatmentUsagePopup","withTranslation","Toast","ListTreatmentHistoryCartClass","state","headerDetails","label","divClass","TreatmentHistory","treatmentList","meta","customerNumber","yearList","selectedYear","Date","getFullYear","isTreatmentUsagePopup","TreatmentHistoryId","cust_data","componentDidMount","setState","props","then","key","status","data","value","push","getTreatmentHistoryList","page","limit","search","res","cust","console","log","dataList","pagination","handlehistoryYearChange","target","name","handlePagination","treatmentUsagePopupclose","prevState","treatmentUsagePopup","is_allow","id","type","message","render","t","cust_name","cust_refer","length","map","item","index","trasac_date","purchase_date","transac","treatment_code","link_code","course","record_status","remarks","cust_remark","site_code","is_current","mapStateToProps","mapDispatchToProps","dispatch","TreatmentHistoryCart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TableWrapper, NormalSelect } from \"component/common\";\r\nimport { updateForm, getCommonApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport _ from \"lodash\";\r\nimport { TreatmentUsagePopup } from \"./TreatmentUsagePopup\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nexport class ListTreatmentHistoryCartClass extends Component {\r\n  state = {\r\n    headerDetails: [\r\n      { label: \"Branch\" },\r\n      { label: \"Trans Date\", divClass: \"justify-content-end text-right\" },\r\n      { label: \"Purc Date\", divClass: \"justify-content-end text-right\" },\r\n      { label: \"Transac #\" },\r\n      { label: \"Treatment ID\" },\r\n      { label: \"Link Code\" },\r\n      { label: \"Treatment\" },\r\n      { label: \"Status\" },\r\n      { label: \"Record Status\" },\r\n      { label: \"Remarks\" },\r\n      { label: \"Customer Remarks\" },\r\n      { label: \"Type\" },\r\n    ],\r\n    TreatmentHistory: [],\r\n    treatmentList: [],\r\n    meta: {},\r\n    customerNumber: 0,\r\n    yearList: [],\r\n    selectedYear: new Date().getFullYear(),\r\n    isTreatmentUsagePopup: false,\r\n    TreatmentHistoryId: 0,\r\n    cust_data: {},\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await this.setState({\r\n      customerNumber: this.props.customerNumber,\r\n    });\r\n    this.props.getCommonApi(\"treatmentdone/Year/\").then(key => {\r\n      let { status, data } = key;\r\n      let { yearList } = this.state;\r\n      for (let value of data) {\r\n        yearList.push({ value: value, label: value });\r\n      }\r\n      this.setState({ yearList });\r\n    });\r\n\r\n    this.getTreatmentHistoryList({});\r\n  };\r\n\r\n  getTreatmentHistoryList = data => {\r\n    let { customerNumber, selectedYear, TreatmentHistory } = this.state;\r\n    if (customerNumber > 0) {\r\n      let { page = 1, limit = 10, search = \"\" } = data;\r\n      this.props\r\n        .getCommonApi(\r\n          `treatmenthistory/?year=${selectedYear}&cust_id=${customerNumber}&page=${page}&limit=${limit}`\r\n        )\r\n        .then(async res => {\r\n          await this.setState({ treatmentList: [], meta: {} });\r\n          let { data, status, cust } = res;\r\n          console.log(res, \"treatmenthistorycart\");\r\n          if (status === 200) {\r\n            if (data.dataList) {\r\n              this.setState({\r\n                treatmentList: data.dataList,\r\n                meta: data.meta.pagination,\r\n                cust_data: cust,\r\n              });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handlehistoryYearChange = async ({ target: { value, name } }) => {\r\n    let { selectedYear } = this.state;\r\n    selectedYear = value;\r\n    await this.setState({\r\n      selectedYear,\r\n    });\r\n    this.getTreatmentHistoryList({});\r\n  };\r\n\r\n  handlePagination = page => {\r\n    this.getTreatmentHistoryList(page);\r\n  };\r\n\r\n  treatmentUsagePopupclose = () => {\r\n    this.setState(prevState => ({\r\n      isTreatmentUsagePopup: !prevState.isTreatmentUsagePopup,\r\n    }));\r\n  };\r\n  treatmentUsagePopup = data => {\r\n    if (data.is_allow) {\r\n      if (data.status == \"Done\") {\r\n        this.setState(prevState => ({\r\n          TreatmentHistoryId: data.id,\r\n          isTreatmentUsagePopup: !prevState.isTreatmentUsagePopup,\r\n        }));\r\n      }\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Treatment usage is not allowed in other outlets\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      treatmentList,\r\n      meta,\r\n      yearList,\r\n      selectedYear,\r\n      isTreatmentUsagePopup,\r\n      TreatmentHistoryId,\r\n      cust_data,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"d-flex treatment-done-new p-3\">\r\n          <div className=\"col-md-12 col-12 header\">\r\n            <div className=\"d-flex flex-wrap select-year\">\r\n              <div className=\"col-12 col-md-3 pl-0 mb-2 name py-2\">\r\n                <div className=\"col-md-5\">\r\n                  <label>{t(\"Select Year\")}</label>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <NormalSelect\r\n                    // placeholder=\"Enter here\"\r\n                    options={yearList}\r\n                    value={selectedYear}\r\n                    name=\"selectedYear\"\r\n                    onChange={this.handlehistoryYearChange}\r\n                    className=\"selected-year mb-2 py-0\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-4 col-12\">\r\n                <div className=\"col-md-12\">\r\n                  <p>\r\n                    {t(\"Customer Name\")} : {cust_data.cust_name}\r\n                  </p>\r\n                  <p>\r\n                    {t(\"Reference\")} : {cust_data.cust_refer}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableWrapper\r\n            headerDetails={headerDetails}\r\n            queryHandler={this.handlePagination}\r\n            pageMeta={meta}\r\n          >\r\n            {treatmentList && treatmentList.length > 0 ? (\r\n              treatmentList.map((item, index) => {\r\n                let {\r\n                  trasac_date,\r\n                  purchase_date,\r\n                  transac,\r\n                  treatment_code,\r\n                  link_code,\r\n                  course,\r\n                  status,\r\n                  record_status,\r\n                  remarks,\r\n                  cust_remark,\r\n                  type,\r\n                  site_code,\r\n                  is_current,\r\n                } = item;\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    onClick={() => this.treatmentUsagePopup(item)}\r\n                  >\r\n                    <td>\r\n                      <div\r\n                        className={`text-left ${\r\n                          !is_current ? \"other-branch\" : \"\"\r\n                        }`}\r\n                      >\r\n                        {site_code}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`text-right`}>{trasac_date}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`text-right`}>{purchase_date}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{transac}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{treatment_code}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{link_code}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{course}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{status}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{record_status}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{remarks}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{cust_remark}</div>\r\n                    </td>\r\n                    <td>\r\n                      <div className={`\"text-left`}>{type}</div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"12\">\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    {t(\"No Data Available\")}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </TableWrapper>\r\n        </div>\r\n        {isTreatmentUsagePopup ? (\r\n          <TreatmentUsagePopup\r\n            isTreatmentUsagePopup={isTreatmentUsagePopup}\r\n            treatmentUsagePopup={this.treatmentUsagePopup}\r\n            treatmentUsagePopupclose={this.treatmentUsagePopupclose}\r\n            TreatmentHistoryId={TreatmentHistoryId}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // filter: state.dashboard\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      updateForm,\r\n      getCommonApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TreatmentHistoryCart = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(ListTreatmentHistoryCartClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}