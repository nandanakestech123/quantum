{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Project\\\\AddProject\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { Redirect } from \"react-router-dom\";\nimport { NormalInput, NormalSelect, NormalButton, NormalTextarea, NormalDateTime, NormalMultiSelect, NormalModal } from \"component/common\";\nimport { displayImg, dateFormat } from \"service/helperFunctions\"; // import { DragFileUpload } from \"../../../common\";\n\nimport { createProject, updateProject } from \"redux/actions/project\";\nimport { getJobtitle, getCommonApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { FormGroup, Label, Input } from \"reactstrap\"; // import { ScheduleTable } from \"./ScheduleTable\";\n\nimport { withTranslation } from \"react-i18next\";\nimport { Activities } from \"./activities\";\nimport { Quotation } from \"./quotation\";\nimport { PO } from \"./PO\";\nimport { NavLink } from \"react-router-dom\";\nimport { getTokenDetails } from \"redux/actions/auth\";\nimport addBtn from \"assets/images/add.png\";\nimport _ from \"lodash\";\nexport class AddProjectClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        projectTitle: \"\",\n        projectDesc: \"\",\n        status: \"\",\n        salesStaff: \"\",\n        operationStaff: \"\",\n        adminStaff: \"\",\n        custName: \"\",\n        contactName: \"\",\n        contactNumber: \"\",\n        addSalesStaff: \"\",\n        addOperationStaff: \"\",\n        addAdminStaff: \"\",\n        custCorporate: false,\n        contactPerson: [],\n        custId: 0\n      },\n      // scheduleOptions: [],\n      projectList: [],\n      statusOption: [],\n      salesStaffOption: [],\n      operationStaffOption: [],\n      adminStaffOption: [],\n      salesStaffTag: [],\n      operationStaffTag: [],\n      adminStaffTag: [],\n      // locationOption: [],\n      // levelList: [],\n      is_loading: true,\n      isMounted: true,\n      active: false,\n      isModalVisible: false,\n      isModalVisibleOperation: false,\n      isModalVisibleAdmin: false,\n      currentValue: 0,\n      // navLinks: [\n      //   { to: \"/admin/project/add\", label: \"Activities\", id: \"Activities\" },\n      //   { to: \"/admin/project/add\", label: \"Quotation\", id: \"Quotation\" },\n      //   { to: \"/admin/project/add\", label: \"Purchase Order\", id: \"PO\" },\n      // ],\n      navLinks: [{\n        to: this.props.location.pathname,\n        label: \"Activities\",\n        id: \"Activities\"\n      }, {\n        to: this.props.location.pathname,\n        label: \"Quotation\",\n        id: \"Quotation\"\n      }, {\n        to: this.props.location.pathname,\n        label: \"Purchase Order\",\n        id: \"PO\"\n      }],\n      selectedMenu: \"Activities\",\n      visible: false,\n      customerOption: []\n    };\n\n    this.componentWillMount = () => {\n      this.getStatus();\n      this.getSalesStaff();\n      this.getOperationStaff();\n      this.getAdminStaff(); // console.log(\"componentWillMount statusoption\",this.state.statusOption )\n\n      this.validator = new SimpleReactValidator({\n        validators: {},\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n    };\n\n    this.updateState = data => {\n      if (this.state.isMounted) this.setState(data);\n    };\n\n    this.getStatus = () => {\n      let {\n        statusOption\n      } = this.state;\n      console.log(\"this.props addpro\", this.props);\n      console.log(\"this.props.match.params.id addpro\", this.props.match.params.id); // statusOption = [];\n\n      this.props.getCommonApi(`dropdownproject`).then(res => {\n        // activeMenu = []\n        console.log(\"res.data\", res);\n\n        for (let key of res.data) {\n          statusOption.push({\n            value: key.id,\n            label: key.dropdown_item,\n            code: key.dropdown_desc,\n            active: key.active\n          });\n        }\n\n        console.log(\"statusOption\", statusOption);\n        this.updateState({\n          statusOption\n        });\n\n        if (this.props.match.params.id) {\n          this.autoFillForm();\n        }\n      });\n    };\n\n    this.getSalesStaff = () => {\n      let {\n        salesStaffOption\n      } = this.state;\n      this.props.getCommonApi(`empcartlist/?sales_staff=1&page=1&limit=1000`).then(res => {\n        // activeMenu = []\n        console.log(\"res.data\", res);\n\n        for (let key of res.data.dataList) {\n          salesStaffOption.push({\n            id: key.id,\n            value: key.emp_name,\n            label: key.emp_name,\n            pic: key.emp_pic\n          });\n        }\n\n        console.log(\"salesStaffOption\", salesStaffOption);\n        this.updateState({\n          salesStaffOption\n        });\n\n        if (this.props.match.params.id) {\n          this.autoFillForm();\n        }\n      });\n    };\n\n    this.getOperationStaff = () => {\n      let {\n        operationStaffOption\n      } = this.state;\n      this.props.getCommonApi(`empcartlist/?sales_staff=2&page=1&limit=1000`).then(res => {\n        // activeMenu = []\n        console.log(\"res.data\", res);\n\n        for (let key of res.data.dataList) {\n          operationStaffOption.push({\n            id: key.id,\n            value: key.emp_name,\n            label: key.emp_name,\n            pic: key.emp_pic\n          });\n        }\n\n        console.log(\"operationStaffOption\", operationStaffOption);\n        this.updateState({\n          operationStaffOption\n        });\n\n        if (this.props.match.params.id) {\n          this.autoFillForm();\n        }\n      });\n    };\n\n    this.getAdminStaff = () => {\n      let {\n        adminStaffOption\n      } = this.state;\n      this.props.getCommonApi(`empcartlist/?sales_staff=0&page=1&limit=1000`).then(res => {\n        // activeMenu = []\n        console.log(\"res.data\", res);\n\n        for (let key of res.data.dataList) {\n          adminStaffOption.push({\n            id: key.id,\n            value: key.emp_name,\n            label: key.emp_name,\n            pic: key.emp_pic\n          });\n        }\n\n        console.log(\"adminStaffOption\", adminStaffOption);\n        this.updateState({\n          adminStaffOption\n        });\n\n        if (this.props.match.params.id) {\n          this.autoFillForm();\n        }\n      });\n    };\n\n    this.handleToogleModal = () => {\n      let {\n        isModalVisible\n      } = this.state;\n      isModalVisible = !isModalVisible;\n      this.setState({\n        isModalVisible\n      });\n    };\n\n    this.handleToogleModalOperation = () => {\n      let {\n        isModalVisibleOperation\n      } = this.state;\n      isModalVisibleOperation = !isModalVisibleOperation;\n      this.setState({\n        isModalVisibleOperation\n      });\n    };\n\n    this.handleToogleModalAdmin = () => {\n      let {\n        isModalVisibleAdmin\n      } = this.state;\n      isModalVisibleAdmin = !isModalVisibleAdmin;\n      this.setState({\n        isModalVisibleAdmin\n      });\n    };\n\n    this.autoFillForm = () => {\n      // let { statusOption } = this.state;\n      this.props.getCommonApi(`projectlist/?searchid=${this.props.match.params.id}`).then(async res => {\n        console.log(\"project dataList\", res.data.dataList);\n        console.log(\"project dataList cust name\", res.data.dataList[0].customer_name); // custName = res.data.dataList[0].customer_name\n        // this.state.projectList = res.data.dataList\n\n        this.state.formFields[\"projectTitle\"] = res.data.dataList[0].title;\n        this.state.formFields[\"projectDesc\"] = res.data.dataList[0].desc; // const people = [ {name: \"john\", age:23},\n        //         {name: \"john\", age:43},\n        //         {name: \"jim\", age:101},\n        //         {name: \"bob\", age:67} ];\n        //   // const john = people.find(person => person.name === john);\n        // console.log(\"people testing\",people.find(person => person.name === \"john\"));\n        // const statusOPtionLoop = this.state.statusOption\n        // console.log(\"statusOPtionLoop\",statusOPtionLoop[0])\n        // for (let x in statusOPtionLoop){\n        //   console.log(\"statusOPtionLoop elements\", x)\n        // }\n        // console.log(\"statusOPtionLoop\",statusOPtionLoop.find((person => person.label === \"Lead\")))\n        // console.log(\"statusOptionTemp\",statusOptionTemp)\n        // console.log(\"statusOptionTemp[0]\",statusOptionTemp[0])\n\n        console.log(\"statusOption in prefill\", this.state.statusOption);\n        console.log(\"res.data.dataList[0].status\", res.data.dataList[0].status);\n        this.setState({\n          adminStaffTag: JSON.parse(res.data.dataList[0].admin_staff)\n        });\n        this.setState({\n          operationStaffTag: JSON.parse(res.data.dataList[0].operation_staff)\n        });\n        this.setState({\n          salesStaffTag: JSON.parse(res.data.dataList[0].sales_staff)\n        }); // if status empty prevent err\n\n        if (res.data.dataList[0].status) {\n          //matching status name with the id to set prefill status in dropdown\n          this.state.formFields[\"status\"] = this.state.statusOption.find(option => option.label === res.data.dataList[0].status).value;\n        }\n\n        this.state.formFields[\"custName\"] = res.data.dataList[0].customer_name;\n        this.state.formFields[\"contactName\"] = res.data.dataList[0].contact_person;\n        this.state.formFields[\"contactNumber\"] = res.data.dataList[0].contact_number;\n        this.updateState(this.state.formFields);\n        console.log(\"this.state.formFields\", this.state.formFields);\n      });\n    };\n\n    this.handleSearch = async event => {\n      //    event.persist();\n      let {\n        formFields,\n        visible\n      } = this.state;\n      formFields[\"custName\"] = event.target.value;\n      visible = true;\n      this.setState({\n        formFields,\n        visible\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          let {\n            basicApptDetail\n          } = this.props;\n          this.search(basicApptDetail);\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleSearchClick = key => {\n      if (!this.state.visible) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      if (this.state.visible) {\n        this.search();\n      }\n\n      this.setState(prevState => ({\n        visible: !prevState.visible\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleSearchClick();\n    };\n\n    this.search = () => {\n      let {\n        formFields\n      } = this.state;\n      this.props.getCommonApi(`custappt/?search=${formFields.custName}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          this.setState({\n            customerOption: data\n          });\n        }\n      });\n    };\n\n    this.handleSelectCustomer = async data => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"custId\"] = data.id;\n      formFields[\"custName\"] = data.cust_name;\n      formFields[\"custCorporate\"] = data.cust_corporate;\n      formFields[\"contactPerson\"] = data.contactperson;\n\n      if (!data.cust_corporate) {\n        formFields[\"contactName\"] = data.cust_name;\n        formFields[\"contactNumber\"] = data.cust_phone1 ? data.cust_phone1 : data.custphone2;\n      }\n\n      this.setState({\n        formFields,\n        customerOption: []\n      });\n      this.handleSearchClick();\n    };\n\n    this.handleClick = async key => {\n      let {\n        active,\n        currentValue\n      } = this.state;\n      await this.updateState({\n        selectedMenu: key.id\n      });\n      this.updateState({\n        active: true,\n        currentValue: key.key,\n        selected: key.id\n      });\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n\n      if (name == \"salesStaff\") {\n        let checkSameName = this.state.salesStaffTag && this.state.salesStaffTag.filter(tag => tag === value);\n\n        if (checkSameName && checkSameName == value) {\n          alert(\"This Member already exist\");\n        } else {\n          if (this.state.salesStaffTag) {\n            this.setState({\n              salesStaffTag: [value, ...this.state.salesStaffTag]\n            });\n          } else {\n            this.setState({\n              salesStaffTag: [value]\n            });\n          }\n        }\n      } else if (name == \"operationStaff\") {\n        let checkSameName = this.state.operationStaffTag && this.state.operationStaffTag.filter(tag => tag === value);\n\n        if (checkSameName && checkSameName == value) {\n          alert(\"This Member already exist\");\n        } else {\n          if (this.state.operationStaffTag) {\n            this.setState({\n              operationStaffTag: [value, ...this.state.operationStaffTag]\n            });\n          } else {\n            this.setState({\n              operationStaffTag: [value]\n            });\n          }\n        }\n      } else if (name == \"adminStaff\") {\n        let checkSameName = this.state.adminStaffTag && this.state.adminStaffTag.filter(tag => tag === value);\n\n        if (checkSameName && checkSameName == value) {\n          alert(\"This Member already exist\");\n        } else {\n          if (this.state.adminStaffTag) {\n            this.setState({\n              adminStaffTag: [value, ...this.state.adminStaffTag]\n            });\n          } else {\n            this.setState({\n              adminStaffTag: [value]\n            });\n          }\n        }\n      } else {\n        formFields[name] = value;\n        this.updateState({\n          formFields\n        });\n      }\n    };\n\n    this.handleSubmit = async () => {\n      try {\n        if (this.validator.allValid()) {\n          //   this.updateState({ is_loading: true });\n          //   let { formFields } = this.state;\n          //   Object.keys(formFields).forEach((e) => {\n          //     if (typeof formFields[e] === \"boolean\")\n          //       formFields[e] = formFields[e] ? \"True\" : \"False\";\n          //   });\n          let {\n            formFields,\n            statusOption\n          } = this.state;\n          let statusValue = \"\";\n          console.log(\"formFields\", formFields);\n\n          for (let key of statusOption) {\n            // console.log(key.value)\n            if (key.value == formFields.status) {\n              statusValue = key.label;\n            }\n          }\n\n          console.log(\"statusValue\", statusValue);\n          const formData = new FormData();\n          formData.append(\"title\", formFields.projectTitle);\n          formData.append(\"desc\", formFields.projectDesc);\n          formData.append(\"status\", statusValue);\n          formData.append(\"cust_id\", formFields.custId);\n          formData.append(\"customer_name\", formFields.custName);\n          formData.append(\"contact_person\", formFields.contactName);\n          formData.append(\"contact_number\", formFields.contactNumber);\n          formData.append(\"username\", this.props.tokenDetail.username);\n          formData.append(\"sales_staff\", JSON.stringify(this.state.salesStaffTag));\n          formData.append(\"operation_staff\", JSON.stringify(this.state.operationStaffTag));\n          formData.append(\"admin_staff\", JSON.stringify(this.state.adminStaffTag));\n          console.log(\"formData\", formData);\n\n          if (this.props.match.params.id) {\n            console.log(\"in if loop\");\n            console.log(\"this.props.match.params.id\", this.props.match.params.id);\n            var res = await this.props.updateProject(`${this.props.match.params.id}/`, formData);\n            console.log(res);\n            this.props.history.push(`/admin/project`);\n          } else {\n            var res = await this.props.createProject(formData);\n            this.props.history.push(`/admin/project`);\n          } // if (\n          //   formFields.emp_pic != null &&\n          //   typeof formFields.emp_pic === \"object\"\n          // )\n          //   formData.append(\"emp_pic\", formFields.emp_pic);\n          // formData.append(\"emp_nric\", formFields.emp_nric);\n          // formData.append(\"is_login\", formFields.is_login);\n          // formData.append(\"emp_isactive\", formFields.emp_isactive);\n          // formData.append(\"max_disc\", formFields.max_disc);\n          // formData.append(\"LEVEL_ItmIDid\", formFields.LEVEL_ItmIDid);\n          // formData.append(\"show_in_sales\", formFields.show_in_sales);\n          // formData.append(\"show_in_appt\", formFields.show_in_appt);\n          // formData.append(\"show_in_trmt\", formFields.show_in_trmt);\n          // formData.append(\n          //   \"site_list\",\n          //   formFields.siteCodes.map((e) => e.value).reduce((a, e) => a + \",\" + e)\n          // );\n          // const scheduleData = new FormData();\n          // scheduleData.append(\"monday\", formFields.work_schedule.monday);\n          // scheduleData.append(\"tuesday\", formFields.work_schedule.tuesday);\n          // scheduleData.append(\"wednesday\", formFields.work_schedule.wednesday);\n          // scheduleData.append(\"tuesday\", formFields.work_schedule.tuesday);\n          // scheduleData.append(\"friday\", formFields.work_schedule.friday);\n          // scheduleData.append(\"saturday\", formFields.work_schedule.saturday);\n          // scheduleData.append(\"sunday\", formFields.work_schedule.sunday);\n          // if (this.props.match.params.id) {\n          //   var res = await this.props.updateStaffPlus(\n          //     `${this.props.match.params.id}/`,\n          //     formData\n          //   );\n          //   console.log(res);\n          //   if (res.status === 200) {\n          //     await this.props.updateWorkSchedule(\n          //       this.props.match.params.id,\n          //       scheduleData\n          //     );\n          //   }\n          //   await this.getStaffDetail();\n          // } else {\n          //   var res = await this.props.createStaffPlus(formData);\n          //   console.log(res);\n          //   if (res.status === 201) {\n          //     var res2 = await this.props.updateWorkSchedule(\n          //       res.data.id,\n          //       scheduleData\n          //     );\n          //     if (res2.status === 200)\n          //       this.props.history.push(\n          //         `/admin/staffPlus/${res.data.id}/editStaff`\n          //       );\n          //   }\n          // }\n\n        } else {\n          this.validator.showMessages();\n        } // this.updateState({ is_loading: false });\n\n      } catch (e) {\n        this.updateState({\n          is_loading: false\n        });\n      }\n    };\n\n    this.handleFilterTag = (e, data, tagName) => {\n      if (tagName == \"salesStaffTag\") {\n        this.setState({\n          salesStaffTag: this.state.salesStaffTag.filter(tag => tag !== data)\n        });\n      } else if (tagName == \"operationStaffTag\") {\n        this.setState({\n          operationStaffTag: this.state.operationStaffTag.filter(tag => tag !== data)\n        });\n      } else if (tagName == \"adminStaffTag\") {\n        this.setState({\n          adminStaffTag: this.state.adminStaffTag.filter(tag => tag !== data)\n        });\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {\n    this.state.isMounted = false;\n  }\n\n  render() {\n    let {\n      formFields,\n      navLinks,\n      currentValue,\n      statusOption,\n      salesStaffOption,\n      operationStaffOption,\n      adminStaffOption,\n      salesStaffTag,\n      operationStaffTag,\n      adminStaffTag,\n      customerOption,\n      visible\n    } = this.state;\n    console.log(salesStaffTag, \"i am status option \");\n    let {\n      projectTitle,\n      projectDesc,\n      status,\n      salesStaff,\n      operationStaff,\n      adminStaff,\n      custName,\n      contactName,\n      contactNumber,\n      custCorporate,\n      contactPerson\n    } = formFields;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-5 container create-project\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head-label-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category\",\n      onClick: () => this.props.history.push(`/admin/project`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }\n    }, t(\"Project\")), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-right mx-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }\n    }, t(`${this.props.match.params.id ? \"Edit\" : \"New\"} Project`))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quotation-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 17\n      }\n    }, t(\"Project Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: projectTitle,\n      name: \"projectTitle\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 17\n      }\n    }, this.validator.message(t(\"Project Title\"), projectTitle, t(\"required\"))), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 17\n      }\n    }, t(\"Project Description\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalTextarea, {\n      placeholder: \"Enter here\",\n      value: projectDesc,\n      name: \"projectDesc\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3  d-flex justify-content-between align-items-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 17\n      }\n    }, t(\"Sales Staff\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: addBtn,\n      width: \"35\",\n      height: \"35\",\n      alt: \"\",\n      className: \"action-img bg-transparent\",\n      onClick: this.handleToogleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: salesStaffOption,\n      value: salesStaff,\n      name: \"salesStaff\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mt-2 d-flex mb-4\",\n      style: {\n        overflowX: \"scroll\",\n        flexWrap: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 17\n      }\n    }, salesStaffTag && salesStaffTag.map((data, key) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mr-3  bg-primary p-1 mb-1 px-3 rounded-2xl text-white text-center rounded\",\n        key: key,\n        onClick: e => this.handleFilterTag(e, data, \"salesStaffTag\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 25\n        }\n      }, data, \",\");\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3  d-flex justify-content-between align-items-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 17\n      }\n    }, t(\"Admin Staff\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: addBtn,\n      width: \"35\",\n      height: \"35\",\n      alt: \"\",\n      className: \"action-img bg-transparent\",\n      onClick: this.handleToogleModalAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: adminStaffOption,\n      value: adminStaff,\n      name: \"adminStaff\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mt-2 mt-1 d-flex\",\n      style: {\n        overflowX: \"scroll\",\n        flexWrap: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 17\n      }\n    }, adminStaffTag && adminStaffTag.map((data, key) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mr-3  bg-primary p-1 mb-1 px-3 rounded-2xl text-white text-center rounded\",\n        key: key,\n        onClick: e => this.handleFilterTag(e, data, \"adminStaffTag\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 25\n        }\n      }, data);\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 17\n      }\n    }, t(\"Status\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: statusOption,\n      value: status,\n      name: \"status\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 17\n      }\n    }, this.validator.message(t(\"Status\"), status, t(\"required\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 17\n      }\n    }, t(\"Customer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: custName,\n      name: \"custName\",\n      onChange: this.handleSearch,\n      onClick: this.handleSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 19\n      }\n    })), visible ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customerSearch-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mt-3 table table-header w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 19\n      }\n    }, t(\"Name\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 19\n      }\n    }, t(\"Phone\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 19\n      }\n    }, t(\"Customer Code\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 19\n      }\n    }, t(\"Reference\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 19\n      }\n    }, t(\"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 19\n      }\n    }, t(\"NRIC\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"response-table w-100 row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 17\n      }\n    }, console.log(customerOption, \"customer search result\"), customerOption.length > 0 ? customerOption.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row m-0 table-body w-100 border\",\n        onClick: () => this.handleSelectCustomer(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 27\n        }\n      }, item.cust_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 27\n        }\n      }, item.cust_phone1), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 27\n        }\n      }, item.cust_code), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 27\n        }\n      }, item.cust_refer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 27\n        }\n      }, item.cust_email), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 27\n        }\n      }, item.cust_nric));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 21\n      }\n    }, t(\"No Data Available\")))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 17\n      }\n    }, this.validator.message(t(\"Customer\"), custName, t(\"required\"))), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 17\n      }\n    }, t(\"Contact Person\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 17\n      }\n    }, !custCorporate ? /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: contactName,\n      name: \"contactName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(NormalSelect, {\n      options: contactPerson.map(x => {\n        return {\n          id: x.name,\n          value: x.name,\n          label: x.name\n        };\n      }),\n      value: contactName,\n      name: \"contactName\",\n      onChange: event => {\n        let formFields = this.state.formFields;\n        formFields.contactName = event.target.value;\n        formFields.contactNumber = contactPerson.find(x => x.name == event.target.value).mobile_phone;\n        this.setState({\n          formFields\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 17\n      }\n    }, this.validator.message(t(\"Contact Person\"), contactName, t(\"required\"))), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 17\n      }\n    }, t(\"Contact Number\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: contactNumber,\n      name: \"contactNumber\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 17\n      }\n    }, this.validator.message(t(\"Contact Number\"), contactNumber, t(\"required\"))), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3  d-flex justify-content-between align-items-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 17\n      }\n    }, t(\"Operations Staff\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: addBtn,\n      width: \"35\",\n      height: \"35\",\n      alt: \"\",\n      className: \"action-img bg-transparent\",\n      onClick: this.handleToogleModalOperation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      options: operationStaffOption,\n      value: operationStaff,\n      name: \"operationStaff\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mt-2 mt-1 d-flex\",\n      style: {\n        overflowX: \"scroll\",\n        flexWrap: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 17\n      }\n    }, operationStaffTag && operationStaffTag.map((data, key) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mr-3  bg-primary p-1 mb-1 px-3 rounded-2xl text-white text-center rounded\",\n        key: key,\n        onClick: e => this.handleFilterTag(e, data, \"operationStaffTag\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 25\n        }\n      }, data, \",\");\n    }))), this.props.match.params.id && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 project-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-menus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 21\n      }\n    }, navLinks.map(({\n      to,\n      label,\n      id\n    }, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: to,\n      className: \"nav-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `sidebar-menu ${currentValue === index ? \"active\" : \"\"}`,\n      onClick: () => this.handleClick({\n        key: index,\n        id: id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sidebar-menu-desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 31\n      }\n    }, t(label)))))))), this.state.selectedMenu === \"Activities\" && /*#__PURE__*/React.createElement(Activities, {\n      fk_id: this.props.match.params.id,\n      id: this.state.selectedMenu // search={formFields.search}\n      ,\n      api: \"activities\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 21\n      }\n    }), this.state.selectedMenu === \"Quotation\" && /*#__PURE__*/React.createElement(Quotation, {\n      fk_id: this.props.match.params.id,\n      id: this.state.selectedMenu // search={formFields.search}\n      ,\n      api: \"quotation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 21\n      }\n    }), this.state.selectedMenu === \"PO\" && /*#__PURE__*/React.createElement(PO, {\n      fk_id: this.props.match.params.id,\n      id: this.state.selectedMenu // search={formFields.search}\n      ,\n      api: \"po\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2 mb-3\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Cancel\",\n      outline: false,\n      onClick: () => {\n        if (window.confirm(\"Are you sure you want to leave this page and discard changes?\")) // window.location.href = '/admin/project'\n          this.props.history.push(`/admin/project`);\n      } // onClick={this.handleSearch}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Save\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(NormalModal, {\n      modal: this.state.isModalVisible,\n      handleModal: this.handleToogleModal,\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"800px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 13\n      }\n    }, \"Add Sales Staff\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: this.state.formFields.addSalesStaff,\n      name: \"addSalesStaff\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3 mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"cancel\",\n      label: \"Cancel\",\n      onClick: this.handleToogleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3 mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Save\",\n      onClick: () => {\n        this.setState({\n          salesStaffTag: [this.state.formFields.addSalesStaff, ...this.state.salesStaffTag]\n        });\n        this.setState({\n          isModalVisible: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(NormalModal, {\n      modal: this.state.isModalVisibleOperation,\n      handleModal: this.handleToogleModalOperation,\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"800px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 13\n      }\n    }, \"Add Operation Staff\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: this.state.formFields.addOperationStaff,\n      name: \"addOperationStaff\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3 mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"cancel\",\n      label: \"Cancel\",\n      onClick: this.handleToogleModalOperation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3 mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Save\",\n      onClick: () => {\n        this.setState({\n          operationStaffTag: [this.state.formFields.addOperationStaff, ...this.state.operationStaffTag]\n        });\n        this.setState({\n          isModalVisibleOperation: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(NormalModal, {\n      modal: this.state.isModalVisibleAdmin,\n      handleModal: this.handleToogleModalAdmin,\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"800px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text fs-17 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 13\n      }\n    }, \"Add Admin Staff\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Enter here\",\n      value: this.state.formFields.addAdminStaff,\n      name: \"addAdminStaff\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3 mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"cancel\",\n      label: \"Cancel\",\n      onClick: this.handleToogleModalAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mt-3 mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"confirm\",\n      label: \"Save\",\n      onClick: () => {\n        this.setState({\n          adminStaffTag: [this.state.formFields.addAdminStaff, ...this.state.adminStaffTag]\n        });\n        this.setState({\n          isModalVisibleAdmin: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tokenDetail: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    createProject,\n    updateProject,\n    getTokenDetails\n  }, dispatch);\n}; // export const AddProject = withTranslation()(\n//   connect(mapStateToProps, mapDispatchToProps)(AddProjectClass)\n// );\n\n\nexport const AddProject = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(AddProjectClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Project/AddProject/index.js"],"names":["React","Component","Link","SimpleReactValidator","Redirect","NormalInput","NormalSelect","NormalButton","NormalTextarea","NormalDateTime","NormalMultiSelect","NormalModal","displayImg","dateFormat","createProject","updateProject","getJobtitle","getCommonApi","connect","bindActionCreators","FormGroup","Label","Input","withTranslation","Activities","Quotation","PO","NavLink","getTokenDetails","addBtn","_","AddProjectClass","state","formFields","projectTitle","projectDesc","status","salesStaff","operationStaff","adminStaff","custName","contactName","contactNumber","addSalesStaff","addOperationStaff","addAdminStaff","custCorporate","contactPerson","custId","projectList","statusOption","salesStaffOption","operationStaffOption","adminStaffOption","salesStaffTag","operationStaffTag","adminStaffTag","is_loading","isMounted","active","isModalVisible","isModalVisibleOperation","isModalVisibleAdmin","currentValue","navLinks","to","props","location","pathname","label","id","selectedMenu","visible","customerOption","componentWillMount","getStatus","getSalesStaff","getOperationStaff","getAdminStaff","validator","validators","element","message","autoForceUpdate","updateState","data","setState","console","log","match","params","then","res","key","push","value","dropdown_item","code","dropdown_desc","autoFillForm","dataList","emp_name","pic","emp_pic","handleToogleModal","handleToogleModalOperation","handleToogleModalAdmin","customer_name","title","desc","JSON","parse","admin_staff","operation_staff","sales_staff","find","option","contact_person","contact_number","handleSearch","event","target","debouncedFn","debounce","basicApptDetail","search","handleSearchClick","document","addEventListener","handleOutsideClick","removeEventListener","prevState","e","node","contains","handleSelectCustomer","cust_name","cust_corporate","contactperson","cust_phone1","custphone2","handleClick","selected","handleChange","name","Object","assign","checkSameName","filter","tag","alert","handleSubmit","allValid","statusValue","formData","FormData","append","tokenDetail","username","stringify","history","showMessages","handleFilterTag","tagName","componentDidMount","componentWillUnmount","render","t","overflowX","flexWrap","map","length","item","index","cust_code","cust_refer","cust_email","cust_nric","x","mobile_phone","window","confirm","minWidth","mapStateToProps","authStore","tokenDetails","mapDispatchToProps","dispatch","AddProject"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  NormalInput,\r\n  NormalSelect,\r\n  NormalButton,\r\n  NormalTextarea,\r\n  NormalDateTime,\r\n  NormalMultiSelect,\r\n  NormalModal,\r\n} from \"component/common\";\r\nimport { displayImg, dateFormat } from \"service/helperFunctions\";\r\n// import { DragFileUpload } from \"../../../common\";\r\nimport { createProject, updateProject } from \"redux/actions/project\";\r\nimport { getJobtitle, getCommonApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\n// import { ScheduleTable } from \"./ScheduleTable\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Activities } from \"./activities\";\r\nimport { Quotation } from \"./quotation\";\r\nimport { PO } from \"./PO\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getTokenDetails } from \"redux/actions/auth\";\r\nimport addBtn from \"assets/images/add.png\";\r\nimport _ from \"lodash\";\r\nexport class AddProjectClass extends Component {\r\n  state = {\r\n    formFields: {\r\n      projectTitle: \"\",\r\n      projectDesc: \"\",\r\n      status: \"\",\r\n      salesStaff: \"\",\r\n      operationStaff: \"\",\r\n      adminStaff: \"\",\r\n      custName: \"\",\r\n      contactName: \"\",\r\n      contactNumber: \"\",\r\n      addSalesStaff: \"\",\r\n      addOperationStaff: \"\",\r\n      addAdminStaff: \"\",\r\n      custCorporate:false,\r\n      contactPerson:[],\r\n      custId:0,\r\n      \r\n    },\r\n    // scheduleOptions: [],\r\n\r\n    projectList: [],\r\n    statusOption: [],\r\n    salesStaffOption: [],\r\n    operationStaffOption: [],\r\n    adminStaffOption: [],\r\n    salesStaffTag: [],\r\n    operationStaffTag: [],\r\n    adminStaffTag: [],\r\n    // locationOption: [],\r\n    // levelList: [],\r\n    is_loading: true,\r\n    isMounted: true,\r\n\r\n    active: false,\r\n    isModalVisible: false,\r\n    isModalVisibleOperation: false,\r\n    isModalVisibleAdmin: false,\r\n\r\n    currentValue: 0,\r\n    // navLinks: [\r\n    //   { to: \"/admin/project/add\", label: \"Activities\", id: \"Activities\" },\r\n    //   { to: \"/admin/project/add\", label: \"Quotation\", id: \"Quotation\" },\r\n    //   { to: \"/admin/project/add\", label: \"Purchase Order\", id: \"PO\" },\r\n    // ],\r\n    navLinks: [\r\n      {\r\n        to: this.props.location.pathname,\r\n        label: \"Activities\",\r\n        id: \"Activities\",\r\n      },\r\n      { to: this.props.location.pathname, label: \"Quotation\", id: \"Quotation\" },\r\n      { to: this.props.location.pathname, label: \"Purchase Order\", id: \"PO\" },\r\n    ],\r\n    selectedMenu: \"Activities\",\r\n    visible:false,\r\n    customerOption: []\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.getStatus();\r\n    this.getSalesStaff();\r\n    this.getOperationStaff();\r\n    this.getAdminStaff();\r\n    // console.log(\"componentWillMount statusoption\",this.state.statusOption )\r\n    this.validator = new SimpleReactValidator({\r\n      validators: {},\r\n      element: (message) => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentWillUnmount() {\r\n    this.state.isMounted = false;\r\n  }\r\n\r\n  updateState = (data) => {\r\n    if (this.state.isMounted) this.setState(data);\r\n  };\r\n\r\n  getStatus = () => {\r\n    let { statusOption } = this.state;\r\n    console.log(\"this.props addpro\", this.props);\r\n    console.log(\r\n      \"this.props.match.params.id addpro\",\r\n      this.props.match.params.id\r\n    );\r\n    // statusOption = [];\r\n    this.props.getCommonApi(`dropdownproject`).then((res) => {\r\n      // activeMenu = []\r\n      console.log(\"res.data\", res);\r\n      for (let key of res.data) {\r\n        statusOption.push({\r\n          value: key.id,\r\n          label: key.dropdown_item,\r\n          code: key.dropdown_desc,\r\n          active: key.active,\r\n        });\r\n      }\r\n      console.log(\"statusOption\", statusOption);\r\n      this.updateState({ statusOption });\r\n\r\n      if (this.props.match.params.id) {\r\n        this.autoFillForm();\r\n      }\r\n    });\r\n  };\r\n\r\n  getSalesStaff = () => {\r\n    let { salesStaffOption } = this.state;\r\n    this.props\r\n      .getCommonApi(`empcartlist/?sales_staff=1&page=1&limit=1000`)\r\n      .then((res) => {\r\n        // activeMenu = []\r\n        console.log(\"res.data\", res);\r\n        for (let key of res.data.dataList) {\r\n          salesStaffOption.push({\r\n            id: key.id,\r\n            value: key.emp_name,\r\n            label: key.emp_name,\r\n            pic: key.emp_pic,\r\n          });\r\n        }\r\n        console.log(\"salesStaffOption\", salesStaffOption);\r\n        this.updateState({ salesStaffOption });\r\n\r\n        if (this.props.match.params.id) {\r\n          this.autoFillForm();\r\n        }\r\n      });\r\n  };\r\n  getOperationStaff = () => {\r\n    let { operationStaffOption } = this.state;\r\n    this.props\r\n      .getCommonApi(`empcartlist/?sales_staff=2&page=1&limit=1000`)\r\n      .then((res) => {\r\n        // activeMenu = []\r\n        console.log(\"res.data\", res);\r\n        for (let key of res.data.dataList) {\r\n          operationStaffOption.push({\r\n            id: key.id,\r\n            value: key.emp_name,\r\n            label: key.emp_name,\r\n            pic: key.emp_pic,\r\n          });\r\n        }\r\n        console.log(\"operationStaffOption\", operationStaffOption);\r\n        this.updateState({ operationStaffOption });\r\n\r\n        if (this.props.match.params.id) {\r\n          this.autoFillForm();\r\n        }\r\n      });\r\n  };\r\n  getAdminStaff = () => {\r\n    let { adminStaffOption } = this.state;\r\n    this.props\r\n      .getCommonApi(`empcartlist/?sales_staff=0&page=1&limit=1000`)\r\n      .then((res) => {\r\n        // activeMenu = []\r\n        console.log(\"res.data\", res);\r\n        for (let key of res.data.dataList) {\r\n          adminStaffOption.push({\r\n            id: key.id,\r\n            value: key.emp_name,\r\n            label: key.emp_name,\r\n            pic: key.emp_pic,\r\n          });\r\n        }\r\n        console.log(\"adminStaffOption\", adminStaffOption);\r\n        this.updateState({ adminStaffOption });\r\n\r\n        if (this.props.match.params.id) {\r\n          this.autoFillForm();\r\n        }\r\n      });\r\n  };\r\n\r\n  handleToogleModal = () => {\r\n    let { isModalVisible } = this.state;\r\n    isModalVisible = !isModalVisible;\r\n    this.setState({\r\n      isModalVisible,\r\n    });\r\n  };\r\n  handleToogleModalOperation = () => {\r\n    let { isModalVisibleOperation } = this.state;\r\n    isModalVisibleOperation = !isModalVisibleOperation;\r\n    this.setState({\r\n      isModalVisibleOperation,\r\n    });\r\n  };\r\n  handleToogleModalAdmin = () => {\r\n    let { isModalVisibleAdmin } = this.state;\r\n    isModalVisibleAdmin = !isModalVisibleAdmin;\r\n    this.setState({\r\n      isModalVisibleAdmin,\r\n    });\r\n  };\r\n  autoFillForm = () => {\r\n    // let { statusOption } = this.state;\r\n\r\n    this.props\r\n      .getCommonApi(`projectlist/?searchid=${this.props.match.params.id}`)\r\n      .then(async (res) => {\r\n        console.log(\"project dataList\", res.data.dataList);\r\n        console.log(\r\n          \"project dataList cust name\",\r\n          res.data.dataList[0].customer_name\r\n        );\r\n        // custName = res.data.dataList[0].customer_name\r\n        // this.state.projectList = res.data.dataList\r\n        this.state.formFields[\"projectTitle\"] = res.data.dataList[0].title;\r\n        this.state.formFields[\"projectDesc\"] = res.data.dataList[0].desc;\r\n        // const people = [ {name: \"john\", age:23},\r\n        //         {name: \"john\", age:43},\r\n        //         {name: \"jim\", age:101},\r\n        //         {name: \"bob\", age:67} ];\r\n\r\n        //   // const john = people.find(person => person.name === john);\r\n        // console.log(\"people testing\",people.find(person => person.name === \"john\"));\r\n        // const statusOPtionLoop = this.state.statusOption\r\n        // console.log(\"statusOPtionLoop\",statusOPtionLoop[0])\r\n        // for (let x in statusOPtionLoop){\r\n        //   console.log(\"statusOPtionLoop elements\", x)\r\n        // }\r\n        // console.log(\"statusOPtionLoop\",statusOPtionLoop.find((person => person.label === \"Lead\")))\r\n        // console.log(\"statusOptionTemp\",statusOptionTemp)\r\n        // console.log(\"statusOptionTemp[0]\",statusOptionTemp[0])\r\n        console.log(\"statusOption in prefill\", this.state.statusOption);\r\n        console.log(\"res.data.dataList[0].status\", res.data.dataList[0].status);\r\n        this.setState({\r\n          adminStaffTag: JSON.parse(res.data.dataList[0].admin_staff),\r\n        });\r\n        this.setState({\r\n          operationStaffTag: JSON.parse(res.data.dataList[0].operation_staff),\r\n        });\r\n        this.setState({\r\n          salesStaffTag: JSON.parse(res.data.dataList[0].sales_staff),\r\n        });\r\n        // if status empty prevent err\r\n        if (res.data.dataList[0].status) {\r\n          //matching status name with the id to set prefill status in dropdown\r\n          this.state.formFields[\"status\"] = this.state.statusOption.find(\r\n            (option) => option.label === res.data.dataList[0].status\r\n          ).value;\r\n        }\r\n        this.state.formFields[\"custName\"] = res.data.dataList[0].customer_name;\r\n        this.state.formFields[\"contactName\"] =\r\n          res.data.dataList[0].contact_person;\r\n        this.state.formFields[\"contactNumber\"] =\r\n          res.data.dataList[0].contact_number;\r\n        this.updateState(this.state.formFields);\r\n        console.log(\"this.state.formFields\", this.state.formFields);\r\n      });\r\n  };\r\n\r\n  handleSearch = async event => {\r\n    //    event.persist();\r\n    let { formFields, visible } = this.state;\r\n    formFields[\"custName\"] = event.target.value;\r\n    visible = true;\r\n     this.setState({ formFields, visible });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {        \r\n        let { basicApptDetail } = this.props;\r\n        this.search(basicApptDetail);\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n  handleSearchClick = key => {\r\n    if (!this.state.visible) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    if (this.state.visible) {\r\n      this.search();\r\n    }\r\n    this.setState(prevState => ({\r\n      visible: !prevState.visible,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleSearchClick();\r\n  };\r\n  search = () => {\r\n    let { formFields } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `custappt/?search=${formFields.custName}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {          \r\n          this.setState({ customerOption: data });\r\n        }\r\n      });\r\n  };\r\n  handleSelectCustomer = async data => {\r\n    let { formFields } = this.state;\r\n    formFields[\"custId\"] = data.id;  \r\n    formFields[\"custName\"] = data.cust_name;\r\n    formFields[\"custCorporate\"]=data.cust_corporate    \r\n    formFields[\"contactPerson\"]=data.contactperson\r\n    if(!data.cust_corporate){\r\n    formFields[\"contactName\"] = data.cust_name;\r\n    formFields[\"contactNumber\"] = data.cust_phone1?data.cust_phone1:data.custphone2;\r\n    }\r\n    this.setState({ formFields, customerOption: [] });\r\n    this.handleSearchClick();\r\n  };\r\n\r\n\r\n  handleClick = async (key) => {\r\n    let { active, currentValue } = this.state;\r\n    await this.updateState({\r\n      selectedMenu: key.id,\r\n    });\r\n    this.updateState({\r\n      active: true,\r\n      currentValue: key.key,\r\n      selected: key.id,\r\n    });\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n    if (name == \"salesStaff\") {\r\n      let checkSameName =this.state.salesStaffTag&& this.state.salesStaffTag.filter(\r\n        (tag) => tag === value\r\n      );\r\n      if (checkSameName && checkSameName == value) {\r\n        alert(\"This Member already exist\");\r\n      } else {\r\n        if(this.state.salesStaffTag){\r\n\r\n          this.setState({ salesStaffTag: [value, ...this.state.salesStaffTag] });\r\n        }else{\r\n          this.setState({ salesStaffTag: [value] });\r\n\r\n        }\r\n      }\r\n    } else if (name == \"operationStaff\") {\r\n      let checkSameName =this.state.operationStaffTag&& this.state.operationStaffTag.filter(\r\n        (tag) => tag === value\r\n      );\r\n      if (checkSameName && checkSameName == value) {\r\n        alert(\"This Member already exist\");\r\n      } else {\r\n        if(this.state.operationStaffTag){\r\n\r\n          this.setState({\r\n            operationStaffTag: [value, ...this.state.operationStaffTag],\r\n          });\r\n        }else{\r\n          \r\n                    this.setState({\r\n                      operationStaffTag: [value],\r\n                    });\r\n\r\n        }\r\n      }\r\n    } else if (name == \"adminStaff\") {\r\n      let checkSameName =this.state.adminStaffTag&& this.state.adminStaffTag.filter(\r\n        (tag) => tag === value\r\n      );\r\n      if (checkSameName && checkSameName == value) {\r\n        alert(\"This Member already exist\");\r\n      } else {\r\n        if(this.state.adminStaffTag){\r\n\r\n          this.setState({ adminStaffTag: [value, ...this.state.adminStaffTag] });\r\n        }else{\r\n          this.setState({ adminStaffTag: [value] });\r\n\r\n        }\r\n      }\r\n    } else {\r\n      formFields[name] = value;\r\n\r\n      this.updateState({\r\n        formFields,\r\n      });\r\n    }\r\n  };\r\n\r\n  // handleMultiSelect = (data = []) => {\r\n  //   let { formFields } = this.state;\r\n  //   formFields.siteCodes = data;\r\n  //   console.log(data);\r\n  //   this.updateState({ formFields });\r\n  // };\r\n\r\n  // handleDatePick = async (name, value) => {\r\n  //   // dateFormat(new Date())\r\n  //   let { formFields } = this.state;\r\n  //   formFields[name] = value;\r\n  //   // formFields[name] = value;\r\n  //   await this.updateState({\r\n  //     formFields,\r\n  //   });\r\n  // };\r\n\r\n  // handleInput = ({ target: { name, value } }) => {\r\n  //   let formFields = Object.assign({}, this.state.formFields);\r\n  //   formFields[name] = value === true ? 1 : value;\r\n  //   this.updateState({\r\n  //     formFields,\r\n  //   });\r\n  // };\r\n\r\n  // submit to create/update project\r\n  handleSubmit = async () => {\r\n    try {\r\n      if (this.validator.allValid()) {\r\n        //   this.updateState({ is_loading: true });\r\n        //   let { formFields } = this.state;\r\n        //   Object.keys(formFields).forEach((e) => {\r\n        //     if (typeof formFields[e] === \"boolean\")\r\n        //       formFields[e] = formFields[e] ? \"True\" : \"False\";\r\n        //   });\r\n        let { formFields, statusOption } = this.state;\r\n        let statusValue = \"\";\r\n        console.log(\"formFields\", formFields);\r\n\r\n        for (let key of statusOption) {\r\n          // console.log(key.value)\r\n          if (key.value == formFields.status) {\r\n            statusValue = key.label;\r\n          }\r\n        }\r\n        console.log(\"statusValue\", statusValue);\r\n        const formData = new FormData();\r\n        formData.append(\"title\", formFields.projectTitle);\r\n        formData.append(\"desc\", formFields.projectDesc);\r\n        formData.append(\"status\", statusValue);\r\n        formData.append(\"cust_id\", formFields.custId);\r\n        formData.append(\"customer_name\", formFields.custName);\r\n        formData.append(\"contact_person\", formFields.contactName);\r\n        formData.append(\"contact_number\", formFields.contactNumber);\r\n        formData.append(\"username\", this.props.tokenDetail.username);\r\n        formData.append(\r\n          \"sales_staff\",\r\n          JSON.stringify(this.state.salesStaffTag)\r\n        );\r\n        formData.append(\r\n          \"operation_staff\",\r\n          JSON.stringify(this.state.operationStaffTag)\r\n        );\r\n        formData.append(\r\n          \"admin_staff\",\r\n          JSON.stringify(this.state.adminStaffTag)\r\n        );\r\n        console.log(\"formData\", formData);\r\n        if (this.props.match.params.id) {\r\n          console.log(\"in if loop\");\r\n          console.log(\"this.props.match.params.id\", this.props.match.params.id);\r\n          var res = await this.props.updateProject(\r\n            `${this.props.match.params.id}/`,\r\n            formData\r\n          );\r\n          console.log(res);\r\n          this.props.history.push(`/admin/project`);\r\n        } else {\r\n          var res = await this.props.createProject(formData);\r\n          this.props.history.push(`/admin/project`);\r\n        }\r\n\r\n        // if (\r\n        //   formFields.emp_pic != null &&\r\n        //   typeof formFields.emp_pic === \"object\"\r\n        // )\r\n        //   formData.append(\"emp_pic\", formFields.emp_pic);\r\n        // formData.append(\"emp_nric\", formFields.emp_nric);\r\n        // formData.append(\"is_login\", formFields.is_login);\r\n        // formData.append(\"emp_isactive\", formFields.emp_isactive);\r\n        // formData.append(\"max_disc\", formFields.max_disc);\r\n        // formData.append(\"LEVEL_ItmIDid\", formFields.LEVEL_ItmIDid);\r\n        // formData.append(\"show_in_sales\", formFields.show_in_sales);\r\n        // formData.append(\"show_in_appt\", formFields.show_in_appt);\r\n        // formData.append(\"show_in_trmt\", formFields.show_in_trmt);\r\n        // formData.append(\r\n        //   \"site_list\",\r\n        //   formFields.siteCodes.map((e) => e.value).reduce((a, e) => a + \",\" + e)\r\n        // );\r\n        // const scheduleData = new FormData();\r\n        // scheduleData.append(\"monday\", formFields.work_schedule.monday);\r\n        // scheduleData.append(\"tuesday\", formFields.work_schedule.tuesday);\r\n        // scheduleData.append(\"wednesday\", formFields.work_schedule.wednesday);\r\n        // scheduleData.append(\"tuesday\", formFields.work_schedule.tuesday);\r\n        // scheduleData.append(\"friday\", formFields.work_schedule.friday);\r\n        // scheduleData.append(\"saturday\", formFields.work_schedule.saturday);\r\n        // scheduleData.append(\"sunday\", formFields.work_schedule.sunday);\r\n        // if (this.props.match.params.id) {\r\n        //   var res = await this.props.updateStaffPlus(\r\n        //     `${this.props.match.params.id}/`,\r\n        //     formData\r\n        //   );\r\n        //   console.log(res);\r\n        //   if (res.status === 200) {\r\n        //     await this.props.updateWorkSchedule(\r\n        //       this.props.match.params.id,\r\n        //       scheduleData\r\n        //     );\r\n        //   }\r\n        //   await this.getStaffDetail();\r\n        // } else {\r\n        //   var res = await this.props.createStaffPlus(formData);\r\n        //   console.log(res);\r\n        //   if (res.status === 201) {\r\n        //     var res2 = await this.props.updateWorkSchedule(\r\n        //       res.data.id,\r\n        //       scheduleData\r\n        //     );\r\n        //     if (res2.status === 200)\r\n        //       this.props.history.push(\r\n        //         `/admin/staffPlus/${res.data.id}/editStaff`\r\n        //       );\r\n        //   }\r\n        // }\r\n      } else {\r\n        this.validator.showMessages();\r\n      }\r\n      // this.updateState({ is_loading: false });\r\n    } catch (e) {\r\n      this.updateState({ is_loading: false });\r\n    }\r\n  };\r\n\r\n  handleFilterTag = (e, data, tagName) => {\r\n    if (tagName == \"salesStaffTag\") {\r\n      this.setState({\r\n        salesStaffTag: this.state.salesStaffTag.filter((tag) => tag !== data),\r\n      });\r\n    } else if (tagName == \"operationStaffTag\") {\r\n      this.setState({\r\n        operationStaffTag: this.state.operationStaffTag.filter(\r\n          (tag) => tag !== data\r\n        ),\r\n      });\r\n    } else if (tagName == \"adminStaffTag\") {\r\n      this.setState({\r\n        adminStaffTag: this.state.adminStaffTag.filter((tag) => tag !== data),\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      formFields,\r\n      navLinks,\r\n      currentValue,\r\n      statusOption,\r\n      salesStaffOption,\r\n      operationStaffOption,\r\n      adminStaffOption,\r\n      salesStaffTag,\r\n      operationStaffTag,\r\n      adminStaffTag,\r\n      customerOption, \r\n      visible\r\n    } = this.state;\r\n    console.log(salesStaffTag, \"i am status option \");\r\n    let {\r\n      projectTitle,\r\n      projectDesc,\r\n      status,\r\n      salesStaff,\r\n      operationStaff,\r\n      adminStaff,\r\n      custName,\r\n      contactName,\r\n      contactNumber,\r\n      custCorporate,\r\n      contactPerson\r\n    } = formFields;\r\n\r\n    let { t } = this.props;\r\n    return (\r\n      <div className=\"px-5 container create-project\">\r\n        {/* <p className=\"list-heading pb-4\"> {id ? \"Edit\" : \"Add\"} Staff</p> */}\r\n        <div className=\"head-label-nav\">\r\n          <p\r\n            className=\"category\"\r\n            onClick={() => this.props.history.push(`/admin/project`)}\r\n          >\r\n            {t(\"Project\")}\r\n          </p>\r\n          <i className=\"icon-right mx-md-3\"></i>\r\n          <p className=\"sub-category\">\r\n            {t(`${this.props.match.params.id ? \"Edit\" : \"New\"} Project`)}\r\n          </p>\r\n        </div>\r\n        {/* {is_loading ? (\r\n          <div class=\"d-flex mt-5 align-items-center justify-content-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : ( */}\r\n        <div className=\"quotation-detail\">\r\n          <div className=\"form-group mb-4 pb-2\">\r\n            <div className=\"row mt-5\">\r\n              <div className=\"col-md-6 col-12 mb-4\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n                  {t(\"Project Title\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={projectTitle}\r\n                    name=\"projectTitle\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  {this.validator.message(\r\n                    t(\"Project Title\"),\r\n                    projectTitle,\r\n                    t(\"required\")\r\n                  )}\r\n                </div>\r\n\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n                  {t(\"Project Description\")}\r\n                </label>\r\n                <div className=\"input-group-desc\">\r\n                  <NormalTextarea\r\n                    placeholder=\"Enter here\"\r\n                    value={projectDesc}\r\n                    name=\"projectDesc\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3  d-flex justify-content-between align-items-center w-100\">\r\n                  {t(\"Sales Staff\")}\r\n\r\n                  <img\r\n                    src={addBtn}\r\n                    width=\"35\"\r\n                    height=\"35\"\r\n                    alt=\"\"\r\n                    className=\"action-img bg-transparent\"\r\n                    onClick={this.handleToogleModal}\r\n                  />\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalSelect\r\n                    options={salesStaffOption}\r\n                    value={salesStaff}\r\n                    name=\"salesStaff\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {/* <div>\r\n                  {this.validator.message(t(\"Status\"), status, t(\"required\"))}\r\n                </div> */}\r\n                <div\r\n                  className=\"input-group mt-2 d-flex mb-4\"\r\n                  style={{ overflowX: \"scroll\", flexWrap: \"nowrap\" }}\r\n                >\r\n                  {salesStaffTag &&\r\n                    salesStaffTag.map((data, key) => {\r\n                      return (\r\n                        <p\r\n                          className=\"mr-3  bg-primary p-1 mb-1 px-3 rounded-2xl text-white text-center rounded\"\r\n                          key={key}\r\n                          onClick={(e) =>\r\n                            this.handleFilterTag(e, data, \"salesStaffTag\")\r\n                          }\r\n                        >\r\n                          {data},\r\n                        </p>\r\n                      );\r\n                    })}\r\n                </div>\r\n\r\n                {/* <div>\r\n                  {this.validator.message(t(\"Status\"), status, t(\"required\"))}\r\n                </div> */}\r\n\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3  d-flex justify-content-between align-items-center w-100\">\r\n                  {t(\"Admin Staff\")}\r\n\r\n                  <img\r\n                    src={addBtn}\r\n                    width=\"35\"\r\n                    height=\"35\"\r\n                    alt=\"\"\r\n                    className=\"action-img bg-transparent\"\r\n                    onClick={this.handleToogleModalAdmin}\r\n                  />\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalSelect\r\n                    options={adminStaffOption}\r\n                    value={adminStaff}\r\n                    name=\"adminStaff\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {/* <div>\r\n                  {this.validator.message(t(\"Status\"), status, t(\"required\"))}\r\n                </div> */}\r\n                <div\r\n                  className=\"input-group mt-2 mt-1 d-flex\"\r\n                  style={{ overflowX: \"scroll\", flexWrap: \"nowrap\" }}\r\n                >\r\n                  {adminStaffTag &&\r\n                    adminStaffTag.map((data, key) => {\r\n                      return (\r\n                        <p\r\n                          className=\"mr-3  bg-primary p-1 mb-1 px-3 rounded-2xl text-white text-center rounded\"\r\n                          key={key}\r\n                          onClick={(e) =>\r\n                            this.handleFilterTag(e, data, \"adminStaffTag\")\r\n                          }\r\n                        >\r\n                          {data}\r\n                        </p>\r\n                      );\r\n                    })}\r\n                </div>\r\n\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n                  {t(\"Status\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalSelect\r\n                    options={statusOption}\r\n                    value={status}\r\n                    name=\"status\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  {this.validator.message(t(\"Status\"), status, t(\"required\"))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6 col-12\">\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n                  {t(\"Customer\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={custName}\r\n                    name=\"custName\"\r\n                    onChange={this.handleSearch}\r\n                    onClick={this.handleSearchClick}\r\n                  />\r\n                </div>\r\n                \r\n{visible? (\r\n              <div className=\"customerSearch-block\">\r\n                <div className=\"d-flex mt-3 table table-header w-100 m-0\">\r\n                  <div className=\"col-2\">{t(\"Name\")}</div>\r\n                  <div className=\"col-2\">{t(\"Phone\")}</div>\r\n                  <div className=\"col-2\">{t(\"Customer Code\")}</div>\r\n                  <div className=\"col-2\">{t(\"Reference\")}</div>\r\n                  <div className=\"col-3\">{t(\"Email\")}</div>\r\n                  <div className=\"col-1\">{t(\"NRIC\")}</div>\r\n                </div>\r\n                <div className=\"response-table w-100 row\">\r\n                  {console.log(customerOption, \"customer search result\")}\r\n                  {customerOption.length > 0 ? (\r\n                    customerOption.map((item, index) => {\r\n                      return (\r\n                        <div\r\n                          className=\"row m-0 table-body w-100 border\"\r\n                          onClick={() => this.handleSelectCustomer(item)\r\n                          }\r\n                          key={index}\r\n                        >\r\n                          <div className=\"col-2\">{item.cust_name}</div>\r\n                          <div className=\"col-2\">{item.cust_phone1}</div>\r\n                          <div className=\"col-2\">{item.cust_code}</div>\r\n                          <div className=\"col-2\">{item.cust_refer}</div>\r\n                          <div className=\"col-3\">{item.cust_email}</div>\r\n                          <div className=\"col-1\">{item.cust_nric}</div>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <div className=\"text-center w-100\">\r\n                      {t(\"No Data Available\")}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n                <div>\r\n                  {this.validator.message(\r\n                    t(\"Customer\"),\r\n                    custName,\r\n                    t(\"required\")\r\n                  )}\r\n                </div>\r\n\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n                  {t(\"Contact Person\")} \r\n                </label>\r\n                <div className=\"input-group\"> \r\n                  {!custCorporate?\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={contactName}\r\n                    name=\"contactName\"\r\n                    onChange={this.handleChange}\r\n                  />:<NormalSelect\r\n                  options={contactPerson.map(x=>{return{id:x.name,value:x.name,label:x.name}})}\r\n                  value={contactName}\r\n                  name=\"contactName\"\r\n                  onChange={(event)=>{let formFields=this.state.formFields; formFields.contactName=event.target.value;formFields.contactNumber=contactPerson.find(x=>x.name==event.target.value).mobile_phone;this.setState({formFields})}}\r\n                />\r\n                \r\n                }\r\n                </div>\r\n                <div>\r\n                  {this.validator.message(\r\n                    t(\"Contact Person\"),\r\n                    contactName,\r\n                    t(\"required\")\r\n                  )}\r\n                </div>\r\n\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n                  {t(\"Contact Number\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Enter here\"\r\n                    value={contactNumber}\r\n                    name=\"contactNumber\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  {this.validator.message(\r\n                    t(\"Contact Number\"),\r\n                    contactNumber,\r\n                    t(\"required\")\r\n                  )}\r\n                </div>\r\n\r\n                <label className=\"text-left text-black common-label-text fs-17 pt-3  d-flex justify-content-between align-items-center w-100\">\r\n                  {t(\"Operations Staff\")}\r\n\r\n                  <img\r\n                    src={addBtn}\r\n                    width=\"35\"\r\n                    height=\"35\"\r\n                    alt=\"\"\r\n                    className=\"action-img bg-transparent\"\r\n                    onClick={this.handleToogleModalOperation}\r\n                  />\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalSelect\r\n                    options={operationStaffOption}\r\n                    value={operationStaff}\r\n                    name=\"operationStaff\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"input-group mt-2 mt-1 d-flex\"\r\n                  style={{ overflowX: \"scroll\", flexWrap: \"nowrap\" }}\r\n                >\r\n                  {operationStaffTag &&\r\n                    operationStaffTag.map((data, key) => {\r\n                      return (\r\n                        <p\r\n                          className=\"mr-3  bg-primary p-1 mb-1 px-3 rounded-2xl text-white text-center rounded\"\r\n                          key={key}\r\n                          onClick={(e) =>\r\n                            this.handleFilterTag(e, data, \"operationStaffTag\")\r\n                          }\r\n                        >\r\n                          {data},\r\n                        </p>\r\n                      );\r\n                    })}\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div className=\"col-6 mb-3\">\r\n                  <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n                    {t(\"Join Date\")}\r\n                  </label>\r\n                  <div className=\"input-group\">\r\n                    <NormalDateTime\r\n                      onChange={this.handleDatePick}\r\n                      inputcol=\"p-0 inTime\"\r\n                      value={emp_joindate}\r\n                      name=\"emp_joindate\"\r\n                      className=\"dob-pick\"\r\n                      showYearDropdown={true}\r\n                      dateFormat=\"MM/dd/yyyy\"\r\n                    />\r\n                  </div>\r\n                  {this.validator.message(\r\n                    t(\"join date\"),\r\n                    emp_joindate,\r\n                    t(\"required\")\r\n                  )}\r\n                </div> */}\r\n              {this.props.match.params.id && (\r\n                <div className=\"col-md-12 project-content\">\r\n                  <div className=\"tab-menus\">\r\n                    <ul>\r\n                      {navLinks.map(({ to, label, id }, index) => (\r\n                        <li key={index}>\r\n                          <NavLink to={to} className=\"nav-link\">\r\n                            <div\r\n                              className={`sidebar-menu ${\r\n                                currentValue === index ? \"active\" : \"\"\r\n                              }`}\r\n                              onClick={() =>\r\n                                this.handleClick({ key: index, id: id })\r\n                              }\r\n                            >\r\n                              <span className=\"sidebar-menu-desc\">\r\n                                {t(label)}\r\n                              </span>\r\n                            </div>\r\n                          </NavLink>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                  {this.state.selectedMenu === \"Activities\" && (\r\n                    <Activities\r\n                      fk_id={this.props.match.params.id}\r\n                      id={this.state.selectedMenu}\r\n                      // search={formFields.search}\r\n                      api={\"activities\"}\r\n                    />\r\n                  )}\r\n                  {this.state.selectedMenu === \"Quotation\" && (\r\n                    <Quotation\r\n                      fk_id={this.props.match.params.id}\r\n                      id={this.state.selectedMenu}\r\n                      // search={formFields.search}\r\n                      api={\"quotation\"}\r\n                    />\r\n                  )}\r\n                  {this.state.selectedMenu === \"PO\" && (\r\n                    <PO\r\n                      fk_id={this.props.match.params.id}\r\n                      id={this.state.selectedMenu}\r\n                      // search={formFields.search}\r\n                      api={\"po\"}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"col-md-4 col-12 mt-3\"></div>\r\n\r\n              <div className=\"col-md-4 col-12 mt-3\">\r\n                {/* <Link to=\"/admin/project\"> */}\r\n                <NormalButton\r\n                  buttonClass={\"mx-2 mb-3\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label=\"Cancel\"\r\n                  outline={false}\r\n                  onClick={() => {\r\n                    if (\r\n                      window.confirm(\r\n                        \"Are you sure you want to leave this page and discard changes?\"\r\n                      )\r\n                    )\r\n                      // window.location.href = '/admin/project'\r\n                      this.props.history.push(`/admin/project`);\r\n                  }}\r\n                  // onClick={this.handleSearch}\r\n                />\r\n                {/* </Link> */}\r\n              </div>\r\n\r\n              <div className=\"col-md-4 col-12 mt-3\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label=\"Save\"\r\n                  onClick={() => this.handleSubmit()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <NormalModal\r\n          modal={this.state.isModalVisible}\r\n          handleModal={this.handleToogleModal}\r\n          className={\"multiple-appointment select-category\"}\r\n          style={{ minWidth: \"800px\" }}\r\n        >\r\n          <>\r\n            <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n              Add Sales Staff\r\n            </label>\r\n            <div className=\"input-group\">\r\n              <NormalInput\r\n                placeholder=\"Enter here\"\r\n                value={this.state.formFields.addSalesStaff}\r\n                name=\"addSalesStaff\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <div className=\"col-md-4 col-12 mt-3 mr-5\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"cancel\"\r\n                  label=\"Cancel\"\r\n                  onClick={this.handleToogleModal}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-12 mt-3 mr-5\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label=\"Save\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      salesStaffTag: [\r\n                        this.state.formFields.addSalesStaff,\r\n                        ...this.state.salesStaffTag,\r\n                      ],\r\n                    });\r\n                    this.setState({ isModalVisible: false });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        </NormalModal>\r\n        <NormalModal\r\n          modal={this.state.isModalVisibleOperation}\r\n          handleModal={this.handleToogleModalOperation}\r\n          className={\"multiple-appointment select-category\"}\r\n          style={{ minWidth: \"800px\" }}\r\n        >\r\n          <>\r\n            <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n              Add Operation Staff\r\n            </label>\r\n            <div className=\"input-group\">\r\n              <NormalInput\r\n                placeholder=\"Enter here\"\r\n                value={this.state.formFields.addOperationStaff}\r\n                name=\"addOperationStaff\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <div className=\"col-md-4 col-12 mt-3 mr-5\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"cancel\"\r\n                  label=\"Cancel\"\r\n                  onClick={this.handleToogleModalOperation}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-12 mt-3 mr-5\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label=\"Save\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      operationStaffTag: [\r\n                        this.state.formFields.addOperationStaff,\r\n                        ...this.state.operationStaffTag,\r\n                      ],\r\n                    });\r\n                    this.setState({ isModalVisibleOperation: false });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        </NormalModal>\r\n        <NormalModal\r\n          modal={this.state.isModalVisibleAdmin}\r\n          handleModal={this.handleToogleModalAdmin}\r\n          className={\"multiple-appointment select-category\"}\r\n          style={{ minWidth: \"800px\" }}\r\n        >\r\n          <>\r\n            <label className=\"text-left text-black common-label-text fs-17 pt-3\">\r\n              Add Admin Staff\r\n            </label>\r\n            <div className=\"input-group\">\r\n              <NormalInput\r\n                placeholder=\"Enter here\"\r\n                value={this.state.formFields.addAdminStaff}\r\n                name=\"addAdminStaff\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <div className=\"col-md-4 col-12 mt-3 mr-5\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"cancel\"\r\n                  label=\"Cancel\"\r\n                  onClick={this.handleToogleModalAdmin}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-12 mt-3 mr-5\">\r\n                <NormalButton\r\n                  buttonClass={\"mx-2\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label=\"Save\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      adminStaffTag: [\r\n                        this.state.formFields.addAdminStaff,\r\n                        ...this.state.adminStaffTag,\r\n                      ],\r\n                    });\r\n                    this.setState({ isModalVisibleAdmin: false });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        </NormalModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tokenDetail: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      createProject,\r\n      updateProject,\r\n      getTokenDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\n// export const AddProject = withTranslation()(\r\n//   connect(mapStateToProps, mapDispatchToProps)(AddProjectClass)\r\n// );\r\n\r\nexport const AddProject = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(AddProjectClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}