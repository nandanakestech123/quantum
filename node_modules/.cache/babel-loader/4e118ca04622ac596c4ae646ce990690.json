{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\TCM\\\\TCMPaymentList\\\\index.js\";\nimport React from \"react\";\nimport { NormalButton, NormalSelect, TableWrapper } from \"component/common\";\nimport { getTcmApi, tcmCreateApi } from \"redux/actions/TCM\";\nimport { updateForm } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport _ from \"lodash\";\nimport { history } from \"helpers\";\nimport { withTranslation } from \"react-i18next\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { PDFViewer, PDFDownloadLink, BlobProvider } from \"@react-pdf/renderer\";\nimport Prescription from \"../Report/Prescription\";\nimport { Tcm } from \"service/apiVariables\";\nexport class TCMPaymentListClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerDetails: [{\n        label: \"Customer Code\"\n      }, {\n        label: \"Customer Name\"\n      }, {\n        label: \"NRIC\"\n      }, {\n        label: \"Gender\"\n      }, {\n        label: \"Age\"\n      }, {\n        label: \"Date\"\n      }, {\n        label: \"Physician\"\n      }, {\n        label: \"Status\"\n      }, {\n        label: \"Total Amount\"\n      }, {\n        label: \"\"\n      }, {\n        label: \"\"\n      }, {\n        label: \"\"\n      }],\n      tcmPaymentList: [],\n      pageMeta: {},\n      active: false,\n      currentIndex: -1,\n      isPrintPdfClick: false,\n      accountHeader: {\n        name: \"Prescription\",\n        address: \"\",\n        logo: \"\"\n      },\n      tcmPrescriptionMain: [],\n      tcmPrescriptionList: []\n    };\n\n    this.queryHandler = data => {\n      let payload = {\n        siteCode: this.props.tokenDetails.site_code,\n        date: dateFormat(new Date(), \"yyyy-mm-dd\")\n      };\n      this.props.tcmCreateApi(`tcmCustomerListFronDesk/`, payload).then(res => {\n        console.log(res, \"dsfdfaafg\");\n        let {\n          result,\n          success\n        } = res;\n        let {\n          tcmPaymentList\n        } = this.state;\n\n        if (success == \"1\" && result) {\n          tcmPaymentList = result;\n          this.setState({\n            tcmPaymentList\n          });\n        }\n      });\n    };\n\n    this.handleGotoCart = data => {\n      let formFields = {\n        custId: 0,\n        custName: \"\"\n      };\n      formFields[\"custId\"] = data.customerId;\n      formFields[\"custName\"] = data.customerName;\n      this.props.updateForm(\"basicApptDetail\", formFields);\n      history.push(\"/admin/cart\");\n    };\n\n    this.handleSendBack = data => {\n      let payload = {\n        AppointmentCode: data.apptCode,\n        status: \"Verify\",\n        siteCode: this.props.tokenDetails.site_code\n      };\n      this.props.tcmCreateApi(`tcmAppointmentStatus/`, payload).then(res => {\n        console.log(res, \"dsfdfaafgcustomerlist\");\n        let {\n          result,\n          success\n        } = res;\n\n        if (success == \"1\" && result) {\n          this.queryHandler({});\n        }\n      });\n    };\n\n    this.handlePrescription = data => {\n      this.props.getTcmApi(`tcmPrescriptionReceipt/?PrescriptionNo=${data.prescriptionNo}`).then(res => {\n        let {\n          result,\n          success\n        } = res;\n\n        if (success == \"1\" && result) {\n          console.log(result, \"dsfdfaafgprescriptionresponse\");\n          this.setState({\n            tcmPrescriptionMain: result\n          });\n          this.props.getTcmApi(`tcmPrescription/?PrescriptionNo=${data.prescriptionNo}`).then(res => {\n            let {\n              result,\n              success\n            } = res;\n\n            if (success == \"1\" && result) {\n              console.log(result, \"dsfdfaafgprescriptionresponse\");\n              this.setState({\n                tcmPrescriptionList: result\n              });\n              this.setState({\n                isPrintPdfClick: true\n              });\n            }\n          });\n        }\n      });\n    };\n\n    this.handlePrintPdfFormat = url => {\n      let {\n        tcmPrescriptionMain\n      } = this.state;\n      console.log(tcmPrescriptionMain, \"prescriptionmain\");\n      this.setState({\n        isPrintPdfClick: false\n      });\n      var a = document.createElement(\"a\");\n      a.setAttribute(\"download\", `${tcmPrescriptionMain[0].prescriptionNo}.pdf`);\n      a.setAttribute(\"href\", url);\n      a.click();\n      window.open(url);\n    };\n  }\n\n  componentDidMount() {\n    this.queryHandler({});\n  } // api call for list\n\n\n  render() {\n    let {\n      headerDetails,\n      tcmPaymentList,\n      pageMeta,\n      currentIndex,\n      tcmPrescriptionList,\n      isPrintPdfClick,\n      accountHeader,\n      tcmPrescriptionMain\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails // queryHandler={this.handlePagination}\n      // pageMeta={pageMeta}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, tcmPaymentList.length > 0 ? tcmPaymentList.filter(acc => String(acc.apptStatus).toUpperCase() === \"VERIFY\" || String(acc.apptStatus).toUpperCase() === \"AWAITING PAYMENT\").map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 27\n        }\n      }, data.customerCode)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 27\n        }\n      }, data.customerName)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 27\n        }\n      }, data.custNRIC)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 27\n        }\n      }, data.gender)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 27\n        }\n      }, data.customerAge)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 27\n        }\n      }, data.apptDate)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 27\n        }\n      }, data.physician)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }\n      }, data.apptStatus)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 27\n        }\n      }, data.paymentAmount)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex py-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        className: `fs-12`,\n        label: \"Prescribe\",\n        mainbgrev: true,\n        onClick: () => this.handlePrescription(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex py-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        className: \"fs-12\",\n        label: \"Payment\",\n        styleFive: true,\n        onClick: () => this.handleGotoCart(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex py-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        className: \"w-100 fs-12\",\n        label: \"Send Back\",\n        styleFour: true,\n        onClick: () => this.handleSendBack(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }\n      }))));\n    }) : null)), isPrintPdfClick ? /*#__PURE__*/React.createElement(PDFDownloadLink, {\n      document: /*#__PURE__*/React.createElement(Prescription, {\n        TableDetail: tcmPrescriptionList,\n        MainInfo: tcmPrescriptionMain,\n        accountHeader: accountHeader,\n        Flag: 1,\n        landscape: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, ({\n      blob,\n      url,\n      loading,\n      error\n    }) => !loading && url ? this.handlePrintPdfFormat(url) : null) : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // filter: state.dashboard\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getTcmApi,\n    tcmCreateApi,\n    updateForm\n  }, dispatch);\n};\n\nexport const TCMPaymentList = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TCMPaymentListClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/TCM/TCMPaymentList/index.js"],"names":["React","NormalButton","NormalSelect","TableWrapper","getTcmApi","tcmCreateApi","updateForm","connect","bindActionCreators","_","history","withTranslation","dateFormat","PDFViewer","PDFDownloadLink","BlobProvider","Prescription","Tcm","TCMPaymentListClass","Component","state","headerDetails","label","tcmPaymentList","pageMeta","active","currentIndex","isPrintPdfClick","accountHeader","name","address","logo","tcmPrescriptionMain","tcmPrescriptionList","queryHandler","data","payload","siteCode","props","tokenDetails","site_code","date","Date","then","res","console","log","result","success","setState","handleGotoCart","formFields","custId","custName","customerId","customerName","push","handleSendBack","AppointmentCode","apptCode","status","handlePrescription","prescriptionNo","handlePrintPdfFormat","url","a","document","createElement","setAttribute","click","window","open","componentDidMount","render","t","length","filter","acc","String","apptStatus","toUpperCase","map","index","customerCode","custNRIC","gender","customerAge","apptDate","physician","paymentAmount","blob","loading","error","mapStateToProps","authStore","mapDispatchToProps","dispatch","TCMPaymentList"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { NormalButton, NormalSelect, TableWrapper } from \"component/common\";\r\nimport { getTcmApi, tcmCreateApi } from \"redux/actions/TCM\";\r\nimport { updateForm } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport _ from \"lodash\";\r\nimport { history } from \"helpers\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { PDFViewer, PDFDownloadLink, BlobProvider } from \"@react-pdf/renderer\";\r\nimport Prescription from \"../Report/Prescription\";\r\nimport { Tcm } from \"service/apiVariables\";\r\n\r\nexport class TCMPaymentListClass extends React.Component {\r\n  state = {\r\n    headerDetails: [\r\n      { label: \"Customer Code\" },\r\n      { label: \"Customer Name\" },\r\n      { label: \"NRIC\" },\r\n      { label: \"Gender\" },\r\n      { label: \"Age\" },\r\n      { label: \"Date\" },\r\n      { label: \"Physician\" },\r\n      { label: \"Status\" },\r\n      { label: \"Total Amount\" },\r\n      { label: \"\" },\r\n      { label: \"\" },\r\n      { label: \"\" },\r\n    ],\r\n    tcmPaymentList: [],\r\n    pageMeta: {},\r\n    active: false,\r\n    currentIndex: -1,\r\n    isPrintPdfClick: false,\r\n    accountHeader: { name: \"Prescription\", address: \"\", logo: \"\" },\r\n    tcmPrescriptionMain: [],\r\n    tcmPrescriptionList: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.queryHandler({});\r\n  }\r\n\r\n  // api call for list\r\n  queryHandler = data => {\r\n    let payload = {\r\n      siteCode: this.props.tokenDetails.site_code,\r\n      date: dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n    };\r\n    this.props.tcmCreateApi(`tcmCustomerListFronDesk/`, payload).then(res => {\r\n      console.log(res, \"dsfdfaafg\");\r\n      let { result, success } = res;\r\n      let { tcmPaymentList } = this.state;\r\n      if (success == \"1\" && result) {\r\n        tcmPaymentList = result;\r\n        this.setState({\r\n          tcmPaymentList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleGotoCart = data => {\r\n    let formFields = { custId: 0, custName: \"\" };\r\n    formFields[\"custId\"] = data.customerId;\r\n    formFields[\"custName\"] = data.customerName;\r\n    this.props.updateForm(\"basicApptDetail\", formFields);\r\n\r\n    history.push(\"/admin/cart\");\r\n  };\r\n  handleSendBack = data => {\r\n    let payload = {\r\n      AppointmentCode: data.apptCode,\r\n      status: \"Verify\",\r\n      siteCode: this.props.tokenDetails.site_code,\r\n    };\r\n    this.props.tcmCreateApi(`tcmAppointmentStatus/`, payload).then(res => {\r\n      console.log(res, \"dsfdfaafgcustomerlist\");\r\n      let { result, success } = res;\r\n      if (success == \"1\" && result) {\r\n        this.queryHandler({});\r\n      }\r\n    });\r\n  };\r\n\r\n  handlePrescription = data => {\r\n    this.props\r\n      .getTcmApi(\r\n        `tcmPrescriptionReceipt/?PrescriptionNo=${data.prescriptionNo}`\r\n      )\r\n      .then(res => {\r\n        let { result, success } = res;\r\n        if (success == \"1\" && result) {\r\n          console.log(result, \"dsfdfaafgprescriptionresponse\");\r\n          this.setState({\r\n            tcmPrescriptionMain: result,\r\n          });\r\n          this.props\r\n            .getTcmApi(`tcmPrescription/?PrescriptionNo=${data.prescriptionNo}`)\r\n            .then(res => {\r\n              let { result, success } = res;\r\n              if (success == \"1\" && result) {\r\n                console.log(result, \"dsfdfaafgprescriptionresponse\");\r\n                this.setState({\r\n                  tcmPrescriptionList: result,\r\n                });\r\n                this.setState({ isPrintPdfClick: true });\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n  handlePrintPdfFormat = url => {\r\n    let { tcmPrescriptionMain } = this.state;\r\n    console.log(tcmPrescriptionMain, \"prescriptionmain\");\r\n    this.setState({\r\n      isPrintPdfClick: false,\r\n    });\r\n    var a = document.createElement(\"a\");\r\n    a.setAttribute(\"download\", `${tcmPrescriptionMain[0].prescriptionNo}.pdf`);\r\n    a.setAttribute(\"href\", url);\r\n    a.click();\r\n    window.open(url);\r\n  };\r\n  render() {\r\n    let {\r\n      headerDetails,\r\n      tcmPaymentList,\r\n      pageMeta,\r\n      currentIndex,\r\n      tcmPrescriptionList,\r\n      isPrintPdfClick,\r\n      accountHeader,\r\n      tcmPrescriptionMain,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"table-container mt-3\">\r\n          <TableWrapper\r\n            headerDetails={headerDetails}\r\n            // queryHandler={this.handlePagination}\r\n            // pageMeta={pageMeta}\r\n          >\r\n            {tcmPaymentList.length > 0\r\n              ? tcmPaymentList\r\n                  .filter(\r\n                    acc =>\r\n                      String(acc.apptStatus).toUpperCase() === \"VERIFY\" ||\r\n                      String(acc.apptStatus).toUpperCase() ===\r\n                        \"AWAITING PAYMENT\"\r\n                  )\r\n                  .map((data, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.customerCode}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.customerName}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.custNRIC}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.gender}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.customerAge}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.apptDate}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.physician}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.apptStatus}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex align-items-center justify-content-center\">\r\n                            {data.paymentAmount}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex py-0\">\r\n                            <NormalButton\r\n                              className={`fs-12`}\r\n                              label=\"Prescribe\"\r\n                              mainbgrev={true}\r\n                              onClick={() => this.handlePrescription(data)}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex py-0\">\r\n                            <NormalButton\r\n                              className=\"fs-12\"\r\n                              label=\"Payment\"\r\n                              styleFive={true}\r\n                              onClick={() => this.handleGotoCart(data)}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"d-flex py-0\">\r\n                            <NormalButton\r\n                              className=\"w-100 fs-12\"\r\n                              label=\"Send Back\"\r\n                              styleFour={true}\r\n                              onClick={() => this.handleSendBack(data)}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n              : null}\r\n          </TableWrapper>\r\n        </div>\r\n        {isPrintPdfClick ? (\r\n          <PDFDownloadLink\r\n            document={\r\n              <Prescription\r\n                TableDetail={tcmPrescriptionList}\r\n                MainInfo={tcmPrescriptionMain}\r\n                accountHeader={accountHeader}\r\n                Flag={1}\r\n                landscape={false}\r\n              />\r\n            }\r\n          >\r\n            {({ blob, url, loading, error }) =>\r\n              !loading && url ? this.handlePrintPdfFormat(url) : null\r\n            }\r\n          </PDFDownloadLink>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // filter: state.dashboard\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getTcmApi,\r\n      tcmCreateApi,\r\n      updateForm,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TCMPaymentList = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(TCMPaymentListClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}