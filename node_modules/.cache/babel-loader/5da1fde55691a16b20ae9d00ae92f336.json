{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\NewAppointment\\\\NewCreateAppointment\\\\NewSelectTreatment.js\";\nimport React, { Component } from \"react\";\nimport { NormalSelect, NormalButton, NormalModal, NormalInput, NormalDateTime, NormalCheckbox } from \"component/common\";\nimport \"./style.scss\";\nimport { updateForm, getSelectedTreatmentList } from \"redux/actions/appointment\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport closeIcon from \"assets/images/close.png\";\nimport req_therapist from \"assets/images/app-icons/1.png\";\nimport { getCommonApi, commonCreateApi, commonPatchApi } from \"redux/actions/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport _ from \"lodash\";\nimport { TableWrapper } from \"component/common\";\nimport { TreatmentPackage } from \"./modal/index\";\nimport { Toast } from \"service/toast\";\nimport { AppointmentForm } from \"./AppointmentForm\";\nimport { history } from \"helpers\";\nexport class NewSelectTreatmentClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treatmentDetail: [],\n      formFields: {\n        start_time: \"\",\n        end_time: \"\",\n        Item_Codeid: null,\n        add_duration: \"\",\n        emp_no: 0,\n        requesttherapist: false,\n        Item_CodeName: \"\",\n        edit_remark: \"\",\n        recur_days: null,\n        recur_qty: null,\n        item_text: null,\n        checktype: \"\",\n        treat_parentcode: null\n      },\n      selectedList: [{\n        start_time: \"\",\n        end_time: \"\",\n        Item_Codeid: null,\n        add_duration: \"\",\n        emp_no: 0,\n        requesttherapist: false,\n        Item_CodeName: \"\",\n        edit_remark: \"\",\n        recur_days: null,\n        recur_qty: null,\n        item_text: null,\n        checktype: \"\",\n        treat_parentcode: null\n      }],\n      outletOption: [],\n      staffOption: [],\n      roomOption: [],\n      list: [],\n      isOpenModal: false,\n      categoryList: [],\n      treatmentList: [],\n      siteList: [],\n      treatmentField: {\n        category: \"\",\n        treatment: \"\"\n      },\n      timeDropdown: [],\n      duration: [],\n      index: null,\n      search: \"\",\n      selectTreatmentId: \"\",\n      treatmentListHeader: [{\n        label: \"Category\",\n        className: \"w-50\"\n      }, {\n        label: \"Service\",\n        className: \"w-75\"\n      }, {\n        label: \"Duration\",\n        className: \"w-25\"\n      }, {\n        label: \"price\",\n        className: \"w-50\"\n      }],\n      meta: {},\n      isTreatementModal: false,\n      appointmentId: null,\n      PackageIndex: 0,\n      selectedRec_days: null,\n      selectedRec_qty: null,\n      recurringList: [],\n      recurringSelectedItems: [],\n      recurringSelectAll: false,\n      settingData: {},\n      PasteAppointmentId: 0\n    };\n\n    this.showErrorMessage = () => {\n      this.child.onFocus();\n    };\n\n    this.timeToDateFormat = TimeValue => {\n      let time = String(TimeValue).split(\":\");\n      let newTime = new Date(new Date().setHours(time[0], time[1], 0, 0));\n      return newTime;\n    };\n\n    this.handleRenderApptDetail = (appt_id, copy) => {\n      let {\n        formFields,\n        selectedList,\n        recurringList\n      } = this.state;\n      this.props.getCommonApi(`appointmentresources/${appt_id}/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(data.recur_lst, \"RecurringAppointmentrelatedList\");\n\n        if (status === 200) {\n          console.log(data, \"selectedCustomer\");\n          let startTime = this.timeToDateFormat(data.start_time);\n\n          if (copy) {\n            selectedList[0][\"end_time\"] = this.addTimes(selectedList[0][\"start_time\"], data.add_duration);\n            formFields[\"end_time\"] = this.addTimes(formFields[\"start_time\"], data.add_duration);\n            recurringList = [];\n          } else {\n            formFields[\"start_time\"] = data ? startTime : \"\";\n            formFields[\"end_time\"] = data ? data.end_time : \"\";\n            selectedList[0][\"start_time\"] = data ? startTime : \"\";\n            selectedList[0][\"end_time\"] = data ? data.end_time : \"\";\n            formFields[\"emp_no\"] = data.emp_id;\n            selectedList[0][\"emp_no\"] = data.emp_id;\n\n            for (let value of data.recur_lst) {\n              recurringList.push({\n                id: value.id,\n                date: value.date,\n                appt_status: value.appt_status,\n                start_time: value.start_time,\n                end_time: value.end_time,\n                item_name: value.item_name,\n                Item_Codeid: value.Item_Codeid,\n                emp_name: value.emp_name,\n                emp_id: value.emp_id,\n                requesttherapist: value.requesttherapist,\n                add_duration: value.add_duration,\n                selected: false,\n                checktype: value.checktype,\n                treat_parentcode: value.treat_parentcode\n              });\n            }\n          }\n\n          formFields[\"Item_Codeid\"] = data.Item_Codeid;\n          formFields[\"Item_CodeName\"] = data.item_name;\n          formFields[\"add_duration\"] = data.add_duration;\n          formFields[\"edit_remark\"] = \"\";\n          formFields[\"requesttherapist\"] = data.requesttherapist;\n          formFields[\"recur_days\"] = data.recur_days;\n          formFields[\"recur_qty\"] = data.recur_qty;\n          formFields[\"item_text\"] = data.item_name;\n          formFields[\"checktype\"] = data.checktype;\n          formFields[\"treat_parentcode\"] = data.treat_parentcode;\n          selectedList[0][\"Item_Codeid\"] = data.Item_Codeid;\n          selectedList[0][\"Item_CodeName\"] = data.item_name;\n          selectedList[0][\"add_duration\"] = data.add_duration;\n          selectedList[0][\"edit_remark\"] = \"\";\n          selectedList[0][\"requesttherapist\"] = data.requesttherapist;\n          selectedList[0][\"recur_days\"] = data.recur_days;\n          selectedList[0][\"recur_qty\"] = data.recur_qty;\n          selectedList[0][\"item_text\"] = data.item_name;\n          selectedList[0][\"checktype\"] = data.checktype;\n          selectedList[0][\"treat_parentcode\"] = data.treat_parentcode;\n          this.setState({\n            selectedRec_days: data.recur_days,\n            selectedRec_qty: data.recur_qty\n          });\n          this.setState({\n            formFields,\n            selectedList\n          });\n          this.props.updateForm(\"treatmentList\", selectedList);\n        }\n      });\n    };\n\n    this.handleItemSettings = () => {\n      let {\n        settingData\n      } = this.state;\n      this.props.getCommonApi(`userlist/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(key, \"settingsData appointmentCreate\");\n\n        if (status === 200) {\n          settingData = data;\n          this.setState({\n            settingData\n          });\n        }\n      });\n    };\n\n    this.getStaffAvailability = () => {\n      this.props.getCommonApi(`staffsavailable/?Appt_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          // for (let value of data) {\n          //     staffList.push({ value: value.id, label: value.emp_name })\n          // }\n          this.setState({\n            list: data\n          });\n        }\n      });\n    };\n\n    this.handleSearch = event => {\n      event.persist();\n      console.log(event.target.value, event.target, event, \"dfhdfjghkjfghj\");\n      let {\n        treatmentField\n      } = this.state;\n      treatmentField[\"treatment\"] = event.target.value;\n      this.setState({\n        search: event.target.value,\n        treatmentField\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          let data = {\n            search: searchString\n          }; // this.queryHandler(data)\n\n          this.search(data);\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = data => {\n      let {\n        page = 1,\n        limit = 10,\n        search = \"\"\n      } = data;\n      let {\n        selectTreatmentId\n      } = this.state;\n      this.props.getCommonApi(`stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`).then(res => {\n        console.log(res, \"treatmentList treatment_parentcode\");\n\n        if (res.status === 200) {\n          this.setState({\n            treatmentList: res.data.dataList,\n            meta: res.data.meta.pagination\n          });\n        }\n      });\n    };\n\n    this.handlePagination = page => {\n      this.search(page);\n    };\n\n    this.handleChangeTreatment = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        treatmentField,\n        search,\n        selectTreatmentId\n      } = this.state;\n      console.log(\"uihwkjrwkej\", name, value);\n      treatmentField[name] = value;\n\n      if (name === \"category\") {\n        selectTreatmentId = value;\n      } else if (name === \"treatment\") {\n        search = value;\n      }\n\n      await this.setState({\n        treatmentField,\n        selectTreatmentId,\n        search\n      });\n      let page = 1,\n          limit = 10;\n      this.props.getCommonApi(`stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          this.setState({\n            treatmentList: res.data.dataList,\n            meta: res.data.meta.pagination\n          });\n        }\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }, index) => {\n      let {\n        selectedList,\n        appointmentId\n      } = this.state;\n\n      if (name === \"add_duration\") {\n        if (appointmentId) {\n          selectedList[index][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[index][\"start_time\"]), value);\n        } else {\n          selectedList[index][\"end_time\"] = this.addTimes(selectedList[index][\"start_time\"], value);\n        }\n\n        selectedList[index][\"add_duration\"] = value;\n\n        if (selectedList.length - 1 > index) {\n          selectedList[index + 1][\"start_time\"] = selectedList[index][\"end_time\"];\n\n          if (selectedList[index + 1][\"add_duration\"] !== \"\") {\n            selectedList[index + 1][\"end_time\"] = this.addTimes(selectedList[index][\"end_time\"], selectedList[index + 1][\"add_duration\"]);\n          }\n        }\n      } else if (name === \"Item_CodeName\") {\n        selectedList[index][\"Item_Codeid\"] = 6213;\n        selectedList[index][\"Item_CodeName\"] = value;\n        selectedList[index][\"item_text\"] = value;\n        selectedList[index][\"checktype\"] = \"freetext\";\n        selectedList[index][\"treat_parentcode\"] = null;\n      } else if (name === \"recur_days\" || name === \"recur_qty\") {\n        if (value <= 0 || value === \"\") {\n          selectedList[index][name] = null;\n        } else {\n          selectedList[index][name] = Number(value);\n        }\n      } else {\n        selectedList[index][name] = value;\n      }\n\n      await this.setState({\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.handleMultiSelect = data => {\n      let {\n        formFields\n      } = this.state;\n      let list = [];\n\n      for (let key of data) {\n        list.push(key.value);\n      }\n\n      formFields[\"emp_no\"] = list;\n      this.setState({\n        formFields\n      });\n      console.log(formFields, \"oyokkjk\");\n    };\n\n    this.handleDatePick = async (name, value) => {\n      let {\n        formFields,\n        selectedList\n      } = this.state;\n      let time = this.getHoursFromDate(value);\n      formFields[\"start_time\"] = value;\n      selectedList[0][\"start_time\"] = value ? value : this.timeToDateFormat(formFields[\"start_time\"]);\n\n      if (time) {\n        formFields[\"end_time\"] = this.addTimes(time, formFields[\"add_duration\"]);\n        selectedList[0][\"end_time\"] = this.addTimes(time, formFields[\"add_duration\"]);\n      }\n\n      await this.setState({\n        formFields,\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.getHoursFromDate = date => {\n      let hour = date.getHours();\n      let minute = date.getMinutes();\n      let hours = hour > 9 ? hour : \"0\" + hour;\n      let minutes = minute > 9 ? minute : \"0\" + minute;\n      return hours + \":\" + minutes;\n    };\n\n    this.stafflistvalidation = appointmentTreatmentList => {\n      if (appointmentTreatmentList.length > 0) {\n        for (let item of appointmentTreatmentList) {\n          if (!item.emp_no || item.emp_no === \"\" || item.emp_no === null) {\n            Toast({\n              type: \"error\",\n              message: \"Please select Staff\"\n            });\n            return false;\n          } else {\n            return true;\n          }\n        }\n      }\n    };\n\n    this.handleUpdate = () => {\n      let {\n        appointmentCustomerDetail,\n        appointmentTreatmentList\n      } = this.props;\n      let {\n        appointmentId,\n        selectedRec_days,\n        selectedRec_qty\n      } = this.state;\n\n      if (appointmentCustomerDetail.customerName && appointmentCustomerDetail.bookingStatus) {\n        if (this.stafflistvalidation(appointmentTreatmentList)) {\n          let data = {\n            appt_date: dateFormat(new Date(appointmentCustomerDetail.appointmentDate), \"yyyy-mm-dd\"),\n            Room_Codeid: appointmentCustomerDetail.Room_Codeid,\n            appt_status: appointmentCustomerDetail.bookingStatus,\n            sec_status: appointmentCustomerDetail.sec_status,\n            ori_remark: appointmentCustomerDetail.new_remark,\n            edit_remark: appointmentCustomerDetail.edit_remark,\n            start_time: this.getHoursFromDate(appointmentTreatmentList[0].start_time),\n            end_time: appointmentTreatmentList[0].end_time,\n            item_id: appointmentTreatmentList[0].Item_Codeid,\n            add_duration: appointmentTreatmentList[0].add_duration,\n            emp_id: appointmentTreatmentList[0].emp_no,\n            requesttherapist: appointmentTreatmentList[0].requesttherapist,\n            item_text: appointmentTreatmentList[0].item_text,\n            recur_days: selectedRec_days === appointmentTreatmentList[0].recur_days || appointmentTreatmentList[0].recur_days === \"\" || appointmentTreatmentList[0].recur_days <= 0 ? null : appointmentTreatmentList[0].recur_days,\n            recur_qty: Number(selectedRec_qty) === Number(appointmentTreatmentList[0].recur_qty) || Number(appointmentTreatmentList[0].recur_qty) === \"\" || Number(appointmentTreatmentList[0].recur_qty) <= 0 ? null : Number(appointmentTreatmentList[0].recur_qty),\n            checktype: appointmentTreatmentList[0].checktype,\n            treat_parentcode: appointmentTreatmentList[0].treat_parentcode,\n            remark_setting: appointmentCustomerDetail.remark_setting\n          };\n          console.log(data, \"UpdatedappointmentTreatmentListWhenupdate\");\n          this.props.commonPatchApi(`appointmentresources/${appointmentId}/`, data).then(async res => {\n            console.log(res, \"cart check while update booking\");\n\n            if (res.status === 200) {\n              this.handleCloseDialog();\n              this.handleSaveorUpdate();\n            } else if (res.status === 201) {\n              // this.handleCloseDialog();\n              // this.handleSaveorUpdate();\n              let formFields = {\n                custId: 0,\n                custName: \"\"\n              };\n              formFields[\"custId\"] = appointmentCustomerDetail.customerName;\n              formFields[\"custName\"] = appointmentCustomerDetail.custName;\n              await this.props.updateForm(\"basicApptDetail\", formFields);\n              this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${appointmentCustomerDetail.customerName}`).then(res => {\n                history.push(\"/admin/cart\");\n              });\n            }\n          });\n        }\n      } else {\n        this.showErrorMessage();\n      }\n    };\n\n    this.handleRecurringUpdate = () => {\n      let {\n        appointmentCustomerDetail,\n        appointmentTreatmentList\n      } = this.props;\n      let {\n        appointmentId,\n        selectedRec_days,\n        selectedRec_qty,\n        recurringList,\n        recurringSelectAll\n      } = this.state;\n      let finalRecurring = [];\n\n      for (var recurringItem of recurringList) {\n        if (recurringItem.selected) {\n          let value = recurringItem.id;\n          finalRecurring.push(value);\n        }\n      }\n\n      console.log(finalRecurring, \"finalrecurringList\");\n\n      if (appointmentCustomerDetail.customerName && appointmentCustomerDetail.bookingStatus) {\n        if (this.stafflistvalidation(appointmentTreatmentList)) {\n          let data = {\n            appt_date: dateFormat(new Date(appointmentCustomerDetail.appointmentDate), \"yyyy-mm-dd\"),\n            Room_Codeid: appointmentCustomerDetail.Room_Codeid,\n            appt_status: appointmentCustomerDetail.bookingStatus,\n            sec_status: appointmentCustomerDetail.sec_status,\n            edit_remark: appointmentCustomerDetail.edit_remark,\n            start_time: this.getHoursFromDate(appointmentTreatmentList[0].start_time),\n            end_time: appointmentTreatmentList[0].end_time,\n            item_id: appointmentTreatmentList[0].Item_Codeid,\n            add_duration: appointmentTreatmentList[0].add_duration,\n            emp_id: appointmentTreatmentList[0].emp_no,\n            requesttherapist: appointmentTreatmentList[0].requesttherapist,\n            item_text: appointmentTreatmentList[0].item_text,\n            recur_days: selectedRec_days === appointmentTreatmentList[0].recur_days || appointmentTreatmentList[0].recur_days === \"\" || appointmentTreatmentList[0].recur_days <= 0 ? null : appointmentTreatmentList[0].recur_days,\n            recur_qty: Number(selectedRec_qty) === Number(appointmentTreatmentList[0].recur_qty) || Number(appointmentTreatmentList[0].recur_qty) === \"\" || Number(appointmentTreatmentList[0].recur_qty) <= 0 ? null : Number(appointmentTreatmentList[0].recur_qty),\n            recur_ids: finalRecurring\n          };\n          console.log(data, \"UpdatedappointmentTreatmentListWhenupdate\");\n\n          if (recurringSelectAll) {\n            this.props.commonPatchApi(`appointmentrecur/${appointmentId}/?type=${`all`} `, data).then(async res => {\n              if (res.status === 200) {\n                this.handleCloseDialog();\n                this.handleSaveorUpdate();\n              }\n            });\n          } else {\n            this.props.commonPatchApi(`appointmentrecur/${appointmentId}/`, data).then(async res => {\n              console.log(res, \"type all clicked result\");\n\n              if (res.status === 200) {\n                this.handleCloseDialog();\n                this.handleSaveorUpdate();\n              }\n            });\n          }\n        }\n      } else {\n        this.showErrorMessage();\n      }\n    };\n\n    this.handleSubmit = () => {\n      // this.props.handleConfirmBooking()\n      let {\n        appointmentCustomerDetail,\n        appointmentTreatmentList\n      } = this.props;\n      console.log(appointmentCustomerDetail, \"appointmentcustomerdetailwhenSave\");\n      console.log(appointmentTreatmentList, \"UpdatedappointmentTreatmentListWhenSave\");\n\n      if (appointmentCustomerDetail.customerName && appointmentCustomerDetail.bookingStatus) {\n        if (this.stafflistvalidation(appointmentTreatmentList)) {\n          let data = {\n            Appointment: {\n              appt_date: dateFormat(new Date(appointmentCustomerDetail.appointmentDate), \"yyyy-mm-dd\"),\n              Appt_typeid: appointmentCustomerDetail.Appt_typeid,\n              cust_noid: appointmentCustomerDetail.customerName,\n              new_remark: appointmentCustomerDetail.new_remark,\n              // emp_noid: appointmentCustomerDetail.emp_id,\n              Source_Codeid: appointmentCustomerDetail.Source_Codeid,\n              Room_Codeid: appointmentCustomerDetail.Room_Codeid,\n              appt_status: appointmentCustomerDetail.bookingStatus,\n              sec_status: appointmentCustomerDetail.sec_status,\n              ItemSite_Codeid: appointmentCustomerDetail.ItemSite_Codeid,\n              walkin: appointmentCustomerDetail.walkin\n            },\n            Treatment: appointmentTreatmentList\n          };\n          this.props.commonCreateApi(`appointment/`, data).then(async res => {\n            if (res.status === 201) {\n              this.handleCloseDialog();\n              this.handleSaveorUpdate();\n            }\n          });\n        }\n      } else {\n        this.showErrorMessage();\n      }\n    };\n\n    this.getDateTime = data => {\n      let date = new Date(data);\n      date = String(date).split(\" \");\n      let date1 = date[2] + \"th \" + date[1] + \", \" + date[3];\n      let time = date[4].split(\":\");\n      let time1 = String(Number(time[0]) > 12 ? Number(time[0]) - 12 : time[0]) + \":\" + time[1] + (Number(time[0]) > 12 ? \"PM\" : \"AM\");\n      return time1 + \", \" + date1;\n    };\n\n    this.handleDialog = () => {\n      this.setState({\n        isOpenModal: false,\n        index: null\n      });\n    };\n\n    this.handleMultipleCustomer = () => {\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.handleSelectPackage = async data => {\n      debugger;\n      let {\n        selectedList,\n        PackageIndex,\n        appointmentId\n      } = this.state;\n\n      if (PackageIndex === 0 && selectedList[0][\"Item_CodeName\"] === \"\") {\n        selectedList[0][\"start_time\"] = selectedList[0][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[0][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[0][\"start_time\"]), data.add_duration);\n        } else {\n          selectedList[0][\"end_time\"] = this.addTimes(selectedList[0][\"start_time\"], data.add_duration);\n        }\n\n        selectedList[0][\"Item_Codeid\"] = data.id;\n        selectedList[0][\"Item_CodeName\"] = data.item_desc;\n        selectedList[0][\"item_text\"] = null;\n        selectedList[0][\"add_duration\"] = data.add_duration;\n        selectedList[0][\"checktype\"] = \"package\";\n        selectedList[0][\"treat_parentcode\"] = data.treatment_parentcode;\n        await this.setState({\n          selectedList,\n          PackageIndex: PackageIndex + 1\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else if (selectedList[selectedList.length - 1][\"Item_CodeName\"] === \"\") {\n        selectedList[selectedList.length - 1][\"start_time\"] = selectedList[selectedList.length - 1][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[selectedList.length - 1][\"start_time\"]), data.add_duration);\n        } else {\n          selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(selectedList[selectedList.length - 1][\"start_time\"], data.add_duration);\n        }\n\n        selectedList[selectedList.length - 1][\"Item_Codeid\"] = data.id;\n        selectedList[selectedList.length - 1][\"Item_CodeName\"] = data.item_desc;\n        selectedList[selectedList.length - 1][\"item_text\"] = null;\n        selectedList[selectedList.length - 1][\"add_duration\"] = data.add_duration;\n        selectedList[selectedList.length - 1][\"checktype\"] = \"package\";\n        selectedList[selectedList.length - 1][\"treat_parentcode\"] = data.treatment_parentcode;\n        await this.setState({\n          selectedList,\n          PackageIndex: PackageIndex + 1\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else if (selectedList[selectedList.length - 1][\"Item_CodeName\"] !== \"\" && appointmentId) {\n        selectedList[selectedList.length - 1][\"start_time\"] = selectedList[selectedList.length - 1][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[selectedList.length - 1][\"start_time\"]), data.add_duration);\n        } else {\n          selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(selectedList[selectedList.length - 1][\"start_time\"], data.add_duration);\n        }\n\n        selectedList[selectedList.length - 1][\"Item_Codeid\"] = data.id;\n        selectedList[selectedList.length - 1][\"Item_CodeName\"] = data.item_desc;\n        selectedList[selectedList.length - 1][\"item_text\"] = null;\n        selectedList[selectedList.length - 1][\"add_duration\"] = data.add_duration;\n        selectedList[selectedList.length - 1][\"checktype\"] = \"package\";\n        selectedList[selectedList.length - 1][\"treat_parentcode\"] = data.treatment_parentcode;\n        await this.setState({\n          selectedList,\n          PackageIndex: PackageIndex + 1\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else {\n        var listCount = selectedList.length - 1;\n        let treatment = {};\n\n        if (appointmentId) {\n          treatment[\"start_time\"] = this.timeToDateFormat(selectedList[listCount][\"end_time\"]);\n        } else {\n          treatment[\"start_time\"] = selectedList[listCount][\"end_time\"];\n        }\n\n        treatment[\"end_time\"] = this.addTimes(selectedList[listCount][\"end_time\"], data.add_duration);\n        treatment[\"Item_Codeid\"] = data.id;\n        treatment[\"Item_CodeName\"] = data.item_desc;\n        treatment[\"item_text\"] = null;\n        treatment[\"add_duration\"] = data.add_duration;\n        treatment[\"checktype\"] = \"package\";\n        treatment[\"treat_parentcode\"] = data.treatment_parentcode;\n        selectedList.push(treatment);\n        await this.setState({\n          selectedList\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      }\n\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.handleSelectTreatment = async data => {\n      let {\n        selectedList,\n        index,\n        appointmentId\n      } = this.state;\n\n      if (index == 0 && selectedList.length == 1) {\n        selectedList[0][\"start_time\"] = selectedList[0][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[0][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[0][\"start_time\"]), data.add_duration);\n        } else {\n          selectedList[0][\"end_time\"] = this.addTimes(selectedList[0][\"start_time\"], data.add_duration);\n        }\n\n        selectedList[0][\"Item_Codeid\"] = data.id;\n        selectedList[0][\"Item_CodeName\"] = data.item_desc;\n        selectedList[0][\"add_duration\"] = data.add_duration;\n        selectedList[0][\"checktype\"] = \"service\";\n        selectedList[0][\"treat_parentcode\"] = null;\n        await this.setState({\n          selectedList\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else {\n        selectedList[index][\"start_time\"] = selectedList[index][\"start_time\"];\n\n        if (appointmentId) {\n          selectedList[index][\"end_time\"] = this.addTimes(this.getHoursFromDate(selectedList[index][\"start_time\"]), data.add_duration);\n        } else {\n          selectedList[index][\"end_time\"] = this.addTimes(selectedList[index][\"start_time\"], data.add_duration);\n        }\n\n        selectedList[index][\"Item_Codeid\"] = data.id;\n        selectedList[index][\"Item_CodeName\"] = data.item_desc;\n        selectedList[index][\"add_duration\"] = data.add_duration;\n        selectedList[index][\"checktype\"] = \"service\";\n        selectedList[index][\"treat_parentcode\"] = null;\n\n        if (selectedList.length - 1 > index) {\n          selectedList[index + 1][\"start_time\"] = selectedList[index][\"end_time\"];\n\n          if (selectedList[index + 1][\"add_duration\"] !== \"\") {\n            selectedList[index + 1][\"end_time\"] = this.addTimes(selectedList[index][\"end_time\"], selectedList[index + 1][\"add_duration\"]);\n          }\n        }\n\n        await this.setState({\n          selectedList\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      }\n\n      this.setState({\n        isOpenModal: false\n      });\n    };\n\n    this.timeToMins = time => {\n      var b = time.split(\":\");\n      return b[0] * 60 + +b[1];\n    };\n\n    this.timeFromMins = mins => {\n      function z(n) {\n        return (n < 10 ? \"0\" : \"\") + n;\n      }\n\n      var h = (mins / 60 | 0) % 24;\n      var m = mins % 60;\n      return z(h) + \":\" + z(m);\n    };\n\n    this.addTimes = (t0, t1) => {\n      return this.timeFromMins(this.timeToMins(t0) + this.timeToMins(t1));\n    };\n\n    this.handleNewTimeChange = selectedTime => {\n      let time = new Date(dateFormat(selectedTime));\n      let selectedTimeNew = time.getTime();\n      console.log(selectedTimeNew);\n      let {\n        selectedList,\n        formFields\n      } = this.state;\n      formFields = {\n        start_time: selectedTimeNew,\n        end_time: \"\",\n        add_duration: \"\"\n      };\n    };\n\n    this.handleAddtreatment = async index => {\n      let {\n        selectedList,\n        formFields\n      } = this.state;\n\n      if (selectedList[index][\"end_time\"]) {\n        formFields = {\n          start_time: selectedList[selectedList.length - 1].end_time,\n          end_time: \"\",\n          Item_Codeid: 6213,\n          add_duration: \"\",\n          emp_no: 0,\n          requesttherapist: false,\n          recur_days: null,\n          recur_qty: null,\n          item_text: null,\n          checktype: \"\",\n          treat_parentcode: null\n        };\n        selectedList.push({\n          start_time: selectedList[selectedList.length - 1].end_time,\n          end_time: \"\",\n          Item_Codeid: 6213,\n          Item_CodeName: \"\",\n          add_duration: \"\",\n          emp_no: 0,\n          requesttherapist: false,\n          recur_days: null,\n          recur_qty: null,\n          item_text: null,\n          checktype: \"\",\n          treat_parentcode: null\n        });\n        await this.setState({\n          selectedList,\n          formFields\n        });\n        await this.props.updateForm(\"treatmentList\", selectedList);\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"End time shouldn't be empty\"\n        });\n      }\n    };\n\n    this.deleteTreatment = async index => {\n      let {\n        selectedList\n      } = this.state;\n      selectedList.splice(index, 1);\n      this.setState({\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.handleTreatementmodal = () => {\n      this.setState(prevState => ({\n        isTreatementModal: !prevState.isTreatementModal\n      }));\n    };\n\n    this.handleChangeremark = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields,\n        selectedList\n      } = this.state;\n      formFields[name] = value;\n      selectedList[0][name] = value;\n      await this.setState({\n        formFields,\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.handleCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }, index) => {\n      let {\n        treatmentList\n      } = this.state;\n      let {\n        selectedList\n      } = this.state;\n      selectedList[index][\"requesttherapist\"] = value;\n      await this.setState({\n        selectedList\n      });\n      await this.props.updateForm(\"treatmentList\", selectedList);\n    };\n\n    this.handleCloseDialog = async () => {\n      this.props.handleCloseDialog();\n    };\n\n    this.handleSaveorUpdate = async () => {\n      this.props.handleSaveorUpdate();\n    };\n\n    this.handleRecurringlistCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }, item) => {\n      let {\n        recurringList\n      } = this.state;\n      let listCheckbox = recurringList.find(acc => acc.id === item.id);\n\n      if (listCheckbox) {\n        listCheckbox[\"selected\"] = value;\n        await this.setState({ ...this.state.recurringList,\n          listCheckbox\n        });\n      }\n\n      let Checkbox = recurringList.filter(acc => acc.selected === true).length;\n\n      if (Checkbox == this.state.recurringList.length) {\n        await this.setState({\n          recurringSelectAll: true\n        });\n      } else {\n        await this.setState({\n          recurringSelectAll: false\n        });\n      }\n    };\n\n    this.handleRecurringSelectAllCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        recurringList\n      } = this.state;\n      await this.setState({\n        recurringSelectAll: value\n      });\n\n      for (let item of recurringList) {\n        item[\"selected\"] = value;\n        await this.setState({ ...this.state.recurringList,\n          item\n        });\n      }\n    };\n\n    this.handleCopyAppointment = async () => {\n      let {\n        appointmentId\n      } = this.state;\n      let formFields = {};\n      formFields[\"appointmentId\"] = appointmentId;\n      await this.props.updateForm(\"AppointmentCopy\", formFields);\n      console.log(this.props.AppointmentCopy, \"after copy click appointment copy id\");\n      Toast({\n        type: \"success\",\n        message: \"Appointment copied\"\n      });\n    };\n\n    this.handlePasteAppointment = async () => {\n      let {\n        AppointmentCopy\n      } = this.props;\n\n      if (AppointmentCopy) {\n        this.setState({\n          PasteAppointmentId: AppointmentCopy.appointmentId\n        });\n        this.handleRenderApptDetail(AppointmentCopy.appointmentId, true);\n      }\n    };\n\n    this.child = React.createRef();\n  }\n\n  componentDidMount() {\n    this.search({});\n    this.handleItemSettings();\n    let {\n      categoryList,\n      staffOption,\n      selectedList,\n      formFields,\n      duration\n    } = this.state;\n    let {\n      basicApptDetail,\n      AppointmentCopy\n    } = this.props;\n    console.log(AppointmentCopy, \"Basic app detail data\");\n\n    if (basicApptDetail.appt_id) {\n      this.setState({\n        appointmentId: basicApptDetail.appt_id\n      });\n      this.handleRenderApptDetail(basicApptDetail.appt_id, false);\n    } else {\n      formFields[\"start_time\"] = basicApptDetail ? basicApptDetail.time : \"\";\n      formFields[\"emp_no\"] = basicApptDetail ? basicApptDetail.staff_id : 0;\n      selectedList[0][\"start_time\"] = basicApptDetail ? basicApptDetail.time : \"\";\n      selectedList[0][\"emp_no\"] = basicApptDetail ? basicApptDetail.staff_id : 0;\n      this.setState({\n        formFields,\n        selectedList\n      });\n      this.props.updateForm(\"treatmentList\", selectedList);\n    }\n\n    this.props.getCommonApi(`itemdept/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          categoryList.push({\n            value: value.id,\n            label: value.itm_desc\n          });\n        }\n\n        this.setState({\n          categoryList\n        });\n      }\n    });\n    this.props.getCommonApi(`appointment/Staffs/?Outlet=${basicApptDetail.branchId}&date=${dateFormat(new Date())}`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          staffOption.push({\n            value: value.id,\n            label: value.emp_name\n          });\n        }\n\n        this.setState({\n          staffOption\n        });\n      }\n    });\n    this.props.getCommonApi(`treatment/Duration/`).then(key => {\n      let {\n        status,\n        data\n      } = key;\n\n      if (status === 200) {\n        for (let value of data) {\n          duration.push({\n            value: value,\n            label: value\n          });\n        }\n\n        this.setState({\n          duration\n        });\n      }\n    });\n    this.getStaffAvailability();\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n  }\n\n  render() {\n    let {\n      outletOption,\n      staffOption,\n      roomOption,\n      selectedList,\n      siteList,\n      list,\n      formFields,\n      timeDropdown,\n      duration,\n      isOpenModal,\n      treatmentField,\n      treatmentList = [],\n      categoryList,\n      treatmentListHeader,\n      meta,\n      isTreatementModal,\n      appointmentId,\n      selectedRec_days,\n      selectedRec_qty,\n      recurringList,\n      recurringSelectAll,\n      settingData,\n      PasteAppointmentId\n    } = this.state;\n    let {\n      customerDetail,\n      selectedTreatmentList,\n      customerId\n    } = this.props;\n    let {\n      outlet,\n      staff,\n      rooms\n    } = customerDetail;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, PasteAppointmentId <= 0 ? /*#__PURE__*/React.createElement(AppointmentForm, {\n      onRef: ref => this.child = ref,\n      selectedCustomer: this.props.selectedCustomer,\n      PasteAppointmentId: PasteAppointmentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 11\n      }\n    }) : null, PasteAppointmentId > 0 ? /*#__PURE__*/React.createElement(AppointmentForm, {\n      onRef: ref => this.child = ref,\n      selectedCustomer: this.props.selectedCustomer,\n      PasteAppointmentId: PasteAppointmentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-appointment select-treatment-appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatment-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-treatment select-list w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row selected selected-header mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 25\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 25\n      }\n    }, \"End\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 25\n      }\n    }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 25\n      }\n    }, \"Duration\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 25\n      }\n    }, \"Treatment staff\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: req_therapist,\n      alt: \"\",\n      height: \"25\",\n      width: \"25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 header-detail d-flex justify-content-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 25\n      }\n    }, \"Recur. Days\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 header-detail d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 25\n      }\n    }, \"Recur. Qty\")), selectedList.length > 0 ? selectedList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row selected  mb-4\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 33\n        }\n      }, appointmentId ? /*#__PURE__*/React.createElement(NormalDateTime, {\n        onChange: this.handleDatePick,\n        label: \"start_time\",\n        name: \"start_time\",\n        timeOnly: true,\n        dateFormat: `HH:mm`,\n        showTime: true,\n        selected: false,\n        placeholder: \"\",\n        timeIntervals: 5,\n        value: item.start_time,\n        showIcon: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 37\n        }\n      }) : /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"start\" // options={timeDropdown}\n        ,\n        value: item.start_time,\n        name: \"start_time\",\n        onChange: this.handleChange,\n        className: \"customer-name p-0\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"end\" // options={timeDropdown}\n        ,\n        value: item.end_time,\n        name: \"end_time\",\n        onChange: this.handleChange,\n        className: \"customer-name p-0\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 mr-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 35\n        }\n      }), settingData && settingData.service_sel && settingData.service_text ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => this.setState({\n          isOpenModal: true,\n          index: index\n        }),\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 37\n        }\n      }) : null, settingData && settingData.service_sel && !settingData.service_text ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => this.setState({\n          isOpenModal: true,\n          index: index\n        }),\n        onChange: () => {},\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 37\n        }\n      }) : null, settingData && !settingData.service_sel && settingData.service_text ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => {},\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 37\n        }\n      }) : null, settingData && !settingData.service_sel && !settingData.service_text ? /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"service\" // options={siteList}\n        ,\n        value: item.Item_CodeName,\n        name: \"Item_CodeName\",\n        onClick: () => {},\n        onChange: () => {},\n        className: \"customer-name p-0 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 37\n        }\n      }) : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 mr-1 p-0 header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n      , {\n        options: duration,\n        value: item.add_duration,\n        name: \"add_duration\",\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n      , {\n        options: staffOption,\n        value: item.emp_no,\n        name: \"emp_no\",\n        onChange: e => this.handleChange(e, index),\n        className: \"customer-name p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 33\n        }\n      }, item.requesttherapist ? /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, index),\n        value: item.requesttherapist,\n        name: \"requesttherapist\",\n        checked: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 37\n        }\n      }) : /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, index),\n        value: item.requesttherapist,\n        name: \"requesttherapist\",\n        checked: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 d-flex justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        type: \"number\",\n        name: \"recur_days\",\n        value: item.recur_days ? item.recur_days : \"\",\n        onChange: e => this.handleChange(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 d-flex justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        type: \"number\",\n        name: \"recur_qty\",\n        value: item.recur_qty ? item.recur_qty : \"\",\n        onChange: e => this.handleChange(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 35\n        }\n      })), appointmentId ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(React.Fragment, null, selectedList.length === index + 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ml-3\",\n        onClick: () => this.handleAddtreatment(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"31\",\n        height: \"30\",\n        viewBox: \"0 0 31 30\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        width: \"31\",\n        height: \"30\",\n        fill: \"#F9F9F9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1316,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M15 8V22\",\n        stroke: \"#848484\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1321,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M8 15H22\",\n        stroke: \"#848484\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 43\n        }\n      }))) : /*#__PURE__*/React.createElement(\"img\", {\n        width: \"25\",\n        height: \"25\",\n        onClick: () => this.deleteTreatment(index),\n        className: \"ml-3\",\n        src: closeIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 39\n        }\n      })));\n    }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1355,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1356,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Treatment Package\",\n      onClick: this.handleTreatementmodal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1357,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1367,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 29\n      }\n    }, appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12\",\n      label: \"Customer Profile\",\n      onClick: () => history.push(`/admin/customer/${customerId}/account`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1370,\n        columnNumber: 33\n      }\n    }) : null, !appointmentId && this.props.AppointmentCopy && this.props.AppointmentCopy.appointmentId > 0 ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment ml-2\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Paste Appointment\",\n      onClick: this.handlePasteAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1395,\n        columnNumber: 33\n      }\n    }) : null, appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12\",\n      label: \"Copy Appointment\",\n      onClick: this.handleCopyAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1404,\n        columnNumber: 33\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1415,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1416,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment mr-2\",\n      mainbg: true,\n      className: \"col-12\",\n      label: \"Cancel\",\n      onClick: this.handleCloseDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 31\n      }\n    }), appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"submit-btn\",\n      mainbg: false,\n      className: \"col-12 submit-btn\",\n      label: \"Update Booking\",\n      onClick: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1426,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"submit-btn\",\n      mainbg: false,\n      className: \"col-12 submit-btn \",\n      label: \"Confirm Booking\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 33\n      }\n    }))))), recurringList && recurringList.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1447,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1448,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 29\n      }\n    }, \"Recurring Related Appointments\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row selected selected-header mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1452,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1453,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      label: `All`,\n      onChange: e => this.handleRecurringSelectAllCheckbox(e),\n      value: recurringSelectAll,\n      name: \"recurringSelectAll\",\n      checked: recurringSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1454,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 29\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 29\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466,\n        columnNumber: 29\n      }\n    }, \"End\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1467,\n        columnNumber: 29\n      }\n    }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 header-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1471,\n        columnNumber: 29\n      }\n    }, \"Duration\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1474,\n        columnNumber: 29\n      }\n    }, \"Treatment staff\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 p-0 d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1475,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: req_therapist,\n      alt: \"\",\n      height: \"25\",\n      width: \"25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1476,\n        columnNumber: 31\n      }\n    }))), recurringList && recurringList.length > 0 ? recurringList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row selected  mb-4\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleRecurringlistCheckbox(e, item),\n        value: item.selected,\n        name: \"recurringItem\",\n        checked: item.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 35\n        }\n      }, item.date), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 35\n        }\n      }, item.start_time), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1505,\n          columnNumber: 35\n        }\n      }, item.end_time), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 p-0 header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 35\n        }\n      }, item.item_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 header-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1512,\n          columnNumber: 35\n        }\n      }, item.add_duration), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1515,\n          columnNumber: 35\n        }\n      }, item.emp_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 p-0 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleRecurringlistCheckbox(e, item),\n        value: item.requesttherapist,\n        name: \"requesttherapist\",\n        checked: item.requesttherapist,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 37\n        }\n      })));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1536,\n        columnNumber: 29\n      }\n    }, \"No data\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1538,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1540,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1541,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12\",\n      label: \"Cancel\",\n      onClick: this.handleCloseDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542,\n        columnNumber: 35\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1550,\n        columnNumber: 33\n      }\n    }, appointmentId ? /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"submit-btn\",\n      mainbg: false,\n      className: \"col-12 submit-btn ml-4\",\n      label: \"Update Recurring\",\n      onClick: this.handleRecurringUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1552,\n        columnNumber: 37\n      }\n    }) : null))))) : null)))))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"multiple-appointment select-category\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: isOpenModal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1573,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1579,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-list container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1585,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pl-0 mb-3 fw-500 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1586,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 17\n      }\n    }, \"Select Treatment\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1589,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1591,\n        columnNumber: 19\n      }\n    }, \"Category\", /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: categoryList,\n      value: treatmentField.category,\n      name: \"category\",\n      onChange: this.handleChangeTreatment,\n      className: \"customer-name p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1593,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1602,\n        columnNumber: 19\n      }\n    }, \"Service\", /*#__PURE__*/React.createElement(\"input\", {\n      // placeholder=\"Enter here\"\n      // options={siteList}\n      value: treatmentField.treatment,\n      name: \"treatment\",\n      onChange: this.handleSearch,\n      className: \"search px-3 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container table-responsive mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1616,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: treatmentListHeader,\n      queryHandler: this.handlePagination,\n      pageMeta: meta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 17\n      }\n    }, treatmentList.length > 0 ? treatmentList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"w-100\",\n        onClick: () => this.handleSelectTreatment(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1625,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1630,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1632,\n          columnNumber: 29\n        }\n      }, item.Item_Class)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1636,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1638,\n          columnNumber: 29\n        }\n      }, item.item_desc)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1642,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1644,\n          columnNumber: 29\n        }\n      }, item.add_duration)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1648,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1650,\n          columnNumber: 29\n        }\n      }, item.item_price)));\n    }) : /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1658,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 23\n      }\n    }, \"No data available\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center justify-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"col-3\",\n      mainbg: true,\n      className: \"col-12 ml-4\",\n      label: \"Cancel\",\n      onClick: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1668,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1679,\n        columnNumber: 11\n      }\n    }, isTreatementModal ? /*#__PURE__*/React.createElement(TreatmentPackage, {\n      isTreatementModal: isTreatementModal,\n      handleTreatementmodal: this.handleTreatementmodal,\n      handleSelectPackage: this.handleSelectPackage,\n      customerId: customerId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1681,\n        columnNumber: 15\n      }\n    }) : \"\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerDetail: state.appointment.customerDetail,\n  appointmentDetail: state.appointment.appointmentDetail,\n  selectedTreatmentList: state.appointment.selectedTreatmentList,\n  basicApptDetail: state.appointment.basicApptDetail,\n  appointmentCustomerDetail: state.appointment.appointmentCustomerDetail,\n  appointmentTreatmentList: state.appointment.appointmentTreatmentList,\n  AppointmentCopy: state.appointment.AppointmentCopy\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateForm,\n    getSelectedTreatmentList,\n    getCommonApi,\n    commonCreateApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const NewSelectTreatment = connect(mapStateToProps, mapDispatchToProps)(NewSelectTreatmentClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/NewAppointment/NewCreateAppointment/NewSelectTreatment.js"],"names":["React","Component","NormalSelect","NormalButton","NormalModal","NormalInput","NormalDateTime","NormalCheckbox","updateForm","getSelectedTreatmentList","connect","bindActionCreators","SimpleReactValidator","closeIcon","req_therapist","getCommonApi","commonCreateApi","commonPatchApi","dateFormat","_","TableWrapper","TreatmentPackage","Toast","AppointmentForm","history","NewSelectTreatmentClass","constructor","props","state","treatmentDetail","formFields","start_time","end_time","Item_Codeid","add_duration","emp_no","requesttherapist","Item_CodeName","edit_remark","recur_days","recur_qty","item_text","checktype","treat_parentcode","selectedList","outletOption","staffOption","roomOption","list","isOpenModal","categoryList","treatmentList","siteList","treatmentField","category","treatment","timeDropdown","duration","index","search","selectTreatmentId","treatmentListHeader","label","className","meta","isTreatementModal","appointmentId","PackageIndex","selectedRec_days","selectedRec_qty","recurringList","recurringSelectedItems","recurringSelectAll","settingData","PasteAppointmentId","showErrorMessage","child","onFocus","timeToDateFormat","TimeValue","time","String","split","newTime","Date","setHours","handleRenderApptDetail","appt_id","copy","then","key","status","data","console","log","recur_lst","startTime","addTimes","emp_id","value","push","id","date","appt_status","item_name","emp_name","selected","setState","handleItemSettings","getStaffAvailability","handleSearch","event","persist","target","debouncedFn","debounce","searchString","page","limit","res","dataList","pagination","handlePagination","handleChangeTreatment","name","handleChange","getHoursFromDate","length","Number","handleMultiSelect","handleDatePick","hour","getHours","minute","getMinutes","hours","minutes","stafflistvalidation","appointmentTreatmentList","item","type","message","handleUpdate","appointmentCustomerDetail","customerName","bookingStatus","appt_date","appointmentDate","Room_Codeid","sec_status","ori_remark","new_remark","item_id","remark_setting","handleCloseDialog","handleSaveorUpdate","custId","custName","handleRecurringUpdate","finalRecurring","recurringItem","recur_ids","handleSubmit","Appointment","Appt_typeid","cust_noid","Source_Codeid","ItemSite_Codeid","walkin","Treatment","getDateTime","date1","time1","handleDialog","handleMultipleCustomer","handleSelectPackage","item_desc","treatment_parentcode","listCount","handleSelectTreatment","timeToMins","b","timeFromMins","mins","z","n","h","m","t0","t1","handleNewTimeChange","selectedTime","selectedTimeNew","getTime","handleAddtreatment","deleteTreatment","splice","handleTreatementmodal","prevState","handleChangeremark","handleCheckbox","handleRecurringlistCheckbox","listCheckbox","find","acc","Checkbox","filter","handleRecurringSelectAllCheckbox","handleCopyAppointment","AppointmentCopy","handlePasteAppointment","createRef","componentDidMount","basicApptDetail","staff_id","itm_desc","branchId","componentWillMount","validator","element","autoForceUpdate","render","customerDetail","selectedTreatmentList","customerId","outlet","staff","rooms","ref","selectedCustomer","map","service_sel","service_text","e","minWidth","Item_Class","item_price","mapStateToProps","appointment","appointmentDetail","mapDispatchToProps","dispatch","NewSelectTreatment"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalSelect,\r\n  NormalButton,\r\n  NormalModal,\r\n  NormalInput,\r\n  NormalDateTime,\r\n  NormalCheckbox,\r\n} from \"component/common\";\r\nimport \"./style.scss\";\r\nimport {\r\n  updateForm,\r\n  getSelectedTreatmentList,\r\n} from \"redux/actions/appointment\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport req_therapist from \"assets/images/app-icons/1.png\";\r\nimport {\r\n  getCommonApi,\r\n  commonCreateApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport _ from \"lodash\";\r\nimport { TableWrapper } from \"component/common\";\r\nimport { TreatmentPackage } from \"./modal/index\";\r\nimport { Toast } from \"service/toast\";\r\nimport { AppointmentForm } from \"./AppointmentForm\";\r\nimport { history } from \"helpers\";\r\n\r\nexport class NewSelectTreatmentClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.child = React.createRef();\r\n  }\r\n  state = {\r\n    treatmentDetail: [],\r\n    formFields: {\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      Item_Codeid: null,\r\n      add_duration: \"\",\r\n      emp_no: 0,\r\n      requesttherapist: false,\r\n      Item_CodeName: \"\",\r\n      edit_remark: \"\",\r\n      recur_days: null,\r\n      recur_qty: null,\r\n      item_text: null,\r\n      checktype: \"\",\r\n      treat_parentcode: null,\r\n    },\r\n    selectedList: [\r\n      {\r\n        start_time: \"\",\r\n        end_time: \"\",\r\n        Item_Codeid: null,\r\n        add_duration: \"\",\r\n        emp_no: 0,\r\n        requesttherapist: false,\r\n        Item_CodeName: \"\",\r\n        edit_remark: \"\",\r\n        recur_days: null,\r\n        recur_qty: null,\r\n        item_text: null,\r\n        checktype: \"\",\r\n        treat_parentcode: null,\r\n      },\r\n    ],\r\n    outletOption: [],\r\n    staffOption: [],\r\n    roomOption: [],\r\n    list: [],\r\n    isOpenModal: false,\r\n    categoryList: [],\r\n    treatmentList: [],\r\n    siteList: [],\r\n    treatmentField: {\r\n      category: \"\",\r\n      treatment: \"\",\r\n    },\r\n    timeDropdown: [],\r\n    duration: [],\r\n    index: null,\r\n    search: \"\",\r\n    selectTreatmentId: \"\",\r\n    treatmentListHeader: [\r\n      { label: \"Category\", className: \"w-50\" },\r\n      { label: \"Service\", className: \"w-75\" },\r\n      { label: \"Duration\", className: \"w-25\" },\r\n      { label: \"price\", className: \"w-50\" },\r\n    ],\r\n    meta: {},\r\n    isTreatementModal: false,\r\n    appointmentId: null,\r\n    PackageIndex: 0,\r\n    selectedRec_days: null,\r\n    selectedRec_qty: null,\r\n    recurringList: [],\r\n    recurringSelectedItems: [],\r\n    recurringSelectAll: false,\r\n    settingData: {},\r\n    PasteAppointmentId: 0,\r\n  };\r\n  showErrorMessage = () => {\r\n    this.child.onFocus();\r\n  };\r\n  componentDidMount() {\r\n    this.search({});\r\n    this.handleItemSettings();\r\n    let { categoryList, staffOption, selectedList, formFields, duration } =\r\n      this.state;\r\n\r\n    let { basicApptDetail, AppointmentCopy } = this.props;\r\n    console.log(AppointmentCopy, \"Basic app detail data\");\r\n    if (basicApptDetail.appt_id) {\r\n      this.setState({ appointmentId: basicApptDetail.appt_id });\r\n      this.handleRenderApptDetail(basicApptDetail.appt_id, false);\r\n    } else {\r\n      formFields[\"start_time\"] = basicApptDetail ? basicApptDetail.time : \"\";\r\n      formFields[\"emp_no\"] = basicApptDetail ? basicApptDetail.staff_id : 0;\r\n      selectedList[0][\"start_time\"] = basicApptDetail\r\n        ? basicApptDetail.time\r\n        : \"\";\r\n      selectedList[0][\"emp_no\"] = basicApptDetail\r\n        ? basicApptDetail.staff_id\r\n        : 0;\r\n      this.setState({\r\n        formFields,\r\n        selectedList,\r\n      });\r\n      this.props.updateForm(\"treatmentList\", selectedList);\r\n    }\r\n    this.props.getCommonApi(`itemdept/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          categoryList.push({ value: value.id, label: value.itm_desc });\r\n        }\r\n        this.setState({ categoryList });\r\n      }\r\n    });\r\n    this.props\r\n      .getCommonApi(\r\n        `appointment/Staffs/?Outlet=${\r\n          basicApptDetail.branchId\r\n        }&date=${dateFormat(new Date())}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          for (let value of data) {\r\n            staffOption.push({ value: value.id, label: value.emp_name });\r\n          }\r\n          this.setState({ staffOption });\r\n        }\r\n      });\r\n    this.props.getCommonApi(`treatment/Duration/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          duration.push({ value: value, label: value });\r\n        }\r\n        this.setState({ duration });\r\n      }\r\n    });\r\n    this.getStaffAvailability();\r\n  }\r\n  timeToDateFormat = TimeValue => {\r\n    let time = String(TimeValue).split(\":\");\r\n    let newTime = new Date(new Date().setHours(time[0], time[1], 0, 0));\r\n    return newTime;\r\n  };\r\n  handleRenderApptDetail = (appt_id, copy) => {\r\n    let { formFields, selectedList, recurringList } = this.state;\r\n    this.props.getCommonApi(`appointmentresources/${appt_id}/`).then(key => {\r\n      let { status, data } = key;\r\n      console.log(data.recur_lst, \"RecurringAppointmentrelatedList\");\r\n      if (status === 200) {\r\n        console.log(data, \"selectedCustomer\");\r\n        let startTime = this.timeToDateFormat(data.start_time);\r\n        if (copy) {\r\n          selectedList[0][\"end_time\"] = this.addTimes(\r\n            selectedList[0][\"start_time\"],\r\n            data.add_duration\r\n          );\r\n          formFields[\"end_time\"] = this.addTimes(\r\n            formFields[\"start_time\"],\r\n            data.add_duration\r\n          );\r\n          recurringList = [];\r\n        } else {\r\n          formFields[\"start_time\"] = data ? startTime : \"\";\r\n          formFields[\"end_time\"] = data ? data.end_time : \"\";\r\n          selectedList[0][\"start_time\"] = data ? startTime : \"\";\r\n          selectedList[0][\"end_time\"] = data ? data.end_time : \"\";\r\n          formFields[\"emp_no\"] = data.emp_id;\r\n          selectedList[0][\"emp_no\"] = data.emp_id;\r\n          for (let value of data.recur_lst) {\r\n            recurringList.push({\r\n              id: value.id,\r\n              date: value.date,\r\n              appt_status: value.appt_status,\r\n              start_time: value.start_time,\r\n              end_time: value.end_time,\r\n              item_name: value.item_name,\r\n              Item_Codeid: value.Item_Codeid,\r\n              emp_name: value.emp_name,\r\n              emp_id: value.emp_id,\r\n              requesttherapist: value.requesttherapist,\r\n              add_duration: value.add_duration,\r\n              selected: false,\r\n              checktype: value.checktype,\r\n              treat_parentcode: value.treat_parentcode,\r\n            });\r\n          }\r\n        }\r\n\r\n        formFields[\"Item_Codeid\"] = data.Item_Codeid;\r\n        formFields[\"Item_CodeName\"] = data.item_name;\r\n        formFields[\"add_duration\"] = data.add_duration;\r\n        formFields[\"edit_remark\"] = \"\";\r\n        formFields[\"requesttherapist\"] = data.requesttherapist;\r\n        formFields[\"recur_days\"] = data.recur_days;\r\n        formFields[\"recur_qty\"] = data.recur_qty;\r\n        formFields[\"item_text\"] = data.item_name;\r\n        formFields[\"checktype\"] = data.checktype;\r\n        formFields[\"treat_parentcode\"] = data.treat_parentcode;\r\n\r\n        selectedList[0][\"Item_Codeid\"] = data.Item_Codeid;\r\n        selectedList[0][\"Item_CodeName\"] = data.item_name;\r\n\r\n        selectedList[0][\"add_duration\"] = data.add_duration;\r\n        selectedList[0][\"edit_remark\"] = \"\";\r\n        selectedList[0][\"requesttherapist\"] = data.requesttherapist;\r\n        selectedList[0][\"recur_days\"] = data.recur_days;\r\n        selectedList[0][\"recur_qty\"] = data.recur_qty;\r\n        selectedList[0][\"item_text\"] = data.item_name;\r\n        selectedList[0][\"checktype\"] = data.checktype;\r\n        selectedList[0][\"treat_parentcode\"] = data.treat_parentcode;\r\n        this.setState({\r\n          selectedRec_days: data.recur_days,\r\n          selectedRec_qty: data.recur_qty,\r\n        });\r\n\r\n        this.setState({\r\n          formFields,\r\n          selectedList,\r\n        });\r\n\r\n        this.props.updateForm(\"treatmentList\", selectedList);\r\n      }\r\n    });\r\n  };\r\n  handleItemSettings = () => {\r\n    let { settingData } = this.state;\r\n    this.props.getCommonApi(`userlist/`).then(key => {\r\n      let { status, data } = key;\r\n      console.log(key, \"settingsData appointmentCreate\");\r\n      if (status === 200) {\r\n        settingData = data;\r\n        this.setState({ settingData });\r\n      }\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n  }\r\n\r\n  getStaffAvailability = () => {\r\n    this.props\r\n      .getCommonApi(\r\n        `staffsavailable/?Appt_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          // for (let value of data) {\r\n          //     staffList.push({ value: value.id, label: value.emp_name })\r\n          // }\r\n          this.setState({ list: data });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleSearch = event => {\r\n    event.persist();\r\n    console.log(event.target.value, event.target, event, \"dfhdfjghkjfghj\");\r\n    let { treatmentField } = this.state;\r\n    treatmentField[\"treatment\"] = event.target.value;\r\n    this.setState({ search: event.target.value, treatmentField });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(() => {\r\n        let searchString = event.target.value;\r\n        let data = { search: searchString };\r\n        // this.queryHandler(data)\r\n        this.search(data);\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  search = data => {\r\n    let { page = 1, limit = 10, search = \"\" } = data;\r\n    let { selectTreatmentId } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(res => {\r\n        console.log(res, \"treatmentList treatment_parentcode\");\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            treatmentList: res.data.dataList,\r\n            meta: res.data.meta.pagination,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handlePagination = page => {\r\n    this.search(page);\r\n  };\r\n\r\n  handleChangeTreatment = async ({ target: { value, name } }) => {\r\n    let { treatmentField, search, selectTreatmentId } = this.state;\r\n    console.log(\"uihwkjrwkej\", name, value);\r\n    treatmentField[name] = value;\r\n    if (name === \"category\") {\r\n      selectTreatmentId = value;\r\n    } else if (name === \"treatment\") {\r\n      search = value;\r\n    }\r\n    await this.setState({\r\n      treatmentField,\r\n      selectTreatmentId,\r\n      search,\r\n    });\r\n\r\n    let page = 1,\r\n      limit = 10;\r\n    this.props\r\n      .getCommonApi(\r\n        `stocklist/?Item_Deptid=${selectTreatmentId}&search=${search}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            treatmentList: res.data.dataList,\r\n            meta: res.data.meta.pagination,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }, index) => {\r\n    let { selectedList, appointmentId } = this.state;\r\n\r\n    if (name === \"add_duration\") {\r\n      if (appointmentId) {\r\n        selectedList[index][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(selectedList[index][\"start_time\"]),\r\n          value\r\n        );\r\n      } else {\r\n        selectedList[index][\"end_time\"] = this.addTimes(\r\n          selectedList[index][\"start_time\"],\r\n          value\r\n        );\r\n      }\r\n      selectedList[index][\"add_duration\"] = value;\r\n      if (selectedList.length - 1 > index) {\r\n        selectedList[index + 1][\"start_time\"] = selectedList[index][\"end_time\"];\r\n        if (selectedList[index + 1][\"add_duration\"] !== \"\") {\r\n          selectedList[index + 1][\"end_time\"] = this.addTimes(\r\n            selectedList[index][\"end_time\"],\r\n            selectedList[index + 1][\"add_duration\"]\r\n          );\r\n        }\r\n      }\r\n    } else if (name === \"Item_CodeName\") {\r\n      selectedList[index][\"Item_Codeid\"] = 6213;\r\n      selectedList[index][\"Item_CodeName\"] = value;\r\n      selectedList[index][\"item_text\"] = value;\r\n      selectedList[index][\"checktype\"] = \"freetext\";\r\n      selectedList[index][\"treat_parentcode\"] = null;\r\n    } else if (name === \"recur_days\" || name === \"recur_qty\") {\r\n      if (value <= 0 || value === \"\") {\r\n        selectedList[index][name] = null;\r\n      } else {\r\n        selectedList[index][name] = Number(value);\r\n      }\r\n    } else {\r\n      selectedList[index][name] = value;\r\n    }\r\n\r\n    await this.setState({\r\n      selectedList,\r\n    });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  handleMultiSelect = data => {\r\n    let { formFields } = this.state;\r\n    let list = [];\r\n    for (let key of data) {\r\n      list.push(key.value);\r\n    }\r\n    formFields[\"emp_no\"] = list;\r\n    this.setState({ formFields });\r\n    console.log(formFields, \"oyokkjk\");\r\n  };\r\n\r\n  // handleDatePick = async (name, value) => {\r\n  //   debugger;\r\n  //   let { formFields, selectedList } = this.state;\r\n  //   let time = this.getHoursFromDate(value);\r\n  //   formFields[\"start_time\"] = time;\r\n  //   selectedList[0][\"start_time\"] = time ? time : formFields[\"start_time\"];\r\n  //   if (time) {\r\n  //     formFields[\"end_time\"] = this.addTimes(\r\n  //       formFields[\"start_time\"],\r\n  //       formFields[\"add_duration\"]\r\n  //     );\r\n  //     selectedList[0][\"end_time\"] = this.addTimes(\r\n  //       selectedList[0][\"start_time\"],\r\n  //       formFields[\"add_duration\"]\r\n  //     );\r\n  //   }\r\n  //   await this.setState({\r\n  //     formFields,\r\n  //     selectedList,\r\n  //   });\r\n  //   await this.props.updateForm(\"treatmentList\", selectedList);\r\n  // };\r\n\r\n  handleDatePick = async (name, value) => {\r\n    let { formFields, selectedList } = this.state;\r\n    let time = this.getHoursFromDate(value);\r\n    formFields[\"start_time\"] = value;\r\n    selectedList[0][\"start_time\"] = value\r\n      ? value\r\n      : this.timeToDateFormat(formFields[\"start_time\"]);\r\n    if (time) {\r\n      formFields[\"end_time\"] = this.addTimes(time, formFields[\"add_duration\"]);\r\n      selectedList[0][\"end_time\"] = this.addTimes(\r\n        time,\r\n        formFields[\"add_duration\"]\r\n      );\r\n    }\r\n    await this.setState({\r\n      formFields,\r\n      selectedList,\r\n    });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  getHoursFromDate = date => {\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let hours = hour > 9 ? hour : \"0\" + hour;\r\n    let minutes = minute > 9 ? minute : \"0\" + minute;\r\n    return hours + \":\" + minutes;\r\n  };\r\n\r\n  stafflistvalidation = appointmentTreatmentList => {\r\n    if (appointmentTreatmentList.length > 0) {\r\n      for (let item of appointmentTreatmentList) {\r\n        if (!item.emp_no || item.emp_no === \"\" || item.emp_no === null) {\r\n          Toast({ type: \"error\", message: \"Please select Staff\" });\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  handleUpdate = () => {\r\n    let { appointmentCustomerDetail, appointmentTreatmentList } = this.props;\r\n    let { appointmentId, selectedRec_days, selectedRec_qty } = this.state;\r\n\r\n    if (\r\n      appointmentCustomerDetail.customerName &&\r\n      appointmentCustomerDetail.bookingStatus\r\n    ) {\r\n      if (this.stafflistvalidation(appointmentTreatmentList)) {\r\n        let data = {\r\n          appt_date: dateFormat(\r\n            new Date(appointmentCustomerDetail.appointmentDate),\r\n            \"yyyy-mm-dd\"\r\n          ),\r\n          Room_Codeid: appointmentCustomerDetail.Room_Codeid,\r\n          appt_status: appointmentCustomerDetail.bookingStatus,\r\n          sec_status: appointmentCustomerDetail.sec_status,\r\n          ori_remark: appointmentCustomerDetail.new_remark,\r\n          edit_remark: appointmentCustomerDetail.edit_remark,\r\n          start_time: this.getHoursFromDate(\r\n            appointmentTreatmentList[0].start_time\r\n          ),\r\n          end_time: appointmentTreatmentList[0].end_time,\r\n          item_id: appointmentTreatmentList[0].Item_Codeid,\r\n          add_duration: appointmentTreatmentList[0].add_duration,\r\n          emp_id: appointmentTreatmentList[0].emp_no,\r\n          requesttherapist: appointmentTreatmentList[0].requesttherapist,\r\n          item_text: appointmentTreatmentList[0].item_text,\r\n          recur_days:\r\n            selectedRec_days === appointmentTreatmentList[0].recur_days ||\r\n            appointmentTreatmentList[0].recur_days === \"\" ||\r\n            appointmentTreatmentList[0].recur_days <= 0\r\n              ? null\r\n              : appointmentTreatmentList[0].recur_days,\r\n          recur_qty:\r\n            Number(selectedRec_qty) ===\r\n              Number(appointmentTreatmentList[0].recur_qty) ||\r\n            Number(appointmentTreatmentList[0].recur_qty) === \"\" ||\r\n            Number(appointmentTreatmentList[0].recur_qty) <= 0\r\n              ? null\r\n              : Number(appointmentTreatmentList[0].recur_qty),\r\n          checktype: appointmentTreatmentList[0].checktype,\r\n          treat_parentcode: appointmentTreatmentList[0].treat_parentcode,\r\n          remark_setting: appointmentCustomerDetail.remark_setting,\r\n        };\r\n        console.log(data, \"UpdatedappointmentTreatmentListWhenupdate\");\r\n\r\n        this.props\r\n          .commonPatchApi(`appointmentresources/${appointmentId}/`, data)\r\n          .then(async res => {\r\n            console.log(res, \"cart check while update booking\");\r\n            if (res.status === 200) {\r\n              this.handleCloseDialog();\r\n              this.handleSaveorUpdate();\r\n            } else if (res.status === 201) {\r\n              // this.handleCloseDialog();\r\n              // this.handleSaveorUpdate();\r\n              let formFields = { custId: 0, custName: \"\" };\r\n              formFields[\"custId\"] = appointmentCustomerDetail.customerName;\r\n              formFields[\"custName\"] = appointmentCustomerDetail.custName;\r\n\r\n              await this.props.updateForm(\"basicApptDetail\", formFields);\r\n              this.props\r\n                .getCommonApi(\r\n                  `itemcart/Check/?cart_date=${dateFormat(\r\n                    new Date(),\r\n                    \"yyyy-mm-dd\"\r\n                  )}&cust_noid=${appointmentCustomerDetail.customerName}`\r\n                )\r\n                .then(res => {\r\n                  history.push(\"/admin/cart\");\r\n                });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.showErrorMessage();\r\n    }\r\n  };\r\n  handleRecurringUpdate = () => {\r\n    let { appointmentCustomerDetail, appointmentTreatmentList } = this.props;\r\n    let {\r\n      appointmentId,\r\n      selectedRec_days,\r\n      selectedRec_qty,\r\n      recurringList,\r\n      recurringSelectAll,\r\n    } = this.state;\r\n    let finalRecurring = [];\r\n    for (var recurringItem of recurringList) {\r\n      if (recurringItem.selected) {\r\n        let value = recurringItem.id;\r\n        finalRecurring.push(value);\r\n      }\r\n    }\r\n    console.log(finalRecurring, \"finalrecurringList\");\r\n    if (\r\n      appointmentCustomerDetail.customerName &&\r\n      appointmentCustomerDetail.bookingStatus\r\n    ) {\r\n      if (this.stafflistvalidation(appointmentTreatmentList)) {\r\n        let data = {\r\n          appt_date: dateFormat(\r\n            new Date(appointmentCustomerDetail.appointmentDate),\r\n            \"yyyy-mm-dd\"\r\n          ),\r\n          Room_Codeid: appointmentCustomerDetail.Room_Codeid,\r\n          appt_status: appointmentCustomerDetail.bookingStatus,\r\n          sec_status: appointmentCustomerDetail.sec_status,\r\n          edit_remark: appointmentCustomerDetail.edit_remark,\r\n          start_time: this.getHoursFromDate(\r\n            appointmentTreatmentList[0].start_time\r\n          ),\r\n          end_time: appointmentTreatmentList[0].end_time,\r\n          item_id: appointmentTreatmentList[0].Item_Codeid,\r\n          add_duration: appointmentTreatmentList[0].add_duration,\r\n          emp_id: appointmentTreatmentList[0].emp_no,\r\n          requesttherapist: appointmentTreatmentList[0].requesttherapist,\r\n          item_text: appointmentTreatmentList[0].item_text,\r\n          recur_days:\r\n            selectedRec_days === appointmentTreatmentList[0].recur_days ||\r\n            appointmentTreatmentList[0].recur_days === \"\" ||\r\n            appointmentTreatmentList[0].recur_days <= 0\r\n              ? null\r\n              : appointmentTreatmentList[0].recur_days,\r\n          recur_qty:\r\n            Number(selectedRec_qty) ===\r\n              Number(appointmentTreatmentList[0].recur_qty) ||\r\n            Number(appointmentTreatmentList[0].recur_qty) === \"\" ||\r\n            Number(appointmentTreatmentList[0].recur_qty) <= 0\r\n              ? null\r\n              : Number(appointmentTreatmentList[0].recur_qty),\r\n          recur_ids: finalRecurring,\r\n        };\r\n        console.log(data, \"UpdatedappointmentTreatmentListWhenupdate\");\r\n        if (recurringSelectAll) {\r\n          this.props\r\n            .commonPatchApi(\r\n              `appointmentrecur/${appointmentId}/?type=${`all`} `,\r\n              data\r\n            )\r\n            .then(async res => {\r\n              if (res.status === 200) {\r\n                this.handleCloseDialog();\r\n                this.handleSaveorUpdate();\r\n              }\r\n            });\r\n        } else {\r\n          this.props\r\n            .commonPatchApi(`appointmentrecur/${appointmentId}/`, data)\r\n            .then(async res => {\r\n              console.log(res, \"type all clicked result\");\r\n              if (res.status === 200) {\r\n                this.handleCloseDialog();\r\n                this.handleSaveorUpdate();\r\n              }\r\n            });\r\n        }\r\n      }\r\n    } else {\r\n      this.showErrorMessage();\r\n    }\r\n  };\r\n  handleSubmit = () => {\r\n    // this.props.handleConfirmBooking()\r\n    let { appointmentCustomerDetail, appointmentTreatmentList } = this.props;\r\n    console.log(appointmentCustomerDetail, \"appointmentcustomerdetailwhenSave\");\r\n    console.log(\r\n      appointmentTreatmentList,\r\n      \"UpdatedappointmentTreatmentListWhenSave\"\r\n    );\r\n    if (\r\n      appointmentCustomerDetail.customerName &&\r\n      appointmentCustomerDetail.bookingStatus\r\n    ) {\r\n      if (this.stafflistvalidation(appointmentTreatmentList)) {\r\n        let data = {\r\n          Appointment: {\r\n            appt_date: dateFormat(\r\n              new Date(appointmentCustomerDetail.appointmentDate),\r\n              \"yyyy-mm-dd\"\r\n            ),\r\n            Appt_typeid: appointmentCustomerDetail.Appt_typeid,\r\n            cust_noid: appointmentCustomerDetail.customerName,\r\n            new_remark: appointmentCustomerDetail.new_remark,\r\n            // emp_noid: appointmentCustomerDetail.emp_id,\r\n            Source_Codeid: appointmentCustomerDetail.Source_Codeid,\r\n            Room_Codeid: appointmentCustomerDetail.Room_Codeid,\r\n            appt_status: appointmentCustomerDetail.bookingStatus,\r\n            sec_status: appointmentCustomerDetail.sec_status,\r\n            ItemSite_Codeid: appointmentCustomerDetail.ItemSite_Codeid,\r\n            walkin: appointmentCustomerDetail.walkin,\r\n          },\r\n          Treatment: appointmentTreatmentList,\r\n        };\r\n\r\n        this.props.commonCreateApi(`appointment/`, data).then(async res => {\r\n          if (res.status === 201) {\r\n            this.handleCloseDialog();\r\n            this.handleSaveorUpdate();\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.showErrorMessage();\r\n    }\r\n  };\r\n\r\n  getDateTime = data => {\r\n    let date = new Date(data);\r\n    date = String(date).split(\" \");\r\n    let date1 = date[2] + \"th \" + date[1] + \", \" + date[3];\r\n    let time = date[4].split(\":\");\r\n    let time1 =\r\n      String(Number(time[0]) > 12 ? Number(time[0]) - 12 : time[0]) +\r\n      \":\" +\r\n      time[1] +\r\n      (Number(time[0]) > 12 ? \"PM\" : \"AM\");\r\n    return time1 + \", \" + date1;\r\n  };\r\n\r\n  handleDialog = () => {\r\n    this.setState({ isOpenModal: false, index: null });\r\n  };\r\n\r\n  handleMultipleCustomer = () => {\r\n    this.setState({ isOpenModal: false });\r\n  };\r\n\r\n  handleSelectPackage = async data => {\r\n    debugger;\r\n    let { selectedList, PackageIndex, appointmentId } = this.state;\r\n\r\n    if (PackageIndex === 0 && selectedList[0][\"Item_CodeName\"] === \"\") {\r\n      selectedList[0][\"start_time\"] = selectedList[0][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[0][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(selectedList[0][\"start_time\"]),\r\n          data.add_duration\r\n        );\r\n      } else {\r\n        selectedList[0][\"end_time\"] = this.addTimes(\r\n          selectedList[0][\"start_time\"],\r\n          data.add_duration\r\n        );\r\n      }\r\n      selectedList[0][\"Item_Codeid\"] = data.id;\r\n      selectedList[0][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[0][\"item_text\"] = null;\r\n      selectedList[0][\"add_duration\"] = data.add_duration;\r\n      selectedList[0][\"checktype\"] = \"package\";\r\n      selectedList[0][\"treat_parentcode\"] = data.treatment_parentcode;\r\n\r\n      await this.setState({\r\n        selectedList,\r\n        PackageIndex: PackageIndex + 1,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else if (selectedList[selectedList.length - 1][\"Item_CodeName\"] === \"\") {\r\n      selectedList[selectedList.length - 1][\"start_time\"] =\r\n        selectedList[selectedList.length - 1][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(\r\n            selectedList[selectedList.length - 1][\"start_time\"]\r\n          ),\r\n          data.add_duration\r\n        );\r\n      } else {\r\n        selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(\r\n          selectedList[selectedList.length - 1][\"start_time\"],\r\n          data.add_duration\r\n        );\r\n      }\r\n\r\n      selectedList[selectedList.length - 1][\"Item_Codeid\"] = data.id;\r\n      selectedList[selectedList.length - 1][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[selectedList.length - 1][\"item_text\"] = null;\r\n      selectedList[selectedList.length - 1][\"add_duration\"] = data.add_duration;\r\n      selectedList[selectedList.length - 1][\"checktype\"] = \"package\";\r\n      selectedList[selectedList.length - 1][\"treat_parentcode\"] =\r\n        data.treatment_parentcode;\r\n\r\n      await this.setState({\r\n        selectedList,\r\n        PackageIndex: PackageIndex + 1,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else if (\r\n      selectedList[selectedList.length - 1][\"Item_CodeName\"] !== \"\" &&\r\n      appointmentId\r\n    ) {\r\n      selectedList[selectedList.length - 1][\"start_time\"] =\r\n        selectedList[selectedList.length - 1][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(\r\n            selectedList[selectedList.length - 1][\"start_time\"]\r\n          ),\r\n          data.add_duration\r\n        );\r\n      } else {\r\n        selectedList[selectedList.length - 1][\"end_time\"] = this.addTimes(\r\n          selectedList[selectedList.length - 1][\"start_time\"],\r\n          data.add_duration\r\n        );\r\n      }\r\n\r\n      selectedList[selectedList.length - 1][\"Item_Codeid\"] = data.id;\r\n      selectedList[selectedList.length - 1][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[selectedList.length - 1][\"item_text\"] = null;\r\n      selectedList[selectedList.length - 1][\"add_duration\"] = data.add_duration;\r\n      selectedList[selectedList.length - 1][\"checktype\"] = \"package\";\r\n      selectedList[selectedList.length - 1][\"treat_parentcode\"] =\r\n        data.treatment_parentcode;\r\n\r\n      await this.setState({\r\n        selectedList,\r\n        PackageIndex: PackageIndex + 1,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else {\r\n      var listCount = selectedList.length - 1;\r\n      let treatment = {};\r\n      if (appointmentId) {\r\n        treatment[\"start_time\"] = this.timeToDateFormat(\r\n          selectedList[listCount][\"end_time\"]\r\n        );\r\n      } else {\r\n        treatment[\"start_time\"] = selectedList[listCount][\"end_time\"];\r\n      }\r\n      treatment[\"end_time\"] = this.addTimes(\r\n        selectedList[listCount][\"end_time\"],\r\n        data.add_duration\r\n      );\r\n      treatment[\"Item_Codeid\"] = data.id;\r\n      treatment[\"Item_CodeName\"] = data.item_desc;\r\n      treatment[\"item_text\"] = null;\r\n      treatment[\"add_duration\"] = data.add_duration;\r\n      treatment[\"checktype\"] = \"package\";\r\n      treatment[\"treat_parentcode\"] = data.treatment_parentcode;\r\n      selectedList.push(treatment);\r\n      await this.setState({\r\n        selectedList,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    }\r\n\r\n    this.setState({ isOpenModal: false });\r\n  };\r\n\r\n  handleSelectTreatment = async data => {\r\n    let { selectedList, index, appointmentId } = this.state;\r\n\r\n    if (index == 0 && selectedList.length == 1) {\r\n      selectedList[0][\"start_time\"] = selectedList[0][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[0][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(selectedList[0][\"start_time\"]),\r\n          data.add_duration\r\n        );\r\n      } else {\r\n        selectedList[0][\"end_time\"] = this.addTimes(\r\n          selectedList[0][\"start_time\"],\r\n          data.add_duration\r\n        );\r\n      }\r\n      selectedList[0][\"Item_Codeid\"] = data.id;\r\n      selectedList[0][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[0][\"add_duration\"] = data.add_duration;\r\n      selectedList[0][\"checktype\"] = \"service\";\r\n      selectedList[0][\"treat_parentcode\"] = null;\r\n\r\n      await this.setState({\r\n        selectedList,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else {\r\n      selectedList[index][\"start_time\"] = selectedList[index][\"start_time\"];\r\n      if (appointmentId) {\r\n        selectedList[index][\"end_time\"] = this.addTimes(\r\n          this.getHoursFromDate(selectedList[index][\"start_time\"]),\r\n          data.add_duration\r\n        );\r\n      } else {\r\n        selectedList[index][\"end_time\"] = this.addTimes(\r\n          selectedList[index][\"start_time\"],\r\n          data.add_duration\r\n        );\r\n      }\r\n      selectedList[index][\"Item_Codeid\"] = data.id;\r\n      selectedList[index][\"Item_CodeName\"] = data.item_desc;\r\n      selectedList[index][\"add_duration\"] = data.add_duration;\r\n      selectedList[index][\"checktype\"] = \"service\";\r\n      selectedList[index][\"treat_parentcode\"] = null;\r\n      if (selectedList.length - 1 > index) {\r\n        selectedList[index + 1][\"start_time\"] = selectedList[index][\"end_time\"];\r\n        if (selectedList[index + 1][\"add_duration\"] !== \"\") {\r\n          selectedList[index + 1][\"end_time\"] = this.addTimes(\r\n            selectedList[index][\"end_time\"],\r\n            selectedList[index + 1][\"add_duration\"]\r\n          );\r\n        }\r\n      }\r\n      await this.setState({\r\n        selectedList,\r\n      });\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    }\r\n    this.setState({ isOpenModal: false });\r\n  };\r\n\r\n  timeToMins = time => {\r\n    var b = time.split(\":\");\r\n    return b[0] * 60 + +b[1];\r\n  };\r\n\r\n  // Convert minutes to a time in format hh:mm\r\n  // Returned value is in range 00  to 24 hrs\r\n  timeFromMins = mins => {\r\n    function z(n) {\r\n      return (n < 10 ? \"0\" : \"\") + n;\r\n    }\r\n    var h = ((mins / 60) | 0) % 24;\r\n    var m = mins % 60;\r\n    return z(h) + \":\" + z(m);\r\n  };\r\n\r\n  // Add two times in hh:mm format\r\n  addTimes = (t0, t1) => {\r\n    return this.timeFromMins(this.timeToMins(t0) + this.timeToMins(t1));\r\n  };\r\n\r\n  handleNewTimeChange = selectedTime => {\r\n    let time = new Date(dateFormat(selectedTime));\r\n    let selectedTimeNew = time.getTime();\r\n    console.log(selectedTimeNew);\r\n    let { selectedList, formFields } = this.state;\r\n    formFields = {\r\n      start_time: selectedTimeNew,\r\n      end_time: \"\",\r\n      add_duration: \"\",\r\n    };\r\n  };\r\n\r\n  handleAddtreatment = async index => {\r\n    let { selectedList, formFields } = this.state;\r\n    if (selectedList[index][\"end_time\"]) {\r\n      formFields = {\r\n        start_time: selectedList[selectedList.length - 1].end_time,\r\n        end_time: \"\",\r\n        Item_Codeid: 6213,\r\n        add_duration: \"\",\r\n        emp_no: 0,\r\n        requesttherapist: false,\r\n        recur_days: null,\r\n        recur_qty: null,\r\n        item_text: null,\r\n        checktype: \"\",\r\n        treat_parentcode: null,\r\n      };\r\n      selectedList.push({\r\n        start_time: selectedList[selectedList.length - 1].end_time,\r\n        end_time: \"\",\r\n        Item_Codeid: 6213,\r\n        Item_CodeName: \"\",\r\n        add_duration: \"\",\r\n        emp_no: 0,\r\n        requesttherapist: false,\r\n        recur_days: null,\r\n        recur_qty: null,\r\n        item_text: null,\r\n        checktype: \"\",\r\n        treat_parentcode: null,\r\n      });\r\n\r\n      await this.setState({ selectedList, formFields });\r\n\r\n      await this.props.updateForm(\"treatmentList\", selectedList);\r\n    } else {\r\n      Toast({ type: \"error\", message: \"End time shouldn't be empty\" });\r\n    }\r\n  };\r\n\r\n  deleteTreatment = async index => {\r\n    let { selectedList } = this.state;\r\n    selectedList.splice(index, 1);\r\n    this.setState({ selectedList });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  handleTreatementmodal = () => {\r\n    this.setState(prevState => ({\r\n      isTreatementModal: !prevState.isTreatementModal,\r\n    }));\r\n  };\r\n  handleChangeremark = async ({ target: { value, name } }) => {\r\n    let { formFields, selectedList } = this.state;\r\n    formFields[name] = value;\r\n    selectedList[0][name] = value;\r\n    await this.setState({\r\n      formFields,\r\n      selectedList,\r\n    });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  handleCheckbox = async ({ target: { value, name } }, index) => {\r\n    let { treatmentList } = this.state;\r\n    let { selectedList } = this.state;\r\n    selectedList[index][\"requesttherapist\"] = value;\r\n    await this.setState({\r\n      selectedList,\r\n    });\r\n    await this.props.updateForm(\"treatmentList\", selectedList);\r\n  };\r\n\r\n  handleCloseDialog = async () => {\r\n    this.props.handleCloseDialog();\r\n  };\r\n  handleSaveorUpdate = async () => {\r\n    this.props.handleSaveorUpdate();\r\n  };\r\n  handleRecurringlistCheckbox = async ({ target: { value, name } }, item) => {\r\n    let { recurringList } = this.state;\r\n    let listCheckbox = recurringList.find(acc => acc.id === item.id);\r\n    if (listCheckbox) {\r\n      listCheckbox[\"selected\"] = value;\r\n      await this.setState({ ...this.state.recurringList, listCheckbox });\r\n    }\r\n    let Checkbox = recurringList.filter(acc => acc.selected === true).length;\r\n    if (Checkbox == this.state.recurringList.length) {\r\n      await this.setState({ recurringSelectAll: true });\r\n    } else {\r\n      await this.setState({ recurringSelectAll: false });\r\n    }\r\n  };\r\n\r\n  handleRecurringSelectAllCheckbox = async ({ target: { value, name } }) => {\r\n    let { recurringList } = this.state;\r\n    await this.setState({ recurringSelectAll: value });\r\n    for (let item of recurringList) {\r\n      item[\"selected\"] = value;\r\n      await this.setState({ ...this.state.recurringList, item });\r\n    }\r\n  };\r\n  handleCopyAppointment = async () => {\r\n    let { appointmentId } = this.state;\r\n    let formFields = {};\r\n    formFields[\"appointmentId\"] = appointmentId;\r\n    await this.props.updateForm(\"AppointmentCopy\", formFields);\r\n    console.log(\r\n      this.props.AppointmentCopy,\r\n      \"after copy click appointment copy id\"\r\n    );\r\n    Toast({ type: \"success\", message: \"Appointment copied\" });\r\n  };\r\n  handlePasteAppointment = async () => {\r\n    let { AppointmentCopy } = this.props;\r\n    if (AppointmentCopy) {\r\n      this.setState({\r\n        PasteAppointmentId: AppointmentCopy.appointmentId,\r\n      });\r\n      this.handleRenderApptDetail(AppointmentCopy.appointmentId, true);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      outletOption,\r\n      staffOption,\r\n      roomOption,\r\n      selectedList,\r\n      siteList,\r\n      list,\r\n      formFields,\r\n      timeDropdown,\r\n      duration,\r\n      isOpenModal,\r\n      treatmentField,\r\n      treatmentList = [],\r\n      categoryList,\r\n      treatmentListHeader,\r\n      meta,\r\n      isTreatementModal,\r\n      appointmentId,\r\n      selectedRec_days,\r\n      selectedRec_qty,\r\n      recurringList,\r\n      recurringSelectAll,\r\n      settingData,\r\n      PasteAppointmentId,\r\n    } = this.state;\r\n    let { customerDetail, selectedTreatmentList, customerId } = this.props;\r\n    let { outlet, staff, rooms } = customerDetail;\r\n    return (\r\n      <>\r\n        {PasteAppointmentId <= 0 ? (\r\n          <AppointmentForm\r\n            onRef={ref => (this.child = ref)}\r\n            selectedCustomer={this.props.selectedCustomer}\r\n            PasteAppointmentId={PasteAppointmentId}\r\n          ></AppointmentForm>\r\n        ) : null}\r\n        {PasteAppointmentId > 0 ? (\r\n          <AppointmentForm\r\n            onRef={ref => (this.child = ref)}\r\n            selectedCustomer={this.props.selectedCustomer}\r\n            PasteAppointmentId={PasteAppointmentId}\r\n          ></AppointmentForm>\r\n        ) : null}\r\n        <div className=\"create-appointment select-treatment-appointment\">\r\n          <div className=\"row\">\r\n            <div className=\" col-md-12\">\r\n              <div className=\"appointment\">\r\n                <div className=\"appointment-holder\">\r\n                  <div className=\"treatment-section\">\r\n                    <div className=\"select-treatment select-list w-100\">\r\n                      <div className=\"row selected selected-header mb-4\">\r\n                        <div className=\"col-1 p-0\">Start</div>\r\n                        <div className=\"col-1 p-0\">End</div>\r\n                        <div className=\"col-3 p-0 header-detail\">Services</div>\r\n\r\n                        <div className=\"col-1 p-0 header-detail\">Duration</div>\r\n                        <div className=\"col-2 p-0\">Treatment staff</div>\r\n                        <div className=\"col-1 p-0 d-flex justify-content-center\">\r\n                          <img\r\n                            src={req_therapist}\r\n                            alt=\"\"\r\n                            height=\"25\"\r\n                            width=\"25\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-1 p-0 header-detail d-flex justify-content-start\">\r\n                          Recur. Days\r\n                        </div>\r\n                        <div className=\"col-1 p-0 header-detail d-flex justify-content-center\">\r\n                          Recur. Qty\r\n                        </div>\r\n                      </div>\r\n                      {selectedList.length > 0\r\n                        ? selectedList.map((item, index) => {\r\n                            return (\r\n                              <div className=\"row selected  mb-4\" key={index}>\r\n                                <div className=\"col-1 mr-1 p-0\">\r\n                                  {appointmentId ? (\r\n                                    <NormalDateTime\r\n                                      onChange={this.handleDatePick}\r\n                                      label=\"start_time\"\r\n                                      name=\"start_time\"\r\n                                      timeOnly={true}\r\n                                      dateFormat={`HH:mm`}\r\n                                      showTime={true}\r\n                                      selected={false}\r\n                                      placeholder=\"\"\r\n                                      timeIntervals={5}\r\n                                      value={item.start_time}\r\n                                      showIcon={false}\r\n                                    />\r\n                                  ) : (\r\n                                    <NormalInput\r\n                                      placeholder=\"start\"\r\n                                      // options={timeDropdown}\r\n                                      value={item.start_time}\r\n                                      name=\"start_time\"\r\n                                      onChange={this.handleChange}\r\n                                      className=\"customer-name p-0\"\r\n                                      disabled={true}\r\n                                    />\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"col-1 mr-1 p-0\">\r\n                                  <NormalInput\r\n                                    placeholder=\"end\"\r\n                                    // options={timeDropdown}\r\n                                    value={item.end_time}\r\n                                    name=\"end_time\"\r\n                                    onChange={this.handleChange}\r\n                                    className=\"customer-name p-0\"\r\n                                    disabled={true}\r\n                                  />\r\n                                </div>\r\n                                <div className=\"col-3 mr-1 p-0\">\r\n                                  <div className=\"header-detail\"></div>\r\n                                  {settingData &&\r\n                                  settingData.service_sel &&\r\n                                  settingData.service_text ? (\r\n                                    <NormalInput\r\n                                      placeholder=\"service\"\r\n                                      // options={siteList}\r\n                                      value={item.Item_CodeName}\r\n                                      name=\"Item_CodeName\"\r\n                                      onClick={() =>\r\n                                        this.setState({\r\n                                          isOpenModal: true,\r\n                                          index: index,\r\n                                        })\r\n                                      }\r\n                                      onChange={e =>\r\n                                        this.handleChange(e, index)\r\n                                      }\r\n                                      className=\"customer-name p-0 px-2\"\r\n                                    />\r\n                                  ) : null}\r\n                                  {settingData &&\r\n                                  settingData.service_sel &&\r\n                                  !settingData.service_text ? (\r\n                                    <NormalInput\r\n                                      placeholder=\"service\"\r\n                                      // options={siteList}\r\n                                      value={item.Item_CodeName}\r\n                                      name=\"Item_CodeName\"\r\n                                      onClick={() =>\r\n                                        this.setState({\r\n                                          isOpenModal: true,\r\n                                          index: index,\r\n                                        })\r\n                                      }\r\n                                      onChange={() => {}}\r\n                                      className=\"customer-name p-0 px-2\"\r\n                                    />\r\n                                  ) : null}\r\n                                  {settingData &&\r\n                                  !settingData.service_sel &&\r\n                                  settingData.service_text ? (\r\n                                    <NormalInput\r\n                                      placeholder=\"service\"\r\n                                      // options={siteList}\r\n                                      value={item.Item_CodeName}\r\n                                      name=\"Item_CodeName\"\r\n                                      onClick={() => {}}\r\n                                      onChange={e =>\r\n                                        this.handleChange(e, index)\r\n                                      }\r\n                                      className=\"customer-name p-0 px-2\"\r\n                                    />\r\n                                  ) : null}\r\n                                  {settingData &&\r\n                                  !settingData.service_sel &&\r\n                                  !settingData.service_text ? (\r\n                                    <NormalInput\r\n                                      placeholder=\"service\"\r\n                                      // options={siteList}\r\n                                      value={item.Item_CodeName}\r\n                                      name=\"Item_CodeName\"\r\n                                      onClick={() => {}}\r\n                                      onChange={() => {}}\r\n                                      className=\"customer-name p-0 px-2\"\r\n                                    />\r\n                                  ) : null}\r\n                                </div>\r\n                                <div className=\"col-1 mr-1 p-0 header-detail\">\r\n                                  <NormalSelect\r\n                                    // placeholder=\"Enter here\"\r\n                                    options={duration}\r\n                                    value={item.add_duration}\r\n                                    name=\"add_duration\"\r\n                                    onChange={e => this.handleChange(e, index)}\r\n                                    className=\"customer-name p-0\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"col-2 p-0\">\r\n                                  <NormalSelect\r\n                                    // placeholder=\"Enter here\"\r\n                                    options={staffOption}\r\n                                    value={item.emp_no}\r\n                                    name=\"emp_no\"\r\n                                    onChange={e => this.handleChange(e, index)}\r\n                                    className=\"customer-name p-0\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"col-1 p-0 d-flex justify-content-center\">\r\n                                  {item.requesttherapist ? (\r\n                                    <NormalCheckbox\r\n                                      onChange={e =>\r\n                                        this.handleCheckbox(e, index)\r\n                                      }\r\n                                      value={item.requesttherapist}\r\n                                      name=\"requesttherapist\"\r\n                                      checked={true}\r\n                                    />\r\n                                  ) : (\r\n                                    <NormalCheckbox\r\n                                      onChange={e =>\r\n                                        this.handleCheckbox(e, index)\r\n                                      }\r\n                                      value={item.requesttherapist}\r\n                                      name=\"requesttherapist\"\r\n                                      checked={false}\r\n                                    />\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"col-1 p-0 d-flex justify-content-start\">\r\n                                  <NormalInput\r\n                                    type=\"number\"\r\n                                    name=\"recur_days\"\r\n                                    value={\r\n                                      item.recur_days ? item.recur_days : \"\"\r\n                                    }\r\n                                    onChange={e => this.handleChange(e, index)}\r\n                                  />\r\n                                </div>\r\n                                <div className=\"col-1 p-0 d-flex justify-content-start\">\r\n                                  <NormalInput\r\n                                    type=\"number\"\r\n                                    name=\"recur_qty\"\r\n                                    value={item.recur_qty ? item.recur_qty : \"\"}\r\n                                    onChange={e => this.handleChange(e, index)}\r\n                                  />\r\n                                </div>\r\n                                {appointmentId ? (\r\n                                  <></>\r\n                                ) : (\r\n                                  <>\r\n                                    {selectedList.length === index + 1 ? (\r\n                                      <div\r\n                                        className=\"ml-3\"\r\n                                        onClick={() =>\r\n                                          this.handleAddtreatment(index)\r\n                                        }\r\n                                      >\r\n                                        <svg\r\n                                          width=\"31\"\r\n                                          height=\"30\"\r\n                                          viewBox=\"0 0 31 30\"\r\n                                          fill=\"none\"\r\n                                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                          <rect\r\n                                            width=\"31\"\r\n                                            height=\"30\"\r\n                                            fill=\"#F9F9F9\"\r\n                                          />\r\n                                          <path\r\n                                            d=\"M15 8V22\"\r\n                                            stroke=\"#848484\"\r\n                                            strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\"\r\n                                          />\r\n                                          <path\r\n                                            d=\"M8 15H22\"\r\n                                            stroke=\"#848484\"\r\n                                            strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\"\r\n                                          />\r\n                                        </svg>\r\n                                      </div>\r\n                                    ) : (\r\n                                      <img\r\n                                        width=\"25\"\r\n                                        height=\"25\"\r\n                                        onClick={() =>\r\n                                          this.deleteTreatment(index)\r\n                                        }\r\n                                        className=\"ml-3\"\r\n                                        src={closeIcon}\r\n                                        alt=\"\"\r\n                                      />\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : \"\"}\r\n                      <div className=\"mt-5\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-3 col-12\">\r\n                            <div className=\"d-flex justify-content-start\">\r\n                              <NormalButton\r\n                                buttonClass={\"treatment\"}\r\n                                mainbg={true}\r\n                                className=\"col-12 fs-15 \"\r\n                                label=\"Treatment Package\"\r\n                                onClick={this.handleTreatementmodal}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-md-6 col-12\">\r\n                            <div className=\"d-flex justify-content-around\">\r\n                              {appointmentId ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"treatment\"}\r\n                                  mainbg={true}\r\n                                  className=\"col-12\"\r\n                                  label=\"Customer Profile\"\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      `/admin/customer/${customerId}/account`\r\n                                    )\r\n                                  }\r\n                                />\r\n                              ) : null}\r\n                              {/* {appointmentId ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"treatment\"}\r\n                                  mainbg={true}\r\n                                  className=\"col-12\"\r\n                                  label=\"Go to Cart\"\r\n                                  onClick={() => history.push(`/admin/cart`)}\r\n                                />\r\n                              ) : null} */}\r\n\r\n                              {!appointmentId &&\r\n                              this.props.AppointmentCopy &&\r\n                              this.props.AppointmentCopy.appointmentId > 0 ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"treatment ml-2\"}\r\n                                  mainbg={true}\r\n                                  className=\"col-12 fs-15 \"\r\n                                  label=\"Paste Appointment\"\r\n                                  onClick={this.handlePasteAppointment}\r\n                                />\r\n                              ) : null}\r\n                              {appointmentId ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"treatment\"}\r\n                                  mainbg={true}\r\n                                  className=\"col-12\"\r\n                                  label=\"Copy Appointment\"\r\n                                  onClick={this.handleCopyAppointment}\r\n                                />\r\n                              ) : null}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-md-3 col-12\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                              <NormalButton\r\n                                buttonClass={\"treatment mr-2\"}\r\n                                mainbg={true}\r\n                                className=\"col-12\"\r\n                                label=\"Cancel\"\r\n                                onClick={this.handleCloseDialog}\r\n                              />\r\n\r\n                              {appointmentId ? (\r\n                                <NormalButton\r\n                                  buttonClass={\"submit-btn\"}\r\n                                  mainbg={false}\r\n                                  className=\"col-12 submit-btn\"\r\n                                  label=\"Update Booking\"\r\n                                  onClick={this.handleUpdate}\r\n                                />\r\n                              ) : (\r\n                                <NormalButton\r\n                                  buttonClass={\"submit-btn\"}\r\n                                  mainbg={false}\r\n                                  className=\"col-12 submit-btn \"\r\n                                  label=\"Confirm Booking\"\r\n                                  onClick={this.handleSubmit}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {recurringList && recurringList.length > 0 ? (\r\n                        <div className=\"mt-5 mb-3\">\r\n                          <div>\r\n                            <p>Recurring Related Appointments</p>\r\n                          </div>\r\n\r\n                          <div className=\"row selected selected-header mb-2\">\r\n                            <div className=\"col-1\">\r\n                              <NormalCheckbox\r\n                                label={`All`}\r\n                                onChange={e =>\r\n                                  this.handleRecurringSelectAllCheckbox(e)\r\n                                }\r\n                                value={recurringSelectAll}\r\n                                name=\"recurringSelectAll\"\r\n                                checked={recurringSelectAll}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-2 p-0\">Date</div>\r\n                            <div className=\"col-1 p-0\">Start</div>\r\n                            <div className=\"col-1 p-0\">End</div>\r\n                            <div className=\"col-3 p-0 header-detail\">\r\n                              Services\r\n                            </div>\r\n\r\n                            <div className=\"col-1 p-0 header-detail\">\r\n                              Duration\r\n                            </div>\r\n                            <div className=\"col-2 p-0\">Treatment staff</div>\r\n                            <div className=\"col-1 p-0 d-flex justify-content-center\">\r\n                              <img\r\n                                src={req_therapist}\r\n                                alt=\"\"\r\n                                height=\"25\"\r\n                                width=\"25\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {recurringList && recurringList.length > 0 ? (\r\n                            recurringList.map((item, index) => {\r\n                              return (\r\n                                <div className=\"row selected  mb-4\" key={index}>\r\n                                  <div className=\"col-1 text-center\">\r\n                                    <NormalCheckbox\r\n                                      onChange={e =>\r\n                                        this.handleRecurringlistCheckbox(\r\n                                          e,\r\n                                          item\r\n                                        )\r\n                                      }\r\n                                      value={item.selected}\r\n                                      name=\"recurringItem\"\r\n                                      checked={item.selected}\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-2 p-0\">{item.date}</div>\r\n                                  <div className=\"col-1 p-0\">\r\n                                    {item.start_time}\r\n                                  </div>\r\n                                  <div className=\"col-1 p-0\">\r\n                                    {item.end_time}\r\n                                  </div>\r\n                                  <div className=\"col-3 p-0 header-detail\">\r\n                                    {item.item_name}\r\n                                  </div>\r\n\r\n                                  <div className=\"col-1 p-0 header-detail\">\r\n                                    {item.add_duration}\r\n                                  </div>\r\n                                  <div className=\"col-2 p-0\">\r\n                                    {item.emp_name}\r\n                                  </div>\r\n                                  <div className=\"col-1 p-0 d-flex justify-content-center\">\r\n                                    <NormalCheckbox\r\n                                      onChange={e =>\r\n                                        this.handleRecurringlistCheckbox(\r\n                                          e,\r\n                                          item\r\n                                        )\r\n                                      }\r\n                                      value={item.requesttherapist}\r\n                                      name=\"requesttherapist\"\r\n                                      checked={item.requesttherapist}\r\n                                      disabled\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          ) : (\r\n                            <div className=\"text-center w-100\">No data</div>\r\n                          )}\r\n                          <div className=\"d-flex justify-content-end\">\r\n                            <div className=\"mt-5\">\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <div>\r\n                                  <NormalButton\r\n                                    buttonClass={\"treatment\"}\r\n                                    mainbg={true}\r\n                                    className=\"col-12\"\r\n                                    label=\"Cancel\"\r\n                                    onClick={this.handleCloseDialog}\r\n                                  />\r\n                                </div>\r\n                                <div>\r\n                                  {appointmentId ? (\r\n                                    <NormalButton\r\n                                      buttonClass={\"submit-btn\"}\r\n                                      mainbg={false}\r\n                                      className=\"col-12 submit-btn ml-4\"\r\n                                      label=\"Update Recurring\"\r\n                                      onClick={this.handleRecurringUpdate}\r\n                                    />\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <NormalModal\r\n            className={\"multiple-appointment select-category\"}\r\n            style={{ minWidth: \"60%\" }}\r\n            modal={isOpenModal}\r\n            handleModal={this.handleDialog}\r\n          >\r\n            <img\r\n              onClick={this.handleDialog}\r\n              className=\"close\"\r\n              src={closeIcon}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"customer-list container\">\r\n              <div className=\"col-12 pl-0 mb-3 fw-500 py-2\">\r\n                <h5>Select Treatment</h5>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    Category\r\n                    <NormalSelect\r\n                      // placeholder=\"Enter here\"\r\n                      options={categoryList}\r\n                      value={treatmentField.category}\r\n                      name=\"category\"\r\n                      onChange={this.handleChangeTreatment}\r\n                      className=\"customer-name p-0\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    Service\r\n                    <input\r\n                      // placeholder=\"Enter here\"\r\n                      // options={siteList}\r\n                      value={treatmentField.treatment}\r\n                      name=\"treatment\"\r\n                      onChange={this.handleSearch}\r\n                      className=\"search px-3 p-0\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"table-container table-responsive mt-3\">\r\n                <TableWrapper\r\n                  headerDetails={treatmentListHeader}\r\n                  queryHandler={this.handlePagination}\r\n                  pageMeta={meta}\r\n                >\r\n                  {treatmentList.length > 0 ? (\r\n                    treatmentList.map((item, index) => {\r\n                      return (\r\n                        <tr\r\n                          className=\"w-100\"\r\n                          onClick={() => this.handleSelectTreatment(item)}\r\n                          key={index}\r\n                        >\r\n                          <td>\r\n                            {\" \"}\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {item.Item_Class}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {item.item_desc}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {item.add_duration}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                              {item.item_price}\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                        No data available\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                </TableWrapper>\r\n              </div>\r\n\r\n              <div className=\"row text-center justify-center w-100\">\r\n                <NormalButton\r\n                  buttonClass={\"col-3\"}\r\n                  mainbg={true}\r\n                  className=\"col-12 ml-4\"\r\n                  label=\"Cancel\"\r\n                  onClick={this.handleDialog}\r\n                />\r\n              </div>\r\n            </div>\r\n          </NormalModal>\r\n\r\n          <div className=\"col-12\">\r\n            {isTreatementModal ? (\r\n              <TreatmentPackage\r\n                isTreatementModal={isTreatementModal}\r\n                handleTreatementmodal={this.handleTreatementmodal}\r\n                handleSelectPackage={this.handleSelectPackage}\r\n                customerId={customerId}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customerDetail: state.appointment.customerDetail,\r\n  appointmentDetail: state.appointment.appointmentDetail,\r\n  selectedTreatmentList: state.appointment.selectedTreatmentList,\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  appointmentCustomerDetail: state.appointment.appointmentCustomerDetail,\r\n  appointmentTreatmentList: state.appointment.appointmentTreatmentList,\r\n  AppointmentCopy: state.appointment.AppointmentCopy,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      updateForm,\r\n      getSelectedTreatmentList,\r\n      getCommonApi,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const NewSelectTreatment = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NewSelectTreatmentClass);\r\n"]},"metadata":{},"sourceType":"module"}