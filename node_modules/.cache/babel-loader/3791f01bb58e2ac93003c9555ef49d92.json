{"ast":null,"code":"/**\r\n * DevExtreme (ui/tree_list/ui.tree_list.data_source_adapter.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _uiTree_list = _interopRequireDefault(require(\"./ui.tree_list.core\"));\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _data = require(\"../../core/utils/data\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.utils\"));\n\nvar _array_utils = require(\"../../data/array_utils\");\n\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\n\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\n\nvar _uiGrid_core2 = _interopRequireDefault(require(\"../grid_core/ui.grid_core.data_source_adapter\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _store_helper = _interopRequireDefault(require(\"../../data/store_helper\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar queryByOptions = _store_helper.default.queryByOptions;\nvar DEFAULT_KEY_EXPRESSION = \"id\";\n\nvar isFullBranchFilterMode = function (that) {\n  return \"fullBranch\" === that.option(\"filterMode\");\n};\n\nvar DataSourceAdapterTreeList = _uiGrid_core2.default.inherit(function () {\n  var getChildKeys = function (that, keys) {\n    var childKeys = [];\n    keys.forEach(function (key) {\n      var node = that.getNodeByKey(key);\n      node && node.children.forEach(function (child) {\n        childKeys.push(child.key);\n      });\n    });\n    return childKeys;\n  };\n\n  return {\n    _createKeyGetter: function () {\n      var keyExpr = this.getKeyExpr();\n      return (0, _data.compileGetter)(keyExpr);\n    },\n    _createKeySetter: function () {\n      var keyExpr = this.getKeyExpr();\n\n      if ((0, _type.isFunction)(keyExpr)) {\n        return keyExpr;\n      }\n\n      return (0, _data.compileSetter)(keyExpr);\n    },\n    _createParentIdGetter: function () {\n      return (0, _data.compileGetter)(this.option(\"parentIdExpr\"));\n    },\n    createParentIdSetter: function () {\n      var parentIdExpr = this.option(\"parentIdExpr\");\n\n      if ((0, _type.isFunction)(parentIdExpr)) {\n        return parentIdExpr;\n      }\n\n      return (0, _data.compileSetter)(parentIdExpr);\n    },\n    _createItemsGetter: function () {\n      return (0, _data.compileGetter)(this.option(\"itemsExpr\"));\n    },\n    _createHasItemsGetter: function () {\n      var hasItemsExpr = this.option(\"hasItemsExpr\");\n      return hasItemsExpr && (0, _data.compileGetter)(hasItemsExpr);\n    },\n    _createHasItemsSetter: function () {\n      var hasItemsExpr = this.option(\"hasItemsExpr\");\n\n      if ((0, _type.isFunction)(hasItemsExpr)) {\n        return hasItemsExpr;\n      }\n\n      return hasItemsExpr && (0, _data.compileSetter)(hasItemsExpr);\n    },\n    _updateIndexByKeyObject: function (items) {\n      var that = this;\n      that._indexByKey = {};\n      (0, _iterator.each)(items, function (index, item) {\n        that._indexByKey[item.key] = index;\n      });\n    },\n    _calculateHasItems: function (node, options) {\n      var that = this;\n      var parentIds = options.storeLoadOptions.parentIds;\n      var hasItems;\n      var isFullBranch = isFullBranchFilterMode(that);\n\n      if (that._hasItemsGetter && (parentIds || !options.storeLoadOptions.filter || isFullBranch)) {\n        hasItems = that._hasItemsGetter(node.data);\n      }\n\n      if (void 0 === hasItems) {\n        if (!that._isChildrenLoaded[node.key] && options.remoteOperations.filtering && (parentIds || isFullBranch)) {\n          hasItems = true;\n        } else {\n          if (options.loadOptions.filter && !options.remoteOperations.filtering && isFullBranch) {\n            hasItems = node.children.length;\n          } else {\n            hasItems = node.hasChildren;\n          }\n        }\n      }\n\n      return !!hasItems;\n    },\n    _createVisibleItemsByNodes: function (nodes, options) {\n      var that = this;\n      var result = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].visible) {\n          result.push(nodes[i]);\n        }\n\n        if ((that.isRowExpanded(nodes[i].key, options) || !nodes[i].visible) && nodes[i].hasChildren && nodes[i].children.length) {\n          result = result.concat(that._createVisibleItemsByNodes(nodes[i].children, options));\n        }\n      }\n\n      return result;\n    },\n    _convertItemToNode: function (item, rootValue, nodeByKey) {\n      var key = this._keyGetter(item);\n\n      var parentId = this._parentIdGetter(item);\n\n      parentId = (0, _type.isDefined)(parentId) ? parentId : rootValue;\n      var parentNode = nodeByKey[parentId] = nodeByKey[parentId] || {\n        key: parentId,\n        children: []\n      };\n      var node = nodeByKey[key] = nodeByKey[key] || {\n        key: key,\n        children: []\n      };\n      node.data = item;\n      node.parent = parentNode;\n      return node;\n    },\n    _createNodesByItems: function (items, visibleItems) {\n      var that = this;\n      var rootValue = that.option(\"rootValue\");\n      var visibleByKey = {};\n      var nodeByKey = that._nodeByKey = {};\n      var i;\n\n      if (visibleItems) {\n        for (i = 0; i < visibleItems.length; i++) {\n          visibleByKey[this._keyGetter(visibleItems[i])] = true;\n        }\n      }\n\n      for (i = 0; i < items.length; i++) {\n        var node = that._convertItemToNode(items[i], rootValue, nodeByKey);\n\n        if (void 0 === node.key) {\n          return;\n        }\n\n        node.visible = !visibleItems || !!visibleByKey[node.key];\n\n        if (node.parent) {\n          node.parent.children.push(node);\n        }\n      }\n\n      var rootNode = nodeByKey[rootValue] || {\n        key: rootValue,\n        children: []\n      };\n      rootNode.level = -1;\n      return rootNode;\n    },\n    _convertDataToPlainStructure: function (data, parentId, result) {\n      var key;\n\n      if (this._itemsGetter && !data.isConverted) {\n        result = result || [];\n\n        for (var i = 0; i < data.length; i++) {\n          var item = (0, _array_utils.createObjectWithChanges)(data[i]);\n          key = this._keyGetter(item);\n\n          if (void 0 === key) {\n            key = result.length + 1;\n\n            this._keySetter(item, key);\n          }\n\n          this._parentIdSetter(item, void 0 === parentId ? this.option(\"rootValue\") : parentId);\n\n          result.push(item);\n\n          var childItems = this._itemsGetter(item);\n\n          if (childItems && childItems.length) {\n            this._convertDataToPlainStructure(childItems, key, result);\n\n            var itemsExpr = this.option(\"itemsExpr\");\n\n            if (!(0, _type.isFunction)(itemsExpr)) {\n              delete item[itemsExpr];\n            }\n          }\n        }\n\n        result.isConverted = true;\n        return result;\n      }\n\n      return data;\n    },\n    _createIdFilter: function (field, keys) {\n      var parentIdFilters = [];\n\n      for (var i = 0; i < keys.length; i++) {\n        parentIdFilters.push([field, \"=\", keys[i]]);\n      }\n\n      return _uiGrid_core.default.combineFilters(parentIdFilters, \"or\");\n    },\n    _customizeRemoteOperations: function (options, operationTypes) {\n      this.callBase.apply(this, arguments);\n      options.remoteOperations.paging = false;\n      var expandVisibleNodes = false;\n\n      if (this.option(\"autoExpandAll\")) {\n        options.remoteOperations.sorting = false;\n        options.remoteOperations.filtering = false;\n\n        if ((!this._lastLoadOptions || operationTypes.filtering && !options.storeLoadOptions.filter) && !options.isCustomLoading) {\n          expandVisibleNodes = true;\n        }\n      }\n\n      if (!options.isCustomLoading) {\n        this._isReload = this._isReload || operationTypes.reload;\n\n        if (!options.cachedStoreData) {\n          this._isChildrenLoaded = {};\n\n          if (this._isReload) {\n            this._nodeByKey = {};\n          }\n        }\n\n        if (this.option(\"expandNodesOnFiltering\") && (operationTypes.filtering || this._isReload && options.storeLoadOptions.filter)) {\n          if (options.storeLoadOptions.filter) {\n            expandVisibleNodes = true;\n          } else {\n            options.collapseVisibleNodes = true;\n          }\n        }\n      }\n\n      options.expandVisibleNodes = expandVisibleNodes;\n    },\n    _getParentIdsToLoad: function (parentIds) {\n      var parentIdsToLoad = [];\n\n      for (var i = 0; i < parentIds.length; i++) {\n        var node = this.getNodeByKey(parentIds[i]);\n\n        if (!node || node.hasChildren && !node.children.length) {\n          parentIdsToLoad.push(parentIds[i]);\n        }\n      }\n\n      return parentIdsToLoad;\n    },\n    _handleDataLoading: function (options) {\n      var rootValue = this.option(\"rootValue\");\n      var parentIdExpr = this.option(\"parentIdExpr\");\n      var parentIds = options.storeLoadOptions.parentIds;\n\n      if (parentIds) {\n        options.isCustomLoading = false;\n      }\n\n      this.callBase.apply(this, arguments);\n\n      if (options.remoteOperations.filtering && !options.isCustomLoading) {\n        if (isFullBranchFilterMode(this) && options.cachedStoreData || !options.storeLoadOptions.filter) {\n          var expandedRowKeys = options.collapseVisibleNodes ? [] : this.option(\"expandedRowKeys\");\n          parentIds = [rootValue].concat(expandedRowKeys).concat(parentIds || []);\n          var parentIdsToLoad = options.data ? this._getParentIdsToLoad(parentIds) : parentIds;\n\n          if (parentIdsToLoad.length) {\n            options.cachedPagingData = void 0;\n            options.data = void 0;\n            options.mergeStoreLoadData = true;\n          }\n\n          options.storeLoadOptions.parentIds = parentIdsToLoad;\n          options.storeLoadOptions.filter = this._createIdFilter(parentIdExpr, parentIdsToLoad);\n        }\n      }\n    },\n    _generateInfoToLoad: function (data, needChildren) {\n      var that = this;\n      var key;\n      var keyMap = {};\n      var resultKeyMap = {};\n      var resultKeys = [];\n      var rootValue = that.option(\"rootValue\");\n      var i;\n\n      for (i = 0; i < data.length; i++) {\n        key = needChildren ? that._parentIdGetter(data[i]) : that._keyGetter(data[i]);\n        keyMap[key] = true;\n      }\n\n      for (i = 0; i < data.length; i++) {\n        key = needChildren ? that._keyGetter(data[i]) : that._parentIdGetter(data[i]);\n        var needToLoad = needChildren ? that.isRowExpanded(key) : key !== rootValue;\n\n        if (!keyMap[key] && !resultKeyMap[key] && needToLoad) {\n          resultKeyMap[key] = true;\n          resultKeys.push(key);\n        }\n      }\n\n      return {\n        keyMap: resultKeyMap,\n        keys: resultKeys\n      };\n    },\n    _loadParentsOrChildren: function (data, options, needChildren) {\n      var _this = this;\n\n      var that = this;\n      var filter;\n      var needLocalFiltering;\n\n      var _that$_generateInfoTo = that._generateInfoToLoad(data, needChildren),\n          keys = _that$_generateInfoTo.keys,\n          keyMap = _that$_generateInfoTo.keyMap;\n\n      var d = new _deferred.Deferred();\n      var isRemoteFiltering = options.remoteOperations.filtering;\n      var maxFilterLengthInRequest = that.option(\"maxFilterLengthInRequest\");\n      var loadOptions = isRemoteFiltering ? options.storeLoadOptions : options.loadOptions;\n\n      function concatLoadedData(loadedData) {\n        if (isRemoteFiltering) {\n          that._cachedStoreData = that._cachedStoreData.concat(loadedData);\n        }\n\n        return data.concat(loadedData);\n      }\n\n      if (!keys.length) {\n        return d.resolve(data);\n      }\n\n      var cachedNodes = keys.map(function (id) {\n        return _this.getNodeByKey(id);\n      }).filter(function (node) {\n        return node && node.data;\n      });\n\n      if (cachedNodes.length === keys.length) {\n        if (needChildren) {\n          cachedNodes = cachedNodes.reduce(function (result, node) {\n            return result.concat(node.children);\n          }, []);\n        }\n\n        if (cachedNodes.length) {\n          return that._loadParentsOrChildren(concatLoadedData(cachedNodes.map(function (node) {\n            return node.data;\n          })), options, needChildren);\n        }\n      }\n\n      var keyExpr = needChildren ? that.option(\"parentIdExpr\") : that.getKeyExpr();\n      filter = that._createIdFilter(keyExpr, keys);\n      var filterLength = encodeURI(JSON.stringify(filter)).length;\n\n      if (filterLength > maxFilterLengthInRequest) {\n        filter = function (itemData) {\n          return keyMap[that._keyGetter(itemData)];\n        };\n\n        needLocalFiltering = isRemoteFiltering;\n      }\n\n      loadOptions = (0, _extend.extend)({}, loadOptions, {\n        filter: !needLocalFiltering ? filter : null\n      });\n      var store = options.fullData ? new _array_store.default(options.fullData) : that._dataSource.store();\n      that.loadFromStore(loadOptions, store).done(function (loadedData) {\n        if (loadedData.length) {\n          if (needLocalFiltering) {\n            loadedData = (0, _query.default)(loadedData).filter(filter).toArray();\n          }\n\n          that._loadParentsOrChildren(concatLoadedData(loadedData), options, needChildren).done(d.resolve).fail(d.reject);\n        } else {\n          d.resolve(data);\n        }\n      }).fail(d.reject);\n      return d;\n    },\n    _loadParents: function (data, options) {\n      return this._loadParentsOrChildren(data, options);\n    },\n    _loadChildrenIfNeed: function (data, options) {\n      if (isFullBranchFilterMode(this)) {\n        return this._loadParentsOrChildren(data, options, true);\n      }\n\n      return (0, _deferred.when)(data);\n    },\n    _updateHasItemsMap: function (options) {\n      var parentIds = options.storeLoadOptions.parentIds;\n\n      if (parentIds) {\n        for (var i = 0; i < parentIds.length; i++) {\n          this._isChildrenLoaded[parentIds[i]] = true;\n        }\n      }\n    },\n    _getKeyInfo: function () {\n      return {\n        key: function () {\n          return \"key\";\n        },\n        keyOf: function (data) {\n          return data.key;\n        }\n      };\n    },\n    _applyBatch: function (changes) {\n      var _this2 = this;\n\n      var baseChanges = [];\n      changes.forEach(function (change) {\n        if (\"insert\" === change.type) {\n          baseChanges = baseChanges.concat(_this2._applyInsert(change));\n        } else {\n          if (\"remove\" === change.type) {\n            baseChanges = baseChanges.concat(_this2._applyRemove(change));\n          } else {\n            if (\"update\" === change.type) {\n              baseChanges.push({\n                type: change.type,\n                key: change.key,\n                data: {\n                  data: change.data\n                }\n              });\n            }\n          }\n        }\n      });\n      this.callBase(baseChanges);\n    },\n    _setHasItems: function (node, value) {\n      var hasItemsSetter = this._hasItemsSetter;\n      node.hasChildren = value;\n\n      if (hasItemsSetter && node.data) {\n        hasItemsSetter(node.data, value);\n      }\n    },\n    _applyInsert: function (change) {\n      var that = this;\n      var baseChanges = [];\n      var parentId = that.parentKeyOf(change.data);\n      var parentNode = that.getNodeByKey(parentId);\n\n      if (parentNode) {\n        var rootValue = that.option(\"rootValue\");\n\n        var node = that._convertItemToNode(change.data, rootValue, that._nodeByKey);\n\n        node.hasChildren = false;\n        node.level = parentNode.level + 1;\n        node.visible = true;\n        parentNode.children.push(node);\n        that._isChildrenLoaded[node.key] = true;\n\n        that._setHasItems(parentNode, true);\n\n        if ((!parentNode.parent || that.isRowExpanded(parentNode.key)) && void 0 !== change.index) {\n          var index = that.items().indexOf(parentNode) + 1;\n          index += change.index >= 0 ? Math.min(change.index, parentNode.children.length) : parentNode.children.length;\n          baseChanges.push({\n            type: change.type,\n            data: node,\n            index: index\n          });\n        }\n      }\n\n      return baseChanges;\n    },\n    _applyRemove: function (change) {\n      var baseChanges = [];\n      var node = this.getNodeByKey(change.key);\n      var parentNode = node && node.parent;\n\n      if (parentNode) {\n        var index = parentNode.children.indexOf(node);\n\n        if (index >= 0) {\n          parentNode.children.splice(index, 1);\n\n          if (!parentNode.children.length) {\n            this._setHasItems(parentNode, false);\n          }\n\n          baseChanges.push(change);\n          baseChanges = baseChanges.concat(this.getChildNodeKeys(change.key).map(function (key) {\n            return {\n              type: change.type,\n              key: key\n            };\n          }));\n        }\n      }\n\n      return baseChanges;\n    },\n    _handleDataLoaded: function (options) {\n      var data = options.data = this._convertDataToPlainStructure(options.data);\n\n      if (!options.remoteOperations.filtering && options.loadOptions.filter) {\n        options.fullData = queryByOptions((0, _query.default)(options.data), {\n          sort: options.loadOptions && options.loadOptions.sort\n        }).toArray();\n      }\n\n      this._updateHasItemsMap(options);\n\n      this.callBase(options);\n\n      if (data.isConverted && this._cachedStoreData) {\n        this._cachedStoreData.isConverted = true;\n      }\n    },\n    _fillNodes: function (nodes, options, expandedRowKeys, level) {\n      var isFullBranch = isFullBranchFilterMode(this);\n      level = level || 0;\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        var needToExpand = false;\n\n        this._fillNodes(nodes[i].children, options, expandedRowKeys, level + 1);\n\n        node.level = level;\n        node.hasChildren = this._calculateHasItems(node, options);\n\n        if (node.visible && node.hasChildren) {\n          if (isFullBranch) {\n            if (node.children.filter(function (node) {\n              return node.visible;\n            }).length) {\n              needToExpand = true;\n            } else {\n              if (node.children.length) {\n                _uiTree_list.default.foreachNodes(node.children, function (node) {\n                  node.visible = true;\n                });\n              }\n            }\n          } else {\n            needToExpand = true;\n          }\n\n          if (options.expandVisibleNodes && needToExpand) {\n            expandedRowKeys.push(node.key);\n          }\n        }\n\n        if (node.visible || node.hasChildren) {\n          node.parent.hasChildren = true;\n        }\n      }\n    },\n    _processTreeStructure: function (options, visibleItems) {\n      var data = options.data;\n      var parentIds = options.storeLoadOptions.parentIds;\n      var expandedRowKeys = [];\n\n      if (parentIds && parentIds.length || this._isReload) {\n        if (options.fullData && options.fullData.length > options.data.length) {\n          data = options.fullData;\n          visibleItems = visibleItems || options.data;\n        }\n\n        this._rootNode = this._createNodesByItems(data, visibleItems);\n\n        if (!this._rootNode) {\n          options.data = new _deferred.Deferred().reject(_ui.default.Error(\"E1046\", this.getKeyExpr()));\n          return;\n        }\n\n        this._fillNodes(this._rootNode.children, options, expandedRowKeys);\n\n        this._isNodesInitializing = true;\n\n        if (options.collapseVisibleNodes || expandedRowKeys.length) {\n          this.option(\"expandedRowKeys\", expandedRowKeys);\n        }\n\n        this._isReload = false;\n        this.executeAction(\"onNodesInitialized\", {\n          root: this._rootNode\n        });\n        this._isNodesInitializing = false;\n      }\n\n      data = this._createVisibleItemsByNodes(this._rootNode.children, options);\n      options.data = data;\n      this._totalItemsCount = data.length;\n    },\n    _handleDataLoadedCore: function (options) {\n      var that = this;\n      var data = options.data;\n      var callBase = that.callBase;\n      var filter = options.storeLoadOptions.filter || options.loadOptions.filter;\n      var filterMode = that.option(\"filterMode\");\n      var visibleItems;\n      var parentIds = options.storeLoadOptions.parentIds;\n      var needLoadParents = filter && (!parentIds || !parentIds.length) && \"standard\" !== filterMode;\n\n      if (!options.isCustomLoading) {\n        if (needLoadParents) {\n          var d = options.data = new _deferred.Deferred();\n\n          if (\"matchOnly\" === filterMode) {\n            visibleItems = data;\n          }\n\n          return that._loadParents(data, options).done(function (data) {\n            that._loadChildrenIfNeed(data, options).done(function (data) {\n              options.data = data;\n\n              that._processTreeStructure(options, visibleItems);\n\n              callBase.call(that, options);\n              d.resolve(options.data);\n            });\n          }).fail(d.reject);\n        } else {\n          that._processTreeStructure(options);\n        }\n      }\n\n      that.callBase(options);\n    },\n    _handlePush: function (changes) {\n      var reshapeOnPush = this._dataSource._reshapeOnPush;\n      var isNeedReshape = reshapeOnPush && !!changes.length;\n\n      if (isNeedReshape) {\n        this._isReload = true;\n      }\n\n      this.callBase.apply(this, arguments);\n    },\n    init: function (dataSource, remoteOperations) {\n      this.callBase.apply(this, arguments);\n      var dataStructure = this.option(\"dataStructure\");\n      this._keyGetter = this._createKeyGetter();\n      this._parentIdGetter = this._createParentIdGetter();\n      this._hasItemsGetter = this._createHasItemsGetter();\n      this._hasItemsSetter = this._createHasItemsSetter();\n\n      if (\"tree\" === dataStructure) {\n        this._itemsGetter = this._createItemsGetter();\n        this._keySetter = this._createKeySetter();\n        this._parentIdSetter = this.createParentIdSetter();\n      }\n\n      this._nodeByKey = {};\n      this._isChildrenLoaded = {};\n      this._totalItemsCount = 0;\n      this.createAction(\"onNodesInitialized\");\n    },\n    getKeyExpr: function () {\n      var store = this.store();\n      var key = store && store.key();\n      var keyExpr = this.option(\"keyExpr\");\n\n      if ((0, _type.isDefined)(key) && (0, _type.isDefined)(keyExpr)) {\n        if (!(0, _common.equalByValue)(key, keyExpr)) {\n          throw _ui.default.Error(\"E1044\");\n        }\n      }\n\n      return key || keyExpr || DEFAULT_KEY_EXPRESSION;\n    },\n    keyOf: function (data) {\n      return this._keyGetter && this._keyGetter(data);\n    },\n    parentKeyOf: function (data) {\n      return this._parentIdGetter && this._parentIdGetter(data);\n    },\n    getRootNode: function () {\n      return this._rootNode;\n    },\n    totalItemsCount: function () {\n      return this._totalItemsCount;\n    },\n    isRowExpanded: function (key, cache) {\n      if (cache) {\n        var isExpandedByKey = cache.isExpandedByKey;\n\n        if (!isExpandedByKey) {\n          isExpandedByKey = cache.isExpandedByKey = {};\n          this.option(\"expandedRowKeys\").forEach(function (key) {\n            isExpandedByKey[key] = true;\n          });\n        }\n\n        return !!isExpandedByKey[key];\n      }\n\n      var indexExpandedNodeKey = _uiGrid_core.default.getIndexByKey(key, this.option(\"expandedRowKeys\"), null);\n\n      return indexExpandedNodeKey >= 0;\n    },\n    _changeRowExpandCore: function (key) {\n      var expandedRowKeys = this.option(\"expandedRowKeys\").slice();\n\n      var indexExpandedNodeKey = _uiGrid_core.default.getIndexByKey(key, expandedRowKeys, null);\n\n      if (indexExpandedNodeKey < 0) {\n        expandedRowKeys.push(key);\n      } else {\n        expandedRowKeys.splice(indexExpandedNodeKey, 1);\n      }\n\n      this.option(\"expandedRowKeys\", expandedRowKeys);\n    },\n    changeRowExpand: function (key) {\n      this._changeRowExpandCore(key);\n\n      return this._isNodesInitializing ? new _deferred.Deferred().resolve() : this.load();\n    },\n    getNodeByKey: function (key) {\n      if (this._nodeByKey) {\n        return this._nodeByKey[key];\n      }\n    },\n    getNodeLeafKeys: function () {\n      var that = this;\n      var result = [];\n      var keys = that._rootNode ? [that._rootNode.key] : [];\n      keys.forEach(function (key) {\n        var node = that.getNodeByKey(key);\n        node && _uiTree_list.default.foreachNodes([node], function (childNode) {\n          !childNode.children.length && result.push(childNode.key);\n        });\n      });\n      return result;\n    },\n    getChildNodeKeys: function (parentKey) {\n      var node = this.getNodeByKey(parentKey);\n      var childrenKeys = [];\n      node && _uiTree_list.default.foreachNodes(node.children, function (childNode) {\n        childrenKeys.push(childNode.key);\n      });\n      return childrenKeys;\n    },\n    loadDescendants: function (keys, childrenOnly) {\n      var that = this;\n      var d = new _deferred.Deferred();\n      var remoteOperations = that.remoteOperations();\n\n      if ((0, _type.isDefined)(keys)) {\n        keys = Array.isArray(keys) ? keys : [keys];\n      } else {\n        keys = that.getNodeLeafKeys();\n      }\n\n      if (!remoteOperations.filtering || !keys.length) {\n        return d.resolve();\n      }\n\n      var loadOptions = that._dataSource._createStoreLoadOptions();\n\n      loadOptions.parentIds = keys;\n      that.load(loadOptions).done(function () {\n        if (!childrenOnly) {\n          var childKeys = getChildKeys(that, keys);\n\n          if (childKeys.length) {\n            that.loadDescendants(childKeys, childrenOnly).done(d.resolve).fail(d.reject);\n            return;\n          }\n        }\n\n        d.resolve();\n      }).fail(d.reject);\n      return d.promise();\n    },\n    forEachNode: function () {\n      var nodes = [];\n      var callback;\n\n      if (1 === arguments.length) {\n        callback = arguments[0];\n        var rootNode = this.getRootNode();\n        nodes = rootNode && rootNode.children || [];\n      } else {\n        if (2 === arguments.length) {\n          callback = arguments[1];\n          nodes = arguments[0];\n          nodes = Array.isArray(nodes) ? nodes : [nodes];\n        }\n      }\n\n      _uiTree_list.default.foreachNodes(nodes, callback);\n    }\n  };\n}());\n\nvar _default = {\n  extend: function (extender) {\n    DataSourceAdapterTreeList = DataSourceAdapterTreeList.inherit(extender);\n  },\n  create: function (component) {\n    return new DataSourceAdapterTreeList(component);\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/tree_list/ui.tree_list.data_source_adapter.js"],"names":["exports","default","_uiTree_list","_interopRequireDefault","require","_ui","_common","_type","_iterator","_data","_extend","_uiGrid_core","_array_utils","_array_store","_query","_uiGrid_core2","_deferred","_store_helper","obj","__esModule","queryByOptions","DEFAULT_KEY_EXPRESSION","isFullBranchFilterMode","that","option","DataSourceAdapterTreeList","inherit","getChildKeys","keys","childKeys","forEach","key","node","getNodeByKey","children","child","push","_createKeyGetter","keyExpr","getKeyExpr","compileGetter","_createKeySetter","isFunction","compileSetter","_createParentIdGetter","createParentIdSetter","parentIdExpr","_createItemsGetter","_createHasItemsGetter","hasItemsExpr","_createHasItemsSetter","_updateIndexByKeyObject","items","_indexByKey","each","index","item","_calculateHasItems","options","parentIds","storeLoadOptions","hasItems","isFullBranch","_hasItemsGetter","filter","data","_isChildrenLoaded","remoteOperations","filtering","loadOptions","length","hasChildren","_createVisibleItemsByNodes","nodes","result","i","visible","isRowExpanded","concat","_convertItemToNode","rootValue","nodeByKey","_keyGetter","parentId","_parentIdGetter","isDefined","parentNode","parent","_createNodesByItems","visibleItems","visibleByKey","_nodeByKey","rootNode","level","_convertDataToPlainStructure","_itemsGetter","isConverted","createObjectWithChanges","_keySetter","_parentIdSetter","childItems","itemsExpr","_createIdFilter","field","parentIdFilters","combineFilters","_customizeRemoteOperations","operationTypes","callBase","apply","arguments","paging","expandVisibleNodes","sorting","_lastLoadOptions","isCustomLoading","_isReload","reload","cachedStoreData","collapseVisibleNodes","_getParentIdsToLoad","parentIdsToLoad","_handleDataLoading","expandedRowKeys","cachedPagingData","mergeStoreLoadData","_generateInfoToLoad","needChildren","keyMap","resultKeyMap","resultKeys","needToLoad","_loadParentsOrChildren","_this","needLocalFiltering","_that$_generateInfoTo","d","Deferred","isRemoteFiltering","maxFilterLengthInRequest","concatLoadedData","loadedData","_cachedStoreData","resolve","cachedNodes","map","id","reduce","filterLength","encodeURI","JSON","stringify","itemData","extend","store","fullData","_dataSource","loadFromStore","done","toArray","fail","reject","_loadParents","_loadChildrenIfNeed","when","_updateHasItemsMap","_getKeyInfo","keyOf","_applyBatch","changes","_this2","baseChanges","change","type","_applyInsert","_applyRemove","_setHasItems","value","hasItemsSetter","_hasItemsSetter","parentKeyOf","indexOf","Math","min","splice","getChildNodeKeys","_handleDataLoaded","sort","_fillNodes","needToExpand","foreachNodes","_processTreeStructure","_rootNode","Error","_isNodesInitializing","executeAction","root","_totalItemsCount","_handleDataLoadedCore","filterMode","needLoadParents","call","_handlePush","reshapeOnPush","_reshapeOnPush","isNeedReshape","init","dataSource","dataStructure","createAction","equalByValue","getRootNode","totalItemsCount","cache","isExpandedByKey","indexExpandedNodeKey","getIndexByKey","_changeRowExpandCore","slice","changeRowExpand","load","getNodeLeafKeys","childNode","parentKey","childrenKeys","loadDescendants","childrenOnly","Array","isArray","_createStoreLoadOptions","promise","forEachNode","callback","_default","extender","create","component","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/tree_list/ui.tree_list.data_source_adapter.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiTree_list = _interopRequireDefault(require(\"./ui.tree_list.core\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.utils\"));\r\nvar _array_utils = require(\"../../data/array_utils\");\r\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"../grid_core/ui.grid_core.data_source_adapter\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _store_helper = _interopRequireDefault(require(\"../../data/store_helper\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar queryByOptions = _store_helper.default.queryByOptions;\r\nvar DEFAULT_KEY_EXPRESSION = \"id\";\r\nvar isFullBranchFilterMode = function(that) {\r\n    return \"fullBranch\" === that.option(\"filterMode\")\r\n};\r\nvar DataSourceAdapterTreeList = _uiGrid_core2.default.inherit(function() {\r\n    var getChildKeys = function(that, keys) {\r\n        var childKeys = [];\r\n        keys.forEach(function(key) {\r\n            var node = that.getNodeByKey(key);\r\n            node && node.children.forEach(function(child) {\r\n                childKeys.push(child.key)\r\n            })\r\n        });\r\n        return childKeys\r\n    };\r\n    return {\r\n        _createKeyGetter: function() {\r\n            var keyExpr = this.getKeyExpr();\r\n            return (0, _data.compileGetter)(keyExpr)\r\n        },\r\n        _createKeySetter: function() {\r\n            var keyExpr = this.getKeyExpr();\r\n            if ((0, _type.isFunction)(keyExpr)) {\r\n                return keyExpr\r\n            }\r\n            return (0, _data.compileSetter)(keyExpr)\r\n        },\r\n        _createParentIdGetter: function() {\r\n            return (0, _data.compileGetter)(this.option(\"parentIdExpr\"))\r\n        },\r\n        createParentIdSetter: function() {\r\n            var parentIdExpr = this.option(\"parentIdExpr\");\r\n            if ((0, _type.isFunction)(parentIdExpr)) {\r\n                return parentIdExpr\r\n            }\r\n            return (0, _data.compileSetter)(parentIdExpr)\r\n        },\r\n        _createItemsGetter: function() {\r\n            return (0, _data.compileGetter)(this.option(\"itemsExpr\"))\r\n        },\r\n        _createHasItemsGetter: function() {\r\n            var hasItemsExpr = this.option(\"hasItemsExpr\");\r\n            return hasItemsExpr && (0, _data.compileGetter)(hasItemsExpr)\r\n        },\r\n        _createHasItemsSetter: function() {\r\n            var hasItemsExpr = this.option(\"hasItemsExpr\");\r\n            if ((0, _type.isFunction)(hasItemsExpr)) {\r\n                return hasItemsExpr\r\n            }\r\n            return hasItemsExpr && (0, _data.compileSetter)(hasItemsExpr)\r\n        },\r\n        _updateIndexByKeyObject: function(items) {\r\n            var that = this;\r\n            that._indexByKey = {};\r\n            (0, _iterator.each)(items, function(index, item) {\r\n                that._indexByKey[item.key] = index\r\n            })\r\n        },\r\n        _calculateHasItems: function(node, options) {\r\n            var that = this;\r\n            var parentIds = options.storeLoadOptions.parentIds;\r\n            var hasItems;\r\n            var isFullBranch = isFullBranchFilterMode(that);\r\n            if (that._hasItemsGetter && (parentIds || !options.storeLoadOptions.filter || isFullBranch)) {\r\n                hasItems = that._hasItemsGetter(node.data)\r\n            }\r\n            if (void 0 === hasItems) {\r\n                if (!that._isChildrenLoaded[node.key] && options.remoteOperations.filtering && (parentIds || isFullBranch)) {\r\n                    hasItems = true\r\n                } else {\r\n                    if (options.loadOptions.filter && !options.remoteOperations.filtering && isFullBranch) {\r\n                        hasItems = node.children.length\r\n                    } else {\r\n                        hasItems = node.hasChildren\r\n                    }\r\n                }\r\n            }\r\n            return !!hasItems\r\n        },\r\n        _createVisibleItemsByNodes: function(nodes, options) {\r\n            var that = this;\r\n            var result = [];\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (nodes[i].visible) {\r\n                    result.push(nodes[i])\r\n                }\r\n                if ((that.isRowExpanded(nodes[i].key, options) || !nodes[i].visible) && nodes[i].hasChildren && nodes[i].children.length) {\r\n                    result = result.concat(that._createVisibleItemsByNodes(nodes[i].children, options))\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _convertItemToNode: function(item, rootValue, nodeByKey) {\r\n            var key = this._keyGetter(item);\r\n            var parentId = this._parentIdGetter(item);\r\n            parentId = (0, _type.isDefined)(parentId) ? parentId : rootValue;\r\n            var parentNode = nodeByKey[parentId] = nodeByKey[parentId] || {\r\n                key: parentId,\r\n                children: []\r\n            };\r\n            var node = nodeByKey[key] = nodeByKey[key] || {\r\n                key: key,\r\n                children: []\r\n            };\r\n            node.data = item;\r\n            node.parent = parentNode;\r\n            return node\r\n        },\r\n        _createNodesByItems: function(items, visibleItems) {\r\n            var that = this;\r\n            var rootValue = that.option(\"rootValue\");\r\n            var visibleByKey = {};\r\n            var nodeByKey = that._nodeByKey = {};\r\n            var i;\r\n            if (visibleItems) {\r\n                for (i = 0; i < visibleItems.length; i++) {\r\n                    visibleByKey[this._keyGetter(visibleItems[i])] = true\r\n                }\r\n            }\r\n            for (i = 0; i < items.length; i++) {\r\n                var node = that._convertItemToNode(items[i], rootValue, nodeByKey);\r\n                if (void 0 === node.key) {\r\n                    return\r\n                }\r\n                node.visible = !visibleItems || !!visibleByKey[node.key];\r\n                if (node.parent) {\r\n                    node.parent.children.push(node)\r\n                }\r\n            }\r\n            var rootNode = nodeByKey[rootValue] || {\r\n                key: rootValue,\r\n                children: []\r\n            };\r\n            rootNode.level = -1;\r\n            return rootNode\r\n        },\r\n        _convertDataToPlainStructure: function(data, parentId, result) {\r\n            var key;\r\n            if (this._itemsGetter && !data.isConverted) {\r\n                result = result || [];\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var item = (0, _array_utils.createObjectWithChanges)(data[i]);\r\n                    key = this._keyGetter(item);\r\n                    if (void 0 === key) {\r\n                        key = result.length + 1;\r\n                        this._keySetter(item, key)\r\n                    }\r\n                    this._parentIdSetter(item, void 0 === parentId ? this.option(\"rootValue\") : parentId);\r\n                    result.push(item);\r\n                    var childItems = this._itemsGetter(item);\r\n                    if (childItems && childItems.length) {\r\n                        this._convertDataToPlainStructure(childItems, key, result);\r\n                        var itemsExpr = this.option(\"itemsExpr\");\r\n                        if (!(0, _type.isFunction)(itemsExpr)) {\r\n                            delete item[itemsExpr]\r\n                        }\r\n                    }\r\n                }\r\n                result.isConverted = true;\r\n                return result\r\n            }\r\n            return data\r\n        },\r\n        _createIdFilter: function(field, keys) {\r\n            var parentIdFilters = [];\r\n            for (var i = 0; i < keys.length; i++) {\r\n                parentIdFilters.push([field, \"=\", keys[i]])\r\n            }\r\n            return _uiGrid_core.default.combineFilters(parentIdFilters, \"or\")\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            this.callBase.apply(this, arguments);\r\n            options.remoteOperations.paging = false;\r\n            var expandVisibleNodes = false;\r\n            if (this.option(\"autoExpandAll\")) {\r\n                options.remoteOperations.sorting = false;\r\n                options.remoteOperations.filtering = false;\r\n                if ((!this._lastLoadOptions || operationTypes.filtering && !options.storeLoadOptions.filter) && !options.isCustomLoading) {\r\n                    expandVisibleNodes = true\r\n                }\r\n            }\r\n            if (!options.isCustomLoading) {\r\n                this._isReload = this._isReload || operationTypes.reload;\r\n                if (!options.cachedStoreData) {\r\n                    this._isChildrenLoaded = {};\r\n                    if (this._isReload) {\r\n                        this._nodeByKey = {}\r\n                    }\r\n                }\r\n                if (this.option(\"expandNodesOnFiltering\") && (operationTypes.filtering || this._isReload && options.storeLoadOptions.filter)) {\r\n                    if (options.storeLoadOptions.filter) {\r\n                        expandVisibleNodes = true\r\n                    } else {\r\n                        options.collapseVisibleNodes = true\r\n                    }\r\n                }\r\n            }\r\n            options.expandVisibleNodes = expandVisibleNodes\r\n        },\r\n        _getParentIdsToLoad: function(parentIds) {\r\n            var parentIdsToLoad = [];\r\n            for (var i = 0; i < parentIds.length; i++) {\r\n                var node = this.getNodeByKey(parentIds[i]);\r\n                if (!node || node.hasChildren && !node.children.length) {\r\n                    parentIdsToLoad.push(parentIds[i])\r\n                }\r\n            }\r\n            return parentIdsToLoad\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var rootValue = this.option(\"rootValue\");\r\n            var parentIdExpr = this.option(\"parentIdExpr\");\r\n            var parentIds = options.storeLoadOptions.parentIds;\r\n            if (parentIds) {\r\n                options.isCustomLoading = false\r\n            }\r\n            this.callBase.apply(this, arguments);\r\n            if (options.remoteOperations.filtering && !options.isCustomLoading) {\r\n                if (isFullBranchFilterMode(this) && options.cachedStoreData || !options.storeLoadOptions.filter) {\r\n                    var expandedRowKeys = options.collapseVisibleNodes ? [] : this.option(\"expandedRowKeys\");\r\n                    parentIds = [rootValue].concat(expandedRowKeys).concat(parentIds || []);\r\n                    var parentIdsToLoad = options.data ? this._getParentIdsToLoad(parentIds) : parentIds;\r\n                    if (parentIdsToLoad.length) {\r\n                        options.cachedPagingData = void 0;\r\n                        options.data = void 0;\r\n                        options.mergeStoreLoadData = true\r\n                    }\r\n                    options.storeLoadOptions.parentIds = parentIdsToLoad;\r\n                    options.storeLoadOptions.filter = this._createIdFilter(parentIdExpr, parentIdsToLoad)\r\n                }\r\n            }\r\n        },\r\n        _generateInfoToLoad: function(data, needChildren) {\r\n            var that = this;\r\n            var key;\r\n            var keyMap = {};\r\n            var resultKeyMap = {};\r\n            var resultKeys = [];\r\n            var rootValue = that.option(\"rootValue\");\r\n            var i;\r\n            for (i = 0; i < data.length; i++) {\r\n                key = needChildren ? that._parentIdGetter(data[i]) : that._keyGetter(data[i]);\r\n                keyMap[key] = true\r\n            }\r\n            for (i = 0; i < data.length; i++) {\r\n                key = needChildren ? that._keyGetter(data[i]) : that._parentIdGetter(data[i]);\r\n                var needToLoad = needChildren ? that.isRowExpanded(key) : key !== rootValue;\r\n                if (!keyMap[key] && !resultKeyMap[key] && needToLoad) {\r\n                    resultKeyMap[key] = true;\r\n                    resultKeys.push(key)\r\n                }\r\n            }\r\n            return {\r\n                keyMap: resultKeyMap,\r\n                keys: resultKeys\r\n            }\r\n        },\r\n        _loadParentsOrChildren: function(data, options, needChildren) {\r\n            var _this = this;\r\n            var that = this;\r\n            var filter;\r\n            var needLocalFiltering;\r\n            var _that$_generateInfoTo = that._generateInfoToLoad(data, needChildren),\r\n                keys = _that$_generateInfoTo.keys,\r\n                keyMap = _that$_generateInfoTo.keyMap;\r\n            var d = new _deferred.Deferred;\r\n            var isRemoteFiltering = options.remoteOperations.filtering;\r\n            var maxFilterLengthInRequest = that.option(\"maxFilterLengthInRequest\");\r\n            var loadOptions = isRemoteFiltering ? options.storeLoadOptions : options.loadOptions;\r\n\r\n            function concatLoadedData(loadedData) {\r\n                if (isRemoteFiltering) {\r\n                    that._cachedStoreData = that._cachedStoreData.concat(loadedData)\r\n                }\r\n                return data.concat(loadedData)\r\n            }\r\n            if (!keys.length) {\r\n                return d.resolve(data)\r\n            }\r\n            var cachedNodes = keys.map(function(id) {\r\n                return _this.getNodeByKey(id)\r\n            }).filter(function(node) {\r\n                return node && node.data\r\n            });\r\n            if (cachedNodes.length === keys.length) {\r\n                if (needChildren) {\r\n                    cachedNodes = cachedNodes.reduce(function(result, node) {\r\n                        return result.concat(node.children)\r\n                    }, [])\r\n                }\r\n                if (cachedNodes.length) {\r\n                    return that._loadParentsOrChildren(concatLoadedData(cachedNodes.map(function(node) {\r\n                        return node.data\r\n                    })), options, needChildren)\r\n                }\r\n            }\r\n            var keyExpr = needChildren ? that.option(\"parentIdExpr\") : that.getKeyExpr();\r\n            filter = that._createIdFilter(keyExpr, keys);\r\n            var filterLength = encodeURI(JSON.stringify(filter)).length;\r\n            if (filterLength > maxFilterLengthInRequest) {\r\n                filter = function(itemData) {\r\n                    return keyMap[that._keyGetter(itemData)]\r\n                };\r\n                needLocalFiltering = isRemoteFiltering\r\n            }\r\n            loadOptions = (0, _extend.extend)({}, loadOptions, {\r\n                filter: !needLocalFiltering ? filter : null\r\n            });\r\n            var store = options.fullData ? new _array_store.default(options.fullData) : that._dataSource.store();\r\n            that.loadFromStore(loadOptions, store).done(function(loadedData) {\r\n                if (loadedData.length) {\r\n                    if (needLocalFiltering) {\r\n                        loadedData = (0, _query.default)(loadedData).filter(filter).toArray()\r\n                    }\r\n                    that._loadParentsOrChildren(concatLoadedData(loadedData), options, needChildren).done(d.resolve).fail(d.reject)\r\n                } else {\r\n                    d.resolve(data)\r\n                }\r\n            }).fail(d.reject);\r\n            return d\r\n        },\r\n        _loadParents: function(data, options) {\r\n            return this._loadParentsOrChildren(data, options)\r\n        },\r\n        _loadChildrenIfNeed: function(data, options) {\r\n            if (isFullBranchFilterMode(this)) {\r\n                return this._loadParentsOrChildren(data, options, true)\r\n            }\r\n            return (0, _deferred.when)(data)\r\n        },\r\n        _updateHasItemsMap: function(options) {\r\n            var parentIds = options.storeLoadOptions.parentIds;\r\n            if (parentIds) {\r\n                for (var i = 0; i < parentIds.length; i++) {\r\n                    this._isChildrenLoaded[parentIds[i]] = true\r\n                }\r\n            }\r\n        },\r\n        _getKeyInfo: function() {\r\n            return {\r\n                key: function() {\r\n                    return \"key\"\r\n                },\r\n                keyOf: function(data) {\r\n                    return data.key\r\n                }\r\n            }\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var _this2 = this;\r\n            var baseChanges = [];\r\n            changes.forEach(function(change) {\r\n                if (\"insert\" === change.type) {\r\n                    baseChanges = baseChanges.concat(_this2._applyInsert(change))\r\n                } else {\r\n                    if (\"remove\" === change.type) {\r\n                        baseChanges = baseChanges.concat(_this2._applyRemove(change))\r\n                    } else {\r\n                        if (\"update\" === change.type) {\r\n                            baseChanges.push({\r\n                                type: change.type,\r\n                                key: change.key,\r\n                                data: {\r\n                                    data: change.data\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.callBase(baseChanges)\r\n        },\r\n        _setHasItems: function(node, value) {\r\n            var hasItemsSetter = this._hasItemsSetter;\r\n            node.hasChildren = value;\r\n            if (hasItemsSetter && node.data) {\r\n                hasItemsSetter(node.data, value)\r\n            }\r\n        },\r\n        _applyInsert: function(change) {\r\n            var that = this;\r\n            var baseChanges = [];\r\n            var parentId = that.parentKeyOf(change.data);\r\n            var parentNode = that.getNodeByKey(parentId);\r\n            if (parentNode) {\r\n                var rootValue = that.option(\"rootValue\");\r\n                var node = that._convertItemToNode(change.data, rootValue, that._nodeByKey);\r\n                node.hasChildren = false;\r\n                node.level = parentNode.level + 1;\r\n                node.visible = true;\r\n                parentNode.children.push(node);\r\n                that._isChildrenLoaded[node.key] = true;\r\n                that._setHasItems(parentNode, true);\r\n                if ((!parentNode.parent || that.isRowExpanded(parentNode.key)) && void 0 !== change.index) {\r\n                    var index = that.items().indexOf(parentNode) + 1;\r\n                    index += change.index >= 0 ? Math.min(change.index, parentNode.children.length) : parentNode.children.length;\r\n                    baseChanges.push({\r\n                        type: change.type,\r\n                        data: node,\r\n                        index: index\r\n                    })\r\n                }\r\n            }\r\n            return baseChanges\r\n        },\r\n        _applyRemove: function(change) {\r\n            var baseChanges = [];\r\n            var node = this.getNodeByKey(change.key);\r\n            var parentNode = node && node.parent;\r\n            if (parentNode) {\r\n                var index = parentNode.children.indexOf(node);\r\n                if (index >= 0) {\r\n                    parentNode.children.splice(index, 1);\r\n                    if (!parentNode.children.length) {\r\n                        this._setHasItems(parentNode, false)\r\n                    }\r\n                    baseChanges.push(change);\r\n                    baseChanges = baseChanges.concat(this.getChildNodeKeys(change.key).map(function(key) {\r\n                        return {\r\n                            type: change.type,\r\n                            key: key\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n            return baseChanges\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var data = options.data = this._convertDataToPlainStructure(options.data);\r\n            if (!options.remoteOperations.filtering && options.loadOptions.filter) {\r\n                options.fullData = queryByOptions((0, _query.default)(options.data), {\r\n                    sort: options.loadOptions && options.loadOptions.sort\r\n                }).toArray()\r\n            }\r\n            this._updateHasItemsMap(options);\r\n            this.callBase(options);\r\n            if (data.isConverted && this._cachedStoreData) {\r\n                this._cachedStoreData.isConverted = true\r\n            }\r\n        },\r\n        _fillNodes: function(nodes, options, expandedRowKeys, level) {\r\n            var isFullBranch = isFullBranchFilterMode(this);\r\n            level = level || 0;\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                var node = nodes[i];\r\n                var needToExpand = false;\r\n                this._fillNodes(nodes[i].children, options, expandedRowKeys, level + 1);\r\n                node.level = level;\r\n                node.hasChildren = this._calculateHasItems(node, options);\r\n                if (node.visible && node.hasChildren) {\r\n                    if (isFullBranch) {\r\n                        if (node.children.filter(function(node) {\r\n                                return node.visible\r\n                            }).length) {\r\n                            needToExpand = true\r\n                        } else {\r\n                            if (node.children.length) {\r\n                                _uiTree_list.default.foreachNodes(node.children, function(node) {\r\n                                    node.visible = true\r\n                                })\r\n                            }\r\n                        }\r\n                    } else {\r\n                        needToExpand = true\r\n                    }\r\n                    if (options.expandVisibleNodes && needToExpand) {\r\n                        expandedRowKeys.push(node.key)\r\n                    }\r\n                }\r\n                if (node.visible || node.hasChildren) {\r\n                    node.parent.hasChildren = true\r\n                }\r\n            }\r\n        },\r\n        _processTreeStructure: function(options, visibleItems) {\r\n            var data = options.data;\r\n            var parentIds = options.storeLoadOptions.parentIds;\r\n            var expandedRowKeys = [];\r\n            if (parentIds && parentIds.length || this._isReload) {\r\n                if (options.fullData && options.fullData.length > options.data.length) {\r\n                    data = options.fullData;\r\n                    visibleItems = visibleItems || options.data\r\n                }\r\n                this._rootNode = this._createNodesByItems(data, visibleItems);\r\n                if (!this._rootNode) {\r\n                    options.data = (new _deferred.Deferred).reject(_ui.default.Error(\"E1046\", this.getKeyExpr()));\r\n                    return\r\n                }\r\n                this._fillNodes(this._rootNode.children, options, expandedRowKeys);\r\n                this._isNodesInitializing = true;\r\n                if (options.collapseVisibleNodes || expandedRowKeys.length) {\r\n                    this.option(\"expandedRowKeys\", expandedRowKeys)\r\n                }\r\n                this._isReload = false;\r\n                this.executeAction(\"onNodesInitialized\", {\r\n                    root: this._rootNode\r\n                });\r\n                this._isNodesInitializing = false\r\n            }\r\n            data = this._createVisibleItemsByNodes(this._rootNode.children, options);\r\n            options.data = data;\r\n            this._totalItemsCount = data.length\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            var that = this;\r\n            var data = options.data;\r\n            var callBase = that.callBase;\r\n            var filter = options.storeLoadOptions.filter || options.loadOptions.filter;\r\n            var filterMode = that.option(\"filterMode\");\r\n            var visibleItems;\r\n            var parentIds = options.storeLoadOptions.parentIds;\r\n            var needLoadParents = filter && (!parentIds || !parentIds.length) && \"standard\" !== filterMode;\r\n            if (!options.isCustomLoading) {\r\n                if (needLoadParents) {\r\n                    var d = options.data = new _deferred.Deferred;\r\n                    if (\"matchOnly\" === filterMode) {\r\n                        visibleItems = data\r\n                    }\r\n                    return that._loadParents(data, options).done(function(data) {\r\n                        that._loadChildrenIfNeed(data, options).done(function(data) {\r\n                            options.data = data;\r\n                            that._processTreeStructure(options, visibleItems);\r\n                            callBase.call(that, options);\r\n                            d.resolve(options.data)\r\n                        })\r\n                    }).fail(d.reject)\r\n                } else {\r\n                    that._processTreeStructure(options)\r\n                }\r\n            }\r\n            that.callBase(options)\r\n        },\r\n        _handlePush: function(changes) {\r\n            var reshapeOnPush = this._dataSource._reshapeOnPush;\r\n            var isNeedReshape = reshapeOnPush && !!changes.length;\r\n            if (isNeedReshape) {\r\n                this._isReload = true\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        init: function(dataSource, remoteOperations) {\r\n            this.callBase.apply(this, arguments);\r\n            var dataStructure = this.option(\"dataStructure\");\r\n            this._keyGetter = this._createKeyGetter();\r\n            this._parentIdGetter = this._createParentIdGetter();\r\n            this._hasItemsGetter = this._createHasItemsGetter();\r\n            this._hasItemsSetter = this._createHasItemsSetter();\r\n            if (\"tree\" === dataStructure) {\r\n                this._itemsGetter = this._createItemsGetter();\r\n                this._keySetter = this._createKeySetter();\r\n                this._parentIdSetter = this.createParentIdSetter()\r\n            }\r\n            this._nodeByKey = {};\r\n            this._isChildrenLoaded = {};\r\n            this._totalItemsCount = 0;\r\n            this.createAction(\"onNodesInitialized\")\r\n        },\r\n        getKeyExpr: function() {\r\n            var store = this.store();\r\n            var key = store && store.key();\r\n            var keyExpr = this.option(\"keyExpr\");\r\n            if ((0, _type.isDefined)(key) && (0, _type.isDefined)(keyExpr)) {\r\n                if (!(0, _common.equalByValue)(key, keyExpr)) {\r\n                    throw _ui.default.Error(\"E1044\")\r\n                }\r\n            }\r\n            return key || keyExpr || DEFAULT_KEY_EXPRESSION\r\n        },\r\n        keyOf: function(data) {\r\n            return this._keyGetter && this._keyGetter(data)\r\n        },\r\n        parentKeyOf: function(data) {\r\n            return this._parentIdGetter && this._parentIdGetter(data)\r\n        },\r\n        getRootNode: function() {\r\n            return this._rootNode\r\n        },\r\n        totalItemsCount: function() {\r\n            return this._totalItemsCount\r\n        },\r\n        isRowExpanded: function(key, cache) {\r\n            if (cache) {\r\n                var isExpandedByKey = cache.isExpandedByKey;\r\n                if (!isExpandedByKey) {\r\n                    isExpandedByKey = cache.isExpandedByKey = {};\r\n                    this.option(\"expandedRowKeys\").forEach(function(key) {\r\n                        isExpandedByKey[key] = true\r\n                    })\r\n                }\r\n                return !!isExpandedByKey[key]\r\n            }\r\n            var indexExpandedNodeKey = _uiGrid_core.default.getIndexByKey(key, this.option(\"expandedRowKeys\"), null);\r\n            return indexExpandedNodeKey >= 0\r\n        },\r\n        _changeRowExpandCore: function(key) {\r\n            var expandedRowKeys = this.option(\"expandedRowKeys\").slice();\r\n            var indexExpandedNodeKey = _uiGrid_core.default.getIndexByKey(key, expandedRowKeys, null);\r\n            if (indexExpandedNodeKey < 0) {\r\n                expandedRowKeys.push(key)\r\n            } else {\r\n                expandedRowKeys.splice(indexExpandedNodeKey, 1)\r\n            }\r\n            this.option(\"expandedRowKeys\", expandedRowKeys)\r\n        },\r\n        changeRowExpand: function(key) {\r\n            this._changeRowExpandCore(key);\r\n            return this._isNodesInitializing ? (new _deferred.Deferred).resolve() : this.load()\r\n        },\r\n        getNodeByKey: function(key) {\r\n            if (this._nodeByKey) {\r\n                return this._nodeByKey[key]\r\n            }\r\n        },\r\n        getNodeLeafKeys: function() {\r\n            var that = this;\r\n            var result = [];\r\n            var keys = that._rootNode ? [that._rootNode.key] : [];\r\n            keys.forEach(function(key) {\r\n                var node = that.getNodeByKey(key);\r\n                node && _uiTree_list.default.foreachNodes([node], function(childNode) {\r\n                    !childNode.children.length && result.push(childNode.key)\r\n                })\r\n            });\r\n            return result\r\n        },\r\n        getChildNodeKeys: function(parentKey) {\r\n            var node = this.getNodeByKey(parentKey);\r\n            var childrenKeys = [];\r\n            node && _uiTree_list.default.foreachNodes(node.children, function(childNode) {\r\n                childrenKeys.push(childNode.key)\r\n            });\r\n            return childrenKeys\r\n        },\r\n        loadDescendants: function(keys, childrenOnly) {\r\n            var that = this;\r\n            var d = new _deferred.Deferred;\r\n            var remoteOperations = that.remoteOperations();\r\n            if ((0, _type.isDefined)(keys)) {\r\n                keys = Array.isArray(keys) ? keys : [keys]\r\n            } else {\r\n                keys = that.getNodeLeafKeys()\r\n            }\r\n            if (!remoteOperations.filtering || !keys.length) {\r\n                return d.resolve()\r\n            }\r\n            var loadOptions = that._dataSource._createStoreLoadOptions();\r\n            loadOptions.parentIds = keys;\r\n            that.load(loadOptions).done(function() {\r\n                if (!childrenOnly) {\r\n                    var childKeys = getChildKeys(that, keys);\r\n                    if (childKeys.length) {\r\n                        that.loadDescendants(childKeys, childrenOnly).done(d.resolve).fail(d.reject);\r\n                        return\r\n                    }\r\n                }\r\n                d.resolve()\r\n            }).fail(d.reject);\r\n            return d.promise()\r\n        },\r\n        forEachNode: function() {\r\n            var nodes = [];\r\n            var callback;\r\n            if (1 === arguments.length) {\r\n                callback = arguments[0];\r\n                var rootNode = this.getRootNode();\r\n                nodes = rootNode && rootNode.children || []\r\n            } else {\r\n                if (2 === arguments.length) {\r\n                    callback = arguments[1];\r\n                    nodes = arguments[0];\r\n                    nodes = Array.isArray(nodes) ? nodes : [nodes]\r\n                }\r\n            }\r\n            _uiTree_list.default.foreachNodes(nodes, callback)\r\n        }\r\n    }\r\n}());\r\nvar _default = {\r\n    extend: function(extender) {\r\n        DataSourceAdapterTreeList = DataSourceAdapterTreeList.inherit(extender)\r\n    },\r\n    create: function(component) {\r\n        return new DataSourceAdapterTreeList(component)\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}