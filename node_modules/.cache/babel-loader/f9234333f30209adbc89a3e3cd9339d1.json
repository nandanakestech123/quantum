{"ast":null,"code":"/**\r\n * DevExtreme (viz/tree_map/tiling.squarified.base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = _default;\n\nvar _tiling = require(\"./tiling\");\n\nvar _max = Math.max;\nvar _round = Math.round;\n\nfunction compare(a, b) {\n  return b.value - a.value;\n}\n\nfunction getAspectRatio(value) {\n  return _max(value, 1 / value);\n}\n\nfunction findAppropriateCollection(nodes, head, context) {\n  var bestAspectRatio = 1 / 0;\n  var nextAspectRatio;\n  var sum = 0;\n  var nextSum;\n  var i;\n  var j;\n  var ii = nodes.length;\n  var coeff = context.areaToValue / context.staticSide;\n  var totalAspectRatio;\n\n  for (i = head; i < ii;) {\n    nextSum = sum + nodes[i].value;\n    totalAspectRatio = context.staticSide / coeff / nextSum;\n    nextAspectRatio = 0;\n\n    for (j = head; j <= i; ++j) {\n      nextAspectRatio = context.accumulate(nextAspectRatio, getAspectRatio(totalAspectRatio * nodes[j].value / nextSum), j - head + 1);\n    }\n\n    if (nextAspectRatio < bestAspectRatio) {\n      bestAspectRatio = nextAspectRatio;\n      sum = nextSum;\n      ++i;\n    } else {\n      break;\n    }\n  }\n\n  return {\n    sum: sum,\n    count: i - head,\n    side: _round(coeff * sum)\n  };\n}\n\nfunction getArea(rect) {\n  return (rect[2] - rect[0]) * (rect[3] - rect[1]);\n}\n\nfunction doStep(nodes, head, context) {\n  var sidesData = (0, _tiling.buildSidesData)(context.rect, context.directions, context.staticSideIndex);\n  var area = getArea(context.rect);\n  var rowData = area > 0 ? findAppropriateCollection(nodes, head, {\n    areaToValue: area / context.sum,\n    accumulate: context.accumulate,\n    staticSide: sidesData.staticSide\n  }) : {\n    sum: 1,\n    side: sidesData.variedSide,\n    count: nodes.length - head\n  };\n  (0, _tiling.calculateRectangles)(nodes, head, context.rect, sidesData, rowData);\n  context.sum -= rowData.sum;\n  return head + rowData.count;\n}\n\nfunction _default(data, accumulate, isFixedStaticSide) {\n  var items = data.items;\n  var ii = items.length;\n  var i;\n  var context = {\n    sum: data.sum,\n    rect: data.rect,\n    directions: data.directions,\n    accumulate: accumulate\n  };\n\n  if (isFixedStaticSide) {\n    context.staticSideIndex = (0, _tiling.getStaticSideIndex)(context.rect);\n  }\n\n  items.sort(compare);\n\n  for (i = 0; i < ii;) {\n    i = doStep(items, i, context);\n  }\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/tree_map/tiling.squarified.base.js"],"names":["exports","default","_default","_tiling","require","_max","Math","max","_round","round","compare","a","b","value","getAspectRatio","findAppropriateCollection","nodes","head","context","bestAspectRatio","nextAspectRatio","sum","nextSum","i","j","ii","length","coeff","areaToValue","staticSide","totalAspectRatio","accumulate","count","side","getArea","rect","doStep","sidesData","buildSidesData","directions","staticSideIndex","area","rowData","variedSide","calculateRectangles","data","isFixedStaticSide","items","getStaticSideIndex","sort","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/tree_map/tiling.squarified.base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = _default;\r\nvar _tiling = require(\"./tiling\");\r\nvar _max = Math.max;\r\nvar _round = Math.round;\r\n\r\nfunction compare(a, b) {\r\n    return b.value - a.value\r\n}\r\n\r\nfunction getAspectRatio(value) {\r\n    return _max(value, 1 / value)\r\n}\r\n\r\nfunction findAppropriateCollection(nodes, head, context) {\r\n    var bestAspectRatio = 1 / 0;\r\n    var nextAspectRatio;\r\n    var sum = 0;\r\n    var nextSum;\r\n    var i;\r\n    var j;\r\n    var ii = nodes.length;\r\n    var coeff = context.areaToValue / context.staticSide;\r\n    var totalAspectRatio;\r\n    for (i = head; i < ii;) {\r\n        nextSum = sum + nodes[i].value;\r\n        totalAspectRatio = context.staticSide / coeff / nextSum;\r\n        nextAspectRatio = 0;\r\n        for (j = head; j <= i; ++j) {\r\n            nextAspectRatio = context.accumulate(nextAspectRatio, getAspectRatio(totalAspectRatio * nodes[j].value / nextSum), j - head + 1)\r\n        }\r\n        if (nextAspectRatio < bestAspectRatio) {\r\n            bestAspectRatio = nextAspectRatio;\r\n            sum = nextSum;\r\n            ++i\r\n        } else {\r\n            break\r\n        }\r\n    }\r\n    return {\r\n        sum: sum,\r\n        count: i - head,\r\n        side: _round(coeff * sum)\r\n    }\r\n}\r\n\r\nfunction getArea(rect) {\r\n    return (rect[2] - rect[0]) * (rect[3] - rect[1])\r\n}\r\n\r\nfunction doStep(nodes, head, context) {\r\n    var sidesData = (0, _tiling.buildSidesData)(context.rect, context.directions, context.staticSideIndex);\r\n    var area = getArea(context.rect);\r\n    var rowData = area > 0 ? findAppropriateCollection(nodes, head, {\r\n        areaToValue: area / context.sum,\r\n        accumulate: context.accumulate,\r\n        staticSide: sidesData.staticSide\r\n    }) : {\r\n        sum: 1,\r\n        side: sidesData.variedSide,\r\n        count: nodes.length - head\r\n    };\r\n    (0, _tiling.calculateRectangles)(nodes, head, context.rect, sidesData, rowData);\r\n    context.sum -= rowData.sum;\r\n    return head + rowData.count\r\n}\r\n\r\nfunction _default(data, accumulate, isFixedStaticSide) {\r\n    var items = data.items;\r\n    var ii = items.length;\r\n    var i;\r\n    var context = {\r\n        sum: data.sum,\r\n        rect: data.rect,\r\n        directions: data.directions,\r\n        accumulate: accumulate\r\n    };\r\n    if (isFixedStaticSide) {\r\n        context.staticSideIndex = (0, _tiling.getStaticSideIndex)(context.rect)\r\n    }\r\n    items.sort(compare);\r\n    for (i = 0; i < ii;) {\r\n        i = doStep(items, i, context)\r\n    }\r\n}\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}