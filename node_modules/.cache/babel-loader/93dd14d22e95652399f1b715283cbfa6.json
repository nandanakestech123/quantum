{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\pages\\\\Auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { NormalInput, NormalCheckbox, NormalButton, NormalSelect } from 'component/common';\nimport Cookies from 'universal-cookie';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { login, getLoginSaloon } from 'redux/actions/auth';\nimport { history } from 'helpers/index';\nimport 'assets/scss/pages/login.scss';\nimport { Link } from 'react-router-dom';\nconst cookies = new Cookies();\nexport class LoginClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        salon: 0,\n        username: '',\n        password: ''\n      },\n      rememberme: '',\n      passwordVisible: false,\n      salonList: []\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.handleChangeAndSubmit = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      }, () => {\n        this.handleSubmit();\n      });\n    };\n\n    this.handleFirstLogin = event => {\n      event.preventDefault();\n\n      if (this.validator.allValid()) {\n        let {\n          formFields,\n          rememberme,\n          salonList\n        } = this.state;\n        this.props.login(formFields).then(res => {\n          let {\n            status,\n            data\n          } = res;\n\n          if (status === 200) {\n            if (res.data.sites.length > 1) {\n              for (let key of res.data.sites) {\n                salonList.push({\n                  value: key.id,\n                  label: key.itemsite_desc\n                });\n              }\n\n              this.setState({\n                salonList\n              });\n            } else {\n              formFields.salon = res.data.sites[0].id;\n              this.handleSubmit();\n            }\n          }\n        });\n      } else {\n        this.validator.showMessages();\n      }\n    };\n\n    this.toggle = key => {\n      this.setState(prevState => ({\n        [key]: !prevState[key]\n      }));\n    };\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      // validators: {\n      //   password: {\n      //     message: 'The :attribute must be a valid format.',\n      //     rule: (val, params, validator) => {\n      //       return validator.helpers.testRegex(val, /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,20}$/) && params.indexOf(val) === -1\n      //     },\n      //     messageReplace: (message, params) => message.replace('', this.helpers.toSentence(params)),\n      //     required: true\n      //   }\n      // },\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message font-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 27\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n    /*let { salonList } = this.state;\r\n    this.props.getLoginSaloon().then((res) => {\r\n      for (let key of res.data) {\r\n        salonList.push({ value: key.id, label: key.itemsite_desc })\r\n      }\r\n      this.setState({ salonList })\r\n    })*/\n  }\n\n  handleSubmit() {\n    // event.preventDefault();\n    if (this.validator.allValid()) {\n      let {\n        formFields,\n        rememberme\n      } = this.state;\n      this.props.login(formFields).then(res => {\n        let {\n          status,\n          data\n        } = res;\n\n        if (status === 200) {\n          history.push('/admin/dashboard');\n\n          if (rememberme) {\n            let date = new Date();\n            date.setTime(date.getTime() + 48 * 60 * 60 * 1000);\n            let dateString = date.toGMTString();\n            cookies.set('emailId', formFields.emailId, [{\n              path: '/'\n            }, {\n              expires: dateString\n            }]);\n            cookies.set('password', formFields.password, [{\n              path: '/'\n            }, {\n              expires: dateString\n            }]);\n          }\n        }\n      });\n    } else {\n      this.validator.showMessages();\n    }\n  }\n\n  render() {\n    let {\n      formFields,\n      passwordVisible,\n      rememberme,\n      salonList\n    } = this.state;\n    let {\n      username,\n      password,\n      salon\n    } = formFields;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container h-100 py-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-left login-heading mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, \"Sign in to access BeauteSoft\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"Username\",\n      value: username,\n      name: \"username\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    })), this.validator.message('Username', username, 'required|string')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      type: passwordVisible ? 'text' : 'password',\n      placeholder: \"Password\",\n      value: password,\n      name: \"password\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-addon right fs-14\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.toggle('passwordVisible'),\n      className: `icon-${passwordVisible ? \"eye\" : \"eye-blocked\"} cursor-pointer fs-24`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }))), this.validator.message('Password', password, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      value: \"\",\n      label: \"Keep me signed in\",\n      name: \"rememberme\",\n      checked: rememberme,\n      onChange: () => this.toggle('rememberme'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      className: \"d-flex align-items-center ml-2\",\n      to: \"/auth/forgotPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fs-13 text-right tc-primary link-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, \"Forgot Password\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-0 p-0 d-flex justify-content-center col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100\",\n      onClick: this.handleFirstLogin,\n      id: \"loginBtn\",\n      label: \"LOGIN\",\n      mainbg: true,\n      className: \"mr-2 fs-14 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 16\n      }\n    }), salonList.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect, {\n      placeholder: \"Please Select Site\",\n      options: salonList,\n      value: salon,\n      name: \"salon\",\n      onChange: this.handleChangeAndSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    })), this.validator.message('salon', salon, 'required|string')), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, \"Copyrights (c) Acy7lab.com.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, \" Licensed to Sequoia - Version 6.6\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, \"Dated: 6.15\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    login,\n    getLoginSaloon\n  }, dispatch);\n};\n\nlet component = LoginClass;\nexport const Login = connect(null, mapDispatchToProps)(component);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/pages/Auth/Login.js"],"names":["React","Component","NormalInput","NormalCheckbox","NormalButton","NormalSelect","Cookies","connect","bindActionCreators","SimpleReactValidator","login","getLoginSaloon","history","Link","cookies","LoginClass","state","formFields","salon","username","password","rememberme","passwordVisible","salonList","handleChange","target","value","name","Object","assign","setState","handleChangeAndSubmit","handleSubmit","handleFirstLogin","event","preventDefault","validator","allValid","props","then","res","status","data","sites","length","key","push","id","label","itemsite_desc","showMessages","toggle","prevState","componentWillMount","element","message","autoForceUpdate","date","Date","setTime","getTime","dateString","toGMTString","set","emailId","path","expires","render","mapDispatchToProps","dispatch","component","Login"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NormalInput, NormalCheckbox, NormalButton, NormalSelect } from 'component/common';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { login, getLoginSaloon } from 'redux/actions/auth';\r\nimport { history } from 'helpers/index';\r\nimport 'assets/scss/pages/login.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport class LoginClass extends Component {\r\n  state = {\r\n    formFields: {\r\n      salon: 0,\r\n      username: '',\r\n      password: ''\r\n    },\r\n    rememberme: '',\r\n    passwordVisible: false,\r\n    salonList: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      // validators: {\r\n      //   password: {\r\n      //     message: 'The :attribute must be a valid format.',\r\n      //     rule: (val, params, validator) => {\r\n      //       return validator.helpers.testRegex(val, /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,20}$/) && params.indexOf(val) === -1\r\n      //     },\r\n      //     messageReplace: (message, params) => message.replace('', this.helpers.toSentence(params)),\r\n      //     required: true\r\n      //   }\r\n      // },\r\n      element: message => <span className=\"error-message font-md\">{message}</span>,\r\n      autoForceUpdate: this,\r\n    });\r\n    /*let { salonList } = this.state;\r\n    this.props.getLoginSaloon().then((res) => {\r\n      for (let key of res.data) {\r\n        salonList.push({ value: key.id, label: key.itemsite_desc })\r\n      }\r\n      this.setState({ salonList })\r\n    })*/\r\n  }\r\n  handleChange = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n  handleChangeAndSubmit = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState({\r\n      formFields,\r\n    }, () => {\r\n      this.handleSubmit();\r\n    });\r\n  };\r\n\r\n  handleFirstLogin = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.validator.allValid()) {\r\n      let { formFields, rememberme,salonList} = this.state;\r\n\r\n      this.props.login(formFields).then((res) => {\r\n        let { status, data } = res;\r\n         if (status === 200) {\r\n           if(res.data.sites.length>1){\r\n            for (let key of res.data.sites) {\r\n              salonList.push({ value: key.id, label: key.itemsite_desc })\r\n            }\r\n            this.setState({ salonList })\r\n           }\r\n           else{\r\n             formFields.salon=res.data.sites[0].id;\r\n             this.handleSubmit();\r\n           }\r\n          \r\n        }\r\n      });\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  };\r\n\r\n  handleSubmit () {\r\n   // event.preventDefault();\r\n\r\n    if (this.validator.allValid()) {\r\n      let { formFields, rememberme } = this.state;\r\n\r\n      this.props.login(formFields).then((res) => {\r\n        let { status, data } = res;\r\n         if (status === 200) {\r\n          history.push('/admin/dashboard');\r\n          if (rememberme) {\r\n            let date = new Date();\r\n            date.setTime(date.getTime() + 48 * 60 * 60 * 1000);\r\n            let dateString = date.toGMTString();\r\n            cookies.set('emailId', formFields.emailId, [{ path: '/' }, { expires: dateString }]);\r\n            cookies.set('password', formFields.password, [{ path: '/' }, { expires: dateString }]);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  };\r\n\r\n  toggle = key => {\r\n    this.setState(prevState => ({\r\n      [key]: !prevState[key],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { formFields, passwordVisible, rememberme, salonList } = this.state;\r\n\r\n    let { username, password, salon } = formFields;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"login-container h-100 py-5\">\r\n          <h1 className=\"text-left login-heading mb-5\">Sign in to access BeauteSoft</h1>\r\n         \r\n          <div className=\"form-group mb-4 pb-3\">\r\n            <div className=\"input-group\">\r\n              <NormalInput\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                name=\"username\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            {this.validator.message('Username', username, 'required|string')}\r\n          </div>\r\n          <div className=\"form-group mb-4 pb-3\">\r\n            <div className=\"input-group\">\r\n              <NormalInput\r\n                type={passwordVisible ? 'text' : 'password'}\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                name=\"password\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <div className=\"input-group-addon right fs-14\">\r\n                <span\r\n                  onClick={() => this.toggle('passwordVisible')}\r\n                  className={`icon-${passwordVisible ? \"eye\" : \"eye-blocked\"} cursor-pointer fs-24`}\r\n                ></span>\r\n              </div>\r\n            </div>\r\n            {/* {this.validator.message('Password', password, 'required|password')} */}\r\n            {this.validator.message('Password', password, 'required')}\r\n          </div>\r\n          <div className=\"d-flex justify-content-between align-items-center mb-5\">\r\n            <div className=\"checkbox\">\r\n              <NormalCheckbox\r\n                value=\"\"\r\n                label=\"Keep me signed in\"\r\n                name=\"rememberme\"\r\n                checked={rememberme}\r\n                onChange={() => this.toggle('rememberme')}\r\n              />\r\n            </div>\r\n            <Link className=\"d-flex align-items-center ml-2\" to=\"/auth/forgotPassword\">\r\n              <span className=\"fs-13 text-right tc-primary link-text\">Forgot Password</span>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"form-group mb-0 p-0 d-flex justify-content-center col-12\">\r\n            <NormalButton buttonClass={\"w-100\"} onClick={this.handleFirstLogin} id=\"loginBtn\" label=\"LOGIN\" mainbg={true} className=\"mr-2 fs-14 col-12\" />\r\n          </div>\r\n          <br/><br/>\r\n          {salonList.length>1 &&\r\n          <div className=\"form-group mb-4 pb-3\">\r\n            <div className=\"input-group\">\r\n              <NormalSelect\r\n                placeholder=\"Please Select Site\"\r\n                options={salonList}\r\n                value={salon}\r\n                name=\"salon\"\r\n                onChange={this.handleChangeAndSubmit}\r\n              />\r\n            </div>\r\n            {this.validator.message('salon', salon, 'required|string')}\r\n          </div>\r\n         }\r\n          <center><p>Copyrights (c) Acy7lab.com. \r\n          </p><p> Licensed to Sequoia - Version 6.6</p>\r\n          <br/>\r\n          <p>Dated: 6.15</p></center>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      login,\r\n      getLoginSaloon\r\n    },\r\n    dispatch,\r\n  );\r\n};\r\n\r\nlet component = LoginClass;\r\n\r\nexport const Login = connect(null, mapDispatchToProps)(component);\r\n"]},"metadata":{},"sourceType":"module"}