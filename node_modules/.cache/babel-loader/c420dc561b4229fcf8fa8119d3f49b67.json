{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\cart\\\\package.js\";\nimport React, { Component } from 'react';\nimport './style.scss';\nimport { NormalCheckbox, NormalInput, NormalButton } from 'component/common';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonUpdateApi, commonCreateApi } from \"redux/actions/common\";\nimport SimpleReactValidator from 'simple-react-validator'; // import { Treatment, Payment, EditCart } from './cart/index';\n\nimport { Label } from 'reactstrap';\nexport class PackageCartClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cartPackageList: [],\n      auto_deposit: \"\",\n      auto_deposit_new: \"\",\n      deposit: \"\",\n      net_deposit: \"\",\n      checked: true\n    };\n\n    this.componentWillMount = () => {\n      this.getCartData();\n    };\n\n    this.getCartData = () => {\n      this.props.getCommonApi(`pospackagedeposit/?cartid=${this.props.id}`).then(async key => {\n        let {\n          cartPackageList,\n          auto_deposit,\n          auto_deposit_new,\n          deposit,\n          net_deposit\n        } = this.state;\n        let {\n          data\n        } = key;\n        cartPackageList = data;\n        auto_deposit = key.auto_deposit;\n        auto_deposit_new = key.auto_deposit;\n        deposit = key.deposit;\n        net_deposit = key.net_deposit;\n        this.setState({\n          cartPackageList,\n          auto_deposit,\n          auto_deposit_new,\n          deposit,\n          net_deposit\n        });\n      });\n    };\n\n    this.autoMatch = () => {\n      const testData = [];\n      const original_number = this.state.net_deposit;\n      const net_deposit = this.state.net_deposit;\n      const new_number = this.state.auto_deposit_new;\n\n      if (parseFloat(new_number) > parseFloat(net_deposit)) {\n        alert(\"Entered amount should not greater than Net Amount\");\n        return;\n      }\n\n      let decrease = original_number - new_number;\n      let percentageOfDecrease = (decrease / original_number * 100).toFixed(2);\n      var depositAmount = 0;\n      var totalDepositAmount = 0;\n\n      for (var i = 0; i < this.state.cartPackageList.length; i++) {\n        var xRowNetAmount = this.state.cartPackageList[i].net_amt;\n        var xDecreasedRowAmount = (xRowNetAmount * percentageOfDecrease / 100).toFixed(2);\n        depositAmount = (xRowNetAmount - xDecreasedRowAmount).toFixed(2);\n        totalDepositAmount += parseFloat(depositAmount);\n\n        if (i == this.state.cartPackageList.length - 1) {\n          //Assign Difference value into last row\n          var difference = new_number - totalDepositAmount;\n          totalDepositAmount += difference;\n          depositAmount = parseFloat(depositAmount) + parseFloat(difference);\n        }\n\n        testData.push({\n          id: this.state.cartPackageList[i].id,\n          description: this.state.cartPackageList[i].description,\n          qty: this.state.cartPackageList[i].qty,\n          deposit_amt: parseFloat(depositAmount).toFixed(2),\n          net_amt: this.state.cartPackageList[i].net_amt,\n          auto: this.state.cartPackageList[i].auto,\n          hold_qty: 0,\n          itemcart: this.state.cartPackageList[i].itemcart\n        });\n      } //console.log(\"data\")\n\n\n      this.setState({\n        cartPackageList: testData,\n        deposit: totalDepositAmount.toFixed(2)\n      });\n    };\n\n    this.clear = () => {\n      this.fillCartDepositModifyData(\"Clear\");\n    };\n\n    this.fullPayment = () => {\n      this.fillCartDepositModifyData(\"Full\");\n    };\n\n    this.handleCancel = () => {\n      this.props.handleModal();\n    };\n\n    this.handleConfirm = () => {\n      let data = this.state.cartPackageList;\n      this.props.commonCreateApi(`pospackagedeposit/confirm/?cartid=${this.props.id}`, data).then(() => {\n        //console.log(\"succ\")\n        this.props.handleModal();\n      });\n    };\n\n    this.handleChange_auto_deposit_new = async ({\n      target: {\n        value\n      }\n    }) => {\n      let {\n        auto_deposit_new\n      } = this.state;\n      auto_deposit_new = value;\n      await this.setState({\n        auto_deposit_new\n      });\n    };\n\n    this.handleCheck = () => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n  }\n\n  fillCartDepositModifyData(xMode) {\n    let depositAmount;\n    var totalDepositAmount = 0;\n    const testData = [];\n\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\n      if (xMode == \"Clear\") {\n        depositAmount = 0;\n        totalDepositAmount += parseFloat(depositAmount);\n      } else if (xMode == \"Full\") {\n        depositAmount = this.state.cartPackageList[i].net_amt;\n        totalDepositAmount += parseFloat(depositAmount);\n      }\n\n      testData.push({\n        id: this.state.cartPackageList[i].id,\n        description: this.state.cartPackageList[i].description,\n        qty: this.state.cartPackageList[i].qty,\n        deposit_amt: depositAmount,\n        net_amt: this.state.cartPackageList[i].net_amt,\n        auto: this.state.cartPackageList[i].auto,\n        hold_qty: 0,\n        itemcart: this.state.cartPackageList[i].itemcart\n      });\n    }\n\n    this.setState({\n      cartPackageList: testData,\n      deposit: totalDepositAmount\n    });\n  }\n\n  handleChangeForEachRow(userId, event) {\n    //var inputElement = event.target;\n    var userEnteredValue = parseFloat(event.target.value);\n    var userEnteredKeyUnique = event.target.name;\n    var totalDepositAmount = 0; //console.log(inputElement.name + ': ' + inputElement.value);\n\n    const testData = [];\n\n    for (var i = 0; i < this.state.cartPackageList.length; i++) {\n      let deposit = 0;\n      var xRowNetAmount = parseFloat(this.state.cartPackageList[i].net_amt);\n\n      if (i == userEnteredKeyUnique) {\n        if (userEnteredValue > xRowNetAmount) {\n          return;\n        }\n\n        deposit = userEnteredValue;\n        totalDepositAmount += parseFloat(deposit);\n      } else {\n        deposit = this.state.cartPackageList[i].deposit_amt;\n        totalDepositAmount += parseFloat(deposit);\n      }\n\n      testData.push({\n        id: this.state.cartPackageList[i].id,\n        description: this.state.cartPackageList[i].description,\n        qty: this.state.cartPackageList[i].qty,\n        deposit_amt: deposit,\n        net_amt: this.state.cartPackageList[i].net_amt,\n        auto: this.state.cartPackageList[i].auto,\n        hold_qty: 0,\n        itemcart: this.state.cartPackageList[i].itemcart\n      });\n    }\n\n    this.setState({\n      cartPackageList: testData,\n      deposit: totalDepositAmount.toFixed(2)\n    });\n  }\n\n  render() {\n    let {\n      cartPackageList,\n      auto_deposit_new,\n      deposit,\n      net_deposit\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row new-cart treatment-done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 font-700 mb-3 title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, \"Package Details\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      type: \"checkbox\",\n      checked: this.state.checked,\n      onChange: () => this.handleCheck(),\n      label: \"Auto Deposit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: auto_deposit_new,\n      name: \"auto_deposit_new\",\n      className: \"customer-name w-100 h-100 text-right  fs-24\",\n      onChange: this.handleChange_auto_deposit_new,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Start AutoMatch\",\n      disabled: !this.state.checked,\n      onClick: () => this.autoMatch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 31\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 31\n      }\n    }, \"Qty\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 31\n      }\n    }, \"Deposit\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 31\n      }\n    }, \"Net Amount\")), cartPackageList.map((cartPackage, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 35\n      }\n    }, cartPackage.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 35\n      }\n    }, cartPackage.qty), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChangeForEachRow.bind(this, cartPackage.id),\n      name: index,\n      type: \"number\",\n      min: \"0\",\n      className: \"w-50\",\n      value: cartPackage.deposit_amt,\n      disabled: this.state.checked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 35\n      }\n    }, cartPackage.net_amt)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }, \"Deposit:\"), /*#__PURE__*/React.createElement(NormalInput, {\n      value: deposit,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 37\n      }\n    }, \"Net Total:\"), /*#__PURE__*/React.createElement(NormalInput, {\n      value: net_deposit,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Full Payment\",\n      onClick: () => this.fullPayment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Clear Deposit\",\n      onClick: () => this.clear(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Cancel\",\n      onClick: () => this.handleCancel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"treatment\",\n      mainbg: true,\n      className: \"col-12 fs-15 \",\n      label: \"Confirm\",\n      onClick: () => this.handleConfirm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail,\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonUpdateApi,\n    commonCreateApi\n  }, dispatch);\n};\n\nexport const PackageCart = connect(mapStateToProps, mapDispatchToProps)(PackageCartClass);","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/Cart/cart/package.js"],"names":["React","Component","NormalCheckbox","NormalInput","NormalButton","_","connect","bindActionCreators","getCommonApi","updateForm","commonUpdateApi","commonCreateApi","SimpleReactValidator","Label","PackageCartClass","state","cartPackageList","auto_deposit","auto_deposit_new","deposit","net_deposit","checked","componentWillMount","getCartData","props","id","then","key","data","setState","autoMatch","testData","original_number","new_number","parseFloat","alert","decrease","percentageOfDecrease","toFixed","depositAmount","totalDepositAmount","i","length","xRowNetAmount","net_amt","xDecreasedRowAmount","difference","push","description","qty","deposit_amt","auto","hold_qty","itemcart","clear","fillCartDepositModifyData","fullPayment","handleCancel","handleModal","handleConfirm","handleChange_auto_deposit_new","target","value","handleCheck","xMode","handleChangeForEachRow","userId","event","userEnteredValue","userEnteredKeyUnique","name","render","map","cartPackage","index","cursor","bind","mapStateToProps","selected_cstomer","common","basicApptDetail","appointment","tokenDetails","authStore","mapDispatchToProps","dispatch","PackageCart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { NormalCheckbox, NormalInput,NormalButton } from 'component/common';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCommonApi, updateForm, commonUpdateApi, commonCreateApi } from \"redux/actions/common\"\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n// import { Treatment, Payment, EditCart } from './cart/index';\r\nimport { Label } from 'reactstrap';\r\nexport class PackageCartClass extends Component {\r\n    state = {\r\n        cartPackageList:[],\r\n        auto_deposit:\"\",\r\n        auto_deposit_new:\"\",\r\n        deposit:\"\",\r\n        net_deposit:\"\",\r\n        checked:true,\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.getCartData();\r\n    }\r\n    \r\n    getCartData = () => {\r\n        this.props.getCommonApi(`pospackagedeposit/?cartid=${this.props.id}`).then(async (key) => {\r\n            let {  cartPackageList,auto_deposit,auto_deposit_new,deposit,net_deposit  } = this.state;\r\n            let { data} = key;\r\n            cartPackageList = data;\r\n            auto_deposit=key.auto_deposit;\r\n            auto_deposit_new=key.auto_deposit;\r\n            deposit=key.deposit;\r\n            net_deposit=key.net_deposit;\r\n            this.setState({\r\n                cartPackageList,\r\n                auto_deposit,\r\n                auto_deposit_new,\r\n                deposit,\r\n                net_deposit\r\n            })\r\n        })\r\n    }\r\n    autoMatch = () => {\r\n        const testData = [];\r\n        const original_number=this.state.net_deposit;\r\n        const net_deposit=this.state.net_deposit;\r\n        const new_number=this.state.auto_deposit_new;\r\n        if(parseFloat(new_number)>parseFloat(net_deposit)){\r\n            alert(\"Entered amount should not greater than Net Amount\")\r\n            return;\r\n        }\r\n        let decrease=original_number-new_number;\r\n        let percentageOfDecrease=((decrease / original_number)*100).toFixed(2);\r\n        var depositAmount=0;\r\n        var totalDepositAmount=0;\r\n            for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n            var xRowNetAmount=this.state.cartPackageList[i].net_amt;\r\n            var xDecreasedRowAmount=(xRowNetAmount * percentageOfDecrease/100).toFixed(2);\r\n            depositAmount=(xRowNetAmount-xDecreasedRowAmount).toFixed(2)\r\n            totalDepositAmount+=parseFloat(depositAmount);\r\n            if(i==this.state.cartPackageList.length-1){\r\n              //Assign Difference value into last row\r\n              var difference=new_number-totalDepositAmount;\r\n              totalDepositAmount+=difference;\r\n              depositAmount=parseFloat(depositAmount)+parseFloat(difference);\r\n            }\r\n              testData.push({\r\n                id: this.state.cartPackageList[i].id,\r\n                description: this.state.cartPackageList[i].description,\r\n                qty: this.state.cartPackageList[i].qty,\r\n                deposit_amt:parseFloat(depositAmount).toFixed(2),\r\n                net_amt: this.state.cartPackageList[i].net_amt,\r\n                auto: this.state.cartPackageList[i].auto,\r\n                hold_qty: 0,\r\n                itemcart: this.state.cartPackageList[i].itemcart\r\n              });\r\n            }\r\n        //console.log(\"data\")\r\n        this.setState({ cartPackageList: testData,deposit:totalDepositAmount.toFixed(2) });\r\n      };\r\n      clear = () => {\r\n        this.fillCartDepositModifyData(\"Clear\");\r\n      };\r\n      fullPayment = () => {\r\n        this.fillCartDepositModifyData(\"Full\");\r\n      };\r\n      handleCancel=()=>{\r\n        this.props.handleModal();\r\n      }\r\n     \r\n      handleConfirm=()=>{\r\n  \r\n        let data =this.state.cartPackageList;\r\n            this.props.commonCreateApi(`pospackagedeposit/confirm/?cartid=${this.props.id}`, data).then(() => {\r\n                //console.log(\"succ\")\r\n                this.props.handleModal();\r\n            })\r\n        }\r\n    \r\n\r\n      fillCartDepositModifyData(xMode)\r\n      {\r\n        let depositAmount;\r\n        var totalDepositAmount=0; \r\n        const testData = [];\r\n        for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n            if(xMode==\"Clear\")\r\n            {\r\n                    depositAmount=0;\r\n                    totalDepositAmount+=parseFloat(depositAmount);\r\n            }\r\n            else if (xMode==\"Full\"){\r\n                    depositAmount=this.state.cartPackageList[i].net_amt;\r\n                    totalDepositAmount+=parseFloat(depositAmount);\r\n            }\r\n          testData.push({\r\n            id: this.state.cartPackageList[i].id,\r\n            description: this.state.cartPackageList[i].description,\r\n            qty: this.state.cartPackageList[i].qty,\r\n            deposit_amt: depositAmount,\r\n            net_amt: this.state.cartPackageList[i].net_amt,\r\n            auto: this.state.cartPackageList[i].auto,\r\n            hold_qty: 0,\r\n            itemcart: this.state.cartPackageList[i].itemcart\r\n          });\r\n        }\r\n    this.setState({ cartPackageList: testData,deposit:totalDepositAmount });\r\n      }\r\n    handleChange_auto_deposit_new = async ({ target: { value } }) => {\r\n        let { auto_deposit_new } = this.state;\r\n        auto_deposit_new = value;\r\n        await this.setState({\r\n            auto_deposit_new,\r\n        });\r\n    }\r\n    handleCheck=()=>{\r\n        this.setState({\r\n            checked:!this.state.checked\r\n        })\r\n    }\r\n    \r\n\r\n    handleChangeForEachRow(userId, event) {\r\n        //var inputElement = event.target;\r\n        var userEnteredValue=parseFloat(event.target.value);\r\n        var userEnteredKeyUnique=event.target.name;\r\n        var totalDepositAmount=0; \r\n        //console.log(inputElement.name + ': ' + inputElement.value);\r\n        const testData = [];\r\n        for (var i = 0; i < this.state.cartPackageList.length; i++) {\r\n            let deposit=0;\r\n            var xRowNetAmount=parseFloat(this.state.cartPackageList[i].net_amt);\r\n            \r\n            if(i==userEnteredKeyUnique){\r\n                if(userEnteredValue > xRowNetAmount)\r\n                {\r\n                    return;\r\n                }\r\n                deposit=userEnteredValue;\r\n                totalDepositAmount+=parseFloat(deposit);\r\n             }\r\n             else{\r\n                 deposit=this.state.cartPackageList[i].deposit_amt;\r\n                 totalDepositAmount+=parseFloat(deposit);\r\n             }\r\n        testData.push({\r\n            id: this.state.cartPackageList[i].id,\r\n            description: this.state.cartPackageList[i].description,\r\n            qty: this.state.cartPackageList[i].qty,\r\n            deposit_amt: deposit,\r\n            net_amt: this.state.cartPackageList[i].net_amt,\r\n            auto: this.state.cartPackageList[i].auto,\r\n            hold_qty: 0,\r\n            itemcart: this.state.cartPackageList[i].itemcart\r\n          });\r\n        }\r\n        this.setState({ cartPackageList: testData,deposit:totalDepositAmount.toFixed(2) });\r\n    }\r\n\r\n    render() {\r\n        let { cartPackageList,auto_deposit_new,deposit,net_deposit } = this.state;\r\n      \r\n        return (\r\n            <div className=\"row new-cart treatment-done\">\r\n                <div className=\"col-12\">\r\n                    <p className=\"fs-18 font-700 mb-3 title\">Package Details</p>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-2\">\r\n                <NormalCheckbox\r\n                                type=\"checkbox\"\r\n                                checked={this.state.checked}\r\n                                onChange={() => this.handleCheck()}\r\n                                label=\"Auto Deposit\"\r\n                                />   \r\n                </div>\r\n                <div className=\"col-2\">\r\n                <NormalInput\r\n                                value={auto_deposit_new}\r\n                                name=\"auto_deposit_new\"\r\n                                className=\"customer-name w-100 h-100 text-right  fs-24\"\r\n                                onChange={this.handleChange_auto_deposit_new}\r\n                            />   \r\n                </div>\r\n                <div className=\"col-3\">\r\n                <NormalButton\r\n                                buttonClass={\"treatment\"}\r\n                                mainbg={true}\r\n                                className=\"col-12 fs-15 \"\r\n                                label=\"Start AutoMatch\"\r\n                                disabled={!this.state.checked}\r\n                                onClick={() => this.autoMatch()}\r\n                   />\r\n                 </div>\r\n                 </div>\r\n                </div>\r\n                <br/><br/><br/><br/>\r\n                <table className=\"table table-striped\">\r\n                            <tr>\r\n                              <td>Description</td>\r\n                              <td>Qty</td>\r\n                              <td>Deposit</td>\r\n                              <td>Net Amount</td> \r\n                            </tr>\r\n                            {cartPackageList.map(\r\n                              (cartPackage, index) => (\r\n                                <tr\r\n                                  key={index}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                >\r\n                                  <td>{cartPackage.description}</td>\r\n                                  <td>{cartPackage.qty}</td>\r\n                                  <td >\r\n                                      <input onChange={this.handleChangeForEachRow.bind(this, \r\n                                        cartPackage.id)}\r\n                                        name={index}\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        className=\"w-50\"\r\n                                        value={cartPackage.deposit_amt}\r\n                                        disabled={this.state.checked} />\r\n                                 </td>\r\n                               \r\n                                  <td className=\"d-flex align-items-center justify-content-center\">{cartPackage.net_amt}</td>  \r\n                                  </tr>\r\n                              )\r\n                            )}\r\n                          </table>\r\n                          \r\n                          <div className=\"col-12\">\r\n                                <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    <Label>Deposit:</Label>\r\n                                    <NormalInput\r\n                                    value={deposit}\r\n                                    disabled={true}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    <Label>Net Total:</Label>\r\n                                    <NormalInput\r\n                                      value={net_deposit}\r\n                                      disabled={true}\r\n                                      />\r\n                                </div>\r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                          </div>\r\n                          </div>\r\n                          \r\n                          <div className=\"col-12\">\r\n                            <div className=\"row\">\r\n                            <div className=\"col-2\">\r\n                                    <NormalButton\r\n                                        buttonClass={\"treatment\"}\r\n                                        mainbg={true}\r\n                                        className=\"col-12 fs-15 \"\r\n                                        label=\"Full Payment\"\r\n                                        onClick={() => this.fullPayment()}\r\n                                    />\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                    <NormalButton\r\n                                        buttonClass={\"treatment\"}\r\n                                        mainbg={true}\r\n                                        className=\"col-12 fs-15 \"\r\n                                        label=\"Clear Deposit\"\r\n                                        onClick={() => this.clear()}\r\n                                    />\r\n                            </div>\r\n                            \r\n                            <div className=\"col-2\">\r\n                                    <NormalButton\r\n                                        buttonClass={\"treatment\"}\r\n                                        mainbg={true}\r\n                                        className=\"col-12 fs-15 \"\r\n                                        label=\"Cancel\"\r\n                                        onClick={() => this.handleCancel()}\r\n                                    />\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                    <NormalButton\r\n                                        buttonClass={\"treatment\"}\r\n                                        mainbg={true}\r\n                                        className=\"col-12 fs-15 \"\r\n                                        label=\"Confirm\"\r\n                                        onClick={() => this.handleConfirm()}\r\n                                    />\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                            </div>\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selected_cstomer: state.common.selected_cstomer,\r\n    basicApptDetail: state.appointment.basicApptDetail,\r\n    tokenDetails: state.authStore.tokenDetails,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        // getCustomer,\r\n        getCommonApi,\r\n        updateForm,\r\n        commonUpdateApi,\r\n        commonCreateApi\r\n    }, dispatch)\r\n}\r\n\r\nexport const PackageCart = connect(mapStateToProps, mapDispatchToProps)(PackageCartClass)"]},"metadata":{},"sourceType":"module"}