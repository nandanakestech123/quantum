{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Cart\\\\cart\\\\payment.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalTextarea, NormalButton, NormalSelect, NormalDate, NormalModal, NormalDateTime } from \"component/common\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport { getPayment, createPayment } from \"redux/actions/payment\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { history } from \"helpers\";\nimport { getCommonApi, updateForm } from \"redux/actions/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport \"./style.scss\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport closeIcon from \"assets/images/close.png\";\nimport helpers from \"../../../../service/Helper\";\nimport { Toast } from \"service/toast\";\nimport { withTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport { Paymentcheckout } from \"./paymentgate\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { isMoment } from \"moment\";\nimport checkoutIcon from \"assets/images/checkoutIcon.png\";\nconst stripePromise = loadStripe(\"pk_test_GGEOsV78TJcV1OcvWcaH6lnz\");\nexport class MakePaymentClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formFields: {\n        name: \"\",\n        contact: \"\",\n        address: \"\",\n        searchStaff: \"\",\n        payTableDropDownValue: \"\"\n      },\n      responseData: {},\n      premisesOption: [],\n      selectedCards: [],\n      selectedCardsPayAmount: 0,\n      cardOption: [],\n      ewalletoptions: [],\n      ewalletField: {\n        pay_typeid: null,\n        pay_amt: \"\",\n        credit_debit: true\n      },\n      cardField: {\n        pay_typeid: null,\n        pay_amt: \"\",\n        credit_debit: true,\n        pay_rem1: \"\",\n        pay_rem2: \"\",\n        pay_rem3: \"\",\n        pay_rem4: \"\",\n        App_code: \"\"\n      },\n      balance: 0,\n      errorMessage: \"123\",\n      prepaidCustomerData: [],\n      voucherCustomerData: [],\n      creditNoteCustomerData: [],\n      pointData: [],\n      accountHeader: [],\n      isMakePaymentButtonClicked: \"false\",\n      isTreatmentDoneButton: true,\n      itemProductAmount: 0,\n      itemServiceAmount: 0,\n      itemProductServiceVoucherAmount: 0,\n      displayTablePrepaid: [],\n      displayTableCreditNote: [],\n      displayTableVoucher: [],\n      displayTablePoint: [],\n      paytableData: [],\n      paytableFullData: [],\n      payGroupData: [],\n      selectPaymentGroup: \"\",\n      selectPaymentGroupId: \"\",\n      isSelectedPaymentType: \"\",\n      displayModelPaymentType: \"\",\n      txtUserPayAmount: 0,\n      isOpenSubPayment: false,\n      pay_rem4: \"\",\n      DateofPay: new Date(),\n      MinimumDate: new Date(),\n      is_paymentdate: false,\n      isMakePaymentLoading: false,\n      pointHeader: [],\n      paymentgateway: false,\n      paymentCompleted: false,\n      cust_id: null,\n      cust_stripeid: null,\n      imageOnlineModePaymentL: false,\n      payTableValueAndName: {\n        target: {\n          name: \"\",\n          value: \"\"\n        }\n      },\n      imgUrl: \"\",\n      paygroupid: \"\"\n    };\n\n    this.componentWillMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }\n        }, message),\n        autoForceUpdate: this\n      });\n    };\n\n    this.getPayment = () => {\n      let {\n        id,\n        cartId,\n        cartData\n      } = this.props;\n      let {\n        cust_id,\n        cust_stripeid\n      } = this.state; //id = 82318;\n      //cartId = \"ICMD100226\";\n      //cartData={\"status\":200,\"message\":\"Listed Succesfully\",\"error\":false,\"data\":[{\"id\":57500,\"cust_noid\":82318,\"customer\":\"test17011\",\"customercode\":\"021427HQ\",\"cart_id\":\"ICHQ100234\",\"cart_date\":\"2021-03-14\",\"cart_status\":\"Inprogress\",\"lineno\":1,\"check\":\"New\",\"itemcodeid\":10067,\"itemdesc\":\"Short - Chin Length(Before Shoulder) 128\",\"quantity\":1,\"price\":\"128.00\",\"total_price\":\"128.00\",\"sitecodeid\":31,\"sitecode_name\":\"HQ OFFICE (DEMO)\",\"sitecode\":\"HQ\",\"discount\":\"0.00\",\"discount_amt\":0,\"discount_price\":\"128.00\",\"additional_discount\":0,\"additional_discountamt\":0,\"deposit\":\"128.00\",\"trans_amt\":\"128.00\",\"tax\":0,\"itemstatus\":null,\"ratio\":\"100.000000000000000\",\"helper_name\":null,\"done_sessions\":null,\"type\":\"Deposit\",\"treatment_account\":null,\"treatment\":null,\"deposit_account\":null,\"prepaid_account\":null,\"item_uom\":null,\"recorddetail\":\"Service\",\"itemtype\":\"SINGLE\",\"item_class\":\"HERBAL TREATMENT\",\"sales_staff\":\"SEQ ADMIN\",\"service_staff\":\"\",\"total_disc\":\"0.00\",\"treatment_name\":\"Short - Chin Length(Before Shoulder) 128  (1)\",\"item_name\":\"Short - Chin Length(Before Shoulder) 128\"}],\"subtotal\":\"128.00\",\"discount\":\"0.00\",\"trans_amt\":\"128.00\",\"deposit_amt\":\"128.00\",\"billable_amount\":\"128.00\"}\n\n      if (id) {\n        this.props.getPayment(`?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${id}&cart_id=${cartId}`).then(res => {\n          console.log(\"Payment Details:\", res);\n          console.log(res.data.cust_noid);\n          cust_id = res.data.cust_noid;\n          cust_stripeid = res.data.cust_stripeid;\n          this.setState({\n            cust_id,\n            cust_stripeid\n          });\n          let {\n            data,\n            status,\n            prepaid_data\n          } = res;\n\n          if (status === 200) {\n            this.setState({\n              responseData: data,\n              balance: Number(data.billable_amount),\n              txtUserPayAmount: Number(data.billable_amount),\n              prepaid_data: prepaid_data.prepaid,\n              product_only: prepaid_data.product_only,\n              service_only: prepaid_data.service_only,\n              all_only: prepaid_data.all_only,\n              is_paymentdate: data.is_paymentdate\n            });\n          }\n        });\n      } //let {cartData} = this.props;\n\n\n      let stringifiedCartData = cartData.data;\n      let {\n        itemProductAmount,\n        itemServiceAmount,\n        itemProductServiceVoucherAmount\n      } = this.state;\n\n      if (stringifiedCartData) {\n        stringifiedCartData.map(item => {\n          //alert(JSON.stringify(item));\n          if (item.recorddetail === \"Product\") {\n            itemProductAmount += parseFloat(item.total_price);\n          }\n\n          if (item.recorddetail === \"Service\") {\n            itemServiceAmount += parseFloat(item.total_price);\n            console.log(itemServiceAmount);\n            console.log(item.total_price);\n          }\n\n          if (item.recorddetail === \"Product\" || item.recorddetail === \"Service\" || item.recorddetail === \"Voucher\") {\n            itemProductServiceVoucherAmount += parseFloat(item.total_price);\n          }\n        });\n      }\n\n      this.setState({\n        itemProductAmount,\n        itemServiceAmount,\n        itemProductServiceVoucherAmount\n      });\n    };\n\n    this.getDataFromResponses = data => {\n      let {\n        cardOption,\n        premisesOption\n      } = this.state;\n\n      for (let key of data.CARD) {\n        cardOption.push({\n          label: key.pay_description,\n          value: key.id\n        });\n      }\n\n      for (let key of data.CASH) {\n        premisesOption.push({\n          label: key.pay_description,\n          value: key.id\n        });\n      }\n\n      this.setState({\n        cardOption,\n        premisesOption\n      });\n    };\n\n    this.handleMultiple = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      console.log(\"handleMultiple\", value, name);\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n    };\n\n    this.getVoucherData = api => {\n      this.props.getCommonApi(`voucher/?cust_id=${this.props.id}${api}`).then(key => {\n        let {\n          data\n        } = key;\n        let {\n          voucherCustomerData\n        } = this.state;\n        voucherCustomerData = data;\n        console.log(\"voucherCustomerData\", data); // accountHeader = header_data;\n\n        this.setState({\n          voucherCustomerData\n        }, () => {\n          console.log(\"test\");\n          this.HideVoucherTableData();\n        });\n      });\n    };\n\n    this.getPrepaidData = () => {\n      this.getPrepaidAccountData(\"\");\n    };\n\n    this.getPrepaidAccountData = api => {\n      console.log(\"dd\");\n      this.props.getCommonApi(`prepaidacclist/?cust_id=${this.props.id}${api}`).then(key => {\n        let {\n          data\n        } = key;\n        let {\n          prepaidCustomerData\n        } = this.state; //prepaidCustomerData = data;\n\n        prepaidCustomerData = [];\n        console.log(\"prepaidCustomerData\", data);\n\n        for (let item of data) {\n          let itemData = {};\n          itemData[\"conditiontype1\"] = item.conditiontype1;\n          itemData[\"cust_code\"] = item.cust_code;\n          itemData[\"all\"] = item.all;\n          itemData[\"exp_status\"] = item.exp_status;\n          itemData[\"exp_date\"] = item.exp_date;\n          itemData[\"last_update\"] = item.last_update;\n          itemData[\"line_no\"] = item.line_no;\n          itemData[\"id\"] = item.id;\n          itemData[\"pp_amt\"] = item.pp_amt;\n          itemData[\"pp_bonus\"] = item.pp_bonus;\n          itemData[\"outstanding\"] = item.outstanding;\n          itemData[\"pp_no\"] = item.pp_no;\n          itemData[\"pp_total\"] = item.pp_total;\n          itemData[\"prepaid\"] = item.prepaid;\n          itemData[\"product\"] = item.product;\n          itemData[\"remain\"] = item.remain;\n          itemData[\"sa_date\"] = item.sa_date;\n          itemData[\"service\"] = item.service;\n          itemData[\"topup_amt\"] = item.topup_amt;\n          itemData[\"type\"] = item.type;\n          itemData[\"use_amt\"] = item.use_amt;\n          itemData[\"pp_desc\"] = item.pp_desc;\n\n          if (item.conditiontype1 === \"Service Only\") {\n            if (Number(this.state.service_only) > Number(item.remain)) {\n              itemData[\"Finaluse_amt\"] = item.remain;\n            } else {\n              itemData[\"Finaluse_amt\"] = this.state.service_only;\n            }\n          }\n\n          if (item.conditiontype1 === \"Product Only\") {\n            if (Number(this.state.product_only) > Number(item.remain)) {\n              itemData[\"Finaluse_amt\"] = item.remain;\n            } else {\n              itemData[\"Finaluse_amt\"] = this.state.product_only;\n            }\n          }\n\n          if (item.conditiontype1 === \"All\") {\n            let finalamount = Number(this.state.all_only);\n\n            if (this.state.prepaid_data) {\n              this.state.prepaid_data.filter(dataitem => dataitem.prepaid_id == item.id).map(filteritem => {\n                finalamount = Number(this.state.all_only) - Number(filteritem.deposit);\n              });\n            }\n\n            if (Number(finalamount) > Number(item.remain)) {\n              itemData[\"Finaluse_amt\"] = Number(item.remain).toFixed(2);\n            } else {\n              itemData[\"Finaluse_amt\"] = Number(finalamount).toFixed(2);\n            }\n          }\n\n          prepaidCustomerData.push(itemData);\n        }\n\n        this.setState({\n          prepaidCustomerData\n        }, () => {\n          this.HidePrepaidTableData();\n        });\n      }); // accountHeader = header_data;\n    };\n\n    this.getCreditNoteAccountData = api => {\n      debugger;\n      this.props.getCommonApi(`creditnotelist/?cust_id=${this.props.id}${api}`).then(key => {\n        let {\n          data\n        } = key;\n        debugger;\n        let {\n          creditNoteCustomerData\n        } = this.state;\n        creditNoteCustomerData = data;\n        this.setState({\n          creditNoteCustomerData\n        }, () => {\n          this.HideCreditNoteTableData();\n        });\n      });\n    };\n\n    this.getPointData = () => {\n      let {\n        txtUserPayAmount,\n        pointHeader\n      } = this.state;\n      this.props.getCommonApi(`customerpoints/?cust_noid=${this.props.id}&enter_pointamt=${txtUserPayAmount}`).then(key => {\n        console.log(key, \"pointdataget\");\n        let {\n          data,\n          header_data\n        } = key;\n        let {\n          pointData\n        } = this.state;\n        pointData = data;\n        pointHeader = header_data;\n        this.setState({\n          pointData,\n          pointHeader\n        }, () => {\n          this.HidePointTableData();\n        });\n      });\n    };\n\n    this.HidePointTableData = () => {\n      let {\n        pointData,\n        displayTablePoint\n      } = this.state;\n      displayTablePoint.map(item => {\n        var selectedPoint = pointData.filter(point => point.id != item);\n        this.setState({\n          pointData: selectedPoint\n        });\n      });\n    };\n\n    this.getPayGroup = () => {\n      this.props.getCommonApi(`paygroup/`).then(res => {\n        let {\n          payGroupData\n        } = this.state;\n\n        for (let key of res.data) {\n          payGroupData.push({\n            label: key.pay_group_code,\n            value: key.id,\n            picturelocation: key.picturelocation\n          });\n        }\n\n        this.setState({\n          payGroupData\n        });\n      });\n    };\n\n    this.getFullPayTable = () => {\n      this.props.getCommonApi(`paytablenew/`).then(res => {\n        console.log(res, \"paytablefulldata\");\n        let {\n          paytableFullData\n        } = this.state;\n        paytableFullData = res.data;\n        this.setState({\n          paytableFullData\n        });\n      });\n    };\n\n    this.getPayTableNameBasedOnId = payTableId => {\n      // gt_group: \"GT1\"\n      // id: 6\n      // pay_code: \"UOBPN\"\n      // pay_description: \"UOB PAYNOW\"\n      // pay_group_name: \"UOB\"\n      // pay_groupid: 22\n      let {\n        paytableFullData\n      } = this.state; // if (\n      //   isSelectedPaymentType == \"VOUCHER\" ||\n      //   isSelectedPaymentType == \"PREPAID\" ||\n      //   isSelectedPaymentType == \"Credit\" ||\n      //   isSelectedPaymentType == \"OLD BILL\"\n      // ) {\n      //   const test = paytableFullData.filter(\n      //     res => res.pay_group_name.trim() == isSelectedPaymentType.trim()\n      //   );\n      //   return test[0].pay_description;\n      // } else {\n\n      const test = paytableFullData.filter(res => res.id == payTableId);\n      return test[0].pay_description; // }\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n      let {\n        balance,\n        selectedCards,\n        txtUserPayAmount,\n        isOpenSubPayment\n      } = this.state;\n      isOpenSubPayment = false;\n      selectedCards.push({\n        pay_typeid: value,\n        pay_amt: parseFloat(txtUserPayAmount),\n        credit_debit: false,\n        pay_premise: true,\n        prepaid: false,\n        pay_rem4: this.state.pay_rem4\n      });\n      balance = parseFloat(balance - txtUserPayAmount).toFixed(2);\n      txtUserPayAmount = balance;\n      this.setState({\n        txtUserPayAmount,\n        balance,\n        isOpenSubPayment\n      });\n    };\n\n    this.handleChangePayTableDropDownValue = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      this.props.getCommonApi(`paytablenew/?paygroupid=${this.state.paygroupid}`).then(res => {\n        console.log(res);\n\n        if (res.status == 200) {\n          const obj = res.data.filter(item => item.id == value);\n          console.log(obj);\n\n          if (obj[0].qr_code == null) {\n            this.setState({\n              imgUrl: \"\"\n            });\n            this.setState({\n              imageOnlineModePaymentL: false\n            });\n            alert(\"No Qr Code to Show\");\n          } else {\n            this.setState({\n              imgUrl: obj[0].qr_code\n            });\n          }\n        }\n      });\n      this.setState({\n        imageOnlineModePaymentL: true\n      });\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n      this.setState({\n        payTableValueAndName: {\n          target: {\n            name: name,\n            value: value\n          }\n        }\n      });\n      console.log(\"name\", name, \" value\", value);\n    };\n\n    this.handleContinueQr = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let formFields = Object.assign({}, this.state.formFields);\n      formFields[name] = value;\n      this.setState({\n        formFields\n      });\n      let {\n        balance,\n        selectedCards,\n        txtUserPayAmount,\n        isOpenSubPayment\n      } = this.state;\n      isOpenSubPayment = false;\n      selectedCards.push({\n        pay_typeid: value,\n        pay_amt: parseFloat(txtUserPayAmount),\n        credit_debit: false,\n        pay_premise: true,\n        prepaid: false,\n        pay_rem4: this.state.pay_rem4\n      });\n      balance = parseFloat(balance - txtUserPayAmount).toFixed(2);\n      txtUserPayAmount = balance;\n      this.setState({\n        txtUserPayAmount,\n        balance,\n        isOpenSubPayment\n      });\n      this.setState({\n        payTableValueAndName: {\n          target: {\n            name: \"\",\n            value: \"\"\n          }\n        }\n      });\n    };\n\n    this.handleCreditChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let cardField = Object.assign({}, this.state.cardField);\n      cardField[name] = value;\n      this.setState({\n        cardField\n      });\n    };\n\n    this.handleTreatmentDone = () => {\n      let {\n        selectedCards,\n        DateofPay\n      } = this.state;\n      selectedCards.push({\n        pay_typeid: 2,\n        pay_amt: 0,\n        credit_debit: false,\n        pay_premise: true,\n        prepaid: false,\n        pay_rem4: this.state.pay_rem4\n      });\n      let data = selectedCards;\n      let {\n        id,\n        cartId\n      } = this.props;\n      this.props.createPayment(`?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${id}&cart_id=${cartId}&pay_date=${dateFormat(new Date(DateofPay), \"yyyy-mm-dd\")}`, data).then(res => {\n        history.push(`/admin/billing/print/bill/${res.data.sa_transacno}`);\n      });\n    };\n\n    this.handleSubmit = () => {\n      let {\n        selectedCards,\n        DateofPay\n      } = this.state;\n      let data = selectedCards;\n      console.log(\"SubmitDatapayment\", data);\n      let {\n        id,\n        cartId\n      } = this.props;\n      this.props.createPayment(`?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${id}&cart_id=${cartId}&pay_date=${dateFormat(new Date(DateofPay), \"yyyy-mm-dd\")}`, data).then(res => {\n        this.setState({\n          isMakePaymentLoading: false\n        });\n        history.push(`/admin/billing/print/bill/${res.data.sa_transacno}`);\n      });\n      this.setState({\n        isMakePaymentLoading: false\n      });\n    };\n\n    this.addCreditCard = async => {\n      if (!this.validator.fieldValid(\"cardFieldType\")) {\n        this.validator.showMessageFor(\"cardFieldType\");\n        return;\n      }\n\n      let {\n        cardField,\n        selectedCards,\n        balance,\n        responseData,\n        txtUserPayAmount\n      } = this.state;\n      let userPayAmount = parseFloat(txtUserPayAmount);\n\n      if (parseFloat(this.state.responseData.billable_amount) > 0) {\n        if (userPayAmount == 0) {\n          return;\n        }\n      }\n\n      if (this.checkPayTypeIdAlreadyExists(cardField.pay_typeid)) {\n        let result = this.getPayTableNameBasedOnId(cardField.pay_typeid) + \" already exists\";\n        Toast({\n          type: \"error\",\n          message: result\n        });\n        return;\n      } else {\n        selectedCards.push({\n          pay_typeid: cardField.pay_typeid,\n          pay_amt: userPayAmount,\n          credit_debit: true,\n          pay_premise: false,\n          pay_rem1: cardField.pay_rem1,\n          pay_rem2: cardField.pay_rem2,\n          pay_rem3: cardField.pay_rem3,\n          pay_rem4: this.state.pay_rem4,\n          prepaid: false\n        });\n      }\n\n      balance = parseFloat(balance - userPayAmount).toFixed(2);\n      this.setState({\n        isOpenSubPayment: false\n      });\n      this.setBalanceToAllTextBoxes(balance);\n    };\n\n    this.addPoint = selectedPoint => {\n      let {\n        balance,\n        txtUserPayAmount,\n        isOpenSubPayment,\n        selectedCards,\n        pay_rem4\n      } = this.state;\n\n      if (txtUserPayAmount == 0) {\n        Toast({\n          type: \"error\",\n          message: \"Point is not allowed\"\n        });\n        return;\n      }\n\n      const selectedPointAmount = parseFloat(selectedPoint.useamt);\n      let pay_amt_setup = 0;\n\n      if (selectedPointAmount <= parseFloat(txtUserPayAmount)) {\n        pay_amt_setup = selectedPointAmount;\n      } else {\n        pay_amt_setup = txtUserPayAmount;\n      } // if (selectedPointAmount <= parseFloat(txtUserPayAmount)) {\n      //   pay_amt_setup = selectedPointAmount;\n      // } else {\n      //   Toast({\n      //     type: \"error\",\n      //     message: \"Partial Amount is not applicable in Point\",\n      //   });\n      //   return;\n      // }\n\n\n      const payTypeId = 25; //const payTypeId = 23; //normal twoherbs\n      //const payTypeId = 19; //healspa sensuous beauty21 appleskin jybeauty\n      //const payTypeId = 7; //skinsoul\n      //const payTypeId = 8; //glamour koiskin quantum\n      //const payTypeId = 9; //beskin citibella tnc ingenious\n      //const payTypeId = 35; //marma\n\n      selectedCards.push({\n        pay_typeid: payTypeId,\n        pay_amt: parseFloat(pay_amt_setup),\n        pay_premise: false,\n        prepaid: false,\n        credit_debit: false,\n        points: true,\n        cur_value: selectedPoint.cur_value,\n        pay_rem4: pay_rem4,\n        pay_rem2: selectedPoint.id\n      });\n      console.log(\"BeforeAdd-displayTableVoucher\", this.state.displayTablePoint);\n      let setdisplayTablePoint = this.state.displayTablePoint;\n      setdisplayTablePoint.push(selectedPoint.id);\n      this.setState({\n        displayTablePoint: setdisplayTablePoint\n      });\n      console.log(\"AfterAdd-displayTablePoint\", this.state.displayTablePoint);\n      this.HidePointTableData();\n      balance = parseFloat(balance - pay_amt_setup).toFixed(2);\n      this.setState({\n        isOpenSubPayment: false\n      });\n      this.setBalanceToAllTextBoxes(balance);\n    };\n\n    this.addPrepaid = selectedPrepaid => {\n      const prepaidExpDate = moment(selectedPrepaid.exp_date).format(\"YYYY-MM-DD\");\n      const todaysDate = moment(new Date()).format(\"YYYY-MM-DD\");\n      const isValid = moment(todaysDate).isSameOrAfter(prepaidExpDate);\n      let userPayAmount = 0;\n      let {\n        itemServiceAmount,\n        itemProductAmount,\n        itemProductServiceVoucherAmount,\n        txtUserPayAmount\n      } = this.state;\n      console.log(txtUserPayAmount);\n      userPayAmount = parseFloat(txtUserPayAmount);\n\n      if (isValid) {\n        Toast({\n          type: \"error\",\n          message: \"Check Expiry Date\"\n        });\n        return;\n      }\n\n      if (userPayAmount <= 0) {\n        // alert(\"hi\");\n        Toast({\n          type: \"error\",\n          message: \"Prepaid is Not allowed\"\n        });\n        return;\n      }\n\n      let selectedRemainingPrepaidAmount = parseFloat(selectedPrepaid.remain);\n\n      if (selectedRemainingPrepaidAmount < userPayAmount) {//return\n      } else if (selectedRemainingPrepaidAmount > userPayAmount) {\n        selectedRemainingPrepaidAmount = parseFloat(userPayAmount);\n      }\n      /*\r\n      if (!this.validator.fieldValid(\"PrepaidBalanceAmount\")) {\r\n        this.validator.showMessageFor(\"PrepaidBalanceAmount\");\r\n        return;\r\n      }\r\n      if (!this.validator.fieldValid(\"PrepaidBalanceAmount\")) {\r\n        this.validator.showMessageFor(\"PrepaidBalanceAmount\");\r\n        return;\r\n      }\r\n      */\n\n\n      if (selectedPrepaid.conditiontype1 === \"Service Only\") {\n        //For Service\n        if (parseFloat(itemServiceAmount) == 0) {\n          Toast({\n            type: \"error\",\n            message: \"Prepaid is Not allowed\"\n          });\n          return;\n        }\n\n        if (parseFloat(itemServiceAmount) <= selectedRemainingPrepaidAmount) {\n          userPayAmount = parseFloat(txtUserPayAmount) < parseFloat(itemServiceAmount) ? parseFloat(txtUserPayAmount) : parseFloat(itemServiceAmount);\n          console.log(itemServiceAmount);\n          console.log(userPayAmount);\n        } else {\n          userPayAmount = selectedRemainingPrepaidAmount;\n          console.log(userPayAmount);\n        }\n\n        itemServiceAmount = itemServiceAmount - userPayAmount;\n        this.setState({\n          itemServiceAmount\n        });\n      } else if (selectedPrepaid.conditiontype1 === \"Product Only\") {\n        //For Product\n        if (parseFloat(itemProductAmount) == 0) {\n          Toast({\n            type: \"error\",\n            message: \"Prepaid is not allowed\"\n          });\n          return;\n        }\n\n        if (parseFloat(itemProductAmount) <= selectedRemainingPrepaidAmount) {\n          userPayAmount = parseFloat(txtUserPayAmount) < parseFloat(itemProductAmount) ? parseFloat(txtUserPayAmount) : parseFloat(itemProductAmount);\n          console.log(userPayAmount);\n        } else {\n          userPayAmount = selectedRemainingPrepaidAmount;\n          console.log(userPayAmount);\n        }\n\n        itemProductAmount = itemProductAmount - userPayAmount;\n        this.setState({\n          itemProductAmount\n        });\n      } else {\n        if (parseFloat(itemProductServiceVoucherAmount) == 0) {\n          Toast({\n            type: \"error\",\n            message: \"Prepaid is not allowed\"\n          });\n          return;\n        }\n\n        if (parseFloat(itemProductServiceVoucherAmount) <= selectedRemainingPrepaidAmount) {\n          userPayAmount = parseFloat(txtUserPayAmount) < parseFloat(itemProductServiceVoucherAmount) ? parseFloat(txtUserPayAmount) : parseFloat(itemProductServiceVoucherAmount);\n          console.log(userPayAmount);\n        } else {\n          userPayAmount = selectedRemainingPrepaidAmount;\n          console.log(userPayAmount);\n        }\n\n        itemProductServiceVoucherAmount = itemProductServiceVoucherAmount - userPayAmount;\n        this.setState({\n          itemProductServiceVoucherAmount\n        });\n      }\n\n      if (userPayAmount == 0) {\n        Toast({\n          type: \"error\",\n          message: \"Prepaid is not allowed\"\n        });\n        return;\n      } //const payTypeId = 23; //normal twoherbs\n      //const payTypeId = 19; //healspa sensuous beauty21 appleskin jybeauty\n      //const payTypeId = 7; //skinsoul\n      //const payTypeId = 8; //glamour koiskin quantum\n\n\n      const payTypeId = 9; //beskin citibella tnc ingenious\n      //const payTypeId = 35; //marma\n\n      let {\n        cardField,\n        ewalletField,\n        balance,\n        selectedCards,\n        isOpenSubPayment\n      } = this.state;\n      selectedCards.push({\n        pay_typeid: payTypeId,\n        prepaid: true,\n        pay_amt: userPayAmount,\n        credit_debit: false,\n        pay_premise: false,\n        pay_rem1: selectedPrepaid.pp_no + \" - \" + selectedPrepaid.line_no + \" - \" + selectedPrepaid.pp_desc,\n        pay_rem2: selectedPrepaid.id,\n        pay_rem4: this.state.pay_rem4,\n        prepaid_ct: selectedPrepaid.conditiontype1\n      });\n      console.log(\"BeforeAdd-displayTablePrepaid\", this.state.displayTablePrepaid);\n      let setdisplayTablePrepaid = this.state.displayTablePrepaid;\n      setdisplayTablePrepaid.push(selectedPrepaid.id);\n      this.setState({\n        displayTablePrepaid: setdisplayTablePrepaid\n      });\n      console.log(\"AfterAdd-displayTablePrepaid\", this.state.displayTablePrepaid);\n      this.HidePrepaidTableData();\n      balance = parseFloat(balance - userPayAmount).toFixed(2);\n      this.setBalanceToAllTextBoxes(balance);\n      console.log(balance);\n      this.setState({\n        isOpenSubPayment: false\n      });\n    };\n\n    this.addVoucher = selectedVoucher => {\n      let {\n        cardField,\n        ewalletField,\n        balance,\n        txtUserPayAmount,\n        isOpenSubPayment,\n        selectedCards\n      } = this.state;\n\n      if (txtUserPayAmount == 0) {\n        Toast({\n          type: \"error\",\n          message: \"Voucher is not allowed\"\n        });\n        return;\n      }\n\n      const selectedVoucherAmount = parseFloat(selectedVoucher.value);\n      let pay_amt_setup = 0;\n\n      if (selectedVoucherAmount <= parseFloat(txtUserPayAmount)) {\n        pay_amt_setup = selectedVoucherAmount;\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Partial Amount is not applicable in voucher\"\n        });\n        return; // alert(\"Partial Amount is not applicable in voucher\");\n        // return;\n      } //const payTypeId = 9; //normal\n      //const payTypeId = 8; //healspa sens beauty21 appleskin marmaclinic jybeauty\n      //const payTypeId = 25; //twoherbs koiskin ingenious\n      //const payTypeId = 3; //urbanspa\n      //const payTypeId = 4; //glamour citibella skinsoul quantum\n\n\n      const payTypeId = 5; //beskin tnc\n\n      selectedCards.push({\n        pay_typeid: payTypeId,\n        prepaid: false,\n        pay_amt: parseFloat(pay_amt_setup),\n        credit_debit: false,\n        pay_premise: false,\n        pay_rem1: selectedVoucher.voucher_no,\n        pay_rem2: selectedVoucher.voucher_no,\n        pay_rem4: this.state.pay_rem4\n      });\n      console.log(\"BeforeAdd-displayTableVoucher\", this.state.displayTableVoucher);\n      let setdisplayTableVoucher = this.state.displayTableVoucher;\n      setdisplayTableVoucher.push(selectedVoucher.voucher_no);\n      this.setState({\n        displayTableVoucher: setdisplayTableVoucher\n      });\n      console.log(\"AfterAdd-displayTableCreditNote\", this.state.displayTableVoucher);\n      this.HideVoucherTableData();\n      balance = parseFloat(balance - pay_amt_setup).toFixed(2);\n      this.setState({\n        isOpenSubPayment: false\n      });\n      this.setBalanceToAllTextBoxes(balance);\n    };\n\n    this.addCreditNote = selectedCreditNote => {\n      console.log(selectedCreditNote);\n      let {\n        cardField,\n        ewalletField,\n        balance,\n        txtUserPayAmount,\n        selectedCards\n      } = this.state;\n\n      if (txtUserPayAmount == 0) {\n        Toast({\n          type: \"error\",\n          message: \"Credit Note is not allowed\"\n        });\n        return;\n      }\n\n      const selectedCreditNoteAmount = parseFloat(selectedCreditNote.balance);\n      console.log(selectedCreditNoteAmount);\n      let pay_amt_setup = 0;\n\n      if (selectedCreditNoteAmount <= parseFloat(txtUserPayAmount)) {\n        pay_amt_setup = selectedCreditNoteAmount;\n      } else {\n        pay_amt_setup = txtUserPayAmount;\n      } //const payTypeId = 17; //normal\n      //const payTypeId = 24; //twoherbs\n      //const payTypeId = 12; //healspa sens beauty21 appleskin citibella marma jybeauty\n      //const payTypeId = 5; //glamour skinsoul koiskin quantum\n\n\n      const payTypeId = 6; //beskin tnc ingenious\n\n      selectedCards.push({\n        pay_typeid: payTypeId,\n        prepaid: false,\n        pay_amt: parseFloat(pay_amt_setup),\n        credit_debit: false,\n        pay_premise: false,\n        pay_rem1: selectedCreditNote.credit_code,\n        pay_rem2: selectedCreditNote.transaction,\n        pay_rem4: this.state.pay_rem4\n      });\n      console.log(\"BeforeAdd-displayTableCreditNote\", this.state.displayTableCreditNote);\n      let setdisplayTableCreditNote = this.state.displayTableCreditNote;\n      setdisplayTableCreditNote.push(selectedCreditNote.credit_code);\n      this.setState({\n        displayTableCreditNote: setdisplayTableCreditNote\n      });\n      console.log(\"AfterAdd-displayTableCreditNote\", this.state.displayTableCreditNote);\n      this.HideCreditNoteTableData();\n      balance = parseFloat(balance - pay_amt_setup).toFixed(2);\n      this.setState({\n        isOpenSubPayment: false\n      });\n      this.setBalanceToAllTextBoxes(balance);\n    };\n\n    this.removeCards = idx => () => {\n      let {\n        selectedCards,\n        balance,\n        cardField,\n        ewalletField,\n        itemProductServiceVoucherAmount,\n        itemProductAmount,\n        itemServiceAmount\n      } = this.state;\n      this.setState({\n        isMakePaymentButtonClicked: \"false\"\n      });\n      balance = parseFloat(balance) + parseFloat(idx.pay_amt);\n      var array = [...selectedCards]; // make a separate copy of the array\n\n      var index = array.indexOf(idx); //if (idx.pay_typeid == 23) { //normal twoherbs\n      //if (idx.pay_typeid == 19) { //healspa sens beauty21 appleskin jybeauty\n      // if (idx.pay_typeid == 35) { //marmaclinic\n      //if (idx.pay_typeid == 7) { //skinsoul\n      //if (idx.pay_typeid == 8) { //glamour koiskin quantum\n\n      if (idx.pay_typeid == 9) {\n        //beskin citibella tnc ingenious\n        if (idx.prepaid_ct == \"Product Only\") {\n          itemProductAmount = itemProductAmount + idx.pay_amt;\n        } else if (idx.prepaid_ct == \"Service Only\") {\n          itemServiceAmount = itemServiceAmount + idx.pay_amt;\n        } else {\n          itemProductServiceVoucherAmount = itemProductServiceVoucherAmount + idx.pay_amt;\n        }\n\n        this.setState({\n          itemProductServiceVoucherAmount,\n          itemProductAmount,\n          itemServiceAmount\n        });\n      }\n\n      if (index !== -1) {\n        array.splice(index, 1);\n        this.setState({\n          selectedCards: array,\n          balance\n        });\n      } //console.log(\"idx\", idx);\n\n\n      var removedTerm = idx.pay_typeid; //console.log(\"removedTerm\", removedTerm);\n      //console.log(\"idx.pay_rem2\", idx.pay_rem2);\n      //if (removedTerm == \"23\") { //normal twoherbs\n      //if (removedTerm == \"19\") { //healspa sens beauty21 appleskin jybeauty\n      //if (removedTerm == \"35\") { //marma\n      //if (removedTerm == \"7\") { //skinsoul\n      //if (removedTerm == \"8\") { //glamour koiskin quantum\n\n      if (removedTerm == \"9\") {\n        //beskin citibella tnc ingenious\n        const items = this.state.displayTablePrepaid;\n        console.log(\"BeforeRemove-displayTablePrepaid\", items);\n        const valueToRemove = idx.pay_rem2; //For Prepaid Ony we have added unique id here\n\n        console.log(\"BeforeRemove-valueToRemove\", valueToRemove);\n        const filteredItems = items.filter(item => item !== valueToRemove);\n        this.setState({\n          displayTablePrepaid: filteredItems\n        }, () => {\n          console.log(\"AfterRemove-displayTablePrepaid\", this.state.displayTablePrepaid);\n        });\n        this.getPrepaidAccountData(\"\"); // this.HidePrepaidTableData();\n      } //if (removedTerm == \"17\") { //normal\n      //if (removedTerm == \"24\") { //twoherbs\n      //if (removedTerm == \"12\") { //healspa sens beauty21 appleskin citibella marma jybeauty\n      //if (removedTerm == \"5\") { //glamour skinsoul koiskin quantum\n\n\n      if (removedTerm == \"6\") {\n        //beskin tnc ingenious\n        const items = this.state.displayTableCreditNote;\n        console.log(\"BeforeRemove-displayTableCreditNote\", items);\n        const valueToRemove = idx.pay_rem1; //For Credit Note Ony we have added unique id here\n\n        console.log(\"BeforeRemove-valueToRemove\", valueToRemove);\n        const filteredItems = items.filter(item => item !== valueToRemove);\n        this.setState({\n          displayTableCreditNote: filteredItems\n        }, () => {\n          console.log(\"AfterRemove-displayTableCreditNote\", this.state.displayTableCreditNote);\n        });\n        this.getCreditNoteAccountData(\"\"); // this.HidePrepaidTableData();\n      } //if (removedTerm == \"9\") { //normal\n      //if (removedTerm == \"25\") { //twoherbs koiskin ingenious\n      //if (removedTerm == \"8\") { //healspa sens beauty21 appleskin marma jybeauty\n      //if (removedTerm == \"4\") { //glamour citibella skinsoul quantum\n\n\n      if (removedTerm == \"5\") {\n        //beskin tnc\n        const items = this.state.displayTableVoucher;\n        console.log(\"BeforeRemove-displayTableVoucher\", items);\n        const valueToRemove = idx.pay_rem1; //For Credit Note Ony we have added unique id here\n\n        console.log(\"BeforeRemove-valueToRemove\", valueToRemove);\n        const filteredItems = items.filter(item => item !== valueToRemove);\n        this.setState({\n          displayTableVoucher: filteredItems\n        }, () => {\n          console.log(\"AfterRemove-displayTableVoucher\", this.state.displayTableVoucher);\n        });\n        this.getVoucherData(\"\");\n      }\n\n      if (removedTerm == \"25\") {\n        const items = this.state.displayTablePoint;\n        console.log(\"BeforeRemove-displayTablePoint\", items);\n        const valueToRemove = idx.pay_rem2; //For Prepaid Ony we have added unique id here\n\n        console.log(\"BeforeRemove-valueToRemove\", valueToRemove);\n        const filteredItems = items.filter(item => item !== valueToRemove);\n        this.setState({\n          displayTablePoint: filteredItems\n        }, () => {\n          console.log(\"AfterRemove-displayTablePoint\", this.state.displayTablePoint);\n        });\n        this.getPointData(); // this.HidePrepaidTableData();\n      }\n\n      cardField[\"pay_amt\"] = balance;\n      ewalletField[\"pay_amt\"] = balance;\n      this.setBalanceToAllTextBoxes(balance);\n    };\n\n    this.addNewPaymentData = async (selPayTypeId, selPayTypeName) => {\n      if (!this.validator.fieldValid(\"Amount\")) {\n        this.validator.showMessageFor(\"Amount\");\n        return;\n      }\n\n      if (!this.validator.fieldValid(\"Amount\")) {\n        this.validator.showMessageFor(\"Amount\");\n        return;\n      }\n\n      this.setState({\n        isSelectedPaymentType: selPayTypeName.trim()\n      });\n      this.setState({\n        paygroupid: selPayTypeId\n      });\n      this.props.getCommonApi(`paytablenew/?paygroupid=${selPayTypeId}`).then(res => {\n        this.setState({\n          paytableData: []\n        });\n        let {\n          paytableData,\n          isSelectedPaymentType,\n          displayModelPaymentType\n        } = this.state;\n        isSelectedPaymentType = selPayTypeName.trim().toUpperCase();\n        displayModelPaymentType = selPayTypeName.trim().toUpperCase();\n\n        for (let key of res.data) {\n          paytableData.push({\n            label: key.pay_description,\n            value: key.id\n          });\n        }\n\n        this.setState({\n          paytableData\n        }, () => {\n          let {\n            isOpenSubPayment\n          } = this.state;\n\n          if (paytableData.length == 0) {\n            Toast({\n              type: \"error\",\n              message: \"Pay Table Not Exists\"\n            });\n            return;\n          } else if (selPayTypeName.trim().toUpperCase() === \"VOUCHER\") {\n            isOpenSubPayment = true;\n          } else if (selPayTypeName.trim().toUpperCase() === \"POINT\") {\n            isOpenSubPayment = true;\n          } else if (selPayTypeName.trim().toUpperCase() === \"PREPAID\") {\n            isOpenSubPayment = true;\n          } else if (selPayTypeName.trim().toUpperCase() === \"CREDIT\") {\n            isOpenSubPayment = true;\n          } else if (selPayTypeName.trim().toUpperCase() === \"CARD\") {\n            isOpenSubPayment = true;\n          } else if (paytableData.length == 1) {\n            isOpenSubPayment = false;\n            let payTypeId = paytableData[0].value;\n            let {\n              balance,\n              selectedCards,\n              txtUserPayAmount\n            } = this.state;\n\n            if (parseFloat(this.state.responseData.billable_amount) > 0) {\n              if (parseFloat(txtUserPayAmount) == 0) {\n                return;\n              }\n            }\n\n            if (this.checkPayTypeIdAlreadyExists(payTypeId)) {\n              let result = this.getPayTableNameBasedOnId(payTypeId) + \" already exists\";\n              Toast({\n                type: \"error\",\n                message: result\n              });\n              return;\n            } else {\n              selectedCards.push({\n                pay_typeid: payTypeId,\n                pay_amt: parseFloat(txtUserPayAmount),\n                credit_debit: false,\n                pay_premise: true,\n                prepaid: false,\n                pay_rem4: this.state.pay_rem4\n              });\n              balance = parseFloat(balance - txtUserPayAmount).toFixed(2);\n              txtUserPayAmount = balance;\n              this.setState({\n                txtUserPayAmount,\n                balance\n              });\n              return;\n            }\n          } else if (paytableData.length >= 1) {\n            isOpenSubPayment = true;\n            isSelectedPaymentType = \"Multiple\";\n          }\n\n          this.setState({\n            isOpenSubPayment,\n            isSelectedPaymentType,\n            displayModelPaymentType\n          });\n        });\n      });\n    };\n\n    this.handleDialog = async () => {\n      let {\n        isOpenSubPayment\n      } = this.state;\n      isOpenSubPayment = false;\n      await this.setState({\n        isOpenSubPayment\n      });\n    };\n\n    this.handlepaymentgateway = async () => {\n      let {\n        paymentgateway,\n        txtUserPayAmount\n      } = this.state;\n\n      if (txtUserPayAmount !== \"0\") {\n        paymentgateway = !paymentgateway;\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Amount must be greater than 0\"\n        });\n      }\n\n      await this.setState({\n        paymentgateway\n      });\n      console.log(paymentgateway, txtUserPayAmount);\n    };\n\n    this.handleChangeCard = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let cardField = Object.assign({}, this.state.cardField);\n      cardField[name] = value;\n      await this.setState({\n        cardField\n      });\n    };\n\n    this.handleDatePick = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        DateofPay\n      } = this.state;\n      DateofPay = value;\n      await this.setState({\n        DateofPay\n      });\n      let DatePayment = {};\n      DatePayment[\"DateofPayment\"] = value;\n      await this.props.updateForm(\"CartPaymentDate\", DatePayment);\n    };\n\n    this.handleCallback = childData => {\n      console.log(childData);\n      this.setState({\n        paymentCompleted: childData\n      });\n    };\n\n    this.successfullpayment = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"success-msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"4em\",\n        height: \"4em\",\n        viewBox: \"0 0 16 16\",\n        className: \"bi bi-check2 right\",\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        \"fill-rule\": \"evenodd\",\n        d: \"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 9\n        }\n      }, \"Payment Successful\"));\n    };\n  }\n\n  componentDidMount() {\n    let From = new Date();\n    let {\n      MinimumDate,\n      DateofPay\n    } = this.state;\n    let firstdayMonth = new Date(From.getFullYear(), From.getMonth() - 6, From.getDate() + 1);\n\n    if (this.props.CartPaymentDate && this.props.CartPaymentDate[\"DateofPayment\"]) {\n      DateofPay = new Date(this.props.CartPaymentDate.DateofPayment);\n    } else {\n      DateofPay = new Date();\n    }\n\n    MinimumDate = firstdayMonth;\n    this.setState({\n      MinimumDate,\n      DateofPay\n    });\n    this.getPayment();\n    this.getPayGroup();\n    this.getFullPayTable();\n    this.getPrepaidData();\n    this.getCreditNoteAccountData(\"\");\n    this.getVoucherData(\"\");\n    this.getPointData();\n    console.log(\"cartdata From cart\", this.props.cartData);\n  }\n\n  handleChangeTextBox(event) {\n    this.setState({\n      txtUserPayAmount: event.target.value\n    });\n  }\n\n  handleChangeRemarkBox(event) {\n    this.setState({\n      pay_rem4: event.target.value\n    });\n  }\n\n  checkPayTypeIdAlreadyExists(val) {\n    return this.state.selectedCards.some(item => val === item.pay_typeid);\n  }\n\n  HidePrepaidTableData() {\n    let {\n      prepaidCustomerData,\n      displayTablePrepaid\n    } = this.state;\n    displayTablePrepaid.map(item => {\n      var selectedPrepaid = prepaidCustomerData.filter(prepaid => prepaid.id != item);\n      this.setState({\n        prepaidCustomerData: selectedPrepaid\n      });\n    });\n  }\n\n  HideCreditNoteTableData() {\n    let {\n      creditNoteCustomerData,\n      displayTableCreditNote\n    } = this.state;\n    displayTableCreditNote.map(item => {\n      let selectedCreditNote = creditNoteCustomerData.filter(creditNote => creditNote.credit_code != item);\n      console.log(selectedCreditNote, \"selectedCreditnote\");\n      this.setState({\n        creditNoteCustomerData: selectedCreditNote\n      });\n    });\n  }\n\n  HideVoucherTableData() {\n    let {\n      voucherCustomerData,\n      displayTableVoucher\n    } = this.state;\n    displayTableVoucher.map(item => {\n      var selectedVoucher = voucherCustomerData.filter(voucher => voucher.voucher_no != item);\n      this.setState({\n        voucherCustomerData: selectedVoucher\n      });\n    });\n  }\n\n  setBalanceToAllTextBoxes(balance) {\n    this.setState({\n      balance: balance,\n      txtUserPayAmount: balance\n    });\n  }\n\n  checkTypeOfCartItemContainsDeposit(cartData) {\n    let stringifiedCartData = cartData.data;\n\n    if (stringifiedCartData) {\n      stringifiedCartData.map(item => {\n        if (item.type === \"Deposit\" || item.type === \"Top Up\") {\n          this.state.isTreatmentDoneButton = false;\n        }\n      });\n    }\n  }\n\n  render() {\n    let {\n      responseData,\n      balance,\n      isTreatmentDoneButton,\n      payGroupData,\n      paytableData,\n      isOpenSubPayment,\n      isSelectedPaymentType,\n      displayModelPaymentType,\n      cardField,\n      pay_rem4,\n      DateofPay,\n      MinimumDate,\n      is_paymentdate,\n      isMakePaymentLoading,\n      paymentgateway,\n      paymentCompleted,\n      pointHeader,\n      cust_id,\n      cust_stripeid\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    let {\n      payTableDropDownValue\n    } = this.state.formFields;\n    console.log(payTableDropDownValue);\n    let insideRadioButtonData;\n    console.log(isSelectedPaymentType, \"selectedpaymenttype\");\n\n    if (isSelectedPaymentType == \"VOUCHER\") {\n      insideRadioButtonData = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1348,\n          columnNumber: 15\n        }\n      }, t(\"Vocucher No\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 15\n        }\n      }, t(\"Value\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 15\n        }\n      }, t(\"Exp. Date\"))), this.state.voucherCustomerData.map((selectedVoucher, index) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.addVoucher.bind(this, selectedVoucher),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1358,\n          columnNumber: 17\n        }\n      }, selectedVoucher.voucher_no), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1359,\n          columnNumber: 17\n        }\n      }, selectedVoucher.value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1360,\n          columnNumber: 17\n        }\n      }, selectedVoucher.issued_expiry_date)))));\n    } else if (isSelectedPaymentType == \"PREPAID\") {\n      insideRadioButtonData = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1371,\n          columnNumber: 15\n        }\n      }, t(\"Category\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1372,\n          columnNumber: 15\n        }\n      }, t(\"Amount\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 15\n        }\n      }, t(\"Remaining\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1374,\n          columnNumber: 15\n        }\n      }, t(\"Invoice No.\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1375,\n          columnNumber: 15\n        }\n      }, t(\"Exp. Date\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1376,\n          columnNumber: 15\n        }\n      }, t(\"Condition Type\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1377,\n          columnNumber: 15\n        }\n      }, t(\"Use Amount\"))), this.state.prepaidCustomerData.map((selectedPrepaid, index) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.addPrepaid.bind(this, selectedPrepaid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1380,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 17\n        }\n      }, selectedPrepaid.pp_desc), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1386,\n          columnNumber: 17\n        }\n      }, selectedPrepaid.pp_total), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1387,\n          columnNumber: 17\n        }\n      }, selectedPrepaid.remain), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1388,\n          columnNumber: 17\n        }\n      }, selectedPrepaid.prepaid), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1389,\n          columnNumber: 17\n        }\n      }, selectedPrepaid.exp_date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1390,\n          columnNumber: 17\n        }\n      }, selectedPrepaid.conditiontype1), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 17\n        }\n      }, selectedPrepaid.Finaluse_amt)))));\n    } else if (String(isSelectedPaymentType).toUpperCase() == \"POINT\") {\n      console.log(this.state.pointHeader, \"pointHeaderdata\");\n      insideRadioButtonData = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1400,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap py-1 mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1401,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1402,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"fw-600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 15\n        }\n      }, t(\"Customer Class\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1404,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1405,\n          columnNumber: 17\n        }\n      }, this.state.pointHeader.customer_class))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1408,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"fw-600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1409,\n          columnNumber: 15\n        }\n      }, t(\"Customer's Available Points\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1412,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 17\n        }\n      }, this.state.pointHeader.cust_point_value))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"fw-600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1417,\n          columnNumber: 15\n        }\n      }, t(\"Entered Points\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1419,\n          columnNumber: 17\n        }\n      }, this.state.pointHeader.enter_pointamt)))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 17\n        }\n      }, t(\"Currency Value\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 17\n        }\n      }, t(\"Point Value\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1429,\n          columnNumber: 17\n        }\n      }, t(\"Division\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 17\n        }\n      }, t(\"Department\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1431,\n          columnNumber: 17\n        }\n      }, t(\"Brand\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 13\n        }\n      }, this.state.pointData.map((selectedPoint, index) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.addPoint.bind(this, selectedPoint),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 17\n        }\n      }, console.log(selectedPoint, \"pointdatalog\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1442,\n          columnNumber: 19\n        }\n      }, selectedPoint.cur_value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 19\n        }\n      }, selectedPoint.point_value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1445,\n          columnNumber: 19\n        }\n      }, selectedPoint.item_divids_desc), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1446,\n          columnNumber: 19\n        }\n      }, selectedPoint.dept_ids_desc), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1447,\n          columnNumber: 19\n        }\n      }, selectedPoint.brand_ids_desc))))));\n    } else if (isSelectedPaymentType.toUpperCase() == \"CREDIT\") {\n      insideRadioButtonData = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1458,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1459,\n          columnNumber: 15\n        }\n      }, t(\"Credit\"), \" #\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 15\n        }\n      }, t(\"Date\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1461,\n          columnNumber: 15\n        }\n      }, t(\"Amount\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 15\n        }\n      }, t(\"Balance\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 15\n        }\n      }, t(\"Status\"))), this.state.creditNoteCustomerData.map((creditNote, index) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.addCreditNote.bind(this, creditNote),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1466,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 17\n        }\n      }, creditNote.credit_code), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 17\n        }\n      }, creditNote.sa_date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 17\n        }\n      }, creditNote.amount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 17\n        }\n      }, creditNote.balance), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1475,\n          columnNumber: 17\n        }\n      }, creditNote.status)))));\n    } else if (isSelectedPaymentType == \"CARD\") {\n      insideRadioButtonData = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1483,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 15\n        }\n      }, t(\"Select Card\"), /*#__PURE__*/React.createElement(NormalSelect, {\n        placeholder: \"Search type...\",\n        options: paytableData,\n        value: cardField.pay_typeid,\n        name: \"pay_typeid\",\n        onChange: this.handleCreditChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 17\n        }\n      })), this.validator.message(\"cardFieldType\", cardField.pay_typeid, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1503,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1504,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1505,\n          columnNumber: 15\n        }\n      }, t(\"Card No.\"), /*#__PURE__*/React.createElement(NormalInput, {\n        value: cardField.pay_rem1,\n        name: \"pay_rem1\",\n        onChange: this.handleChangeCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1514,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1515,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 15\n        }\n      }, t(\"Name\"), /*#__PURE__*/React.createElement(NormalInput, {\n        value: cardField.pay_rem2,\n        name: \"pay_rem2\",\n        onChange: this.handleChangeCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1527,\n          columnNumber: 15\n        }\n      }, t(\"Exp Month\"), \" / \", t(\"Year\"), /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"mm/YYYY\",\n        value: cardField.pay_rem3,\n        name: \"pay_rem3\",\n        onChange: this.handleChangeCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1529,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1537,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1538,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1539,\n          columnNumber: 15\n        }\n      }, t(\"Approval Code\"), /*#__PURE__*/React.createElement(NormalInput, {\n        value: cardField.App_code,\n        name: \"App_code\",\n        onChange: this.handleChangeCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1541,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1549,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1550,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1551,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: false,\n        className: \"col-12 mt-4 ml-2 btn-outline-success\",\n        label: \"CONFIRM\",\n        onClick: () => this.addCreditCard(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1552,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 15\n        }\n      }))));\n    } else if (isSelectedPaymentType == \"Multiple\") {\n      insideRadioButtonData = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1576,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          height: \"300px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1577,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1578,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1579,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"col-12 fs-15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1580,\n          columnNumber: 17\n        }\n      }, t(\"Choose Option\")), /*#__PURE__*/React.createElement(NormalSelect, {\n        placeholder: \"Search type...\",\n        options: paytableData,\n        value: payTableDropDownValue,\n        name: \"payTableDropDownValue\",\n        onChange: this.handleChangePayTableDropDownValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1581,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1590,\n          columnNumber: 13\n        }\n      }, this.state.imageOnlineModePaymentL ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"border w-50 h-50 d-flex justify-content-center align-items-center\",\n        style: {\n          margin: \"auto\",\n          marginTop: \"10%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1592,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.imgUrl,\n        alt: \"\",\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1596,\n          columnNumber: 19\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"border w-50 h-50 d-flex justify-content-center align-items-center\",\n        style: {\n          margin: \"auto\",\n          marginTop: \"10%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1603,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1607,\n          columnNumber: 19\n        }\n      }, \"QR Code \")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4 col-12 p-1 mx-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1612,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: false,\n        className: \"col-12 submit-btn\",\n        label: \"Continue\" // leftIcon={checkoutIcon}\n        ,\n        onClick: () => this.handleContinueQr({\n          target: {\n            value: this.state.payTableValueAndName.target.value,\n            name: this.state.payTableValueAndName.target.name\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      insideRadioButtonData = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1631,\n          columnNumber: 31\n        }\n      });\n    }\n\n    let payGroupDataContent = [];\n    console.log(payGroupData);\n    payGroupData.forEach((item, i) => {\n      payGroupDataContent.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-4 payment-item cursor-pointer\",\n        style: {\n          width: \"50px\",\n          padding: \"15px\"\n        },\n        key: i,\n        onClick: () => this.addNewPaymentData(item.value, item.label),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1637,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1643,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: helpers.getUrl() + \"media/\" + item.picturelocation,\n        label: item.label,\n        style: {\n          textAlign: \"center\"\n        },\n        width: \"40\",\n        height: \"40\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1644,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          width: \"100px\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1653,\n          columnNumber: 13\n        }\n      }, item.label))));\n    });\n    let {\n      cartId,\n      cartData,\n      tokenDetails\n    } = this.props;\n    console.log(cartId, tokenDetails, this.props.cartData);\n    this.checkTypeOfCartItemContainsDeposit(cartData);\n    let userAddedPayTableData = /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1664,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1665,\n        columnNumber: 9\n      }\n    }, \" \", this.state.selectedCards.map((selectedCards, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1668,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1669,\n        columnNumber: 15\n      }\n    }, this.getPayTableNameBasedOnId(selectedCards.pay_typeid)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"fs-18\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1672,\n        columnNumber: 15\n      }\n    }, selectedCards.pay_amt.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1675,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 p-0 fs-20 cursor-pointer\",\n      onClick: this.removeCards(selectedCards),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1676,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1680,\n        columnNumber: 19\n      }\n    })))))));\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1689,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1690,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1691,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692,\n        columnNumber: 13\n      }\n    }, t(\"Enter Amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1696,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: this.state.txtUserPayAmount,\n      onChange: this.handleChangeTextBox.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1697,\n        columnNumber: 15\n      }\n    }), this.validator.message(\"Amount\", this.state.txtUserPayAmount, \"required|numeric|min:0,num\"), this.validator.message(\"Amount\", this.state.txtUserPayAmount, \"required|numeric|max:\" + this.state.balance + \",num\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1713,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1714,\n        columnNumber: 13\n      }\n    }, t(\"Remark\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1715,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: pay_rem4,\n      name: \"pay_rem4\",\n      onChange: this.handleChangeRemarkBox.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 11\n      }\n    }, is_paymentdate ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1727,\n        columnNumber: 17\n      }\n    }, t(\"Date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1728,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalDate, {\n      value: new Date(DateofPay),\n      name: \"DateofPay\",\n      type: \"date\",\n      onChange: this.handleDatePick,\n      minDate: new Date(MinimumDate),\n      maxDate: new Date(),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1729,\n        columnNumber: 19\n      }\n    }))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1743,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1744,\n        columnNumber: 13\n      }\n    }, isTreatmentDoneButton ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"make-payment mt-3 mr-2 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1746,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-12 fs-15\",\n      label: \"TREATMENT DONE\",\n      onClick: () => this.handleTreatmentDone(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1747,\n        columnNumber: 19\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"make-payment mt-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1755,\n        columnNumber: 15\n      }\n    }, isMakePaymentLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1757,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1758,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1759,\n        columnNumber: 23\n      }\n    }, t(\"Loading...\")))) : this.state.isMakePaymentButtonClicked == \"true\" ? /*#__PURE__*/React.createElement(NormalButton, {\n      submitBtn: true,\n      className: \"col-12\",\n      label: \"Make payment\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1763,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(NormalButton, {\n      submitBtn: true,\n      className: \"col-12\",\n      label: \"Make payment\",\n      onClick: () => this.handleSubmit(),\n      disabled: this.state.selectedCards.length <= 0 || balance > 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1770,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1785,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1786,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1787,\n        columnNumber: 13\n      }\n    }, t(\"Select Payment Method\"))), this.props.tokenDetails.paymentgateway == true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1791,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: true,\n      className: \"col-12\",\n      label: \"payment Gateway\",\n      onClick: this.handlepaymentgateway,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1792,\n        columnNumber: 15\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row paymentGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1802,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1803,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1804,\n        columnNumber: 13\n      }\n    }, payGroupDataContent)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 make-payment-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1806,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1807,\n        columnNumber: 13\n      }\n    }, t(\"List of Selections\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1808,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 mt-1 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1809,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1810,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-7 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1811,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap fs-14\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1812,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1813,\n        columnNumber: 23\n      }\n    }, t(\"Subtotal\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1814,\n        columnNumber: 23\n      }\n    }, \"$ \", responseData.subtotal), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1815,\n        columnNumber: 23\n      }\n    }, t(\"Discount ($)\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1816,\n        columnNumber: 23\n      }\n    }, \"$ \", responseData.discount), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1817,\n        columnNumber: 23\n      }\n    }, t(\"Transac amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1818,\n        columnNumber: 23\n      }\n    }, \"$ \", responseData.trans_amt), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1819,\n        columnNumber: 23\n      }\n    }, t(\"Deposit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1820,\n        columnNumber: 23\n      }\n    }, \"$ \", responseData.deposit_amt), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1821,\n        columnNumber: 23\n      }\n    }, responseData.tax_lable), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1822,\n        columnNumber: 23\n      }\n    }, \"$ \", responseData.tax_amt))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1826,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1827,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 fs-22 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1828,\n        columnNumber: 23\n      }\n    }, t(\"Billing Amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 fs-22 fw-700 text-center text-orenge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1831,\n        columnNumber: 23\n      }\n    }, \"$ \", responseData.billable_amount), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 f-600 text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1834,\n        columnNumber: 23\n      }\n    }, t(\"Balance Amount\"), \": \", Number(balance).toFixed(2))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 mt-2 payment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1842,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1843,\n        columnNumber: 15\n      }\n    }, userAddedPayTableData)))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"payment-modal\",\n      style: {\n        minWidth: \"70%\"\n      },\n      modal: isOpenSubPayment,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1886,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1892,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1898,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 f-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1899,\n        columnNumber: 13\n      }\n    }, displayModelPaymentType)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1901,\n        columnNumber: 11\n      }\n    }), insideRadioButtonData), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"payment-modal\",\n      style: {\n        minWidth: \"30%\"\n      },\n      modal: paymentgateway,\n      handleModal: this.handlepaymentgateway,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1905,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handlepaymentgateway,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1911,\n        columnNumber: 11\n      }\n    }), paymentCompleted ? this.successfullpayment() : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1921,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 order-md-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1922,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Elements, {\n      stripe: stripePromise,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1923,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paymentcheckout, {\n      amount: balance,\n      parentCallback: this.handleCallback,\n      cartId: cartId,\n      cust_id: cust_id,\n      cust_stripeid: cust_stripeid //   token={this.props.tokenDetails}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1924,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  appointmentDetail: state.appointment.appointmentDetail,\n  selected_cstomer: state.common.selected_cstomer,\n  tokenDetails: state.authStore.tokenDetails,\n  CartPaymentDate: state.appointment.CartPaymentDate\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getPayment,\n    getCommonApi,\n    createPayment,\n    updateForm\n  }, dispatch);\n};\n\nexport const Payment = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(MakePaymentClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Cart/cart/payment.js"],"names":["React","Component","NormalInput","NormalTextarea","NormalButton","NormalSelect","NormalDate","NormalModal","NormalDateTime","Button","Form","FormGroup","Label","Input","FormText","getPayment","createPayment","connect","bindActionCreators","history","getCommonApi","updateForm","dateFormat","SimpleReactValidator","closeIcon","helpers","Toast","withTranslation","moment","Paymentcheckout","Elements","loadStripe","isMoment","checkoutIcon","stripePromise","MakePaymentClass","state","formFields","name","contact","address","searchStaff","payTableDropDownValue","responseData","premisesOption","selectedCards","selectedCardsPayAmount","cardOption","ewalletoptions","ewalletField","pay_typeid","pay_amt","credit_debit","cardField","pay_rem1","pay_rem2","pay_rem3","pay_rem4","App_code","balance","errorMessage","prepaidCustomerData","voucherCustomerData","creditNoteCustomerData","pointData","accountHeader","isMakePaymentButtonClicked","isTreatmentDoneButton","itemProductAmount","itemServiceAmount","itemProductServiceVoucherAmount","displayTablePrepaid","displayTableCreditNote","displayTableVoucher","displayTablePoint","paytableData","paytableFullData","payGroupData","selectPaymentGroup","selectPaymentGroupId","isSelectedPaymentType","displayModelPaymentType","txtUserPayAmount","isOpenSubPayment","DateofPay","Date","MinimumDate","is_paymentdate","isMakePaymentLoading","pointHeader","paymentgateway","paymentCompleted","cust_id","cust_stripeid","imageOnlineModePaymentL","payTableValueAndName","target","value","imgUrl","paygroupid","componentWillMount","validator","element","message","autoForceUpdate","id","cartId","cartData","props","then","res","console","log","data","cust_noid","setState","status","prepaid_data","Number","billable_amount","prepaid","product_only","service_only","all_only","stringifiedCartData","map","item","recorddetail","parseFloat","total_price","getDataFromResponses","key","CARD","push","label","pay_description","CASH","handleMultiple","Object","assign","getVoucherData","api","HideVoucherTableData","getPrepaidData","getPrepaidAccountData","itemData","conditiontype1","cust_code","all","exp_status","exp_date","last_update","line_no","pp_amt","pp_bonus","outstanding","pp_no","pp_total","product","remain","sa_date","service","topup_amt","type","use_amt","pp_desc","finalamount","filter","dataitem","prepaid_id","filteritem","deposit","toFixed","HidePrepaidTableData","getCreditNoteAccountData","HideCreditNoteTableData","getPointData","header_data","HidePointTableData","selectedPoint","point","getPayGroup","pay_group_code","picturelocation","getFullPayTable","getPayTableNameBasedOnId","payTableId","test","handleChange","pay_premise","handleChangePayTableDropDownValue","obj","qr_code","alert","handleContinueQr","handleCreditChange","handleTreatmentDone","sa_transacno","handleSubmit","addCreditCard","async","fieldValid","showMessageFor","userPayAmount","checkPayTypeIdAlreadyExists","result","setBalanceToAllTextBoxes","addPoint","selectedPointAmount","useamt","pay_amt_setup","payTypeId","points","cur_value","setdisplayTablePoint","addPrepaid","selectedPrepaid","prepaidExpDate","format","todaysDate","isValid","isSameOrAfter","selectedRemainingPrepaidAmount","prepaid_ct","setdisplayTablePrepaid","addVoucher","selectedVoucher","selectedVoucherAmount","voucher_no","setdisplayTableVoucher","addCreditNote","selectedCreditNote","selectedCreditNoteAmount","credit_code","transaction","setdisplayTableCreditNote","removeCards","idx","array","index","indexOf","splice","removedTerm","items","valueToRemove","filteredItems","addNewPaymentData","selPayTypeId","selPayTypeName","trim","toUpperCase","length","handleDialog","handlepaymentgateway","handleChangeCard","handleDatePick","DatePayment","handleCallback","childData","successfullpayment","componentDidMount","From","firstdayMonth","getFullYear","getMonth","getDate","CartPaymentDate","DateofPayment","handleChangeTextBox","event","handleChangeRemarkBox","val","some","creditNote","voucher","checkTypeOfCartItemContainsDeposit","render","t","insideRadioButtonData","cursor","bind","issued_expiry_date","Finaluse_amt","String","customer_class","cust_point_value","enter_pointamt","point_value","item_divids_desc","dept_ids_desc","brand_ids_desc","amount","height","margin","marginTop","width","payGroupDataContent","forEach","i","padding","getUrl","textAlign","tokenDetails","userAddedPayTableData","subtotal","discount","trans_amt","deposit_amt","tax_lable","tax_amt","minWidth","mapStateToProps","appointmentDetail","appointment","selected_cstomer","common","authStore","mapDispatchToProps","dispatch","Payment"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalInput,\r\n  NormalTextarea,\r\n  NormalButton,\r\n  NormalSelect,\r\n  NormalDate,\r\n  NormalModal,\r\n  NormalDateTime,\r\n} from \"component/common\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { getPayment, createPayment } from \"redux/actions/payment\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { history } from \"helpers\";\r\nimport { getCommonApi, updateForm } from \"redux/actions/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport \"./style.scss\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport helpers from \"../../../../service/Helper\";\r\nimport { Toast } from \"service/toast\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\nimport { Paymentcheckout } from \"./paymentgate\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { isMoment } from \"moment\";\r\nimport checkoutIcon from \"assets/images/checkoutIcon.png\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_GGEOsV78TJcV1OcvWcaH6lnz\");\r\n\r\nexport class MakePaymentClass extends Component {\r\n  state = {\r\n    formFields: {\r\n      name: \"\",\r\n      contact: \"\",\r\n      address: \"\",\r\n      searchStaff: \"\",\r\n      payTableDropDownValue: \"\",\r\n    },\r\n    responseData: {},\r\n\r\n    premisesOption: [],\r\n    selectedCards: [],\r\n    selectedCardsPayAmount: 0,\r\n    cardOption: [],\r\n    ewalletoptions: [],\r\n\r\n    ewalletField: {\r\n      pay_typeid: null,\r\n      pay_amt: \"\",\r\n      credit_debit: true,\r\n    },\r\n    cardField: {\r\n      pay_typeid: null,\r\n      pay_amt: \"\",\r\n      credit_debit: true,\r\n      pay_rem1: \"\",\r\n      pay_rem2: \"\",\r\n      pay_rem3: \"\",\r\n      pay_rem4: \"\",\r\n      App_code: \"\",\r\n    },\r\n    balance: 0,\r\n    errorMessage: \"123\",\r\n    prepaidCustomerData: [],\r\n    voucherCustomerData: [],\r\n    creditNoteCustomerData: [],\r\n    pointData: [],\r\n    accountHeader: [],\r\n    isMakePaymentButtonClicked: \"false\",\r\n    isTreatmentDoneButton: true,\r\n    itemProductAmount: 0,\r\n    itemServiceAmount: 0,\r\n    itemProductServiceVoucherAmount: 0,\r\n    displayTablePrepaid: [],\r\n    displayTableCreditNote: [],\r\n    displayTableVoucher: [],\r\n    displayTablePoint: [],\r\n    paytableData: [],\r\n    paytableFullData: [],\r\n    payGroupData: [],\r\n    selectPaymentGroup: \"\",\r\n    selectPaymentGroupId: \"\",\r\n    isSelectedPaymentType: \"\",\r\n    displayModelPaymentType: \"\",\r\n    txtUserPayAmount: 0,\r\n    isOpenSubPayment: false,\r\n    pay_rem4: \"\",\r\n    DateofPay: new Date(),\r\n    MinimumDate: new Date(),\r\n    is_paymentdate: false,\r\n    isMakePaymentLoading: false,\r\n    pointHeader: [],\r\n    paymentgateway: false,\r\n    paymentCompleted: false,\r\n    cust_id: null,\r\n    cust_stripeid: null,\r\n    imageOnlineModePaymentL: false,\r\n    payTableValueAndName: {\r\n      target: {\r\n        name: \"\",\r\n        value: \"\",\r\n      },\r\n    },\r\n    imgUrl: \"\",\r\n    paygroupid:\"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    let From = new Date();\r\n    let { MinimumDate, DateofPay } = this.state;\r\n    let firstdayMonth = new Date(\r\n      From.getFullYear(),\r\n      From.getMonth() - 6,\r\n      From.getDate() + 1\r\n    );\r\n\r\n    if (\r\n      this.props.CartPaymentDate &&\r\n      this.props.CartPaymentDate[\"DateofPayment\"]\r\n    ) {\r\n      DateofPay = new Date(this.props.CartPaymentDate.DateofPayment);\r\n    } else {\r\n      DateofPay = new Date();\r\n    }\r\n    MinimumDate = firstdayMonth;\r\n    this.setState({\r\n      MinimumDate,\r\n      DateofPay,\r\n    });\r\n    this.getPayment();\r\n    this.getPayGroup();\r\n    this.getFullPayTable();\r\n    this.getPrepaidData();\r\n    this.getCreditNoteAccountData(\"\");\r\n    this.getVoucherData(\"\");\r\n    this.getPointData();\r\n    console.log(\"cartdata From cart\", this.props.cartData);\r\n  }\r\n  componentWillMount = () => {\r\n    this.validator = new SimpleReactValidator({\r\n      element: (message) => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n  };\r\n  // get method for payment detail against appointment\r\n  getPayment = () => {\r\n    let { id, cartId, cartData } = this.props;\r\n    let { cust_id, cust_stripeid } = this.state;\r\n    //id = 82318;\r\n    //cartId = \"ICMD100226\";\r\n    //cartData={\"status\":200,\"message\":\"Listed Succesfully\",\"error\":false,\"data\":[{\"id\":57500,\"cust_noid\":82318,\"customer\":\"test17011\",\"customercode\":\"021427HQ\",\"cart_id\":\"ICHQ100234\",\"cart_date\":\"2021-03-14\",\"cart_status\":\"Inprogress\",\"lineno\":1,\"check\":\"New\",\"itemcodeid\":10067,\"itemdesc\":\"Short - Chin Length(Before Shoulder) 128\",\"quantity\":1,\"price\":\"128.00\",\"total_price\":\"128.00\",\"sitecodeid\":31,\"sitecode_name\":\"HQ OFFICE (DEMO)\",\"sitecode\":\"HQ\",\"discount\":\"0.00\",\"discount_amt\":0,\"discount_price\":\"128.00\",\"additional_discount\":0,\"additional_discountamt\":0,\"deposit\":\"128.00\",\"trans_amt\":\"128.00\",\"tax\":0,\"itemstatus\":null,\"ratio\":\"100.000000000000000\",\"helper_name\":null,\"done_sessions\":null,\"type\":\"Deposit\",\"treatment_account\":null,\"treatment\":null,\"deposit_account\":null,\"prepaid_account\":null,\"item_uom\":null,\"recorddetail\":\"Service\",\"itemtype\":\"SINGLE\",\"item_class\":\"HERBAL TREATMENT\",\"sales_staff\":\"SEQ ADMIN\",\"service_staff\":\"\",\"total_disc\":\"0.00\",\"treatment_name\":\"Short - Chin Length(Before Shoulder) 128  (1)\",\"item_name\":\"Short - Chin Length(Before Shoulder) 128\"}],\"subtotal\":\"128.00\",\"discount\":\"0.00\",\"trans_amt\":\"128.00\",\"deposit_amt\":\"128.00\",\"billable_amount\":\"128.00\"}\r\n    if (id) {\r\n      this.props\r\n        .getPayment(\r\n          `?cart_date=${dateFormat(\r\n            new Date(),\r\n            \"yyyy-mm-dd\"\r\n          )}&cust_noid=${id}&cart_id=${cartId}`\r\n        )\r\n        .then((res) => {\r\n          console.log(\"Payment Details:\", res);\r\n          console.log(res.data.cust_noid);\r\n          cust_id = res.data.cust_noid;\r\n          cust_stripeid = res.data.cust_stripeid;\r\n          this.setState({ cust_id, cust_stripeid });\r\n          let { data, status, prepaid_data } = res;\r\n          if (status === 200) {\r\n            this.setState({\r\n              responseData: data,\r\n              balance: Number(data.billable_amount),\r\n              txtUserPayAmount: Number(data.billable_amount),\r\n              prepaid_data: prepaid_data.prepaid,\r\n              product_only: prepaid_data.product_only,\r\n              service_only: prepaid_data.service_only,\r\n              all_only: prepaid_data.all_only,\r\n              is_paymentdate: data.is_paymentdate,\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    //let {cartData} = this.props;\r\n    let stringifiedCartData = cartData.data;\r\n\r\n    let {\r\n      itemProductAmount,\r\n      itemServiceAmount,\r\n      itemProductServiceVoucherAmount,\r\n    } = this.state;\r\n    if (stringifiedCartData) {\r\n      stringifiedCartData.map((item) => {\r\n        //alert(JSON.stringify(item));\r\n        if (item.recorddetail === \"Product\") {\r\n          itemProductAmount += parseFloat(item.total_price);\r\n        }\r\n        if (item.recorddetail === \"Service\") {\r\n          itemServiceAmount += parseFloat(item.total_price);\r\n          console.log(itemServiceAmount);\r\n          console.log(item.total_price);\r\n        }\r\n        if (\r\n          item.recorddetail === \"Product\" ||\r\n          item.recorddetail === \"Service\" ||\r\n          item.recorddetail === \"Voucher\"\r\n        ) {\r\n          itemProductServiceVoucherAmount += parseFloat(item.total_price);\r\n        }\r\n      });\r\n    }\r\n    this.setState({\r\n      itemProductAmount,\r\n      itemServiceAmount,\r\n      itemProductServiceVoucherAmount,\r\n    });\r\n  };\r\n  // set data to dropdown fields\r\n  getDataFromResponses = (data) => {\r\n    let { cardOption, premisesOption } = this.state;\r\n    for (let key of data.CARD) {\r\n      cardOption.push({ label: key.pay_description, value: key.id });\r\n    }\r\n    for (let key of data.CASH) {\r\n      premisesOption.push({ label: key.pay_description, value: key.id });\r\n    }\r\n    this.setState({\r\n      cardOption,\r\n      premisesOption,\r\n    });\r\n  };\r\n\r\n  handleMultiple = ({ target: { value, name } }) => {\r\n    console.log(\"handleMultiple\", value, name);\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n\r\n    this.setState({\r\n      formFields,\r\n    });\r\n  };\r\n  getVoucherData = (api) => {\r\n    this.props\r\n      .getCommonApi(`voucher/?cust_id=${this.props.id}${api}`)\r\n      .then((key) => {\r\n        let { data } = key;\r\n        let { voucherCustomerData } = this.state;\r\n        voucherCustomerData = data;\r\n        console.log(\"voucherCustomerData\", data);\r\n        // accountHeader = header_data;\r\n        this.setState({ voucherCustomerData }, () => {\r\n          console.log(\"test\");\r\n          this.HideVoucherTableData();\r\n        });\r\n      });\r\n  };\r\n\r\n  getPrepaidData = () => {\r\n    this.getPrepaidAccountData(\"\");\r\n  };\r\n  getPrepaidAccountData = (api) => {\r\n    console.log(\"dd\");\r\n\r\n    this.props\r\n      .getCommonApi(`prepaidacclist/?cust_id=${this.props.id}${api}`)\r\n      .then((key) => {\r\n        let { data } = key;\r\n        let { prepaidCustomerData } = this.state;\r\n        //prepaidCustomerData = data;\r\n        prepaidCustomerData = [];\r\n        console.log(\"prepaidCustomerData\", data);\r\n        for (let item of data) {\r\n          let itemData = {};\r\n          itemData[\"conditiontype1\"] = item.conditiontype1;\r\n          itemData[\"cust_code\"] = item.cust_code;\r\n          itemData[\"all\"] = item.all;\r\n          itemData[\"exp_status\"] = item.exp_status;\r\n          itemData[\"exp_date\"] = item.exp_date;\r\n          itemData[\"last_update\"] = item.last_update;\r\n          itemData[\"line_no\"] = item.line_no;\r\n          itemData[\"id\"] = item.id;\r\n          itemData[\"pp_amt\"] = item.pp_amt;\r\n          itemData[\"pp_bonus\"] = item.pp_bonus;\r\n          itemData[\"outstanding\"] = item.outstanding;\r\n          itemData[\"pp_no\"] = item.pp_no;\r\n          itemData[\"pp_total\"] = item.pp_total;\r\n          itemData[\"prepaid\"] = item.prepaid;\r\n          itemData[\"product\"] = item.product;\r\n          itemData[\"remain\"] = item.remain;\r\n          itemData[\"sa_date\"] = item.sa_date;\r\n          itemData[\"service\"] = item.service;\r\n          itemData[\"topup_amt\"] = item.topup_amt;\r\n          itemData[\"type\"] = item.type;\r\n          itemData[\"use_amt\"] = item.use_amt;\r\n          itemData[\"pp_desc\"] = item.pp_desc;\r\n\r\n          if (item.conditiontype1 === \"Service Only\") {\r\n            if (Number(this.state.service_only) > Number(item.remain)) {\r\n              itemData[\"Finaluse_amt\"] = item.remain;\r\n            } else {\r\n              itemData[\"Finaluse_amt\"] = this.state.service_only;\r\n            }\r\n          }\r\n          if (item.conditiontype1 === \"Product Only\") {\r\n            if (Number(this.state.product_only) > Number(item.remain)) {\r\n              itemData[\"Finaluse_amt\"] = item.remain;\r\n            } else {\r\n              itemData[\"Finaluse_amt\"] = this.state.product_only;\r\n            }\r\n          }\r\n          if (item.conditiontype1 === \"All\") {\r\n            let finalamount = Number(this.state.all_only);\r\n            if (this.state.prepaid_data) {\r\n              this.state.prepaid_data\r\n                .filter((dataitem) => dataitem.prepaid_id == item.id)\r\n                .map((filteritem) => {\r\n                  finalamount =\r\n                    Number(this.state.all_only) - Number(filteritem.deposit);\r\n                });\r\n            }\r\n\r\n            if (Number(finalamount) > Number(item.remain)) {\r\n              itemData[\"Finaluse_amt\"] = Number(item.remain).toFixed(2);\r\n            } else {\r\n              itemData[\"Finaluse_amt\"] = Number(finalamount).toFixed(2);\r\n            }\r\n          }\r\n\r\n          prepaidCustomerData.push(itemData);\r\n        }\r\n        this.setState({ prepaidCustomerData }, () => {\r\n          this.HidePrepaidTableData();\r\n        });\r\n      });\r\n\r\n    // accountHeader = header_data;\r\n  };\r\n  getCreditNoteAccountData = (api) => {\r\n    debugger;\r\n    this.props\r\n      .getCommonApi(`creditnotelist/?cust_id=${this.props.id}${api}`)\r\n      .then((key) => {\r\n        let { data } = key;\r\n        debugger;\r\n        let { creditNoteCustomerData } = this.state;\r\n        creditNoteCustomerData = data;\r\n        this.setState({ creditNoteCustomerData }, () => {\r\n          this.HideCreditNoteTableData();\r\n        });\r\n      });\r\n  };\r\n\r\n  getPointData = () => {\r\n    let { txtUserPayAmount, pointHeader } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `customerpoints/?cust_noid=${this.props.id}&enter_pointamt=${txtUserPayAmount}`\r\n      )\r\n      .then((key) => {\r\n        console.log(key, \"pointdataget\");\r\n        let { data, header_data } = key;\r\n        let { pointData } = this.state;\r\n        pointData = data;\r\n        pointHeader = header_data;\r\n        this.setState({ pointData, pointHeader }, () => {\r\n          this.HidePointTableData();\r\n        });\r\n      });\r\n  };\r\n\r\n  HidePointTableData = () => {\r\n    let { pointData, displayTablePoint } = this.state;\r\n    displayTablePoint.map((item) => {\r\n      var selectedPoint = pointData.filter((point) => point.id != item);\r\n      this.setState({ pointData: selectedPoint });\r\n    });\r\n  };\r\n  getPayGroup = () => {\r\n    this.props.getCommonApi(`paygroup/`).then((res) => {\r\n      let { payGroupData } = this.state;\r\n      for (let key of res.data) {\r\n        payGroupData.push({\r\n          label: key.pay_group_code,\r\n          value: key.id,\r\n          picturelocation: key.picturelocation,\r\n        });\r\n      }\r\n      this.setState({\r\n        payGroupData,\r\n      });\r\n    });\r\n  };\r\n  getFullPayTable = () => {\r\n    this.props.getCommonApi(`paytablenew/`).then((res) => {\r\n      console.log(res, \"paytablefulldata\");\r\n      let { paytableFullData } = this.state;\r\n      paytableFullData = res.data;\r\n      this.setState({\r\n        paytableFullData,\r\n      });\r\n    });\r\n  };\r\n\r\n  getPayTableNameBasedOnId = (payTableId) => {\r\n    // gt_group: \"GT1\"\r\n    // id: 6\r\n    // pay_code: \"UOBPN\"\r\n    // pay_description: \"UOB PAYNOW\"\r\n    // pay_group_name: \"UOB\"\r\n    // pay_groupid: 22\r\n    let { paytableFullData } = this.state;\r\n    // if (\r\n    //   isSelectedPaymentType == \"VOUCHER\" ||\r\n    //   isSelectedPaymentType == \"PREPAID\" ||\r\n    //   isSelectedPaymentType == \"Credit\" ||\r\n    //   isSelectedPaymentType == \"OLD BILL\"\r\n    // ) {\r\n    //   const test = paytableFullData.filter(\r\n    //     res => res.pay_group_name.trim() == isSelectedPaymentType.trim()\r\n    //   );\r\n    //   return test[0].pay_description;\r\n    // } else {\r\n    const test = paytableFullData.filter((res) => res.id == payTableId);\r\n    return test[0].pay_description;\r\n    // }\r\n  };\r\n\r\n  handleChangeTextBox(event) {\r\n    this.setState({\r\n      txtUserPayAmount: event.target.value,\r\n    });\r\n  }\r\n  handleChangeRemarkBox(event) {\r\n    this.setState({\r\n      pay_rem4: event.target.value,\r\n    });\r\n  }\r\n  handleChange = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n    this.setState({\r\n      formFields,\r\n    });\r\n    let { balance, selectedCards, txtUserPayAmount, isOpenSubPayment } =\r\n      this.state;\r\n    isOpenSubPayment = false;\r\n    selectedCards.push({\r\n      pay_typeid: value,\r\n      pay_amt: parseFloat(txtUserPayAmount),\r\n      credit_debit: false,\r\n      pay_premise: true,\r\n      prepaid: false,\r\n      pay_rem4: this.state.pay_rem4,\r\n    });\r\n    balance = parseFloat(balance - txtUserPayAmount).toFixed(2);\r\n    txtUserPayAmount = balance;\r\n    this.setState({ txtUserPayAmount, balance, isOpenSubPayment });\r\n  };\r\n  handleChangePayTableDropDownValue = ({ target: { value, name } }) => {\r\n    this.props.getCommonApi(`paytablenew/?paygroupid=${this.state.paygroupid}`).then((res) => {\r\n      console.log(res);\r\n\r\n      if (res.status == 200) {\r\n        const obj = res.data.filter((item) => item.id == value);\r\n        console.log(obj);\r\n        if (obj[0].qr_code == null) {\r\n          this.setState({ imgUrl: \"\" });\r\n          this.setState({ imageOnlineModePaymentL: false });\r\n          alert(\"No Qr Code to Show\");\r\n        } else {\r\n          this.setState({ imgUrl: obj[0].qr_code });\r\n        }\r\n      }\r\n    });\r\n    this.setState({ imageOnlineModePaymentL: true });\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n    this.setState({\r\n      formFields,\r\n    });\r\n    this.setState({\r\n      payTableValueAndName: {\r\n        target: {\r\n          name: name,\r\n          value: value,\r\n        },\r\n      },\r\n    });\r\n    console.log(\"name\", name, \" value\", value);\r\n  };\r\n  handleContinueQr = ({ target: { value, name } }) => {\r\n    let formFields = Object.assign({}, this.state.formFields);\r\n\r\n    formFields[name] = value;\r\n    this.setState({\r\n      formFields,\r\n    });\r\n    let { balance, selectedCards, txtUserPayAmount, isOpenSubPayment } =\r\n      this.state;\r\n    isOpenSubPayment = false;\r\n    selectedCards.push({\r\n      pay_typeid: value,\r\n      pay_amt: parseFloat(txtUserPayAmount),\r\n      credit_debit: false,\r\n      pay_premise: true,\r\n      prepaid: false,\r\n      pay_rem4: this.state.pay_rem4,\r\n    });\r\n    balance = parseFloat(balance - txtUserPayAmount).toFixed(2);\r\n    txtUserPayAmount = balance;\r\n    this.setState({ txtUserPayAmount, balance, isOpenSubPayment });\r\n    this.setState({\r\n      payTableValueAndName: {\r\n        target: {\r\n          name: \"\",\r\n          value: \"\",\r\n        },\r\n      },\r\n    });\r\n  };\r\n  handleCreditChange = ({ target: { value, name } }) => {\r\n    let cardField = Object.assign({}, this.state.cardField);\r\n\r\n    cardField[name] = value;\r\n    this.setState({\r\n      cardField,\r\n    });\r\n  };\r\n  handleTreatmentDone = () => {\r\n    let { selectedCards, DateofPay } = this.state;\r\n    selectedCards.push({\r\n      pay_typeid: 2,\r\n      pay_amt: 0,\r\n      credit_debit: false,\r\n      pay_premise: true,\r\n      prepaid: false,\r\n      pay_rem4: this.state.pay_rem4,\r\n    });\r\n    let data = selectedCards;\r\n\r\n    let { id, cartId } = this.props;\r\n    this.props\r\n      .createPayment(\r\n        `?cart_date=${dateFormat(\r\n          new Date(),\r\n          \"yyyy-mm-dd\"\r\n        )}&cust_noid=${id}&cart_id=${cartId}&pay_date=${dateFormat(\r\n          new Date(DateofPay),\r\n          \"yyyy-mm-dd\"\r\n        )}`,\r\n        data\r\n      )\r\n      .then((res) => {\r\n        history.push(`/admin/billing/print/bill/${res.data.sa_transacno}`);\r\n      });\r\n  };\r\n  // create payment detail\r\n  handleSubmit = () => {\r\n    let { selectedCards, DateofPay } = this.state;\r\n\r\n    let data = selectedCards;\r\n    console.log(\"SubmitDatapayment\", data);\r\n    let { id, cartId } = this.props;\r\n    this.props\r\n      .createPayment(\r\n        `?cart_date=${dateFormat(\r\n          new Date(),\r\n          \"yyyy-mm-dd\"\r\n        )}&cust_noid=${id}&cart_id=${cartId}&pay_date=${dateFormat(\r\n          new Date(DateofPay),\r\n          \"yyyy-mm-dd\"\r\n        )}`,\r\n        data\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          isMakePaymentLoading: false,\r\n        });\r\n        history.push(`/admin/billing/print/bill/${res.data.sa_transacno}`);\r\n      });\r\n    this.setState({\r\n      isMakePaymentLoading: false,\r\n    });\r\n  };\r\n  checkPayTypeIdAlreadyExists(val) {\r\n    return this.state.selectedCards.some((item) => val === item.pay_typeid);\r\n  }\r\n  addCreditCard = (async) => {\r\n    if (!this.validator.fieldValid(\"cardFieldType\")) {\r\n      this.validator.showMessageFor(\"cardFieldType\");\r\n      return;\r\n    }\r\n\r\n    let { cardField, selectedCards, balance, responseData, txtUserPayAmount } =\r\n      this.state;\r\n    let userPayAmount = parseFloat(txtUserPayAmount);\r\n    if (parseFloat(this.state.responseData.billable_amount) > 0) {\r\n      if (userPayAmount == 0) {\r\n        return;\r\n      }\r\n    }\r\n    if (this.checkPayTypeIdAlreadyExists(cardField.pay_typeid)) {\r\n      let result =\r\n        this.getPayTableNameBasedOnId(cardField.pay_typeid) + \" already exists\";\r\n      Toast({\r\n        type: \"error\",\r\n        message: result,\r\n      });\r\n      return;\r\n    } else {\r\n      selectedCards.push({\r\n        pay_typeid: cardField.pay_typeid,\r\n        pay_amt: userPayAmount,\r\n        credit_debit: true,\r\n        pay_premise: false,\r\n        pay_rem1: cardField.pay_rem1,\r\n        pay_rem2: cardField.pay_rem2,\r\n        pay_rem3: cardField.pay_rem3,\r\n        pay_rem4: this.state.pay_rem4,\r\n        prepaid: false,\r\n      });\r\n    }\r\n\r\n    balance = parseFloat(balance - userPayAmount).toFixed(2);\r\n    this.setState({ isOpenSubPayment: false });\r\n    this.setBalanceToAllTextBoxes(balance);\r\n  };\r\n  addPoint = (selectedPoint) => {\r\n    let {\r\n      balance,\r\n      txtUserPayAmount,\r\n      isOpenSubPayment,\r\n      selectedCards,\r\n      pay_rem4,\r\n    } = this.state;\r\n    if (txtUserPayAmount == 0) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Point is not allowed\",\r\n      });\r\n      return;\r\n    }\r\n    const selectedPointAmount = parseFloat(selectedPoint.useamt);\r\n    let pay_amt_setup = 0;\r\n    if (selectedPointAmount <= parseFloat(txtUserPayAmount)) {\r\n      pay_amt_setup = selectedPointAmount;\r\n    } else {\r\n      pay_amt_setup = txtUserPayAmount;\r\n    }\r\n    // if (selectedPointAmount <= parseFloat(txtUserPayAmount)) {\r\n    //   pay_amt_setup = selectedPointAmount;\r\n    // } else {\r\n    //   Toast({\r\n    //     type: \"error\",\r\n    //     message: \"Partial Amount is not applicable in Point\",\r\n    //   });\r\n    //   return;\r\n    // }\r\n    const payTypeId = 25;\r\n    //const payTypeId = 23; //normal twoherbs\r\n    //const payTypeId = 19; //healspa sensuous beauty21 appleskin jybeauty\r\n    //const payTypeId = 7; //skinsoul\r\n    //const payTypeId = 8; //glamour koiskin quantum\r\n    //const payTypeId = 9; //beskin citibella tnc ingenious\r\n    //const payTypeId = 35; //marma\r\n\r\n    selectedCards.push({\r\n      pay_typeid: payTypeId,\r\n      pay_amt: parseFloat(pay_amt_setup),\r\n      pay_premise: false,\r\n      prepaid: false,\r\n      credit_debit: false,\r\n      points: true,\r\n      cur_value: selectedPoint.cur_value,\r\n      pay_rem4: pay_rem4,\r\n      pay_rem2: selectedPoint.id,\r\n    });\r\n\r\n    console.log(\"BeforeAdd-displayTableVoucher\", this.state.displayTablePoint);\r\n    let setdisplayTablePoint = this.state.displayTablePoint;\r\n    setdisplayTablePoint.push(selectedPoint.id);\r\n    this.setState({ displayTablePoint: setdisplayTablePoint });\r\n    console.log(\"AfterAdd-displayTablePoint\", this.state.displayTablePoint);\r\n    this.HidePointTableData();\r\n\r\n    balance = parseFloat(balance - pay_amt_setup).toFixed(2);\r\n    this.setState({ isOpenSubPayment: false });\r\n    this.setBalanceToAllTextBoxes(balance);\r\n  };\r\n\r\n  addPrepaid = (selectedPrepaid) => {\r\n    const prepaidExpDate = moment(selectedPrepaid.exp_date).format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const todaysDate = moment(new Date()).format(\"YYYY-MM-DD\");\r\n    const isValid = moment(todaysDate).isSameOrAfter(prepaidExpDate);\r\n    let userPayAmount = 0;\r\n    let {\r\n      itemServiceAmount,\r\n      itemProductAmount,\r\n      itemProductServiceVoucherAmount,\r\n      txtUserPayAmount,\r\n    } = this.state;\r\n    console.log(txtUserPayAmount);\r\n    userPayAmount = parseFloat(txtUserPayAmount);\r\n    if (isValid) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Check Expiry Date\",\r\n      });\r\n      return;\r\n    }\r\n    if (userPayAmount <= 0) {\r\n      // alert(\"hi\");\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Prepaid is Not allowed\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let selectedRemainingPrepaidAmount = parseFloat(selectedPrepaid.remain);\r\n\r\n    if (selectedRemainingPrepaidAmount < userPayAmount) {\r\n      //return\r\n    } else if (selectedRemainingPrepaidAmount > userPayAmount) {\r\n      selectedRemainingPrepaidAmount = parseFloat(userPayAmount);\r\n    }\r\n    /*\r\n    if (!this.validator.fieldValid(\"PrepaidBalanceAmount\")) {\r\n      this.validator.showMessageFor(\"PrepaidBalanceAmount\");\r\n      return;\r\n    }\r\n    if (!this.validator.fieldValid(\"PrepaidBalanceAmount\")) {\r\n      this.validator.showMessageFor(\"PrepaidBalanceAmount\");\r\n      return;\r\n    }\r\n*/\r\n    if (selectedPrepaid.conditiontype1 === \"Service Only\") {\r\n      //For Service\r\n      if (parseFloat(itemServiceAmount) == 0) {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Prepaid is Not allowed\",\r\n        });\r\n        return;\r\n      }\r\n      if (parseFloat(itemServiceAmount) <= selectedRemainingPrepaidAmount) {\r\n        userPayAmount =\r\n          parseFloat(txtUserPayAmount) < parseFloat(itemServiceAmount)\r\n            ? parseFloat(txtUserPayAmount)\r\n            : parseFloat(itemServiceAmount);\r\n        console.log(itemServiceAmount);\r\n        console.log(userPayAmount);\r\n      } else {\r\n        userPayAmount = selectedRemainingPrepaidAmount;\r\n        console.log(userPayAmount);\r\n      }\r\n      itemServiceAmount = itemServiceAmount - userPayAmount;\r\n      this.setState({ itemServiceAmount });\r\n    } else if (selectedPrepaid.conditiontype1 === \"Product Only\") {\r\n      //For Product\r\n      if (parseFloat(itemProductAmount) == 0) {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Prepaid is not allowed\",\r\n        });\r\n        return;\r\n      }\r\n      if (parseFloat(itemProductAmount) <= selectedRemainingPrepaidAmount) {\r\n        userPayAmount =\r\n          parseFloat(txtUserPayAmount) < parseFloat(itemProductAmount)\r\n            ? parseFloat(txtUserPayAmount)\r\n            : parseFloat(itemProductAmount);\r\n        console.log(userPayAmount);\r\n      } else {\r\n        userPayAmount = selectedRemainingPrepaidAmount;\r\n        console.log(userPayAmount);\r\n      }\r\n      itemProductAmount = itemProductAmount - userPayAmount;\r\n      this.setState({ itemProductAmount });\r\n    } else {\r\n      if (parseFloat(itemProductServiceVoucherAmount) == 0) {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Prepaid is not allowed\",\r\n        });\r\n        return;\r\n      }\r\n      if (\r\n        parseFloat(itemProductServiceVoucherAmount) <=\r\n        selectedRemainingPrepaidAmount\r\n      ) {\r\n        userPayAmount =\r\n          parseFloat(txtUserPayAmount) <\r\n          parseFloat(itemProductServiceVoucherAmount)\r\n            ? parseFloat(txtUserPayAmount)\r\n            : parseFloat(itemProductServiceVoucherAmount);\r\n        console.log(userPayAmount);\r\n      } else {\r\n        userPayAmount = selectedRemainingPrepaidAmount;\r\n        console.log(userPayAmount);\r\n      }\r\n      itemProductServiceVoucherAmount =\r\n        itemProductServiceVoucherAmount - userPayAmount;\r\n      this.setState({ itemProductServiceVoucherAmount });\r\n    }\r\n    if (userPayAmount == 0) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Prepaid is not allowed\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    //const payTypeId = 23; //normal twoherbs\r\n    //const payTypeId = 19; //healspa sensuous beauty21 appleskin jybeauty\r\n    //const payTypeId = 7; //skinsoul\r\n    //const payTypeId = 8; //glamour koiskin quantum\r\n    const payTypeId = 9; //beskin citibella tnc ingenious\r\n    //const payTypeId = 35; //marma\r\n\r\n    let { cardField, ewalletField, balance, selectedCards, isOpenSubPayment } =\r\n      this.state;\r\n\r\n    selectedCards.push({\r\n      pay_typeid: payTypeId,\r\n      prepaid: true,\r\n      pay_amt: userPayAmount,\r\n      credit_debit: false,\r\n      pay_premise: false,\r\n      pay_rem1:\r\n        selectedPrepaid.pp_no +\r\n        \" - \" +\r\n        selectedPrepaid.line_no +\r\n        \" - \" +\r\n        selectedPrepaid.pp_desc,\r\n      pay_rem2: selectedPrepaid.id,\r\n      pay_rem4: this.state.pay_rem4,\r\n      prepaid_ct: selectedPrepaid.conditiontype1,\r\n    });\r\n    console.log(\r\n      \"BeforeAdd-displayTablePrepaid\",\r\n      this.state.displayTablePrepaid\r\n    );\r\n    let setdisplayTablePrepaid = this.state.displayTablePrepaid;\r\n    setdisplayTablePrepaid.push(selectedPrepaid.id);\r\n    this.setState({ displayTablePrepaid: setdisplayTablePrepaid });\r\n    console.log(\"AfterAdd-displayTablePrepaid\", this.state.displayTablePrepaid);\r\n    this.HidePrepaidTableData();\r\n\r\n    balance = parseFloat(balance - userPayAmount).toFixed(2);\r\n    this.setBalanceToAllTextBoxes(balance);\r\n    console.log(balance);\r\n    this.setState({ isOpenSubPayment: false });\r\n  };\r\n  HidePrepaidTableData() {\r\n    let { prepaidCustomerData, displayTablePrepaid } = this.state;\r\n    displayTablePrepaid.map((item) => {\r\n      var selectedPrepaid = prepaidCustomerData.filter(\r\n        (prepaid) => prepaid.id != item\r\n      );\r\n      this.setState({ prepaidCustomerData: selectedPrepaid });\r\n    });\r\n  }\r\n  HideCreditNoteTableData() {\r\n    let { creditNoteCustomerData, displayTableCreditNote } = this.state;\r\n\r\n    displayTableCreditNote.map((item) => {\r\n      let selectedCreditNote = creditNoteCustomerData.filter(\r\n        (creditNote) => creditNote.credit_code != item\r\n      );\r\n\r\n      console.log(selectedCreditNote, \"selectedCreditnote\");\r\n      this.setState({ creditNoteCustomerData: selectedCreditNote });\r\n    });\r\n  }\r\n  HideVoucherTableData() {\r\n    let { voucherCustomerData, displayTableVoucher } = this.state;\r\n    displayTableVoucher.map((item) => {\r\n      var selectedVoucher = voucherCustomerData.filter(\r\n        (voucher) => voucher.voucher_no != item\r\n      );\r\n      this.setState({ voucherCustomerData: selectedVoucher });\r\n    });\r\n  }\r\n  addVoucher = (selectedVoucher) => {\r\n    let {\r\n      cardField,\r\n      ewalletField,\r\n      balance,\r\n      txtUserPayAmount,\r\n      isOpenSubPayment,\r\n      selectedCards,\r\n    } = this.state;\r\n    if (txtUserPayAmount == 0) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Voucher is not allowed\",\r\n      });\r\n      return;\r\n    }\r\n    const selectedVoucherAmount = parseFloat(selectedVoucher.value);\r\n    let pay_amt_setup = 0;\r\n    if (selectedVoucherAmount <= parseFloat(txtUserPayAmount)) {\r\n      pay_amt_setup = selectedVoucherAmount;\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Partial Amount is not applicable in voucher\",\r\n      });\r\n      return;\r\n      // alert(\"Partial Amount is not applicable in voucher\");\r\n      // return;\r\n    }\r\n    //const payTypeId = 9; //normal\r\n    //const payTypeId = 8; //healspa sens beauty21 appleskin marmaclinic jybeauty\r\n    //const payTypeId = 25; //twoherbs koiskin ingenious\r\n    //const payTypeId = 3; //urbanspa\r\n    //const payTypeId = 4; //glamour citibella skinsoul quantum\r\n    const payTypeId = 5; //beskin tnc\r\n\r\n    selectedCards.push({\r\n      pay_typeid: payTypeId,\r\n      prepaid: false,\r\n      pay_amt: parseFloat(pay_amt_setup),\r\n      credit_debit: false,\r\n      pay_premise: false,\r\n      pay_rem1: selectedVoucher.voucher_no,\r\n      pay_rem2: selectedVoucher.voucher_no,\r\n      pay_rem4: this.state.pay_rem4,\r\n    });\r\n    console.log(\r\n      \"BeforeAdd-displayTableVoucher\",\r\n      this.state.displayTableVoucher\r\n    );\r\n    let setdisplayTableVoucher = this.state.displayTableVoucher;\r\n    setdisplayTableVoucher.push(selectedVoucher.voucher_no);\r\n    this.setState({ displayTableVoucher: setdisplayTableVoucher });\r\n    console.log(\r\n      \"AfterAdd-displayTableCreditNote\",\r\n      this.state.displayTableVoucher\r\n    );\r\n    this.HideVoucherTableData();\r\n\r\n    balance = parseFloat(balance - pay_amt_setup).toFixed(2);\r\n    this.setState({ isOpenSubPayment: false });\r\n    this.setBalanceToAllTextBoxes(balance);\r\n  };\r\n  addCreditNote = (selectedCreditNote) => {\r\n    console.log(selectedCreditNote);\r\n    let { cardField, ewalletField, balance, txtUserPayAmount, selectedCards } =\r\n      this.state;\r\n    if (txtUserPayAmount == 0) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Credit Note is not allowed\",\r\n      });\r\n      return;\r\n    }\r\n    const selectedCreditNoteAmount = parseFloat(selectedCreditNote.balance);\r\n    console.log(selectedCreditNoteAmount);\r\n    let pay_amt_setup = 0;\r\n    if (selectedCreditNoteAmount <= parseFloat(txtUserPayAmount)) {\r\n      pay_amt_setup = selectedCreditNoteAmount;\r\n    } else {\r\n      pay_amt_setup = txtUserPayAmount;\r\n    }\r\n    //const payTypeId = 17; //normal\r\n    //const payTypeId = 24; //twoherbs\r\n    //const payTypeId = 12; //healspa sens beauty21 appleskin citibella marma jybeauty\r\n    //const payTypeId = 5; //glamour skinsoul koiskin quantum\r\n    const payTypeId = 6; //beskin tnc ingenious\r\n\r\n    selectedCards.push({\r\n      pay_typeid: payTypeId,\r\n      prepaid: false,\r\n      pay_amt: parseFloat(pay_amt_setup),\r\n      credit_debit: false,\r\n      pay_premise: false,\r\n      pay_rem1: selectedCreditNote.credit_code,\r\n      pay_rem2: selectedCreditNote.transaction,\r\n      pay_rem4: this.state.pay_rem4,\r\n    });\r\n    console.log(\r\n      \"BeforeAdd-displayTableCreditNote\",\r\n      this.state.displayTableCreditNote\r\n    );\r\n    let setdisplayTableCreditNote = this.state.displayTableCreditNote;\r\n    setdisplayTableCreditNote.push(selectedCreditNote.credit_code);\r\n    this.setState({ displayTableCreditNote: setdisplayTableCreditNote });\r\n    console.log(\r\n      \"AfterAdd-displayTableCreditNote\",\r\n      this.state.displayTableCreditNote\r\n    );\r\n    this.HideCreditNoteTableData();\r\n\r\n    balance = parseFloat(balance - pay_amt_setup).toFixed(2);\r\n    this.setState({ isOpenSubPayment: false });\r\n    this.setBalanceToAllTextBoxes(balance);\r\n  };\r\n\r\n  setBalanceToAllTextBoxes(balance) {\r\n    this.setState({\r\n      balance: balance,\r\n      txtUserPayAmount: balance,\r\n    });\r\n  }\r\n  removeCards = (idx) => () => {\r\n    let {\r\n      selectedCards,\r\n      balance,\r\n      cardField,\r\n      ewalletField,\r\n      itemProductServiceVoucherAmount,\r\n      itemProductAmount,\r\n      itemServiceAmount,\r\n    } = this.state;\r\n    this.setState({ isMakePaymentButtonClicked: \"false\" });\r\n    balance = parseFloat(balance) + parseFloat(idx.pay_amt);\r\n    var array = [...selectedCards]; // make a separate copy of the array\r\n    var index = array.indexOf(idx);\r\n    //if (idx.pay_typeid == 23) { //normal twoherbs\r\n    //if (idx.pay_typeid == 19) { //healspa sens beauty21 appleskin jybeauty\r\n    // if (idx.pay_typeid == 35) { //marmaclinic\r\n    //if (idx.pay_typeid == 7) { //skinsoul\r\n    //if (idx.pay_typeid == 8) { //glamour koiskin quantum\r\n    if (idx.pay_typeid == 9) {\r\n      //beskin citibella tnc ingenious\r\n      if (idx.prepaid_ct == \"Product Only\") {\r\n        itemProductAmount = itemProductAmount + idx.pay_amt;\r\n      } else if (idx.prepaid_ct == \"Service Only\") {\r\n        itemServiceAmount = itemServiceAmount + idx.pay_amt;\r\n      } else {\r\n        itemProductServiceVoucherAmount =\r\n          itemProductServiceVoucherAmount + idx.pay_amt;\r\n      }\r\n      this.setState({\r\n        itemProductServiceVoucherAmount,\r\n        itemProductAmount,\r\n        itemServiceAmount,\r\n      });\r\n    }\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ selectedCards: array, balance });\r\n    }\r\n    //console.log(\"idx\", idx);\r\n    var removedTerm = idx.pay_typeid;\r\n    //console.log(\"removedTerm\", removedTerm);\r\n    //console.log(\"idx.pay_rem2\", idx.pay_rem2);\r\n    //if (removedTerm == \"23\") { //normal twoherbs\r\n    //if (removedTerm == \"19\") { //healspa sens beauty21 appleskin jybeauty\r\n    //if (removedTerm == \"35\") { //marma\r\n    //if (removedTerm == \"7\") { //skinsoul\r\n    //if (removedTerm == \"8\") { //glamour koiskin quantum\r\n    if (removedTerm == \"9\") {\r\n      //beskin citibella tnc ingenious\r\n      const items = this.state.displayTablePrepaid;\r\n      console.log(\"BeforeRemove-displayTablePrepaid\", items);\r\n      const valueToRemove = idx.pay_rem2; //For Prepaid Ony we have added unique id here\r\n      console.log(\"BeforeRemove-valueToRemove\", valueToRemove);\r\n      const filteredItems = items.filter((item) => item !== valueToRemove);\r\n      this.setState({ displayTablePrepaid: filteredItems }, () => {\r\n        console.log(\r\n          \"AfterRemove-displayTablePrepaid\",\r\n          this.state.displayTablePrepaid\r\n        );\r\n      });\r\n      this.getPrepaidAccountData(\"\");\r\n      // this.HidePrepaidTableData();\r\n    }\r\n    //if (removedTerm == \"17\") { //normal\r\n    //if (removedTerm == \"24\") { //twoherbs\r\n    //if (removedTerm == \"12\") { //healspa sens beauty21 appleskin citibella marma jybeauty\r\n    //if (removedTerm == \"5\") { //glamour skinsoul koiskin quantum\r\n    if (removedTerm == \"6\") {\r\n      //beskin tnc ingenious\r\n      const items = this.state.displayTableCreditNote;\r\n      console.log(\"BeforeRemove-displayTableCreditNote\", items);\r\n      const valueToRemove = idx.pay_rem1; //For Credit Note Ony we have added unique id here\r\n      console.log(\"BeforeRemove-valueToRemove\", valueToRemove);\r\n      const filteredItems = items.filter((item) => item !== valueToRemove);\r\n      this.setState({ displayTableCreditNote: filteredItems }, () => {\r\n        console.log(\r\n          \"AfterRemove-displayTableCreditNote\",\r\n          this.state.displayTableCreditNote\r\n        );\r\n      });\r\n      this.getCreditNoteAccountData(\"\");\r\n      // this.HidePrepaidTableData();\r\n    }\r\n\r\n    //if (removedTerm == \"9\") { //normal\r\n    //if (removedTerm == \"25\") { //twoherbs koiskin ingenious\r\n    //if (removedTerm == \"8\") { //healspa sens beauty21 appleskin marma jybeauty\r\n    //if (removedTerm == \"4\") { //glamour citibella skinsoul quantum\r\n    if (removedTerm == \"5\") {\r\n      //beskin tnc\r\n      const items = this.state.displayTableVoucher;\r\n      console.log(\"BeforeRemove-displayTableVoucher\", items);\r\n      const valueToRemove = idx.pay_rem1; //For Credit Note Ony we have added unique id here\r\n      console.log(\"BeforeRemove-valueToRemove\", valueToRemove);\r\n      const filteredItems = items.filter((item) => item !== valueToRemove);\r\n      this.setState({ displayTableVoucher: filteredItems }, () => {\r\n        console.log(\r\n          \"AfterRemove-displayTableVoucher\",\r\n          this.state.displayTableVoucher\r\n        );\r\n      });\r\n      this.getVoucherData(\"\");\r\n    }\r\n\r\n    if (removedTerm == \"25\") {\r\n      const items = this.state.displayTablePoint;\r\n      console.log(\"BeforeRemove-displayTablePoint\", items);\r\n      const valueToRemove = idx.pay_rem2; //For Prepaid Ony we have added unique id here\r\n      console.log(\"BeforeRemove-valueToRemove\", valueToRemove);\r\n      const filteredItems = items.filter((item) => item !== valueToRemove);\r\n      this.setState({ displayTablePoint: filteredItems }, () => {\r\n        console.log(\r\n          \"AfterRemove-displayTablePoint\",\r\n          this.state.displayTablePoint\r\n        );\r\n      });\r\n      this.getPointData();\r\n      // this.HidePrepaidTableData();\r\n    }\r\n    cardField[\"pay_amt\"] = balance;\r\n    ewalletField[\"pay_amt\"] = balance;\r\n    this.setBalanceToAllTextBoxes(balance);\r\n  };\r\n  checkTypeOfCartItemContainsDeposit(cartData) {\r\n    let stringifiedCartData = cartData.data;\r\n    if (stringifiedCartData) {\r\n      stringifiedCartData.map((item) => {\r\n        if (item.type === \"Deposit\" || item.type === \"Top Up\") {\r\n          this.state.isTreatmentDoneButton = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  addNewPaymentData = async (selPayTypeId, selPayTypeName) => {\r\n    if (!this.validator.fieldValid(\"Amount\")) {\r\n      this.validator.showMessageFor(\"Amount\");\r\n      return;\r\n    }\r\n    if (!this.validator.fieldValid(\"Amount\")) {\r\n      this.validator.showMessageFor(\"Amount\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      isSelectedPaymentType: selPayTypeName.trim(),\r\n    });\r\n    this.setState({paygroupid:selPayTypeId})\r\n    this.props\r\n      .getCommonApi(`paytablenew/?paygroupid=${selPayTypeId}`)\r\n      .then((res) => {\r\n        this.setState({\r\n          paytableData: [],\r\n        });\r\n        let { paytableData, isSelectedPaymentType, displayModelPaymentType } =\r\n          this.state;\r\n        isSelectedPaymentType = selPayTypeName.trim().toUpperCase();\r\n        displayModelPaymentType = selPayTypeName.trim().toUpperCase();\r\n        for (let key of res.data) {\r\n          paytableData.push({ label: key.pay_description, value: key.id });\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            paytableData,\r\n          },\r\n          () => {\r\n            let { isOpenSubPayment } = this.state;\r\n            if (paytableData.length == 0) {\r\n              Toast({\r\n                type: \"error\",\r\n                message: \"Pay Table Not Exists\",\r\n              });\r\n              return;\r\n            } else if (selPayTypeName.trim().toUpperCase() === \"VOUCHER\") {\r\n              isOpenSubPayment = true;\r\n            } else if (selPayTypeName.trim().toUpperCase() === \"POINT\") {\r\n              isOpenSubPayment = true;\r\n            } else if (selPayTypeName.trim().toUpperCase() === \"PREPAID\") {\r\n              isOpenSubPayment = true;\r\n            } else if (selPayTypeName.trim().toUpperCase() === \"CREDIT\") {\r\n              isOpenSubPayment = true;\r\n            } else if (selPayTypeName.trim().toUpperCase() === \"CARD\") {\r\n              isOpenSubPayment = true;\r\n            } else if (paytableData.length == 1) {\r\n              isOpenSubPayment = false;\r\n              let payTypeId = paytableData[0].value;\r\n              let { balance, selectedCards, txtUserPayAmount } = this.state;\r\n              if (parseFloat(this.state.responseData.billable_amount) > 0) {\r\n                if (parseFloat(txtUserPayAmount) == 0) {\r\n                  return;\r\n                }\r\n              }\r\n              if (this.checkPayTypeIdAlreadyExists(payTypeId)) {\r\n                let result =\r\n                  this.getPayTableNameBasedOnId(payTypeId) + \" already exists\";\r\n                Toast({\r\n                  type: \"error\",\r\n                  message: result,\r\n                });\r\n\r\n                return;\r\n              } else {\r\n                selectedCards.push({\r\n                  pay_typeid: payTypeId,\r\n                  pay_amt: parseFloat(txtUserPayAmount),\r\n                  credit_debit: false,\r\n                  pay_premise: true,\r\n                  prepaid: false,\r\n                  pay_rem4: this.state.pay_rem4,\r\n                });\r\n                balance = parseFloat(balance - txtUserPayAmount).toFixed(2);\r\n                txtUserPayAmount = balance;\r\n                this.setState({ txtUserPayAmount, balance });\r\n                return;\r\n              }\r\n            } else if (paytableData.length >= 1) {\r\n              isOpenSubPayment = true;\r\n              isSelectedPaymentType = \"Multiple\";\r\n            }\r\n            this.setState({\r\n              isOpenSubPayment,\r\n              isSelectedPaymentType,\r\n              displayModelPaymentType,\r\n            });\r\n          }\r\n        );\r\n      });\r\n  };\r\n\r\n  handleDialog = async () => {\r\n    let { isOpenSubPayment } = this.state;\r\n    isOpenSubPayment = false;\r\n    await this.setState({\r\n      isOpenSubPayment,\r\n    });\r\n  };\r\n\r\n  handlepaymentgateway = async () => {\r\n    let { paymentgateway, txtUserPayAmount } = this.state;\r\n    if (txtUserPayAmount !== \"0\") {\r\n      paymentgateway = !paymentgateway;\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Amount must be greater than 0\",\r\n      });\r\n    }\r\n    await this.setState({\r\n      paymentgateway,\r\n    });\r\n    console.log(paymentgateway, txtUserPayAmount);\r\n  };\r\n\r\n  handleChangeCard = async ({ target: { value, name } }) => {\r\n    let cardField = Object.assign({}, this.state.cardField);\r\n\r\n    cardField[name] = value;\r\n\r\n    await this.setState({\r\n      cardField,\r\n    });\r\n  };\r\n  handleDatePick = async ({ target: { value, name } }) => {\r\n    let { DateofPay } = this.state;\r\n    DateofPay = value;\r\n    await this.setState({\r\n      DateofPay,\r\n    });\r\n\r\n    let DatePayment = {};\r\n    DatePayment[\"DateofPayment\"] = value;\r\n    await this.props.updateForm(\"CartPaymentDate\", DatePayment);\r\n  };\r\n\r\n  handleCallback = (childData) => {\r\n    console.log(childData);\r\n    this.setState({ paymentCompleted: childData });\r\n  };\r\n\r\n  successfullpayment = () => {\r\n    return (\r\n      <div className=\"success-msg\">\r\n        <svg\r\n          width=\"4em\"\r\n          height=\"4em\"\r\n          viewBox=\"0 0 16 16\"\r\n          className=\"bi bi-check2 right\"\r\n          fill=\"currentColor\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\"\r\n          />\r\n        </svg>\r\n        <div className=\"title\">Payment Successful</div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    let {\r\n      responseData,\r\n      balance,\r\n      isTreatmentDoneButton,\r\n      payGroupData,\r\n      paytableData,\r\n      isOpenSubPayment,\r\n      isSelectedPaymentType,\r\n      displayModelPaymentType,\r\n      cardField,\r\n      pay_rem4,\r\n      DateofPay,\r\n      MinimumDate,\r\n      is_paymentdate,\r\n      isMakePaymentLoading,\r\n      paymentgateway,\r\n      paymentCompleted,\r\n      pointHeader,\r\n      cust_id,\r\n      cust_stripeid,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    let { payTableDropDownValue } = this.state.formFields;\r\n    console.log(payTableDropDownValue);\r\n    let insideRadioButtonData;\r\n    console.log(isSelectedPaymentType, \"selectedpaymenttype\");\r\n    if (isSelectedPaymentType == \"VOUCHER\") {\r\n      insideRadioButtonData = (\r\n        <div>\r\n          <table className=\"table table-bordered\">\r\n            <tr>\r\n              <td>{t(\"Vocucher No\")}</td>\r\n              <td>{t(\"Value\")}</td>\r\n              <td>{t(\"Exp. Date\")}</td>\r\n            </tr>\r\n            {this.state.voucherCustomerData.map((selectedVoucher, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={this.addVoucher.bind(this, selectedVoucher)}\r\n              >\r\n                <td>{selectedVoucher.voucher_no}</td>\r\n                <td>{selectedVoucher.value}</td>\r\n                <td>{selectedVoucher.issued_expiry_date}</td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        </div>\r\n      );\r\n    } else if (isSelectedPaymentType == \"PREPAID\") {\r\n      insideRadioButtonData = (\r\n        <div>\r\n          <table className=\"table table-striped\">\r\n            <tr>\r\n              <td>{t(\"Category\")}</td>\r\n              <td>{t(\"Amount\")}</td>\r\n              <td>{t(\"Remaining\")}</td>\r\n              <td>{t(\"Invoice No.\")}</td>\r\n              <td>{t(\"Exp. Date\")}</td>\r\n              <td>{t(\"Condition Type\")}</td>\r\n              <td>{t(\"Use Amount\")}</td>\r\n            </tr>\r\n            {this.state.prepaidCustomerData.map((selectedPrepaid, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={this.addPrepaid.bind(this, selectedPrepaid)}\r\n              >\r\n                <td>{selectedPrepaid.pp_desc}</td>\r\n                <td className=\"text-right\">{selectedPrepaid.pp_total}</td>\r\n                <td className=\"text-right\">{selectedPrepaid.remain}</td>\r\n                <td>{selectedPrepaid.prepaid}</td>\r\n                <td>{selectedPrepaid.exp_date}</td>\r\n                <td>{selectedPrepaid.conditiontype1}</td>\r\n                <td className=\"text-right\">{selectedPrepaid.Finaluse_amt}</td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        </div>\r\n      );\r\n    } else if (String(isSelectedPaymentType).toUpperCase() == \"POINT\") {\r\n      console.log(this.state.pointHeader, \"pointHeaderdata\");\r\n      insideRadioButtonData = (\r\n        <div>\r\n          <div className=\"d-flex flex-wrap py-1 mb-2\">\r\n            <div className=\"col-md-4 col-12\">\r\n              <label className=\"fw-600\">{t(\"Customer Class\")}</label>\r\n              <div className=\"input-group\">\r\n                <label>{this.state.pointHeader.customer_class}</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 col-12\">\r\n              <label className=\"fw-600\">\r\n                {t(\"Customer's Available Points\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <label>{this.state.pointHeader.cust_point_value}</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 col-12\">\r\n              <label className=\"fw-600\">{t(\"Entered Points\")}</label>\r\n              <div className=\"input-group\">\r\n                <label>{this.state.pointHeader.enter_pointamt}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <td>{t(\"Currency Value\")}</td>\r\n                <td>{t(\"Point Value\")}</td>\r\n                {/* <td>{t(\"Use Amount\")}</td> */}\r\n                <td>{t(\"Division\")}</td>\r\n                <td>{t(\"Department\")}</td>\r\n                <td>{t(\"Brand\")}</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.pointData.map((selectedPoint, index) => (\r\n                <tr\r\n                  key={index}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.addPoint.bind(this, selectedPoint)}\r\n                >\r\n                  {console.log(selectedPoint, \"pointdatalog\")}\r\n                  <td>{selectedPoint.cur_value}</td>\r\n                  <td>{selectedPoint.point_value}</td>\r\n                  {/* <td>{selectedPoint.useamt}</td> */}\r\n                  <td>{selectedPoint.item_divids_desc}</td>\r\n                  <td>{selectedPoint.dept_ids_desc}</td>\r\n                  <td>{selectedPoint.brand_ids_desc}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    } else if (isSelectedPaymentType.toUpperCase() == \"CREDIT\") {\r\n      insideRadioButtonData = (\r\n        <div>\r\n          <table className=\"table table-striped\">\r\n            <tr>\r\n              <td>{t(\"Credit\")} #</td>\r\n              <td>{t(\"Date\")}</td>\r\n              <td>{t(\"Amount\")}</td>\r\n              <td>{t(\"Balance\")}</td>\r\n              <td>{t(\"Status\")}</td>\r\n            </tr>\r\n            {this.state.creditNoteCustomerData.map((creditNote, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={this.addCreditNote.bind(this, creditNote)}\r\n              >\r\n                <td>{creditNote.credit_code}</td>\r\n                <td>{creditNote.sa_date}</td>\r\n                <td>{creditNote.amount}</td>\r\n                <td>{creditNote.balance}</td>\r\n                <td>{creditNote.status}</td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        </div>\r\n      );\r\n    } else if (isSelectedPaymentType == \"CARD\") {\r\n      insideRadioButtonData = (\r\n        <div>\r\n          <div className=\"d-flex flex-wrap justify-content-start\">\r\n            <div className=\"col-1\"></div>\r\n            <div className=\"col-5\">\r\n              <div className=\"input-group\">\r\n                {t(\"Select Card\")}\r\n                <NormalSelect\r\n                  placeholder=\"Search type...\"\r\n                  options={paytableData}\r\n                  value={cardField.pay_typeid}\r\n                  name=\"pay_typeid\"\r\n                  onChange={this.handleCreditChange}\r\n                />\r\n              </div>\r\n              {this.validator.message(\r\n                \"cardFieldType\",\r\n                cardField.pay_typeid,\r\n                \"required\"\r\n              )}\r\n            </div>\r\n            <div className=\"col-1\"></div>\r\n            <div className=\"col-5\">\r\n              <div className=\"input-group\">\r\n                {t(\"Card No.\")}\r\n                <NormalInput\r\n                  value={cardField.pay_rem1}\r\n                  name=\"pay_rem1\"\r\n                  onChange={this.handleChangeCard}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-1\"></div>\r\n            <div className=\"col-5\">\r\n              <div className=\"input-group\">\r\n                {t(\"Name\")}\r\n                <NormalInput\r\n                  value={cardField.pay_rem2}\r\n                  name=\"pay_rem2\"\r\n                  onChange={this.handleChangeCard}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-1\"></div>\r\n            <div className=\"col-5\">\r\n              <div className=\"input-group\">\r\n                {t(\"Exp Month\")} / {t(\"Year\")}\r\n                <NormalInput\r\n                  placeholder=\"mm/YYYY\"\r\n                  value={cardField.pay_rem3}\r\n                  name=\"pay_rem3\"\r\n                  onChange={this.handleChangeCard}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-1\"></div>\r\n            <div className=\"col-5\">\r\n              <div className=\"input-group\">\r\n                {t(\"Approval Code\")}\r\n                <NormalInput\r\n                  value={cardField.App_code}\r\n                  name=\"App_code\"\r\n                  onChange={this.handleChangeCard}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <div className=\"col-2\">\r\n              <div className=\"input-group\">\r\n                <NormalButton\r\n                  mainbg={false}\r\n                  className=\"col-12 mt-4 ml-2 btn-outline-success\"\r\n                  label=\"CONFIRM\"\r\n                  onClick={() => this.addCreditCard()}\r\n                />\r\n              </div>\r\n              <div className=\"col-1\"></div>\r\n            </div>\r\n            {/* <div className=\"col-2\">\r\n              <div className=\"input-group\">\r\n                <NormalButton\r\n                  mainbg={true}\r\n                  className=\"col-12 mt-4 ml-2\"\r\n                  label=\"CANCEL\"\r\n                  onClick={() => this.setState({ isOpenSubPayment: false })}\r\n                />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (isSelectedPaymentType == \"Multiple\") {\r\n      insideRadioButtonData = (\r\n        <div>\r\n          <div className=\"row\" style={{ height: \"300px\" }}>\r\n            <div className=\"col-5\">\r\n              <div className=\"input-group\">\r\n                <Label className=\"col-12 fs-15\">{t(\"Choose Option\")}</Label>\r\n                <NormalSelect\r\n                  placeholder=\"Search type...\"\r\n                  options={paytableData}\r\n                  value={payTableDropDownValue}\r\n                  name=\"payTableDropDownValue\"\r\n                  onChange={this.handleChangePayTableDropDownValue}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-7\">\r\n              {this.state.imageOnlineModePaymentL ? (\r\n                <div\r\n                  className=\"border w-50 h-50 d-flex justify-content-center align-items-center\"\r\n                  style={{ margin: \"auto\", marginTop: \"10%\" }}\r\n                >\r\n                  <img\r\n                    src={this.state.imgUrl}\r\n                    alt=\"\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"border w-50 h-50 d-flex justify-content-center align-items-center\"\r\n                  style={{ margin: \"auto\", marginTop: \"10%\" }}\r\n                >\r\n                  <h3 className=\"text-center\">QR Code </h3>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-12 p-1 mx-auto\">\r\n            <NormalButton\r\n              mainbg={false}\r\n              className=\"col-12 submit-btn\"\r\n              label=\"Continue\"\r\n              // leftIcon={checkoutIcon}\r\n              onClick={() =>\r\n                this.handleContinueQr({\r\n                  target: {\r\n                    value: this.state.payTableValueAndName.target.value,\r\n                    name: this.state.payTableValueAndName.target.name,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      insideRadioButtonData = <div></div>;\r\n    }\r\n    let payGroupDataContent = [];\r\n    console.log(payGroupData);\r\n    payGroupData.forEach((item, i) => {\r\n      payGroupDataContent.push(\r\n        <div\r\n          className=\"col-md-3 col-4 payment-item cursor-pointer\"\r\n          style={{ width: \"50px\", padding: \"15px\" }}\r\n          key={i}\r\n          onClick={() => this.addNewPaymentData(item.value, item.label)}\r\n        >\r\n          <center>\r\n            <img\r\n              src={helpers.getUrl() + \"media/\" + item.picturelocation}\r\n              label={item.label}\r\n              style={{ textAlign: \"center\" }}\r\n              width=\"40\"\r\n              height=\"40\"\r\n            />\r\n          </center>\r\n          <center>\r\n            <p style={{ width: \"100px\", textAlign: \"center\" }}>{item.label}</p>\r\n          </center>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    let { cartId, cartData, tokenDetails } = this.props;\r\n    console.log(cartId, tokenDetails, this.props.cartData);\r\n    this.checkTypeOfCartItemContainsDeposit(cartData);\r\n\r\n    let userAddedPayTableData = (\r\n      <table className=\"table table-bordered\">\r\n        <tbody>\r\n          {\" \"}\r\n          {this.state.selectedCards.map((selectedCards, index) => (\r\n            <tr key={index}>\r\n              <td className=\"fs-18\">\r\n                {this.getPayTableNameBasedOnId(selectedCards.pay_typeid)}\r\n              </td>\r\n              <td className=\"fs-18\" style={{ textAlign: \"right\" }}>\r\n                {selectedCards.pay_amt.toFixed(2)}\r\n              </td>\r\n              <td>\r\n                <div\r\n                  className=\"col-4 p-0 fs-20 cursor-pointer\"\r\n                  onClick={this.removeCards(selectedCards)}\r\n                >\r\n                  <span className=\"icon-delete\"></span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-flex flex-wrap\">\r\n          <div className=\"col-md-2 col-12 mb-2\">\r\n            <label className=\"text-left text-black common-label-text \">\r\n              {t(\"Enter Amount\")}\r\n            </label>\r\n\r\n            <div className=\"input-group mb-2\">\r\n              <NormalInput\r\n                value={this.state.txtUserPayAmount}\r\n                onChange={this.handleChangeTextBox.bind(this)}\r\n              />\r\n              {this.validator.message(\r\n                \"Amount\",\r\n                this.state.txtUserPayAmount,\r\n                \"required|numeric|min:0,num\"\r\n              )}\r\n              {this.validator.message(\r\n                \"Amount\",\r\n                this.state.txtUserPayAmount,\r\n                \"required|numeric|max:\" + this.state.balance + \",num\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-12 mb-2\">\r\n            <Label>{t(\"Remark\")}</Label>\r\n            <div className=\"input-group mb-2\">\r\n              <NormalInput\r\n                value={pay_rem4}\r\n                name=\"pay_rem4\"\r\n                onChange={this.handleChangeRemarkBox.bind(this)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-2 col-12 mb-2\">\r\n            {is_paymentdate ? (\r\n              <>\r\n                <Label>{t(\"Date\")}</Label>\r\n                <div className=\"input-group mb-2\">\r\n                  <NormalDate\r\n                    value={new Date(DateofPay)}\r\n                    name=\"DateofPay\"\r\n                    type=\"date\"\r\n                    onChange={this.handleDatePick}\r\n                    minDate={new Date(MinimumDate)}\r\n                    maxDate={new Date()}\r\n                    showDisabledMonthNavigation\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"col-md-4 col-12\">\r\n            <div className=\"d-flex justify-content-end\">\r\n              {isTreatmentDoneButton ? (\r\n                <div className=\"make-payment mt-3 mr-2 text-center\">\r\n                  <NormalButton\r\n                    mainbg={true}\r\n                    className=\"col-12 fs-15\"\r\n                    label=\"TREATMENT DONE\"\r\n                    onClick={() => this.handleTreatmentDone()}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n              <div className=\"make-payment mt-3 text-center\">\r\n                {isMakePaymentLoading ? (\r\n                  <div class=\"d-flex align-items-center justify-content-center\">\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                      <span class=\"sr-only\">{t(\"Loading...\")}</span>\r\n                    </div>\r\n                  </div>\r\n                ) : this.state.isMakePaymentButtonClicked == \"true\" ? (\r\n                  <NormalButton\r\n                    submitBtn={true}\r\n                    className=\"col-12\"\r\n                    label=\"Make payment\"\r\n                    disabled={true}\r\n                  />\r\n                ) : (\r\n                  <NormalButton\r\n                    submitBtn={true}\r\n                    className=\"col-12\"\r\n                    label=\"Make payment\"\r\n                    onClick={() => this.handleSubmit()}\r\n                    disabled={\r\n                      this.state.selectedCards.length <= 0 || balance > 0\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex \">\r\n          <div className=\"col-3\">\r\n            <h5>{t(\"Select Payment Method\")}</h5>\r\n          </div>\r\n\r\n          {this.props.tokenDetails.paymentgateway == true ? (\r\n            <div className=\"col-3\">\r\n              <NormalButton\r\n                mainbg={true}\r\n                className=\"col-12\"\r\n                label=\"payment Gateway\"\r\n                onClick={this.handlepaymentgateway}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"row paymentGroup\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"d-flex flex-wrap\">{payGroupDataContent}</div>\r\n          </div>\r\n          <div className=\"col-md-6 make-payment-section\">\r\n            <p className=\"h6\">{t(\"List of Selections\")}</p>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 mt-1 mb-1\">\r\n                <div className=\"d-flex payment\">\r\n                  <div className=\"col-md-7 p-0\">\r\n                    <div className=\"d-flex flex-wrap fs-14\">\r\n                      <div className=\"col-6\">{t(\"Subtotal\")}</div>\r\n                      <div className=\"col-6\">$ {responseData.subtotal}</div>\r\n                      <div className=\"col-6\">{t(\"Discount ($)\")}</div>\r\n                      <div className=\"col-6\">$ {responseData.discount}</div>\r\n                      <div className=\"col-6\">{t(\"Transac amount\")}</div>\r\n                      <div className=\"col-6\">$ {responseData.trans_amt}</div>\r\n                      <div className=\"col-6\">{t(\"Deposit\")}</div>\r\n                      <div className=\"col-6\">$ {responseData.deposit_amt}</div>\r\n                      <div className=\"col-6\">{responseData.tax_lable}</div>\r\n                      <div className=\"col-6\">$ {responseData.tax_amt}</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-5\">\r\n                    <div className=\"d-flex flex-wrap\">\r\n                      <div className=\"col-12 fs-22 text-center\">\r\n                        {t(\"Billing Amount\")}\r\n                      </div>\r\n                      <div className=\"col-12 fs-22 fw-700 text-center text-orenge\">\r\n                        $ {responseData.billable_amount}\r\n                      </div>\r\n                      <div className=\"col-12 f-600 text-center mt-2\">\r\n                        {t(\"Balance Amount\")}: {Number(balance).toFixed(2)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 mt-2 payment-list\">\r\n              <div className=\"fs-12\">{userAddedPayTableData}</div>\r\n            </div>\r\n            {/* <div className=\"d-flex justify-content-around\">\r\n              {isTreatmentDoneButton ? (\r\n                <div className=\"make-payment mt-3 text-center\">\r\n                  <NormalButton\r\n                    mainbg={true}\r\n                    className=\"col-12 fs-15 \"\r\n                    label=\"TREATMENT DONE\"\r\n                    onClick={() => this.handleTreatmentDone()}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n              <div className=\"make-payment mt-3 text-center\">\r\n                {isMakePaymentLoading ? (\r\n                  <div class=\"d-flex align-items-center justify-content-center\">\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                      <span class=\"sr-only\">{t(\"Loading...\")}</span>\r\n                    </div>\r\n                  </div>\r\n                ) : this.state.isMakePaymentButtonClicked == \"true\" ? (\r\n                  <NormalButton\r\n                    submitBtn={true}\r\n                    className=\"col-12\"\r\n                    label=\"Make payment\"\r\n                    disabled={true}\r\n                  />\r\n                ) : (\r\n                  <NormalButton\r\n                    submitBtn={true}\r\n                    className=\"col-12\"\r\n                    label=\"Make payment\"\r\n                    onClick={() => this.handleSubmit()}\r\n                    disabled={\r\n                      this.state.selectedCards.length <= 0 || balance > 0\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n\r\n        <NormalModal\r\n          className={\"payment-modal\"}\r\n          style={{ minWidth: \"70%\" }}\r\n          modal={isOpenSubPayment}\r\n          handleModal={this.handleDialog}\r\n        >\r\n          <img\r\n            onClick={this.handleDialog}\r\n            className=\"close cursor-pointer\"\r\n            src={closeIcon}\r\n            alt=\"\"\r\n          />\r\n          <center>\r\n            <p className=\"fs-18 f-600\">{displayModelPaymentType}</p>\r\n          </center>\r\n          <br />\r\n          {insideRadioButtonData}\r\n        </NormalModal>\r\n\r\n        <NormalModal\r\n          className={\"payment-modal\"}\r\n          style={{ minWidth: \"30%\" }}\r\n          modal={paymentgateway}\r\n          handleModal={this.handlepaymentgateway}\r\n        >\r\n          <img\r\n            onClick={this.handlepaymentgateway}\r\n            className=\"close cursor-pointer\"\r\n            src={closeIcon}\r\n            alt=\"\"\r\n          />\r\n\r\n          {paymentCompleted ? (\r\n            this.successfullpayment()\r\n          ) : (\r\n            <React.Fragment>\r\n              <div className=\"col-md-12 order-md-1\">\r\n                <Elements stripe={stripePromise}>\r\n                  <Paymentcheckout\r\n                    amount={balance}\r\n                    parentCallback={this.handleCallback}\r\n                    cartId={cartId}\r\n                    cust_id={cust_id}\r\n                    cust_stripeid={cust_stripeid}\r\n                    //   token={this.props.tokenDetails}\r\n                  />\r\n                </Elements>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </NormalModal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appointmentDetail: state.appointment.appointmentDetail,\r\n  selected_cstomer: state.common.selected_cstomer,\r\n  tokenDetails: state.authStore.tokenDetails,\r\n  CartPaymentDate: state.appointment.CartPaymentDate,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getPayment,\r\n      getCommonApi,\r\n      createPayment,\r\n      updateForm,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const Payment = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(MakePaymentClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}