{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\common\\\\Plugins\\\\NewScheduler.js\";\nimport React, { Component, PureComponent } from \"react\";\nimport \"./devExpressScheduler/Styles.scss\";\nimport Scheduler, { Resource, View } from \"devextreme-react/scheduler\";\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport ResourceCell from \"./devExpressScheduler/ResourceCell\";\nimport fullscreenIcon from \"assets/images/fullScreen.png\";\nimport AppointmentCell from \"./devExpressScheduler/AppointmentCell\";\nimport { InputSearch } from \"../InputSearch\";\nimport _ from \"lodash\";\nimport { NormalButton, NormalSelect, NormalInput, NormalModal } from \"component/common\";\nimport { StaffSorting } from \"../../Admin/NewAppointment/NewListAppointment/modal/StaffSorting\";\nimport { BlockPopup } from \"../../Admin/NewAppointment/NewListAppointment/modal/BlockPopup\";\nimport { PrintModal } from \"../../Admin/NewAppointment/NewListAppointment/modal/PrintModal\";\nimport { Toast } from \"service/toast\";\nimport html2canvas from \"html2canvas\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { getCommonApi, commonPatchApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { TreatmentHistory } from \"component/Admin/NewAppointment/NewListAppointment/modal/TreatmentHistory\";\nimport { UpcomingAppointment } from \"component/Admin/NewAppointment/NewListAppointment/modal/UpcomingAppointment\";\nimport setting from \"assets/images/settings.png\";\nimport { AppointmentSettings } from \"./devExpressScheduler/AppointmentSettings\";\nimport closeIcon from \"assets/images/close.png\";\nimport { history } from \"helpers\";\nimport { withTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nconst groups = [\"id\"];\nconst draggingGroupName = \"appointmentsGroup\";\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\nconst scrolling = {\n  mode: \"virtual\"\n};\nconst views = [{\n  type: \"day\",\n  name: \"day\",\n  groupOrientation: \"Horizontally\",\n  intervalCount: 1\n}, {\n  type: \"week\",\n  name: \"week\",\n  groupOrientation: \"vertical\",\n  intervalCount: 1,\n  maxAppointmentsPerCell: \"unlimited\"\n}, {\n  type: \"month\",\n  name: \"month\",\n  intervalCount: 1,\n  groupOrientation: \"vertical\",\n  maxAppointmentsPerCell: \"unlimited\"\n}];\nconst Dayview = [{\n  type: \"day\",\n  name: \"day\",\n  groupOrientation: \"Horizontally\",\n  intervalCount: 1\n}];\nexport class NewSchedulerModalClass extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedDate: new Date(),\n      selectedView: \"\",\n      DefaultDate: new Date(),\n      DefaultView: \"\",\n      searchtext: \"\",\n      SelectedList: [],\n      isOpenModal: false,\n      isOpenBlockModal: false,\n      appointmentId: 0,\n      SchedulerHeight: \"90%\",\n      isOpenPrintModal: false,\n      formFields: [],\n      groupByList: [{\n        label: \"Group by Staff\",\n        value: \"staff\"\n      }, {\n        label: \"Group by Department\",\n        value: \"department\"\n      }, {\n        label: \"Group by Room\",\n        value: \"room\"\n      }],\n      groupBy: \"staff\",\n      customerNumber: 0,\n      customerId: 0,\n      clickCount: 0,\n      visible: false,\n      customerOption: [],\n      isSettingsClick: false,\n      dayName: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      day: new Date().getDay(),\n      passwordVisible: false,\n      dragusername: \"\",\n      dragpassword: \"\",\n      isDragConfirmation: false\n    };\n\n    this.onEmptyClick = e => {\n      e.cancel = true;\n      let date = new Date(e.cellData.startDate);\n\n      if (e.cellData.groups) {\n        this.props.onEmptyClick(date, e.cellData);\n      }\n    };\n\n    this.onAppointmentDblClick = async e => {\n      e.cancel = true;\n      await this.setState({\n        appointmentId: 0\n      });\n      let date = new Date(e.appointmentData.startDate);\n\n      if (e.appointmentData.status === \"Block\") {\n        await this.setState({\n          appointmentId: e.appointmentData.appt_id\n        });\n        this.handleBlockDialog();\n      } else {\n        this.props.onEmptyClick(date, e.appointmentData);\n        await this.setState({\n          customerId: e.appointmentData.cust_id,\n          custName: e.appointmentData.cust_name,\n          custPhone: e.appointmentData.cust_phone\n        });\n      }\n    };\n\n    this.onAppointmentSingleClick = async e => {\n      e.cancel = true;\n\n      if (e.appointmentData.status !== \"Block\") {\n        await this.setState({\n          customerId: e.appointmentData.cust_id,\n          custName: e.appointmentData.cust_name,\n          custPhone: e.appointmentData.cust_phone\n        });\n      }\n    };\n\n    this.handleViewChange = async e => {\n      //if (this.props.staffList.length > 0) {\n      await this.setState({\n        selectedView: e\n      });\n      this.handleChange(); //}\n    };\n\n    this.handleDateChange = async e => {\n      let {\n        day\n      } = this.state;\n\n      if (this.state.selectedDate !== e) {\n        await this.setState({\n          selectedDate: e\n        });\n        this.handleChange();\n      }\n\n      day = moment(this.state.selectedDate).day();\n      this.setState({\n        day\n      });\n      console.log(day);\n    };\n\n    this.handleChange = () => {\n      let {\n        selectedDate,\n        selectedView,\n        DefaultDate,\n        DefaultView,\n        searchtext\n      } = this.state;\n      let newDate = new Date();\n      let newMode = \"\";\n      let prevMode = DefaultView;\n      let prevDate = DefaultDate;\n\n      if (selectedView) {\n        newMode = selectedView;\n      } else {\n        newMode = DefaultView;\n      }\n\n      if (selectedDate) {\n        newDate = selectedDate;\n      } else {\n        newDate = selectedDate;\n      }\n\n      this.props.handleChangeFilter(prevMode, prevDate, newMode, newDate, searchtext);\n    };\n\n    this.handleSearch = async event => {\n      event.persist();\n      await this.setState({\n        searchtext: event.target.value\n      });\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          this.handleChange();\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleDragConfirmationDialog = async () => {\n      let {\n        isDragConfirmation\n      } = this.state;\n      isDragConfirmation = !isDragConfirmation;\n      await this.setState({\n        isDragConfirmation\n      });\n      await this.props.getAppointmentWithStaff();\n    };\n\n    this.handleDialog = () => {\n      let {\n        isOpenModal\n      } = this.state;\n      isOpenModal = !isOpenModal;\n      this.setState({\n        isOpenModal\n      });\n    };\n\n    this.handleSettingDialog = () => {\n      let {\n        isSettingsClick\n      } = this.state;\n      isSettingsClick = !isSettingsClick;\n      this.setState({\n        isSettingsClick\n      });\n    };\n\n    this.handleBlockDialog = async () => {\n      await this.setState(prevState => ({\n        isOpenBlockModal: !prevState.isOpenBlockModal\n      }));\n      await this.setState({\n        appointmentId: 0\n      });\n    };\n\n    this.handlePrintDialog = () => {\n      let {\n        isOpenPrintModal\n      } = this.state;\n      isOpenPrintModal = !isOpenPrintModal;\n      this.setState({\n        isOpenPrintModal\n      });\n    };\n\n    this.handleBack = () => {\n      this.props.handleBack();\n    };\n\n    this.handleNext = () => {\n      this.props.handleNext();\n    };\n\n    this.Snap = async () => {\n      await this.setState({\n        SchedulerHeight: \"350%\"\n      });\n      await sleep(2000); //\n\n      window.scrollTo(0, 0);\n      let img = \"\";\n      let base64URL = \"\";\n      html2canvas(document.querySelector(\"#Scheduler\"), {\n        allowTaint: true,\n        useCORS: true,\n        logging: false,\n        scale: 1,\n        removeContainer: true\n      }).then(function (canvas) {\n        img = canvas.toDataURL(\"image/png\", 1);\n        base64URL = img.replace(\"image/png\", \"image/octet-stream\");\n        var byteCharacters = atob(img.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\"));\n        var byteNumbers = new Array(byteCharacters.length);\n\n        for (var i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n\n        var byteArray = new Uint8Array(byteNumbers);\n        var file = new Blob([byteArray], {\n          type: \"image/png\" + \";base64\"\n        });\n        var fileURL = URL.createObjectURL(file);\n        var a = document.createElement(\"a\");\n        a.setAttribute(\"download\", \"myImage.png\");\n        a.setAttribute(\"href\", base64URL);\n        a.click();\n        window.open(fileURL);\n      });\n      window.scrollTo(0, document.documentElement.scrollHeight);\n      await this.setState({\n        SchedulerHeight: \"90%\"\n      });\n    };\n\n    this.getHoursFromDate = date => {\n      let hour = new Date(date).getHours();\n      let minute = new Date(date).getMinutes();\n      let hours = hour > 9 ? hour : \"0\" + hour;\n      let minutes = minute > 9 ? minute : \"0\" + minute;\n      return hours + \":\" + minutes;\n    };\n\n    this.onDragStart = async e => {\n      console.log(e, \"drag start data\");\n\n      if (e.itemData.status === \"Block\") {\n        e.cancel = true;\n      } else if (e.itemData.link_flag) {\n        e.cancel = true;\n        Toast({\n          type: \"error\",\n          message: \"Linked appointment not allowed for dragging\"\n        });\n      }\n    };\n\n    this.onDragEnd = async e => {\n      await sleep(500);\n\n      if (e.itemData.appt_id) {\n        let {\n          formFields,\n          isDragConfirmation\n        } = this.state;\n        let startTime = this.getHoursFromDate(e.itemData.startDate);\n        let endTime = this.getHoursFromDate(e.itemData.endDate);\n        let targetStaff = e.itemData.id;\n        this.props.getCommonApi(`appointmentresources/${e.itemData.appt_id}/`).then(async key => {\n          let {\n            status,\n            data\n          } = key;\n          console.log(key, \"drag end data response\");\n          let appt_Date = data.appt_date;\n          let date = appt_Date.split(\"/\");\n          let finaldate = date[2] + \"-\" + date[1] + \"-\" + date[0];\n\n          if (status === 200) {\n            formFields[\"appt_id\"] = e.itemData.appt_id;\n            formFields[\"custName\"] = data.cust_name;\n            formFields[\"appointmentDate\"] = finaldate;\n            formFields[\"bookingStatus\"] = data.booking_status;\n            formFields[\"new_remark\"] = data.ori_remark;\n            formFields[\"customerName\"] = data.cust_id;\n            formFields[\"Source_Codeid\"] = data.source_id;\n            formFields[\"Room_Codeid\"] = data.room_id;\n            formFields[\"sec_status\"] = data.secondary_status;\n            formFields[\"Appt_typeid\"] = data.channel_id;\n            formFields[\"start_time\"] = data ? data.start_time : \"\";\n            formFields[\"end_time\"] = data ? data.end_time : \"\";\n            formFields[\"Item_Codeid\"] = data.Item_Codeid;\n            formFields[\"Item_CodeName\"] = data.item_name;\n            formFields[\"emp_no\"] = data.emp_id;\n            formFields[\"add_duration\"] = data.add_duration;\n            formFields[\"edit_remark\"] = \"\";\n            formFields[\"requesttherapist\"] = data.requesttherapist;\n            formFields[\"recur_days\"] = data.recur_days;\n            formFields[\"recur_qty\"] = data.recur_qty;\n            formFields[\"item_text\"] = data.item_name;\n\n            if (formFields[\"start_time\"] !== startTime || formFields[\"emp_no\"] !== targetStaff) {\n              formFields[\"appointmentDate\"] = e.itemData.endDate;\n              formFields[\"start_time\"] = startTime;\n              formFields[\"end_time\"] = endTime;\n              formFields[\"emp_no\"] = targetStaff;\n              formFields[\"item_text\"] = e.itemData.item_name;\n              formFields[\"recur_days\"] = null;\n              formFields[\"recur_qty\"] = null;\n              isDragConfirmation = false;\n              await this.setState({\n                formFields,\n                isDragConfirmation\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.handleTreatmentHistory = () => {\n      let {\n        customerId\n      } = this.state;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isTreatmentHistoryModal: !prevState.isTreatmentHistoryModal,\n          customerNumber: this.state.customerId\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.handleUpcomingAppointment = () => {\n      let {\n        customerId\n      } = this.state;\n\n      if (customerId > 0) {\n        this.setState(prevState => ({\n          isUpcomingAppointmentModal: !prevState.isUpcomingAppointmentModal,\n          customerNumber: this.state.customerId\n        }));\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please select customer\"\n        });\n      }\n    };\n\n    this.handleSearchCustomer = async event => {\n      //    event.persist();\n      let {\n        custName,\n        visible\n      } = this.state;\n      custName = event.target.value;\n      visible = true;\n      await this.setState({\n        custName,\n        visible\n      });\n      console.log(this.state.custName);\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          let {\n            customerList\n          } = this.state;\n          let {\n            basicApptDetail\n          } = this.props;\n          this.search(basicApptDetail);\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = basicApptDetail => {\n      let {\n        custName\n      } = this.state;\n      this.props.getCommonApi(`custappt/?Outlet=${basicApptDetail.branchId ? basicApptDetail.branchId : \"\"}&search=${custName}`).then(key => {\n        // this.props.getCommonApi(`custappt/?search=${custName}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          this.setState({\n            customerOption: data\n          });\n        }\n      });\n    };\n\n    this.handleClick = key => {\n      if (!this.state.visible) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      if (this.state.visible) {\n        let {\n          basicApptDetail\n        } = this.props;\n        this.search(basicApptDetail);\n      }\n\n      this.setState(prevState => ({\n        visible: !prevState.visible\n      }));\n    };\n\n    this.handleSettingClick = key => {\n      this.setState(prevState => ({\n        isSettingsClick: !prevState.isSettingsClick\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleClick();\n    };\n\n    this.handleSelectCustomer = async data => {\n      console.log(data, \"selectCustomer\");\n      await this.setState({\n        customerId: data.id,\n        custName: data.cust_name,\n        custPhone: data.cust_phone1\n      });\n      this.handleClick();\n    };\n\n    this.handleGroupbyChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      if (value == \"\") {\n        value = \"staff\";\n      }\n\n      if (value !== this.state.groupBy) {\n        this.setState({\n          groupBy: value\n        });\n        this.props.groupByAppointment(value);\n      }\n    };\n\n    this.handleFullScreenClose = () => {\n      history.push(\"/admin/newappointment\");\n      this.setState({\n        SchedulerHeight: \"70%\"\n      });\n    };\n\n    this.handleFullScreenOpen = () => {\n      history.push(\"/admin/newappointmentfullscreen\");\n      this.setState({\n        SchedulerHeight: \"100%\"\n      });\n    };\n\n    this.handleInputChange = async event => {\n      await this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.toggle = key => {\n      this.setState(prevState => ({\n        [key]: !prevState[key]\n      }));\n    };\n\n    this.handleDragandDropLogin = () => {\n      let {\n        formFields,\n        dragusername,\n        dragpassword\n      } = this.state;\n      let payload = {\n        appt_date: dateFormat(new Date(formFields.appointmentDate), \"yyyy-mm-dd\"),\n        Room_Codeid: formFields.Room_Codeid,\n        appt_status: formFields.bookingStatus,\n        sec_status: formFields.sec_status,\n        edit_remark: \"\",\n        start_time: formFields.start_time,\n        end_time: formFields.end_time,\n        item_id: formFields.Item_Codeid,\n        add_duration: formFields.add_duration,\n        emp_id: formFields.emp_no,\n        requesttherapist: formFields.requesttherapist,\n        item_text: formFields.item_text,\n        recur_qty: null,\n        recur_days: null,\n        username: dragusername,\n        password: dragpassword\n      };\n      this.props.commonPatchApi(`appointmentresources/${formFields.appt_id}/`, payload).then(async res => {\n        await this.setState({\n          isDragConfirmation: false\n        });\n        await this.props.getAppointmentWithStaff();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      DefaultDate: this.props.filterDate,\n      DefaultView: this.props.filterType\n    });\n  }\n\n  onContentReady(e) {\n    console.log(e, \"oncontentreadylog\");\n    const currentHour = new Date().getHours() - 1;\n    e.component.scrollToTime(currentHour, 30, new Date());\n  }\n\n  render() {\n    let {\n      isOpenModal,\n      isOpenBlockModal,\n      appointmentId,\n      SchedulerHeight,\n      isOpenPrintModal,\n      groupBy,\n      isTreatmentHistoryModal,\n      isUpcomingAppointmentModal,\n      customerNumber,\n      visible,\n      customerOption,\n      selectedDate,\n      isSettingsClick,\n      dayName,\n      passwordVisible,\n      dragusername,\n      dragpassword,\n      isDragConfirmation\n    } = this.state;\n    let {\n      filterDate,\n      tokenDetail,\n      t\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      // <div style={{ width: \"100%\", height: \"100%\" }}>\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(StaffSorting, {\n        isOpenModal: isOpenModal,\n        handleDialog: this.handleDialog,\n        handleChange: this.handleChange,\n        filterDate: filterDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 9\n        }\n      }), isOpenBlockModal ? /*#__PURE__*/React.createElement(BlockPopup, {\n        isOpenBlockModal: isOpenBlockModal,\n        handleBlockDialog: this.handleBlockDialog,\n        handleChange: this.handleChange,\n        filterDate: filterDate,\n        appointmentId: appointmentId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }\n      }) : \"\", isOpenPrintModal ? /*#__PURE__*/React.createElement(PrintModal, {\n        isOpenPrintModal: isOpenPrintModal,\n        handlePrintDialog: this.handlePrintDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }\n      }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-start m-1 p-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 9\n        }\n      }, this.props.meta ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1 col-12 text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }\n      }, this.props.meta.pagination && this.props.meta.pagination.total_pages > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 17\n        }\n      }, this.props.meta.pagination.total_pages < this.props.meta.pagination.current_page || this.props.meta.pagination.current_page > 1 || this.props.meta.pagination.total_pages == this.props.meta.pagination.current_page ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"cursor-pointer dx-button-content disabled\",\n        onClick: this.handleBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"9\",\n        height: \"15\",\n        viewBox: \"0 0 6 10\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M5 0.5L1 5L5 9.5\",\n        stroke: \"#888888\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 25\n        }\n      }))) : \"\", this.props.meta.pagination.total_pages > this.props.meta.pagination.current_page && this.props.meta.pagination.total_pages !== this.props.meta.pagination.current_page && this.props.meta.pagination.current_page > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"cursor-pointer dx-button-content\",\n        onClick: this.handleNext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"9\",\n        height: \"15\",\n        viewBox: \"0 0 6 10\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M0.5 9.5L4.5 5L0.5 0.5\",\n        stroke: \"#888888\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 25\n        }\n      }))) : \"\") : \"\") : \"\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"p-0 mr-1\",\n        mainbg: true,\n        className: \"fs-15 submit-btn\",\n        label: `Today`,\n        outline: false,\n        onClick: () => {\n          this.handleDateChange(new Date());\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        className: \"col-md-6 mr-1\",\n        placeholder: \"customer..\",\n        value: this.state.custName,\n        name: \"custName\",\n        onChange: this.handleSearchCustomer,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"mr-1\",\n        mainbg: true,\n        className: \"col-12 fs-15 m-0 p-1\",\n        label: \"Upcoming\",\n        onClick: this.handleUpcomingAppointment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"mr-1\",\n        mainbg: true,\n        className: \"col-12 fs-15 \",\n        label: \"History\",\n        onClick: this.handleTreatmentHistory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        name: \"selecteddate\",\n        value: dayName[this.state.day] + \" \" + moment(selectedDate).format(\"DD/MM/YYYY\"),\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-5 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"p-0 mr-1\",\n        mainbg: true,\n        className: \" fs-14 confirm mr-1\",\n        label: t(\"Snap\"),\n        outline: false,\n        onClick: this.Snap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"p-0 mr-1\",\n        mainbg: true,\n        className: \" fs-15 confirm mr-1\",\n        label: `Print`,\n        outline: false,\n        onClick: () => {\n          this.setState({\n            isOpenPrintModal: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"p-0 mr-1\",\n        mainbg: true,\n        className: \" fs-15 confirm mr-1\",\n        label: `Sort`,\n        outline: false,\n        onClick: () => {\n          this.setState({\n            isOpenModal: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(NormalButton, {\n        buttonClass: \"p-0 mr-1\",\n        mainbg: true,\n        className: \"fs-15 confirm\",\n        label: `Block`,\n        outline: false,\n        onClick: () => {\n          this.setState({\n            isOpenBlockModal: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputSearch, {\n        placeholder: \"Search here..\",\n        value: this.state.searchtext,\n        onChange: this.handleSearch,\n        name: \"searchtext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 17\n        }\n      })), String(tokenDetail.role_code).toUpperCase() === \"1\" ? /*#__PURE__*/React.createElement(\"img\", {\n        onClick: this.handleSettingClick,\n        className: \"close cursor-pointer\",\n        src: setting,\n        alt: \"\",\n        width: \"35\",\n        height: \"35\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 17\n        }\n      }) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ml-3 pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: 30\n        },\n        onClick: window.location.pathname == \"/admin/newappointmentfullscreen\" ? this.handleFullScreenClose : this.handleFullScreenOpen,\n        className: \"close cursor-pointer tooltip-img ml-1\",\n        src: fullscreenIcon,\n        alt: \"\",\n        \"data-toggle\": \"tooltip\",\n        \"data-placement\": \"bottom\",\n        title: window.location.pathname == \"/admin/newappointmentfullscreen\" ? \"Exit Fullscreen Mode\" : \"Fullscreen Mode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(NormalModal, {\n        className: \"transaction-done-modal top-up-modal\",\n        style: {\n          minWidth: \"55%\"\n        },\n        modal: isSettingsClick,\n        handleModal: this.handleSettingDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        onClick: this.handleSettingDialog,\n        className: \"close cursor-pointer\",\n        src: closeIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(AppointmentSettings, {\n        handleModal: this.handleSettingDialog,\n        handleSettingChange: this.props.handleAppointmentSetting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 17\n        }\n      }))))), isTreatmentHistoryModal ? /*#__PURE__*/React.createElement(TreatmentHistory, {\n        isTreatmentHistoryModal: isTreatmentHistoryModal,\n        handleTreatmentHistory: this.handleTreatmentHistory,\n        customerNumber: this.state.customerNumber,\n        custName: this.state.custName,\n        custPhone: this.state.custPhone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }\n      }) : \"\", isUpcomingAppointmentModal ? /*#__PURE__*/React.createElement(UpcomingAppointment, {\n        isUpcomingAppointmentModal: isUpcomingAppointmentModal,\n        handleUpcomingAppointment: this.handleUpcomingAppointment,\n        customerNumber: this.state.customerNumber,\n        custName: this.state.custName,\n        custPhone: this.state.custPhone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 11\n        }\n      }) : \"\", visible ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"AppointmentStaffList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"customerSearch-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex mt-4 table table-header w-100 m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 17\n        }\n      }, t(\"Name\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 17\n        }\n      }, t(\"Phone\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 17\n        }\n      }, t(\"Customer Code\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 17\n        }\n      }, t(\"Reference\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 17\n        }\n      }, t(\"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 17\n        }\n      }, t(\"NRIC\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"response-table w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 15\n        }\n      }, customerOption.length > 0 ? customerOption.map((item, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row m-0 table-body w-100 border\",\n          onClick: () => this.handleSelectCustomer(item),\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 25\n          }\n        }, item.cust_name), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 25\n          }\n        }, item.cust_phone1), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 25\n          }\n        }, item.cust_code), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 25\n          }\n        }, item.cust_refer), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 25\n          }\n        }, item.cust_email), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 25\n          }\n        }, item.cust_nric));\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 19\n        }\n      }, t(\"No Data are available\"))))) : null, /*#__PURE__*/React.createElement(NormalModal, {\n        className: \"d-flex justify-content-center\",\n        style: {\n          minWidth: \"20%\"\n        },\n        modal: isDragConfirmation,\n        handleModal: this.handleDragConfirmationDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        onClick: this.handleDragConfirmationDialog,\n        className: \"close cursor-pointer\",\n        src: closeIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 17\n        }\n      }, t(\"Please enter your login credential\"), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 form-group mb-3 pb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        placeholder: \"Username\",\n        value: dragusername,\n        name: \"dragusername\",\n        autocomplete: \"off\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 form-group mb-3 pb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NormalInput, {\n        type: passwordVisible ? \"text\" : \"password\",\n        placeholder: \"Password\",\n        value: dragpassword,\n        name: \"dragpassword\",\n        autocomplete: \"off\",\n        onChange: e => this.handleInputChange(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-addon right fs-14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.toggle(\"passwordVisible\"),\n        className: `icon-${passwordVisible ? \"eye\" : \"eye-blocked\"} cursor-pointer fs-24`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group mb-0 p-0 d-flex justify-content-center col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        onClick: this.handleDragandDropLogin,\n        label: \"PROCEED\",\n        className: \"col-12 submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 17\n        }\n      }))))), /*#__PURE__*/React.createElement(Scheduler, {\n        id: \"Scheduler\",\n        className: \"col-12 m-0 p-0\",\n        height: SchedulerHeight,\n        dataSource: this.props.staffList.length > 0 ? this.props.event : [] // views={this.props.staffList.length > 0 ? views : Dayview}\n        ,\n        views: views,\n        onContentReady: this.onContentReady,\n        defaultCurrentView: \"day\",\n        currentDate: selectedDate,\n        defaultCurrentDate: new Date(),\n        groups: this.props.staffList.length > 0 ? groups : [] // startDayHour={8}\n        // endDayHour={21}\n        // cellDuration={15}\n        ,\n        startDayHour: this.props.SchedulerSetting.startday_hour ? this.props.SchedulerSetting.startday_hour : 8,\n        endDayHour: this.props.SchedulerSetting.endday_hour ? this.props.SchedulerSetting.endday_hour : 21,\n        cellDuration: this.props.SchedulerSetting.cell_duration ? this.props.SchedulerSetting.cell_duration : 15,\n        firstDayOfWeek: 0,\n        showAllDayPanel: false,\n        crossScrollingEnabled: true,\n        resourceCellComponent: ResourceCell,\n        editing: {\n          allowDeleting: false,\n          allowResizing: false,\n          allowUpdating: true,\n          allowDragging: true,\n          allowTaint: true\n        },\n        onAppointmentClick: e => {\n          e.cancel = true;\n        },\n        onAppointmentDblClick: e => this.onAppointmentDblClick(e),\n        onCellClick: e => this.onEmptyClick(e) //dateSerializationFormat=\"yyyy-MM-ddTHH:mm:ssZ\"\n        ,\n        appointmentComponent: AppointmentCell,\n        onCurrentViewChange: this.handleViewChange,\n        onCurrentDateChange: this.handleDateChange,\n        appointmentDragging: {\n          autoScroll: true,\n          scrollSpeed: 25,\n          group: {\n            draggingGroupName\n          },\n          onDragStart: e => this.onDragStart(e),\n          onDragEnd: e => this.onDragEnd(e)\n        },\n        scrolling: scrolling,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        type: \"day\",\n        label: t(\"day\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(View, {\n        type: \"week\",\n        label: \"week\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(View, {\n        type: \"month\",\n        label: \"month\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Resource, {\n        dataSource: this.props.staffList,\n        fieldExpr: \"id\",\n        useColorAsDefault: true,\n        allowMultiple: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }\n      })))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  basicApptDetail: state.appointment.basicApptDetail,\n  SchedulerSetting: state.appointment.SchedulerSetting,\n  tokenDetail: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonPatchApi\n  }, dispatch);\n};\n\nexport const NewSchedulerModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(NewSchedulerModalClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/common/Plugins/NewScheduler.js"],"names":["React","Component","PureComponent","Scheduler","Resource","View","ResourceCell","fullscreenIcon","AppointmentCell","InputSearch","_","NormalButton","NormalSelect","NormalInput","NormalModal","StaffSorting","BlockPopup","PrintModal","Toast","html2canvas","dateFormat","getCommonApi","commonPatchApi","connect","bindActionCreators","TreatmentHistory","UpcomingAppointment","setting","AppointmentSettings","closeIcon","history","withTranslation","moment","groups","draggingGroupName","sleep","milliseconds","Promise","resolve","setTimeout","scrolling","mode","views","type","name","groupOrientation","intervalCount","maxAppointmentsPerCell","Dayview","NewSchedulerModalClass","state","selectedDate","Date","selectedView","DefaultDate","DefaultView","searchtext","SelectedList","isOpenModal","isOpenBlockModal","appointmentId","SchedulerHeight","isOpenPrintModal","formFields","groupByList","label","value","groupBy","customerNumber","customerId","clickCount","visible","customerOption","isSettingsClick","dayName","day","getDay","passwordVisible","dragusername","dragpassword","isDragConfirmation","onEmptyClick","e","cancel","date","cellData","startDate","props","onAppointmentDblClick","setState","appointmentData","status","appt_id","handleBlockDialog","cust_id","custName","cust_name","custPhone","cust_phone","onAppointmentSingleClick","handleViewChange","handleChange","handleDateChange","console","log","newDate","newMode","prevMode","prevDate","handleChangeFilter","handleSearch","event","persist","target","debouncedFn","debounce","handleDragConfirmationDialog","getAppointmentWithStaff","handleDialog","handleSettingDialog","prevState","handlePrintDialog","handleBack","handleNext","Snap","window","scrollTo","img","base64URL","document","querySelector","allowTaint","useCORS","logging","scale","removeContainer","then","canvas","toDataURL","replace","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","file","Blob","fileURL","URL","createObjectURL","a","createElement","setAttribute","click","open","documentElement","scrollHeight","getHoursFromDate","hour","getHours","minute","getMinutes","hours","minutes","onDragStart","itemData","link_flag","message","onDragEnd","startTime","endTime","endDate","targetStaff","id","key","data","appt_Date","appt_date","split","finaldate","booking_status","ori_remark","source_id","room_id","secondary_status","channel_id","start_time","end_time","Item_Codeid","item_name","emp_id","add_duration","requesttherapist","recur_days","recur_qty","handleTreatmentHistory","isTreatmentHistoryModal","handleUpcomingAppointment","isUpcomingAppointmentModal","handleSearchCustomer","customerList","basicApptDetail","search","branchId","handleClick","addEventListener","handleOutsideClick","removeEventListener","handleSettingClick","node","contains","handleSelectCustomer","cust_phone1","handleGroupbyChange","groupByAppointment","handleFullScreenClose","push","handleFullScreenOpen","handleInputChange","toggle","handleDragandDropLogin","payload","appointmentDate","Room_Codeid","appt_status","bookingStatus","sec_status","edit_remark","item_id","emp_no","item_text","username","password","res","componentDidMount","filterDate","filterType","onContentReady","currentHour","component","scrollToTime","render","tokenDetail","t","meta","pagination","total_pages","current_page","format","String","role_code","toUpperCase","width","location","pathname","minWidth","handleAppointmentSetting","map","item","index","cust_code","cust_refer","cust_email","cust_nric","staffList","SchedulerSetting","startday_hour","endday_hour","cell_duration","allowDeleting","allowResizing","allowUpdating","allowDragging","autoScroll","scrollSpeed","group","mapStateToProps","appointment","authStore","tokenDetails","mapDispatchToProps","dispatch","NewSchedulerModal"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from \"react\";\r\nimport \"./devExpressScheduler/Styles.scss\";\r\nimport Scheduler, { Resource, View } from \"devextreme-react/scheduler\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport ResourceCell from \"./devExpressScheduler/ResourceCell\";\r\nimport fullscreenIcon from \"assets/images/fullScreen.png\";\r\nimport AppointmentCell from \"./devExpressScheduler/AppointmentCell\";\r\nimport { InputSearch } from \"../InputSearch\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  NormalButton,\r\n  NormalSelect,\r\n  NormalInput,\r\n  NormalModal,\r\n} from \"component/common\";\r\nimport { StaffSorting } from \"../../Admin/NewAppointment/NewListAppointment/modal/StaffSorting\";\r\nimport { BlockPopup } from \"../../Admin/NewAppointment/NewListAppointment/modal/BlockPopup\";\r\nimport { PrintModal } from \"../../Admin/NewAppointment/NewListAppointment/modal/PrintModal\";\r\nimport { Toast } from \"service/toast\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { getCommonApi, commonPatchApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { TreatmentHistory } from \"component/Admin/NewAppointment/NewListAppointment/modal/TreatmentHistory\";\r\nimport { UpcomingAppointment } from \"component/Admin/NewAppointment/NewListAppointment/modal/UpcomingAppointment\";\r\nimport setting from \"assets/images/settings.png\";\r\nimport { AppointmentSettings } from \"./devExpressScheduler/AppointmentSettings\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { history } from \"helpers\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\n\r\nconst groups = [\"id\"];\r\nconst draggingGroupName = \"appointmentsGroup\";\r\nconst sleep = milliseconds => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n};\r\nconst scrolling = { mode: \"virtual\" };\r\nconst views = [\r\n  {\r\n    type: \"day\",\r\n    name: \"day\",\r\n    groupOrientation: \"Horizontally\",\r\n    intervalCount: 1,\r\n  },\r\n  {\r\n    type: \"week\",\r\n    name: \"week\",\r\n    groupOrientation: \"vertical\",\r\n    intervalCount: 1,\r\n    maxAppointmentsPerCell: \"unlimited\",\r\n  },\r\n  {\r\n    type: \"month\",\r\n    name: \"month\",\r\n    intervalCount: 1,\r\n    groupOrientation: \"vertical\",\r\n    maxAppointmentsPerCell: \"unlimited\",\r\n  },\r\n];\r\nconst Dayview = [\r\n  {\r\n    type: \"day\",\r\n    name: \"day\",\r\n    groupOrientation: \"Horizontally\",\r\n    intervalCount: 1,\r\n  },\r\n];\r\n\r\nexport class NewSchedulerModalClass extends PureComponent {\r\n  state = {\r\n    selectedDate: new Date(),\r\n    selectedView: \"\",\r\n    DefaultDate: new Date(),\r\n    DefaultView: \"\",\r\n    searchtext: \"\",\r\n    SelectedList: [],\r\n    isOpenModal: false,\r\n    isOpenBlockModal: false,\r\n    appointmentId: 0,\r\n    SchedulerHeight: \"90%\",\r\n    isOpenPrintModal: false,\r\n    formFields: [],\r\n    groupByList: [\r\n      { label: \"Group by Staff\", value: \"staff\" },\r\n      { label: \"Group by Department\", value: \"department\" },\r\n      { label: \"Group by Room\", value: \"room\" },\r\n    ],\r\n    groupBy: \"staff\",\r\n    customerNumber: 0,\r\n    customerId: 0,\r\n    clickCount: 0,\r\n    visible: false,\r\n    customerOption: [],\r\n    isSettingsClick: false,\r\n    dayName: [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ],\r\n    day: new Date().getDay(),\r\n    passwordVisible: false,\r\n    dragusername: \"\",\r\n    dragpassword: \"\",\r\n    isDragConfirmation: false,\r\n  };\r\n\r\n  onEmptyClick = e => {\r\n    e.cancel = true;\r\n    let date = new Date(e.cellData.startDate);\r\n    if (e.cellData.groups) {\r\n      this.props.onEmptyClick(date, e.cellData);\r\n    }\r\n  };\r\n\r\n  onAppointmentDblClick = async e => {\r\n    e.cancel = true;\r\n    await this.setState({\r\n      appointmentId: 0,\r\n    });\r\n    let date = new Date(e.appointmentData.startDate);\r\n    if (e.appointmentData.status === \"Block\") {\r\n      await this.setState({ appointmentId: e.appointmentData.appt_id });\r\n      this.handleBlockDialog();\r\n    } else {\r\n      this.props.onEmptyClick(date, e.appointmentData);\r\n      await this.setState({\r\n        customerId: e.appointmentData.cust_id,\r\n        custName: e.appointmentData.cust_name,\r\n        custPhone: e.appointmentData.cust_phone,\r\n      });\r\n    }\r\n  };\r\n\r\n  onAppointmentSingleClick = async e => {\r\n    e.cancel = true;\r\n    if (e.appointmentData.status !== \"Block\") {\r\n      await this.setState({\r\n        customerId: e.appointmentData.cust_id,\r\n        custName: e.appointmentData.cust_name,\r\n        custPhone: e.appointmentData.cust_phone,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      DefaultDate: this.props.filterDate,\r\n      DefaultView: this.props.filterType,\r\n    });\r\n  }\r\n\r\n  handleViewChange = async e => {\r\n    //if (this.props.staffList.length > 0) {\r\n    await this.setState({\r\n      selectedView: e,\r\n    });\r\n    this.handleChange();\r\n    //}\r\n  };\r\n\r\n  handleDateChange = async e => {\r\n    let { day } = this.state;\r\n    if (this.state.selectedDate !== e) {\r\n      await this.setState({\r\n        selectedDate: e,\r\n      });\r\n      this.handleChange();\r\n    }\r\n    day = moment(this.state.selectedDate).day();\r\n    this.setState({ day });\r\n    console.log(day);\r\n  };\r\n\r\n  handleChange = () => {\r\n    let { selectedDate, selectedView, DefaultDate, DefaultView, searchtext } =\r\n      this.state;\r\n    let newDate = new Date();\r\n    let newMode = \"\";\r\n    let prevMode = DefaultView;\r\n    let prevDate = DefaultDate;\r\n    if (selectedView) {\r\n      newMode = selectedView;\r\n    } else {\r\n      newMode = DefaultView;\r\n    }\r\n    if (selectedDate) {\r\n      newDate = selectedDate;\r\n    } else {\r\n      newDate = selectedDate;\r\n    }\r\n    this.props.handleChangeFilter(\r\n      prevMode,\r\n      prevDate,\r\n      newMode,\r\n      newDate,\r\n      searchtext\r\n    );\r\n  };\r\n\r\n  onContentReady(e) {\r\n    console.log(e, \"oncontentreadylog\");\r\n    const currentHour = new Date().getHours() - 1;\r\n    e.component.scrollToTime(currentHour, 30, new Date());\r\n  }\r\n\r\n  handleSearch = async event => {\r\n    event.persist();\r\n    await this.setState({ searchtext: event.target.value });\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(() => {\r\n        this.handleChange();\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n  handleDragConfirmationDialog = async () => {\r\n    let { isDragConfirmation } = this.state;\r\n    isDragConfirmation = !isDragConfirmation;\r\n    await this.setState({\r\n      isDragConfirmation,\r\n    });\r\n    await this.props.getAppointmentWithStaff();\r\n  };\r\n  handleDialog = () => {\r\n    let { isOpenModal } = this.state;\r\n    isOpenModal = !isOpenModal;\r\n    this.setState({\r\n      isOpenModal,\r\n    });\r\n  };\r\n  handleSettingDialog = () => {\r\n    let { isSettingsClick } = this.state;\r\n    isSettingsClick = !isSettingsClick;\r\n    this.setState({\r\n      isSettingsClick,\r\n    });\r\n  };\r\n  handleBlockDialog = async () => {\r\n    await this.setState(prevState => ({\r\n      isOpenBlockModal: !prevState.isOpenBlockModal,\r\n    }));\r\n    await this.setState({ appointmentId: 0 });\r\n  };\r\n  handlePrintDialog = () => {\r\n    let { isOpenPrintModal } = this.state;\r\n    isOpenPrintModal = !isOpenPrintModal;\r\n    this.setState({\r\n      isOpenPrintModal,\r\n    });\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.handleBack();\r\n  };\r\n  handleNext = () => {\r\n    this.props.handleNext();\r\n  };\r\n  Snap = async () => {\r\n    await this.setState({\r\n      SchedulerHeight: \"350%\",\r\n    });\r\n    await sleep(2000); //\r\n    window.scrollTo(0, 0);\r\n    let img = \"\";\r\n    let base64URL = \"\";\r\n\r\n    html2canvas(document.querySelector(\"#Scheduler\"), {\r\n      allowTaint: true,\r\n      useCORS: true,\r\n      logging: false,\r\n      scale: 1,\r\n      removeContainer: true,\r\n    }).then(function (canvas) {\r\n      img = canvas.toDataURL(\"image/png\", 1);\r\n      base64URL = img.replace(\"image/png\", \"image/octet-stream\");\r\n      var byteCharacters = atob(\r\n        img.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\")\r\n      );\r\n      var byteNumbers = new Array(byteCharacters.length);\r\n      for (var i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      var byteArray = new Uint8Array(byteNumbers);\r\n      var file = new Blob([byteArray], { type: \"image/png\" + \";base64\" });\r\n      var fileURL = URL.createObjectURL(file);\r\n      var a = document.createElement(\"a\");\r\n      a.setAttribute(\"download\", \"myImage.png\");\r\n      a.setAttribute(\"href\", base64URL);\r\n      a.click();\r\n      window.open(fileURL);\r\n    });\r\n    window.scrollTo(0, document.documentElement.scrollHeight);\r\n    await this.setState({\r\n      SchedulerHeight: \"90%\",\r\n    });\r\n  };\r\n\r\n  getHoursFromDate = date => {\r\n    let hour = new Date(date).getHours();\r\n    let minute = new Date(date).getMinutes();\r\n    let hours = hour > 9 ? hour : \"0\" + hour;\r\n    let minutes = minute > 9 ? minute : \"0\" + minute;\r\n    return hours + \":\" + minutes;\r\n  };\r\n  // onDragStart = async e => {\r\n  //   if (e.itemData.status === \"Block\") {\r\n  //     e.cancel = true;\r\n  //   } else {\r\n  //     await sleep(300);\r\n  //     this.getDraggedData(e.itemData.appt_id);\r\n  //   }\r\n  // };\r\n  onDragStart = async e => {\r\n    console.log(e, \"drag start data\");\r\n    if (e.itemData.status === \"Block\") {\r\n      e.cancel = true;\r\n    } else if (e.itemData.link_flag) {\r\n      e.cancel = true;\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Linked appointment not allowed for dragging\",\r\n      });\r\n    }\r\n  };\r\n\r\n  onDragEnd = async e => {\r\n    await sleep(500);\r\n    if (e.itemData.appt_id) {\r\n      let { formFields, isDragConfirmation } = this.state;\r\n      let startTime = this.getHoursFromDate(e.itemData.startDate);\r\n      let endTime = this.getHoursFromDate(e.itemData.endDate);\r\n      let targetStaff = e.itemData.id;\r\n      this.props\r\n        .getCommonApi(`appointmentresources/${e.itemData.appt_id}/`)\r\n        .then(async key => {\r\n          let { status, data } = key;\r\n          console.log(key, \"drag end data response\");\r\n          let appt_Date = data.appt_date;\r\n          let date = appt_Date.split(\"/\");\r\n          let finaldate = date[2] + \"-\" + date[1] + \"-\" + date[0];\r\n          if (status === 200) {\r\n            formFields[\"appt_id\"] = e.itemData.appt_id;\r\n            formFields[\"custName\"] = data.cust_name;\r\n            formFields[\"appointmentDate\"] = finaldate;\r\n            formFields[\"bookingStatus\"] = data.booking_status;\r\n            formFields[\"new_remark\"] = data.ori_remark;\r\n            formFields[\"customerName\"] = data.cust_id;\r\n            formFields[\"Source_Codeid\"] = data.source_id;\r\n            formFields[\"Room_Codeid\"] = data.room_id;\r\n            formFields[\"sec_status\"] = data.secondary_status;\r\n            formFields[\"Appt_typeid\"] = data.channel_id;\r\n\r\n            formFields[\"start_time\"] = data ? data.start_time : \"\";\r\n            formFields[\"end_time\"] = data ? data.end_time : \"\";\r\n            formFields[\"Item_Codeid\"] = data.Item_Codeid;\r\n            formFields[\"Item_CodeName\"] = data.item_name;\r\n            formFields[\"emp_no\"] = data.emp_id;\r\n            formFields[\"add_duration\"] = data.add_duration;\r\n            formFields[\"edit_remark\"] = \"\";\r\n            formFields[\"requesttherapist\"] = data.requesttherapist;\r\n            formFields[\"recur_days\"] = data.recur_days;\r\n            formFields[\"recur_qty\"] = data.recur_qty;\r\n            formFields[\"item_text\"] = data.item_name;\r\n\r\n            if (\r\n              formFields[\"start_time\"] !== startTime ||\r\n              formFields[\"emp_no\"] !== targetStaff\r\n            ) {\r\n              formFields[\"appointmentDate\"] = e.itemData.endDate;\r\n              formFields[\"start_time\"] = startTime;\r\n              formFields[\"end_time\"] = endTime;\r\n              formFields[\"emp_no\"] = targetStaff;\r\n              formFields[\"item_text\"] = e.itemData.item_name;\r\n              formFields[\"recur_days\"] = null;\r\n              formFields[\"recur_qty\"] = null;\r\n              isDragConfirmation = false;\r\n              await this.setState({ formFields, isDragConfirmation });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleTreatmentHistory = () => {\r\n    let { customerId } = this.state;\r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isTreatmentHistoryModal: !prevState.isTreatmentHistoryModal,\r\n        customerNumber: this.state.customerId,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n  handleUpcomingAppointment = () => {\r\n    let { customerId } = this.state;\r\n    if (customerId > 0) {\r\n      this.setState(prevState => ({\r\n        isUpcomingAppointmentModal: !prevState.isUpcomingAppointmentModal,\r\n        customerNumber: this.state.customerId,\r\n      }));\r\n    } else {\r\n      Toast({ type: \"error\", message: \"Please select customer\" });\r\n    }\r\n  };\r\n  handleSearchCustomer = async event => {\r\n    //    event.persist();\r\n    let { custName, visible } = this.state;\r\n    custName = event.target.value;\r\n    visible = true;\r\n    await this.setState({ custName, visible });\r\n    console.log(this.state.custName);\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {\r\n        let { customerList } = this.state;\r\n        let { basicApptDetail } = this.props;\r\n        this.search(basicApptDetail);\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  search = basicApptDetail => {\r\n    let { custName } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `custappt/?Outlet=${\r\n          basicApptDetail.branchId ? basicApptDetail.branchId : \"\"\r\n        }&search=${custName}`\r\n      )\r\n      .then(key => {\r\n        // this.props.getCommonApi(`custappt/?search=${custName}`).then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          this.setState({ customerOption: data });\r\n        }\r\n      });\r\n  };\r\n  handleClick = key => {\r\n    if (!this.state.visible) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    if (this.state.visible) {\r\n      let { basicApptDetail } = this.props;\r\n      this.search(basicApptDetail);\r\n    }\r\n    this.setState(prevState => ({\r\n      visible: !prevState.visible,\r\n    }));\r\n  };\r\n  handleSettingClick = key => {\r\n    this.setState(prevState => ({\r\n      isSettingsClick: !prevState.isSettingsClick,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleClick();\r\n  };\r\n  handleSelectCustomer = async data => {\r\n    console.log(data, \"selectCustomer\");\r\n    await this.setState({\r\n      customerId: data.id,\r\n      custName: data.cust_name,\r\n      custPhone: data.cust_phone1,\r\n    });\r\n    this.handleClick();\r\n  };\r\n  handleGroupbyChange = async ({ target: { value, name } }) => {\r\n    if (value == \"\") {\r\n      value = \"staff\";\r\n    }\r\n    if (value !== this.state.groupBy) {\r\n      this.setState({\r\n        groupBy: value,\r\n      });\r\n      this.props.groupByAppointment(value);\r\n    }\r\n  };\r\n  handleFullScreenClose = () => {\r\n    history.push(\"/admin/newappointment\");\r\n    this.setState({ SchedulerHeight: \"70%\" });\r\n  };\r\n  handleFullScreenOpen = () => {\r\n    history.push(\"/admin/newappointmentfullscreen\");\r\n    this.setState({ SchedulerHeight: \"100%\" });\r\n  };\r\n\r\n  handleInputChange = async event => {\r\n    await this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  toggle = key => {\r\n    this.setState(prevState => ({\r\n      [key]: !prevState[key],\r\n    }));\r\n  };\r\n\r\n  handleDragandDropLogin = () => {\r\n    let { formFields, dragusername, dragpassword } = this.state;\r\n    let payload = {\r\n      appt_date: dateFormat(new Date(formFields.appointmentDate), \"yyyy-mm-dd\"),\r\n      Room_Codeid: formFields.Room_Codeid,\r\n      appt_status: formFields.bookingStatus,\r\n      sec_status: formFields.sec_status,\r\n      edit_remark: \"\",\r\n      start_time: formFields.start_time,\r\n      end_time: formFields.end_time,\r\n      item_id: formFields.Item_Codeid,\r\n      add_duration: formFields.add_duration,\r\n      emp_id: formFields.emp_no,\r\n      requesttherapist: formFields.requesttherapist,\r\n      item_text: formFields.item_text,\r\n      recur_qty: null,\r\n      recur_days: null,\r\n      username: dragusername,\r\n      password: dragpassword,\r\n    };\r\n\r\n    this.props\r\n      .commonPatchApi(`appointmentresources/${formFields.appt_id}/`, payload)\r\n      .then(async res => {\r\n        await this.setState({\r\n          isDragConfirmation: false,\r\n        });\r\n        await this.props.getAppointmentWithStaff();\r\n      });\r\n  };\r\n  render() {\r\n    let {\r\n      isOpenModal,\r\n      isOpenBlockModal,\r\n      appointmentId,\r\n      SchedulerHeight,\r\n      isOpenPrintModal,\r\n      groupBy,\r\n      isTreatmentHistoryModal,\r\n      isUpcomingAppointmentModal,\r\n      customerNumber,\r\n      visible,\r\n      customerOption,\r\n      selectedDate,\r\n      isSettingsClick,\r\n      dayName,\r\n      passwordVisible,\r\n      dragusername,\r\n      dragpassword,\r\n      isDragConfirmation,\r\n    } = this.state;\r\n    let { filterDate, tokenDetail, t } = this.props;\r\n    return (\r\n      // <div style={{ width: \"100%\", height: \"100%\" }}>\r\n      <React.Fragment>\r\n        <StaffSorting\r\n          isOpenModal={isOpenModal}\r\n          handleDialog={this.handleDialog}\r\n          handleChange={this.handleChange}\r\n          filterDate={filterDate}\r\n        />\r\n        {isOpenBlockModal ? (\r\n          <BlockPopup\r\n            isOpenBlockModal={isOpenBlockModal}\r\n            handleBlockDialog={this.handleBlockDialog}\r\n            handleChange={this.handleChange}\r\n            filterDate={filterDate}\r\n            appointmentId={appointmentId}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {isOpenPrintModal ? (\r\n          <PrintModal\r\n            isOpenPrintModal={isOpenPrintModal}\r\n            handlePrintDialog={this.handlePrintDialog}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div className=\"d-flex justify-content-start m-1 p-1\">\r\n          {this.props.meta ? (\r\n            <div className=\"col-md-1 col-12 text-right\">\r\n              {this.props.meta.pagination &&\r\n              this.props.meta.pagination.total_pages > 1 ? (\r\n                <div>\r\n                  {this.props.meta.pagination.total_pages <\r\n                    this.props.meta.pagination.current_page ||\r\n                  this.props.meta.pagination.current_page > 1 ||\r\n                  this.props.meta.pagination.total_pages ==\r\n                    this.props.meta.pagination.current_page ? (\r\n                    <button\r\n                      className=\"cursor-pointer dx-button-content disabled\"\r\n                      onClick={this.handleBack}\r\n                    >\r\n                      <svg\r\n                        width=\"9\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 6 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M5 0.5L1 5L5 9.5\"\r\n                          stroke=\"#888888\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {/* <span className=\"dx-button-staff-content\"> Staff </span> */}\r\n                  {this.props.meta.pagination.total_pages >\r\n                    this.props.meta.pagination.current_page &&\r\n                  this.props.meta.pagination.total_pages !==\r\n                    this.props.meta.pagination.current_page &&\r\n                  this.props.meta.pagination.current_page > 0 ? (\r\n                    <button\r\n                      className=\"cursor-pointer dx-button-content\"\r\n                      onClick={this.handleNext}\r\n                    >\r\n                      <svg\r\n                        width=\"9\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 6 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M0.5 9.5L4.5 5L0.5 0.5\"\r\n                          stroke=\"#888888\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"col-md-1\">\r\n            <NormalButton\r\n              buttonClass={\"p-0 mr-1\"}\r\n              mainbg={true}\r\n              className=\"fs-15 submit-btn\"\r\n              label={`Today`}\r\n              outline={false}\r\n              onClick={() => {\r\n                this.handleDateChange(new Date());\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-12\">\r\n            <div className=\"d-flex flex-nowrap\">\r\n              <NormalInput\r\n                className=\"col-md-6 mr-1\"\r\n                placeholder=\"customer..\"\r\n                value={this.state.custName}\r\n                name=\"custName\"\r\n                onChange={this.handleSearchCustomer}\r\n                onClick={this.handleClick}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"mr-1\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 m-0 p-1\"\r\n                label=\"Upcoming\"\r\n                onClick={this.handleUpcomingAppointment}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"mr-1\"}\r\n                mainbg={true}\r\n                className=\"col-12 fs-15 \"\r\n                label=\"History\"\r\n                onClick={this.handleTreatmentHistory}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-2 w-100\">\r\n            {/*<NormalSelect\r\n              options={this.state.groupByList}\r\n              placeholderrequired={`false`}\r\n              value={this.state.groupBy}\r\n              name=\"groupBy\"\r\n              onChange={this.handleGroupbyChange}\r\n              className=\"status py-1\"\r\n              label={t(\"Group by Staff\")}\r\n            />*/}\r\n            <NormalInput\r\n              name=\"selecteddate\"\r\n              value={\r\n                dayName[this.state.day] +\r\n                \" \" +\r\n                moment(selectedDate).format(\"DD/MM/YYYY\")\r\n              }\r\n              disabled={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-5 col-12\">\r\n            <div className=\"d-flex flex-nowrap\">\r\n              <NormalButton\r\n                buttonClass={\"p-0 mr-1\"}\r\n                mainbg={true}\r\n                className=\" fs-14 confirm mr-1\"\r\n                label={t(\"Snap\")}\r\n                outline={false}\r\n                onClick={this.Snap}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"p-0 mr-1\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm mr-1\"\r\n                label={`Print`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenPrintModal: true });\r\n                }}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"p-0 mr-1\"}\r\n                mainbg={true}\r\n                className=\" fs-15 confirm mr-1\"\r\n                label={`Sort`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenModal: true });\r\n                }}\r\n              />\r\n              <NormalButton\r\n                buttonClass={\"p-0 mr-1\"}\r\n                mainbg={true}\r\n                className=\"fs-15 confirm\"\r\n                label={`Block`}\r\n                outline={false}\r\n                onClick={() => {\r\n                  this.setState({ isOpenBlockModal: true });\r\n                }}\r\n              />\r\n\r\n              <div className=\"col-md-4\">\r\n                <InputSearch\r\n                  placeholder=\"Search here..\"\r\n                  value={this.state.searchtext}\r\n                  onChange={this.handleSearch}\r\n                  name=\"searchtext\"\r\n                />\r\n              </div>\r\n              {String(tokenDetail.role_code).toUpperCase() === \"1\" ? (\r\n                <img\r\n                  onClick={this.handleSettingClick}\r\n                  className=\"close cursor-pointer\"\r\n                  src={setting}\r\n                  alt=\"\"\r\n                  width=\"35\"\r\n                  height=\"35\"\r\n                />\r\n              ) : null}\r\n              <div className=\"ml-3 pt-1\">\r\n                <img\r\n                  style={{ width: 30 }}\r\n                  onClick={\r\n                    window.location.pathname ==\r\n                    \"/admin/newappointmentfullscreen\"\r\n                      ? this.handleFullScreenClose\r\n                      : this.handleFullScreenOpen\r\n                  }\r\n                  className=\"close cursor-pointer tooltip-img ml-1\"\r\n                  src={fullscreenIcon}\r\n                  alt=\"\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"bottom\"\r\n                  title={\r\n                    window.location.pathname ==\r\n                    \"/admin/newappointmentfullscreen\"\r\n                      ? \"Exit Fullscreen Mode\"\r\n                      : \"Fullscreen Mode\"\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <NormalModal\r\n                className={\"transaction-done-modal top-up-modal\"}\r\n                style={{ minWidth: \"55%\" }}\r\n                modal={isSettingsClick}\r\n                handleModal={this.handleSettingDialog}\r\n              >\r\n                <img\r\n                  onClick={this.handleSettingDialog}\r\n                  className=\"close cursor-pointer\"\r\n                  src={closeIcon}\r\n                  alt=\"\"\r\n                />\r\n                <AppointmentSettings\r\n                  handleModal={this.handleSettingDialog}\r\n                  handleSettingChange={this.props.handleAppointmentSetting}\r\n                />\r\n              </NormalModal>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {isTreatmentHistoryModal ? (\r\n          <TreatmentHistory\r\n            isTreatmentHistoryModal={isTreatmentHistoryModal}\r\n            handleTreatmentHistory={this.handleTreatmentHistory}\r\n            customerNumber={this.state.customerNumber}\r\n            custName={this.state.custName}\r\n            custPhone={this.state.custPhone}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {isUpcomingAppointmentModal ? (\r\n          <UpcomingAppointment\r\n            isUpcomingAppointmentModal={isUpcomingAppointmentModal}\r\n            handleUpcomingAppointment={this.handleUpcomingAppointment}\r\n            customerNumber={this.state.customerNumber}\r\n            custName={this.state.custName}\r\n            custPhone={this.state.custPhone}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {visible ? (\r\n          <div className=\"AppointmentStaffList\">\r\n            <div className=\"customerSearch-block\">\r\n              <div className=\"d-flex mt-4 table table-header w-100 m-0\">\r\n                <div className=\"col-2\">{t(\"Name\")}</div>\r\n                <div className=\"col-2\">{t(\"Phone\")}</div>\r\n                <div className=\"col-2\">{t(\"Customer Code\")}</div>\r\n                <div className=\"col-2\">{t(\"Reference\")}</div>\r\n                <div className=\"col-3\">{t(\"Email\")}</div>\r\n                <div className=\"col-1\">{t(\"NRIC\")}</div>\r\n              </div>\r\n              <div className=\"response-table w-100\">\r\n                {customerOption.length > 0 ? (\r\n                  customerOption.map((item, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"row m-0 table-body w-100 border\"\r\n                        onClick={() => this.handleSelectCustomer(item)}\r\n                        key={index}\r\n                      >\r\n                        <div className=\"col-2\">{item.cust_name}</div>\r\n                        <div className=\"col-2\">{item.cust_phone1}</div>\r\n                        <div className=\"col-2\">{item.cust_code}</div>\r\n                        <div className=\"col-2\">{item.cust_refer}</div>\r\n                        <div className=\"col-3\">{item.cust_email}</div>\r\n                        <div className=\"col-1\">{item.cust_nric}</div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div className=\"text-center w-100\">\r\n                    {t(\"No Data are available\")}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <NormalModal\r\n          className={\"d-flex justify-content-center\"}\r\n          style={{ minWidth: \"20%\" }}\r\n          modal={isDragConfirmation}\r\n          handleModal={this.handleDragConfirmationDialog}\r\n        >\r\n          <img\r\n            onClick={this.handleDragConfirmationDialog}\r\n            className=\"close cursor-pointer\"\r\n            src={closeIcon}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"d-flex flex-wrap\">\r\n              <div className=\"col-12 mb-4\">\r\n                <p>{t(\"Please enter your login credential\")} </p>\r\n              </div>\r\n              <div className=\"col-12 form-group mb-3 pb-2\">\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    placeholder=\"Username\"\r\n                    value={dragusername}\r\n                    name=\"dragusername\"\r\n                    autocomplete=\"off\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 form-group mb-3 pb-2\">\r\n                <div className=\"input-group\">\r\n                  <NormalInput\r\n                    type={passwordVisible ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    value={dragpassword}\r\n                    name=\"dragpassword\"\r\n                    autocomplete=\"off\"\r\n                    onChange={e => this.handleInputChange(e)}\r\n                  />\r\n                  <div className=\"input-group-addon right fs-14\">\r\n                    <span\r\n                      onClick={() => this.toggle(\"passwordVisible\")}\r\n                      className={`icon-${\r\n                        passwordVisible ? \"eye\" : \"eye-blocked\"\r\n                      } cursor-pointer fs-24`}\r\n                    ></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group mb-0 p-0 d-flex justify-content-center col-12\">\r\n                <NormalButton\r\n                  onClick={this.handleDragandDropLogin}\r\n                  label=\"PROCEED\"\r\n                  className=\"col-12 submit-btn\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </NormalModal>\r\n        <Scheduler\r\n          id=\"Scheduler\"\r\n          className=\"col-12 m-0 p-0\"\r\n          height={SchedulerHeight}\r\n          dataSource={this.props.staffList.length > 0 ? this.props.event : []}\r\n          // views={this.props.staffList.length > 0 ? views : Dayview}\r\n          views={views}\r\n          onContentReady={this.onContentReady}\r\n          defaultCurrentView=\"day\"\r\n          currentDate={selectedDate}\r\n          defaultCurrentDate={new Date()}\r\n          groups={this.props.staffList.length > 0 ? groups : []}\r\n          // startDayHour={8}\r\n          // endDayHour={21}\r\n          // cellDuration={15}\r\n          startDayHour={\r\n            this.props.SchedulerSetting.startday_hour\r\n              ? this.props.SchedulerSetting.startday_hour\r\n              : 8\r\n          }\r\n          endDayHour={\r\n            this.props.SchedulerSetting.endday_hour\r\n              ? this.props.SchedulerSetting.endday_hour\r\n              : 21\r\n          }\r\n          cellDuration={\r\n            this.props.SchedulerSetting.cell_duration\r\n              ? this.props.SchedulerSetting.cell_duration\r\n              : 15\r\n          }\r\n          firstDayOfWeek={0}\r\n          showAllDayPanel={false}\r\n          crossScrollingEnabled={true}\r\n          resourceCellComponent={ResourceCell}\r\n          editing={{\r\n            allowDeleting: false,\r\n            allowResizing: false,\r\n            allowUpdating: true,\r\n            allowDragging: true,\r\n            allowTaint: true,\r\n          }}\r\n          onAppointmentClick={e => {\r\n            e.cancel = true;\r\n          }}\r\n          onAppointmentDblClick={e => this.onAppointmentDblClick(e)}\r\n          onCellClick={e => this.onEmptyClick(e)}\r\n          //dateSerializationFormat=\"yyyy-MM-ddTHH:mm:ssZ\"\r\n          appointmentComponent={AppointmentCell}\r\n          onCurrentViewChange={this.handleViewChange}\r\n          onCurrentDateChange={this.handleDateChange}\r\n          appointmentDragging={{\r\n            autoScroll: true,\r\n            scrollSpeed: 25,\r\n            group: { draggingGroupName },\r\n            onDragStart: e => this.onDragStart(e),\r\n            onDragEnd: e => this.onDragEnd(e),\r\n          }}\r\n          scrolling={scrolling}\r\n        >\r\n          <View type=\"day\" label={t(\"day\")} />\r\n          <View type=\"week\" label=\"week\" />\r\n          <View type=\"month\" label=\"month\" />\r\n          <Resource\r\n            dataSource={this.props.staffList}\r\n            fieldExpr=\"id\"\r\n            useColorAsDefault={true}\r\n            allowMultiple={false}\r\n          />\r\n        </Scheduler>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  SchedulerSetting: state.appointment.SchedulerSetting,\r\n  tokenDetail: state.authStore.tokenDetails,\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonPatchApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const NewSchedulerModal = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(NewSchedulerModalClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}