{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/view_data_provider.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else {\n      if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\n    return Array.from(iter);\n  }\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    return _arrayLikeToArray(arr);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar ViewDataGenerator = function () {\n  function ViewDataGenerator(workspace) {\n    _classCallCheck(this, ViewDataGenerator);\n\n    this.workspace = workspace;\n  }\n\n  _createClass(ViewDataGenerator, [{\n    key: \"_getCompleteViewDataMap\",\n    value: function (options) {\n      var rowCount = options.nonVirtualRowCount,\n          cellCount = options.cellCount,\n          verticalGroupCount = options.verticalGroupCount;\n      var viewDataMap = [];\n\n      for (var groupIndex = 0; groupIndex < verticalGroupCount; groupIndex += 1) {\n        var allDayPanelData = this._generateAllDayPanelData(options, groupIndex, rowCount, cellCount);\n\n        var viewCellsData = this._generateViewCellsData(options, rowCount, 0, rowCount * groupIndex);\n\n        allDayPanelData && viewDataMap.push(allDayPanelData);\n        viewDataMap.push.apply(viewDataMap, _toConsumableArray(viewCellsData));\n      }\n\n      return viewDataMap;\n    }\n  }, {\n    key: \"_generateViewDataMap\",\n    value: function (completeViewDataMap, options) {\n      var startRowIndex = options.startRowIndex,\n          rowCount = options.rowCount;\n\n      var isVerticalGrouping = this.workspace._isVerticalGroupedWorkSpace();\n\n      var showAllDayPanel = this.workspace._isShowAllDayPanel();\n\n      var indexDifference = isVerticalGrouping || !showAllDayPanel ? 0 : 1;\n      var correctedStartRowIndex = startRowIndex + indexDifference;\n      return completeViewDataMap.slice(correctedStartRowIndex, correctedStartRowIndex + rowCount).map(function (cellsRow, rowIndex) {\n        return cellsRow.map(function (cellData, cellIndex) {\n          return {\n            cellData: cellData,\n            position: {\n              rowIndex: rowIndex,\n              cellIndex: cellIndex\n            }\n          };\n        });\n      });\n    }\n  }, {\n    key: \"_getViewDataFromMap\",\n    value: function (viewDataMap, completeViewDataMap, options) {\n      var topVirtualRowHeight = options.topVirtualRowHeight,\n          bottomVirtualRowHeight = options.bottomVirtualRowHeight,\n          cellCountInGroupRow = options.cellCountInGroupRow;\n      var isGroupedAllDayPanel = this.workspace.isGroupedAllDayPanel();\n\n      var _viewDataMap$reduce = viewDataMap.reduce(function (_ref, cellsRow) {\n        var previousGroupIndex = _ref.previousGroupIndex,\n            previousGroupedData = _ref.previousGroupedData;\n        var cellDataRow = cellsRow.map(function (_ref2) {\n          var cellData = _ref2.cellData;\n          return cellData;\n        });\n        var firstCell = cellDataRow[0];\n        var isAllDayRow = firstCell.allDay;\n        var currentGroupIndex = firstCell.groupIndex;\n\n        if (currentGroupIndex !== previousGroupIndex) {\n          previousGroupedData.push({\n            dateTable: [],\n            isGroupedAllDayPanel: isGroupedAllDayPanel,\n            groupIndex: currentGroupIndex\n          });\n        }\n\n        if (isAllDayRow) {\n          previousGroupedData[previousGroupedData.length - 1].allDayPanel = cellDataRow;\n        } else {\n          previousGroupedData[previousGroupedData.length - 1].dateTable.push(cellDataRow);\n        }\n\n        return {\n          previousGroupedData: previousGroupedData,\n          previousGroupIndex: currentGroupIndex\n        };\n      }, {\n        previousGroupIndex: -1,\n        previousGroupedData: []\n      }),\n          groupedData = _viewDataMap$reduce.previousGroupedData;\n\n      var isVirtualScrolling = this.workspace.isVirtualScrolling();\n\n      var isVerticalGrouping = this.workspace._isVerticalGroupedWorkSpace();\n\n      var showAllDayPanel = this.workspace._isShowAllDayPanel();\n\n      if (!isVerticalGrouping && showAllDayPanel) {\n        groupedData[0].allDayPanel = completeViewDataMap[0];\n      }\n\n      return {\n        groupedData: groupedData,\n        isVirtual: isVirtualScrolling,\n        topVirtualRowHeight: topVirtualRowHeight,\n        bottomVirtualRowHeight: bottomVirtualRowHeight,\n        cellCountInGroupRow: cellCountInGroupRow\n      };\n    }\n  }, {\n    key: \"_generateViewCellsData\",\n    value: function (options, renderRowCount, startRowIndex, rowOffset) {\n      var cellCount = options.cellCount,\n          cellDataGetters = options.cellDataGetters,\n          rowCountInGroup = options.rowCountInGroup;\n      var viewCellsData = [];\n\n      for (var i = 0; i < renderRowCount; ++i) {\n        var rowIndex = startRowIndex + rowOffset + i;\n        var rowIndexInGroup = rowIndex % rowCountInGroup;\n        viewCellsData.push(this._generateCellsRow(options, cellDataGetters, rowIndex, cellCount, rowIndexInGroup));\n      }\n\n      return viewCellsData;\n    }\n  }, {\n    key: \"_generateAllDayPanelData\",\n    value: function (options, groupIndex, rowCount, cellCount) {\n      var workSpace = this.workspace;\n\n      if (!workSpace._isShowAllDayPanel()) {\n        return null;\n      }\n\n      var rowIndex = Math.max(groupIndex * rowCount, 0);\n      return this._generateCellsRow(options, [workSpace._getAllDayCellData.bind(workSpace)], rowIndex, cellCount, 0, groupIndex);\n    }\n  }, {\n    key: \"_generateCellsRow\",\n    value: function (options, cellDataGetters, rowIndex, cellCount, rowIndexInGroup, groupIndex) {\n      var _this = this;\n\n      var cellsRow = [];\n      var horizontalGroupCount = options.horizontalGroupCount,\n          groupOrientation = options.groupOrientation,\n          rowCountInGroup = options.rowCountInGroup,\n          cellCountInGroupRow = options.cellCountInGroupRow,\n          groupCount = options.groupCount;\n\n      var _loop = function (columnIndex) {\n        var cellDataValue = cellDataGetters.reduce(function (data, getter) {\n          return _objectSpread(_objectSpread({}, data), getter(void 0, rowIndex, columnIndex, groupIndex).value);\n        }, {});\n        cellDataValue.index = _this._calculateCellIndex(horizontalGroupCount, groupOrientation, _this._workspace.isGroupedByDate(), rowIndexInGroup, columnIndex, cellCount);\n        cellDataValue.isFirstGroupCell = _this._isFirstGroupCell(rowIndex, columnIndex, rowCountInGroup, cellCountInGroupRow, groupCount);\n        cellDataValue.isLastGroupCell = _this._isLastGroupCell(rowIndex, columnIndex, rowCountInGroup, cellCountInGroupRow, groupCount);\n        cellDataValue.key = _this._getKeyByRowAndColumn(rowIndex, columnIndex, cellCount);\n        cellsRow.push(cellDataValue);\n      };\n\n      for (var columnIndex = 0; columnIndex < cellCount; ++columnIndex) {\n        _loop(columnIndex);\n      }\n\n      return cellsRow;\n    }\n  }, {\n    key: \"_calculateCellIndex\",\n    value: function (horizontalGroupCount, groupOrientation, isGroupedByDate, rowIndex, columnIndex, columnsNumber) {\n      var groupCount = horizontalGroupCount || 1;\n      var index = rowIndex * columnsNumber + columnIndex;\n      var columnsInGroup = columnsNumber / groupCount;\n\n      if (\"horizontal\" === groupOrientation) {\n        var columnIndexInCurrentGroup = columnIndex % columnsInGroup;\n\n        if (isGroupedByDate) {\n          columnIndexInCurrentGroup = Math.floor(columnIndex / groupCount);\n        }\n\n        index = rowIndex * columnsInGroup + columnIndexInCurrentGroup;\n      }\n\n      return index;\n    }\n  }, {\n    key: \"_getKeyByRowAndColumn\",\n    value: function (rowIndex, columnIndex, cellCount) {\n      return rowIndex * cellCount + columnIndex;\n    }\n  }, {\n    key: \"generateGroupedDataMap\",\n    value: function (viewDataMap) {\n      var _viewDataMap$reduce2 = viewDataMap.reduce(function (previousOptions, cellsRow) {\n        var previousGroupedDataMap = previousOptions.previousGroupedDataMap,\n            previousRowIndex = previousOptions.previousRowIndex,\n            previousGroupIndex = previousOptions.previousGroupIndex;\n        var currentGroupIndex = cellsRow[0].cellData.groupIndex;\n        var currentRowIndex = currentGroupIndex === previousGroupIndex ? previousRowIndex + 1 : 0;\n        cellsRow.forEach(function (cell) {\n          var groupIndex = cell.cellData.groupIndex;\n\n          if (!previousGroupedDataMap[groupIndex]) {\n            previousGroupedDataMap[groupIndex] = [];\n          }\n\n          if (!previousGroupedDataMap[groupIndex][currentRowIndex]) {\n            previousGroupedDataMap[groupIndex][currentRowIndex] = [];\n          }\n\n          previousGroupedDataMap[groupIndex][currentRowIndex].push(cell);\n        });\n        return {\n          previousGroupedDataMap: previousGroupedDataMap,\n          previousRowIndex: currentRowIndex,\n          previousGroupIndex: currentGroupIndex\n        };\n      }, {\n        previousGroupedDataMap: [],\n        previousRowIndex: -1,\n        previousGroupIndex: -1\n      }),\n          groupedDataMap = _viewDataMap$reduce2.previousGroupedDataMap;\n\n      return groupedDataMap;\n    }\n  }, {\n    key: \"_isFirstGroupCell\",\n    value: function (rowIndex, columnIndex, singleGroupRowCount, singleGroupColumnCount, groupCount) {\n      if (this.workspace.isGroupedByDate()) {\n        return columnIndex % groupCount === 0;\n      }\n\n      if (this.workspace._isHorizontalGroupedWorkSpace() || 0 === groupCount) {\n        return columnIndex % singleGroupColumnCount === 0;\n      }\n\n      return rowIndex % singleGroupRowCount === 0;\n    }\n  }, {\n    key: \"_isLastGroupCell\",\n    value: function (rowIndex, columnIndex, singleGroupRowCount, singleGroupColumnCount, groupCount) {\n      if (this.workspace.isGroupedByDate()) {\n        return (columnIndex + 1) % groupCount === 0;\n      }\n\n      if (this.workspace._isHorizontalGroupedWorkSpace() || 0 === groupCount) {\n        return (columnIndex + 1) % singleGroupColumnCount === 0;\n      }\n\n      return (rowIndex + 1) % singleGroupRowCount === 0;\n    }\n  }, {\n    key: \"workspace\",\n    get: function () {\n      return this._workspace;\n    },\n    set: function (value) {\n      this._workspace = value;\n    }\n  }]);\n\n  return ViewDataGenerator;\n}();\n\nvar ViewDataProvider = function () {\n  function ViewDataProvider(workspace) {\n    _classCallCheck(this, ViewDataProvider);\n\n    this._viewDataGenerator = null;\n    this._viewData = [];\n    this._completeViewDataMap = [];\n    this._completeGroupedViewDataMap = [];\n    this._viewDataMap = [];\n    this._groupedDataMap = [];\n    this._workspace = workspace;\n  }\n\n  _createClass(ViewDataProvider, [{\n    key: \"update\",\n    value: function (isGenerateNewViewData) {\n      var viewDataGenerator = this.viewDataGenerator,\n          _workspace = this._workspace;\n\n      var renderOptions = _workspace.generateRenderOptions();\n\n      if (isGenerateNewViewData) {\n        this.completeViewDataMap = viewDataGenerator._getCompleteViewDataMap(renderOptions);\n      }\n\n      this.viewDataMap = viewDataGenerator._generateViewDataMap(this.completeViewDataMap, renderOptions);\n      this.viewData = viewDataGenerator._getViewDataFromMap(this.viewDataMap, this.completeViewDataMap, renderOptions);\n      this.groupedDataMap = viewDataGenerator.generateGroupedDataMap(this.viewDataMap);\n    }\n  }, {\n    key: \"getStartDate\",\n    value: function () {\n      var groupedData = this.viewData.groupedData;\n      var dateTable = groupedData[0].dateTable;\n      return dateTable[0][0].startDate;\n    }\n  }, {\n    key: \"getGroupStartDate\",\n    value: function (groupIndex) {\n      var _this$getGroupData = this.getGroupData(groupIndex),\n          dateTable = _this$getGroupData.dateTable;\n\n      return dateTable[0][0].startDate;\n    }\n  }, {\n    key: \"getGroupEndDate\",\n    value: function (groupIndex) {\n      var _this$getGroupData2 = this.getGroupData(groupIndex),\n          dateTable = _this$getGroupData2.dateTable;\n\n      var lastRowIndex = dateTable.length - 1;\n      var lastCellIndex = dateTable[lastRowIndex].length - 1;\n      return dateTable[lastRowIndex][lastCellIndex].endDate;\n    }\n  }, {\n    key: \"findGroupCellStartDate\",\n    value: function (groupIndex, startDate, endDate, isAllDay) {\n      if (isAllDay) {\n        return this.findAllDayGroupCellStartDate(groupIndex, startDate);\n      }\n\n      var _this$getGroupData3 = this.getGroupData(groupIndex),\n          dateTable = _this$getGroupData3.dateTable;\n\n      if (!dateTable.length) {\n        return;\n      }\n\n      for (var i = 0; i < dateTable[0].length; ++i) {\n        var cell = dateTable[0][i];\n        var lastRowIndex = dateTable.length - 1;\n\n        if (_date.default.sameDate(cell.startDate, startDate)) {\n          var _lastCell;\n\n          var lastCell = dateTable[lastRowIndex][i];\n\n          if (lastCell.endDate <= startDate) {\n            if (endDate.getDate() > startDate.getDate()) {\n              cell = dateTable[0][i + 1];\n              lastCell = dateTable[lastRowIndex][i + 1];\n            }\n          }\n\n          if ((null === (_lastCell = lastCell) || void 0 === _lastCell ? void 0 : _lastCell.endDate) > startDate) {\n            return cell.startDate;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"findAllDayGroupCellStartDate\",\n    value: function (groupIndex, startDate) {\n      var groupStartDate = this.getGroupStartDate(groupIndex);\n      return groupStartDate > startDate ? groupStartDate : startDate;\n    }\n  }, {\n    key: \"getCellsGroup\",\n    value: function (groupIndex) {\n      var _this$getGroupData4 = this.getGroupData(groupIndex),\n          dateTable = _this$getGroupData4.dateTable;\n\n      return dateTable[0][0].groups;\n    }\n  }, {\n    key: \"getCellData\",\n    value: function (rowIndex, cellIndex, isAllDay) {\n      if (isAllDay && !this._workspace._isVerticalGroupedWorkSpace()) {\n        return this._viewData.groupedData[0].allDayPanel[cellIndex];\n      }\n\n      var cellData = this.viewDataMap[rowIndex][cellIndex].cellData;\n      return cellData;\n    }\n  }, {\n    key: \"getCellsByGroupIndexAndAllDay\",\n    value: function (groupIndex, allDay) {\n      var workspace = this._workspace;\n\n      var rowsPerGroup = workspace._getRowCountWithAllDayRows();\n\n      var isVerticalGrouping = workspace._isVerticalGroupedWorkSpace();\n\n      var isShowAllDayPanel = workspace._isShowAllDayPanel();\n\n      var firstRowInGroup = isVerticalGrouping ? groupIndex * rowsPerGroup : 0;\n      var lastRowInGroup = isVerticalGrouping ? (groupIndex + 1) * rowsPerGroup - 1 : rowsPerGroup;\n      var correctedFirstRow = isShowAllDayPanel && !allDay ? firstRowInGroup + 1 : firstRowInGroup;\n      var correctedLastRow = allDay ? correctedFirstRow : lastRowInGroup;\n      return this.completeViewDataMap.slice(correctedFirstRow, correctedLastRow + 1).map(function (row) {\n        return row.filter(function (_ref3) {\n          var currentGroupIndex = _ref3.groupIndex;\n          return groupIndex === currentGroupIndex;\n        });\n      });\n    }\n  }, {\n    key: \"findCellPositionInMap\",\n    value: function (groupIndex, startDate, isAllDay) {\n      var startTime = isAllDay ? _date.default.trimTime(startDate).getTime() : startDate.getTime();\n\n      var isStartTimeInCell = function (cellData) {\n        var cellStartTime = cellData.startDate.getTime();\n        var cellEndTime = cellData.endDate.getTime();\n        return isAllDay ? cellData.allDay && startTime >= cellStartTime && startTime <= cellEndTime : startTime >= cellStartTime && startTime < cellEndTime;\n      };\n\n      var rows = isAllDay && !this._workspace._isVerticalGroupedWorkSpace() ? [this.completeViewDataMap[0].map(function (cell, index) {\n        return {\n          cellData: cell,\n          position: {\n            cellIndex: index,\n            rowIndex: 0\n          }\n        };\n      })] : this.groupedDataMap[groupIndex] || [];\n\n      for (var rowIndex = 0; rowIndex < rows.length; ++rowIndex) {\n        var row = rows[rowIndex];\n\n        for (var cellIndex = 0; cellIndex < row.length; ++cellIndex) {\n          var cell = row[cellIndex];\n          var cellData = cell.cellData;\n\n          if (cellData.groupIndex === groupIndex) {\n            if (isStartTimeInCell(cellData)) {\n              return cell.position;\n            }\n          }\n        }\n      }\n\n      return;\n    }\n  }, {\n    key: \"getGroupIndices\",\n    value: function () {\n      var groupedData = this.viewData.groupedData;\n      return groupedData.map(function (_ref4) {\n        var groupIndex = _ref4.groupIndex;\n        return groupIndex;\n      });\n    }\n  }, {\n    key: \"_getLastGroupRow\",\n    value: function (groupIndex) {\n      var group = this.groupedDataMap[groupIndex];\n      var lastIndex = group.length - 1;\n      return group[lastIndex];\n    }\n  }, {\n    key: \"getLasGroupCellPosition\",\n    value: function (groupIndex) {\n      var groupRow = this._getLastGroupRow(groupIndex);\n\n      return groupRow[0].position;\n    }\n  }, {\n    key: \"getLasGroupCellIndex\",\n    value: function (groupIndex) {\n      var group = this.groupedDataMap[groupIndex];\n      return group.length - 1;\n    }\n  }, {\n    key: \"getRowCountInGroup\",\n    value: function (groupIndex) {\n      var groupRow = this._getLastGroupRow(groupIndex);\n\n      var cellAmount = groupRow.length;\n      var lastCellData = groupRow[cellAmount - 1].cellData;\n      var lastCellIndex = lastCellData.index;\n      return (lastCellIndex + 1) / groupRow.length;\n    }\n  }, {\n    key: \"getGroupData\",\n    value: function (groupIndex) {\n      var groupedData = this.viewData.groupedData;\n      return groupedData.filter(function (item) {\n        return item.groupIndex === groupIndex;\n      })[0];\n    }\n  }, {\n    key: \"isGroupIntersectDateInterval\",\n    value: function (groupIndex, startDate, endDate) {\n      var groupStartDate = this.getGroupStartDate(groupIndex);\n      var groupEndDate = this.getGroupEndDate(groupIndex);\n      return startDate < groupEndDate && endDate > groupStartDate;\n    }\n  }, {\n    key: \"findGlobalCellPosition\",\n    value: function (date) {\n      var groupIndex = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;\n      var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n      var completeViewDataMap = this.completeViewDataMap,\n          workspace = this._workspace;\n\n      var showAllDayPanel = workspace._isShowAllDayPanel();\n\n      var isVerticalGroupOrientation = workspace._isVerticalGroupedWorkSpace();\n\n      for (var rowIndex = 0; rowIndex < completeViewDataMap.length; rowIndex += 1) {\n        var currentRow = completeViewDataMap[rowIndex];\n\n        for (var columnIndex = 0; columnIndex < currentRow.length; columnIndex += 1) {\n          var cellData = currentRow[columnIndex];\n          var currentStartDate = cellData.startDate,\n              currentEndDate = cellData.endDate,\n              currentGroupIndex = cellData.groupIndex,\n              currentAllDay = cellData.allDay;\n\n          if (groupIndex === currentGroupIndex && allDay === currentAllDay && this._compareDatesAndAllDay(date, currentStartDate, currentEndDate, allDay)) {\n            return {\n              position: {\n                columnIndex: columnIndex,\n                rowIndex: showAllDayPanel && !isVerticalGroupOrientation ? rowIndex - 1 : rowIndex\n              },\n              cellData: cellData\n            };\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_compareDatesAndAllDay\",\n    value: function (date, cellStartDate, cellEndDate, allDay) {\n      var time = date.getTime();\n\n      var trimmedTime = _date.default.trimTime(date).getTime();\n\n      var cellStartTime = cellStartDate.getTime();\n      var cellEndTime = cellEndDate.getTime();\n      return !allDay && time >= cellStartTime && time < cellEndTime || allDay && trimmedTime === cellStartTime;\n    }\n  }, {\n    key: \"viewDataGenerator\",\n    get: function () {\n      if (!this._viewDataGenerator) {\n        this._viewDataGenerator = new ViewDataGenerator(this._workspace);\n      }\n\n      return this._viewDataGenerator;\n    }\n  }, {\n    key: \"completeViewDataMap\",\n    get: function () {\n      return this._completeViewDataMap;\n    },\n    set: function (value) {\n      this._completeViewDataMap = value;\n    }\n  }, {\n    key: \"completeGroupedViewDataMap\",\n    get: function () {\n      return this._completeGroupedViewDataMap;\n    },\n    set: function (value) {\n      this._completeGroupedViewDataMap = value;\n    }\n  }, {\n    key: \"viewData\",\n    get: function () {\n      return this._viewData;\n    },\n    set: function (value) {\n      this._viewData = value;\n    }\n  }, {\n    key: \"viewDataMap\",\n    get: function () {\n      return this._viewDataMap;\n    },\n    set: function (value) {\n      this._viewDataMap = value;\n    }\n  }, {\n    key: \"groupedDataMap\",\n    get: function () {\n      return this._groupedDataMap;\n    },\n    set: function (value) {\n      this._groupedDataMap = value;\n    }\n  }]);\n\n  return ViewDataProvider;\n}();\n\nexports.default = ViewDataProvider;\nmodule.exports = exports.default;","map":{"version":3,"sources":["F:/webfe/node_modules/devextreme/ui/scheduler/workspaces/view_data_provider.js"],"names":["exports","default","_date","_interopRequireDefault","require","obj","__esModule","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","ViewDataGenerator","workspace","options","rowCount","nonVirtualRowCount","cellCount","verticalGroupCount","viewDataMap","groupIndex","allDayPanelData","_generateAllDayPanelData","viewCellsData","_generateViewCellsData","completeViewDataMap","startRowIndex","isVerticalGrouping","_isVerticalGroupedWorkSpace","showAllDayPanel","_isShowAllDayPanel","indexDifference","correctedStartRowIndex","map","cellsRow","rowIndex","cellData","cellIndex","position","topVirtualRowHeight","bottomVirtualRowHeight","cellCountInGroupRow","isGroupedAllDayPanel","_viewDataMap$reduce","reduce","_ref","previousGroupIndex","previousGroupedData","cellDataRow","_ref2","firstCell","isAllDayRow","allDay","currentGroupIndex","dateTable","allDayPanel","groupedData","isVirtualScrolling","isVirtual","renderRowCount","rowOffset","cellDataGetters","rowCountInGroup","rowIndexInGroup","_generateCellsRow","workSpace","Math","max","_getAllDayCellData","bind","_this","horizontalGroupCount","groupOrientation","groupCount","_loop","columnIndex","cellDataValue","data","getter","index","_calculateCellIndex","_workspace","isGroupedByDate","isFirstGroupCell","_isFirstGroupCell","isLastGroupCell","_isLastGroupCell","_getKeyByRowAndColumn","columnsNumber","columnsInGroup","columnIndexInCurrentGroup","floor","_viewDataMap$reduce2","previousOptions","previousGroupedDataMap","previousRowIndex","currentRowIndex","cell","groupedDataMap","singleGroupRowCount","singleGroupColumnCount","_isHorizontalGroupedWorkSpace","get","set","ViewDataProvider","_viewDataGenerator","_viewData","_completeViewDataMap","_completeGroupedViewDataMap","_viewDataMap","_groupedDataMap","isGenerateNewViewData","viewDataGenerator","renderOptions","generateRenderOptions","_getCompleteViewDataMap","_generateViewDataMap","viewData","_getViewDataFromMap","generateGroupedDataMap","startDate","_this$getGroupData","getGroupData","_this$getGroupData2","lastRowIndex","lastCellIndex","endDate","isAllDay","findAllDayGroupCellStartDate","_this$getGroupData3","sameDate","_lastCell","lastCell","getDate","groupStartDate","getGroupStartDate","_this$getGroupData4","groups","rowsPerGroup","_getRowCountWithAllDayRows","isShowAllDayPanel","firstRowInGroup","lastRowInGroup","correctedFirstRow","correctedLastRow","row","_ref3","startTime","trimTime","getTime","isStartTimeInCell","cellStartTime","cellEndTime","rows","_ref4","group","lastIndex","groupRow","_getLastGroupRow","cellAmount","lastCellData","item","groupEndDate","getGroupEndDate","date","isVerticalGroupOrientation","currentRow","currentStartDate","currentEndDate","currentAllDay","_compareDatesAndAllDay","cellStartDate","cellEndDate","time","trimmedTime","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/view_data_provider.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n    if (Object.getOwnPropertySymbols) {\r\n        var symbols = Object.getOwnPropertySymbols(object);\r\n        if (enumerableOnly) {\r\n            symbols = symbols.filter(function(sym) {\r\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable\r\n            })\r\n        }\r\n        keys.push.apply(keys, symbols)\r\n    }\r\n    return keys\r\n}\r\n\r\nfunction _objectSpread(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = null != arguments[i] ? arguments[i] : {};\r\n        if (i % 2) {\r\n            ownKeys(Object(source), true).forEach(function(key) {\r\n                _defineProperty(target, key, source[key])\r\n            })\r\n        } else {\r\n            if (Object.getOwnPropertyDescriptors) {\r\n                Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))\r\n            } else {\r\n                ownKeys(Object(source)).forEach(function(key) {\r\n                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar ViewDataGenerator = function() {\r\n    function ViewDataGenerator(workspace) {\r\n        _classCallCheck(this, ViewDataGenerator);\r\n        this.workspace = workspace\r\n    }\r\n    _createClass(ViewDataGenerator, [{\r\n        key: \"_getCompleteViewDataMap\",\r\n        value: function(options) {\r\n            var rowCount = options.nonVirtualRowCount,\r\n                cellCount = options.cellCount,\r\n                verticalGroupCount = options.verticalGroupCount;\r\n            var viewDataMap = [];\r\n            for (var groupIndex = 0; groupIndex < verticalGroupCount; groupIndex += 1) {\r\n                var allDayPanelData = this._generateAllDayPanelData(options, groupIndex, rowCount, cellCount);\r\n                var viewCellsData = this._generateViewCellsData(options, rowCount, 0, rowCount * groupIndex);\r\n                allDayPanelData && viewDataMap.push(allDayPanelData);\r\n                viewDataMap.push.apply(viewDataMap, _toConsumableArray(viewCellsData))\r\n            }\r\n            return viewDataMap\r\n        }\r\n    }, {\r\n        key: \"_generateViewDataMap\",\r\n        value: function(completeViewDataMap, options) {\r\n            var startRowIndex = options.startRowIndex,\r\n                rowCount = options.rowCount;\r\n            var isVerticalGrouping = this.workspace._isVerticalGroupedWorkSpace();\r\n            var showAllDayPanel = this.workspace._isShowAllDayPanel();\r\n            var indexDifference = isVerticalGrouping || !showAllDayPanel ? 0 : 1;\r\n            var correctedStartRowIndex = startRowIndex + indexDifference;\r\n            return completeViewDataMap.slice(correctedStartRowIndex, correctedStartRowIndex + rowCount).map(function(cellsRow, rowIndex) {\r\n                return cellsRow.map(function(cellData, cellIndex) {\r\n                    return {\r\n                        cellData: cellData,\r\n                        position: {\r\n                            rowIndex: rowIndex,\r\n                            cellIndex: cellIndex\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_getViewDataFromMap\",\r\n        value: function(viewDataMap, completeViewDataMap, options) {\r\n            var topVirtualRowHeight = options.topVirtualRowHeight,\r\n                bottomVirtualRowHeight = options.bottomVirtualRowHeight,\r\n                cellCountInGroupRow = options.cellCountInGroupRow;\r\n            var isGroupedAllDayPanel = this.workspace.isGroupedAllDayPanel();\r\n            var _viewDataMap$reduce = viewDataMap.reduce(function(_ref, cellsRow) {\r\n                    var previousGroupIndex = _ref.previousGroupIndex,\r\n                        previousGroupedData = _ref.previousGroupedData;\r\n                    var cellDataRow = cellsRow.map(function(_ref2) {\r\n                        var cellData = _ref2.cellData;\r\n                        return cellData\r\n                    });\r\n                    var firstCell = cellDataRow[0];\r\n                    var isAllDayRow = firstCell.allDay;\r\n                    var currentGroupIndex = firstCell.groupIndex;\r\n                    if (currentGroupIndex !== previousGroupIndex) {\r\n                        previousGroupedData.push({\r\n                            dateTable: [],\r\n                            isGroupedAllDayPanel: isGroupedAllDayPanel,\r\n                            groupIndex: currentGroupIndex\r\n                        })\r\n                    }\r\n                    if (isAllDayRow) {\r\n                        previousGroupedData[previousGroupedData.length - 1].allDayPanel = cellDataRow\r\n                    } else {\r\n                        previousGroupedData[previousGroupedData.length - 1].dateTable.push(cellDataRow)\r\n                    }\r\n                    return {\r\n                        previousGroupedData: previousGroupedData,\r\n                        previousGroupIndex: currentGroupIndex\r\n                    }\r\n                }, {\r\n                    previousGroupIndex: -1,\r\n                    previousGroupedData: []\r\n                }),\r\n                groupedData = _viewDataMap$reduce.previousGroupedData;\r\n            var isVirtualScrolling = this.workspace.isVirtualScrolling();\r\n            var isVerticalGrouping = this.workspace._isVerticalGroupedWorkSpace();\r\n            var showAllDayPanel = this.workspace._isShowAllDayPanel();\r\n            if (!isVerticalGrouping && showAllDayPanel) {\r\n                groupedData[0].allDayPanel = completeViewDataMap[0]\r\n            }\r\n            return {\r\n                groupedData: groupedData,\r\n                isVirtual: isVirtualScrolling,\r\n                topVirtualRowHeight: topVirtualRowHeight,\r\n                bottomVirtualRowHeight: bottomVirtualRowHeight,\r\n                cellCountInGroupRow: cellCountInGroupRow\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_generateViewCellsData\",\r\n        value: function(options, renderRowCount, startRowIndex, rowOffset) {\r\n            var cellCount = options.cellCount,\r\n                cellDataGetters = options.cellDataGetters,\r\n                rowCountInGroup = options.rowCountInGroup;\r\n            var viewCellsData = [];\r\n            for (var i = 0; i < renderRowCount; ++i) {\r\n                var rowIndex = startRowIndex + rowOffset + i;\r\n                var rowIndexInGroup = rowIndex % rowCountInGroup;\r\n                viewCellsData.push(this._generateCellsRow(options, cellDataGetters, rowIndex, cellCount, rowIndexInGroup))\r\n            }\r\n            return viewCellsData\r\n        }\r\n    }, {\r\n        key: \"_generateAllDayPanelData\",\r\n        value: function(options, groupIndex, rowCount, cellCount) {\r\n            var workSpace = this.workspace;\r\n            if (!workSpace._isShowAllDayPanel()) {\r\n                return null\r\n            }\r\n            var rowIndex = Math.max(groupIndex * rowCount, 0);\r\n            return this._generateCellsRow(options, [workSpace._getAllDayCellData.bind(workSpace)], rowIndex, cellCount, 0, groupIndex)\r\n        }\r\n    }, {\r\n        key: \"_generateCellsRow\",\r\n        value: function(options, cellDataGetters, rowIndex, cellCount, rowIndexInGroup, groupIndex) {\r\n            var _this = this;\r\n            var cellsRow = [];\r\n            var horizontalGroupCount = options.horizontalGroupCount,\r\n                groupOrientation = options.groupOrientation,\r\n                rowCountInGroup = options.rowCountInGroup,\r\n                cellCountInGroupRow = options.cellCountInGroupRow,\r\n                groupCount = options.groupCount;\r\n            var _loop = function(columnIndex) {\r\n                var cellDataValue = cellDataGetters.reduce(function(data, getter) {\r\n                    return _objectSpread(_objectSpread({}, data), getter(void 0, rowIndex, columnIndex, groupIndex).value)\r\n                }, {});\r\n                cellDataValue.index = _this._calculateCellIndex(horizontalGroupCount, groupOrientation, _this._workspace.isGroupedByDate(), rowIndexInGroup, columnIndex, cellCount);\r\n                cellDataValue.isFirstGroupCell = _this._isFirstGroupCell(rowIndex, columnIndex, rowCountInGroup, cellCountInGroupRow, groupCount);\r\n                cellDataValue.isLastGroupCell = _this._isLastGroupCell(rowIndex, columnIndex, rowCountInGroup, cellCountInGroupRow, groupCount);\r\n                cellDataValue.key = _this._getKeyByRowAndColumn(rowIndex, columnIndex, cellCount);\r\n                cellsRow.push(cellDataValue)\r\n            };\r\n            for (var columnIndex = 0; columnIndex < cellCount; ++columnIndex) {\r\n                _loop(columnIndex)\r\n            }\r\n            return cellsRow\r\n        }\r\n    }, {\r\n        key: \"_calculateCellIndex\",\r\n        value: function(horizontalGroupCount, groupOrientation, isGroupedByDate, rowIndex, columnIndex, columnsNumber) {\r\n            var groupCount = horizontalGroupCount || 1;\r\n            var index = rowIndex * columnsNumber + columnIndex;\r\n            var columnsInGroup = columnsNumber / groupCount;\r\n            if (\"horizontal\" === groupOrientation) {\r\n                var columnIndexInCurrentGroup = columnIndex % columnsInGroup;\r\n                if (isGroupedByDate) {\r\n                    columnIndexInCurrentGroup = Math.floor(columnIndex / groupCount)\r\n                }\r\n                index = rowIndex * columnsInGroup + columnIndexInCurrentGroup\r\n            }\r\n            return index\r\n        }\r\n    }, {\r\n        key: \"_getKeyByRowAndColumn\",\r\n        value: function(rowIndex, columnIndex, cellCount) {\r\n            return rowIndex * cellCount + columnIndex\r\n        }\r\n    }, {\r\n        key: \"generateGroupedDataMap\",\r\n        value: function(viewDataMap) {\r\n            var _viewDataMap$reduce2 = viewDataMap.reduce(function(previousOptions, cellsRow) {\r\n                    var previousGroupedDataMap = previousOptions.previousGroupedDataMap,\r\n                        previousRowIndex = previousOptions.previousRowIndex,\r\n                        previousGroupIndex = previousOptions.previousGroupIndex;\r\n                    var currentGroupIndex = cellsRow[0].cellData.groupIndex;\r\n                    var currentRowIndex = currentGroupIndex === previousGroupIndex ? previousRowIndex + 1 : 0;\r\n                    cellsRow.forEach(function(cell) {\r\n                        var groupIndex = cell.cellData.groupIndex;\r\n                        if (!previousGroupedDataMap[groupIndex]) {\r\n                            previousGroupedDataMap[groupIndex] = []\r\n                        }\r\n                        if (!previousGroupedDataMap[groupIndex][currentRowIndex]) {\r\n                            previousGroupedDataMap[groupIndex][currentRowIndex] = []\r\n                        }\r\n                        previousGroupedDataMap[groupIndex][currentRowIndex].push(cell)\r\n                    });\r\n                    return {\r\n                        previousGroupedDataMap: previousGroupedDataMap,\r\n                        previousRowIndex: currentRowIndex,\r\n                        previousGroupIndex: currentGroupIndex\r\n                    }\r\n                }, {\r\n                    previousGroupedDataMap: [],\r\n                    previousRowIndex: -1,\r\n                    previousGroupIndex: -1\r\n                }),\r\n                groupedDataMap = _viewDataMap$reduce2.previousGroupedDataMap;\r\n            return groupedDataMap\r\n        }\r\n    }, {\r\n        key: \"_isFirstGroupCell\",\r\n        value: function(rowIndex, columnIndex, singleGroupRowCount, singleGroupColumnCount, groupCount) {\r\n            if (this.workspace.isGroupedByDate()) {\r\n                return columnIndex % groupCount === 0\r\n            }\r\n            if (this.workspace._isHorizontalGroupedWorkSpace() || 0 === groupCount) {\r\n                return columnIndex % singleGroupColumnCount === 0\r\n            }\r\n            return rowIndex % singleGroupRowCount === 0\r\n        }\r\n    }, {\r\n        key: \"_isLastGroupCell\",\r\n        value: function(rowIndex, columnIndex, singleGroupRowCount, singleGroupColumnCount, groupCount) {\r\n            if (this.workspace.isGroupedByDate()) {\r\n                return (columnIndex + 1) % groupCount === 0\r\n            }\r\n            if (this.workspace._isHorizontalGroupedWorkSpace() || 0 === groupCount) {\r\n                return (columnIndex + 1) % singleGroupColumnCount === 0\r\n            }\r\n            return (rowIndex + 1) % singleGroupRowCount === 0\r\n        }\r\n    }, {\r\n        key: \"workspace\",\r\n        get: function() {\r\n            return this._workspace\r\n        },\r\n        set: function(value) {\r\n            this._workspace = value\r\n        }\r\n    }]);\r\n    return ViewDataGenerator\r\n}();\r\nvar ViewDataProvider = function() {\r\n    function ViewDataProvider(workspace) {\r\n        _classCallCheck(this, ViewDataProvider);\r\n        this._viewDataGenerator = null;\r\n        this._viewData = [];\r\n        this._completeViewDataMap = [];\r\n        this._completeGroupedViewDataMap = [];\r\n        this._viewDataMap = [];\r\n        this._groupedDataMap = [];\r\n        this._workspace = workspace\r\n    }\r\n    _createClass(ViewDataProvider, [{\r\n        key: \"update\",\r\n        value: function(isGenerateNewViewData) {\r\n            var viewDataGenerator = this.viewDataGenerator,\r\n                _workspace = this._workspace;\r\n            var renderOptions = _workspace.generateRenderOptions();\r\n            if (isGenerateNewViewData) {\r\n                this.completeViewDataMap = viewDataGenerator._getCompleteViewDataMap(renderOptions)\r\n            }\r\n            this.viewDataMap = viewDataGenerator._generateViewDataMap(this.completeViewDataMap, renderOptions);\r\n            this.viewData = viewDataGenerator._getViewDataFromMap(this.viewDataMap, this.completeViewDataMap, renderOptions);\r\n            this.groupedDataMap = viewDataGenerator.generateGroupedDataMap(this.viewDataMap)\r\n        }\r\n    }, {\r\n        key: \"getStartDate\",\r\n        value: function() {\r\n            var groupedData = this.viewData.groupedData;\r\n            var dateTable = groupedData[0].dateTable;\r\n            return dateTable[0][0].startDate\r\n        }\r\n    }, {\r\n        key: \"getGroupStartDate\",\r\n        value: function(groupIndex) {\r\n            var _this$getGroupData = this.getGroupData(groupIndex),\r\n                dateTable = _this$getGroupData.dateTable;\r\n            return dateTable[0][0].startDate\r\n        }\r\n    }, {\r\n        key: \"getGroupEndDate\",\r\n        value: function(groupIndex) {\r\n            var _this$getGroupData2 = this.getGroupData(groupIndex),\r\n                dateTable = _this$getGroupData2.dateTable;\r\n            var lastRowIndex = dateTable.length - 1;\r\n            var lastCellIndex = dateTable[lastRowIndex].length - 1;\r\n            return dateTable[lastRowIndex][lastCellIndex].endDate\r\n        }\r\n    }, {\r\n        key: \"findGroupCellStartDate\",\r\n        value: function(groupIndex, startDate, endDate, isAllDay) {\r\n            if (isAllDay) {\r\n                return this.findAllDayGroupCellStartDate(groupIndex, startDate)\r\n            }\r\n            var _this$getGroupData3 = this.getGroupData(groupIndex),\r\n                dateTable = _this$getGroupData3.dateTable;\r\n            if (!dateTable.length) {\r\n                return\r\n            }\r\n            for (var i = 0; i < dateTable[0].length; ++i) {\r\n                var cell = dateTable[0][i];\r\n                var lastRowIndex = dateTable.length - 1;\r\n                if (_date.default.sameDate(cell.startDate, startDate)) {\r\n                    var _lastCell;\r\n                    var lastCell = dateTable[lastRowIndex][i];\r\n                    if (lastCell.endDate <= startDate) {\r\n                        if (endDate.getDate() > startDate.getDate()) {\r\n                            cell = dateTable[0][i + 1];\r\n                            lastCell = dateTable[lastRowIndex][i + 1]\r\n                        }\r\n                    }\r\n                    if ((null === (_lastCell = lastCell) || void 0 === _lastCell ? void 0 : _lastCell.endDate) > startDate) {\r\n                        return cell.startDate\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"findAllDayGroupCellStartDate\",\r\n        value: function(groupIndex, startDate) {\r\n            var groupStartDate = this.getGroupStartDate(groupIndex);\r\n            return groupStartDate > startDate ? groupStartDate : startDate\r\n        }\r\n    }, {\r\n        key: \"getCellsGroup\",\r\n        value: function(groupIndex) {\r\n            var _this$getGroupData4 = this.getGroupData(groupIndex),\r\n                dateTable = _this$getGroupData4.dateTable;\r\n            return dateTable[0][0].groups\r\n        }\r\n    }, {\r\n        key: \"getCellData\",\r\n        value: function(rowIndex, cellIndex, isAllDay) {\r\n            if (isAllDay && !this._workspace._isVerticalGroupedWorkSpace()) {\r\n                return this._viewData.groupedData[0].allDayPanel[cellIndex]\r\n            }\r\n            var cellData = this.viewDataMap[rowIndex][cellIndex].cellData;\r\n            return cellData\r\n        }\r\n    }, {\r\n        key: \"getCellsByGroupIndexAndAllDay\",\r\n        value: function(groupIndex, allDay) {\r\n            var workspace = this._workspace;\r\n            var rowsPerGroup = workspace._getRowCountWithAllDayRows();\r\n            var isVerticalGrouping = workspace._isVerticalGroupedWorkSpace();\r\n            var isShowAllDayPanel = workspace._isShowAllDayPanel();\r\n            var firstRowInGroup = isVerticalGrouping ? groupIndex * rowsPerGroup : 0;\r\n            var lastRowInGroup = isVerticalGrouping ? (groupIndex + 1) * rowsPerGroup - 1 : rowsPerGroup;\r\n            var correctedFirstRow = isShowAllDayPanel && !allDay ? firstRowInGroup + 1 : firstRowInGroup;\r\n            var correctedLastRow = allDay ? correctedFirstRow : lastRowInGroup;\r\n            return this.completeViewDataMap.slice(correctedFirstRow, correctedLastRow + 1).map(function(row) {\r\n                return row.filter(function(_ref3) {\r\n                    var currentGroupIndex = _ref3.groupIndex;\r\n                    return groupIndex === currentGroupIndex\r\n                })\r\n            })\r\n        }\r\n    }, {\r\n        key: \"findCellPositionInMap\",\r\n        value: function(groupIndex, startDate, isAllDay) {\r\n            var startTime = isAllDay ? _date.default.trimTime(startDate).getTime() : startDate.getTime();\r\n            var isStartTimeInCell = function(cellData) {\r\n                var cellStartTime = cellData.startDate.getTime();\r\n                var cellEndTime = cellData.endDate.getTime();\r\n                return isAllDay ? cellData.allDay && startTime >= cellStartTime && startTime <= cellEndTime : startTime >= cellStartTime && startTime < cellEndTime\r\n            };\r\n            var rows = isAllDay && !this._workspace._isVerticalGroupedWorkSpace() ? [this.completeViewDataMap[0].map(function(cell, index) {\r\n                return {\r\n                    cellData: cell,\r\n                    position: {\r\n                        cellIndex: index,\r\n                        rowIndex: 0\r\n                    }\r\n                }\r\n            })] : this.groupedDataMap[groupIndex] || [];\r\n            for (var rowIndex = 0; rowIndex < rows.length; ++rowIndex) {\r\n                var row = rows[rowIndex];\r\n                for (var cellIndex = 0; cellIndex < row.length; ++cellIndex) {\r\n                    var cell = row[cellIndex];\r\n                    var cellData = cell.cellData;\r\n                    if (cellData.groupIndex === groupIndex) {\r\n                        if (isStartTimeInCell(cellData)) {\r\n                            return cell.position\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return\r\n        }\r\n    }, {\r\n        key: \"getGroupIndices\",\r\n        value: function() {\r\n            var groupedData = this.viewData.groupedData;\r\n            return groupedData.map(function(_ref4) {\r\n                var groupIndex = _ref4.groupIndex;\r\n                return groupIndex\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_getLastGroupRow\",\r\n        value: function(groupIndex) {\r\n            var group = this.groupedDataMap[groupIndex];\r\n            var lastIndex = group.length - 1;\r\n            return group[lastIndex]\r\n        }\r\n    }, {\r\n        key: \"getLasGroupCellPosition\",\r\n        value: function(groupIndex) {\r\n            var groupRow = this._getLastGroupRow(groupIndex);\r\n            return groupRow[0].position\r\n        }\r\n    }, {\r\n        key: \"getLasGroupCellIndex\",\r\n        value: function(groupIndex) {\r\n            var group = this.groupedDataMap[groupIndex];\r\n            return group.length - 1\r\n        }\r\n    }, {\r\n        key: \"getRowCountInGroup\",\r\n        value: function(groupIndex) {\r\n            var groupRow = this._getLastGroupRow(groupIndex);\r\n            var cellAmount = groupRow.length;\r\n            var lastCellData = groupRow[cellAmount - 1].cellData;\r\n            var lastCellIndex = lastCellData.index;\r\n            return (lastCellIndex + 1) / groupRow.length\r\n        }\r\n    }, {\r\n        key: \"getGroupData\",\r\n        value: function(groupIndex) {\r\n            var groupedData = this.viewData.groupedData;\r\n            return groupedData.filter(function(item) {\r\n                return item.groupIndex === groupIndex\r\n            })[0]\r\n        }\r\n    }, {\r\n        key: \"isGroupIntersectDateInterval\",\r\n        value: function(groupIndex, startDate, endDate) {\r\n            var groupStartDate = this.getGroupStartDate(groupIndex);\r\n            var groupEndDate = this.getGroupEndDate(groupIndex);\r\n            return startDate < groupEndDate && endDate > groupStartDate\r\n        }\r\n    }, {\r\n        key: \"findGlobalCellPosition\",\r\n        value: function(date) {\r\n            var groupIndex = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;\r\n            var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n            var completeViewDataMap = this.completeViewDataMap,\r\n                workspace = this._workspace;\r\n            var showAllDayPanel = workspace._isShowAllDayPanel();\r\n            var isVerticalGroupOrientation = workspace._isVerticalGroupedWorkSpace();\r\n            for (var rowIndex = 0; rowIndex < completeViewDataMap.length; rowIndex += 1) {\r\n                var currentRow = completeViewDataMap[rowIndex];\r\n                for (var columnIndex = 0; columnIndex < currentRow.length; columnIndex += 1) {\r\n                    var cellData = currentRow[columnIndex];\r\n                    var currentStartDate = cellData.startDate,\r\n                        currentEndDate = cellData.endDate,\r\n                        currentGroupIndex = cellData.groupIndex,\r\n                        currentAllDay = cellData.allDay;\r\n                    if (groupIndex === currentGroupIndex && allDay === currentAllDay && this._compareDatesAndAllDay(date, currentStartDate, currentEndDate, allDay)) {\r\n                        return {\r\n                            position: {\r\n                                columnIndex: columnIndex,\r\n                                rowIndex: showAllDayPanel && !isVerticalGroupOrientation ? rowIndex - 1 : rowIndex\r\n                            },\r\n                            cellData: cellData\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_compareDatesAndAllDay\",\r\n        value: function(date, cellStartDate, cellEndDate, allDay) {\r\n            var time = date.getTime();\r\n            var trimmedTime = _date.default.trimTime(date).getTime();\r\n            var cellStartTime = cellStartDate.getTime();\r\n            var cellEndTime = cellEndDate.getTime();\r\n            return !allDay && time >= cellStartTime && time < cellEndTime || allDay && trimmedTime === cellStartTime\r\n        }\r\n    }, {\r\n        key: \"viewDataGenerator\",\r\n        get: function() {\r\n            if (!this._viewDataGenerator) {\r\n                this._viewDataGenerator = new ViewDataGenerator(this._workspace)\r\n            }\r\n            return this._viewDataGenerator\r\n        }\r\n    }, {\r\n        key: \"completeViewDataMap\",\r\n        get: function() {\r\n            return this._completeViewDataMap\r\n        },\r\n        set: function(value) {\r\n            this._completeViewDataMap = value\r\n        }\r\n    }, {\r\n        key: \"completeGroupedViewDataMap\",\r\n        get: function() {\r\n            return this._completeGroupedViewDataMap\r\n        },\r\n        set: function(value) {\r\n            this._completeGroupedViewDataMap = value\r\n        }\r\n    }, {\r\n        key: \"viewData\",\r\n        get: function() {\r\n            return this._viewData\r\n        },\r\n        set: function(value) {\r\n            this._viewData = value\r\n        }\r\n    }, {\r\n        key: \"viewDataMap\",\r\n        get: function() {\r\n            return this._viewDataMap\r\n        },\r\n        set: function(value) {\r\n            this._viewDataMap = value\r\n        }\r\n    }, {\r\n        key: \"groupedDataMap\",\r\n        get: function() {\r\n            return this._groupedDataMap\r\n        },\r\n        set: function(value) {\r\n            this._groupedDataMap = value\r\n        }\r\n    }]);\r\n    return ViewDataProvider\r\n}();\r\nexports.default = ViewDataProvider;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}