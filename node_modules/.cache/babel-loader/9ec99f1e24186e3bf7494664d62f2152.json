{"ast":null,"code":"/**\r\n * DevExtreme (viz/range_selector/series_data_source.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.SeriesDataSource = void 0;\n\nvar _base_series = require(\"../series/base_series\");\n\nvar _series_family = require(\"../core/series_family\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _range = require(\"../translators/range\");\n\nvar _data_validator = require(\"../components/data_validator\");\n\nvar _chart_theme_manager = require(\"../components/chart_theme_manager\");\n\nvar createThemeManager = function (chartOptions) {\n  return new _chart_theme_manager.ThemeManager({\n    options: chartOptions,\n    themeSection: \"rangeSelector.chart\",\n    fontFields: [\"commonSeriesSettings.label.font\"]\n  });\n};\n\nvar processSeriesFamilies = function (series, minBubbleSize, maxBubbleSize, barOptions, negativesAsZeroes) {\n  var families = [];\n  var types = [];\n  (0, _iterator.each)(series, function (i, item) {\n    if ((0, _array.inArray)(item.type, types) === -1) {\n      types.push(item.type);\n    }\n  });\n  (0, _iterator.each)(types, function (_, type) {\n    var family = new _series_family.SeriesFamily({\n      type: type,\n      minBubbleSize: minBubbleSize,\n      maxBubbleSize: maxBubbleSize,\n      barGroupPadding: barOptions.barGroupPadding,\n      barGroupWidth: barOptions.barGroupWidth,\n      negativesAsZeroes: negativesAsZeroes\n    });\n    family.add(series);\n    family.adjustSeriesValues();\n    families.push(family);\n  });\n  return families;\n};\n\nvar SeriesDataSource = function (options) {\n  var that = this;\n  var themeManager = that._themeManager = createThemeManager(options.chart);\n  themeManager.setTheme(options.chart.theme);\n  var topIndent = themeManager.getOptions(\"topIndent\");\n  var bottomIndent = themeManager.getOptions(\"bottomIndent\");\n  that._indent = {\n    top: topIndent >= 0 && topIndent < 1 ? topIndent : 0,\n    bottom: bottomIndent >= 0 && bottomIndent < 1 ? bottomIndent : 0\n  };\n  that._valueAxis = themeManager.getOptions(\"valueAxisRangeSelector\") || {};\n  that._hideChart = false;\n  that._series = that._calculateSeries(options);\n  that._seriesFamilies = [];\n};\n\nexports.SeriesDataSource = SeriesDataSource;\nSeriesDataSource.prototype = {\n  constructor: SeriesDataSource,\n  _calculateSeries: function (options) {\n    var that = this;\n    var series = [];\n    var particularSeriesOptions;\n    var seriesTheme;\n    var data = options.dataSource || [];\n    var parsedData;\n    var chartThemeManager = that._themeManager;\n    var seriesTemplate = chartThemeManager.getOptions(\"seriesTemplate\");\n    var allSeriesOptions = seriesTemplate ? (0, _utils.processSeriesTemplate)(seriesTemplate, data) : options.chart.series;\n    var dataSourceField;\n    var valueAxis = that._valueAxis;\n    var i;\n    var newSeries;\n    var groupsData;\n\n    if (options.dataSource && !allSeriesOptions) {\n      dataSourceField = options.dataSourceField || \"arg\";\n      allSeriesOptions = {\n        argumentField: dataSourceField,\n        valueField: dataSourceField\n      };\n      that._hideChart = true;\n    }\n\n    allSeriesOptions = Array.isArray(allSeriesOptions) ? allSeriesOptions : allSeriesOptions ? [allSeriesOptions] : [];\n\n    for (i = 0; i < allSeriesOptions.length; i++) {\n      particularSeriesOptions = (0, _extend.extend)(true, {}, allSeriesOptions[i]);\n      particularSeriesOptions.rotated = false;\n      seriesTheme = chartThemeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\n      seriesTheme.argumentField = seriesTheme.argumentField || options.dataSourceField;\n\n      if (!seriesTheme.name) {\n        seriesTheme.name = \"Series \" + (i + 1).toString();\n      }\n\n      if (data && data.length > 0) {\n        newSeries = new _base_series.Series({\n          renderer: options.renderer,\n          argumentAxis: options.argumentAxis,\n          valueAxis: options.valueAxis,\n          incidentOccurred: options.incidentOccurred\n        }, seriesTheme);\n        series.push(newSeries);\n      }\n    }\n\n    if (series.length) {\n      groupsData = {\n        groups: [{\n          series: series,\n          valueAxis: options.valueAxis,\n          valueOptions: {\n            type: valueAxis.type,\n            valueType: dataSourceField ? options.valueType : valueAxis.valueType\n          }\n        }],\n        argumentOptions: {\n          categories: options.categories,\n          argumentType: options.valueType,\n          type: options.axisType\n        }\n      };\n      parsedData = (0, _data_validator.validateData)(data, groupsData, options.incidentOccurred, chartThemeManager.getOptions(\"dataPrepareSettings\"));\n      that.argCategories = groupsData.categories;\n\n      for (i = 0; i < series.length; i++) {\n        series[i].updateData(parsedData[series[i].getArgumentField()]);\n      }\n    }\n\n    return series;\n  },\n  createPoints: function () {\n    if (0 === this._series.length) {\n      return;\n    }\n\n    var series = this._series;\n    var viewport = new _range.Range();\n    var axis = series[0].getArgumentAxis();\n    var themeManager = this._themeManager;\n    var negativesAsZeroes = themeManager.getOptions(\"negativesAsZeroes\");\n    var negativesAsZeros = themeManager.getOptions(\"negativesAsZeros\");\n    series.forEach(function (s) {\n      viewport.addRange(s.getArgumentRange());\n    });\n    axis.getTranslator().updateBusinessRange(viewport);\n    series.forEach(function (s) {\n      s.createPoints();\n    });\n    this._seriesFamilies = processSeriesFamilies(series, themeManager.getOptions(\"minBubbleSize\"), themeManager.getOptions(\"maxBubbleSize\"), {\n      barGroupPadding: themeManager.getOptions(\"barGroupPadding\"),\n      barGroupWidth: themeManager.getOptions(\"barGroupWidth\")\n    }, (0, _type.isDefined)(negativesAsZeroes) ? negativesAsZeroes : negativesAsZeros);\n  },\n  adjustSeriesDimensions: function () {\n    (0, _iterator.each)(this._seriesFamilies, function (_, family) {\n      family.adjustSeriesDimensions();\n    });\n  },\n  getBoundRange: function () {\n    var that = this;\n    var rangeData;\n    var valueAxis = that._valueAxis;\n    var valRange = new _range.Range({\n      min: valueAxis.min,\n      minVisible: valueAxis.min,\n      max: valueAxis.max,\n      maxVisible: valueAxis.max,\n      axisType: valueAxis.type,\n      base: valueAxis.logarithmBase\n    });\n    var argRange = new _range.Range({});\n    var rangeYSize;\n    var rangeVisibleSizeY;\n    var minIndent;\n    var maxIndent;\n    (0, _iterator.each)(that._series, function (_, series) {\n      rangeData = series.getRangeData();\n      valRange.addRange(rangeData.val);\n      argRange.addRange(rangeData.arg);\n    });\n\n    if (!valRange.isEmpty() && !argRange.isEmpty()) {\n      minIndent = valueAxis.inverted ? that._indent.top : that._indent.bottom;\n      maxIndent = valueAxis.inverted ? that._indent.bottom : that._indent.top;\n      rangeYSize = valRange.max - valRange.min;\n      rangeVisibleSizeY = ((0, _type.isNumeric)(valRange.maxVisible) ? valRange.maxVisible : valRange.max) - ((0, _type.isNumeric)(valRange.minVisible) ? valRange.minVisible : valRange.min);\n\n      if ((0, _type.isDate)(valRange.min)) {\n        valRange.min = new Date(valRange.min.valueOf() - rangeYSize * minIndent);\n      } else {\n        valRange.min -= rangeYSize * minIndent;\n      }\n\n      if ((0, _type.isDate)(valRange.max)) {\n        valRange.max = new Date(valRange.max.valueOf() + rangeYSize * maxIndent);\n      } else {\n        valRange.max += rangeYSize * maxIndent;\n      }\n\n      if ((0, _type.isNumeric)(rangeVisibleSizeY)) {\n        valRange.maxVisible = valRange.maxVisible ? valRange.maxVisible + rangeVisibleSizeY * maxIndent : void 0;\n        valRange.minVisible = valRange.minVisible ? valRange.minVisible - rangeVisibleSizeY * minIndent : void 0;\n      }\n\n      valRange.invert = valueAxis.inverted;\n    }\n\n    return {\n      arg: argRange,\n      val: valRange\n    };\n  },\n  getMarginOptions: function (canvas) {\n    var bubbleSize = Math.min(canvas.width, canvas.height) * this._themeManager.getOptions(\"maxBubbleSize\");\n\n    return this._series.reduce(function (marginOptions, series) {\n      var seriesOptions = series.getMarginOptions();\n\n      if (true === seriesOptions.processBubbleSize) {\n        seriesOptions.size = bubbleSize;\n      }\n\n      return (0, _utils.mergeMarginOptions)(marginOptions, seriesOptions);\n    }, {});\n  },\n  getSeries: function () {\n    return this._series;\n  },\n  isEmpty: function () {\n    return 0 === this.getSeries().length;\n  },\n  isShowChart: function () {\n    return !this._hideChart;\n  },\n  getCalculatedValueType: function () {\n    var series = this._series[0];\n    return null === series || void 0 === series ? void 0 : series.argumentType;\n  },\n  getThemeManager: function () {\n    return this._themeManager;\n  }\n};","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/viz/range_selector/series_data_source.js"],"names":["exports","SeriesDataSource","_base_series","require","_series_family","_type","_extend","_array","_iterator","_utils","_range","_data_validator","_chart_theme_manager","createThemeManager","chartOptions","ThemeManager","options","themeSection","fontFields","processSeriesFamilies","series","minBubbleSize","maxBubbleSize","barOptions","negativesAsZeroes","families","types","each","i","item","inArray","type","push","_","family","SeriesFamily","barGroupPadding","barGroupWidth","add","adjustSeriesValues","that","themeManager","_themeManager","chart","setTheme","theme","topIndent","getOptions","bottomIndent","_indent","top","bottom","_valueAxis","_hideChart","_series","_calculateSeries","_seriesFamilies","prototype","constructor","particularSeriesOptions","seriesTheme","data","dataSource","parsedData","chartThemeManager","seriesTemplate","allSeriesOptions","processSeriesTemplate","dataSourceField","valueAxis","newSeries","groupsData","argumentField","valueField","Array","isArray","length","extend","rotated","name","toString","Series","renderer","argumentAxis","incidentOccurred","groups","valueOptions","valueType","argumentOptions","categories","argumentType","axisType","validateData","argCategories","updateData","getArgumentField","createPoints","viewport","Range","axis","getArgumentAxis","negativesAsZeros","forEach","s","addRange","getArgumentRange","getTranslator","updateBusinessRange","isDefined","adjustSeriesDimensions","getBoundRange","rangeData","valRange","min","minVisible","max","maxVisible","base","logarithmBase","argRange","rangeYSize","rangeVisibleSizeY","minIndent","maxIndent","getRangeData","val","arg","isEmpty","inverted","isNumeric","isDate","Date","valueOf","invert","getMarginOptions","canvas","bubbleSize","Math","width","height","reduce","marginOptions","seriesOptions","processBubbleSize","size","mergeMarginOptions","getSeries","isShowChart","getCalculatedValueType","getThemeManager"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/range_selector/series_data_source.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.SeriesDataSource = void 0;\r\nvar _base_series = require(\"../series/base_series\");\r\nvar _series_family = require(\"../core/series_family\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _range = require(\"../translators/range\");\r\nvar _data_validator = require(\"../components/data_validator\");\r\nvar _chart_theme_manager = require(\"../components/chart_theme_manager\");\r\nvar createThemeManager = function(chartOptions) {\r\n    return new _chart_theme_manager.ThemeManager({\r\n        options: chartOptions,\r\n        themeSection: \"rangeSelector.chart\",\r\n        fontFields: [\"commonSeriesSettings.label.font\"]\r\n    })\r\n};\r\nvar processSeriesFamilies = function(series, minBubbleSize, maxBubbleSize, barOptions, negativesAsZeroes) {\r\n    var families = [];\r\n    var types = [];\r\n    (0, _iterator.each)(series, function(i, item) {\r\n        if ((0, _array.inArray)(item.type, types) === -1) {\r\n            types.push(item.type)\r\n        }\r\n    });\r\n    (0, _iterator.each)(types, function(_, type) {\r\n        var family = new _series_family.SeriesFamily({\r\n            type: type,\r\n            minBubbleSize: minBubbleSize,\r\n            maxBubbleSize: maxBubbleSize,\r\n            barGroupPadding: barOptions.barGroupPadding,\r\n            barGroupWidth: barOptions.barGroupWidth,\r\n            negativesAsZeroes: negativesAsZeroes\r\n        });\r\n        family.add(series);\r\n        family.adjustSeriesValues();\r\n        families.push(family)\r\n    });\r\n    return families\r\n};\r\nvar SeriesDataSource = function(options) {\r\n    var that = this;\r\n    var themeManager = that._themeManager = createThemeManager(options.chart);\r\n    themeManager.setTheme(options.chart.theme);\r\n    var topIndent = themeManager.getOptions(\"topIndent\");\r\n    var bottomIndent = themeManager.getOptions(\"bottomIndent\");\r\n    that._indent = {\r\n        top: topIndent >= 0 && topIndent < 1 ? topIndent : 0,\r\n        bottom: bottomIndent >= 0 && bottomIndent < 1 ? bottomIndent : 0\r\n    };\r\n    that._valueAxis = themeManager.getOptions(\"valueAxisRangeSelector\") || {};\r\n    that._hideChart = false;\r\n    that._series = that._calculateSeries(options);\r\n    that._seriesFamilies = []\r\n};\r\nexports.SeriesDataSource = SeriesDataSource;\r\nSeriesDataSource.prototype = {\r\n    constructor: SeriesDataSource,\r\n    _calculateSeries: function(options) {\r\n        var that = this;\r\n        var series = [];\r\n        var particularSeriesOptions;\r\n        var seriesTheme;\r\n        var data = options.dataSource || [];\r\n        var parsedData;\r\n        var chartThemeManager = that._themeManager;\r\n        var seriesTemplate = chartThemeManager.getOptions(\"seriesTemplate\");\r\n        var allSeriesOptions = seriesTemplate ? (0, _utils.processSeriesTemplate)(seriesTemplate, data) : options.chart.series;\r\n        var dataSourceField;\r\n        var valueAxis = that._valueAxis;\r\n        var i;\r\n        var newSeries;\r\n        var groupsData;\r\n        if (options.dataSource && !allSeriesOptions) {\r\n            dataSourceField = options.dataSourceField || \"arg\";\r\n            allSeriesOptions = {\r\n                argumentField: dataSourceField,\r\n                valueField: dataSourceField\r\n            };\r\n            that._hideChart = true\r\n        }\r\n        allSeriesOptions = Array.isArray(allSeriesOptions) ? allSeriesOptions : allSeriesOptions ? [allSeriesOptions] : [];\r\n        for (i = 0; i < allSeriesOptions.length; i++) {\r\n            particularSeriesOptions = (0, _extend.extend)(true, {}, allSeriesOptions[i]);\r\n            particularSeriesOptions.rotated = false;\r\n            seriesTheme = chartThemeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\r\n            seriesTheme.argumentField = seriesTheme.argumentField || options.dataSourceField;\r\n            if (!seriesTheme.name) {\r\n                seriesTheme.name = \"Series \" + (i + 1).toString()\r\n            }\r\n            if (data && data.length > 0) {\r\n                newSeries = new _base_series.Series({\r\n                    renderer: options.renderer,\r\n                    argumentAxis: options.argumentAxis,\r\n                    valueAxis: options.valueAxis,\r\n                    incidentOccurred: options.incidentOccurred\r\n                }, seriesTheme);\r\n                series.push(newSeries)\r\n            }\r\n        }\r\n        if (series.length) {\r\n            groupsData = {\r\n                groups: [{\r\n                    series: series,\r\n                    valueAxis: options.valueAxis,\r\n                    valueOptions: {\r\n                        type: valueAxis.type,\r\n                        valueType: dataSourceField ? options.valueType : valueAxis.valueType\r\n                    }\r\n                }],\r\n                argumentOptions: {\r\n                    categories: options.categories,\r\n                    argumentType: options.valueType,\r\n                    type: options.axisType\r\n                }\r\n            };\r\n            parsedData = (0, _data_validator.validateData)(data, groupsData, options.incidentOccurred, chartThemeManager.getOptions(\"dataPrepareSettings\"));\r\n            that.argCategories = groupsData.categories;\r\n            for (i = 0; i < series.length; i++) {\r\n                series[i].updateData(parsedData[series[i].getArgumentField()])\r\n            }\r\n        }\r\n        return series\r\n    },\r\n    createPoints: function() {\r\n        if (0 === this._series.length) {\r\n            return\r\n        }\r\n        var series = this._series;\r\n        var viewport = new _range.Range;\r\n        var axis = series[0].getArgumentAxis();\r\n        var themeManager = this._themeManager;\r\n        var negativesAsZeroes = themeManager.getOptions(\"negativesAsZeroes\");\r\n        var negativesAsZeros = themeManager.getOptions(\"negativesAsZeros\");\r\n        series.forEach(function(s) {\r\n            viewport.addRange(s.getArgumentRange())\r\n        });\r\n        axis.getTranslator().updateBusinessRange(viewport);\r\n        series.forEach(function(s) {\r\n            s.createPoints()\r\n        });\r\n        this._seriesFamilies = processSeriesFamilies(series, themeManager.getOptions(\"minBubbleSize\"), themeManager.getOptions(\"maxBubbleSize\"), {\r\n            barGroupPadding: themeManager.getOptions(\"barGroupPadding\"),\r\n            barGroupWidth: themeManager.getOptions(\"barGroupWidth\")\r\n        }, (0, _type.isDefined)(negativesAsZeroes) ? negativesAsZeroes : negativesAsZeros)\r\n    },\r\n    adjustSeriesDimensions: function() {\r\n        (0, _iterator.each)(this._seriesFamilies, function(_, family) {\r\n            family.adjustSeriesDimensions()\r\n        })\r\n    },\r\n    getBoundRange: function() {\r\n        var that = this;\r\n        var rangeData;\r\n        var valueAxis = that._valueAxis;\r\n        var valRange = new _range.Range({\r\n            min: valueAxis.min,\r\n            minVisible: valueAxis.min,\r\n            max: valueAxis.max,\r\n            maxVisible: valueAxis.max,\r\n            axisType: valueAxis.type,\r\n            base: valueAxis.logarithmBase\r\n        });\r\n        var argRange = new _range.Range({});\r\n        var rangeYSize;\r\n        var rangeVisibleSizeY;\r\n        var minIndent;\r\n        var maxIndent;\r\n        (0, _iterator.each)(that._series, function(_, series) {\r\n            rangeData = series.getRangeData();\r\n            valRange.addRange(rangeData.val);\r\n            argRange.addRange(rangeData.arg)\r\n        });\r\n        if (!valRange.isEmpty() && !argRange.isEmpty()) {\r\n            minIndent = valueAxis.inverted ? that._indent.top : that._indent.bottom;\r\n            maxIndent = valueAxis.inverted ? that._indent.bottom : that._indent.top;\r\n            rangeYSize = valRange.max - valRange.min;\r\n            rangeVisibleSizeY = ((0, _type.isNumeric)(valRange.maxVisible) ? valRange.maxVisible : valRange.max) - ((0, _type.isNumeric)(valRange.minVisible) ? valRange.minVisible : valRange.min);\r\n            if ((0, _type.isDate)(valRange.min)) {\r\n                valRange.min = new Date(valRange.min.valueOf() - rangeYSize * minIndent)\r\n            } else {\r\n                valRange.min -= rangeYSize * minIndent\r\n            }\r\n            if ((0, _type.isDate)(valRange.max)) {\r\n                valRange.max = new Date(valRange.max.valueOf() + rangeYSize * maxIndent)\r\n            } else {\r\n                valRange.max += rangeYSize * maxIndent\r\n            }\r\n            if ((0, _type.isNumeric)(rangeVisibleSizeY)) {\r\n                valRange.maxVisible = valRange.maxVisible ? valRange.maxVisible + rangeVisibleSizeY * maxIndent : void 0;\r\n                valRange.minVisible = valRange.minVisible ? valRange.minVisible - rangeVisibleSizeY * minIndent : void 0\r\n            }\r\n            valRange.invert = valueAxis.inverted\r\n        }\r\n        return {\r\n            arg: argRange,\r\n            val: valRange\r\n        }\r\n    },\r\n    getMarginOptions: function(canvas) {\r\n        var bubbleSize = Math.min(canvas.width, canvas.height) * this._themeManager.getOptions(\"maxBubbleSize\");\r\n        return this._series.reduce(function(marginOptions, series) {\r\n            var seriesOptions = series.getMarginOptions();\r\n            if (true === seriesOptions.processBubbleSize) {\r\n                seriesOptions.size = bubbleSize\r\n            }\r\n            return (0, _utils.mergeMarginOptions)(marginOptions, seriesOptions)\r\n        }, {})\r\n    },\r\n    getSeries: function() {\r\n        return this._series\r\n    },\r\n    isEmpty: function() {\r\n        return 0 === this.getSeries().length\r\n    },\r\n    isShowChart: function() {\r\n        return !this._hideChart\r\n    },\r\n    getCalculatedValueType: function() {\r\n        var series = this._series[0];\r\n        return null === series || void 0 === series ? void 0 : series.argumentType\r\n    },\r\n    getThemeManager: function() {\r\n        return this._themeManager\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}