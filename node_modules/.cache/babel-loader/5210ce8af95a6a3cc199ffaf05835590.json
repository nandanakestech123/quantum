{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\quantumCode20082022\\\\src\\\\component\\\\Admin\\\\Cart\\\\cart\\\\staffSelectionPopup.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalButton, NormalModal, NormalCheckbox } from \"component/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, commonCreateApi, commonDeleteApi } from \"redux/actions/common\";\nimport closeIcon from \"assets/images/close.png\";\nimport \"./style.scss\";\nimport { Toast } from \"service/toast\";\nimport { StaffList } from \"./StaffList\";\nimport { withTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\nexport class StaffSelectionPopupClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_list: [// {\n        //   id: 4397,\n        //   type: \"Deposit\",\n        //   div: \"3\",\n        //   itemdesc: \"SM-LYMPHATIC DETOX 60min\",\n        //   quantity: 5,\n        //   price: \"200.00\",\n        //   totl_disc: \"0.00\",\n        //   discount_price: \"200.00\",\n        //   trans_amt: \"1000.00\",\n        //   deposit: \"1000.00\",\n        //   is_foc: false,\n        //   work_amount: \"200.00\",\n        //   work_point: 0,\n        //   sales_point: 0,\n        //   sales_staffs: \"JACKIE,JANICE,Manager\",\n        //   service_staff: \"JANICE,ARIEL\",\n        //   data: [\n        //     {\n        //       work: true,\n        //       sales: false,\n        //       staff: \"ARIEL\",\n        //       emp_id: 259,\n        //       sales_percentage: null,\n        //       sales_amount: null,\n        //       sp: null,\n        //       work_percentage: 50,\n        //       work_amount: \"100.00\",\n        //       wp: 50,\n        //       tmp_workid: 128962,\n        //       tmp_saleid: null,\n        //     },\n        //     {\n        //       work: true,\n        //       sales: true,\n        //       staff: \"JANICE\",\n        //       emp_id: 173,\n        //       sales_percentage: 33,\n        //       sales_amount: \"333.00\",\n        //       sp: 33,\n        //       work_percentage: 50,\n        //       work_amount: \"100.00\",\n        //       wp: 50,\n        //       tmp_workid: 128965,\n        //       tmp_saleid: 3789,\n        //     },\n        //     {\n        //       work: false,\n        //       sales: true,\n        //       staff: \"Manager\",\n        //       emp_id: 284,\n        //       sales_percentage: 33,\n        //       sales_amount: \"333.00\",\n        //       sp: 33,\n        //       work_percentage: null,\n        //       work_amount: null,\n        //       wp: null,\n        //       tmp_workid: null,\n        //       tmp_saleid: 3786,\n        //     },\n        //     {\n        //       work: false,\n        //       sales: true,\n        //       staff: \"JACKIE\",\n        //       emp_id: 81,\n        //       sales_percentage: 33,\n        //       sales_amount: \"333.00\",\n        //       sp: 33,\n        //       work_percentage: null,\n        //       work_amount: null,\n        //       wp: null,\n        //       tmp_workid: null,\n        //       tmp_saleid: 3787,\n        //     },\n        //   ],\n        // },\n        // {\n        //   id: 4398,\n        //   type: \"Deposit\",\n        //   div: \"3\",\n        //   itemdesc: \"SM-LYMPHATIC DETOX 60min\",\n        //   quantity: 5,\n        //   price: \"200.00\",\n        //   totl_disc: \"0.00\",\n        //   discount_price: \"200.00\",\n        //   trans_amt: \"1000.00\",\n        //   deposit: \"1000.00\",\n        //   is_foc: false,\n        //   work_amount: \"200.00\",\n        //   work_point: 0,\n        //   sales_point: 0,\n        //   sales_staffs: \"JACKIE,JANICE,Manager\",\n        //   service_staff: \"JANICE,ARIEL\",\n        //   data: [\n        //     {\n        //       work: true,\n        //       sales: false,\n        //       staff: \"ARIEL\",\n        //       emp_id: 259,\n        //       sales_percentage: null,\n        //       sales_amount: null,\n        //       sp: null,\n        //       work_percentage: 50,\n        //       work_amount: \"100.00\",\n        //       wp: 50,\n        //       tmp_workid: 128962,\n        //       tmp_saleid: null,\n        //     },\n        //     {\n        //       work: true,\n        //       sales: true,\n        //       staff: \"JANICE\",\n        //       emp_id: 173,\n        //       sales_percentage: 33,\n        //       sales_amount: \"333.00\",\n        //       sp: 33,\n        //       work_percentage: 50,\n        //       work_amount: \"100.00\",\n        //       wp: 50,\n        //       tmp_workid: 128965,\n        //       tmp_saleid: 3789,\n        //     },\n        //     {\n        //       work: false,\n        //       sales: true,\n        //       staff: \"Manager\",\n        //       emp_id: 284,\n        //       sales_percentage: 33,\n        //       sales_amount: \"333.00\",\n        //       sp: 33,\n        //       work_percentage: null,\n        //       work_amount: null,\n        //       wp: null,\n        //       tmp_workid: null,\n        //       tmp_saleid: 3786,\n        //     },\n        //     {\n        //       work: false,\n        //       sales: true,\n        //       staff: \"JACKIE\",\n        //       emp_id: 81,\n        //       sales_percentage: 33,\n        //       sales_amount: \"333.00\",\n        //       sp: 33,\n        //       work_percentage: null,\n        //       work_amount: null,\n        //       wp: null,\n        //       tmp_workid: null,\n        //       tmp_saleid: 3787,\n        //     },\n        //  ],\n        //},\n      ],\n      item_status_options: [],\n      staffListPopup: false,\n      selectedAddStaffIndex: null,\n      staffList: [],\n      limit: 6,\n      page: 1,\n      meta: {},\n      sourceList: [],\n      selectedAddStaffType: 1,\n      activeRow: 0,\n      staffCommonListPopup: false,\n      staffDeleteCommonListPopup: false,\n      availableStaffList: {\n        dataList: []\n      },\n      selectedStaffIndex: \"\",\n      selectedStaffIndexLine: \"\"\n    };\n\n    this.getStafflist = data => {\n      let {\n        page,\n        limit,\n        selectedAddStaffType\n      } = this.state;\n      this.props.getCommonApi(`empcartlist/?sales_staff=${selectedAddStaffType}&page=${page}&limit=${limit}`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(key, \"sdfgsdfgsdfgdfg sdfgsdfgsdfg\");\n        let {\n          staffList\n        } = this.state;\n        let {\n          meta\n        } = this.state;\n        staffList = [];\n        meta = {};\n        staffList = data;\n        meta = data.meta.pagination;\n        console.log(meta, \"metalist\");\n        this.setState({\n          staffList,\n          meta\n        });\n      });\n    };\n\n    this.handleNext = async () => {\n      let {\n        page\n      } = this.state;\n      page = page + 1;\n      await this.setState({\n        page\n      });\n\n      if (page > 0) {\n        this.getStafflist();\n      }\n    };\n\n    this.handleBack = async () => {\n      let {\n        page\n      } = this.state;\n      page = page - 1;\n      await this.setState({\n        page\n      });\n\n      if (page > 0) {\n        this.getStafflist();\n      }\n    };\n\n    this.getStaffSelectionList = () => {\n      let {\n        data_list\n      } = this.state;\n      let {\n        basicApptDetail\n      } = this.props;\n      this.props.getCommonApi(`cartpopup/?cust_noid=${basicApptDetail.custId}&cart_id=${this.props.id}&is_staffs=1`).then(async key => {\n        debugger;\n        let {\n          status,\n          data\n        } = key;\n        data_list = [];\n\n        if (status == \"200\") {\n          console.log(key, \"cartstaffselectionpopuplist\");\n          data_list = data;\n          await this.setState({\n            data_list\n          }); // if (this.state.data_list.length > 0) {\n          //   this.setState({\n          //     activeRow: this.state.data_list[0].id,\n          //   });\n          //   document\n          //     .getElementById(this.state.data_list[0].id)\n          //     .classList.toggle(\"d-none\");\n          // }\n        }\n      });\n    };\n\n    this.handleStaffChange = async (e, index1, index2) => {\n      let {\n        data_list\n      } = this.state;\n      let data = this.state.data_list[index1].data[index2];\n\n      if ([e.target.name] == \"work\") {\n        if (this.state.data_list[index1][\"type\"].toUpperCase() == \"SALES\" && this.state.data_list[index1][\"div\"] == \"3\" || this.state.data_list[index1][\"type\"].toUpperCase() == \"DEPOSIT\" && this.state.data_list[index1][\"div\"] == \"3\") {\n          data[[e.target.name]] = e.target.value;\n          await this.setState({\n            data\n          });\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Work staff not allowed for Product\"\n          });\n        }\n      } else if ([e.target.name] == \"sales_percentage\") {\n        data[[e.target.name]] = e.target.value;\n        data[[\"priceSalesFlag\"]] = true;\n        await this.setState({\n          data\n        });\n        data_list[index1][\"updateSalesCalcFlag\"] = true;\n        await this.setState({\n          data_list\n        });\n      } else if ([e.target.name] == \"work_percentage\") {\n        data[[e.target.name]] = e.target.value;\n        data[[\"priceWorkFlag\"]] = true;\n        await this.setState({\n          data\n        });\n        data_list[index1][\"updateWorkCalcFlag\"] = true;\n        await this.setState({\n          data_list\n        });\n      } else {\n        data[[e.target.name]] = e.target.value;\n        await this.setState({\n          data\n        });\n      }\n    };\n\n    this.handleAccordion = async (id, index) => {\n      let {\n        data_list\n      } = this.state;\n\n      if (this.state.activeRow !== id) {\n        await this.setState({\n          activeRow: id\n        });\n        let elements = document.getElementsByClassName(\"accordion\");\n\n        for (let i = 0; i < elements.length; i++) {\n          elements[i].classList.add(\"d-none\");\n        }\n\n        document.getElementById(id).classList.toggle(\"d-none\");\n        console.log(elements);\n      } else {\n        await this.setState({\n          activeRow: 0\n        });\n        let elements = document.getElementsByClassName(\"accordion\");\n\n        for (let i = 0; i < elements.length; i++) {\n          elements[i].classList.add(\"d-none\");\n        }\n      }\n\n      let data = data_list[index].data;\n      let salesPercentCount = data.filter(acc => acc.sales === true && acc.priceSalesFlag == true).length;\n\n      if (salesPercentCount > 0) {\n        data_list[index][\"updateSalesCalcFlag\"] = true;\n        await this.setState({\n          data\n        });\n      } else {\n        data_list[index][\"updateSalesCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n\n      let workPercentCount = data.filter(acc => acc.work === true && acc.priceWorkFlag == true).length;\n\n      if (workPercentCount > 0) {\n        data_list[index][\"updateWorkCalcFlag\"] = true;\n        await this.setState({\n          data\n        });\n      } else {\n        data_list[index][\"updateWorkCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleSelectedStaff = async item => {\n      this.handleEmployeePopup();\n      let {\n        selectedAddStaffIndex,\n        selectedAddStaffType,\n        data_list\n      } = this.state;\n      let data = this.state.data_list[selectedAddStaffIndex].data;\n      let filter = data.find(acc => acc.emp_id === item.id);\n\n      if (filter) {\n        if (filter.work && selectedAddStaffType == 0) {\n          Toast({\n            type: \"error\",\n            message: \"This staff already found in work staff list\"\n          });\n        }\n\n        if (filter.sales && selectedAddStaffType == 1) {\n          Toast({\n            type: \"error\",\n            message: \"This staff already found in sales staff list\"\n          });\n        } else if (!filter.sales && selectedAddStaffType == 1) {\n          filter.sales = true;\n          this.handleSalesStaffCalc(selectedAddStaffIndex);\n        } else {\n          filter.work = true;\n          this.handleWorkStaffCalc(selectedAddStaffIndex);\n        }\n      } else {\n        data.push({\n          work: selectedAddStaffType == 0 ? true : false,\n          sales: selectedAddStaffType == 1 ? true : false,\n          staff: item.emp_name,\n          emp_id: item.id,\n          sales_percentage: 0,\n          sales_amount: 0,\n          sp: 0,\n          work_percentage: 0,\n          work_amount: 0,\n          wp: 0,\n          tmp_workid: null,\n          tmp_saleid: null\n        });\n        await this.setState({\n          data\n        });\n        selectedAddStaffType == 0 ? this.handleWorkStaffCalc(selectedAddStaffIndex) : this.handleSalesStaffCalc(selectedAddStaffIndex);\n        this.setState({\n          selectedAddStaffIndex: null,\n          selectedAddStaffType: null\n        });\n      }\n    };\n\n    this.handleEmployeePopup = () => {\n      this.setState(prevState => ({\n        staffListPopup: !prevState.staffListPopup\n      }));\n    };\n\n    this.handleAddNewStaff = async (index, type, item) => {\n      if (type == 0) {\n        if (item[\"type\"].toUpperCase() == \"SALES\" && item[\"div\"] == \"3\" || item[\"type\"].toUpperCase() == \"DEPOSIT\" && item[\"div\"] == \"3\") {\n          await this.setState({\n            selectedAddStaffIndex: index,\n            selectedAddStaffType: type,\n            staffList: [],\n            meta: {},\n            page: 1\n          });\n          this.getStafflist();\n          this.setState({\n            staffListPopup: true\n          });\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Work Staff not allowed for Product\"\n          });\n        }\n      } else {\n        await this.setState({\n          selectedAddStaffIndex: index,\n          selectedAddStaffType: type,\n          staffList: [],\n          meta: {},\n          page: 1\n        });\n        this.getStafflist();\n        this.setState({\n          staffListPopup: true\n        });\n      }\n    };\n\n    this.handlePostAction = () => {\n      let {\n        data_list\n      } = this.state;\n\n      for (let value of data_list) {\n        let type = value.type;\n        let div = value.div;\n        let transamt = Number(value.trans_amt).toFixed(2);\n        let work_amount = Number(value.work_amount).toFixed(2);\n        let sales_point = Number(value.sales_point);\n        let work_point = Number(value.work_point);\n        let salesPercent = 0;\n        let salesAmount = Number(0);\n        let salesPoint = Number(0);\n        let workPercent = Number(0);\n        let workAmount = Number(0);\n        let workPoint = Number(0);\n\n        for (let line of value.data) {\n          salesPercent += Number(line.sales_percentage);\n          salesAmount += Number(line.sales_amount);\n          salesPoint += Number(line.sp);\n          workPercent += Number(line.work_percentage);\n          workAmount += Number(line.work_amount);\n          workPoint += Number(line.wp); // if (line.work) {\n          //   if (\n          //     Number(line.work_amount) <= 0 ||\n          //     line.work_amount == null ||\n          //     line.work_percentage == null ||\n          //     Number(line.work_percentage) <= 0\n          //   ) {\n          //     Toast({\n          //       type: \"error\",\n          //       message:\n          //         \"Please check Work Staff Amount or Percentage should not be empty or Zero\",\n          //     });\n          //     return false;\n          //   }\n          // }\n          // if (line.sales) {\n          //   if (\n          //     Number(line.sales_amount) <= 0 ||\n          //     line.sales_amount == null ||\n          //     line.sales_percentage == null ||\n          //     Number(line.sales_percentage) <= 0\n          //   ) {\n          //     Toast({\n          //       type: \"error\",\n          //       message:\n          //         \"Please check Sales Staff Amount or Percentage should not be empty or Zero\",\n          //     });\n          //     return false;\n          //   }\n          // }\n        } // if (workPercent > 200 || workAmount > 2 * transamt) {\n        //   Toast({\n        //     type: \"error\",\n        //     message:\n        //       \"Please check Work Staff Amount or Percentage should be less than Maximum\",\n        //   });\n        //   return false;\n        // } else if (\n        //   div == \"3\" &&\n        //   type.toUpperCase() == \"DEPOSIT\" &&\n        //   workAmount > work_amount\n        // ) {\n        //   Toast({\n        //     type: \"error\",\n        //     message:\n        //       \"Please check Work amount is should be equal to Max Work Amount\",\n        //   });\n        //   return false;\n        // } else\n\n\n        if (salesPercent > 200 || salesAmount > 2 * transamt) {\n          Toast({\n            type: \"error\",\n            message: \"Please check Sales Amount or percentage should be less than max Amount\"\n          });\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = () => {\n      let {\n        data_list\n      } = this.state;\n      let result = this.handlePostAction();\n\n      if (result) {\n        console.log(data_list, \"savedataforstaffselection\");\n        this.props.commonCreateApi(`cartpopup/staffs/`, data_list).then(key => {\n          console.log(key, \"resultset of staffselection\");\n          let {\n            status,\n            data\n          } = key;\n\n          if (status == 200) {\n            this.getStaffSelectionList();\n            this.props.handleModal();\n          }\n        });\n      }\n    };\n\n    this.handleSalesStaffCalc = async index => {\n      let {\n        data_list\n      } = this.state;\n      let salesStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.sales) {\n          salesStaffCount += 1;\n        }\n      }\n\n      let sales_percent = Number(100 / salesStaffCount).toFixed(2);\n      let totalsale = sales_percent * salesStaffCount;\n      let diff_sales_percent = Number(100 - totalsale).toFixed(2);\n      let sales_amount = Number(data_list[index][\"trans_amt\"] / salesStaffCount).toFixed(2);\n      let diff_sales_amount = Number(data_list[index][\"trans_amt\"] - sales_amount * salesStaffCount).toFixed(2);\n      let salespoints = Number(data_list[index][\"sales_point\"] / salesStaffCount).toFixed(2);\n      let diff_salespoints = Number(data_list[index][\"sales_point\"] - salespoints * salesStaffCount).toFixed(2);\n      let data = data_list[index].data;\n      let salesLength = data.filter(acc => acc.sales === true).length;\n      let i = 0;\n      let j = 1;\n\n      for (let dataLine of data_list[index].data) {\n        if (dataLine.sales) {\n          if (j == salesLength) {\n            let percent = Number(sales_percent) + Number(diff_sales_percent);\n            let amt = Number(sales_amount) + Number(diff_sales_amount);\n            let sp = Number(salespoints) + Number(diff_salespoints);\n            data[i][\"sales_percentage\"] = Number(percent).toFixed(2);\n            data[i][\"sales_amount\"] = Number(amt).toFixed(2);\n            data[i][\"sp\"] = Number(sp).toFixed(2);\n            data[i][\"priceSalesFlag\"] = false;\n            await this.setState({\n              data\n            });\n          } else {\n            data[i][\"sales_percentage\"] = sales_percent;\n            data[i][\"sales_amount\"] = sales_amount;\n            data[i][\"sp\"] = salespoints;\n            data[i][\"priceSalesFlag\"] = false;\n            await this.setState({\n              data\n            });\n          }\n\n          j++;\n        }\n\n        i++;\n      }\n\n      data_list[index][\"updateSalesCalcFlag\"] = false;\n      await this.setState({\n        data_list\n      });\n    };\n\n    this.handleWorkStaffCalc = async index => {\n      let {\n        data_list\n      } = this.state;\n      let workStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.work) {\n          workStaffCount += 1;\n        }\n      }\n\n      let work_percent = Number(100 / workStaffCount).toFixed(2);\n      let totalwork = work_percent * workStaffCount;\n      let diff_work_percent = Number(100 - totalwork).toFixed(2);\n      let work_amount = \"\";\n      let diff_work_amount = \"\";\n\n      if (data_list[index].div == \"3\" && data_list[index].type.toUpperCase() == \"DEPOSIT\") {\n        work_amount = Number(data_list[index][\"work_amount\"] / workStaffCount).toFixed(2);\n        diff_work_amount = Number(data_list[index][\"work_amount\"] - work_amount * workStaffCount).toFixed(2);\n      } else {\n        work_amount = Number(data_list[index][\"trans_amt\"] / workStaffCount).toFixed(2);\n        diff_work_amount = Number(data_list[index][\"trans_amt\"] - work_amount * workStaffCount).toFixed(2);\n      }\n\n      let workpoints = Number(data_list[index][\"work_point\"] / workStaffCount).toFixed(2);\n      let diff_workpoints = Number(data_list[index][\"work_point\"] - workpoints * workStaffCount).toFixed(2);\n      let data = data_list[index].data;\n      let i = 0;\n      let j = 1;\n      let workLength = data.filter(acc => acc.work === true).length;\n\n      for (let line of data_list[index].data) {\n        if (line.work) {\n          if (j == workLength) {\n            let percent = Number(work_percent) + Number(diff_work_percent);\n            let amt = Number(work_amount) + Number(diff_work_amount);\n            let wp = Number(workpoints) + Number(diff_workpoints);\n            data[i][\"work_percentage\"] = Number(percent).toFixed(2);\n            data[i][\"work_amount\"] = Number(amt).toFixed(2);\n            data[i][\"priceWorkFlag\"] = false;\n            data[i][\"wp\"] = Number(wp).toFixed(2);\n            await this.setState({\n              data\n            });\n          } else {\n            data[i][\"work_percentage\"] = work_percent;\n            data[i][\"work_amount\"] = work_amount;\n            data[i][\"priceWorkFlag\"] = false;\n            data[i][\"wp\"] = workpoints;\n            await this.setState({\n              data\n            });\n          }\n\n          j++;\n        }\n\n        i++;\n      }\n\n      data_list[index][\"updateWorkCalcFlag\"] = false;\n      await this.setState({\n        data_list\n      });\n    };\n\n    this.handleDeleteStaff = async (e, index1, index2) => {\n      let data = this.state.data_list[index1].data[index2];\n      let cartId = this.state.data_list[index1].id;\n      let Workid = 0;\n      let Saleid = 0;\n\n      if (data.tmp_workid == null) {\n        Workid = 0;\n      } else {\n        Workid = data.tmp_workid;\n      }\n\n      if (data.tmp_saleid == null) {\n        Saleid = 0;\n      } else {\n        Saleid = data.tmp_saleid;\n      }\n\n      let body = {\n        sales: data.sales,\n        work: data.work,\n        cart_id: Number(cartId),\n        tmp_workid: Number(Workid),\n        tmp_saleid: Number(Saleid)\n      };\n      console.log(body, \"selected row Item for delete\");\n\n      if (Number(Saleid) > 0 || Number(Workid) > 0) {\n        await this.props.commonCreateApi(`cartpopup/staffsdelete/`, body).then(res => {\n          let {\n            status\n          } = res;\n\n          if (status == \"200\") {\n            console.log(res, \"staffselectionpoppupdeleteresponse\");\n            let {\n              data_list\n            } = this.state;\n            data_list[index1].data.splice(index2, 1);\n            this.setState({\n              data_list\n            });\n\n            if (data.sales && data.work) {\n              this.handleWorkStaffCalc(index1);\n              this.handleSalesStaffCalc(index1);\n            } else if (data.sales && !data.work) {\n              this.handleSalesStaffCalc(index1);\n            } else if (!data.sales && data.work) {\n              this.handleWorkStaffCalc(index1);\n            } //this.getStaffSelectionList();\n\n          }\n        });\n      } else {\n        let {\n          data_list\n        } = this.state;\n        data_list[index1].data.splice(index2, 1);\n        this.setState({\n          data_list\n        });\n\n        if (data.sales && data.work) {\n          this.handleWorkStaffCalc(index1);\n          this.handleSalesStaffCalc(index1);\n        } else if (data.sales && !data.work) {\n          this.handleSalesStaffCalc(index1);\n        } else if (!data.sales && data.work) {\n          this.handleWorkStaffCalc(index1);\n        }\n      }\n    };\n\n    this.handleWorkPercentFocusOut = async (index, index2) => {\n      let {\n        data_list\n      } = this.state;\n      let workStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.work) {\n          workStaffCount += 1;\n        }\n      }\n\n      if (Number(data_list[index].data[index2][\"work_percentage\"]) <= 100) {\n        let ModifiedWork_percent = Number(data_list[index].data[index2][\"work_percentage\"]).toFixed(2);\n        let ModifiedWork_amount = 0;\n        let ModifiedWorkpoints = Number(ModifiedWork_percent / 100 * data_list[index][\"work_point\"]).toFixed(2);\n        let totalwork = Number(Number(100).toFixed(2) - Number(ModifiedWork_percent).toFixed(2)).toFixed(2);\n        let work_percent = Number(totalwork / (workStaffCount - 1)).toFixed(2);\n        let diff_work_percent = Number(totalwork - work_percent * (workStaffCount - 1)).toFixed(2);\n        let work_amount = 0;\n        let diff_work_amount = 0;\n        let totalWorkAmount = 0;\n        let totalWorkPoint = Number(Number(data_list[index][\"work_point\"]).toFixed(2) - Number(ModifiedWorkpoints).toFixed(2)).toFixed(2);\n        let workpoints = Number(totalWorkPoint / (workStaffCount - 1)).toFixed(2);\n        let diff_workpoints = Number(totalWorkPoint - workpoints * (workStaffCount - 1)).toFixed(2);\n\n        if (data_list[index].div == \"3\" && data_list[index].type.toUpperCase() == \"DEPOSIT\") {\n          ModifiedWork_amount = Number(ModifiedWork_percent / 100 * data_list[index][\"work_amount\"]).toFixed(2);\n          totalWorkAmount = Number(Number(data_list[index][\"work_amount\"]).toFixed(2) - Number(ModifiedWork_amount).toFixed(2)).toFixed(2);\n          work_amount = Number(totalWorkAmount / (workStaffCount - 1)).toFixed(2);\n          diff_work_amount = Number(totalWorkAmount - work_amount * (workStaffCount - 1)).toFixed(2);\n        } else {\n          ModifiedWork_amount = Number(ModifiedWork_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n          totalWorkAmount = Number(Number(data_list[index][\"trans_amt\"]).toFixed(2) - Number(ModifiedWork_amount).toFixed(2)).toFixed(2);\n          work_amount = Number(totalWorkAmount / (workStaffCount - 1)).toFixed(2);\n          diff_work_amount = Number(totalWorkAmount - work_amount * (workStaffCount - 1)).toFixed(2);\n        }\n\n        let data = data_list[index].data;\n        data_list[index].data[index2][\"work_percentage\"] = Number(ModifiedWork_percent).toFixed(2);\n        data_list[index].data[index2][\"work_amount\"] = Number(ModifiedWork_amount).toFixed(2);\n        data_list[index].data[index2][\"wp\"] = Number(ModifiedWorkpoints).toFixed(2);\n        await this.setState({\n          data\n        });\n        let workLength = data.filter(acc => acc.work === true && acc.staff !== data_list[index].data[index2][\"staff\"]).length;\n        let workData = data.filter(acc => acc.work === true && acc.staff !== data_list[index].data[index2][\"staff\"]);\n\n        if (workData) {\n          let i = 0;\n          let j = 1;\n\n          for (let line of data_list[index].data) {\n            if (line.work) {\n              if (data_list[index].data[index2][\"staff\"] === line.staff) {\n                data[i][\"work_percentage\"] = ModifiedWork_percent;\n                data[i][\"work_amount\"] = ModifiedWork_amount;\n                data[i][\"wp\"] = ModifiedWorkpoints;\n                await this.setState({\n                  data\n                });\n              } else {\n                if (j == workLength) {\n                  let percent = Number(work_percent) + Number(diff_work_percent);\n                  let amt = Number(work_amount) + Number(diff_work_amount);\n                  let wp = Number(workpoints) + Number(diff_workpoints);\n                  data[i][\"work_percentage\"] = Number(percent).toFixed(2);\n                  data[i][\"work_amount\"] = Number(amt).toFixed(2);\n                  data[i][\"wp\"] = Number(wp).toFixed(2);\n                  await this.setState({\n                    data\n                  });\n                } else {\n                  data[i][\"work_percentage\"] = work_percent;\n                  data[i][\"work_amount\"] = work_amount;\n                  data[i][\"wp\"] = workpoints;\n                  await this.setState({\n                    data\n                  });\n                }\n\n                j++;\n              }\n            }\n\n            i++;\n          }\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Please enter valid percentage\"\n        });\n      }\n    };\n\n    this.handleSalesStaffPriceChange = async (e, index, index1) => {\n      let {\n        data_list\n      } = this.state;\n      let data = data_list[index].data[index1];\n      data[\"priceSalesFlag\"] = e.target.value;\n      await this.setState({\n        data\n      });\n      let salesPercentCount = data_list[index].data.filter(acc => acc.sales === true && acc.priceSalesFlag == true).length;\n\n      if (salesPercentCount > 0) {\n        data_list[index][\"updateSalesCalcFlag\"] = true;\n        await this.setState({\n          data_list\n        });\n      } else {\n        data_list[index][\"updateSalesCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleWorkStaffPriceChange = async (e, index, index1) => {\n      let {\n        data_list\n      } = this.state;\n      let data = data_list[index].data[index1];\n      data[\"priceWorkFlag\"] = e.target.value;\n      await this.setState({\n        data\n      });\n      let workPercentCount = data_list[index].data.filter(acc => acc.work === true && acc.priceWorkFlag == true).length;\n\n      if (workPercentCount > 0) {\n        data_list[index][\"updateWorkCalcFlag\"] = true;\n        await this.setState({\n          data_list\n        });\n      } else {\n        data_list[index][\"updateWorkCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleSalesPercentCalcUpdate = async index => {\n      let {\n        data_list\n      } = this.state;\n      let salesStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.sales) {\n          salesStaffCount += 1;\n        }\n      }\n\n      let data = data_list[index].data;\n      let salesPercentChange = data.filter(acc => acc.sales === true && acc.priceSalesFlag == true);\n      let salesStaffBalancePercent = 0;\n\n      if (salesPercentChange) {\n        for (let percentLine of salesPercentChange) {\n          if (percentLine.sales) {\n            salesStaffBalancePercent += Number(percentLine.sales_percentage);\n          }\n        }\n      }\n\n      if (salesPercentChange && salesStaffBalancePercent > 100) {\n        Toast({\n          type: \"error\",\n          message: \"Percentage should be less than 100\"\n        });\n      } else {\n        let salesPercentCount = data.filter(acc => acc.sales === true && acc.priceSalesFlag == true).length;\n        let ModifiedSales_percent = Number(100 - salesStaffBalancePercent).toFixed(2);\n        let Modifiedsales_amount = Number(ModifiedSales_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n        let Modifiedsalespoints = Number(ModifiedSales_percent / 100 * data_list[index][\"sales_point\"]).toFixed(2);\n        let sales_percent = Number(ModifiedSales_percent / (salesStaffCount - salesPercentCount)).toFixed(2);\n        let diff_sales_percent = Number(ModifiedSales_percent - sales_percent * (salesStaffCount - salesPercentCount)).toFixed(2);\n        let sales_amount = Number(Modifiedsales_amount / (salesStaffCount - salesPercentCount)).toFixed(2);\n        let diff_sales_amount = Number(Modifiedsales_amount - sales_amount * (salesStaffCount - salesPercentCount)).toFixed(2);\n        let salespoints = Number(Modifiedsalespoints / (salesStaffCount - salesPercentCount)).toFixed(2);\n        let diff_salespoints = Number(Modifiedsalespoints - salespoints * (salesStaffCount - salesPercentCount)).toFixed(2);\n        let i = 0;\n        let j = 1;\n\n        for (let dataLine of data_list[index].data) {\n          if (dataLine.sales) {\n            if (dataLine.priceSalesFlag) {\n              let LineSales_percent = Number(dataLine.sales_percentage).toFixed(2);\n              let Linesales_amount = Number(LineSales_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n              let Linesalespoints = Number(LineSales_percent / 100 * data_list[index][\"sales_point\"]).toFixed(2);\n              data[i][\"sales_percentage\"] = LineSales_percent;\n              data[i][\"sales_amount\"] = Linesales_amount;\n              data[i][\"sp\"] = Linesalespoints;\n              data[i][\"priceSalesFlag\"] = false;\n              await this.setState({\n                data\n              });\n            } else {\n              if (j == salesPercentCount) {\n                let percent = Number(sales_percent) + Number(diff_sales_percent);\n                let amt = Number(sales_amount) + Number(diff_sales_amount);\n                let sp = Number(salespoints) + Number(diff_salespoints);\n                data[i][\"sales_percentage\"] = Number(percent).toFixed(2);\n                data[i][\"sales_amount\"] = Number(amt).toFixed(2);\n                data[i][\"sp\"] = Number(sp).toFixed(2);\n                data[i][\"priceSalesFlag\"] = false;\n                await this.setState({\n                  data\n                });\n              } else {\n                data[i][\"sales_percentage\"] = sales_percent;\n                data[i][\"sales_amount\"] = sales_amount;\n                data[i][\"sp\"] = salespoints;\n                data[i][\"priceSalesFlag\"] = false;\n                await this.setState({\n                  data\n                });\n              }\n\n              j++;\n            }\n          }\n\n          i++;\n        }\n\n        data_list[index][\"updateSalesCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleWorkPercentCalcUpdate = async index => {\n      let {\n        data_list\n      } = this.state;\n      let WorkStaffCount = 0;\n\n      for (let line of data_list[index].data) {\n        if (line.work) {\n          WorkStaffCount += 1;\n        }\n      }\n\n      let data = data_list[index].data;\n      let workPercentChange = data.filter(acc => acc.work === true && acc.priceWorkFlag == true);\n      let workStaffBalancePercent = 0;\n\n      if (workPercentChange) {\n        for (let percentLine of workPercentChange) {\n          if (percentLine.work) {\n            workStaffBalancePercent += Number(percentLine.work_percentage);\n          }\n        }\n      }\n\n      if (workPercentChange && workStaffBalancePercent > 100) {\n        Toast({\n          type: \"error\",\n          message: \"Percentage should be less than 100\"\n        });\n      } else {\n        let workPercentCount = data.filter(acc => acc.work === true && acc.priceWorkFlag == true).length;\n        let ModifiedWork_percent = Number(100 - workStaffBalancePercent).toFixed(2);\n        let ModifiedWork_amount = 0;\n\n        if (data_list[index].div == \"3\" && data_list[index].type.toUpperCase() == \"DEPOSIT\") {\n          ModifiedWork_amount = Number(ModifiedWork_percent / 100 * data_list[index][\"work_amount\"]).toFixed(2);\n        } else {\n          ModifiedWork_amount = Number(ModifiedWork_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n        }\n\n        let ModifiedWorkpoints = Number(ModifiedWork_percent / 100 * data_list[index][\"work_point\"]).toFixed(2);\n        let work_percent = Number(ModifiedWork_percent / (WorkStaffCount - workPercentCount)).toFixed(2);\n        let diff_work_percent = Number(ModifiedWork_percent - work_percent * (WorkStaffCount - workPercentCount)).toFixed(2);\n        let work_amount = Number(ModifiedWork_amount / (WorkStaffCount - workPercentCount)).toFixed(2);\n        let diff_work_amount = Number(ModifiedWork_amount - work_amount * (WorkStaffCount - workPercentCount)).toFixed(2);\n        let workpoints = Number(ModifiedWorkpoints / (WorkStaffCount - workPercentCount)).toFixed(2);\n        let diff_workpoints = Number(ModifiedWorkpoints - workpoints * (WorkStaffCount - workPercentCount)).toFixed(2);\n        let i = 0;\n        let j = 1;\n\n        for (let dataLine of data_list[index].data) {\n          if (dataLine.work) {\n            if (dataLine.priceWorkFlag) {\n              let LineWork_percent = Number(dataLine.work_percentage).toFixed(2);\n              let LineWork_amount = 0;\n\n              if (data_list[index].div == \"3\" && data_list[index].type.toUpperCase() == \"DEPOSIT\") {\n                LineWork_amount = Number(LineWork_percent / 100 * data_list[index][\"work_amount\"]).toFixed(2);\n              } else {\n                LineWork_amount = Number(LineWork_percent / 100 * data_list[index][\"trans_amt\"]).toFixed(2);\n              }\n\n              let Lineworkspoints = Number(LineWork_percent / 100 * data_list[index][\"work_point\"]).toFixed(2);\n              data[i][\"work_percentage\"] = LineWork_percent;\n              data[i][\"work_amount\"] = LineWork_amount;\n              data[i][\"wp\"] = Lineworkspoints;\n              data[i][\"priceWorkFlag\"] = false;\n              await this.setState({\n                data\n              });\n            } else {\n              if (j == workPercentCount) {\n                let percent = Number(work_percent) + Number(diff_work_percent);\n                let amt = Number(work_amount) + Number(diff_work_amount);\n                let wp = Number(workpoints) + Number(diff_workpoints);\n                data[i][\"work_percentage\"] = Number(percent).toFixed(2);\n                data[i][\"work_amount\"] = Number(amt).toFixed(2);\n                data[i][\"wp\"] = Number(wp).toFixed(2);\n                data[i][\"priceWorkFlag\"] = false;\n                await this.setState({\n                  data\n                });\n              } else {\n                data[i][\"work_percentage\"] = work_percent;\n                data[i][\"work_amount\"] = work_amount;\n                data[i][\"wp\"] = workpoints;\n                data[i][\"priceWorkFlag\"] = false;\n                await this.setState({\n                  data\n                });\n              }\n\n              j++;\n            }\n          }\n\n          i++;\n        }\n\n        data_list[index][\"updateWorkCalcFlag\"] = false;\n        await this.setState({\n          data_list\n        });\n      }\n    };\n\n    this.handleCommonAddNewStaff = async () => {\n      await this.setState({\n        //selectedAddStaffIndex: index,\n        selectedAddStaffType: 1,\n        staffList: [],\n        meta: {},\n        page: 1\n      });\n      this.getStafflist();\n      this.setState({\n        staffCommonListPopup: true\n      });\n    };\n\n    this.handleCommonSelectedStaff = async selectedItem => {\n      this.handleCommonCreateEmployeePopup();\n      let {\n        selectedAddStaffType,\n        data_list\n      } = this.state;\n\n      try {\n        data_list.forEach((e, Mainindex) => {\n          let datafound = e.data.find(acc => acc.emp_id === selectedItem.id);\n\n          if (!datafound) {\n            e.data.push({\n              work: selectedAddStaffType == 0 ? true : false,\n              sales: selectedAddStaffType == 1 ? true : false,\n              staff: selectedItem.emp_name,\n              emp_id: selectedItem.id,\n              sales_percentage: 0,\n              sales_amount: 0,\n              sp: 0,\n              work_percentage: 0,\n              work_amount: 0,\n              wp: 0,\n              tmp_workid: null,\n              tmp_saleid: null\n            });\n            this.setState({\n              data_list\n            });\n            selectedAddStaffType == 0 ? this.handleWorkStaffCalc(Mainindex) : this.handleSalesStaffCalc(Mainindex);\n            this.setState({\n              selectedAddStaffIndex: null,\n              selectedAddStaffType: null\n            });\n          }\n        });\n      } catch (e) {\n        console.log(e, \"commonstaffadd\");\n      }\n    };\n\n    this.handleCommonCreateEmployeePopup = () => {\n      this.setState(prevState => ({\n        staffCommonListPopup: !prevState.staffCommonListPopup\n      }));\n    };\n\n    this.handleCommonDeleteSelectedStaff = async staff => {\n      let {\n        data_list\n      } = this.state;\n\n      try {\n        if (data_list.length > 0) {\n          data_list.forEach((e, Mainindex) => {\n            let filter = e.data.find(acc => acc.emp_id === staff.id);\n\n            if (filter) {\n              e.data.forEach((Itemdata, index) => {\n                debugger;\n\n                if (staff.id === Itemdata.emp_id) {\n                  let cartId = e.id;\n                  let Workid = 0;\n                  let Saleid = 0;\n\n                  if (Itemdata.tmp_workid == null) {\n                    Workid = 0;\n                  } else {\n                    Workid = Itemdata.tmp_workid;\n                  }\n\n                  if (Itemdata.tmp_saleid == null) {\n                    Saleid = 0;\n                  } else {\n                    Saleid = Itemdata.tmp_saleid;\n                  }\n\n                  let body = {\n                    sales: Itemdata.sales,\n                    work: Itemdata.work,\n                    cart_id: Number(cartId),\n                    tmp_workid: Number(Workid),\n                    tmp_saleid: Number(Saleid)\n                  };\n                  console.log(body, \"selected row Item for delete\");\n\n                  if (Number(Saleid) > 0 || Number(Workid) > 0) {\n                    this.props.commonCreateApi(`cartpopup/staffsdelete/`, body).then(res => {\n                      let {\n                        status\n                      } = res;\n\n                      if (status == \"200\") {\n                        console.log(res, \"staffselectionpoppupdeleteresponse\");\n                        let {\n                          data_list\n                        } = this.state;\n                        data_list[Mainindex].data.splice(index, 1);\n                        this.setState({\n                          data_list\n                        });\n\n                        if (Itemdata.sales && Itemdata.work) {\n                          this.handleWorkStaffCalc(Mainindex);\n                          this.handleSalesStaffCalc(Mainindex);\n                        } else if (Itemdata.sales && !Itemdata.work) {\n                          this.handleSalesStaffCalc(Mainindex);\n                        } else if (!Itemdata.sales && Itemdata.work) {\n                          this.handleWorkStaffCalc(Mainindex);\n                        }\n                      }\n                    });\n                  } else {\n                    let {\n                      data_list\n                    } = this.state;\n                    data_list[Mainindex].data.splice(index, 1);\n                    this.setState({\n                      data_list\n                    });\n\n                    if (Itemdata.sales && Itemdata.work) {\n                      this.handleWorkStaffCalc(Mainindex);\n                      this.handleSalesStaffCalc(Mainindex);\n                    } else if (Itemdata.sales && !Itemdata.work) {\n                      this.handleSalesStaffCalc(Mainindex);\n                    } else if (!Itemdata.sales && Itemdata.work) {\n                      this.handleWorkStaffCalc(Mainindex);\n                    }\n                  }\n                }\n              });\n            }\n          });\n        }\n\n        this.handleCommonDeleteEmployeePopup();\n      } catch (e) {\n        console.log(e, \"commondeletecatchlog\");\n      }\n    };\n\n    this.handleCommonDeleteStaffClick = async () => {\n      await this.setState({\n        //selectedAddStaffIndex: index,\n        selectedAddStaffType: 1,\n        staffList: [],\n        availableStaffList: [],\n        meta: {},\n        page: 1\n      });\n      this.getStafflistforMatch();\n      this.setState({\n        staffDeleteCommonListPopup: true\n      });\n    };\n\n    this.getStafflistforMatch = data => {\n      let {\n        page,\n        limit,\n        selectedAddStaffType\n      } = this.state;\n      this.props.getCommonApi(`empcartlist/?sales_staff=${selectedAddStaffType}&page=${page}&limit=${500}`).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(key, \"formatchstaff\");\n        let {\n          staffList\n        } = this.state;\n        let {\n          meta\n        } = this.state;\n        staffList = [];\n        meta = {};\n        staffList = data;\n        await this.setState({\n          staffList\n        });\n        this.getDeleteStafflist();\n      });\n    };\n\n    this.getDeleteStafflist = async data => {\n      let {\n        page,\n        limit,\n        selectedAddStaffType\n      } = this.state;\n      let {\n        data_list,\n        staffList\n      } = this.state;\n      let {\n        availableStaffList\n      } = this.state;\n      let {\n        meta\n      } = this.state;\n      meta = {};\n\n      try {\n        if (data_list.length > 0) {\n          let dataList = [];\n          data_list.forEach((e, Mainindex) => {\n            e.data.map((data, index) => {\n              let finalstafflist = staffList.dataList;\n              let filter = finalstafflist.find(acc => acc.id === data.emp_id);\n\n              if (filter) {\n                if (dataList && dataList.length > 0) {\n                  let secondaryFilter = dataList.find(acc => acc.id === filter.id);\n\n                  if (!secondaryFilter) {\n                    dataList.push({\n                      id: filter.id,\n                      emp_name: filter.emp_name,\n                      emp_pic: filter.emp_pic\n                    });\n                  }\n                } else {\n                  dataList.push({\n                    id: filter.id,\n                    emp_name: filter.emp_name,\n                    emp_pic: filter.emp_pic\n                  });\n                }\n              }\n            });\n          }); // let pagination = {\n          //   current_page: page,\n          //   per_page: \"6\",\n          //   total: dataList.length,\n          //   total_pages: dataList.length / 6,\n          // };\n\n          meta = {};\n          console.log(meta, \"metalist\");\n          availableStaffList[\"dataList\"] = dataList;\n          await this.setState({\n            availableStaffList,\n            meta\n          });\n        }\n      } catch (e) {\n        console.log(e, \"commondeletelistcatchlog\");\n      }\n    };\n\n    this.handleCommonDeleteEmployeePopup = () => {\n      this.setState(prevState => ({\n        staffDeleteCommonListPopup: !prevState.staffDeleteCommonListPopup\n      }));\n    };\n\n    this.handleSalesAmountChange = async (e, index, index1) => {\n      // event.persist();\n      try {\n        let {\n          data_list,\n          selectedStaffIndex,\n          selectedStaffIndexLine\n        } = this.state;\n        let dataLine = data_list[index].data[index1];\n        dataLine[\"sales_percentage\"] = e.target.value;\n        selectedStaffIndex = index;\n        selectedStaffIndexLine = index1;\n        await this.setState({\n          dataLine,\n          selectedStaffIndex,\n          selectedStaffIndexLine\n        });\n\n        if (!this.debouncedFn) {\n          this.debouncedFn = _.debounce(async () => {\n            this.handleupdateLinelevelCalc();\n          }, 500);\n        }\n\n        this.debouncedFn();\n      } catch (e) {\n        console.log(e, \"salesamountchangecatchlog\");\n      }\n    };\n\n    this.handleupdateLinelevelCalc = async () => {\n      let {\n        data_list,\n        selectedStaffIndexLine,\n        selectedStaffIndex\n      } = this.state;\n      let dataLineLevel = this.state.data_list[selectedStaffIndex].data[selectedStaffIndexLine][\"sales_percentage\"];\n      let Linesales_amount = Number(dataLineLevel / 100 * data_list[selectedStaffIndex][\"trans_amt\"]).toFixed(2);\n      this.state.data_list[selectedStaffIndex].data[selectedStaffIndexLine][\"sales_amount\"] = Linesales_amount;\n      await this.setState({\n        data_list\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getStaffSelectionList();\n  }\n\n  render() {\n    let {\n      data_list,\n      staffListPopup,\n      staffList,\n      meta,\n      activeRow,\n      staffCommonListPopup,\n      staffDeleteCommonListPopup,\n      availableStaffList\n    } = this.state;\n    let {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mb-4 mt-2  product-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466,\n        columnNumber: 15\n      }\n    }, t(\"Staff Selection\"), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1468,\n        columnNumber: 13\n      }\n    }, data_list && data_list.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, !this.props.LinelevelCartId ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-noWrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1472,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      applybg: true,\n      className: \"col-12\",\n      label: \"Add Staff\",\n      onClick: this.handleCommonAddNewStaff,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1473,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: `ml-2`,\n      resetbg: true,\n      className: \"col-12\",\n      label: \"Remove Staff\",\n      onClick: this.handleCommonDeleteStaffClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1479,\n        columnNumber: 23\n      }\n    })) : null) : null), data_list && data_list.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1492,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      mainbg: false,\n      className: \"col-12 fs-15 submit-btn\",\n      label: \"Done\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1493,\n        columnNumber: 17\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-3 pr-5 mt-2 fw-500 h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1503,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1504,\n        columnNumber: 13\n      }\n    }, `Item`, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1505,\n        columnNumber: 13\n      }\n    }, `Qty`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1506,\n        columnNumber: 13\n      }\n    }, `Unit Price`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 13\n      }\n    }, `Disc $`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 13\n      }\n    }, `D/Price`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 13\n      }\n    }, `Amount`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1510,\n        columnNumber: 13\n      }\n    }, `Deposit`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4 overflow-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 11\n      }\n    }, data_list && data_list.length > 0 && data_list.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `row mb-2 ${this.props.LinelevelCartId && this.props.LinelevelCartId !== item.id ? \"d-none\" : \"\"}  `,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `row rounded p-2 accordion-menu border staff ${activeRow == item.id ? \"border-primary\" : \"\"}`,\n        onClick: () => this.handleAccordion(item.id, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1527,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1533,\n          columnNumber: 23\n        }\n      }, item.itemdesc), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 23\n        }\n      }, item.quantity), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1543,\n          columnNumber: 23\n        }\n      }, item.price), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1544,\n          columnNumber: 23\n        }\n      }, item.totl_disc), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1545,\n          columnNumber: 23\n        }\n      }, item.discount_price), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 23\n        }\n      }, item.trans_amt), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1549,\n          columnNumber: 23\n        }\n      }, item.deposit)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row  rounded bg-light p-1 d-none accordion\",\n        id: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1551,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1555,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table\",\n        style: {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1556,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1557,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1558,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"border-top-0 border-bottom-0 salesstaff-background\",\n        colSpan: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1564,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1565,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 fs-15 fw-500\",\n        label: \"Add\",\n        onClick: () => this.handleAddNewStaff(index, 1, item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1566,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-left border-top-0 border-bottom-0 salesstaff-background\",\n        colSpan: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1577,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1582,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1583,\n          columnNumber: 35\n        }\n      }, t(\"Sales staff\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1587,\n          columnNumber: 35\n        }\n      }, item.updateSalesCalcFlag ? /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 top-0\",\n        label: \"Calc\",\n        onClick: () => this.handleSalesPercentCalcUpdate(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1589,\n          columnNumber: 39\n        }\n      }) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1603,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 top-0\",\n        label: \"Auto\",\n        onClick: () => this.handleSalesStaffCalc(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1604,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"border-top-0 border-bottom-0 workstaff-background d-none\",\n        colSpan: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1615,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1620,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 fs-15 fw-500\",\n        label: \"Add\",\n        onClick: () => this.handleAddNewStaff(index, 0, item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1622,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-top-0 border-bottom-0 workstaff-background d-none\",\n        colSpan: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1633,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1638,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1639,\n          columnNumber: 35\n        }\n      }, t(\"Work staff\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1640,\n          columnNumber: 35\n        }\n      }, item.updateWorkCalcFlag ? /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12 top-0\",\n        label: \"Calc\",\n        onClick: () => this.handleWorkPercentCalcUpdate(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1642,\n          columnNumber: 39\n        }\n      }) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1656,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NormalButton, {\n        mainbg: true,\n        className: \"col-12\",\n        label: \"Auto\",\n        onClick: () => this.handleWorkStaffCalc(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1657,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"th\", {\n        rowSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1668,\n          columnNumber: 31\n        }\n      }, t(\"Action\"))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1670,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 salesstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1671,\n          columnNumber: 31\n        }\n      }, t(\"Staff\")), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 salesstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 31\n        }\n      }, \"%\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 salesstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1683,\n          columnNumber: 31\n        }\n      }, \"$ (\", item.trans_amt, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 salesstaff-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1689,\n          columnNumber: 31\n        }\n      }, \"SP (\", item.sales_point, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 workstaff-background d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 31\n        }\n      }, t(\"Staff\")), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 workstaff-background d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1701,\n          columnNumber: 31\n        }\n      }, \"%\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-right border-top-0 border-bottom-0 workstaff-background d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1707,\n          columnNumber: 31\n        }\n      }, \"$ (\", String(item.type).toUpperCase() == \"DEPOSIT\" && item.div == \"3\" ? item.work_amount : item.trans_amt, \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"text-center border-top-0 border-bottom-0 workstaff-background d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1718,\n          columnNumber: 31\n        }\n      }, t(\"WP\"), \" (\", item.work_point, \")\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1726,\n          columnNumber: 27\n        }\n      }, data_list[index].data.length <= 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1728,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1729,\n          columnNumber: 33\n        }\n      }, t(\"No record found\"))) : null, data_list[index].data.filter(data => data.sales == true).map((data, index2) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1738,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center d-none workstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1739,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n          type: \"checkbox\",\n          checked: data.sales,\n          name: \"sales\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1743,\n            columnNumber: 39\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center d-none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1756,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n          type: \"checkbox\",\n          checked: data.work,\n          name: \"work\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1760,\n            columnNumber: 39\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right salesstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1773,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"text-left text-black common-label-text pb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1777,\n            columnNumber: 39\n          }\n        }, data.staff)), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right salesstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1781,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-nowrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1785,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1786,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"sales_percentage\",\n          type: \"number\",\n          value: data.sales && data.sales_percentage ? data.sales_percentage : \"\",\n          onChange: e => this.handleSalesAmountChange(e, index, index2),\n          disabled: data.sales ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1787,\n            columnNumber: 43\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1806,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n          type: \"checkbox\",\n          checked: data.priceSalesFlag ? true : false,\n          name: \"priceSalesFlag\",\n          onChange: e => this.handleSalesStaffPriceChange(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1807,\n            columnNumber: 43\n          }\n        })))), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right salesstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1824,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"sales_amount\",\n          type: \"number\",\n          value: data.sales && data.sales_amount ? data.sales_amount : \"\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.sales ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1828,\n            columnNumber: 39\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right salesstaff-background\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1846,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"sp\",\n          type: \"number\",\n          value: data.sp,\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.sales ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1850,\n            columnNumber: 39\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right workstaff-background d-none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1864,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"text-left text-black common-label-text pb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1868,\n            columnNumber: 39\n          }\n        }, data.staff)), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right workstaff-background d-none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1872,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-nowrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1876,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1877,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"work_percentage\",\n          type: \"number\",\n          value: data.work && data.work_percentage ? data.work_percentage : \"\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.work ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1878,\n            columnNumber: 43\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1896,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n          type: \"checkbox\",\n          checked: data.priceWorkFlag ? true : false,\n          name: \"priceWorkFlag\",\n          onChange: e => this.handleWorkStaffPriceChange(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1897,\n            columnNumber: 43\n          }\n        })))), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center border-right workstaff-background d-none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1914,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"work_amount\",\n          type: \"number\",\n          value: data.work && data.work_amount ? data.work_amount : \"\",\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.work ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1918,\n            columnNumber: 39\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center workstaff-background d-none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1936,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NormalInput, {\n          name: \"wp\",\n          type: \"number\",\n          value: data.wp,\n          onChange: e => this.handleStaffChange(e, index, index2),\n          disabled: data.work ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1940,\n            columnNumber: 39\n          }\n        })), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1954,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-12 p-0 fs-18 text-center cursor-pointer\",\n          onClick: e => this.handleDeleteStaff(e, index, index2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1955,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"icon-delete\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1965,\n            columnNumber: 41\n          }\n        }))));\n      }))))));\n    })), data_list && data_list.length <= 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pl-5 pr-5 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1981,\n        columnNumber: 13\n      }\n    }, t(\"No Record Found\")) : null, /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"stock-memo-staff-listing\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: staffListPopup,\n      handleModal: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1983,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleEmployeePopup,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1989,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StaffList, {\n      staffList: staffList,\n      meta: meta,\n      handleNext: () => this.handleNext(),\n      handleBack: () => this.handleBack(),\n      handleSelectedStaff: item => this.handleSelectedStaff(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1995,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"stock-memo-staff-listing\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: staffCommonListPopup,\n      handleModal: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2003,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleCommonCreateEmployeePopup,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2009,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StaffList, {\n      staffList: staffList,\n      meta: meta,\n      handleNext: () => this.handleNext(),\n      handleBack: () => this.handleBack(),\n      handleSelectedStaff: item => this.handleCommonSelectedStaff(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2015,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"stock-memo-staff-listing\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: staffDeleteCommonListPopup,\n      handleModal: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2023,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleCommonDeleteEmployeePopup,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2029,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StaffList, {\n      staffList: availableStaffList,\n      meta: ``,\n      handleNext: () => {},\n      handleBack: () => {},\n      handleSelectedStaff: item => this.handleCommonDeleteSelectedStaff(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2035,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  basicApptDetail: state.appointment.basicApptDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi,\n    commonCreateApi,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const StaffSelectionPopup = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(StaffSelectionPopupClass));","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/component/Admin/Cart/cart/staffSelectionPopup.js"],"names":["React","Component","NormalInput","NormalButton","NormalModal","NormalCheckbox","connect","bindActionCreators","getCommonApi","commonCreateApi","commonDeleteApi","closeIcon","Toast","StaffList","withTranslation","_","StaffSelectionPopupClass","state","data_list","item_status_options","staffListPopup","selectedAddStaffIndex","staffList","limit","page","meta","sourceList","selectedAddStaffType","activeRow","staffCommonListPopup","staffDeleteCommonListPopup","availableStaffList","dataList","selectedStaffIndex","selectedStaffIndexLine","getStafflist","data","props","then","key","status","console","log","pagination","setState","handleNext","handleBack","getStaffSelectionList","basicApptDetail","custId","id","handleStaffChange","e","index1","index2","target","name","toUpperCase","value","type","message","handleAccordion","index","elements","document","getElementsByClassName","i","length","classList","add","getElementById","toggle","salesPercentCount","filter","acc","sales","priceSalesFlag","workPercentCount","work","priceWorkFlag","handleSelectedStaff","item","handleEmployeePopup","find","emp_id","handleSalesStaffCalc","handleWorkStaffCalc","push","staff","emp_name","sales_percentage","sales_amount","sp","work_percentage","work_amount","wp","tmp_workid","tmp_saleid","prevState","handleAddNewStaff","handlePostAction","div","transamt","Number","trans_amt","toFixed","sales_point","work_point","salesPercent","salesAmount","salesPoint","workPercent","workAmount","workPoint","line","handleSubmit","result","handleModal","salesStaffCount","sales_percent","totalsale","diff_sales_percent","diff_sales_amount","salespoints","diff_salespoints","salesLength","j","dataLine","percent","amt","workStaffCount","work_percent","totalwork","diff_work_percent","diff_work_amount","workpoints","diff_workpoints","workLength","handleDeleteStaff","cartId","Workid","Saleid","body","cart_id","res","splice","handleWorkPercentFocusOut","ModifiedWork_percent","ModifiedWork_amount","ModifiedWorkpoints","totalWorkAmount","totalWorkPoint","workData","handleSalesStaffPriceChange","handleWorkStaffPriceChange","handleSalesPercentCalcUpdate","salesPercentChange","salesStaffBalancePercent","percentLine","ModifiedSales_percent","Modifiedsales_amount","Modifiedsalespoints","LineSales_percent","Linesales_amount","Linesalespoints","handleWorkPercentCalcUpdate","WorkStaffCount","workPercentChange","workStaffBalancePercent","LineWork_percent","LineWork_amount","Lineworkspoints","handleCommonAddNewStaff","handleCommonSelectedStaff","selectedItem","handleCommonCreateEmployeePopup","forEach","Mainindex","datafound","handleCommonDeleteSelectedStaff","Itemdata","handleCommonDeleteEmployeePopup","handleCommonDeleteStaffClick","getStafflistforMatch","getDeleteStafflist","map","finalstafflist","secondaryFilter","emp_pic","handleSalesAmountChange","debouncedFn","debounce","handleupdateLinelevelCalc","dataLineLevel","componentDidMount","render","t","LinelevelCartId","itemdesc","quantity","price","totl_disc","discount_price","deposit","marginRight","updateSalesCalcFlag","updateWorkCalcFlag","String","minWidth","mapStateToProps","appointment","mapDispatchToProps","dispatch","StaffSelectionPopup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,cAJF,QAKO,kBALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,eAHF,QAIO,sBAJP;AAKA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,cAAP;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,wBAAN,SAAuCf,SAAvC,CAAiD;AAAA;AAAA;AAAA,SACtDgB,KADsxJS,OADL;AA2JNC,MAAAA,mBAAmB,EAAE,EA3Jf;AA4JNC,MAAAA,cAAc,EAAE,KA5JV;AA6JNC,MAAAA,qBAAqB,EAAE,IA7JjB;AA8JNC,MAAAA,SAAS,EAAE,EA9JL;AA+JNC,MAAAA,KAAK,EAAE,CA/JD;AAgKNC,MAAAA,IAAI,EAAE,CAhKA;AAiKNC,MAAAA,IAAI,EAAE,EAjKA;AAkKNC,MAAAA,UAAU,EAAE,EAlKN;AAmKNC,MAAAA,oBAAoB,EAAE,CAnKhB;AAoKNC,MAAAA,SAAS,EAAE,CApKL;AAqKNC,MAAAA,oBAAoB,EAAE,KArKhB;AAsKNC,MAAAA,0BAA0B,EAAE,KAtKtB;AAuKNC,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,QAAQ,EAAE;AADQ,OAvKd;AA0KNC,MAAAA,kBAAkB,EAAE,EA1Kd;AA2KNC,MAAAA,sBAAsB,EAAE;AA3KlB,KAD8C;;AAAA,SAkLtDC,YAlLsD,GAkLvCC,IAAI,IAAI;AACrB,UAAI;AAAEZ,QAAAA,IAAF;AAAQD,QAAAA,KAAR;AAAeI,QAAAA;AAAf,UAAwC,KAAKV,KAAjD;AACA,WAAKoB,KAAL,CACG7B,YADH,CAEK,4BAA2BmB,oBAAqB,SAAQH,IAAK,UAASD,KAAM,EAFjF,EAIGe,IAJH,CAIQ,MAAMC,GAAN,IAAa;AACjB,YAAI;AAAEC,UAAAA,MAAF;AAAUJ,UAAAA;AAAV,YAAmBG,GAAvB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiB,8BAAjB;AACA,YAAI;AAAEjB,UAAAA;AAAF,YAAgB,KAAKL,KAAzB;AACA,YAAI;AAAEQ,UAAAA;AAAF,YAAW,KAAKR,KAApB;AACAK,QAAAA,SAAS,GAAG,EAAZ;AACAG,QAAAA,IAAI,GAAG,EAAP;AACAH,QAAAA,SAAS,GAAGc,IAAZ;AACAX,QAAAA,IAAI,GAAGW,IAAI,CAACX,IAAL,CAAUkB,UAAjB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EAAkB,UAAlB;AACA,aAAKmB,QAAL,CAAc;AACZtB,UAAAA,SADY;AAEZG,UAAAA;AAFY,SAAd;AAID,OAlBH;AAmBD,KAvMqD;;AAAA,SAyMtDoB,UAzMsD,GAyMzC,YAAY;AACvB,UAAI;AAAErB,QAAAA;AAAF,UAAW,KAAKP,KAApB;AACAO,MAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACA,YAAM,KAAKoB,QAAL,CAAc;AAClBpB,QAAAA;AADkB,OAAd,CAAN;;AAGA,UAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,aAAKW,YAAL;AACD;AACF,KAlNqD;;AAAA,SAoNtDW,UApNsD,GAoNzC,YAAY;AACvB,UAAI;AAAEtB,QAAAA;AAAF,UAAW,KAAKP,KAApB;AACAO,MAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACA,YAAM,KAAKoB,QAAL,CAAc;AAClBpB,QAAAA;AADkB,OAAd,CAAN;;AAGA,UAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,aAAKW,YAAL;AACD;AACF,KA7NqD;;AAAA,SA+NtDY,qBA/NsD,GA+N9B,MAAM;AAC5B,UAAI;AAAE7B,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AACA,UAAI;AAAE+B,QAAAA;AAAF,UAAsB,KAAKX,KAA/B;AACA,WAAKA,KAAL,CACG7B,YADH,CAEK,wBAAuBwC,eAAe,CAACC,MAAO,YAAW,KAAKZ,KAAL,CAAWa,EAAG,cAF5E,EAIGZ,IAJH,CAIQ,MAAMC,GAAN,IAAa;AACjB;AACA,YAAI;AAAEC,UAAAA,MAAF;AAAUJ,UAAAA;AAAV,YAAmBG,GAAvB;AACArB,QAAAA,SAAS,GAAG,EAAZ;;AACA,YAAIsB,MAAM,IAAI,KAAd,EAAqB;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiB,6BAAjB;AACArB,UAAAA,SAAS,GAAGkB,IAAZ;AACA,gBAAM,KAAKQ,QAAL,CAAc;AAClB1B,YAAAA;AADkB,WAAd,CAAN,CAHmB,CAOnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,OAxBH;AAyBD,KA3PqD;;AAAA,SA6PtDiC,iBA7PsD,GA6PlC,OAAOC,CAAP,EAAUC,MAAV,EAAkBC,MAAlB,KAA6B;AAC/C,UAAI;AAAEpC,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AACA,UAAImB,IAAI,GAAG,KAAKnB,KAAL,CAAWC,SAAX,CAAqBmC,MAArB,EAA6BjB,IAA7B,CAAkCkB,MAAlC,CAAX;;AACA,UAAI,CAACF,CAAC,CAACG,MAAF,CAASC,IAAV,KAAmB,MAAvB,EAA+B;AAC7B,YACG,KAAKvC,KAAL,CAAWC,SAAX,CAAqBmC,MAArB,EAA6B,MAA7B,EAAqCI,WAArC,MAAsD,OAAtD,IACC,KAAKxC,KAAL,CAAWC,SAAX,CAAqBmC,MAArB,EAA6B,KAA7B,KAAuC,GADzC,IAEC,KAAKpC,KAAL,CAAWC,SAAX,CAAqBmC,MAArB,EAA6B,MAA7B,EAAqCI,WAArC,MAAsD,SAAtD,IACC,KAAKxC,KAAL,CAAWC,SAAX,CAAqBmC,MAArB,EAA6B,KAA7B,KAAuC,GAJ3C,EAKE;AACAjB,UAAAA,IAAI,CAAC,CAACgB,CAAC,CAACG,MAAF,CAASC,IAAV,CAAD,CAAJ,GAAwBJ,CAAC,CAACG,MAAF,CAASG,KAAjC;AACA,gBAAM,KAAKd,QAAL,CAAc;AAAER,YAAAA;AAAF,WAAd,CAAN;AACD,SARD,MAQO;AACLxB,UAAAA,KAAK,CAAC;AACJ+C,YAAAA,IAAI,EAAE,OADF;AAEJC,YAAAA,OAAO,EAAE;AAFL,WAAD,CAAL;AAID;AACF,OAfD,MAeO,IAAI,CAACR,CAAC,CAACG,MAAF,CAASC,IAAV,KAAmB,kBAAvB,EAA2C;AAChDpB,QAAAA,IAAI,CAAC,CAACgB,CAAC,CAACG,MAAF,CAASC,IAAV,CAAD,CAAJ,GAAwBJ,CAAC,CAACG,MAAF,CAASG,KAAjC;AACAtB,QAAAA,IAAI,CAAC,CAAC,gBAAD,CAAD,CAAJ,GAA2B,IAA3B;AACA,cAAM,KAAKQ,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd,CAAN;AAEAlB,QAAAA,SAAS,CAACmC,MAAD,CAAT,CAAkB,qBAAlB,IAA2C,IAA3C;AACA,cAAM,KAAKT,QAAL,CAAc;AAClB1B,UAAAA;AADkB,SAAd,CAAN;AAGD,OATM,MASA,IAAI,CAACkC,CAAC,CAACG,MAAF,CAASC,IAAV,KAAmB,iBAAvB,EAA0C;AAC/CpB,QAAAA,IAAI,CAAC,CAACgB,CAAC,CAACG,MAAF,CAASC,IAAV,CAAD,CAAJ,GAAwBJ,CAAC,CAACG,MAAF,CAASG,KAAjC;AACAtB,QAAAA,IAAI,CAAC,CAAC,eAAD,CAAD,CAAJ,GAA0B,IAA1B;AACA,cAAM,KAAKQ,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd,CAAN;AAEAlB,QAAAA,SAAS,CAACmC,MAAD,CAAT,CAAkB,oBAAlB,IAA0C,IAA1C;AACA,cAAM,KAAKT,QAAL,CAAc;AAClB1B,UAAAA;AADkB,SAAd,CAAN;AAGD,OATM,MASA;AACLkB,QAAAA,IAAI,CAAC,CAACgB,CAAC,CAACG,MAAF,CAASC,IAAV,CAAD,CAAJ,GAAwBJ,CAAC,CAACG,MAAF,CAASG,KAAjC;AACA,cAAM,KAAKd,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd,CAAN;AACD;AACF,KArSqD;;AAAA,SAuStDyB,eAvSsD,GAuSpC,OAAOX,EAAP,EAAWY,KAAX,KAAqB;AACrC,UAAI;AAAE5C,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;;AACA,UAAI,KAAKA,KAAL,CAAWW,SAAX,KAAyBsB,EAA7B,EAAiC;AAC/B,cAAM,KAAKN,QAAL,CAAc;AAClBhB,UAAAA,SAAS,EAAEsB;AADO,SAAd,CAAN;AAIA,YAAIa,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCH,UAAAA,QAAQ,CAACG,CAAD,CAAR,CAAYE,SAAZ,CAAsBC,GAAtB,CAA0B,QAA1B;AACD;;AACDL,QAAAA,QAAQ,CAACM,cAAT,CAAwBpB,EAAxB,EAA4BkB,SAA5B,CAAsCG,MAAtC,CAA6C,QAA7C;AACA9B,QAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AACD,OAXD,MAWO;AACL,cAAM,KAAKnB,QAAL,CAAc;AAClBhB,UAAAA,SAAS,EAAE;AADO,SAAd,CAAN;AAGA,YAAImC,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCH,UAAAA,QAAQ,CAACG,CAAD,CAAR,CAAYE,SAAZ,CAAsBC,GAAtB,CAA0B,QAA1B;AACD;AACF;;AAED,UAAIjC,IAAI,GAAGlB,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAA5B;AACA,UAAIoC,iBAAiB,GAAGpC,IAAI,CAACqC,MAAL,CACtBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,IAAd,IAAsBD,GAAG,CAACE,cAAJ,IAAsB,IAD7B,EAEtBT,MAFF;;AAGA,UAAIK,iBAAiB,GAAG,CAAxB,EAA2B;AACzBtD,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,qBAAjB,IAA0C,IAA1C;AACA,cAAM,KAAKlB,QAAL,CAAc;AAClBR,UAAAA;AADkB,SAAd,CAAN;AAGD,OALD,MAKO;AACLlB,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,qBAAjB,IAA0C,KAA1C;AACA,cAAM,KAAKlB,QAAL,CAAc;AAClB1B,UAAAA;AADkB,SAAd,CAAN;AAGD;;AAED,UAAI2D,gBAAgB,GAAGzC,IAAI,CAACqC,MAAL,CACrBC,GAAG,IAAIA,GAAG,CAACI,IAAJ,KAAa,IAAb,IAAqBJ,GAAG,CAACK,aAAJ,IAAqB,IAD5B,EAErBZ,MAFF;;AAGA,UAAIU,gBAAgB,GAAG,CAAvB,EAA0B;AACxB3D,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,oBAAjB,IAAyC,IAAzC;AACA,cAAM,KAAKlB,QAAL,CAAc;AAClBR,UAAAA;AADkB,SAAd,CAAN;AAGD,OALD,MAKO;AACLlB,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,oBAAjB,IAAyC,KAAzC;AACA,cAAM,KAAKlB,QAAL,CAAc;AAClB1B,UAAAA;AADkB,SAAd,CAAN;AAGD;AACF,KA5VqD;;AAAA,SA8VtD8D,mBA9VsD,GA8VhC,MAAMC,IAAN,IAAc;AAClC,WAAKC,mBAAL;AACA,UAAI;AAAE7D,QAAAA,qBAAF;AAAyBM,QAAAA,oBAAzB;AAA+CT,QAAAA;AAA/C,UAA6D,KAAKD,KAAtE;AACA,UAAImB,IAAI,GAAG,KAAKnB,KAAL,CAAWC,SAAX,CAAqBG,qBAArB,EAA4Ce,IAAvD;AAEA,UAAIqC,MAAM,GAAGrC,IAAI,CAAC+C,IAAL,CAAUT,GAAG,IAAIA,GAAG,CAACU,MAAJ,KAAeH,IAAI,CAAC/B,EAArC,CAAb;;AACA,UAAIuB,MAAJ,EAAY;AACV,YAAIA,MAAM,CAACK,IAAP,IAAenD,oBAAoB,IAAI,CAA3C,EAA8C;AAC5Cf,UAAAA,KAAK,CAAC;AACJ+C,YAAAA,IAAI,EAAE,OADF;AAEJC,YAAAA,OAAO,EAAE;AAFL,WAAD,CAAL;AAID;;AACD,YAAIa,MAAM,CAACE,KAAP,IAAgBhD,oBAAoB,IAAI,CAA5C,EAA+C;AAC7Cf,UAAAA,KAAK,CAAC;AACJ+C,YAAAA,IAAI,EAAE,OADF;AAEJC,YAAAA,OAAO,EAAE;AAFL,WAAD,CAAL;AAID,SALD,MAKO,IAAI,CAACa,MAAM,CAACE,KAAR,IAAiBhD,oBAAoB,IAAI,CAA7C,EAAgD;AACrD8C,UAAAA,MAAM,CAACE,KAAP,GAAe,IAAf;AACA,eAAKU,oBAAL,CAA0BhE,qBAA1B;AACD,SAHM,MAGA;AACLoD,UAAAA,MAAM,CAACK,IAAP,GAAc,IAAd;AACA,eAAKQ,mBAAL,CAAyBjE,qBAAzB;AACD;AACF,OAnBD,MAmBO;AACLe,QAAAA,IAAI,CAACmD,IAAL,CAAU;AACRT,UAAAA,IAAI,EAAEnD,oBAAoB,IAAI,CAAxB,GAA4B,IAA5B,GAAmC,KADjC;AAERgD,UAAAA,KAAK,EAAEhD,oBAAoB,IAAI,CAAxB,GAA4B,IAA5B,GAAmC,KAFlC;AAGR6D,UAAAA,KAAK,EAAEP,IAAI,CAACQ,QAHJ;AAIRL,UAAAA,MAAM,EAAEH,IAAI,CAAC/B,EAJL;AAKRwC,UAAAA,gBAAgB,EAAE,CALV;AAMRC,UAAAA,YAAY,EAAE,CANN;AAORC,UAAAA,EAAE,EAAE,CAPI;AAQRC,UAAAA,eAAe,EAAE,CART;AASRC,UAAAA,WAAW,EAAE,CATL;AAURC,UAAAA,EAAE,EAAE,CAVI;AAWRC,UAAAA,UAAU,EAAE,IAXJ;AAYRC,UAAAA,UAAU,EAAE;AAZJ,SAAV;AAcA,cAAM,KAAKrD,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd,CAAN;AAEAT,QAAAA,oBAAoB,IAAI,CAAxB,GACI,KAAK2D,mBAAL,CAAyBjE,qBAAzB,CADJ,GAEI,KAAKgE,oBAAL,CAA0BhE,qBAA1B,CAFJ;AAIA,aAAKuB,QAAL,CAAc;AACZvB,UAAAA,qBAAqB,EAAE,IADX;AAEZM,UAAAA,oBAAoB,EAAE;AAFV,SAAd;AAID;AACF,KAjZqD;;AAAA,SAkZtDuD,mBAlZsD,GAkZhC,MAAM;AAC1B,WAAKtC,QAAL,CAAcsD,SAAS,KAAK;AAC1B9E,QAAAA,cAAc,EAAE,CAAC8E,SAAS,CAAC9E;AADD,OAAL,CAAvB;AAGD,KAtZqD;;AAAA,SAwZtD+E,iBAxZsD,GAwZlC,OAAOrC,KAAP,EAAcH,IAAd,EAAoBsB,IAApB,KAA6B;AAC/C,UAAItB,IAAI,IAAI,CAAZ,EAAe;AACb,YACGsB,IAAI,CAAC,MAAD,CAAJ,CAAaxB,WAAb,MAA8B,OAA9B,IAAyCwB,IAAI,CAAC,KAAD,CAAJ,IAAe,GAAzD,IACCA,IAAI,CAAC,MAAD,CAAJ,CAAaxB,WAAb,MAA8B,SAA9B,IAA2CwB,IAAI,CAAC,KAAD,CAAJ,IAAe,GAF7D,EAGE;AACA,gBAAM,KAAKrC,QAAL,CAAc;AAClBvB,YAAAA,qBAAqB,EAAEyC,KADL;AAElBnC,YAAAA,oBAAoB,EAAEgC,IAFJ;AAGlBrC,YAAAA,SAAS,EAAE,EAHO;AAIlBG,YAAAA,IAAI,EAAE,EAJY;AAKlBD,YAAAA,IAAI,EAAE;AALY,WAAd,CAAN;AAOA,eAAKW,YAAL;AACA,eAAKS,QAAL,CAAc;AACZxB,YAAAA,cAAc,EAAE;AADJ,WAAd;AAGD,SAfD,MAeO;AACLR,UAAAA,KAAK,CAAC;AACJ+C,YAAAA,IAAI,EAAE,OADF;AAEJC,YAAAA,OAAO,EAAE;AAFL,WAAD,CAAL;AAID;AACF,OAtBD,MAsBO;AACL,cAAM,KAAKhB,QAAL,CAAc;AAClBvB,UAAAA,qBAAqB,EAAEyC,KADL;AAElBnC,UAAAA,oBAAoB,EAAEgC,IAFJ;AAGlBrC,UAAAA,SAAS,EAAE,EAHO;AAIlBG,UAAAA,IAAI,EAAE,EAJY;AAKlBD,UAAAA,IAAI,EAAE;AALY,SAAd,CAAN;AAOA,aAAKW,YAAL;AACA,aAAKS,QAAL,CAAc;AACZxB,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD;AACF,KA5bqD;;AAAA,SA8btDgF,gBA9bsD,GA8bnC,MAAM;AACvB,UAAI;AAAElF,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;;AAEA,WAAK,IAAIyC,KAAT,IAAkBxC,SAAlB,EAA6B;AAC3B,YAAIyC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,YAAI0C,GAAG,GAAG3C,KAAK,CAAC2C,GAAhB;AACA,YAAIC,QAAQ,GAAGC,MAAM,CAAC7C,KAAK,CAAC8C,SAAP,CAAN,CAAwBC,OAAxB,CAAgC,CAAhC,CAAf;AACA,YAAIX,WAAW,GAAGS,MAAM,CAAC7C,KAAK,CAACoC,WAAP,CAAN,CAA0BW,OAA1B,CAAkC,CAAlC,CAAlB;AACA,YAAIC,WAAW,GAAGH,MAAM,CAAC7C,KAAK,CAACgD,WAAP,CAAxB;AACA,YAAIC,UAAU,GAAGJ,MAAM,CAAC7C,KAAK,CAACiD,UAAP,CAAvB;AACA,YAAIC,YAAY,GAAG,CAAnB;AACA,YAAIC,WAAW,GAAGN,MAAM,CAAC,CAAD,CAAxB;AACA,YAAIO,UAAU,GAAGP,MAAM,CAAC,CAAD,CAAvB;AACA,YAAIQ,WAAW,GAAGR,MAAM,CAAC,CAAD,CAAxB;AACA,YAAIS,UAAU,GAAGT,MAAM,CAAC,CAAD,CAAvB;AACA,YAAIU,SAAS,GAAGV,MAAM,CAAC,CAAD,CAAtB;;AACA,aAAK,IAAIW,IAAT,IAAiBxD,KAAK,CAACtB,IAAvB,EAA6B;AAC3BwE,UAAAA,YAAY,IAAIL,MAAM,CAACW,IAAI,CAACxB,gBAAN,CAAtB;AACAmB,UAAAA,WAAW,IAAIN,MAAM,CAACW,IAAI,CAACvB,YAAN,CAArB;AACAmB,UAAAA,UAAU,IAAIP,MAAM,CAACW,IAAI,CAACtB,EAAN,CAApB;AACAmB,UAAAA,WAAW,IAAIR,MAAM,CAACW,IAAI,CAACrB,eAAN,CAArB;AACAmB,UAAAA,UAAU,IAAIT,MAAM,CAACW,IAAI,CAACpB,WAAN,CAApB;AACAmB,UAAAA,SAAS,IAAIV,MAAM,CAACW,IAAI,CAACnB,EAAN,CAAnB,CAN2B,CAQ3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,SAnD0B,CAoD3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,YAAIa,YAAY,GAAG,GAAf,IAAsBC,WAAW,GAAG,IAAIP,QAA5C,EAAsD;AACpD1F,UAAAA,KAAK,CAAC;AACJ+C,YAAAA,IAAI,EAAE,OADF;AAEJC,YAAAA,OAAO,EACL;AAHE,WAAD,CAAL;AAKA,iBAAO,KAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD,KAlhBqD;;AAAA,SAohBtDuD,YAphBsD,GAohBvC,MAAM;AACnB,UAAI;AAAEjG,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AACA,UAAImG,MAAM,GAAG,KAAKhB,gBAAL,EAAb;;AACA,UAAIgB,MAAJ,EAAY;AACV3E,QAAAA,OAAO,CAACC,GAAR,CAAYxB,SAAZ,EAAuB,2BAAvB;AACA,aAAKmB,KAAL,CAAW5B,eAAX,CAA4B,mBAA5B,EAAgDS,SAAhD,EAA2DoB,IAA3D,CAAgEC,GAAG,IAAI;AACrEE,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiB,6BAAjB;AACA,cAAI;AAAEC,YAAAA,MAAF;AAAUJ,YAAAA;AAAV,cAAmBG,GAAvB;;AACA,cAAIC,MAAM,IAAI,GAAd,EAAmB;AACjB,iBAAKO,qBAAL;AACA,iBAAKV,KAAL,CAAWgF,WAAX;AACD;AACF,SAPD;AAQD;AACF,KAliBqD;;AAAA,SAoiBtDhC,oBApiBsD,GAoiB/B,MAAMvB,KAAN,IAAe;AACpC,UAAI;AAAE5C,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AACA,UAAIqG,eAAe,GAAG,CAAtB;;AACA,WAAK,IAAIJ,IAAT,IAAiBhG,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAlC,EAAwC;AACtC,YAAI8E,IAAI,CAACvC,KAAT,EAAgB;AACd2C,UAAAA,eAAe,IAAI,CAAnB;AACD;AACF;;AACD,UAAIC,aAAa,GAAGhB,MAAM,CAAC,MAAMe,eAAP,CAAN,CAA8Bb,OAA9B,CAAsC,CAAtC,CAApB;AACA,UAAIe,SAAS,GAAGD,aAAa,GAAGD,eAAhC;AACA,UAAIG,kBAAkB,GAAGlB,MAAM,CAAC,MAAMiB,SAAP,CAAN,CAAwBf,OAAxB,CAAgC,CAAhC,CAAzB;AACA,UAAId,YAAY,GAAGY,MAAM,CACvBrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,IAAgCwD,eADT,CAAN,CAEjBb,OAFiB,CAET,CAFS,CAAnB;AAGA,UAAIiB,iBAAiB,GAAGnB,MAAM,CAC5BrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,IAAgC6B,YAAY,GAAG2B,eADnB,CAAN,CAEtBb,OAFsB,CAEd,CAFc,CAAxB;AAGA,UAAIkB,WAAW,GAAGpB,MAAM,CACtBrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,IAAkCwD,eADZ,CAAN,CAEhBb,OAFgB,CAER,CAFQ,CAAlB;AAGA,UAAImB,gBAAgB,GAAGrB,MAAM,CAC3BrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,IAAkC6D,WAAW,GAAGL,eADrB,CAAN,CAErBb,OAFqB,CAEb,CAFa,CAAvB;AAGA,UAAIrE,IAAI,GAAGlB,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAA5B;AACA,UAAIyF,WAAW,GAAGzF,IAAI,CAACqC,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,IAAjC,EAAuCR,MAAzD;AACA,UAAID,CAAC,GAAG,CAAR;AACA,UAAI4D,CAAC,GAAG,CAAR;;AACA,WAAK,IAAIC,QAAT,IAAqB7G,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAtC,EAA4C;AAC1C,YAAI2F,QAAQ,CAACpD,KAAb,EAAoB;AAClB,cAAImD,CAAC,IAAID,WAAT,EAAsB;AACpB,gBAAIG,OAAO,GAAGzB,MAAM,CAACgB,aAAD,CAAN,GAAwBhB,MAAM,CAACkB,kBAAD,CAA5C;AACA,gBAAIQ,GAAG,GAAG1B,MAAM,CAACZ,YAAD,CAAN,GAAuBY,MAAM,CAACmB,iBAAD,CAAvC;AACA,gBAAI9B,EAAE,GAAGW,MAAM,CAACoB,WAAD,CAAN,GAAsBpB,MAAM,CAACqB,gBAAD,CAArC;AACAxF,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,kBAAR,IAA8BqC,MAAM,CAACyB,OAAD,CAAN,CAAgBvB,OAAhB,CAAwB,CAAxB,CAA9B;AACArE,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,cAAR,IAA0BqC,MAAM,CAAC0B,GAAD,CAAN,CAAYxB,OAAZ,CAAoB,CAApB,CAA1B;AACArE,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBqC,MAAM,CAACX,EAAD,CAAN,CAAWa,OAAX,CAAmB,CAAnB,CAAhB;AACArE,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,gBAAR,IAA4B,KAA5B;AACA,kBAAM,KAAKtB,QAAL,CAAc;AAAER,cAAAA;AAAF,aAAd,CAAN;AACD,WATD,MASO;AACLA,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,kBAAR,IAA8BqD,aAA9B;AACAnF,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,cAAR,IAA0ByB,YAA1B;AACAvD,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgByD,WAAhB;AACAvF,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,gBAAR,IAA4B,KAA5B;AACA,kBAAM,KAAKtB,QAAL,CAAc;AAAER,cAAAA;AAAF,aAAd,CAAN;AACD;;AACD0F,UAAAA,CAAC;AACF;;AACD5D,QAAAA,CAAC;AACF;;AACDhD,MAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,qBAAjB,IAA0C,KAA1C;AACA,YAAM,KAAKlB,QAAL,CAAc;AAClB1B,QAAAA;AADkB,OAAd,CAAN;AAGD,KAzlBqD;;AAAA,SA0lBtDoE,mBA1lBsD,GA0lBhC,MAAMxB,KAAN,IAAe;AACnC,UAAI;AAAE5C,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AAEA,UAAIiH,cAAc,GAAG,CAArB;;AACA,WAAK,IAAIhB,IAAT,IAAiBhG,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAlC,EAAwC;AACtC,YAAI8E,IAAI,CAACpC,IAAT,EAAe;AACboD,UAAAA,cAAc,IAAI,CAAlB;AACD;AACF;;AAED,UAAIC,YAAY,GAAG5B,MAAM,CAAC,MAAM2B,cAAP,CAAN,CAA6BzB,OAA7B,CAAqC,CAArC,CAAnB;AACA,UAAI2B,SAAS,GAAGD,YAAY,GAAGD,cAA/B;AACA,UAAIG,iBAAiB,GAAG9B,MAAM,CAAC,MAAM6B,SAAP,CAAN,CAAwB3B,OAAxB,CAAgC,CAAhC,CAAxB;AACA,UAAIX,WAAW,GAAG,EAAlB;AACA,UAAIwC,gBAAgB,GAAG,EAAvB;;AACA,UACEpH,SAAS,CAAC4C,KAAD,CAAT,CAAiBuC,GAAjB,IAAwB,GAAxB,IACAnF,SAAS,CAAC4C,KAAD,CAAT,CAAiBH,IAAjB,CAAsBF,WAAtB,MAAuC,SAFzC,EAGE;AACAqC,QAAAA,WAAW,GAAGS,MAAM,CAClBrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,IAAkCoE,cADhB,CAAN,CAEZzB,OAFY,CAEJ,CAFI,CAAd;AAGA6B,QAAAA,gBAAgB,GAAG/B,MAAM,CACvBrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,IAAkCgC,WAAW,GAAGoC,cADzB,CAAN,CAEjBzB,OAFiB,CAET,CAFS,CAAnB;AAGD,OAVD,MAUO;AACLX,QAAAA,WAAW,GAAGS,MAAM,CAClBrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,IAAgCoE,cADd,CAAN,CAEZzB,OAFY,CAEJ,CAFI,CAAd;AAGA6B,QAAAA,gBAAgB,GAAG/B,MAAM,CACvBrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,IAAgCgC,WAAW,GAAGoC,cADvB,CAAN,CAEjBzB,OAFiB,CAET,CAFS,CAAnB;AAGD;;AACD,UAAI8B,UAAU,GAAGhC,MAAM,CACrBrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,YAAjB,IAAiCoE,cADZ,CAAN,CAEfzB,OAFe,CAEP,CAFO,CAAjB;AAGA,UAAI+B,eAAe,GAAGjC,MAAM,CAC1BrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,YAAjB,IAAiCyE,UAAU,GAAGL,cADpB,CAAN,CAEpBzB,OAFoB,CAEZ,CAFY,CAAtB;AAGA,UAAIrE,IAAI,GAAGlB,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAA5B;AACA,UAAI8B,CAAC,GAAG,CAAR;AACA,UAAI4D,CAAC,GAAG,CAAR;AACA,UAAIW,UAAU,GAAGrG,IAAI,CAACqC,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACI,IAAJ,KAAa,IAAhC,EAAsCX,MAAvD;;AACA,WAAK,IAAI+C,IAAT,IAAiBhG,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAlC,EAAwC;AACtC,YAAI8E,IAAI,CAACpC,IAAT,EAAe;AACb,cAAIgD,CAAC,IAAIW,UAAT,EAAqB;AACnB,gBAAIT,OAAO,GAAGzB,MAAM,CAAC4B,YAAD,CAAN,GAAuB5B,MAAM,CAAC8B,iBAAD,CAA3C;AACA,gBAAIJ,GAAG,GAAG1B,MAAM,CAACT,WAAD,CAAN,GAAsBS,MAAM,CAAC+B,gBAAD,CAAtC;AACA,gBAAIvC,EAAE,GAAGQ,MAAM,CAACgC,UAAD,CAAN,GAAqBhC,MAAM,CAACiC,eAAD,CAApC;AAEApG,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,iBAAR,IAA6BqC,MAAM,CAACyB,OAAD,CAAN,CAAgBvB,OAAhB,CAAwB,CAAxB,CAA7B;AAEArE,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,aAAR,IAAyBqC,MAAM,CAAC0B,GAAD,CAAN,CAAYxB,OAAZ,CAAoB,CAApB,CAAzB;AACArE,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,eAAR,IAA2B,KAA3B;AACA9B,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBqC,MAAM,CAACR,EAAD,CAAN,CAAWU,OAAX,CAAmB,CAAnB,CAAhB;AACA,kBAAM,KAAK7D,QAAL,CAAc;AAAER,cAAAA;AAAF,aAAd,CAAN;AACD,WAXD,MAWO;AACLA,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,iBAAR,IAA6BiE,YAA7B;AACA/F,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,aAAR,IAAyB4B,WAAzB;AACA1D,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,eAAR,IAA2B,KAA3B;AACA9B,YAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBqE,UAAhB;AACA,kBAAM,KAAK3F,QAAL,CAAc;AAAER,cAAAA;AAAF,aAAd,CAAN;AACD;;AACD0F,UAAAA,CAAC;AACF;;AACD5D,QAAAA,CAAC;AACF;;AACDhD,MAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,oBAAjB,IAAyC,KAAzC;AACA,YAAM,KAAKlB,QAAL,CAAc;AAClB1B,QAAAA;AADkB,OAAd,CAAN;AAGD,KAjqBqD;;AAAA,SAmqBtDwH,iBAnqBsD,GAmqBlC,OAAOtF,CAAP,EAAUC,MAAV,EAAkBC,MAAlB,KAA6B;AAC/C,UAAIlB,IAAI,GAAG,KAAKnB,KAAL,CAAWC,SAAX,CAAqBmC,MAArB,EAA6BjB,IAA7B,CAAkCkB,MAAlC,CAAX;AACA,UAAIqF,MAAM,GAAG,KAAK1H,KAAL,CAAWC,SAAX,CAAqBmC,MAArB,EAA6BH,EAA1C;AACA,UAAI0F,MAAM,GAAG,CAAb;AACA,UAAIC,MAAM,GAAG,CAAb;;AACA,UAAIzG,IAAI,CAAC4D,UAAL,IAAmB,IAAvB,EAA6B;AAC3B4C,QAAAA,MAAM,GAAG,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAGxG,IAAI,CAAC4D,UAAd;AACD;;AACD,UAAI5D,IAAI,CAAC6D,UAAL,IAAmB,IAAvB,EAA6B;AAC3B4C,QAAAA,MAAM,GAAG,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAGzG,IAAI,CAAC6D,UAAd;AACD;;AAED,UAAI6C,IAAI,GAAG;AACTnE,QAAAA,KAAK,EAAEvC,IAAI,CAACuC,KADH;AAETG,QAAAA,IAAI,EAAE1C,IAAI,CAAC0C,IAFF;AAGTiE,QAAAA,OAAO,EAAExC,MAAM,CAACoC,MAAD,CAHN;AAIT3C,QAAAA,UAAU,EAAEO,MAAM,CAACqC,MAAD,CAJT;AAKT3C,QAAAA,UAAU,EAAEM,MAAM,CAACsC,MAAD;AALT,OAAX;AAOApG,MAAAA,OAAO,CAACC,GAAR,CAAYoG,IAAZ,EAAkB,8BAAlB;;AACA,UAAIvC,MAAM,CAACsC,MAAD,CAAN,GAAiB,CAAjB,IAAsBtC,MAAM,CAACqC,MAAD,CAAN,GAAiB,CAA3C,EAA8C;AAC5C,cAAM,KAAKvG,KAAL,CACH5B,eADG,CACc,yBADd,EACwCqI,IADxC,EAEHxG,IAFG,CAEE0G,GAAG,IAAI;AACX,cAAI;AAAExG,YAAAA;AAAF,cAAawG,GAAjB;;AACA,cAAIxG,MAAM,IAAI,KAAd,EAAqB;AACnBC,YAAAA,OAAO,CAACC,GAAR,CAAYsG,GAAZ,EAAiB,oCAAjB;AACA,gBAAI;AAAE9H,cAAAA;AAAF,gBAAgB,KAAKD,KAAzB;AACAC,YAAAA,SAAS,CAACmC,MAAD,CAAT,CAAkBjB,IAAlB,CAAuB6G,MAAvB,CAA8B3F,MAA9B,EAAsC,CAAtC;AACA,iBAAKV,QAAL,CAAc;AAAE1B,cAAAA;AAAF,aAAd;;AACA,gBAAIkB,IAAI,CAACuC,KAAL,IAAcvC,IAAI,CAAC0C,IAAvB,EAA6B;AAC3B,mBAAKQ,mBAAL,CAAyBjC,MAAzB;AACA,mBAAKgC,oBAAL,CAA0BhC,MAA1B;AACD,aAHD,MAGO,IAAIjB,IAAI,CAACuC,KAAL,IAAc,CAACvC,IAAI,CAAC0C,IAAxB,EAA8B;AACnC,mBAAKO,oBAAL,CAA0BhC,MAA1B;AACD,aAFM,MAEA,IAAI,CAACjB,IAAI,CAACuC,KAAN,IAAevC,IAAI,CAAC0C,IAAxB,EAA8B;AACnC,mBAAKQ,mBAAL,CAAyBjC,MAAzB;AACD,aAZkB,CAanB;;AACD;AACF,SAnBG,CAAN;AAoBD,OArBD,MAqBO;AACL,YAAI;AAAEnC,UAAAA;AAAF,YAAgB,KAAKD,KAAzB;AACAC,QAAAA,SAAS,CAACmC,MAAD,CAAT,CAAkBjB,IAAlB,CAAuB6G,MAAvB,CAA8B3F,MAA9B,EAAsC,CAAtC;AACA,aAAKV,QAAL,CAAc;AAAE1B,UAAAA;AAAF,SAAd;;AACA,YAAIkB,IAAI,CAACuC,KAAL,IAAcvC,IAAI,CAAC0C,IAAvB,EAA6B;AAC3B,eAAKQ,mBAAL,CAAyBjC,MAAzB;AACA,eAAKgC,oBAAL,CAA0BhC,MAA1B;AACD,SAHD,MAGO,IAAIjB,IAAI,CAACuC,KAAL,IAAc,CAACvC,IAAI,CAAC0C,IAAxB,EAA8B;AACnC,eAAKO,oBAAL,CAA0BhC,MAA1B;AACD,SAFM,MAEA,IAAI,CAACjB,IAAI,CAACuC,KAAN,IAAevC,IAAI,CAAC0C,IAAxB,EAA8B;AACnC,eAAKQ,mBAAL,CAAyBjC,MAAzB;AACD;AACF;AACF,KA7tBqD;;AAAA,SA+tBtD6F,yBA/tBsD,GA+tB1B,OAAOpF,KAAP,EAAcR,MAAd,KAAyB;AACnD,UAAI;AAAEpC,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AAEA,UAAIiH,cAAc,GAAG,CAArB;;AACA,WAAK,IAAIhB,IAAT,IAAiBhG,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAlC,EAAwC;AACtC,YAAI8E,IAAI,CAACpC,IAAT,EAAe;AACboD,UAAAA,cAAc,IAAI,CAAlB;AACD;AACF;;AACD,UAAI3B,MAAM,CAACrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBkB,MAAtB,EAA8B,iBAA9B,CAAD,CAAN,IAA4D,GAAhE,EAAqE;AACnE,YAAI6F,oBAAoB,GAAG5C,MAAM,CAC/BrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBkB,MAAtB,EAA8B,iBAA9B,CAD+B,CAAN,CAEzBmD,OAFyB,CAEjB,CAFiB,CAA3B;AAGA,YAAI2C,mBAAmB,GAAG,CAA1B;AACA,YAAIC,kBAAkB,GAAG9C,MAAM,CAC5B4C,oBAAoB,GAAG,GAAxB,GAA+BjI,SAAS,CAAC4C,KAAD,CAAT,CAAiB,YAAjB,CADF,CAAN,CAEvB2C,OAFuB,CAEf,CAFe,CAAzB;AAIA,YAAI2B,SAAS,GAAG7B,MAAM,CACpBA,MAAM,CAAC,GAAD,CAAN,CAAYE,OAAZ,CAAoB,CAApB,IAAyBF,MAAM,CAAC4C,oBAAD,CAAN,CAA6B1C,OAA7B,CAAqC,CAArC,CADL,CAAN,CAEdA,OAFc,CAEN,CAFM,CAAhB;AAGA,YAAI0B,YAAY,GAAG5B,MAAM,CAAC6B,SAAS,IAAIF,cAAc,GAAG,CAArB,CAAV,CAAN,CAAyCzB,OAAzC,CAAiD,CAAjD,CAAnB;AAEA,YAAI4B,iBAAiB,GAAG9B,MAAM,CAC5B6B,SAAS,GAAGD,YAAY,IAAID,cAAc,GAAG,CAArB,CADI,CAAN,CAEtBzB,OAFsB,CAEd,CAFc,CAAxB;AAIA,YAAIX,WAAW,GAAG,CAAlB;AACA,YAAIwC,gBAAgB,GAAG,CAAvB;AACA,YAAIgB,eAAe,GAAG,CAAtB;AACA,YAAIC,cAAc,GAAGhD,MAAM,CACzBA,MAAM,CAACrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,YAAjB,CAAD,CAAN,CAAuC2C,OAAvC,CAA+C,CAA/C,IACEF,MAAM,CAAC8C,kBAAD,CAAN,CAA2B5C,OAA3B,CAAmC,CAAnC,CAFuB,CAAN,CAGnBA,OAHmB,CAGX,CAHW,CAArB;AAIA,YAAI8B,UAAU,GAAGhC,MAAM,CAACgD,cAAc,IAAIrB,cAAc,GAAG,CAArB,CAAf,CAAN,CAA8CzB,OAA9C,CAAsD,CAAtD,CAAjB;AACA,YAAI+B,eAAe,GAAGjC,MAAM,CAC1BgD,cAAc,GAAGhB,UAAU,IAAIL,cAAc,GAAG,CAArB,CADD,CAAN,CAEpBzB,OAFoB,CAEZ,CAFY,CAAtB;;AAIA,YACEvF,SAAS,CAAC4C,KAAD,CAAT,CAAiBuC,GAAjB,IAAwB,GAAxB,IACAnF,SAAS,CAAC4C,KAAD,CAAT,CAAiBH,IAAjB,CAAsBF,WAAtB,MAAuC,SAFzC,EAGE;AACA2F,UAAAA,mBAAmB,GAAG7C,MAAM,CACzB4C,oBAAoB,GAAG,GAAxB,GAA+BjI,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,CADL,CAAN,CAEpB2C,OAFoB,CAEZ,CAFY,CAAtB;AAIA6C,UAAAA,eAAe,GAAG/C,MAAM,CACtBA,MAAM,CAACrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,CAAD,CAAN,CAAwC2C,OAAxC,CAAgD,CAAhD,IACEF,MAAM,CAAC6C,mBAAD,CAAN,CAA4B3C,OAA5B,CAAoC,CAApC,CAFoB,CAAN,CAGhBA,OAHgB,CAGR,CAHQ,CAAlB;AAIAX,UAAAA,WAAW,GAAGS,MAAM,CAAC+C,eAAe,IAAIpB,cAAc,GAAG,CAArB,CAAhB,CAAN,CAA+CzB,OAA/C,CAAuD,CAAvD,CAAd;AACA6B,UAAAA,gBAAgB,GAAG/B,MAAM,CACvB+C,eAAe,GAAGxD,WAAW,IAAIoC,cAAc,GAAG,CAArB,CADN,CAAN,CAEjBzB,OAFiB,CAET,CAFS,CAAnB;AAGD,SAhBD,MAgBO;AACL2C,UAAAA,mBAAmB,GAAG7C,MAAM,CACzB4C,oBAAoB,GAAG,GAAxB,GAA+BjI,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,CADL,CAAN,CAEpB2C,OAFoB,CAEZ,CAFY,CAAtB;AAIA6C,UAAAA,eAAe,GAAG/C,MAAM,CACtBA,MAAM,CAACrF,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,CAAD,CAAN,CAAsC2C,OAAtC,CAA8C,CAA9C,IACEF,MAAM,CAAC6C,mBAAD,CAAN,CAA4B3C,OAA5B,CAAoC,CAApC,CAFoB,CAAN,CAGhBA,OAHgB,CAGR,CAHQ,CAAlB;AAIAX,UAAAA,WAAW,GAAGS,MAAM,CAAC+C,eAAe,IAAIpB,cAAc,GAAG,CAArB,CAAhB,CAAN,CAA+CzB,OAA/C,CAAuD,CAAvD,CAAd;AACA6B,UAAAA,gBAAgB,GAAG/B,MAAM,CACvB+C,eAAe,GAAGxD,WAAW,IAAIoC,cAAc,GAAG,CAArB,CADN,CAAN,CAEjBzB,OAFiB,CAET,CAFS,CAAnB;AAGD;;AAED,YAAIrE,IAAI,GAAGlB,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAA5B;AAEAlB,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBkB,MAAtB,EAA8B,iBAA9B,IACEiD,MAAM,CAAC4C,oBAAD,CAAN,CAA6B1C,OAA7B,CAAqC,CAArC,CADF;AAEAvF,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBkB,MAAtB,EAA8B,aAA9B,IACEiD,MAAM,CAAC6C,mBAAD,CAAN,CAA4B3C,OAA5B,CAAoC,CAApC,CADF;AAEAvF,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBkB,MAAtB,EAA8B,IAA9B,IACEiD,MAAM,CAAC8C,kBAAD,CAAN,CAA2B5C,OAA3B,CAAmC,CAAnC,CADF;AAEA,cAAM,KAAK7D,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd,CAAN;AAEA,YAAIqG,UAAU,GAAGrG,IAAI,CAACqC,MAAL,CACfC,GAAG,IACDA,GAAG,CAACI,IAAJ,KAAa,IAAb,IACAJ,GAAG,CAACc,KAAJ,KAActE,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBkB,MAAtB,EAA8B,OAA9B,CAHD,EAIfa,MAJF;AAKA,YAAIqF,QAAQ,GAAGpH,IAAI,CAACqC,MAAL,CACbC,GAAG,IACDA,GAAG,CAACI,IAAJ,KAAa,IAAb,IACAJ,GAAG,CAACc,KAAJ,KAActE,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBkB,MAAtB,EAA8B,OAA9B,CAHH,CAAf;;AAKA,YAAIkG,QAAJ,EAAc;AACZ,cAAItF,CAAC,GAAG,CAAR;AACA,cAAI4D,CAAC,GAAG,CAAR;;AAEA,eAAK,IAAIZ,IAAT,IAAiBhG,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAlC,EAAwC;AACtC,gBAAI8E,IAAI,CAACpC,IAAT,EAAe;AACb,kBAAI5D,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBkB,MAAtB,EAA8B,OAA9B,MAA2C4D,IAAI,CAAC1B,KAApD,EAA2D;AACzDpD,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,iBAAR,IAA6BiF,oBAA7B;AACA/G,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,aAAR,IAAyBkF,mBAAzB;AACAhH,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBmF,kBAAhB;AACA,sBAAM,KAAKzG,QAAL,CAAc;AAAER,kBAAAA;AAAF,iBAAd,CAAN;AACD,eALD,MAKO;AACL,oBAAI0F,CAAC,IAAIW,UAAT,EAAqB;AACnB,sBAAIT,OAAO,GAAGzB,MAAM,CAAC4B,YAAD,CAAN,GAAuB5B,MAAM,CAAC8B,iBAAD,CAA3C;AACA,sBAAIJ,GAAG,GAAG1B,MAAM,CAACT,WAAD,CAAN,GAAsBS,MAAM,CAAC+B,gBAAD,CAAtC;AACA,sBAAIvC,EAAE,GAAGQ,MAAM,CAACgC,UAAD,CAAN,GAAqBhC,MAAM,CAACiC,eAAD,CAApC;AAEApG,kBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,iBAAR,IAA6BqC,MAAM,CAACyB,OAAD,CAAN,CAAgBvB,OAAhB,CAAwB,CAAxB,CAA7B;AAEArE,kBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,aAAR,IAAyBqC,MAAM,CAAC0B,GAAD,CAAN,CAAYxB,OAAZ,CAAoB,CAApB,CAAzB;AAEArE,kBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBqC,MAAM,CAACR,EAAD,CAAN,CAAWU,OAAX,CAAmB,CAAnB,CAAhB;AACA,wBAAM,KAAK7D,QAAL,CAAc;AAAER,oBAAAA;AAAF,mBAAd,CAAN;AACD,iBAXD,MAWO;AACLA,kBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,iBAAR,IAA6BiE,YAA7B;AACA/F,kBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,aAAR,IAAyB4B,WAAzB;AACA1D,kBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBqE,UAAhB;AACA,wBAAM,KAAK3F,QAAL,CAAc;AAAER,oBAAAA;AAAF,mBAAd,CAAN;AACD;;AACD0F,gBAAAA,CAAC;AACF;AACF;;AACD5D,YAAAA,CAAC;AACF;AACF;AACF,OApHD,MAoHO;AACLtD,QAAAA,KAAK,CAAC;AACJ+C,UAAAA,IAAI,EAAE,OADF;AAEJC,UAAAA,OAAO,EAAE;AAFL,SAAD,CAAL;AAID;AACF,KAl2BqD;;AAAA,SAo2BtD6F,2BAp2BsD,GAo2BxB,OAAOrG,CAAP,EAAUU,KAAV,EAAiBT,MAAjB,KAA4B;AACxD,UAAI;AAAEnC,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AACA,UAAImB,IAAI,GAAGlB,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBiB,MAAtB,CAAX;AAEAjB,MAAAA,IAAI,CAAC,gBAAD,CAAJ,GAAyBgB,CAAC,CAACG,MAAF,CAASG,KAAlC;AACA,YAAM,KAAKd,QAAL,CAAc;AAClBR,QAAAA;AADkB,OAAd,CAAN;AAGA,UAAIoC,iBAAiB,GAAGtD,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBqC,MAAtB,CACtBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,IAAd,IAAsBD,GAAG,CAACE,cAAJ,IAAsB,IAD7B,EAEtBT,MAFF;;AAGA,UAAIK,iBAAiB,GAAG,CAAxB,EAA2B;AACzBtD,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,qBAAjB,IAA0C,IAA1C;AACA,cAAM,KAAKlB,QAAL,CAAc;AAAE1B,UAAAA;AAAF,SAAd,CAAN;AACD,OAHD,MAGO;AACLA,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,qBAAjB,IAA0C,KAA1C;AACA,cAAM,KAAKlB,QAAL,CAAc;AAAE1B,UAAAA;AAAF,SAAd,CAAN;AACD;AACF,KAt3BqD;;AAAA,SAw3BtDwI,0BAx3BsD,GAw3BzB,OAAOtG,CAAP,EAAUU,KAAV,EAAiBT,MAAjB,KAA4B;AACvD,UAAI;AAAEnC,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AACA,UAAImB,IAAI,GAAGlB,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBiB,MAAtB,CAAX;AAEAjB,MAAAA,IAAI,CAAC,eAAD,CAAJ,GAAwBgB,CAAC,CAACG,MAAF,CAASG,KAAjC;AACA,YAAM,KAAKd,QAAL,CAAc;AAClBR,QAAAA;AADkB,OAAd,CAAN;AAGA,UAAIyC,gBAAgB,GAAG3D,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBqC,MAAtB,CACrBC,GAAG,IAAIA,GAAG,CAACI,IAAJ,KAAa,IAAb,IAAqBJ,GAAG,CAACK,aAAJ,IAAqB,IAD5B,EAErBZ,MAFF;;AAGA,UAAIU,gBAAgB,GAAG,CAAvB,EAA0B;AACxB3D,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,oBAAjB,IAAyC,IAAzC;AACA,cAAM,KAAKlB,QAAL,CAAc;AAAE1B,UAAAA;AAAF,SAAd,CAAN;AACD,OAHD,MAGO;AACLA,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,oBAAjB,IAAyC,KAAzC;AACA,cAAM,KAAKlB,QAAL,CAAc;AAAE1B,UAAAA;AAAF,SAAd,CAAN;AACD;AACF,KA14BqD;;AAAA,SA24BtDyI,4BA34BsD,GA24BvB,MAAM7F,KAAN,IAAe;AAC5C,UAAI;AAAE5C,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AAEA,UAAIqG,eAAe,GAAG,CAAtB;;AACA,WAAK,IAAIJ,IAAT,IAAiBhG,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAlC,EAAwC;AACtC,YAAI8E,IAAI,CAACvC,KAAT,EAAgB;AACd2C,UAAAA,eAAe,IAAI,CAAnB;AACD;AACF;;AACD,UAAIlF,IAAI,GAAGlB,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAA5B;AACA,UAAIwH,kBAAkB,GAAGxH,IAAI,CAACqC,MAAL,CACvBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,IAAd,IAAsBD,GAAG,CAACE,cAAJ,IAAsB,IAD5B,CAAzB;AAGA,UAAIiF,wBAAwB,GAAG,CAA/B;;AACA,UAAID,kBAAJ,EAAwB;AACtB,aAAK,IAAIE,WAAT,IAAwBF,kBAAxB,EAA4C;AAC1C,cAAIE,WAAW,CAACnF,KAAhB,EAAuB;AACrBkF,YAAAA,wBAAwB,IAAItD,MAAM,CAACuD,WAAW,CAACpE,gBAAb,CAAlC;AACD;AACF;AACF;;AACD,UAAIkE,kBAAkB,IAAIC,wBAAwB,GAAG,GAArD,EAA0D;AACxDjJ,QAAAA,KAAK,CAAC;AACJ+C,UAAAA,IAAI,EAAE,OADF;AAEJC,UAAAA,OAAO,EAAE;AAFL,SAAD,CAAL;AAID,OALD,MAKO;AACL,YAAIY,iBAAiB,GAAGpC,IAAI,CAACqC,MAAL,CACtBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,IAAd,IAAsBD,GAAG,CAACE,cAAJ,IAAsB,IAD7B,EAEtBT,MAFF;AAGA,YAAI4F,qBAAqB,GAAGxD,MAAM,CAChC,MAAMsD,wBAD0B,CAAN,CAE1BpD,OAF0B,CAElB,CAFkB,CAA5B;AAGA,YAAIuD,oBAAoB,GAAGzD,MAAM,CAC9BwD,qBAAqB,GAAG,GAAzB,GAAgC7I,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,CADD,CAAN,CAEzB2C,OAFyB,CAEjB,CAFiB,CAA3B;AAGA,YAAIwD,mBAAmB,GAAG1D,MAAM,CAC7BwD,qBAAqB,GAAG,GAAzB,GAAgC7I,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,CADF,CAAN,CAExB2C,OAFwB,CAEhB,CAFgB,CAA1B;AAIA,YAAIc,aAAa,GAAGhB,MAAM,CACxBwD,qBAAqB,IAAIzC,eAAe,GAAG9C,iBAAtB,CADG,CAAN,CAElBiC,OAFkB,CAEV,CAFU,CAApB;AAIA,YAAIgB,kBAAkB,GAAGlB,MAAM,CAC7BwD,qBAAqB,GACnBxC,aAAa,IAAID,eAAe,GAAG9C,iBAAtB,CAFc,CAAN,CAGvBiC,OAHuB,CAGf,CAHe,CAAzB;AAKA,YAAId,YAAY,GAAGY,MAAM,CACvByD,oBAAoB,IAAI1C,eAAe,GAAG9C,iBAAtB,CADG,CAAN,CAEjBiC,OAFiB,CAET,CAFS,CAAnB;AAGA,YAAIiB,iBAAiB,GAAGnB,MAAM,CAC5ByD,oBAAoB,GAClBrE,YAAY,IAAI2B,eAAe,GAAG9C,iBAAtB,CAFc,CAAN,CAGtBiC,OAHsB,CAGd,CAHc,CAAxB;AAKA,YAAIkB,WAAW,GAAGpB,MAAM,CACtB0D,mBAAmB,IAAI3C,eAAe,GAAG9C,iBAAtB,CADG,CAAN,CAEhBiC,OAFgB,CAER,CAFQ,CAAlB;AAGA,YAAImB,gBAAgB,GAAGrB,MAAM,CAC3B0D,mBAAmB,GACjBtC,WAAW,IAAIL,eAAe,GAAG9C,iBAAtB,CAFc,CAAN,CAGrBiC,OAHqB,CAGb,CAHa,CAAvB;AAKA,YAAIvC,CAAC,GAAG,CAAR;AACA,YAAI4D,CAAC,GAAG,CAAR;;AACA,aAAK,IAAIC,QAAT,IAAqB7G,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAtC,EAA4C;AAC1C,cAAI2F,QAAQ,CAACpD,KAAb,EAAoB;AAClB,gBAAIoD,QAAQ,CAACnD,cAAb,EAA6B;AAC3B,kBAAIsF,iBAAiB,GAAG3D,MAAM,CAACwB,QAAQ,CAACrC,gBAAV,CAAN,CAAkCe,OAAlC,CACtB,CADsB,CAAxB;AAGA,kBAAI0D,gBAAgB,GAAG5D,MAAM,CAC1B2D,iBAAiB,GAAG,GAArB,GAA4BhJ,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,CADD,CAAN,CAErB2C,OAFqB,CAEb,CAFa,CAAvB;AAGA,kBAAI2D,eAAe,GAAG7D,MAAM,CACzB2D,iBAAiB,GAAG,GAArB,GAA4BhJ,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,CADF,CAAN,CAEpB2C,OAFoB,CAEZ,CAFY,CAAtB;AAIArE,cAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,kBAAR,IAA8BgG,iBAA9B;AACA9H,cAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,cAAR,IAA0BiG,gBAA1B;AACA/H,cAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBkG,eAAhB;AACAhI,cAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,gBAAR,IAA4B,KAA5B;AACA,oBAAM,KAAKtB,QAAL,CAAc;AAAER,gBAAAA;AAAF,eAAd,CAAN;AACD,aAhBD,MAgBO;AACL,kBAAI0F,CAAC,IAAItD,iBAAT,EAA4B;AAC1B,oBAAIwD,OAAO,GAAGzB,MAAM,CAACgB,aAAD,CAAN,GAAwBhB,MAAM,CAACkB,kBAAD,CAA5C;AACA,oBAAIQ,GAAG,GAAG1B,MAAM,CAACZ,YAAD,CAAN,GAAuBY,MAAM,CAACmB,iBAAD,CAAvC;AACA,oBAAI9B,EAAE,GAAGW,MAAM,CAACoB,WAAD,CAAN,GAAsBpB,MAAM,CAACqB,gBAAD,CAArC;AACAxF,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,kBAAR,IAA8BqC,MAAM,CAACyB,OAAD,CAAN,CAAgBvB,OAAhB,CAAwB,CAAxB,CAA9B;AACArE,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,cAAR,IAA0BqC,MAAM,CAAC0B,GAAD,CAAN,CAAYxB,OAAZ,CAAoB,CAApB,CAA1B;AACArE,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBqC,MAAM,CAACX,EAAD,CAAN,CAAWa,OAAX,CAAmB,CAAnB,CAAhB;AACArE,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,gBAAR,IAA4B,KAA5B;AACA,sBAAM,KAAKtB,QAAL,CAAc;AAAER,kBAAAA;AAAF,iBAAd,CAAN;AACD,eATD,MASO;AACLA,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,kBAAR,IAA8BqD,aAA9B;AACAnF,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,cAAR,IAA0ByB,YAA1B;AACAvD,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgByD,WAAhB;AACAvF,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,gBAAR,IAA4B,KAA5B;AACA,sBAAM,KAAKtB,QAAL,CAAc;AAAER,kBAAAA;AAAF,iBAAd,CAAN;AACD;;AACD0F,cAAAA,CAAC;AACF;AACF;;AACD5D,UAAAA,CAAC;AACF;;AACDhD,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,qBAAjB,IAA0C,KAA1C;AACA,cAAM,KAAKlB,QAAL,CAAc;AAClB1B,UAAAA;AADkB,SAAd,CAAN;AAGD;AACF,KA3/BqD;;AAAA,SA6/BtDmJ,2BA7/BsD,GA6/BxB,MAAMvG,KAAN,IAAe;AAC3C,UAAI;AAAE5C,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AAEA,UAAIqJ,cAAc,GAAG,CAArB;;AACA,WAAK,IAAIpD,IAAT,IAAiBhG,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAlC,EAAwC;AACtC,YAAI8E,IAAI,CAACpC,IAAT,EAAe;AACbwF,UAAAA,cAAc,IAAI,CAAlB;AACD;AACF;;AACD,UAAIlI,IAAI,GAAGlB,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAA5B;AACA,UAAImI,iBAAiB,GAAGnI,IAAI,CAACqC,MAAL,CACtBC,GAAG,IAAIA,GAAG,CAACI,IAAJ,KAAa,IAAb,IAAqBJ,GAAG,CAACK,aAAJ,IAAqB,IAD3B,CAAxB;AAGA,UAAIyF,uBAAuB,GAAG,CAA9B;;AACA,UAAID,iBAAJ,EAAuB;AACrB,aAAK,IAAIT,WAAT,IAAwBS,iBAAxB,EAA2C;AACzC,cAAIT,WAAW,CAAChF,IAAhB,EAAsB;AACpB0F,YAAAA,uBAAuB,IAAIjE,MAAM,CAACuD,WAAW,CAACjE,eAAb,CAAjC;AACD;AACF;AACF;;AACD,UAAI0E,iBAAiB,IAAIC,uBAAuB,GAAG,GAAnD,EAAwD;AACtD5J,QAAAA,KAAK,CAAC;AACJ+C,UAAAA,IAAI,EAAE,OADF;AAEJC,UAAAA,OAAO,EAAE;AAFL,SAAD,CAAL;AAID,OALD,MAKO;AACL,YAAIiB,gBAAgB,GAAGzC,IAAI,CAACqC,MAAL,CACrBC,GAAG,IAAIA,GAAG,CAACI,IAAJ,KAAa,IAAb,IAAqBJ,GAAG,CAACK,aAAJ,IAAqB,IAD5B,EAErBZ,MAFF;AAGA,YAAIgF,oBAAoB,GAAG5C,MAAM,CAAC,MAAMiE,uBAAP,CAAN,CAAsC/D,OAAtC,CACzB,CADyB,CAA3B;AAGA,YAAI2C,mBAAmB,GAAG,CAA1B;;AACA,YACElI,SAAS,CAAC4C,KAAD,CAAT,CAAiBuC,GAAjB,IAAwB,GAAxB,IACAnF,SAAS,CAAC4C,KAAD,CAAT,CAAiBH,IAAjB,CAAsBF,WAAtB,MAAuC,SAFzC,EAGE;AACA2F,UAAAA,mBAAmB,GAAG7C,MAAM,CACzB4C,oBAAoB,GAAG,GAAxB,GAA+BjI,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,CADL,CAAN,CAEpB2C,OAFoB,CAEZ,CAFY,CAAtB;AAGD,SAPD,MAOO;AACL2C,UAAAA,mBAAmB,GAAG7C,MAAM,CACzB4C,oBAAoB,GAAG,GAAxB,GAA+BjI,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,CADL,CAAN,CAEpB2C,OAFoB,CAEZ,CAFY,CAAtB;AAGD;;AACD,YAAI4C,kBAAkB,GAAG9C,MAAM,CAC5B4C,oBAAoB,GAAG,GAAxB,GAA+BjI,SAAS,CAAC4C,KAAD,CAAT,CAAiB,YAAjB,CADF,CAAN,CAEvB2C,OAFuB,CAEf,CAFe,CAAzB;AAIA,YAAI0B,YAAY,GAAG5B,MAAM,CACvB4C,oBAAoB,IAAImB,cAAc,GAAGzF,gBAArB,CADG,CAAN,CAEjB4B,OAFiB,CAET,CAFS,CAAnB;AAIA,YAAI4B,iBAAiB,GAAG9B,MAAM,CAC5B4C,oBAAoB,GAClBhB,YAAY,IAAImC,cAAc,GAAGzF,gBAArB,CAFc,CAAN,CAGtB4B,OAHsB,CAGd,CAHc,CAAxB;AAKA,YAAIX,WAAW,GAAGS,MAAM,CACtB6C,mBAAmB,IAAIkB,cAAc,GAAGzF,gBAArB,CADG,CAAN,CAEhB4B,OAFgB,CAER,CAFQ,CAAlB;AAGA,YAAI6B,gBAAgB,GAAG/B,MAAM,CAC3B6C,mBAAmB,GAAGtD,WAAW,IAAIwE,cAAc,GAAGzF,gBAArB,CADN,CAAN,CAErB4B,OAFqB,CAEb,CAFa,CAAvB;AAIA,YAAI8B,UAAU,GAAGhC,MAAM,CACrB8C,kBAAkB,IAAIiB,cAAc,GAAGzF,gBAArB,CADG,CAAN,CAEf4B,OAFe,CAEP,CAFO,CAAjB;AAGA,YAAI+B,eAAe,GAAGjC,MAAM,CAC1B8C,kBAAkB,GAAGd,UAAU,IAAI+B,cAAc,GAAGzF,gBAArB,CADL,CAAN,CAEpB4B,OAFoB,CAEZ,CAFY,CAAtB;AAIA,YAAIvC,CAAC,GAAG,CAAR;AACA,YAAI4D,CAAC,GAAG,CAAR;;AACA,aAAK,IAAIC,QAAT,IAAqB7G,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAtC,EAA4C;AAC1C,cAAI2F,QAAQ,CAACjD,IAAb,EAAmB;AACjB,gBAAIiD,QAAQ,CAAChD,aAAb,EAA4B;AAC1B,kBAAI0F,gBAAgB,GAAGlE,MAAM,CAACwB,QAAQ,CAAClC,eAAV,CAAN,CAAiCY,OAAjC,CAAyC,CAAzC,CAAvB;AACA,kBAAIiE,eAAe,GAAG,CAAtB;;AACA,kBACExJ,SAAS,CAAC4C,KAAD,CAAT,CAAiBuC,GAAjB,IAAwB,GAAxB,IACAnF,SAAS,CAAC4C,KAAD,CAAT,CAAiBH,IAAjB,CAAsBF,WAAtB,MAAuC,SAFzC,EAGE;AACAiH,gBAAAA,eAAe,GAAGnE,MAAM,CACrBkE,gBAAgB,GAAG,GAApB,GAA2BvJ,SAAS,CAAC4C,KAAD,CAAT,CAAiB,aAAjB,CADL,CAAN,CAEhB2C,OAFgB,CAER,CAFQ,CAAlB;AAGD,eAPD,MAOO;AACLiE,gBAAAA,eAAe,GAAGnE,MAAM,CACrBkE,gBAAgB,GAAG,GAApB,GAA2BvJ,SAAS,CAAC4C,KAAD,CAAT,CAAiB,WAAjB,CADL,CAAN,CAEhB2C,OAFgB,CAER,CAFQ,CAAlB;AAGD;;AAED,kBAAIkE,eAAe,GAAGpE,MAAM,CACzBkE,gBAAgB,GAAG,GAApB,GAA2BvJ,SAAS,CAAC4C,KAAD,CAAT,CAAiB,YAAjB,CADD,CAAN,CAEpB2C,OAFoB,CAEZ,CAFY,CAAtB;AAIArE,cAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,iBAAR,IAA6BuG,gBAA7B;AACArI,cAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,aAAR,IAAyBwG,eAAzB;AACAtI,cAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgByG,eAAhB;AACAvI,cAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,eAAR,IAA2B,KAA3B;AACA,oBAAM,KAAKtB,QAAL,CAAc;AAAER,gBAAAA;AAAF,eAAd,CAAN;AACD,aAzBD,MAyBO;AACL,kBAAI0F,CAAC,IAAIjD,gBAAT,EAA2B;AACzB,oBAAImD,OAAO,GAAGzB,MAAM,CAAC4B,YAAD,CAAN,GAAuB5B,MAAM,CAAC8B,iBAAD,CAA3C;AACA,oBAAIJ,GAAG,GAAG1B,MAAM,CAACT,WAAD,CAAN,GAAsBS,MAAM,CAAC+B,gBAAD,CAAtC;AACA,oBAAIvC,EAAE,GAAGQ,MAAM,CAACgC,UAAD,CAAN,GAAqBhC,MAAM,CAACiC,eAAD,CAApC;AACApG,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,iBAAR,IAA6BqC,MAAM,CAACyB,OAAD,CAAN,CAAgBvB,OAAhB,CAAwB,CAAxB,CAA7B;AACArE,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,aAAR,IAAyBqC,MAAM,CAAC0B,GAAD,CAAN,CAAYxB,OAAZ,CAAoB,CAApB,CAAzB;AACArE,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBqC,MAAM,CAACR,EAAD,CAAN,CAAWU,OAAX,CAAmB,CAAnB,CAAhB;AACArE,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,eAAR,IAA2B,KAA3B;AACA,sBAAM,KAAKtB,QAAL,CAAc;AAAER,kBAAAA;AAAF,iBAAd,CAAN;AACD,eATD,MASO;AACLA,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,iBAAR,IAA6BiE,YAA7B;AACA/F,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,aAAR,IAAyB4B,WAAzB;AACA1D,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,IAAR,IAAgBqE,UAAhB;AACAnG,gBAAAA,IAAI,CAAC8B,CAAD,CAAJ,CAAQ,eAAR,IAA2B,KAA3B;AACA,sBAAM,KAAKtB,QAAL,CAAc;AAAER,kBAAAA;AAAF,iBAAd,CAAN;AACD;;AACD0F,cAAAA,CAAC;AACF;AACF;;AACD5D,UAAAA,CAAC;AACF;;AACDhD,QAAAA,SAAS,CAAC4C,KAAD,CAAT,CAAiB,oBAAjB,IAAyC,KAAzC;AACA,cAAM,KAAKlB,QAAL,CAAc;AAClB1B,UAAAA;AADkB,SAAd,CAAN;AAGD;AACF,KA9nCqD;;AAAA,SAgoCtD0J,uBAhoCsD,GAgoC5B,YAAY;AACpC,YAAM,KAAKhI,QAAL,CAAc;AAClB;AACAjB,QAAAA,oBAAoB,EAAE,CAFJ;AAGlBL,QAAAA,SAAS,EAAE,EAHO;AAIlBG,QAAAA,IAAI,EAAE,EAJY;AAKlBD,QAAAA,IAAI,EAAE;AALY,OAAd,CAAN;AAOA,WAAKW,YAAL;AACA,WAAKS,QAAL,CAAc;AACZf,QAAAA,oBAAoB,EAAE;AADV,OAAd;AAGD,KA5oCqD;;AAAA,SA8oCtDgJ,yBA9oCsD,GA8oC1B,MAAMC,YAAN,IAAsB;AAChD,WAAKC,+BAAL;AACA,UAAI;AAAEpJ,QAAAA,oBAAF;AAAwBT,QAAAA;AAAxB,UAAsC,KAAKD,KAA/C;;AACA,UAAI;AACFC,QAAAA,SAAS,CAAC8J,OAAV,CAAkB,CAAC5H,CAAD,EAAI6H,SAAJ,KAAkB;AAClC,cAAIC,SAAS,GAAG9H,CAAC,CAAChB,IAAF,CAAO+C,IAAP,CAAYT,GAAG,IAAIA,GAAG,CAACU,MAAJ,KAAe0F,YAAY,CAAC5H,EAA/C,CAAhB;;AACA,cAAI,CAACgI,SAAL,EAAgB;AACd9H,YAAAA,CAAC,CAAChB,IAAF,CAAOmD,IAAP,CAAY;AACVT,cAAAA,IAAI,EAAEnD,oBAAoB,IAAI,CAAxB,GAA4B,IAA5B,GAAmC,KAD/B;AAEVgD,cAAAA,KAAK,EAAEhD,oBAAoB,IAAI,CAAxB,GAA4B,IAA5B,GAAmC,KAFhC;AAGV6D,cAAAA,KAAK,EAAEsF,YAAY,CAACrF,QAHV;AAIVL,cAAAA,MAAM,EAAE0F,YAAY,CAAC5H,EAJX;AAKVwC,cAAAA,gBAAgB,EAAE,CALR;AAMVC,cAAAA,YAAY,EAAE,CANJ;AAOVC,cAAAA,EAAE,EAAE,CAPM;AAQVC,cAAAA,eAAe,EAAE,CARP;AASVC,cAAAA,WAAW,EAAE,CATH;AAUVC,cAAAA,EAAE,EAAE,CAVM;AAWVC,cAAAA,UAAU,EAAE,IAXF;AAYVC,cAAAA,UAAU,EAAE;AAZF,aAAZ;AAcA,iBAAKrD,QAAL,CAAc;AAAE1B,cAAAA;AAAF,aAAd;AAEAS,YAAAA,oBAAoB,IAAI,CAAxB,GACI,KAAK2D,mBAAL,CAAyB2F,SAAzB,CADJ,GAEI,KAAK5F,oBAAL,CAA0B4F,SAA1B,CAFJ;AAIA,iBAAKrI,QAAL,CAAc;AACZvB,cAAAA,qBAAqB,EAAE,IADX;AAEZM,cAAAA,oBAAoB,EAAE;AAFV,aAAd;AAID;AACF,SA5BD;AA6BD,OA9BD,CA8BE,OAAOyB,CAAP,EAAU;AACVX,QAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ,EAAe,gBAAf;AACD;AACF,KAlrCqD;;AAAA,SAorCtD2H,+BAprCsD,GAorCpB,MAAM;AACtC,WAAKnI,QAAL,CAAcsD,SAAS,KAAK;AAC1BrE,QAAAA,oBAAoB,EAAE,CAACqE,SAAS,CAACrE;AADP,OAAL,CAAvB;AAGD,KAxrCqD;;AAAA,SA0rCtDsJ,+BA1rCsD,GA0rCpB,MAAM3F,KAAN,IAAe;AAC/C,UAAI;AAAEtE,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;;AACA,UAAI;AACF,YAAIC,SAAS,CAACiD,MAAV,GAAmB,CAAvB,EAA0B;AACxBjD,UAAAA,SAAS,CAAC8J,OAAV,CAAkB,CAAC5H,CAAD,EAAI6H,SAAJ,KAAkB;AAClC,gBAAIxG,MAAM,GAAGrB,CAAC,CAAChB,IAAF,CAAO+C,IAAP,CAAYT,GAAG,IAAIA,GAAG,CAACU,MAAJ,KAAeI,KAAK,CAACtC,EAAxC,CAAb;;AACA,gBAAIuB,MAAJ,EAAY;AACVrB,cAAAA,CAAC,CAAChB,IAAF,CAAO4I,OAAP,CAAe,CAACI,QAAD,EAAWtH,KAAX,KAAqB;AAClC;;AACA,oBAAI0B,KAAK,CAACtC,EAAN,KAAakI,QAAQ,CAAChG,MAA1B,EAAkC;AAChC,sBAAIuD,MAAM,GAAGvF,CAAC,CAACF,EAAf;AACA,sBAAI0F,MAAM,GAAG,CAAb;AACA,sBAAIC,MAAM,GAAG,CAAb;;AACA,sBAAIuC,QAAQ,CAACpF,UAAT,IAAuB,IAA3B,EAAiC;AAC/B4C,oBAAAA,MAAM,GAAG,CAAT;AACD,mBAFD,MAEO;AACLA,oBAAAA,MAAM,GAAGwC,QAAQ,CAACpF,UAAlB;AACD;;AACD,sBAAIoF,QAAQ,CAACnF,UAAT,IAAuB,IAA3B,EAAiC;AAC/B4C,oBAAAA,MAAM,GAAG,CAAT;AACD,mBAFD,MAEO;AACLA,oBAAAA,MAAM,GAAGuC,QAAQ,CAACnF,UAAlB;AACD;;AAED,sBAAI6C,IAAI,GAAG;AACTnE,oBAAAA,KAAK,EAAEyG,QAAQ,CAACzG,KADP;AAETG,oBAAAA,IAAI,EAAEsG,QAAQ,CAACtG,IAFN;AAGTiE,oBAAAA,OAAO,EAAExC,MAAM,CAACoC,MAAD,CAHN;AAIT3C,oBAAAA,UAAU,EAAEO,MAAM,CAACqC,MAAD,CAJT;AAKT3C,oBAAAA,UAAU,EAAEM,MAAM,CAACsC,MAAD;AALT,mBAAX;AAOApG,kBAAAA,OAAO,CAACC,GAAR,CAAYoG,IAAZ,EAAkB,8BAAlB;;AACA,sBAAIvC,MAAM,CAACsC,MAAD,CAAN,GAAiB,CAAjB,IAAsBtC,MAAM,CAACqC,MAAD,CAAN,GAAiB,CAA3C,EAA8C;AAC5C,yBAAKvG,KAAL,CACG5B,eADH,CACoB,yBADpB,EAC8CqI,IAD9C,EAEGxG,IAFH,CAEQ0G,GAAG,IAAI;AACX,0BAAI;AAAExG,wBAAAA;AAAF,0BAAawG,GAAjB;;AACA,0BAAIxG,MAAM,IAAI,KAAd,EAAqB;AACnBC,wBAAAA,OAAO,CAACC,GAAR,CAAYsG,GAAZ,EAAiB,oCAAjB;AACA,4BAAI;AAAE9H,0BAAAA;AAAF,4BAAgB,KAAKD,KAAzB;AACAC,wBAAAA,SAAS,CAAC+J,SAAD,CAAT,CAAqB7I,IAArB,CAA0B6G,MAA1B,CAAiCnF,KAAjC,EAAwC,CAAxC;AACA,6BAAKlB,QAAL,CAAc;AAAE1B,0BAAAA;AAAF,yBAAd;;AACA,4BAAIkK,QAAQ,CAACzG,KAAT,IAAkByG,QAAQ,CAACtG,IAA/B,EAAqC;AACnC,+BAAKQ,mBAAL,CAAyB2F,SAAzB;AACA,+BAAK5F,oBAAL,CAA0B4F,SAA1B;AACD,yBAHD,MAGO,IAAIG,QAAQ,CAACzG,KAAT,IAAkB,CAACyG,QAAQ,CAACtG,IAAhC,EAAsC;AAC3C,+BAAKO,oBAAL,CAA0B4F,SAA1B;AACD,yBAFM,MAEA,IAAI,CAACG,QAAQ,CAACzG,KAAV,IAAmByG,QAAQ,CAACtG,IAAhC,EAAsC;AAC3C,+BAAKQ,mBAAL,CAAyB2F,SAAzB;AACD;AACF;AACF,qBAlBH;AAmBD,mBApBD,MAoBO;AACL,wBAAI;AAAE/J,sBAAAA;AAAF,wBAAgB,KAAKD,KAAzB;AACAC,oBAAAA,SAAS,CAAC+J,SAAD,CAAT,CAAqB7I,IAArB,CAA0B6G,MAA1B,CAAiCnF,KAAjC,EAAwC,CAAxC;AACA,yBAAKlB,QAAL,CAAc;AAAE1B,sBAAAA;AAAF,qBAAd;;AAEA,wBAAIkK,QAAQ,CAACzG,KAAT,IAAkByG,QAAQ,CAACtG,IAA/B,EAAqC;AACnC,2BAAKQ,mBAAL,CAAyB2F,SAAzB;AACA,2BAAK5F,oBAAL,CAA0B4F,SAA1B;AACD,qBAHD,MAGO,IAAIG,QAAQ,CAACzG,KAAT,IAAkB,CAACyG,QAAQ,CAACtG,IAAhC,EAAsC;AAC3C,2BAAKO,oBAAL,CAA0B4F,SAA1B;AACD,qBAFM,MAEA,IAAI,CAACG,QAAQ,CAACzG,KAAV,IAAmByG,QAAQ,CAACtG,IAAhC,EAAsC;AAC3C,2BAAKQ,mBAAL,CAAyB2F,SAAzB;AACD;AACF;AACF;AACF,eA5DD;AA6DD;AACF,WAjED;AAkED;;AACD,aAAKI,+BAAL;AACD,OAtED,CAsEE,OAAOjI,CAAP,EAAU;AACVX,QAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ,EAAe,sBAAf;AACD;AACF,KArwCqD;;AAAA,SAuwCtDkI,4BAvwCsD,GAuwCvB,YAAY;AACzC,YAAM,KAAK1I,QAAL,CAAc;AAClB;AACAjB,QAAAA,oBAAoB,EAAE,CAFJ;AAGlBL,QAAAA,SAAS,EAAE,EAHO;AAIlBS,QAAAA,kBAAkB,EAAE,EAJF;AAKlBN,QAAAA,IAAI,EAAE,EALY;AAMlBD,QAAAA,IAAI,EAAE;AANY,OAAd,CAAN;AAQA,WAAK+J,oBAAL;AACA,WAAK3I,QAAL,CAAc;AACZd,QAAAA,0BAA0B,EAAE;AADhB,OAAd;AAGD,KApxCqD;;AAAA,SAqxCtDyJ,oBArxCsD,GAqxC/BnJ,IAAI,IAAI;AAC7B,UAAI;AAAEZ,QAAAA,IAAF;AAAQD,QAAAA,KAAR;AAAeI,QAAAA;AAAf,UAAwC,KAAKV,KAAjD;AACA,WAAKoB,KAAL,CACG7B,YADH,CAEK,4BAA2BmB,oBAAqB,SAAQH,IAAK,UAAS,GAAI,EAF/E,EAIGc,IAJH,CAIQ,MAAMC,GAAN,IAAa;AACjB,YAAI;AAAEC,UAAAA,MAAF;AAAUJ,UAAAA;AAAV,YAAmBG,GAAvB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiB,eAAjB;AACA,YAAI;AAAEjB,UAAAA;AAAF,YAAgB,KAAKL,KAAzB;AACA,YAAI;AAAEQ,UAAAA;AAAF,YAAW,KAAKR,KAApB;AACAK,QAAAA,SAAS,GAAG,EAAZ;AACAG,QAAAA,IAAI,GAAG,EAAP;AACAH,QAAAA,SAAS,GAAGc,IAAZ;AACA,cAAM,KAAKQ,QAAL,CAAc;AAClBtB,UAAAA;AADkB,SAAd,CAAN;AAGA,aAAKkK,kBAAL;AACD,OAhBH;AAiBD,KAxyCqD;;AAAA,SAyyCtDA,kBAzyCsD,GAyyCjC,MAAMpJ,IAAN,IAAc;AACjC,UAAI;AAAEZ,QAAAA,IAAF;AAAQD,QAAAA,KAAR;AAAeI,QAAAA;AAAf,UAAwC,KAAKV,KAAjD;AACA,UAAI;AAAEC,QAAAA,SAAF;AAAaI,QAAAA;AAAb,UAA2B,KAAKL,KAApC;AAEA,UAAI;AAAEc,QAAAA;AAAF,UAAyB,KAAKd,KAAlC;AAEA,UAAI;AAAEQ,QAAAA;AAAF,UAAW,KAAKR,KAApB;AACAQ,MAAAA,IAAI,GAAG,EAAP;;AAEA,UAAI;AACF,YAAIP,SAAS,CAACiD,MAAV,GAAmB,CAAvB,EAA0B;AACxB,cAAInC,QAAQ,GAAG,EAAf;AACAd,UAAAA,SAAS,CAAC8J,OAAV,CAAkB,CAAC5H,CAAD,EAAI6H,SAAJ,KAAkB;AAClC7H,YAAAA,CAAC,CAAChB,IAAF,CAAOqJ,GAAP,CAAW,CAACrJ,IAAD,EAAO0B,KAAP,KAAiB;AAC1B,kBAAI4H,cAAc,GAAGpK,SAAS,CAACU,QAA/B;AAEA,kBAAIyC,MAAM,GAAGiH,cAAc,CAACvG,IAAf,CAAoBT,GAAG,IAAIA,GAAG,CAACxB,EAAJ,KAAWd,IAAI,CAACgD,MAA3C,CAAb;;AACA,kBAAIX,MAAJ,EAAY;AACV,oBAAIzC,QAAQ,IAAIA,QAAQ,CAACmC,MAAT,GAAkB,CAAlC,EAAqC;AACnC,sBAAIwH,eAAe,GAAG3J,QAAQ,CAACmD,IAAT,CACpBT,GAAG,IAAIA,GAAG,CAACxB,EAAJ,KAAWuB,MAAM,CAACvB,EADL,CAAtB;;AAGA,sBAAI,CAACyI,eAAL,EAAsB;AACpB3J,oBAAAA,QAAQ,CAACuD,IAAT,CAAc;AACZrC,sBAAAA,EAAE,EAAEuB,MAAM,CAACvB,EADC;AAEZuC,sBAAAA,QAAQ,EAAEhB,MAAM,CAACgB,QAFL;AAGZmG,sBAAAA,OAAO,EAAEnH,MAAM,CAACmH;AAHJ,qBAAd;AAKD;AACF,iBAXD,MAWO;AACL5J,kBAAAA,QAAQ,CAACuD,IAAT,CAAc;AACZrC,oBAAAA,EAAE,EAAEuB,MAAM,CAACvB,EADC;AAEZuC,oBAAAA,QAAQ,EAAEhB,MAAM,CAACgB,QAFL;AAGZmG,oBAAAA,OAAO,EAAEnH,MAAM,CAACmH;AAHJ,mBAAd;AAKD;AACF;AACF,aAxBD;AAyBD,WA1BD,EAFwB,CA8BxB;AACA;AACA;AACA;AACA;AACA;;AACAnK,UAAAA,IAAI,GAAG,EAAP;AACAgB,UAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EAAkB,UAAlB;AACAM,UAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAiCC,QAAjC;AACA,gBAAM,KAAKY,QAAL,CAAc;AAClBb,YAAAA,kBADkB;AAElBN,YAAAA;AAFkB,WAAd,CAAN;AAID;AACF,OA7CD,CA6CE,OAAO2B,CAAP,EAAU;AACVX,QAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ,EAAe,0BAAf;AACD;AACF,KAl2CqD;;AAAA,SAo2CtDiI,+BAp2CsD,GAo2CpB,MAAM;AACtC,WAAKzI,QAAL,CAAcsD,SAAS,KAAK;AAC1BpE,QAAAA,0BAA0B,EAAE,CAACoE,SAAS,CAACpE;AADb,OAAL,CAAvB;AAGD,KAx2CqD;;AAAA,SA02CtD+J,uBA12CsD,GA02C5B,OAAOzI,CAAP,EAAUU,KAAV,EAAiBT,MAAjB,KAA4B;AACpD;AAEA,UAAI;AACF,YAAI;AAAEnC,UAAAA,SAAF;AAAae,UAAAA,kBAAb;AAAiCC,UAAAA;AAAjC,YACF,KAAKjB,KADP;AAEA,YAAI8G,QAAQ,GAAG7G,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsBiB,MAAtB,CAAf;AACA0E,QAAAA,QAAQ,CAAC,kBAAD,CAAR,GAA+B3E,CAAC,CAACG,MAAF,CAASG,KAAxC;AACAzB,QAAAA,kBAAkB,GAAG6B,KAArB;AACA5B,QAAAA,sBAAsB,GAAGmB,MAAzB;AACA,cAAM,KAAKT,QAAL,CAAc;AAClBmF,UAAAA,QADkB;AAElB9F,UAAAA,kBAFkB;AAGlBC,UAAAA;AAHkB,SAAd,CAAN;;AAKA,YAAI,CAAC,KAAK4J,WAAV,EAAuB;AACrB,eAAKA,WAAL,GAAmB/K,CAAC,CAACgL,QAAF,CAAW,YAAY;AACxC,iBAAKC,yBAAL;AACD,WAFkB,EAEhB,GAFgB,CAAnB;AAGD;;AACD,aAAKF,WAAL;AACD,OAlBD,CAkBE,OAAO1I,CAAP,EAAU;AACVX,QAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ,EAAe,2BAAf;AACD;AACF,KAl4CqD;;AAAA,SAo4CtD4I,yBAp4CsD,GAo4C1B,YAAY;AACtC,UAAI;AAAE9K,QAAAA,SAAF;AAAagB,QAAAA,sBAAb;AAAqCD,QAAAA;AAArC,UAA4D,KAAKhB,KAArE;AACA,UAAIgL,aAAa,GACf,KAAKhL,KAAL,CAAWC,SAAX,CAAqBe,kBAArB,EAAyCG,IAAzC,CAA8CF,sBAA9C,EACE,kBADF,CADF;AAIA,UAAIiI,gBAAgB,GAAG5D,MAAM,CAC1B0F,aAAa,GAAG,GAAjB,GAAwB/K,SAAS,CAACe,kBAAD,CAAT,CAA8B,WAA9B,CADG,CAAN,CAErBwE,OAFqB,CAEb,CAFa,CAAvB;AAGA,WAAKxF,KAAL,CAAWC,SAAX,CAAqBe,kBAArB,EAAyCG,IAAzC,CAA8CF,sBAA9C,EACE,cADF,IAEIiI,gBAFJ;AAGA,YAAM,KAAKvH,QAAL,CAAc;AAAE1B,QAAAA;AAAF,OAAd,CAAN;AACD,KAj5CqD;AAAA;;AA+KtDgL,EAAAA,iBAAiB,GAAG;AAClB,SAAKnJ,qBAAL;AACD;;AAkuCDoJ,EAAAA,MAAM,GAAG;AACP,QAAI;AACFjL,MAAAA,SADE;AAEFE,MAAAA,cAFE;AAGFE,MAAAA,SAHE;AAIFG,MAAAA,IAJE;AAKFG,MAAAA,SALE;AAMFC,MAAAA,oBANE;AAOFC,MAAAA,0BAPE;AAQFC,MAAAA;AARE,QASA,KAAKd,KATT;AAUA,QAAI;AAAEmL,MAAAA;AAAF,QAAQ,KAAK/J,KAAjB;AACA,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK+J,CAAC,CAAC,iBAAD,CAAN,MADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGlL,SAAS,IAAIA,SAAS,CAACiD,MAAV,GAAmB,CAAhC,gBACC,0CACG,CAAC,KAAK9B,KAAL,CAAWgK,eAAZ,gBACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE,IADX;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,OAAO,EAAE,KAAKzB,uBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAG,MADhB;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,KAAK,EAAC,cAJR;AAKE,MAAA,OAAO,EAAE,KAAKU,4BALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADD,GAgBG,IAjBN,CADD,GAoBG,IArBN,CAJF,EA2BGpK,SAAS,IAAIA,SAAS,CAACiD,MAAV,GAAmB,CAAhC,gBACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE,KADV;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKgD,YAAL,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GASG,IApCN,CADF,eAwCE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,MAAzB,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,KAArC,CAFF,eAGE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,YAAlC,CAHF,eAIE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,QAAlC,CAJF,eAKE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,SAAlC,CALF,eAME;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,QAAlC,CANF,eAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,SAAlC,CAPF,CAxCF,eAkDE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjG,SAAS,IACRA,SAAS,CAACiD,MAAV,GAAmB,CADpB,IAECjD,SAAS,CAACuK,GAAV,CAAc,CAACxG,IAAD,EAAOnB,KAAP,KAAiB;AAC7B,0BACE;AACE,QAAA,SAAS,EAAG,YACV,KAAKzB,KAAL,CAAWgK,eAAX,IACA,KAAKhK,KAAL,CAAWgK,eAAX,KAA+BpH,IAAI,CAAC/B,EADpC,GAEI,QAFJ,GAGI,EACL,IANH;AAOE,QAAA,GAAG,EAAEY,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE;AACE,QAAA,SAAS,EAAG,+CACVlC,SAAS,IAAIqD,IAAI,CAAC/B,EAAlB,GAAuB,gBAAvB,GAA0C,EAC3C,EAHH;AAIE,QAAA,OAAO,EAAE,MAAM,KAAKW,eAAL,CAAqBoB,IAAI,CAAC/B,EAA1B,EAA8BY,KAA9B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBmB,IAAI,CAACqH,QAA7B,CANF,eAOE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGrH,IAAI,CAACsH,QADR,CAPF,eAgBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCtH,IAAI,CAACuH,KAAtC,CAhBF,eAiBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCvH,IAAI,CAACwH,SAAtC,CAjBF,eAkBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGxH,IAAI,CAACyH,cADR,CAlBF,eAqBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCzH,IAAI,CAACuB,SAAtC,CArBF,eAsBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCvB,IAAI,CAAC0H,OAAtC,CAtBF,CATF,eAiCE;AACE,QAAA,SAAS,EAAC,4CADZ;AAEE,QAAA,EAAE,EAAE1H,IAAI,CAAC/B,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,KAAK,EAAE;AAAE0J,UAAAA,WAAW,EAAE;AAAf,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,oDAFZ;AAGE,QAAA,OAAO,EAAC,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,SAAS,EAAC,qBAFZ;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,OAAO,EAAE,MACP,KAAKzG,iBAAL,CAAuBrC,KAAvB,EAA8B,CAA9B,EAAiCmB,IAAjC,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CALF,CADF,eAmBE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,yFAFZ;AAGE,QAAA,OAAO,EAAC,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGmH,CAAC,CAAC,aAAD,CADJ,CADF,eAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGnH,IAAI,CAAC4H,mBAAL,gBACC,oBAAC,YAAD;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,OAAO,EAAE,MACP,KAAKlD,4BAAL,CACE7F,KADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAYC,EAbJ,CALF,eAqBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,OAAO,EAAE,MACP,KAAKuB,oBAAL,CAA0BvB,KAA1B,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CArBF,CALF,CAnBF,eAyDE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,0DAFZ;AAGE,QAAA,OAAO,EAAC,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,SAAS,EAAC,qBAFZ;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,OAAO,EAAE,MACP,KAAKqC,iBAAL,CAAuBrC,KAAvB,EAA8B,CAA9B,EAAiCmB,IAAjC,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CALF,CAzDF,eA2EE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,sEAFZ;AAGE,QAAA,OAAO,EAAC,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBmH,CAAC,CAAC,YAAD,CAAzB,CADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGnH,IAAI,CAAC6H,kBAAL,gBACC,oBAAC,YAAD;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,OAAO,EAAE,MACP,KAAKzC,2BAAL,CACEvG,KADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAYC,EAbJ,CAFF,eAkBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,OAAO,EAAE,MACP,KAAKwB,mBAAL,CAAyBxB,KAAzB,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlBF,CALF,CA3EF,eA8GE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBsI,CAAC,CAAC,QAAD,CAAlB,CA9GF,CADF,eAiHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,6EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGA,CAAC,CAAC,OAAD,CAJJ,CADF,eAOE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,6EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,eAaE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,6EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIMnH,IAAI,CAACuB,SAJX,MAbF,eAmBE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,6EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAIOvB,IAAI,CAACyB,WAJZ,MAnBF,eAyBE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,mFAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG0F,CAAC,CAAC,OAAD,CAJJ,CAzBF,eA+BE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,mFAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA/BF,eAqCE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,mFAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKGW,MAAM,CAAC9H,IAAI,CAACtB,IAAN,CAAN,CAAkBF,WAAlB,MAAmC,SAAnC,IACDwB,IAAI,CAACoB,GAAL,IAAY,GADX,GAEGpB,IAAI,CAACa,WAFR,GAGGb,IAAI,CAACuB,SARX,MArCF,eAgDE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,SAAS,EAAC,sEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG4F,CAAC,CAAC,IAAD,CAJJ,QAIcnH,IAAI,CAAC0B,UAJnB,MAhDF,CAjHF,CADF,eA0KE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGzF,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CAAsB+B,MAAtB,IAAgC,CAAhC,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGiI,CAAC,CAAC,iBAAD,CADJ,CADF,CADD,GAMG,IAPN,EAQGlL,SAAS,CAAC4C,KAAD,CAAT,CAAiB1B,IAAjB,CACEqC,MADF,CACSrC,IAAI,IAAIA,IAAI,CAACuC,KAAL,IAAc,IAD/B,EAEE8G,GAFF,CAEM,CAACrJ,IAAD,EAAOkB,MAAP,KAAkB;AACrB,4BACE;AAAI,UAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,yCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,cAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAElB,IAAI,CAACuC,KAFhB;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,QAAQ,EAAEvB,CAAC,IACT,KAAKD,iBAAL,CACEC,CADF,EAEEU,KAFF,EAGER,MAHF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADF,eAkBE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,cAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAElB,IAAI,CAAC0C,IAFhB;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,QAAQ,EAAE1B,CAAC,IACT,KAAKD,iBAAL,CACEC,CADF,EAEEU,KAFF,EAGER,MAHF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAlBF,eAmCE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,gDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAO,UAAA,SAAS,EAAC,6CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGlB,IAAI,CAACoD,KADR,CAJF,CAnCF,eA2CE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,gDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,kBADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EACHpD,IAAI,CAACuC,KAAL,IACAvC,IAAI,CAACsD,gBADL,GAEItD,IAAI,CAACsD,gBAFT,GAGI,EAPR;AASE,UAAA,QAAQ,EAAEtC,CAAC,IACT,KAAKyI,uBAAL,CACEzI,CADF,EAEEU,KAFF,EAGER,MAHF,CAVJ;AAgBE,UAAA,QAAQ,EAAElB,IAAI,CAACuC,KAAL,GAAa,KAAb,GAAqB,IAhBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,eAqBE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,cAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EACLvC,IAAI,CAACwC,cAAL,GAAsB,IAAtB,GAA6B,KAHjC;AAKE,UAAA,IAAI,EAAC,gBALP;AAME,UAAA,QAAQ,EAAExB,CAAC,IACT,KAAKqG,2BAAL,CACErG,CADF,EAEEU,KAFF,EAGER,MAHF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CArBF,CAJF,CA3CF,eAsFE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,gDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EACHlB,IAAI,CAACuC,KAAL,IAAcvC,IAAI,CAACuD,YAAnB,GACIvD,IAAI,CAACuD,YADT,GAEI,EANR;AAQE,UAAA,QAAQ,EAAEvC,CAAC,IACT,KAAKD,iBAAL,CACEC,CADF,EAEEU,KAFF,EAGER,MAHF,CATJ;AAeE,UAAA,QAAQ,EAAElB,IAAI,CAACuC,KAAL,GAAa,KAAb,GAAqB,IAfjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAtFF,eA4GE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,gDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,IADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAEvC,IAAI,CAACwD,EAHd;AAIE,UAAA,QAAQ,EAAExC,CAAC,IACT,KAAKD,iBAAL,CACEC,CADF,EAEEU,KAFF,EAGER,MAHF,CALJ;AAWE,UAAA,QAAQ,EAAElB,IAAI,CAACuC,KAAL,GAAa,KAAb,GAAqB,IAXjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CA5GF,eA8HE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,sDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAO,UAAA,SAAS,EAAC,6CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGvC,IAAI,CAACoD,KADR,CAJF,CA9HF,eAsIE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,sDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,iBADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EACHpD,IAAI,CAAC0C,IAAL,IAAa1C,IAAI,CAACyD,eAAlB,GACIzD,IAAI,CAACyD,eADT,GAEI,EANR;AAQE,UAAA,QAAQ,EAAEzC,CAAC,IACT,KAAKD,iBAAL,CACEC,CADF,EAEEU,KAFF,EAGER,MAHF,CATJ;AAeE,UAAA,QAAQ,EAAElB,IAAI,CAAC0C,IAAL,GAAY,KAAZ,GAAoB,IAfhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,eAoBE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,cAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EACL1C,IAAI,CAAC2C,aAAL,GAAqB,IAArB,GAA4B,KAHhC;AAKE,UAAA,IAAI,EAAC,eALP;AAME,UAAA,QAAQ,EAAE3B,CAAC,IACT,KAAKsG,0BAAL,CACEtG,CADF,EAEEU,KAFF,EAGER,MAHF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CApBF,CAJF,CAtIF,eAgLE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,sDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EACHlB,IAAI,CAAC0C,IAAL,IAAa1C,IAAI,CAAC0D,WAAlB,GACI1D,IAAI,CAAC0D,WADT,GAEI,EANR;AAQE,UAAA,QAAQ,EAAE1C,CAAC,IACT,KAAKD,iBAAL,CACEC,CADF,EAEEU,KAFF,EAGER,MAHF,CATJ;AAeE,UAAA,QAAQ,EAAElB,IAAI,CAAC0C,IAAL,GAAY,KAAZ,GAAoB,IAfhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAhLF,eAsME;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,SAAS,EAAC,yCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,IADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAE1C,IAAI,CAAC2D,EAHd;AAIE,UAAA,QAAQ,EAAE3C,CAAC,IACT,KAAKD,iBAAL,CACEC,CADF,EAEEU,KAFF,EAGER,MAHF,CALJ;AAWE,UAAA,QAAQ,EAAElB,IAAI,CAAC0C,IAAL,GAAY,KAAZ,GAAoB,IAXhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAtMF,eAwNE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,SAAS,EAAC,6CADZ;AAEE,UAAA,OAAO,EAAE1B,CAAC,IACR,KAAKsF,iBAAL,CACEtF,CADF,EAEEU,KAFF,EAGER,MAHF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAUE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVF,CADF,CAxNF,CADF;AAyOD,OA5OF,CARH,CA1KF,CADF,CAJF,CAjCF,CADF;AA4cD,KA7cD,CAHJ,CAlDF,EAqgBGpC,SAAS,IAAIA,SAAS,CAACiD,MAAV,IAAoB,CAAjC,gBACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCiI,CAAC,CAAC,iBAAD,CAAtC,CADD,GAEG,IAvgBN,eAwgBE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE,0BADb;AAEE,MAAA,KAAK,EAAE;AAAEY,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAGE,MAAA,KAAK,EAAE5L,cAHT;AAIE,MAAA,WAAW,EAAE,MAAM,CAAE,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,OAAO,EAAE,KAAK8D,mBADhB;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,GAAG,EAAEvE,SAHP;AAIE,MAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAYE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEW,SADb;AAEE,MAAA,IAAI,EAAEG,IAFR;AAGE,MAAA,UAAU,EAAE,MAAM,KAAKoB,UAAL,EAHpB;AAIE,MAAA,UAAU,EAAE,MAAM,KAAKC,UAAL,EAJpB;AAKE,MAAA,mBAAmB,EAAEmC,IAAI,IAAI,KAAKD,mBAAL,CAAyBC,IAAzB,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAxgBF,eA4hBE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE,0BADb;AAEE,MAAA,KAAK,EAAE;AAAE+H,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAGE,MAAA,KAAK,EAAEnL,oBAHT;AAIE,MAAA,WAAW,EAAE,MAAM,CAAE,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,OAAO,EAAE,KAAKkJ,+BADhB;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,GAAG,EAAEpK,SAHP;AAIE,MAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAYE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEW,SADb;AAEE,MAAA,IAAI,EAAEG,IAFR;AAGE,MAAA,UAAU,EAAE,MAAM,KAAKoB,UAAL,EAHpB;AAIE,MAAA,UAAU,EAAE,MAAM,KAAKC,UAAL,EAJpB;AAKE,MAAA,mBAAmB,EAAEmC,IAAI,IAAI,KAAK4F,yBAAL,CAA+B5F,IAA/B,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CA5hBF,eAgjBE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE,0BADb;AAEE,MAAA,KAAK,EAAE;AAAE+H,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAGE,MAAA,KAAK,EAAElL,0BAHT;AAIE,MAAA,WAAW,EAAE,MAAM,CAAE,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,OAAO,EAAE,KAAKuJ,+BADhB;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,GAAG,EAAE1K,SAHP;AAIE,MAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAYE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEoB,kBADb;AAEE,MAAA,IAAI,EAAG,EAFT;AAGE,MAAA,UAAU,EAAE,MAAM,CAAE,CAHtB;AAIE,MAAA,UAAU,EAAE,MAAM,CAAE,CAJtB;AAKE,MAAA,mBAAmB,EAAEkD,IAAI,IACvB,KAAKkG,+BAAL,CAAqClG,IAArC,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAhjBF,CADF,CADF;AA2kBD;;AA1+DqD;;AA6+DxD,MAAMgI,eAAe,GAAGhM,KAAK,KAAK;AAChC+B,EAAAA,eAAe,EAAE/B,KAAK,CAACiM,WAAN,CAAkBlK;AADH,CAAL,CAA7B;;AAIA,MAAMmK,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO7M,kBAAkB,CACvB;AACEC,IAAAA,YADF;AAEEC,IAAAA,eAFF;AAGEC,IAAAA;AAHF,GADuB,EAMvB0M,QANuB,CAAzB;AAQD,CATD;;AAWA,OAAO,MAAMC,mBAAmB,GAAGvM,eAAe,GAChDR,OAAO,CAAC2M,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnM,wBAA7C,CADgD,CAA3C","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalInput,\r\n  NormalButton,\r\n  NormalModal,\r\n  NormalCheckbox,\r\n} from \"component/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  commonCreateApi,\r\n  commonDeleteApi,\r\n} from \"redux/actions/common\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport \"./style.scss\";\r\nimport { Toast } from \"service/toast\";\r\nimport { StaffList } from \"./StaffList\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport _ from \"lodash\";\r\n\r\nexport class StaffSelectionPopupClass extends Component {\r\n  state = {\r\n    data_list: [\r\n      // {\r\n      //   id: 4397,\r\n      //   type: \"Deposit\",\r\n      //   div: \"3\",\r\n      //   itemdesc: \"SM-LYMPHATIC DETOX 60min\",\r\n      //   quantity: 5,\r\n      //   price: \"200.00\",\r\n      //   totl_disc: \"0.00\",\r\n      //   discount_price: \"200.00\",\r\n      //   trans_amt: \"1000.00\",\r\n      //   deposit: \"1000.00\",\r\n      //   is_foc: false,\r\n      //   work_amount: \"200.00\",\r\n      //   work_point: 0,\r\n      //   sales_point: 0,\r\n      //   sales_staffs: \"JACKIE,JANICE,Manager\",\r\n      //   service_staff: \"JANICE,ARIEL\",\r\n      //   data: [\r\n      //     {\r\n      //       work: true,\r\n      //       sales: false,\r\n      //       staff: \"ARIEL\",\r\n      //       emp_id: 259,\r\n      //       sales_percentage: null,\r\n      //       sales_amount: null,\r\n      //       sp: null,\r\n      //       work_percentage: 50,\r\n      //       work_amount: \"100.00\",\r\n      //       wp: 50,\r\n      //       tmp_workid: 128962,\r\n      //       tmp_saleid: null,\r\n      //     },\r\n      //     {\r\n      //       work: true,\r\n      //       sales: true,\r\n      //       staff: \"JANICE\",\r\n      //       emp_id: 173,\r\n      //       sales_percentage: 33,\r\n      //       sales_amount: \"333.00\",\r\n      //       sp: 33,\r\n      //       work_percentage: 50,\r\n      //       work_amount: \"100.00\",\r\n      //       wp: 50,\r\n      //       tmp_workid: 128965,\r\n      //       tmp_saleid: 3789,\r\n      //     },\r\n      //     {\r\n      //       work: false,\r\n      //       sales: true,\r\n      //       staff: \"Manager\",\r\n      //       emp_id: 284,\r\n      //       sales_percentage: 33,\r\n      //       sales_amount: \"333.00\",\r\n      //       sp: 33,\r\n      //       work_percentage: null,\r\n      //       work_amount: null,\r\n      //       wp: null,\r\n      //       tmp_workid: null,\r\n      //       tmp_saleid: 3786,\r\n      //     },\r\n      //     {\r\n      //       work: false,\r\n      //       sales: true,\r\n      //       staff: \"JACKIE\",\r\n      //       emp_id: 81,\r\n      //       sales_percentage: 33,\r\n      //       sales_amount: \"333.00\",\r\n      //       sp: 33,\r\n      //       work_percentage: null,\r\n      //       work_amount: null,\r\n      //       wp: null,\r\n      //       tmp_workid: null,\r\n      //       tmp_saleid: 3787,\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   id: 4398,\r\n      //   type: \"Deposit\",\r\n      //   div: \"3\",\r\n      //   itemdesc: \"SM-LYMPHATIC DETOX 60min\",\r\n      //   quantity: 5,\r\n      //   price: \"200.00\",\r\n      //   totl_disc: \"0.00\",\r\n      //   discount_price: \"200.00\",\r\n      //   trans_amt: \"1000.00\",\r\n      //   deposit: \"1000.00\",\r\n      //   is_foc: false,\r\n      //   work_amount: \"200.00\",\r\n      //   work_point: 0,\r\n      //   sales_point: 0,\r\n      //   sales_staffs: \"JACKIE,JANICE,Manager\",\r\n      //   service_staff: \"JANICE,ARIEL\",\r\n      //   data: [\r\n      //     {\r\n      //       work: true,\r\n      //       sales: false,\r\n      //       staff: \"ARIEL\",\r\n      //       emp_id: 259,\r\n      //       sales_percentage: null,\r\n      //       sales_amount: null,\r\n      //       sp: null,\r\n      //       work_percentage: 50,\r\n      //       work_amount: \"100.00\",\r\n      //       wp: 50,\r\n      //       tmp_workid: 128962,\r\n      //       tmp_saleid: null,\r\n      //     },\r\n      //     {\r\n      //       work: true,\r\n      //       sales: true,\r\n      //       staff: \"JANICE\",\r\n      //       emp_id: 173,\r\n      //       sales_percentage: 33,\r\n      //       sales_amount: \"333.00\",\r\n      //       sp: 33,\r\n      //       work_percentage: 50,\r\n      //       work_amount: \"100.00\",\r\n      //       wp: 50,\r\n      //       tmp_workid: 128965,\r\n      //       tmp_saleid: 3789,\r\n      //     },\r\n      //     {\r\n      //       work: false,\r\n      //       sales: true,\r\n      //       staff: \"Manager\",\r\n      //       emp_id: 284,\r\n      //       sales_percentage: 33,\r\n      //       sales_amount: \"333.00\",\r\n      //       sp: 33,\r\n      //       work_percentage: null,\r\n      //       work_amount: null,\r\n      //       wp: null,\r\n      //       tmp_workid: null,\r\n      //       tmp_saleid: 3786,\r\n      //     },\r\n      //     {\r\n      //       work: false,\r\n      //       sales: true,\r\n      //       staff: \"JACKIE\",\r\n      //       emp_id: 81,\r\n      //       sales_percentage: 33,\r\n      //       sales_amount: \"333.00\",\r\n      //       sp: 33,\r\n      //       work_percentage: null,\r\n      //       work_amount: null,\r\n      //       wp: null,\r\n      //       tmp_workid: null,\r\n      //       tmp_saleid: 3787,\r\n      //     },\r\n      //  ],\r\n      //},\r\n    ],\r\n    item_status_options: [],\r\n    staffListPopup: false,\r\n    selectedAddStaffIndex: null,\r\n    staffList: [],\r\n    limit: 6,\r\n    page: 1,\r\n    meta: {},\r\n    sourceList: [],\r\n    selectedAddStaffType: 1,\r\n    activeRow: 0,\r\n    staffCommonListPopup: false,\r\n    staffDeleteCommonListPopup: false,\r\n    availableStaffList: {\r\n      dataList: [],\r\n    },\r\n    selectedStaffIndex: \"\",\r\n    selectedStaffIndexLine: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getStaffSelectionList();\r\n  }\r\n  getStafflist = data => {\r\n    let { page, limit, selectedAddStaffType } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `empcartlist/?sales_staff=${selectedAddStaffType}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        console.log(key, \"sdfgsdfgsdfgdfg sdfgsdfgsdfg\");\r\n        let { staffList } = this.state;\r\n        let { meta } = this.state;\r\n        staffList = [];\r\n        meta = {};\r\n        staffList = data;\r\n        meta = data.meta.pagination;\r\n        console.log(meta, \"metalist\");\r\n        this.setState({\r\n          staffList,\r\n          meta,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleNext = async () => {\r\n    let { page } = this.state;\r\n    page = page + 1;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    if (page > 0) {\r\n      this.getStafflist();\r\n    }\r\n  };\r\n\r\n  handleBack = async () => {\r\n    let { page } = this.state;\r\n    page = page - 1;\r\n    await this.setState({\r\n      page,\r\n    });\r\n    if (page > 0) {\r\n      this.getStafflist();\r\n    }\r\n  };\r\n\r\n  getStaffSelectionList = () => {\r\n    let { data_list } = this.state;\r\n    let { basicApptDetail } = this.props;\r\n    this.props\r\n      .getCommonApi(\r\n        `cartpopup/?cust_noid=${basicApptDetail.custId}&cart_id=${this.props.id}&is_staffs=1`\r\n      )\r\n      .then(async key => {\r\n        debugger;\r\n        let { status, data } = key;\r\n        data_list = [];\r\n        if (status == \"200\") {\r\n          console.log(key, \"cartstaffselectionpopuplist\");\r\n          data_list = data;\r\n          await this.setState({\r\n            data_list,\r\n          });\r\n\r\n          // if (this.state.data_list.length > 0) {\r\n          //   this.setState({\r\n          //     activeRow: this.state.data_list[0].id,\r\n          //   });\r\n          //   document\r\n          //     .getElementById(this.state.data_list[0].id)\r\n          //     .classList.toggle(\"d-none\");\r\n          // }\r\n        }\r\n      });\r\n  };\r\n\r\n  handleStaffChange = async (e, index1, index2) => {\r\n    let { data_list } = this.state;\r\n    let data = this.state.data_list[index1].data[index2];\r\n    if ([e.target.name] == \"work\") {\r\n      if (\r\n        (this.state.data_list[index1][\"type\"].toUpperCase() == \"SALES\" &&\r\n          this.state.data_list[index1][\"div\"] == \"3\") ||\r\n        (this.state.data_list[index1][\"type\"].toUpperCase() == \"DEPOSIT\" &&\r\n          this.state.data_list[index1][\"div\"] == \"3\")\r\n      ) {\r\n        data[[e.target.name]] = e.target.value;\r\n        await this.setState({ data });\r\n      } else {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Work staff not allowed for Product\",\r\n        });\r\n      }\r\n    } else if ([e.target.name] == \"sales_percentage\") {\r\n      data[[e.target.name]] = e.target.value;\r\n      data[[\"priceSalesFlag\"]] = true;\r\n      await this.setState({ data });\r\n\r\n      data_list[index1][\"updateSalesCalcFlag\"] = true;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    } else if ([e.target.name] == \"work_percentage\") {\r\n      data[[e.target.name]] = e.target.value;\r\n      data[[\"priceWorkFlag\"]] = true;\r\n      await this.setState({ data });\r\n\r\n      data_list[index1][\"updateWorkCalcFlag\"] = true;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    } else {\r\n      data[[e.target.name]] = e.target.value;\r\n      await this.setState({ data });\r\n    }\r\n  };\r\n\r\n  handleAccordion = async (id, index) => {\r\n    let { data_list } = this.state;\r\n    if (this.state.activeRow !== id) {\r\n      await this.setState({\r\n        activeRow: id,\r\n      });\r\n\r\n      let elements = document.getElementsByClassName(\"accordion\");\r\n      for (let i = 0; i < elements.length; i++) {\r\n        elements[i].classList.add(\"d-none\");\r\n      }\r\n      document.getElementById(id).classList.toggle(\"d-none\");\r\n      console.log(elements);\r\n    } else {\r\n      await this.setState({\r\n        activeRow: 0,\r\n      });\r\n      let elements = document.getElementsByClassName(\"accordion\");\r\n      for (let i = 0; i < elements.length; i++) {\r\n        elements[i].classList.add(\"d-none\");\r\n      }\r\n    }\r\n\r\n    let data = data_list[index].data;\r\n    let salesPercentCount = data.filter(\r\n      acc => acc.sales === true && acc.priceSalesFlag == true\r\n    ).length;\r\n    if (salesPercentCount > 0) {\r\n      data_list[index][\"updateSalesCalcFlag\"] = true;\r\n      await this.setState({\r\n        data,\r\n      });\r\n    } else {\r\n      data_list[index][\"updateSalesCalcFlag\"] = false;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    }\r\n\r\n    let workPercentCount = data.filter(\r\n      acc => acc.work === true && acc.priceWorkFlag == true\r\n    ).length;\r\n    if (workPercentCount > 0) {\r\n      data_list[index][\"updateWorkCalcFlag\"] = true;\r\n      await this.setState({\r\n        data,\r\n      });\r\n    } else {\r\n      data_list[index][\"updateWorkCalcFlag\"] = false;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSelectedStaff = async item => {\r\n    this.handleEmployeePopup();\r\n    let { selectedAddStaffIndex, selectedAddStaffType, data_list } = this.state;\r\n    let data = this.state.data_list[selectedAddStaffIndex].data;\r\n\r\n    let filter = data.find(acc => acc.emp_id === item.id);\r\n    if (filter) {\r\n      if (filter.work && selectedAddStaffType == 0) {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"This staff already found in work staff list\",\r\n        });\r\n      }\r\n      if (filter.sales && selectedAddStaffType == 1) {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"This staff already found in sales staff list\",\r\n        });\r\n      } else if (!filter.sales && selectedAddStaffType == 1) {\r\n        filter.sales = true;\r\n        this.handleSalesStaffCalc(selectedAddStaffIndex);\r\n      } else {\r\n        filter.work = true;\r\n        this.handleWorkStaffCalc(selectedAddStaffIndex);\r\n      }\r\n    } else {\r\n      data.push({\r\n        work: selectedAddStaffType == 0 ? true : false,\r\n        sales: selectedAddStaffType == 1 ? true : false,\r\n        staff: item.emp_name,\r\n        emp_id: item.id,\r\n        sales_percentage: 0,\r\n        sales_amount: 0,\r\n        sp: 0,\r\n        work_percentage: 0,\r\n        work_amount: 0,\r\n        wp: 0,\r\n        tmp_workid: null,\r\n        tmp_saleid: null,\r\n      });\r\n      await this.setState({ data });\r\n\r\n      selectedAddStaffType == 0\r\n        ? this.handleWorkStaffCalc(selectedAddStaffIndex)\r\n        : this.handleSalesStaffCalc(selectedAddStaffIndex);\r\n\r\n      this.setState({\r\n        selectedAddStaffIndex: null,\r\n        selectedAddStaffType: null,\r\n      });\r\n    }\r\n  };\r\n  handleEmployeePopup = () => {\r\n    this.setState(prevState => ({\r\n      staffListPopup: !prevState.staffListPopup,\r\n    }));\r\n  };\r\n\r\n  handleAddNewStaff = async (index, type, item) => {\r\n    if (type == 0) {\r\n      if (\r\n        (item[\"type\"].toUpperCase() == \"SALES\" && item[\"div\"] == \"3\") ||\r\n        (item[\"type\"].toUpperCase() == \"DEPOSIT\" && item[\"div\"] == \"3\")\r\n      ) {\r\n        await this.setState({\r\n          selectedAddStaffIndex: index,\r\n          selectedAddStaffType: type,\r\n          staffList: [],\r\n          meta: {},\r\n          page: 1,\r\n        });\r\n        this.getStafflist();\r\n        this.setState({\r\n          staffListPopup: true,\r\n        });\r\n      } else {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Work Staff not allowed for Product\",\r\n        });\r\n      }\r\n    } else {\r\n      await this.setState({\r\n        selectedAddStaffIndex: index,\r\n        selectedAddStaffType: type,\r\n        staffList: [],\r\n        meta: {},\r\n        page: 1,\r\n      });\r\n      this.getStafflist();\r\n      this.setState({\r\n        staffListPopup: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handlePostAction = () => {\r\n    let { data_list } = this.state;\r\n\r\n    for (let value of data_list) {\r\n      let type = value.type;\r\n      let div = value.div;\r\n      let transamt = Number(value.trans_amt).toFixed(2);\r\n      let work_amount = Number(value.work_amount).toFixed(2);\r\n      let sales_point = Number(value.sales_point);\r\n      let work_point = Number(value.work_point);\r\n      let salesPercent = 0;\r\n      let salesAmount = Number(0);\r\n      let salesPoint = Number(0);\r\n      let workPercent = Number(0);\r\n      let workAmount = Number(0);\r\n      let workPoint = Number(0);\r\n      for (let line of value.data) {\r\n        salesPercent += Number(line.sales_percentage);\r\n        salesAmount += Number(line.sales_amount);\r\n        salesPoint += Number(line.sp);\r\n        workPercent += Number(line.work_percentage);\r\n        workAmount += Number(line.work_amount);\r\n        workPoint += Number(line.wp);\r\n\r\n        // if (line.work) {\r\n        //   if (\r\n        //     Number(line.work_amount) <= 0 ||\r\n        //     line.work_amount == null ||\r\n        //     line.work_percentage == null ||\r\n        //     Number(line.work_percentage) <= 0\r\n        //   ) {\r\n        //     Toast({\r\n        //       type: \"error\",\r\n        //       message:\r\n        //         \"Please check Work Staff Amount or Percentage should not be empty or Zero\",\r\n        //     });\r\n        //     return false;\r\n        //   }\r\n        // }\r\n        // if (line.sales) {\r\n        //   if (\r\n        //     Number(line.sales_amount) <= 0 ||\r\n        //     line.sales_amount == null ||\r\n        //     line.sales_percentage == null ||\r\n        //     Number(line.sales_percentage) <= 0\r\n        //   ) {\r\n        //     Toast({\r\n        //       type: \"error\",\r\n        //       message:\r\n        //         \"Please check Sales Staff Amount or Percentage should not be empty or Zero\",\r\n        //     });\r\n        //     return false;\r\n        //   }\r\n        // }\r\n      }\r\n      // if (workPercent > 200 || workAmount > 2 * transamt) {\r\n      //   Toast({\r\n      //     type: \"error\",\r\n      //     message:\r\n      //       \"Please check Work Staff Amount or Percentage should be less than Maximum\",\r\n      //   });\r\n      //   return false;\r\n      // } else if (\r\n      //   div == \"3\" &&\r\n      //   type.toUpperCase() == \"DEPOSIT\" &&\r\n      //   workAmount > work_amount\r\n      // ) {\r\n      //   Toast({\r\n      //     type: \"error\",\r\n      //     message:\r\n      //       \"Please check Work amount is should be equal to Max Work Amount\",\r\n      //   });\r\n      //   return false;\r\n      // } else\r\n      if (salesPercent > 200 || salesAmount > 2 * transamt) {\r\n        Toast({\r\n          type: \"error\",\r\n          message:\r\n            \"Please check Sales Amount or percentage should be less than max Amount\",\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    let { data_list } = this.state;\r\n    let result = this.handlePostAction();\r\n    if (result) {\r\n      console.log(data_list, \"savedataforstaffselection\");\r\n      this.props.commonCreateApi(`cartpopup/staffs/`, data_list).then(key => {\r\n        console.log(key, \"resultset of staffselection\");\r\n        let { status, data } = key;\r\n        if (status == 200) {\r\n          this.getStaffSelectionList();\r\n          this.props.handleModal();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSalesStaffCalc = async index => {\r\n    let { data_list } = this.state;\r\n    let salesStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.sales) {\r\n        salesStaffCount += 1;\r\n      }\r\n    }\r\n    let sales_percent = Number(100 / salesStaffCount).toFixed(2);\r\n    let totalsale = sales_percent * salesStaffCount;\r\n    let diff_sales_percent = Number(100 - totalsale).toFixed(2);\r\n    let sales_amount = Number(\r\n      data_list[index][\"trans_amt\"] / salesStaffCount\r\n    ).toFixed(2);\r\n    let diff_sales_amount = Number(\r\n      data_list[index][\"trans_amt\"] - sales_amount * salesStaffCount\r\n    ).toFixed(2);\r\n    let salespoints = Number(\r\n      data_list[index][\"sales_point\"] / salesStaffCount\r\n    ).toFixed(2);\r\n    let diff_salespoints = Number(\r\n      data_list[index][\"sales_point\"] - salespoints * salesStaffCount\r\n    ).toFixed(2);\r\n    let data = data_list[index].data;\r\n    let salesLength = data.filter(acc => acc.sales === true).length;\r\n    let i = 0;\r\n    let j = 1;\r\n    for (let dataLine of data_list[index].data) {\r\n      if (dataLine.sales) {\r\n        if (j == salesLength) {\r\n          let percent = Number(sales_percent) + Number(diff_sales_percent);\r\n          let amt = Number(sales_amount) + Number(diff_sales_amount);\r\n          let sp = Number(salespoints) + Number(diff_salespoints);\r\n          data[i][\"sales_percentage\"] = Number(percent).toFixed(2);\r\n          data[i][\"sales_amount\"] = Number(amt).toFixed(2);\r\n          data[i][\"sp\"] = Number(sp).toFixed(2);\r\n          data[i][\"priceSalesFlag\"] = false;\r\n          await this.setState({ data });\r\n        } else {\r\n          data[i][\"sales_percentage\"] = sales_percent;\r\n          data[i][\"sales_amount\"] = sales_amount;\r\n          data[i][\"sp\"] = salespoints;\r\n          data[i][\"priceSalesFlag\"] = false;\r\n          await this.setState({ data });\r\n        }\r\n        j++;\r\n      }\r\n      i++;\r\n    }\r\n    data_list[index][\"updateSalesCalcFlag\"] = false;\r\n    await this.setState({\r\n      data_list,\r\n    });\r\n  };\r\n  handleWorkStaffCalc = async index => {\r\n    let { data_list } = this.state;\r\n\r\n    let workStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.work) {\r\n        workStaffCount += 1;\r\n      }\r\n    }\r\n\r\n    let work_percent = Number(100 / workStaffCount).toFixed(2);\r\n    let totalwork = work_percent * workStaffCount;\r\n    let diff_work_percent = Number(100 - totalwork).toFixed(2);\r\n    let work_amount = \"\";\r\n    let diff_work_amount = \"\";\r\n    if (\r\n      data_list[index].div == \"3\" &&\r\n      data_list[index].type.toUpperCase() == \"DEPOSIT\"\r\n    ) {\r\n      work_amount = Number(\r\n        data_list[index][\"work_amount\"] / workStaffCount\r\n      ).toFixed(2);\r\n      diff_work_amount = Number(\r\n        data_list[index][\"work_amount\"] - work_amount * workStaffCount\r\n      ).toFixed(2);\r\n    } else {\r\n      work_amount = Number(\r\n        data_list[index][\"trans_amt\"] / workStaffCount\r\n      ).toFixed(2);\r\n      diff_work_amount = Number(\r\n        data_list[index][\"trans_amt\"] - work_amount * workStaffCount\r\n      ).toFixed(2);\r\n    }\r\n    let workpoints = Number(\r\n      data_list[index][\"work_point\"] / workStaffCount\r\n    ).toFixed(2);\r\n    let diff_workpoints = Number(\r\n      data_list[index][\"work_point\"] - workpoints * workStaffCount\r\n    ).toFixed(2);\r\n    let data = data_list[index].data;\r\n    let i = 0;\r\n    let j = 1;\r\n    let workLength = data.filter(acc => acc.work === true).length;\r\n    for (let line of data_list[index].data) {\r\n      if (line.work) {\r\n        if (j == workLength) {\r\n          let percent = Number(work_percent) + Number(diff_work_percent);\r\n          let amt = Number(work_amount) + Number(diff_work_amount);\r\n          let wp = Number(workpoints) + Number(diff_workpoints);\r\n\r\n          data[i][\"work_percentage\"] = Number(percent).toFixed(2);\r\n\r\n          data[i][\"work_amount\"] = Number(amt).toFixed(2);\r\n          data[i][\"priceWorkFlag\"] = false;\r\n          data[i][\"wp\"] = Number(wp).toFixed(2);\r\n          await this.setState({ data });\r\n        } else {\r\n          data[i][\"work_percentage\"] = work_percent;\r\n          data[i][\"work_amount\"] = work_amount;\r\n          data[i][\"priceWorkFlag\"] = false;\r\n          data[i][\"wp\"] = workpoints;\r\n          await this.setState({ data });\r\n        }\r\n        j++;\r\n      }\r\n      i++;\r\n    }\r\n    data_list[index][\"updateWorkCalcFlag\"] = false;\r\n    await this.setState({\r\n      data_list,\r\n    });\r\n  };\r\n\r\n  handleDeleteStaff = async (e, index1, index2) => {\r\n    let data = this.state.data_list[index1].data[index2];\r\n    let cartId = this.state.data_list[index1].id;\r\n    let Workid = 0;\r\n    let Saleid = 0;\r\n    if (data.tmp_workid == null) {\r\n      Workid = 0;\r\n    } else {\r\n      Workid = data.tmp_workid;\r\n    }\r\n    if (data.tmp_saleid == null) {\r\n      Saleid = 0;\r\n    } else {\r\n      Saleid = data.tmp_saleid;\r\n    }\r\n\r\n    let body = {\r\n      sales: data.sales,\r\n      work: data.work,\r\n      cart_id: Number(cartId),\r\n      tmp_workid: Number(Workid),\r\n      tmp_saleid: Number(Saleid),\r\n    };\r\n    console.log(body, \"selected row Item for delete\");\r\n    if (Number(Saleid) > 0 || Number(Workid) > 0) {\r\n      await this.props\r\n        .commonCreateApi(`cartpopup/staffsdelete/`, body)\r\n        .then(res => {\r\n          let { status } = res;\r\n          if (status == \"200\") {\r\n            console.log(res, \"staffselectionpoppupdeleteresponse\");\r\n            let { data_list } = this.state;\r\n            data_list[index1].data.splice(index2, 1);\r\n            this.setState({ data_list });\r\n            if (data.sales && data.work) {\r\n              this.handleWorkStaffCalc(index1);\r\n              this.handleSalesStaffCalc(index1);\r\n            } else if (data.sales && !data.work) {\r\n              this.handleSalesStaffCalc(index1);\r\n            } else if (!data.sales && data.work) {\r\n              this.handleWorkStaffCalc(index1);\r\n            }\r\n            //this.getStaffSelectionList();\r\n          }\r\n        });\r\n    } else {\r\n      let { data_list } = this.state;\r\n      data_list[index1].data.splice(index2, 1);\r\n      this.setState({ data_list });\r\n      if (data.sales && data.work) {\r\n        this.handleWorkStaffCalc(index1);\r\n        this.handleSalesStaffCalc(index1);\r\n      } else if (data.sales && !data.work) {\r\n        this.handleSalesStaffCalc(index1);\r\n      } else if (!data.sales && data.work) {\r\n        this.handleWorkStaffCalc(index1);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleWorkPercentFocusOut = async (index, index2) => {\r\n    let { data_list } = this.state;\r\n\r\n    let workStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.work) {\r\n        workStaffCount += 1;\r\n      }\r\n    }\r\n    if (Number(data_list[index].data[index2][\"work_percentage\"]) <= 100) {\r\n      let ModifiedWork_percent = Number(\r\n        data_list[index].data[index2][\"work_percentage\"]\r\n      ).toFixed(2);\r\n      let ModifiedWork_amount = 0;\r\n      let ModifiedWorkpoints = Number(\r\n        (ModifiedWork_percent / 100) * data_list[index][\"work_point\"]\r\n      ).toFixed(2);\r\n\r\n      let totalwork = Number(\r\n        Number(100).toFixed(2) - Number(ModifiedWork_percent).toFixed(2)\r\n      ).toFixed(2);\r\n      let work_percent = Number(totalwork / (workStaffCount - 1)).toFixed(2);\r\n\r\n      let diff_work_percent = Number(\r\n        totalwork - work_percent * (workStaffCount - 1)\r\n      ).toFixed(2);\r\n\r\n      let work_amount = 0;\r\n      let diff_work_amount = 0;\r\n      let totalWorkAmount = 0;\r\n      let totalWorkPoint = Number(\r\n        Number(data_list[index][\"work_point\"]).toFixed(2) -\r\n          Number(ModifiedWorkpoints).toFixed(2)\r\n      ).toFixed(2);\r\n      let workpoints = Number(totalWorkPoint / (workStaffCount - 1)).toFixed(2);\r\n      let diff_workpoints = Number(\r\n        totalWorkPoint - workpoints * (workStaffCount - 1)\r\n      ).toFixed(2);\r\n\r\n      if (\r\n        data_list[index].div == \"3\" &&\r\n        data_list[index].type.toUpperCase() == \"DEPOSIT\"\r\n      ) {\r\n        ModifiedWork_amount = Number(\r\n          (ModifiedWork_percent / 100) * data_list[index][\"work_amount\"]\r\n        ).toFixed(2);\r\n\r\n        totalWorkAmount = Number(\r\n          Number(data_list[index][\"work_amount\"]).toFixed(2) -\r\n            Number(ModifiedWork_amount).toFixed(2)\r\n        ).toFixed(2);\r\n        work_amount = Number(totalWorkAmount / (workStaffCount - 1)).toFixed(2);\r\n        diff_work_amount = Number(\r\n          totalWorkAmount - work_amount * (workStaffCount - 1)\r\n        ).toFixed(2);\r\n      } else {\r\n        ModifiedWork_amount = Number(\r\n          (ModifiedWork_percent / 100) * data_list[index][\"trans_amt\"]\r\n        ).toFixed(2);\r\n\r\n        totalWorkAmount = Number(\r\n          Number(data_list[index][\"trans_amt\"]).toFixed(2) -\r\n            Number(ModifiedWork_amount).toFixed(2)\r\n        ).toFixed(2);\r\n        work_amount = Number(totalWorkAmount / (workStaffCount - 1)).toFixed(2);\r\n        diff_work_amount = Number(\r\n          totalWorkAmount - work_amount * (workStaffCount - 1)\r\n        ).toFixed(2);\r\n      }\r\n\r\n      let data = data_list[index].data;\r\n\r\n      data_list[index].data[index2][\"work_percentage\"] =\r\n        Number(ModifiedWork_percent).toFixed(2);\r\n      data_list[index].data[index2][\"work_amount\"] =\r\n        Number(ModifiedWork_amount).toFixed(2);\r\n      data_list[index].data[index2][\"wp\"] =\r\n        Number(ModifiedWorkpoints).toFixed(2);\r\n      await this.setState({ data });\r\n\r\n      let workLength = data.filter(\r\n        acc =>\r\n          acc.work === true &&\r\n          acc.staff !== data_list[index].data[index2][\"staff\"]\r\n      ).length;\r\n      let workData = data.filter(\r\n        acc =>\r\n          acc.work === true &&\r\n          acc.staff !== data_list[index].data[index2][\"staff\"]\r\n      );\r\n      if (workData) {\r\n        let i = 0;\r\n        let j = 1;\r\n\r\n        for (let line of data_list[index].data) {\r\n          if (line.work) {\r\n            if (data_list[index].data[index2][\"staff\"] === line.staff) {\r\n              data[i][\"work_percentage\"] = ModifiedWork_percent;\r\n              data[i][\"work_amount\"] = ModifiedWork_amount;\r\n              data[i][\"wp\"] = ModifiedWorkpoints;\r\n              await this.setState({ data });\r\n            } else {\r\n              if (j == workLength) {\r\n                let percent = Number(work_percent) + Number(diff_work_percent);\r\n                let amt = Number(work_amount) + Number(diff_work_amount);\r\n                let wp = Number(workpoints) + Number(diff_workpoints);\r\n\r\n                data[i][\"work_percentage\"] = Number(percent).toFixed(2);\r\n\r\n                data[i][\"work_amount\"] = Number(amt).toFixed(2);\r\n\r\n                data[i][\"wp\"] = Number(wp).toFixed(2);\r\n                await this.setState({ data });\r\n              } else {\r\n                data[i][\"work_percentage\"] = work_percent;\r\n                data[i][\"work_amount\"] = work_amount;\r\n                data[i][\"wp\"] = workpoints;\r\n                await this.setState({ data });\r\n              }\r\n              j++;\r\n            }\r\n          }\r\n          i++;\r\n        }\r\n      }\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Please enter valid percentage\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSalesStaffPriceChange = async (e, index, index1) => {\r\n    let { data_list } = this.state;\r\n    let data = data_list[index].data[index1];\r\n\r\n    data[\"priceSalesFlag\"] = e.target.value;\r\n    await this.setState({\r\n      data,\r\n    });\r\n    let salesPercentCount = data_list[index].data.filter(\r\n      acc => acc.sales === true && acc.priceSalesFlag == true\r\n    ).length;\r\n    if (salesPercentCount > 0) {\r\n      data_list[index][\"updateSalesCalcFlag\"] = true;\r\n      await this.setState({ data_list });\r\n    } else {\r\n      data_list[index][\"updateSalesCalcFlag\"] = false;\r\n      await this.setState({ data_list });\r\n    }\r\n  };\r\n\r\n  handleWorkStaffPriceChange = async (e, index, index1) => {\r\n    let { data_list } = this.state;\r\n    let data = data_list[index].data[index1];\r\n\r\n    data[\"priceWorkFlag\"] = e.target.value;\r\n    await this.setState({\r\n      data,\r\n    });\r\n    let workPercentCount = data_list[index].data.filter(\r\n      acc => acc.work === true && acc.priceWorkFlag == true\r\n    ).length;\r\n    if (workPercentCount > 0) {\r\n      data_list[index][\"updateWorkCalcFlag\"] = true;\r\n      await this.setState({ data_list });\r\n    } else {\r\n      data_list[index][\"updateWorkCalcFlag\"] = false;\r\n      await this.setState({ data_list });\r\n    }\r\n  };\r\n  handleSalesPercentCalcUpdate = async index => {\r\n    let { data_list } = this.state;\r\n\r\n    let salesStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.sales) {\r\n        salesStaffCount += 1;\r\n      }\r\n    }\r\n    let data = data_list[index].data;\r\n    let salesPercentChange = data.filter(\r\n      acc => acc.sales === true && acc.priceSalesFlag == true\r\n    );\r\n    let salesStaffBalancePercent = 0;\r\n    if (salesPercentChange) {\r\n      for (let percentLine of salesPercentChange) {\r\n        if (percentLine.sales) {\r\n          salesStaffBalancePercent += Number(percentLine.sales_percentage);\r\n        }\r\n      }\r\n    }\r\n    if (salesPercentChange && salesStaffBalancePercent > 100) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Percentage should be less than 100\",\r\n      });\r\n    } else {\r\n      let salesPercentCount = data.filter(\r\n        acc => acc.sales === true && acc.priceSalesFlag == true\r\n      ).length;\r\n      let ModifiedSales_percent = Number(\r\n        100 - salesStaffBalancePercent\r\n      ).toFixed(2);\r\n      let Modifiedsales_amount = Number(\r\n        (ModifiedSales_percent / 100) * data_list[index][\"trans_amt\"]\r\n      ).toFixed(2);\r\n      let Modifiedsalespoints = Number(\r\n        (ModifiedSales_percent / 100) * data_list[index][\"sales_point\"]\r\n      ).toFixed(2);\r\n\r\n      let sales_percent = Number(\r\n        ModifiedSales_percent / (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let diff_sales_percent = Number(\r\n        ModifiedSales_percent -\r\n          sales_percent * (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let sales_amount = Number(\r\n        Modifiedsales_amount / (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n      let diff_sales_amount = Number(\r\n        Modifiedsales_amount -\r\n          sales_amount * (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let salespoints = Number(\r\n        Modifiedsalespoints / (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n      let diff_salespoints = Number(\r\n        Modifiedsalespoints -\r\n          salespoints * (salesStaffCount - salesPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let i = 0;\r\n      let j = 1;\r\n      for (let dataLine of data_list[index].data) {\r\n        if (dataLine.sales) {\r\n          if (dataLine.priceSalesFlag) {\r\n            let LineSales_percent = Number(dataLine.sales_percentage).toFixed(\r\n              2\r\n            );\r\n            let Linesales_amount = Number(\r\n              (LineSales_percent / 100) * data_list[index][\"trans_amt\"]\r\n            ).toFixed(2);\r\n            let Linesalespoints = Number(\r\n              (LineSales_percent / 100) * data_list[index][\"sales_point\"]\r\n            ).toFixed(2);\r\n\r\n            data[i][\"sales_percentage\"] = LineSales_percent;\r\n            data[i][\"sales_amount\"] = Linesales_amount;\r\n            data[i][\"sp\"] = Linesalespoints;\r\n            data[i][\"priceSalesFlag\"] = false;\r\n            await this.setState({ data });\r\n          } else {\r\n            if (j == salesPercentCount) {\r\n              let percent = Number(sales_percent) + Number(diff_sales_percent);\r\n              let amt = Number(sales_amount) + Number(diff_sales_amount);\r\n              let sp = Number(salespoints) + Number(diff_salespoints);\r\n              data[i][\"sales_percentage\"] = Number(percent).toFixed(2);\r\n              data[i][\"sales_amount\"] = Number(amt).toFixed(2);\r\n              data[i][\"sp\"] = Number(sp).toFixed(2);\r\n              data[i][\"priceSalesFlag\"] = false;\r\n              await this.setState({ data });\r\n            } else {\r\n              data[i][\"sales_percentage\"] = sales_percent;\r\n              data[i][\"sales_amount\"] = sales_amount;\r\n              data[i][\"sp\"] = salespoints;\r\n              data[i][\"priceSalesFlag\"] = false;\r\n              await this.setState({ data });\r\n            }\r\n            j++;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      data_list[index][\"updateSalesCalcFlag\"] = false;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleWorkPercentCalcUpdate = async index => {\r\n    let { data_list } = this.state;\r\n\r\n    let WorkStaffCount = 0;\r\n    for (let line of data_list[index].data) {\r\n      if (line.work) {\r\n        WorkStaffCount += 1;\r\n      }\r\n    }\r\n    let data = data_list[index].data;\r\n    let workPercentChange = data.filter(\r\n      acc => acc.work === true && acc.priceWorkFlag == true\r\n    );\r\n    let workStaffBalancePercent = 0;\r\n    if (workPercentChange) {\r\n      for (let percentLine of workPercentChange) {\r\n        if (percentLine.work) {\r\n          workStaffBalancePercent += Number(percentLine.work_percentage);\r\n        }\r\n      }\r\n    }\r\n    if (workPercentChange && workStaffBalancePercent > 100) {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Percentage should be less than 100\",\r\n      });\r\n    } else {\r\n      let workPercentCount = data.filter(\r\n        acc => acc.work === true && acc.priceWorkFlag == true\r\n      ).length;\r\n      let ModifiedWork_percent = Number(100 - workStaffBalancePercent).toFixed(\r\n        2\r\n      );\r\n      let ModifiedWork_amount = 0;\r\n      if (\r\n        data_list[index].div == \"3\" &&\r\n        data_list[index].type.toUpperCase() == \"DEPOSIT\"\r\n      ) {\r\n        ModifiedWork_amount = Number(\r\n          (ModifiedWork_percent / 100) * data_list[index][\"work_amount\"]\r\n        ).toFixed(2);\r\n      } else {\r\n        ModifiedWork_amount = Number(\r\n          (ModifiedWork_percent / 100) * data_list[index][\"trans_amt\"]\r\n        ).toFixed(2);\r\n      }\r\n      let ModifiedWorkpoints = Number(\r\n        (ModifiedWork_percent / 100) * data_list[index][\"work_point\"]\r\n      ).toFixed(2);\r\n\r\n      let work_percent = Number(\r\n        ModifiedWork_percent / (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let diff_work_percent = Number(\r\n        ModifiedWork_percent -\r\n          work_percent * (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let work_amount = Number(\r\n        ModifiedWork_amount / (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n      let diff_work_amount = Number(\r\n        ModifiedWork_amount - work_amount * (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let workpoints = Number(\r\n        ModifiedWorkpoints / (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n      let diff_workpoints = Number(\r\n        ModifiedWorkpoints - workpoints * (WorkStaffCount - workPercentCount)\r\n      ).toFixed(2);\r\n\r\n      let i = 0;\r\n      let j = 1;\r\n      for (let dataLine of data_list[index].data) {\r\n        if (dataLine.work) {\r\n          if (dataLine.priceWorkFlag) {\r\n            let LineWork_percent = Number(dataLine.work_percentage).toFixed(2);\r\n            let LineWork_amount = 0;\r\n            if (\r\n              data_list[index].div == \"3\" &&\r\n              data_list[index].type.toUpperCase() == \"DEPOSIT\"\r\n            ) {\r\n              LineWork_amount = Number(\r\n                (LineWork_percent / 100) * data_list[index][\"work_amount\"]\r\n              ).toFixed(2);\r\n            } else {\r\n              LineWork_amount = Number(\r\n                (LineWork_percent / 100) * data_list[index][\"trans_amt\"]\r\n              ).toFixed(2);\r\n            }\r\n\r\n            let Lineworkspoints = Number(\r\n              (LineWork_percent / 100) * data_list[index][\"work_point\"]\r\n            ).toFixed(2);\r\n\r\n            data[i][\"work_percentage\"] = LineWork_percent;\r\n            data[i][\"work_amount\"] = LineWork_amount;\r\n            data[i][\"wp\"] = Lineworkspoints;\r\n            data[i][\"priceWorkFlag\"] = false;\r\n            await this.setState({ data });\r\n          } else {\r\n            if (j == workPercentCount) {\r\n              let percent = Number(work_percent) + Number(diff_work_percent);\r\n              let amt = Number(work_amount) + Number(diff_work_amount);\r\n              let wp = Number(workpoints) + Number(diff_workpoints);\r\n              data[i][\"work_percentage\"] = Number(percent).toFixed(2);\r\n              data[i][\"work_amount\"] = Number(amt).toFixed(2);\r\n              data[i][\"wp\"] = Number(wp).toFixed(2);\r\n              data[i][\"priceWorkFlag\"] = false;\r\n              await this.setState({ data });\r\n            } else {\r\n              data[i][\"work_percentage\"] = work_percent;\r\n              data[i][\"work_amount\"] = work_amount;\r\n              data[i][\"wp\"] = workpoints;\r\n              data[i][\"priceWorkFlag\"] = false;\r\n              await this.setState({ data });\r\n            }\r\n            j++;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      data_list[index][\"updateWorkCalcFlag\"] = false;\r\n      await this.setState({\r\n        data_list,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCommonAddNewStaff = async () => {\r\n    await this.setState({\r\n      //selectedAddStaffIndex: index,\r\n      selectedAddStaffType: 1,\r\n      staffList: [],\r\n      meta: {},\r\n      page: 1,\r\n    });\r\n    this.getStafflist();\r\n    this.setState({\r\n      staffCommonListPopup: true,\r\n    });\r\n  };\r\n\r\n  handleCommonSelectedStaff = async selectedItem => {\r\n    this.handleCommonCreateEmployeePopup();\r\n    let { selectedAddStaffType, data_list } = this.state;\r\n    try {\r\n      data_list.forEach((e, Mainindex) => {\r\n        let datafound = e.data.find(acc => acc.emp_id === selectedItem.id);\r\n        if (!datafound) {\r\n          e.data.push({\r\n            work: selectedAddStaffType == 0 ? true : false,\r\n            sales: selectedAddStaffType == 1 ? true : false,\r\n            staff: selectedItem.emp_name,\r\n            emp_id: selectedItem.id,\r\n            sales_percentage: 0,\r\n            sales_amount: 0,\r\n            sp: 0,\r\n            work_percentage: 0,\r\n            work_amount: 0,\r\n            wp: 0,\r\n            tmp_workid: null,\r\n            tmp_saleid: null,\r\n          });\r\n          this.setState({ data_list });\r\n\r\n          selectedAddStaffType == 0\r\n            ? this.handleWorkStaffCalc(Mainindex)\r\n            : this.handleSalesStaffCalc(Mainindex);\r\n\r\n          this.setState({\r\n            selectedAddStaffIndex: null,\r\n            selectedAddStaffType: null,\r\n          });\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e, \"commonstaffadd\");\r\n    }\r\n  };\r\n\r\n  handleCommonCreateEmployeePopup = () => {\r\n    this.setState(prevState => ({\r\n      staffCommonListPopup: !prevState.staffCommonListPopup,\r\n    }));\r\n  };\r\n\r\n  handleCommonDeleteSelectedStaff = async staff => {\r\n    let { data_list } = this.state;\r\n    try {\r\n      if (data_list.length > 0) {\r\n        data_list.forEach((e, Mainindex) => {\r\n          let filter = e.data.find(acc => acc.emp_id === staff.id);\r\n          if (filter) {\r\n            e.data.forEach((Itemdata, index) => {\r\n              debugger;\r\n              if (staff.id === Itemdata.emp_id) {\r\n                let cartId = e.id;\r\n                let Workid = 0;\r\n                let Saleid = 0;\r\n                if (Itemdata.tmp_workid == null) {\r\n                  Workid = 0;\r\n                } else {\r\n                  Workid = Itemdata.tmp_workid;\r\n                }\r\n                if (Itemdata.tmp_saleid == null) {\r\n                  Saleid = 0;\r\n                } else {\r\n                  Saleid = Itemdata.tmp_saleid;\r\n                }\r\n\r\n                let body = {\r\n                  sales: Itemdata.sales,\r\n                  work: Itemdata.work,\r\n                  cart_id: Number(cartId),\r\n                  tmp_workid: Number(Workid),\r\n                  tmp_saleid: Number(Saleid),\r\n                };\r\n                console.log(body, \"selected row Item for delete\");\r\n                if (Number(Saleid) > 0 || Number(Workid) > 0) {\r\n                  this.props\r\n                    .commonCreateApi(`cartpopup/staffsdelete/`, body)\r\n                    .then(res => {\r\n                      let { status } = res;\r\n                      if (status == \"200\") {\r\n                        console.log(res, \"staffselectionpoppupdeleteresponse\");\r\n                        let { data_list } = this.state;\r\n                        data_list[Mainindex].data.splice(index, 1);\r\n                        this.setState({ data_list });\r\n                        if (Itemdata.sales && Itemdata.work) {\r\n                          this.handleWorkStaffCalc(Mainindex);\r\n                          this.handleSalesStaffCalc(Mainindex);\r\n                        } else if (Itemdata.sales && !Itemdata.work) {\r\n                          this.handleSalesStaffCalc(Mainindex);\r\n                        } else if (!Itemdata.sales && Itemdata.work) {\r\n                          this.handleWorkStaffCalc(Mainindex);\r\n                        }\r\n                      }\r\n                    });\r\n                } else {\r\n                  let { data_list } = this.state;\r\n                  data_list[Mainindex].data.splice(index, 1);\r\n                  this.setState({ data_list });\r\n\r\n                  if (Itemdata.sales && Itemdata.work) {\r\n                    this.handleWorkStaffCalc(Mainindex);\r\n                    this.handleSalesStaffCalc(Mainindex);\r\n                  } else if (Itemdata.sales && !Itemdata.work) {\r\n                    this.handleSalesStaffCalc(Mainindex);\r\n                  } else if (!Itemdata.sales && Itemdata.work) {\r\n                    this.handleWorkStaffCalc(Mainindex);\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      this.handleCommonDeleteEmployeePopup();\r\n    } catch (e) {\r\n      console.log(e, \"commondeletecatchlog\");\r\n    }\r\n  };\r\n\r\n  handleCommonDeleteStaffClick = async () => {\r\n    await this.setState({\r\n      //selectedAddStaffIndex: index,\r\n      selectedAddStaffType: 1,\r\n      staffList: [],\r\n      availableStaffList: [],\r\n      meta: {},\r\n      page: 1,\r\n    });\r\n    this.getStafflistforMatch();\r\n    this.setState({\r\n      staffDeleteCommonListPopup: true,\r\n    });\r\n  };\r\n  getStafflistforMatch = data => {\r\n    let { page, limit, selectedAddStaffType } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `empcartlist/?sales_staff=${selectedAddStaffType}&page=${page}&limit=${500}`\r\n      )\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        console.log(key, \"formatchstaff\");\r\n        let { staffList } = this.state;\r\n        let { meta } = this.state;\r\n        staffList = [];\r\n        meta = {};\r\n        staffList = data;\r\n        await this.setState({\r\n          staffList,\r\n        });\r\n        this.getDeleteStafflist();\r\n      });\r\n  };\r\n  getDeleteStafflist = async data => {\r\n    let { page, limit, selectedAddStaffType } = this.state;\r\n    let { data_list, staffList } = this.state;\r\n\r\n    let { availableStaffList } = this.state;\r\n\r\n    let { meta } = this.state;\r\n    meta = {};\r\n\r\n    try {\r\n      if (data_list.length > 0) {\r\n        let dataList = [];\r\n        data_list.forEach((e, Mainindex) => {\r\n          e.data.map((data, index) => {\r\n            let finalstafflist = staffList.dataList;\r\n\r\n            let filter = finalstafflist.find(acc => acc.id === data.emp_id);\r\n            if (filter) {\r\n              if (dataList && dataList.length > 0) {\r\n                let secondaryFilter = dataList.find(\r\n                  acc => acc.id === filter.id\r\n                );\r\n                if (!secondaryFilter) {\r\n                  dataList.push({\r\n                    id: filter.id,\r\n                    emp_name: filter.emp_name,\r\n                    emp_pic: filter.emp_pic,\r\n                  });\r\n                }\r\n              } else {\r\n                dataList.push({\r\n                  id: filter.id,\r\n                  emp_name: filter.emp_name,\r\n                  emp_pic: filter.emp_pic,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        // let pagination = {\r\n        //   current_page: page,\r\n        //   per_page: \"6\",\r\n        //   total: dataList.length,\r\n        //   total_pages: dataList.length / 6,\r\n        // };\r\n        meta = {};\r\n        console.log(meta, \"metalist\");\r\n        availableStaffList[\"dataList\"] = dataList;\r\n        await this.setState({\r\n          availableStaffList,\r\n          meta,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e, \"commondeletelistcatchlog\");\r\n    }\r\n  };\r\n\r\n  handleCommonDeleteEmployeePopup = () => {\r\n    this.setState(prevState => ({\r\n      staffDeleteCommonListPopup: !prevState.staffDeleteCommonListPopup,\r\n    }));\r\n  };\r\n\r\n  handleSalesAmountChange = async (e, index, index1) => {\r\n    // event.persist();\r\n\r\n    try {\r\n      let { data_list, selectedStaffIndex, selectedStaffIndexLine } =\r\n        this.state;\r\n      let dataLine = data_list[index].data[index1];\r\n      dataLine[\"sales_percentage\"] = e.target.value;\r\n      selectedStaffIndex = index;\r\n      selectedStaffIndexLine = index1;\r\n      await this.setState({\r\n        dataLine,\r\n        selectedStaffIndex,\r\n        selectedStaffIndexLine,\r\n      });\r\n      if (!this.debouncedFn) {\r\n        this.debouncedFn = _.debounce(async () => {\r\n          this.handleupdateLinelevelCalc();\r\n        }, 500);\r\n      }\r\n      this.debouncedFn();\r\n    } catch (e) {\r\n      console.log(e, \"salesamountchangecatchlog\");\r\n    }\r\n  };\r\n\r\n  handleupdateLinelevelCalc = async () => {\r\n    let { data_list, selectedStaffIndexLine, selectedStaffIndex } = this.state;\r\n    let dataLineLevel =\r\n      this.state.data_list[selectedStaffIndex].data[selectedStaffIndexLine][\r\n        \"sales_percentage\"\r\n      ];\r\n    let Linesales_amount = Number(\r\n      (dataLineLevel / 100) * data_list[selectedStaffIndex][\"trans_amt\"]\r\n    ).toFixed(2);\r\n    this.state.data_list[selectedStaffIndex].data[selectedStaffIndexLine][\r\n      \"sales_amount\"\r\n    ] = Linesales_amount;\r\n    await this.setState({ data_list });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      data_list,\r\n      staffListPopup,\r\n      staffList,\r\n      meta,\r\n      activeRow,\r\n      staffCommonListPopup,\r\n      staffDeleteCommonListPopup,\r\n      availableStaffList,\r\n    } = this.state;\r\n    let { t } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid mb-4 mt-2  product-details\">\r\n          <div className=\"row mb-2\">\r\n            <div className=\"col-md-4 col-12\">\r\n              <h4>{t(\"Staff Selection\")} </h4>\r\n            </div>\r\n            <div className=\"col-md-6 col-12\">\r\n              {data_list && data_list.length > 0 ? (\r\n                <>\r\n                  {!this.props.LinelevelCartId ? (\r\n                    <div className=\"d-flex flex-noWrap\">\r\n                      <NormalButton\r\n                        applybg={true}\r\n                        className=\"col-12\"\r\n                        label=\"Add Staff\"\r\n                        onClick={this.handleCommonAddNewStaff}\r\n                      />\r\n                      <NormalButton\r\n                        buttonClass={`ml-2`}\r\n                        resetbg={true}\r\n                        className=\"col-12\"\r\n                        label=\"Remove Staff\"\r\n                        onClick={this.handleCommonDeleteStaffClick}\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                </>\r\n              ) : null}\r\n            </div>\r\n            {data_list && data_list.length > 0 ? (\r\n              <div className=\"col-md-2 col-12\">\r\n                <NormalButton\r\n                  mainbg={false}\r\n                  className=\"col-12 fs-15 submit-btn\"\r\n                  label=\"Done\"\r\n                  onClick={() => this.handleSubmit()}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"row pl-3 pr-5 mt-2 fw-500 h6\">\r\n            <div className=\"col-3\">{`Item`} </div>\r\n            <div className=\"col-1 text-center\">{`Qty`}</div>\r\n            <div className=\"col text-right\">{`Unit Price`}</div>\r\n            <div className=\"col text-right\">{`Disc $`}</div>\r\n            <div className=\"col text-right\">{`D/Price`}</div>\r\n            <div className=\"col text-right\">{`Amount`}</div>\r\n            <div className=\"col text-right\">{`Deposit`}</div>\r\n          </div>\r\n\r\n          <div className=\"row pl-5 pr-5 mt-4 overflow-auto\">\r\n            {data_list &&\r\n              data_list.length > 0 &&\r\n              data_list.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    className={`row mb-2 ${\r\n                      this.props.LinelevelCartId &&\r\n                      this.props.LinelevelCartId !== item.id\r\n                        ? \"d-none\"\r\n                        : \"\"\r\n                    }  `}\r\n                    key={index}\r\n                  >\r\n                    <div\r\n                      className={`row rounded p-2 accordion-menu border staff ${\r\n                        activeRow == item.id ? \"border-primary\" : \"\"\r\n                      }`}\r\n                      onClick={() => this.handleAccordion(item.id, index)}\r\n                    >\r\n                      <div className=\"col-3\">{item.itemdesc}</div>\r\n                      <div className=\"col-1 text-center\">\r\n                        {item.quantity}\r\n                        {/* <NormalInput\r\n                          name=\"quantity\"\r\n                          type=\"number\"\r\n                          value={item.quantity}\r\n                          onChange={e => this.handleChange(e, index)}\r\n                        /> */}\r\n                      </div>\r\n                      <div className=\"col text-right\">{item.price}</div>\r\n                      <div className=\"col text-right\">{item.totl_disc}</div>\r\n                      <div className=\"col text-right\">\r\n                        {item.discount_price}\r\n                      </div>\r\n                      <div className=\"col text-right\">{item.trans_amt}</div>\r\n                      <div className=\"col text-right\">{item.deposit}</div>\r\n                    </div>\r\n                    <div\r\n                      className=\"row  rounded bg-light p-1 d-none accordion\"\r\n                      id={item.id}\r\n                    >\r\n                      <div className=\"mb-3\">\r\n                        <table className=\"table\" style={{ marginRight: 10 }}>\r\n                          <thead>\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"border-top-0 border-bottom-0 salesstaff-background\"\r\n                                colSpan=\"1\"\r\n                              >\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12 fs-15 fw-500\"\r\n                                      label=\"Add\"\r\n                                      onClick={() =>\r\n                                        this.handleAddNewStaff(index, 1, item)\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-left border-top-0 border-bottom-0 salesstaff-background\"\r\n                                colSpan=\"3\"\r\n                              >\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-6\">\r\n                                    {t(\"Sales staff\")}\r\n                                  </div>\r\n\r\n                                  <div className=\"col\">\r\n                                    {item.updateSalesCalcFlag ? (\r\n                                      <NormalButton\r\n                                        mainbg={true}\r\n                                        className=\"col-12 top-0\"\r\n                                        label=\"Calc\"\r\n                                        onClick={() =>\r\n                                          this.handleSalesPercentCalcUpdate(\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"col\">\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12 top-0\"\r\n                                      label=\"Auto\"\r\n                                      onClick={() =>\r\n                                        this.handleSalesStaffCalc(index)\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"border-top-0 border-bottom-0 workstaff-background d-none\"\r\n                                colSpan=\"1\"\r\n                              >\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12 fs-15 fw-500\"\r\n                                      label=\"Add\"\r\n                                      onClick={() =>\r\n                                        this.handleAddNewStaff(index, 0, item)\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-top-0 border-bottom-0 workstaff-background d-none\"\r\n                                colSpan=\"3\"\r\n                              >\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-5\">{t(\"Work staff\")}</div>\r\n                                  <div className=\"col\">\r\n                                    {item.updateWorkCalcFlag ? (\r\n                                      <NormalButton\r\n                                        mainbg={true}\r\n                                        className=\"col-12 top-0\"\r\n                                        label=\"Calc\"\r\n                                        onClick={() =>\r\n                                          this.handleWorkPercentCalcUpdate(\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"col\">\r\n                                    <NormalButton\r\n                                      mainbg={true}\r\n                                      className=\"col-12\"\r\n                                      label=\"Auto\"\r\n                                      onClick={() =>\r\n                                        this.handleWorkStaffCalc(index)\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </th>\r\n                              <th rowSpan=\"2\">{t(\"Action\")}</th>\r\n                            </tr>\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 salesstaff-background\"\r\n                              >\r\n                                {t(\"Staff\")}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 salesstaff-background\"\r\n                              >\r\n                                %\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 salesstaff-background\"\r\n                              >\r\n                                $ ({item.trans_amt})\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 salesstaff-background\"\r\n                              >\r\n                                SP ({item.sales_point})\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 workstaff-background d-none\"\r\n                              >\r\n                                {t(\"Staff\")}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 workstaff-background d-none\"\r\n                              >\r\n                                %\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-right border-top-0 border-bottom-0 workstaff-background d-none\"\r\n                              >\r\n                                $ (\r\n                                {String(item.type).toUpperCase() == \"DEPOSIT\" &&\r\n                                item.div == \"3\"\r\n                                  ? item.work_amount\r\n                                  : item.trans_amt}\r\n                                )\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"text-center border-top-0 border-bottom-0 workstaff-background d-none\"\r\n                              >\r\n                                {t(\"WP\")} ({item.work_point})\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {data_list[index].data.length <= 0 ? (\r\n                              <tr>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                  {t(\"No record found\")}\r\n                                </div>\r\n                              </tr>\r\n                            ) : null}\r\n                            {data_list[index].data\r\n                              .filter(data => data.sales == true)\r\n                              .map((data, index2) => {\r\n                                return (\r\n                                  <tr key={index2}>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center d-none workstaff-background\"\r\n                                    >\r\n                                      <NormalCheckbox\r\n                                        type=\"checkbox\"\r\n                                        checked={data.sales}\r\n                                        name=\"sales\"\r\n                                        onChange={e =>\r\n                                          this.handleStaffChange(\r\n                                            e,\r\n                                            index,\r\n                                            index2\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center d-none\"\r\n                                    >\r\n                                      <NormalCheckbox\r\n                                        type=\"checkbox\"\r\n                                        checked={data.work}\r\n                                        name=\"work\"\r\n                                        onChange={e =>\r\n                                          this.handleStaffChange(\r\n                                            e,\r\n                                            index,\r\n                                            index2\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center border-right salesstaff-background\"\r\n                                    >\r\n                                      <label className=\"text-left text-black common-label-text pb-2\">\r\n                                        {data.staff}\r\n                                      </label>\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center border-right salesstaff-background\"\r\n                                    >\r\n                                      <div className=\"d-flex flex-nowrap\">\r\n                                        <div className=\"col-9\">\r\n                                          <NormalInput\r\n                                            name=\"sales_percentage\"\r\n                                            type=\"number\"\r\n                                            value={\r\n                                              data.sales &&\r\n                                              data.sales_percentage\r\n                                                ? data.sales_percentage\r\n                                                : \"\"\r\n                                            }\r\n                                            onChange={e =>\r\n                                              this.handleSalesAmountChange(\r\n                                                e,\r\n                                                index,\r\n                                                index2\r\n                                              )\r\n                                            }\r\n                                            disabled={data.sales ? false : true}\r\n                                          />\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                          <NormalCheckbox\r\n                                            type=\"checkbox\"\r\n                                            checked={\r\n                                              data.priceSalesFlag ? true : false\r\n                                            }\r\n                                            name=\"priceSalesFlag\"\r\n                                            onChange={e =>\r\n                                              this.handleSalesStaffPriceChange(\r\n                                                e,\r\n                                                index,\r\n                                                index2\r\n                                              )\r\n                                            }\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center border-right salesstaff-background\"\r\n                                    >\r\n                                      <NormalInput\r\n                                        name=\"sales_amount\"\r\n                                        type=\"number\"\r\n                                        value={\r\n                                          data.sales && data.sales_amount\r\n                                            ? data.sales_amount\r\n                                            : \"\"\r\n                                        }\r\n                                        onChange={e =>\r\n                                          this.handleStaffChange(\r\n                                            e,\r\n                                            index,\r\n                                            index2\r\n                                          )\r\n                                        }\r\n                                        disabled={data.sales ? false : true}\r\n                                      />\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center border-right salesstaff-background\"\r\n                                    >\r\n                                      <NormalInput\r\n                                        name=\"sp\"\r\n                                        type=\"number\"\r\n                                        value={data.sp}\r\n                                        onChange={e =>\r\n                                          this.handleStaffChange(\r\n                                            e,\r\n                                            index,\r\n                                            index2\r\n                                          )\r\n                                        }\r\n                                        disabled={data.sales ? false : true}\r\n                                      />\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center border-right workstaff-background d-none\"\r\n                                    >\r\n                                      <label className=\"text-left text-black common-label-text pb-2\">\r\n                                        {data.staff}\r\n                                      </label>\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center border-right workstaff-background d-none\"\r\n                                    >\r\n                                      <div className=\"d-flex flex-nowrap\">\r\n                                        <div className=\"col-9\">\r\n                                          <NormalInput\r\n                                            name=\"work_percentage\"\r\n                                            type=\"number\"\r\n                                            value={\r\n                                              data.work && data.work_percentage\r\n                                                ? data.work_percentage\r\n                                                : \"\"\r\n                                            }\r\n                                            onChange={e =>\r\n                                              this.handleStaffChange(\r\n                                                e,\r\n                                                index,\r\n                                                index2\r\n                                              )\r\n                                            }\r\n                                            disabled={data.work ? false : true}\r\n                                          />\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                          <NormalCheckbox\r\n                                            type=\"checkbox\"\r\n                                            checked={\r\n                                              data.priceWorkFlag ? true : false\r\n                                            }\r\n                                            name=\"priceWorkFlag\"\r\n                                            onChange={e =>\r\n                                              this.handleWorkStaffPriceChange(\r\n                                                e,\r\n                                                index,\r\n                                                index2\r\n                                              )\r\n                                            }\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center border-right workstaff-background d-none\"\r\n                                    >\r\n                                      <NormalInput\r\n                                        name=\"work_amount\"\r\n                                        type=\"number\"\r\n                                        value={\r\n                                          data.work && data.work_amount\r\n                                            ? data.work_amount\r\n                                            : \"\"\r\n                                        }\r\n                                        onChange={e =>\r\n                                          this.handleStaffChange(\r\n                                            e,\r\n                                            index,\r\n                                            index2\r\n                                          )\r\n                                        }\r\n                                        disabled={data.work ? false : true}\r\n                                      />\r\n                                    </th>\r\n                                    <th\r\n                                      scope=\"col\"\r\n                                      className=\"text-center workstaff-background d-none\"\r\n                                    >\r\n                                      <NormalInput\r\n                                        name=\"wp\"\r\n                                        type=\"number\"\r\n                                        value={data.wp}\r\n                                        onChange={e =>\r\n                                          this.handleStaffChange(\r\n                                            e,\r\n                                            index,\r\n                                            index2\r\n                                          )\r\n                                        }\r\n                                        disabled={data.work ? false : true}\r\n                                      />\r\n                                    </th>\r\n                                    <th>\r\n                                      <div\r\n                                        className=\"col-12 p-0 fs-18 text-center cursor-pointer\"\r\n                                        onClick={e =>\r\n                                          this.handleDeleteStaff(\r\n                                            e,\r\n                                            index,\r\n                                            index2\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <span className=\"icon-delete\"></span>\r\n                                      </div>\r\n                                    </th>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n\r\n          {data_list && data_list.length <= 0 ? (\r\n            <div className=\"row pl-5 pr-5 mt-4\">{t(\"No Record Found\")}</div>\r\n          ) : null}\r\n          <NormalModal\r\n            className={\"stock-memo-staff-listing\"}\r\n            style={{ minWidth: \"60%\" }}\r\n            modal={staffListPopup}\r\n            handleModal={() => {}}\r\n          >\r\n            <img\r\n              onClick={this.handleEmployeePopup}\r\n              className=\"close\"\r\n              src={closeIcon}\r\n              alt=\"\"\r\n            />\r\n            <StaffList\r\n              staffList={staffList}\r\n              meta={meta}\r\n              handleNext={() => this.handleNext()}\r\n              handleBack={() => this.handleBack()}\r\n              handleSelectedStaff={item => this.handleSelectedStaff(item)}\r\n            />\r\n          </NormalModal>\r\n          <NormalModal\r\n            className={\"stock-memo-staff-listing\"}\r\n            style={{ minWidth: \"60%\" }}\r\n            modal={staffCommonListPopup}\r\n            handleModal={() => {}}\r\n          >\r\n            <img\r\n              onClick={this.handleCommonCreateEmployeePopup}\r\n              className=\"close\"\r\n              src={closeIcon}\r\n              alt=\"\"\r\n            />\r\n            <StaffList\r\n              staffList={staffList}\r\n              meta={meta}\r\n              handleNext={() => this.handleNext()}\r\n              handleBack={() => this.handleBack()}\r\n              handleSelectedStaff={item => this.handleCommonSelectedStaff(item)}\r\n            />\r\n          </NormalModal>\r\n          <NormalModal\r\n            className={\"stock-memo-staff-listing\"}\r\n            style={{ minWidth: \"60%\" }}\r\n            modal={staffDeleteCommonListPopup}\r\n            handleModal={() => {}}\r\n          >\r\n            <img\r\n              onClick={this.handleCommonDeleteEmployeePopup}\r\n              className=\"close\"\r\n              src={closeIcon}\r\n              alt=\"\"\r\n            />\r\n            <StaffList\r\n              staffList={availableStaffList}\r\n              meta={``}\r\n              handleNext={() => {}}\r\n              handleBack={() => {}}\r\n              handleSelectedStaff={item =>\r\n                this.handleCommonDeleteSelectedStaff(item)\r\n              }\r\n            />\r\n          </NormalModal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n      commonCreateApi,\r\n      commonDeleteApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const StaffSelectionPopup = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(StaffSelectionPopupClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}