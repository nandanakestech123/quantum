{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\routes\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Route, Router, Redirect } from \"react-router-dom\";\nimport { history } from \"../helpers\";\nimport Routers from \"./routes\";\nimport * as Layout from \"../layout\";\nimport * as Pages from \"../pages\"; // import { getTokenDetails } from 'redux/actions/auth'\n\nimport { NotificationContainer } from \"react-notifications\";\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routerGuard = () => {// let currentPath = history.location.pathname.split(\"/\")[1];\n      // if (currentPath === \"auth\") {\n      // history.push(\"/admin/dashboard\");\n      // console.log(\"asdfgadffgdfgdfgdfgdfg\")\n      // getTokenDetails()\n    };\n\n    this.state = {\n      renderRoute: false,\n      pathname: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {// if (\n    //   history.location.pathname == \"/auth\" ||\n    //   history.location.pathname == \"/auth/\"\n    // ) {\n    //   history.push(\"/auth/login\");\n    // }\n  } // componentDidMount() { }\n  // componentWillReceiveProps({ userPermissionDetails }) { }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, Routers.map(({\n      component,\n      redirect,\n      path,\n      exact = false,\n      // auth = true,\n      childrens = []\n    }) => {\n      if (childrens.length > 0) {\n        return /*#__PURE__*/React.createElement(Route, {\n          path: path,\n          exact: exact,\n          key: path,\n          render: props => {\n            if (redirect) {\n              if (props.location.pathname === path) {\n                props.history.push(redirect);\n              }\n            }\n\n            const LayoutComponent = Layout[component];\n            return /*#__PURE__*/React.createElement(LayoutComponent, Object.assign({}, props, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 23\n              }\n            }), childrens.map(({\n              component: ChildrenComponent,\n              path: childrenPath,\n              exact = false,\n              auth = true\n            }) => {\n              this.routerGuard();\n              return /*#__PURE__*/React.createElement(Route, {\n                path: path + childrenPath,\n                exact: exact,\n                key: path + childrenPath,\n                render: props => {\n                  let PageComponent = Pages[ChildrenComponent];\n                  return /*#__PURE__*/React.createElement(PageComponent, Object.assign({}, props, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 42\n                    }\n                  }));\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 31\n                }\n              });\n            }));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Route, {\n        path: path,\n        exact: exact,\n        key: component,\n        render: props => {\n          if (component) {\n            let PageComponent = Pages[component];\n            return /*#__PURE__*/React.createElement(PageComponent, Object.assign({}, props, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 28\n              }\n            }));\n          }\n\n          if (redirect) {\n            return /*#__PURE__*/React.createElement(Redirect, {\n              to: redirect,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 28\n              }\n            });\n          }\n\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 26\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(NotificationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Routes;","map":{"version":3,"sources":["F:/webfe/src/routes/index.js"],"names":["React","Component","Route","Router","Redirect","history","Routers","Layout","Pages","NotificationContainer","Routes","constructor","props","routerGuard","state","renderRoute","pathname","loading","componentDidMount","render","map","component","redirect","path","exact","childrens","length","location","push","LayoutComponent","ChildrenComponent","childrenPath","auth","PageComponent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route, Router, Redirect } from \"react-router-dom\";\r\nimport { history } from \"../helpers\";\r\n\r\nimport Routers from \"./routes\";\r\n\r\nimport * as Layout from \"../layout\";\r\nimport * as Pages from \"../pages\";\r\n\r\n// import { getTokenDetails } from 'redux/actions/auth'\r\n\r\nimport { NotificationContainer } from \"react-notifications\";\r\n\r\nclass Routes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      renderRoute: false,\r\n      pathname: null,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (\r\n    //   history.location.pathname == \"/auth\" ||\r\n    //   history.location.pathname == \"/auth/\"\r\n    // ) {\r\n    //   history.push(\"/auth/login\");\r\n    // }\r\n  }\r\n\r\n  // componentDidMount() { }\r\n\r\n  // componentWillReceiveProps({ userPermissionDetails }) { }\r\n\r\n  routerGuard = () => {\r\n    // let currentPath = history.location.pathname.split(\"/\")[1];\r\n    // if (currentPath === \"auth\") {\r\n    // history.push(\"/admin/dashboard\");\r\n    // console.log(\"asdfgadffgdfgdfgdfgdfg\")\r\n    // getTokenDetails()\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        {Routers.map(\r\n          ({\r\n            component,\r\n            redirect,\r\n            path,\r\n            exact = false,\r\n            // auth = true,\r\n            childrens = [],\r\n          }) => {\r\n            if (childrens.length > 0) {\r\n              return (\r\n                <Route\r\n                  path={path}\r\n                  exact={exact}\r\n                  key={path}\r\n                  render={props => {\r\n                    if (redirect) {\r\n                      if (props.location.pathname === path) {\r\n                        props.history.push(redirect);\r\n                      }\r\n                    }\r\n\r\n                    const LayoutComponent = Layout[component];\r\n\r\n                    return (\r\n                      <LayoutComponent {...props}>\r\n                        {childrens.map(\r\n                          ({\r\n                            component: ChildrenComponent,\r\n                            path: childrenPath,\r\n                            exact = false,\r\n                            auth = true,\r\n                          }) => {\r\n                            this.routerGuard();\r\n                            return (\r\n                              <Route\r\n                                path={path + childrenPath}\r\n                                exact={exact}\r\n                                key={path + childrenPath}\r\n                                render={props => {\r\n                                  let PageComponent = Pages[ChildrenComponent];\r\n\r\n                                  return <PageComponent {...props} />;\r\n                                }}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </LayoutComponent>\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n\r\n            return (\r\n              <Route\r\n                path={path}\r\n                exact={exact}\r\n                key={component}\r\n                render={props => {\r\n                  if (component) {\r\n                    let PageComponent = Pages[component];\r\n                    return <PageComponent {...props} />;\r\n                  }\r\n                  if (redirect) {\r\n                    return <Redirect to={redirect} />;\r\n                  }\r\n                  return <div></div>;\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n\r\n        <NotificationContainer />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n"]},"metadata":{},"sourceType":"module"}