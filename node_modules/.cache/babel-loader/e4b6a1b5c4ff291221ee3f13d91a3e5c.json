{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\NewAppointment\\\\NewListAppointment\\\\modal\\\\PrintModal.js\";\nimport React, { Component } from \"react\";\nimport { NormalButton, NormalModal, NormalCheckbox, NormalDate } from \"component/common\";\nimport closeIcon from \"assets/images/close.png\";\nimport { Toast } from \"service/toast\";\nimport { getCommonApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { withTranslation } from \"react-i18next\";\nexport class PrintModalClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: \"Tab1\",\n      staffList: [],\n      siteCodeList: [],\n      bookingList: [],\n      secStatusList: [],\n      formFields: {\n        fromDate: new Date(),\n        toDate: new Date(),\n        Staff: \"\",\n        Site: \"\",\n        Booking: \"\",\n        Sec_status: \"\"\n      },\n      employeeSelectAll: false,\n      siteSelectAll: false,\n      bookingSelectAll: false,\n      secStatusSelectAll: false,\n      PrintAs: \"\"\n    };\n\n    this.handleDialog = () => {\n      this.setState({\n        staffList: [],\n        siteCodeList: [],\n        bookingList: [],\n        secStatusList: [],\n        formFields: {\n          fromDate: new Date(),\n          toDate: new Date(),\n          Staff: \"\",\n          Site: \"\",\n          Booking: \"\",\n          Sec_status: \"\"\n        }\n      });\n      this.props.handlePrintDialog();\n    };\n\n    this.getStaffList = () => {\n      this.setState({\n        staffList: []\n      });\n      let {\n        staffList\n      } = this.state;\n      this.props.getCommonApi(`employeebranchwise`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            staffList.push({\n              value: value.id,\n              label: value.display_name,\n              selected: false\n            });\n          }\n\n          this.setState({\n            staffList\n          });\n        }\n      });\n    };\n\n    this.getBookingandSecondaryStatus = () => {\n      let {\n        bookingList,\n        secStatusList\n      } = this.state;\n      this.props.getCommonApi(\"bookingstatus/\").then(res => {\n        let {\n          status,\n          data,\n          sec_data\n        } = res;\n\n        if (status === 200) {\n          for (let value of data) {\n            bookingList.push({\n              value: value.value,\n              label: value.label,\n              selected: false\n            });\n          }\n\n          for (let value of sec_data) {\n            secStatusList.push({\n              value: value.value,\n              label: value.label,\n              selected: false\n            });\n          }\n\n          this.setState({\n            bookingList,\n            secStatusList\n          });\n        }\n      });\n    };\n\n    this.getSiteCode = () => {\n      this.setState({\n        staffList: []\n      });\n      let {\n        siteCodeList\n      } = this.state;\n      this.props.getCommonApi(`branchlist`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n        console.log(data, \"sitecodelist\");\n\n        if (status === 200) {\n          for (let value of data) {\n            siteCodeList.push({\n              value: value.id,\n              label: value.itemsite_code,\n              selected: false\n            });\n          }\n\n          this.setState({\n            siteCodeList\n          });\n        }\n      });\n    };\n\n    this.handleCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }, item) => {\n      let {\n        staffList,\n        siteCodeList,\n        bookingList,\n        secStatusList\n      } = this.state;\n\n      if (name === \"Staff\") {\n        let listCheckbox = staffList.find(acc => acc.value === item.value);\n\n        if (listCheckbox) {\n          listCheckbox[\"selected\"] = value;\n          await this.setState({ ...this.state.staffList,\n            listCheckbox\n          });\n        }\n\n        let Checkbox = staffList.filter(acc => acc.selected === true).length;\n\n        if (Checkbox == this.state.staffList.length) {\n          await this.setState({\n            employeeSelectAll: true\n          });\n        } else {\n          await this.setState({\n            employeeSelectAll: false\n          });\n        }\n      }\n\n      if (name === \"Site\") {\n        let listCheckbox = siteCodeList.find(acc => acc.value === item.value);\n\n        if (listCheckbox) {\n          listCheckbox[\"selected\"] = value;\n          await this.setState({ ...this.state.siteCodeList,\n            listCheckbox\n          });\n        }\n\n        let Checkbox = siteCodeList.filter(acc => acc.selected === true).length;\n\n        if (Checkbox == this.state.siteCodeList.length) {\n          await this.setState({\n            siteSelectAll: true\n          });\n        } else {\n          await this.setState({\n            siteSelectAll: false\n          });\n        }\n      }\n\n      if (name === \"Booking\") {\n        let listCheckbox = bookingList.find(acc => acc.value === item.value);\n\n        if (listCheckbox) {\n          listCheckbox[\"selected\"] = value;\n          await this.setState({ ...this.state.bookingList,\n            listCheckbox\n          });\n        }\n\n        let Checkbox = bookingList.filter(acc => acc.selected === true).length;\n\n        if (Checkbox == this.state.bookingList.length) {\n          await this.setState({\n            bookingSelectAll: true\n          });\n        } else {\n          await this.setState({\n            bookingSelectAll: false\n          });\n        }\n      }\n\n      if (name === \"Sec_status\") {\n        let listCheckbox = secStatusList.find(acc => acc.value === item.value);\n\n        if (listCheckbox) {\n          listCheckbox[\"selected\"] = value;\n          await this.setState({ ...this.state.secStatusList,\n            listCheckbox\n          });\n        }\n\n        let Checkbox = secStatusList.filter(acc => acc.selected === true).length;\n\n        if (Checkbox == this.state.secStatusList.length) {\n          await this.setState({\n            secStatusSelectAll: true\n          });\n        } else {\n          await this.setState({\n            secStatusSelectAll: false\n          });\n        }\n      }\n    };\n\n    this.sendAppointmentListPrint = async printAs => {\n      let {\n        staffList,\n        siteCodeList,\n        bookingList,\n        secStatusList,\n        formFields,\n        PrintAs\n      } = this.state;\n      await this.setState({\n        PrintAs: printAs\n      });\n      var finalstaff = \"\";\n      var finalsite = \"\";\n      var finalbooking = \"\";\n      var finalSecStatus = \"\";\n\n      for (var staffItem of staffList) {\n        if (staffItem.selected) {\n          if (finalstaff !== \"\") {\n            finalstaff += \",\" + staffItem.value;\n          } else {\n            finalstaff += staffItem.value;\n          }\n        }\n      }\n\n      for (var siteItem of siteCodeList) {\n        if (siteItem.selected) {\n          if (finalsite !== \"\") {\n            finalsite += \",\" + siteItem.value;\n          } else {\n            finalsite += siteItem.value;\n          }\n        }\n      }\n\n      for (var bookingItem of bookingList) {\n        if (bookingItem.selected) {\n          if (finalbooking !== \"\") {\n            finalbooking += \",\" + bookingItem.value;\n          } else {\n            finalbooking += bookingItem.value;\n          }\n        }\n      }\n\n      for (var secItem of secStatusList) {\n        if (secItem.selected) {\n          if (finalSecStatus !== \"\") {\n            finalSecStatus += \",\" + secItem.value;\n          } else {\n            finalSecStatus += secItem.value;\n          }\n        }\n      }\n\n      formFields[\"Staff\"] = finalstaff;\n      formFields[\"Site\"] = finalsite;\n      formFields[\"Booking\"] = finalbooking;\n      formFields[\"Sec_status\"] = finalSecStatus;\n      await this.setState({\n        formFields\n      });\n      this.AppointmentListPrint();\n    };\n\n    this.AppointmentListPrint = () => {\n      let {\n        formFields,\n        PrintAs\n      } = this.state;\n      this.props.getCommonApi(`appointmentlistpdf/?type=${PrintAs}&start_date=${dateFormat(formFields.fromDate, \"yyyy-mm-dd\")}&end_date=${dateFormat(formFields.toDate, \"yyyy-mm-dd\")}&emp_ids=${formFields.Staff}&site_ids=${formFields.Site}&status=${formFields.Booking}&sec_status=${formFields.Sec_status}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          this.handleDialog();\n          window.open(data);\n        }\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n\n      if (name === \"fromDate\") {\n        formFields[\"toDate\"] = value;\n      }\n\n      if (name === \"toDate\") {\n        let fromdate = new Date(dateFormat(formFields.fromDate));\n        let enddate = new Date(dateFormat(value));\n\n        if (enddate < fromdate) {\n          Toast({\n            type: \"error\",\n            message: \"Please enter valid date\"\n          });\n          formFields[\"toDate\"] = formFields.fromDate;\n        }\n      }\n\n      await this.setState({\n        formFields\n      });\n    };\n\n    this.changeTab = async data => {\n      await this.setState({\n        activeTab: data\n      });\n    };\n\n    this.handleSelectAllCheckbox = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        staffList,\n        siteCodeList,\n        bookingList,\n        secStatusList,\n        employeeSelectAll,\n        siteSelectAll,\n        bookingSelectAll,\n        secStatusSelectAll\n      } = this.state;\n\n      if (name === \"employeeSelectAll\") {\n        await this.setState({\n          employeeSelectAll: value\n        });\n\n        for (let item of staffList) {\n          item[\"selected\"] = value;\n          await this.setState({ ...this.state.staffList,\n            item\n          });\n        }\n      }\n\n      if (name === \"siteSelectAll\") {\n        await this.setState({\n          siteSelectAll: value\n        });\n\n        for (let item of siteCodeList) {\n          item[\"selected\"] = value;\n          await this.setState({ ...this.state.siteCodeList,\n            item\n          });\n        }\n      }\n\n      if (name === \"bookingSelectAll\") {\n        await this.setState({\n          bookingSelectAll: value\n        });\n\n        for (let item of bookingList) {\n          item[\"selected\"] = value;\n          await this.setState({ ...this.state.bookingList,\n            item\n          });\n        }\n      }\n\n      if (name === \"secStatusSelectAll\") {\n        await this.setState({\n          secStatusSelectAll: value\n        });\n\n        for (let item of secStatusList) {\n          item[\"selected\"] = value;\n          await this.setState({ ...this.state.secStatusList,\n            item\n          });\n        }\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.validator = new SimpleReactValidator({\n      element: message => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error-message text-danger validNo fs14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, message),\n      autoForceUpdate: this\n    });\n    this.getStaffList();\n    this.getSiteCode();\n    this.getBookingandSecondaryStatus();\n  }\n\n  render() {\n    let {\n      isOpenPrintModal,\n      t\n    } = this.props;\n    let {\n      activeTab,\n      staffList,\n      formFields,\n      siteCodeList,\n      bookingList,\n      secStatusList,\n      employeeSelectAll,\n      siteSelectAll,\n      bookingSelectAll,\n      secStatusSelectAll\n    } = this.state;\n    return /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"printModal\",\n      style: {\n        minWidth: \"50%\"\n      },\n      modal: isOpenPrintModal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `card text-center p-1 print activeColor ${activeTab === \"Tab1\" ? \"active\" : \"\"}`,\n      onClick: () => this.changeTab(\"Tab1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }\n    }, t(\"Appointment Report\")))), activeTab === \"Tab1\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-start p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-6 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, t(\"From Date\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalDate, {\n      className: \"customer-name status py-1 col-12\",\n      value: new Date(formFields.fromDate),\n      name: \"fromDate\",\n      type: \"date\",\n      popperPlacement: \"top-right\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"fromDate\", formFields.fromDate, \"required|date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-6 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }, t(\"To Date\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 19\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalDate, {\n      className: \"customer-name status py-1 col-12\",\n      value: new Date(formFields.toDate),\n      name: \"toDate\",\n      type: \"date\",\n      onChange: this.handleChange,\n      popperPlacement: \"top-right\",\n      minDate: new Date(formFields.fromDate),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"toDate\", formFields.toDate, \"required|date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-6 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-4 mt-2 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `row`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: e => this.handleSelectAllCheckbox(e),\n      value: employeeSelectAll,\n      name: \"employeeSelectAll\",\n      checked: employeeSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }\n    }, t(\"Employee Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-12 response-table fw-500 multiselectList-height fs-13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }, staffList && staffList.length > 0 ? staffList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${item.selected ? \"active\" : \"\"} `,\n        key: item.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, item),\n        value: item.selected,\n        name: \"Staff\",\n        checked: item.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 29\n        }\n      }, item.label));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-6 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-4 mt-2 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: e => this.handleSelectAllCheckbox(e),\n      value: siteSelectAll,\n      name: \"siteSelectAll\",\n      checked: siteSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 21\n      }\n    }, t(\"Site\"), \" \", t(\"Code\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-12 response-table fw-500 multiselectList-height fs-13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 19\n      }\n    }, siteCodeList && siteCodeList.length > 0 ? siteCodeList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${item.selected ? \"active\" : \"\"} `,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, item),\n        value: item.selected,\n        name: \"Site\",\n        checked: item.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 29\n        }\n      }, item.label));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-6 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: e => this.handleSelectAllCheckbox(e),\n      value: bookingSelectAll,\n      name: \"bookingSelectAll\",\n      checked: bookingSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 21\n      }\n    }, t(\"Booking Status\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-12 response-table fw-500 multiselectList-height fs-13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 19\n      }\n    }, bookingList && bookingList.length > 0 ? bookingList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${item.selected ? \"active\" : \"\"} `,\n        key: item.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, item),\n        value: item.selected,\n        name: \"Booking\",\n        checked: item.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 29\n        }\n      }, item.label));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-6 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: e => this.handleSelectAllCheckbox(e),\n      value: secStatusSelectAll,\n      name: \"secStatusSelectAll\",\n      checked: secStatusSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 21\n      }\n    }, t(\"Secondary Status\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-12 response-table fw-500 multiselectList-height fs-13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 19\n      }\n    }, secStatusList && secStatusList.length > 0 ? secStatusList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${item.selected ? \"active\" : \"\"} `,\n        key: item.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n        onChange: e => this.handleCheckbox(e, item),\n        value: item.selected,\n        name: \"Sec_status\",\n        checked: item.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 29\n        }\n      }, item.label));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100  p-0\",\n      mainbg: true,\n      className: \"confirm\",\n      label: `Pdf`,\n      outline: false,\n      onClick: () => this.sendAppointmentListPrint(\"Pdf\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100  p-0\",\n      mainbg: true,\n      className: \"confirm\",\n      label: `Excel`,\n      outline: false,\n      onClick: () => this.sendAppointmentListPrint(\"Excel\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"w-100 p-0\",\n      mainbg: true,\n      className: \"confirm\",\n      label: `Cancel`,\n      outline: false,\n      onClick: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }\n    })))) : \"\");\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getCommonApi\n  }, dispatch);\n};\n\nexport const PrintModal = withTranslation()(connect(null, mapDispatchToProps)(PrintModalClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/NewAppointment/NewListAppointment/modal/PrintModal.js"],"names":["React","Component","NormalButton","NormalModal","NormalCheckbox","NormalDate","closeIcon","Toast","getCommonApi","connect","bindActionCreators","dateFormat","SimpleReactValidator","withTranslation","PrintModalClass","state","activeTab","staffList","siteCodeList","bookingList","secStatusList","formFields","fromDate","Date","toDate","Staff","Site","Booking","Sec_status","employeeSelectAll","siteSelectAll","bookingSelectAll","secStatusSelectAll","PrintAs","handleDialog","setState","props","handlePrintDialog","getStaffList","then","key","status","data","value","push","id","label","display_name","selected","getBookingandSecondaryStatus","res","sec_data","getSiteCode","console","log","itemsite_code","handleCheckbox","target","name","item","listCheckbox","find","acc","Checkbox","filter","length","sendAppointmentListPrint","printAs","finalstaff","finalsite","finalbooking","finalSecStatus","staffItem","siteItem","bookingItem","secItem","AppointmentListPrint","window","open","handleChange","fromdate","enddate","type","message","changeTab","handleSelectAllCheckbox","componentWillMount","validator","element","autoForceUpdate","render","isOpenPrintModal","t","minWidth","e","map","index","mapDispatchToProps","dispatch","PrintModal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalButton,\r\n  NormalModal,\r\n  NormalCheckbox,\r\n  NormalDate,\r\n} from \"component/common\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { Toast } from \"service/toast\";\r\nimport { getCommonApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { withTranslation } from \"react-i18next\";\r\nexport class PrintModalClass extends Component {\r\n  state = {\r\n    activeTab: \"Tab1\",\r\n    staffList: [],\r\n    siteCodeList: [],\r\n    bookingList: [],\r\n    secStatusList: [],\r\n    formFields: {\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      Staff: \"\",\r\n      Site: \"\",\r\n      Booking: \"\",\r\n      Sec_status: \"\",\r\n    },\r\n    employeeSelectAll: false,\r\n    siteSelectAll: false,\r\n    bookingSelectAll: false,\r\n    secStatusSelectAll: false,\r\n    PrintAs: \"\",\r\n  };\r\n  componentWillMount() {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n    this.getStaffList();\r\n    this.getSiteCode();\r\n    this.getBookingandSecondaryStatus();\r\n  }\r\n\r\n  handleDialog = () => {\r\n    this.setState({\r\n      staffList: [],\r\n      siteCodeList: [],\r\n      bookingList: [],\r\n      secStatusList: [],\r\n      formFields: {\r\n        fromDate: new Date(),\r\n        toDate: new Date(),\r\n        Staff: \"\",\r\n        Site: \"\",\r\n        Booking: \"\",\r\n        Sec_status: \"\",\r\n      },\r\n    });\r\n    this.props.handlePrintDialog();\r\n  };\r\n\r\n  getStaffList = () => {\r\n    this.setState({ staffList: [] });\r\n    let { staffList } = this.state;\r\n    this.props.getCommonApi(`employeebranchwise`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          staffList.push({\r\n            value: value.id,\r\n            label: value.display_name,\r\n            selected: false,\r\n          });\r\n        }\r\n        this.setState({ staffList });\r\n      }\r\n    });\r\n  };\r\n  getBookingandSecondaryStatus = () => {\r\n    let { bookingList, secStatusList } = this.state;\r\n    this.props.getCommonApi(\"bookingstatus/\").then(res => {\r\n      let { status, data, sec_data } = res;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          bookingList.push({\r\n            value: value.value,\r\n            label: value.label,\r\n            selected: false,\r\n          });\r\n        }\r\n        for (let value of sec_data) {\r\n          secStatusList.push({\r\n            value: value.value,\r\n            label: value.label,\r\n            selected: false,\r\n          });\r\n        }\r\n        this.setState({ bookingList, secStatusList });\r\n      }\r\n    });\r\n  };\r\n  getSiteCode = () => {\r\n    this.setState({ staffList: [] });\r\n    let { siteCodeList } = this.state;\r\n    this.props.getCommonApi(`branchlist`).then(key => {\r\n      let { status, data } = key;\r\n      console.log(data, \"sitecodelist\");\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          siteCodeList.push({\r\n            value: value.id,\r\n            label: value.itemsite_code,\r\n            selected: false,\r\n          });\r\n        }\r\n        this.setState({ siteCodeList });\r\n      }\r\n    });\r\n  };\r\n  handleCheckbox = async ({ target: { value, name } }, item) => {\r\n    let { staffList, siteCodeList, bookingList, secStatusList } = this.state;\r\n\r\n    if (name === \"Staff\") {\r\n      let listCheckbox = staffList.find(acc => acc.value === item.value);\r\n      if (listCheckbox) {\r\n        listCheckbox[\"selected\"] = value;\r\n        await this.setState({ ...this.state.staffList, listCheckbox });\r\n      }\r\n      let Checkbox = staffList.filter(acc => acc.selected === true).length;\r\n      if (Checkbox == this.state.staffList.length) {\r\n        await this.setState({ employeeSelectAll: true });\r\n      } else {\r\n        await this.setState({ employeeSelectAll: false });\r\n      }\r\n    }\r\n    if (name === \"Site\") {\r\n      let listCheckbox = siteCodeList.find(acc => acc.value === item.value);\r\n      if (listCheckbox) {\r\n        listCheckbox[\"selected\"] = value;\r\n        await this.setState({ ...this.state.siteCodeList, listCheckbox });\r\n      }\r\n      let Checkbox = siteCodeList.filter(acc => acc.selected === true).length;\r\n      if (Checkbox == this.state.siteCodeList.length) {\r\n        await this.setState({ siteSelectAll: true });\r\n      } else {\r\n        await this.setState({ siteSelectAll: false });\r\n      }\r\n    }\r\n    if (name === \"Booking\") {\r\n      let listCheckbox = bookingList.find(acc => acc.value === item.value);\r\n      if (listCheckbox) {\r\n        listCheckbox[\"selected\"] = value;\r\n        await this.setState({ ...this.state.bookingList, listCheckbox });\r\n      }\r\n      let Checkbox = bookingList.filter(acc => acc.selected === true).length;\r\n      if (Checkbox == this.state.bookingList.length) {\r\n        await this.setState({ bookingSelectAll: true });\r\n      } else {\r\n        await this.setState({ bookingSelectAll: false });\r\n      }\r\n    }\r\n    if (name === \"Sec_status\") {\r\n      let listCheckbox = secStatusList.find(acc => acc.value === item.value);\r\n      if (listCheckbox) {\r\n        listCheckbox[\"selected\"] = value;\r\n        await this.setState({ ...this.state.secStatusList, listCheckbox });\r\n      }\r\n      let Checkbox = secStatusList.filter(acc => acc.selected === true).length;\r\n      if (Checkbox == this.state.secStatusList.length) {\r\n        await this.setState({ secStatusSelectAll: true });\r\n      } else {\r\n        await this.setState({ secStatusSelectAll: false });\r\n      }\r\n    }\r\n  };\r\n  sendAppointmentListPrint = async printAs => {\r\n    let {\r\n      staffList,\r\n      siteCodeList,\r\n      bookingList,\r\n      secStatusList,\r\n      formFields,\r\n      PrintAs,\r\n    } = this.state;\r\n    await this.setState({ PrintAs: printAs });\r\n    var finalstaff = \"\";\r\n    var finalsite = \"\";\r\n    var finalbooking = \"\";\r\n    var finalSecStatus = \"\";\r\n    for (var staffItem of staffList) {\r\n      if (staffItem.selected) {\r\n        if (finalstaff !== \"\") {\r\n          finalstaff += \",\" + staffItem.value;\r\n        } else {\r\n          finalstaff += staffItem.value;\r\n        }\r\n      }\r\n    }\r\n    for (var siteItem of siteCodeList) {\r\n      if (siteItem.selected) {\r\n        if (finalsite !== \"\") {\r\n          finalsite += \",\" + siteItem.value;\r\n        } else {\r\n          finalsite += siteItem.value;\r\n        }\r\n      }\r\n    }\r\n    for (var bookingItem of bookingList) {\r\n      if (bookingItem.selected) {\r\n        if (finalbooking !== \"\") {\r\n          finalbooking += \",\" + bookingItem.value;\r\n        } else {\r\n          finalbooking += bookingItem.value;\r\n        }\r\n      }\r\n    }\r\n    for (var secItem of secStatusList) {\r\n      if (secItem.selected) {\r\n        if (finalSecStatus !== \"\") {\r\n          finalSecStatus += \",\" + secItem.value;\r\n        } else {\r\n          finalSecStatus += secItem.value;\r\n        }\r\n      }\r\n    }\r\n    formFields[\"Staff\"] = finalstaff;\r\n    formFields[\"Site\"] = finalsite;\r\n    formFields[\"Booking\"] = finalbooking;\r\n    formFields[\"Sec_status\"] = finalSecStatus;\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n    this.AppointmentListPrint();\r\n  };\r\n\r\n  AppointmentListPrint = () => {\r\n    let { formFields, PrintAs } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `appointmentlistpdf/?type=${PrintAs}&start_date=${dateFormat(\r\n          formFields.fromDate,\r\n          \"yyyy-mm-dd\"\r\n        )}&end_date=${dateFormat(formFields.toDate, \"yyyy-mm-dd\")}&emp_ids=${\r\n          formFields.Staff\r\n        }&site_ids=${formFields.Site}&status=${formFields.Booking}&sec_status=${\r\n          formFields.Sec_status\r\n        }`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          this.handleDialog();\r\n          window.open(data);\r\n        }\r\n      });\r\n  };\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n\r\n    if (name === \"fromDate\") {\r\n      formFields[\"toDate\"] = value;\r\n    }\r\n\r\n    if (name === \"toDate\") {\r\n      let fromdate = new Date(dateFormat(formFields.fromDate));\r\n      let enddate = new Date(dateFormat(value));\r\n      if (enddate < fromdate) {\r\n        Toast({ type: \"error\", message: \"Please enter valid date\" });\r\n        formFields[\"toDate\"] = formFields.fromDate;\r\n      }\r\n    }\r\n    await this.setState({ formFields });\r\n  };\r\n  changeTab = async data => {\r\n    await this.setState({ activeTab: data });\r\n  };\r\n\r\n  handleSelectAllCheckbox = async ({ target: { value, name } }) => {\r\n    let {\r\n      staffList,\r\n      siteCodeList,\r\n      bookingList,\r\n      secStatusList,\r\n      employeeSelectAll,\r\n      siteSelectAll,\r\n      bookingSelectAll,\r\n      secStatusSelectAll,\r\n    } = this.state;\r\n\r\n    if (name === \"employeeSelectAll\") {\r\n      await this.setState({ employeeSelectAll: value });\r\n      for (let item of staffList) {\r\n        item[\"selected\"] = value;\r\n        await this.setState({ ...this.state.staffList, item });\r\n      }\r\n    }\r\n    if (name === \"siteSelectAll\") {\r\n      await this.setState({ siteSelectAll: value });\r\n      for (let item of siteCodeList) {\r\n        item[\"selected\"] = value;\r\n        await this.setState({ ...this.state.siteCodeList, item });\r\n      }\r\n    }\r\n    if (name === \"bookingSelectAll\") {\r\n      await this.setState({ bookingSelectAll: value });\r\n      for (let item of bookingList) {\r\n        item[\"selected\"] = value;\r\n        await this.setState({ ...this.state.bookingList, item });\r\n      }\r\n    }\r\n    if (name === \"secStatusSelectAll\") {\r\n      await this.setState({ secStatusSelectAll: value });\r\n      for (let item of secStatusList) {\r\n        item[\"selected\"] = value;\r\n        await this.setState({ ...this.state.secStatusList, item });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { isOpenPrintModal, t } = this.props;\r\n    let {\r\n      activeTab,\r\n      staffList,\r\n      formFields,\r\n      siteCodeList,\r\n      bookingList,\r\n      secStatusList,\r\n      employeeSelectAll,\r\n      siteSelectAll,\r\n      bookingSelectAll,\r\n      secStatusSelectAll,\r\n    } = this.state;\r\n\r\n    return (\r\n      <NormalModal\r\n        className={\"printModal\"}\r\n        style={{ minWidth: \"50%\" }}\r\n        modal={isOpenPrintModal}\r\n        handleModal={this.handleDialog}\r\n      >\r\n        <img\r\n          onClick={this.handleDialog}\r\n          className=\"close\"\r\n          src={closeIcon}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"row py-2\">\r\n          <div className=\"col-4 ml-2\">\r\n            <div\r\n              className={`card text-center p-1 print activeColor ${\r\n                activeTab === \"Tab1\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => this.changeTab(\"Tab1\")}\r\n            >\r\n              {t(\"Appointment Report\")}\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col-4 ml-2\">\r\n            <div\r\n              className={`card text-center p-1 activeColor ${\r\n                activeTab === \"Tab2\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => this.changeTab(\"Tab2\")}\r\n            >\r\n              Products\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n        {activeTab === \"Tab1\" ? (\r\n          <>\r\n            <div className=\"d-flex flex-wrap justify-content-start p-3\">\r\n              <div className=\"col-md-6 col-6 mb-3\">\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"From Date\")}{\" \"}\r\n                  <span className=\"error-message text-danger validNo fs-18\">\r\n                    *\r\n                  </span>\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalDate\r\n                    className=\"customer-name status py-1 col-12\"\r\n                    value={new Date(formFields.fromDate)}\r\n                    name=\"fromDate\"\r\n                    type=\"date\"\r\n                    popperPlacement=\"top-right\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"fromDate\",\r\n                  formFields.fromDate,\r\n                  \"required|date\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-6 col-6 mb-3\">\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"To Date\")}{\" \"}\r\n                  <span className=\"error-message text-danger validNo fs-18\">\r\n                    *\r\n                  </span>\r\n                </label>\r\n                <div className=\"\">\r\n                  <NormalDate\r\n                    className=\"customer-name status py-1 col-12\"\r\n                    value={new Date(formFields.toDate)}\r\n                    name=\"toDate\"\r\n                    type=\"date\"\r\n                    onChange={this.handleChange}\r\n                    popperPlacement=\"top-right\"\r\n                    minDate={new Date(formFields.fromDate)}\r\n                    showDisabledMonthNavigation\r\n                  />\r\n                </div>\r\n                {this.validator.message(\r\n                  \"toDate\",\r\n                  formFields.toDate,\r\n                  \"required|date\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-6 col-6 mb-3\">\r\n                <div className=\"row mb-4 mt-2 mx-3\">\r\n                  <div className={`row`}>\r\n                    <div>\r\n                      <NormalCheckbox\r\n                        onChange={e => this.handleSelectAllCheckbox(e)}\r\n                        value={employeeSelectAll}\r\n                        name=\"employeeSelectAll\"\r\n                        checked={employeeSelectAll}\r\n                      />\r\n                    </div>\r\n                    <div>{t(\"Employee Name\")}</div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-12 col-12 response-table fw-500 multiselectList-height fs-13\">\r\n                    {staffList && staffList.length > 0 ? (\r\n                      staffList.map((item, index) => {\r\n                        return (\r\n                          <div\r\n                            className={`d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${\r\n                              item.selected ? \"active\" : \"\"\r\n                            } `}\r\n                            key={item.value}\r\n                          >\r\n                            <div className=\"col-3 text-center\">\r\n                              <NormalCheckbox\r\n                                onChange={e => this.handleCheckbox(e, item)}\r\n                                value={item.selected}\r\n                                name=\"Staff\"\r\n                                checked={item.selected}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-8\">{item.label}</div>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div className=\"text-center w-100\"></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-6 mb-3\">\r\n                <div className=\"row mb-4 mt-2 mx-3\">\r\n                  <div className=\"row\">\r\n                    <div>\r\n                      <NormalCheckbox\r\n                        onChange={e => this.handleSelectAllCheckbox(e)}\r\n                        value={siteSelectAll}\r\n                        name=\"siteSelectAll\"\r\n                        checked={siteSelectAll}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      {t(\"Site\")} {t(\"Code\")}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12 col-12 response-table fw-500 multiselectList-height fs-13\">\r\n                    {siteCodeList && siteCodeList.length > 0 ? (\r\n                      siteCodeList.map((item, index) => {\r\n                        return (\r\n                          <div\r\n                            className={`d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${\r\n                              item.selected ? \"active\" : \"\"\r\n                            } `}\r\n                            key={index}\r\n                          >\r\n                            <div className=\"col-3 text-center\">\r\n                              <NormalCheckbox\r\n                                onChange={e => this.handleCheckbox(e, item)}\r\n                                value={item.selected}\r\n                                name=\"Site\"\r\n                                checked={item.selected}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-8\">{item.label}</div>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div className=\"text-center w-100\"></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-6 mb-3\">\r\n                <div className=\"row mb-2 mx-3\">\r\n                  <div className=\"row\">\r\n                    <div>\r\n                      <NormalCheckbox\r\n                        onChange={e => this.handleSelectAllCheckbox(e)}\r\n                        value={bookingSelectAll}\r\n                        name=\"bookingSelectAll\"\r\n                        checked={bookingSelectAll}\r\n                      />\r\n                    </div>\r\n                    <div>{t(\"Booking Status\")}</div>\r\n                  </div>\r\n                  <div className=\"col-md-12 col-12 response-table fw-500 multiselectList-height fs-13\">\r\n                    {bookingList && bookingList.length > 0 ? (\r\n                      bookingList.map((item, index) => {\r\n                        return (\r\n                          <div\r\n                            className={`d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${\r\n                              item.selected ? \"active\" : \"\"\r\n                            } `}\r\n                            key={item.value}\r\n                          >\r\n                            <div className=\"col-3 text-center\">\r\n                              <NormalCheckbox\r\n                                onChange={e => this.handleCheckbox(e, item)}\r\n                                value={item.selected}\r\n                                name=\"Booking\"\r\n                                checked={item.selected}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-8\">{item.label}</div>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div className=\"text-center w-100\"></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-6 mb-3\">\r\n                <div className=\"row mb-2 mx-3\">\r\n                  <div className=\"row\">\r\n                    <div>\r\n                      <NormalCheckbox\r\n                        onChange={e => this.handleSelectAllCheckbox(e)}\r\n                        value={secStatusSelectAll}\r\n                        name=\"secStatusSelectAll\"\r\n                        checked={secStatusSelectAll}\r\n                      />\r\n                    </div>\r\n                    <div>{t(\"Secondary Status\")}</div>\r\n                  </div>\r\n                  <div className=\"col-md-12 col-12 response-table fw-500 multiselectList-height fs-13\">\r\n                    {secStatusList && secStatusList.length > 0 ? (\r\n                      secStatusList.map((item, index) => {\r\n                        return (\r\n                          <div\r\n                            className={`d-flex justify-content-start m-0 table-body w-100 p-1 border border-secondary staff-sort-list ${\r\n                              item.selected ? \"active\" : \"\"\r\n                            } `}\r\n                            key={item.value}\r\n                          >\r\n                            <div className=\"col-3 text-center\">\r\n                              <NormalCheckbox\r\n                                onChange={e => this.handleCheckbox(e, item)}\r\n                                value={item.selected}\r\n                                name=\"Sec_status\"\r\n                                checked={item.selected}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-8\">{item.label}</div>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div className=\"text-center w-100\"></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-end\">\r\n              <div className=\"col-2\">\r\n                <NormalButton\r\n                  buttonClass={\"w-100  p-0\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label={`Pdf`}\r\n                  outline={false}\r\n                  onClick={() => this.sendAppointmentListPrint(\"Pdf\")}\r\n                />\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <NormalButton\r\n                  buttonClass={\"w-100  p-0\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label={`Excel`}\r\n                  outline={false}\r\n                  onClick={() => this.sendAppointmentListPrint(\"Excel\")}\r\n                />\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <NormalButton\r\n                  buttonClass={\"w-100 p-0\"}\r\n                  mainbg={true}\r\n                  className=\"confirm\"\r\n                  label={`Cancel`}\r\n                  outline={false}\r\n                  onClick={this.handleDialog}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </NormalModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getCommonApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const PrintModal = withTranslation()(\r\n  connect(null, mapDispatchToProps)(PrintModalClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}