{"ast":null,"code":"var _jsxFileName = \"F:\\\\webfe\\\\src\\\\component\\\\Admin\\\\Cart\\\\treatmentDone\\\\treatment.js\";\nimport React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { NormalButton, NormalInput, NormalSelect, InputSearch, NormalModal, TableWrapper, NormalCheckbox, Pagination } from \"component/common\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport _ from \"lodash\";\nimport { history } from \"helpers\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCommonApi, updateForm, commonCreateApi, commonDeleteApi, commonPatchApi } from \"redux/actions/common\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { SelectStaff } from \"./treatmentDone\";\nimport { Reversal } from \"./reversal\";\nimport service from \"assets/images/make-up-brush.png\"; // import Discount from './cart/discount';\n\nimport closeIcon from \"assets/images/close.png\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport { TreatmentHistoryCart } from \"./TreatmentHistoryCart\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { Toast } from \"service/toast\";\nimport { withTranslation } from \"react-i18next\";\nimport { max } from \"moment\";\nimport { CredentialConfirmation } from \"../credentialConfirmation\";\nexport class TreatmentDoneClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tstaffList: [],\n      headerDetails: [{\n        label: \"Branch\"\n      }, {\n        label: \"Date\",\n        sortKey: false,\n        width: \"110px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Treatment\",\n        width: \"120px\"\n      }, {\n        label: \"Trans Ref\",\n        sortKey: false,\n        width: \"50px\"\n      }, //{ label: 'Type', sortKey: false, width: \"55px\" },\n      // { label: 'Exp-Date', sortKey: false, width: \"80px\" },\n      {\n        label: \"Amount\",\n        sortKey: false,\n        width: \"50px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Treat-Code\",\n        sortKey: false,\n        width: \"105px\"\n      }, {\n        label: \"TD\",\n        sortKey: false,\n        width: \"55px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Rev\",\n        sortKey: false,\n        width: \"55px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Open\",\n        sortKey: false,\n        width: \"55px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"AR\",\n        sortKey: false,\n        width: \"35px\",\n        divClass: \"justify-content-end text-right\"\n      }, {\n        label: \"Session\",\n        sortKey: false,\n        width: \"55px\",\n        divClass: \"justify-content-center\"\n      }, {\n        label: \"Redeem\",\n        sortKey: false,\n        width: \"55px\",\n        divClass: \"justify-content-center\"\n      }, {\n        label: \"Reversal\",\n        sortKey: false,\n        width: \"55px\",\n        divClass: \"justify-content-center\"\n      }, {\n        label: \"Exchange\",\n        sortKey: false,\n        width: \"55px\",\n        divClass: \"justify-content-end text-right\"\n      }],\n      // cartData: {},\n      yearList: [{\n        label: \"All\",\n        value: \"All\"\n      }, {\n        label: \"Default\",\n        value: \"Default\"\n      } //{ //Yoonus\n      //  label: \"Expiry\",\n      //  value: \"Expiry\",\n      //},\n      ],\n      selectedYear: \"Default\",\n      //All //Yoonus\n      isOpenTreatmentDone: false,\n      tsStaff: {},\n      workPoint: 0,\n      isOpenReversal: false,\n      checkBoxConfirmReversal: [],\n      selectedSession: \"\",\n      selectedItemTreatmentIds: [],\n      activeMenu: \"treatmentdone\",\n      productCard: [],\n      list: [],\n      isOpenExchangeService: false,\n      page: 1,\n      rangeId: \"\",\n      menuId: \"\",\n      rangeName: \"\",\n      rangeOption: [],\n      ExchangeItem: {},\n      SelectedExchangeItem: {},\n      cust_data: {},\n      mainMeta: {},\n      isLoginConfirmation: false,\n      selectedItem: {},\n      selectedType: \"\"\n    };\n\n    this.componentDidMount = () => {\n      this.getCart({});\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 9\n          }\n        }, message),\n        autoForceUpdate: this\n      }); //Yoonus adding back\n\n      this.props.getCommonApi(\"treatmentdone/Year/\").then(key => {\n        let {\n          status,\n          data\n        } = key;\n        let {\n          yearList\n        } = this.state;\n\n        for (let value of data) {\n          yearList.push({\n            value: value,\n            label: value\n          });\n        }\n\n        this.setState({\n          yearList\n        });\n      });\n    };\n\n    this.handleCheckboxChangeWithNormalCheckBox = item => {\n      let newArray = [...this.state.checkBoxConfirmReversal, item.target.name];\n\n      if (this.state.checkBoxConfirmReversal.includes(item.target.name)) {\n        newArray = newArray.filter(day => day !== item.target.name);\n      }\n\n      this.setState({\n        checkBoxConfirmReversal: newArray\n      });\n    };\n\n    this.getCart = async data => {\n      console.log(this.props, \"sfgdfsgdfghgf\");\n      let {\n        roomList,\n        sourceList,\n        staffList,\n        cartData,\n        duration,\n        tstaffList,\n        selectedYear,\n        cust_data,\n        mainMeta\n      } = this.state;\n      let custId = \"\";\n\n      if (this.props.match.params.id) {\n        custId = this.props.match.params.id;\n      } else {\n        custId = this.props.basicApptDetail.custId;\n      }\n\n      let {\n        page = 1,\n        limit = 12,\n        search = \"\"\n      } = data;\n      this.props.getCommonApi(`treatmentdone/?year=${selectedYear}&cust_id=${custId}&page=${page}&limit=${limit}`).then(async key => {\n        await this.setState({\n          tstaffList: [],\n          mainMeta: {}\n        });\n        cartData = key;\n        let {\n          data,\n          cust_data\n        } = key;\n        console.log(key, \"Service Redeem List data\");\n        tstaffList = data.dataList;\n        cust_data = cust_data;\n        mainMeta = data.meta.pagination;\n        await this.setState({\n          tstaffList,\n          mainMeta,\n          cust_data\n        });\n\n        if (cust_data) {\n          let formFields = {};\n          formFields[\"custId\"] = this.props.match.params.id;\n          formFields[\"custName\"] = cust_data.cust_name;\n          formFields[\"cust_refer\"] = cust_data.cust_refer;\n          await this.props.updateForm(\"basicApptDetail\", formFields);\n        }\n      });\n    };\n\n    this.handleYearChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        selectedYear,\n        records\n      } = this.state;\n      selectedYear = value;\n      records = [];\n      await this.setState({\n        selectedYear,\n        records\n      });\n      this.getCart({});\n    };\n\n    this.getDataFromRes = data => {\n      let {\n        formFields,\n        cartData,\n        updateFields,\n        postFields\n      } = this.state;\n      formFields[\"Item\"] = data.value.Item;\n      formFields[\"Price\"] = data.value.Price;\n      formFields[\"Room\"] = data.value.Room;\n      updateFields[\"Room\"] = data.value.Room;\n      formFields[\"Source\"] = data.value.Source;\n      updateFields[\"Source\"] = data.value.Source;\n      formFields[\"add_duration\"] = data.value.add_duration;\n      formFields[\"new_remark\"] = data.value.new_remark;\n      updateFields[\"new_remark\"] = data.value.new_remark;\n      postFields[\"times\"] = data.value.times;\n      postFields[\"work_point\"] = data.value.work_point;\n      this.setState({\n        formFields,\n        updateFields,\n        postFields\n      });\n    };\n\n    this.handleSubmit = id => {};\n\n    this.handleDialog = () => {\n      this.setState({\n        isOpenTreatmentDone: false,\n        isOpenReversal: false,\n        checkBoxConfirmReversal: [],\n        isOpenExchangeService: false,\n        isHandleExchangeConfirmation: false,\n        records: []\n      });\n      this.getCart({});\n    };\n\n    this.handleSearch = event => {\n      event.persist();\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(() => {\n          let searchString = event.target.value;\n          this.props.getCommonApi(`custappt/?search=${searchString}`).then(key => {\n            let {\n              status,\n              data\n            } = key;\n\n            if (status === 200) {\n              // for (let value of data) {\n              //     customerList.push({ value: value.id, label: value.emp_name })\n              // }\n              this.setState({\n                customerOption: data\n              });\n            }\n          });\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.handleCartCreated = (data, price, id) => {\n      let {\n        basicApptDetail\n      } = this.props;\n      let {\n        tstaffList\n      } = this.state;\n      let payload = [];\n\n      for (let key of tstaffList) {\n        let reverseTreatmentIds = []; //reverseTreatmentIds = key.treatmentids.reverse();\n\n        let ItemTreatmentIds = key.treatmentids;\n        reverseTreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\n\n        if (key.sel === true) {\n          let obj = {\n            cust_noid: this.props.match.params.id,\n            cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\n            itemcodeid: key.stockid,\n            price: key.unit_amount,\n            item_uom: null,\n            treatment_account: key.TreatmentAccountid,\n            treatment: reverseTreatmentIds.slice(0, key.session),\n            ori_stockid: null\n          };\n          payload.push(obj);\n        }\n      }\n\n      if (payload.length > 0) {\n        let test = payload;\n        console.log(\"payload-data\", test);\n        this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${this.props.match.params.id}`).then(res => {\n          if (res.data.length === 0) {\n            this.props.commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload).then(res => {\n              // this.props.handleCartCreated()\n              this.setState({\n                activeTab: \"treatment\",\n                isOpenPriceModal: false\n              });\n              history.push(\"/admin/cart\");\n            });\n          } else {\n            this.props.commonCreateApi(`itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`, payload).then(res => {\n              // this.props.handleCartCreated()\n              this.setState({\n                activeTab: \"treatment\",\n                isOpenPriceModal: false\n              });\n              history.push(\"/admin/cart\");\n            });\n          }\n        });\n      }\n    };\n\n    this.handleCheckout = () => {\n      let {\n        isOpenPayment\n      } = this.state;\n      isOpenPayment = true;\n      this.setState({\n        isOpenPayment\n      });\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      }); // this.props.updateForm('customerDetail', formFields)\n      // await this.props.updateForm('appointmentCustomerDetail', formFields)\n    };\n\n    this.handlePostChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        postFields\n      } = this.state;\n      postFields[name] = value;\n      await this.setState({\n        postFields\n      });\n    };\n\n    this.handleUpdateChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        updateFields\n      } = this.state;\n      updateFields[name] = value;\n      await this.setState({\n        updateFields\n      });\n      let event = {\n        target: {\n          value: value,\n          name: name\n        }\n      }; // this.handleUpdatestaff(event);\n    };\n\n    this.handleAddstaff = async item => {\n      if (item.is_allow) {\n        let {\n          tstaffList,\n          selectedSession,\n          selectedItemTreatmentIds\n        } = this.state;\n        selectedSession = item.session; // let reverseTreatmentIds = [];\n        // reverseTreatmentIds = item.treatmentids.reverse();\n\n        let ItemTreatmentIds = item.treatmentids;\n        let reverseTreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\n\n        if (selectedSession == 0) {\n          selectedSession = 1;\n        }\n\n        selectedItemTreatmentIds = reverseTreatmentIds.slice(0, selectedSession);\n        var unit_rate = item.unit_amount;\n        var qualifiedAmount = selectedSession * unit_rate;\n        this.setState({\n          selectedSession,\n          selectedItemTreatmentIds\n        });\n        /* let test=0;\r\n          const currentParentCodeBalance = tstaffList.filter(\r\n              (res) => res.treatment_parentcode ===  item.treatment_parentcode\r\n            ).reduce((sum, currentValue) => {\r\n              return  currentValue.balance;\r\n            }, 0);\r\n          const currentParentCodeSelectedStaffValue = tstaffList.filter(\r\n              (res) => res.treatment_parentcode ===  item.treatment_parentcode && res.staff!=null\r\n              ).reduce((sum, currentValue) => {\r\n                  return parseFloat((eval(sum))) + parseFloat((eval(currentValue.unit_amount)));\r\n                }, 0);\r\n          \r\n          if(item.staff==null)\r\n          {\r\n              test=parseFloat((eval(currentParentCodeSelectedStaffValue))) + parseFloat((eval(item.unit_amount))) ;\r\n          }\r\n          else{\r\n              test=parseFloat((eval(currentParentCodeSelectedStaffValue))) - parseFloat((eval(item.unit_amount))) ;\r\n          }\r\n          */\n        //if (currentParentCodeBalance >= test) {\n        // if (item.balance >= qualifiedAmount) {\n        //   let { tstaffList, formFields, cartData, postFields } = this.state;\n        //   await this.setState({ tsStaff: item });\n        //   this.setState({\n        //     isOpenTreatmentDone: true,\n        //   });\n        // } else {\n        //   this.handleDialog();\n        //   Toast({\n        //     type: \"error\",\n        //     message: \"Insufficient balance to redeem\",\n        //   });\n        // }\n\n        await this.setState({\n          tsStaff: item\n        });\n        this.setState({\n          isOpenTreatmentDone: true\n        });\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"Treatment done is not allowed in other outlets\"\n        });\n      }\n    };\n\n    this.handleUpdatestaff = async (event, item, index) => {\n      let {\n        tstaffList,\n        formFields,\n        cartData,\n        updateFields\n      } = this.state;\n      tstaffList[index][event.target.name] = event.target.value;\n      this.setState({\n        tstaffList\n      });\n      let data = {};\n\n      if (event.target.name === \"appt_fr_time\") {\n        data = {\n          appt_fr_time: event.target.value,\n          add_duration: formFields[\"add_duration\"]\n        };\n      }\n\n      if (event.target.name === \"add_duration\") {\n        data = {\n          appt_fr_time: item.appt_fr_time,\n          add_duration: event.target.value\n        };\n      } // if (updateFields.Source && updateFields.Room) {\n\n\n      this.props.commonPatchApi(`tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`, data).then(() => {\n        this.getCart({});\n      }); // } else {\n      //     this.setState({ showUpdateError: true })\n      // }\n    };\n\n    this.handleClearLine = () => {\n      this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=0&cartid=${this.props.cartId}`).then(() => {\n        this.getCart({});\n      });\n    };\n\n    this.handleClearAll = () => {\n      this.props.commonDeleteApi(`tmpitemhelper/delete/?clear_all=1&cartid=${this.props.cartId}`).then(() => {\n        let {\n          formFields,\n          postFields\n        } = this.state;\n        formFields[\"work_point\"] = \"\";\n        postFields[\"times\"] = \"\";\n        this.setState({\n          formFields,\n          postFields\n        });\n        this.getCart({});\n      });\n    };\n\n    this.handleReversalTreatmentAll = async () => {\n      let treatmentIds = this.state.checkBoxConfirmReversal;\n      await this.setState({\n        treatmentIds\n      });\n      this.setState({\n        isOpenReversal: true\n      });\n    };\n\n    this.handleReversalTreatment = async () => {\n      //debugger;\n      let {\n        selectedItem\n      } = this.state;\n      let item = selectedItem;\n\n      if (item.is_allow) {\n        let reverseTreatmentIds = [];\n        let {\n          selectedSession\n        } = this.state;\n        selectedSession = item.session;\n        let ItemTreatmentIds = item.treatmentids;\n        let TreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\n\n        if (selectedSession == 0) {\n          selectedSession = 1;\n        }\n\n        reverseTreatmentIds = TreatmentIds.slice(0, selectedSession);\n        await this.setState({\n          treatmentIds: reverseTreatmentIds,\n          selectedSession\n        });\n        this.setState({\n          isOpenReversal: true\n        });\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"You are not allowed to do this transaction\"\n        });\n      }\n    };\n\n    this.handleReverse = (item, index) => {\n      let {\n        tstaffList\n      } = this.state;\n      tstaffList[index][\"rev\"] = true;\n      this.setState({\n        tstaffList\n      }); // onClick={this.handleReversalTreatment}\n    };\n\n    this.changeIndexSession = (index, value, item) => {\n      if (item.is_allow) {\n        if (Number(value) <= Number(item.open)) {\n          let {\n            tstaffList\n          } = this.state;\n          tstaffList[index][\"session\"] = value;\n          this.setState({\n            tstaffList\n          });\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Please enter valid session\"\n          });\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"You are not allowed to do this transaction\"\n        });\n      }\n    };\n\n    this.toggle = tab => {\n      if (this.state.activeMenu !== tab) {\n        this.setState({\n          activeMenu: tab\n        });\n      }\n    };\n\n    this.getServices = query => {\n      let {\n        page = this.state.page,\n        menuId = this.state.menuId,\n        rangeId = this.state.rangeId\n      } = query;\n      this.props.getCommonApi(`servicestock/?Item_Deptid=${menuId}&page=${page}&Item_Rangeid=${rangeId}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          this.setState({\n            productCard: data,\n            list: data.dataList\n          });\n        }\n      });\n    };\n\n    this.getMenus = () => {\n      let {\n        menuOption\n      } = this.state;\n      menuOption = [];\n      console.log(\"sdfsdhfghjghj\", this.props);\n      this.props.getCommonApi(`catalogitemdept/?Item_Dept=${`SERVICE`}`).then(res => {\n        // activeMenu = []\n        console.log(\"sdfsdhfghjghj ress\", res);\n\n        for (let key of res.data) {\n          menuOption.push({\n            value: key.id,\n            label: key.itm_desc,\n            code: key.itm_code,\n            seq: key.itm_seq\n          });\n        }\n\n        this.setState({\n          menuOption\n        });\n      });\n    };\n\n    this.getRange = () => {\n      let {\n        rangeOption,\n        menuId\n      } = this.state;\n      rangeOption = [];\n      this.props.getCommonApi(`catalogitemrange?Item_Deptid=${menuId}`).then(res => {\n        // activeMenu = []\n        for (let key of res.data) {\n          rangeOption.push({\n            value: key.id,\n            label: key.itm_desc\n          });\n        }\n\n        this.setState({\n          rangeOption\n        });\n      });\n    };\n\n    this.handleauthentication = async (user, pass) => {\n      let Body = {\n        username: user,\n        password: pass\n      };\n      let {\n        selectedType\n      } = this.state;\n      this.props.commonCreateApi(`userauthorizationpopup/`, Body).then(async key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status == 200) {\n          await this.setState(prevState => ({\n            isLoginConfirmation: !prevState.isLoginConfirmation\n          }));\n\n          if (selectedType == \"reversal\") {\n            this.handleReversalTreatment();\n          } else {\n            this.handleExchangeClick();\n          }\n        }\n      });\n    };\n\n    this.handleExchangeClick = async () => {\n      let {\n        selectedItem\n      } = this.state;\n      let item = selectedItem;\n\n      if (item.is_allow) {\n        if (item.sel) {\n          await this.setState({\n            ExchangeItem: []\n          });\n          this.getMenus();\n          this.getRange();\n          this.getServices({});\n          await this.setState({\n            isOpenExchangeService: true,\n            ExchangeItem: item\n          });\n          console.log(this.state.ExchangeItem, \"selected row of treatment done data - exchange item\");\n        } else {\n          Toast({\n            type: \"error\",\n            message: \"Select Staff should not be empty\"\n          });\n        }\n      } else {\n        Toast({\n          type: \"error\",\n          message: \"You are not allowed to do this transaction\"\n        });\n      }\n    };\n\n    this.handlePagination = async page => {\n      await this.setState({\n        page: page\n      });\n      this.getServices({\n        page: page\n      });\n    };\n\n    this.handlemainPagination = page => {\n      this.getCart(page);\n    };\n\n    this.handleMenuChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let menuId = Object.assign({}, this.state.menuId);\n      menuId = value;\n      await this.setState({\n        menuId\n      });\n      this.getRange();\n      this.getServices({});\n    };\n\n    this.handleRangeChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let rangeId = Object.assign({}, this.state.rangeId);\n      let rangeName = Object.assign({}, this.state.rangeName);\n      let {\n        rangeOption\n      } = this.state;\n      rangeId = value;\n\n      for (let key of rangeOption) {\n        if (key.value == value) {\n          rangeName = key.label;\n        }\n      }\n\n      await this.setState({\n        rangeId,\n        rangeName\n      });\n      this.getServices({});\n    };\n\n    this.handleSelectedService = async data => {\n      let {\n        ExchangeItem\n      } = this.state;\n      await this.setState({\n        SelectedExchangeItem: data\n      });\n\n      if (Number(data.item_price) > Number(ExchangeItem.unit_amount)) {\n        this.setState({\n          isHandleExchangeConfirmation: true\n        });\n      } else {\n        this.handleExchangePostAction();\n      }\n    };\n\n    this.handleExchangePostAction = () => {\n      let {\n        basicApptDetail\n      } = this.props;\n      let {\n        ExchangeItem,\n        SelectedExchangeItem\n      } = this.state;\n      let payload = [];\n      let obj = {\n        cust_noid: this.props.match.params.id,\n        cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\n        itemcodeid: SelectedExchangeItem.id,\n        price: ExchangeItem.unit_amount,\n        item_uom: null,\n        treatment_account: ExchangeItem.TreatmentAccountid,\n        treatment: ExchangeItem.id,\n        ori_stockid: ExchangeItem.stockid\n      };\n      payload.push(obj);\n      console.log(payload, \"exchange input\");\n      this.props.getCommonApi(`itemcart/Check/?cart_date=${dateFormat(new Date(), \"yyyy-mm-dd\")}&cust_noid=${this.props.match.params.id}`).then(res => {\n        if (res.data.length === 0) {\n          this.props.commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload).then(res => {\n            console.log(res, \"result of exchnage final click\");\n            this.setState({\n              activeTab: \"treatment\",\n              isOpenExchangeService: false\n            });\n            history.push(\"/admin/cart\");\n          });\n        } else {\n          this.props.commonCreateApi(`itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`, payload).then(res => {\n            // this.props.handleCartCreated()\n            this.setState({\n              activeTab: \"treatment\",\n              isOpenExchangeService: false\n            });\n            history.push(\"/admin/cart\");\n          });\n        }\n      });\n    };\n\n    this.handleDialogExchangeConfirm = () => {\n      this.setState({\n        isHandleExchangeConfirmation: false,\n        SelectedExchangeItem: {}\n      });\n    };\n\n    this.handleLoginConfirmationDialog = async (item, type) => {\n      debugger;\n      let {\n        tokenDetails\n      } = this.props;\n      let selectedItem = {};\n      let selectedType = \"\";\n      selectedItem = item;\n      selectedType = type;\n      await this.setState({\n        selectedItem,\n        selectedType\n      });\n\n      if (selectedType == \"reversal\") {\n        if (tokenDetails.reversalusernamepopup) {\n          //reversal flag update based on backend api response\n          await this.setState(prevState => ({\n            isLoginConfirmation: !prevState.isLoginConfirmation\n          }));\n        } else {\n          this.handleReversalTreatment();\n        }\n      } else {\n        if (tokenDetails.exchangetdusernamepopup) {\n          //exchange flag update based on backend api response\n          await this.setState(prevState => ({\n            isLoginConfirmation: !prevState.isLoginConfirmation\n          }));\n        } else {\n          this.handleExchangeClick();\n        }\n      }\n    };\n  }\n\n  render() {\n    let {\n      productCard = {},\n      list,\n      tstaffList = [],\n      selectedYear,\n      yearList,\n      isOpenTreatmentDone,\n      headerDetails,\n      tsStaff,\n      isOpenReversal,\n      treatmentIds,\n      activeMenu,\n      isOpenExchangeService,\n      menuOption,\n      menuId,\n      rangeOption,\n      rangeId,\n      isHandleExchangeConfirmation,\n      ExchangeItem,\n      SelectedExchangeItem,\n      cust_data,\n      mainMeta,\n      isLoginConfirmation\n    } = this.state;\n    let localtStaffList = [...tstaffList];\n    let {\n      basicApptDetail,\n      t,\n      tokenDetails\n    } = this.props;\n    let {\n      dataList = [],\n      meta = {}\n    } = productCard;\n    let {\n      pagination\n    } = meta;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatmentDone-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"beautesoft-navlink customer-detail mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filled-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"treatmentdone\"\n      }),\n      onClick: () => {\n        this.toggle(\"treatmentdone\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 23\n      }\n    }, t(\"Treatment Done\"))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeMenu === \"treatmenthistory\"\n      }),\n      onClick: () => {\n        this.toggle(\"treatmenthistory\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 23\n      }\n    }, t(\"Treatment History\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \"fs-15 clear-line\",\n      label: \"Back\",\n      outline: false,\n      onClick: () => history.push(`/admin/cart`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatment-section ml-1 p-2 pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"treatmentdone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 13\n      }\n    }, activeMenu === \"treatmentdone\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row treatment-done-new p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-18 font-700 mb-3 title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 21\n      }\n    }, t(\"Available Treatments\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex select-year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-0 mb-2 name fs-16 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 23\n      }\n    }, t(\"Select Year\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: yearList,\n      value: selectedYear,\n      name: \"selectedYear\",\n      onChange: this.handleYearChange,\n      className: \"selected-year mb-2 py-0 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 29\n      }\n    }, t(\"Customer Name\"), \" : \", cust_data.cust_name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 29\n      }\n    }, t(\"Reference\"), \" : \", cust_data.cust_refer)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `col-12 cart-item`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `item-list`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      headerDetails: headerDetails,\n      queryHandler: this.handlemainPagination,\n      pageMeta: mainMeta // isEmpty={tstaffList.length === 0 ? true:false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 25\n      }\n    }, tstaffList.length > 0 ? tstaffList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-left ${!item.iscurrentloggedinsalon ? \"text-danger\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 39\n        }\n      }, item.site_code)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"position-relative status-type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 39\n        }\n      }, item.treatment_date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 39\n        }\n      }, item.course)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 39\n        }\n      }, item.transacno_ref)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 39\n        }\n      }, item.unit_amount)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-left`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 39\n        }\n      }, item.treatment_code)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 39\n        }\n      }, item.td)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 39\n        }\n      }, item.rev)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 39\n        }\n      }, item.open)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `text-right`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 39\n        }\n      }, item.ar)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        style: {\n          width: \"50px\" // textAlign: \"right\",\n\n        },\n        value: item.session,\n        onChange: e => this.changeIndexSession(index, e.target.value, item),\n        className: `text-right`,\n        min: `0`,\n        max: item.open,\n        disabled: item.session_flag && item.session !== Number(0) ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnRedeem\",\n        onClick: () => this.handleAddstaff(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 39\n        }\n      }, t(\"Select\"))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 37\n        }\n      }, item.iscurrentloggedinsalon || item.is_reversal && item.is_allow ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnReversal\" // onClick={() =>\n        //   this.handleReversalTreatment(item)\n        // }\n        ,\n        onClick: () => this.handleLoginConfirmationDialog(item, \"reversal\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 41\n        }\n      }, t(\"Select\")) : null), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 37\n        }\n      }, item.exchange_flag && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnExchange\",\n        label: \"Exchange\",\n        onClick: () => this.handleLoginConfirmationDialog(item, \"exchange\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 41\n        }\n      }, t(\"Select\"))));\n    }) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 pt-4 action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1162,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      buttonClass: \"mx-2\",\n      mainbg: true,\n      className: \" fs-15 confirm\",\n      label: \"Confirm Treatment Done\",\n      outline: false,\n      onClick: () => this.handleCartCreated(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 29\n      }\n    })))))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-exchange\",\n      style: {\n        minWidth: \"70%\"\n      },\n      modal: isOpenExchangeService,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 input-group pl-2 range-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: menuOption,\n      value: menuId,\n      name: \"menuId\",\n      onChange: this.handleMenuChange,\n      className: \"py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 input-group range-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: rangeOption,\n      value: rangeId,\n      name: \"rangeId\",\n      onChange: this.handleRangeChange,\n      className: \"py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 21\n      }\n    }, console.log(list, \"card list\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"services m-0 row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 23\n      }\n    }, list.length > 0 ? list.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 col-12 fs-12 p-2 cursor-pointer\",\n        key: data.id,\n        onClick: () => this.handleSelectedService(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"service-tab p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"service-ttl px-2 font-700 fs-11\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 37\n        }\n      }, data.item_desc), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"price px-2 py-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"non-retail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-orenge font-700\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 41\n        }\n      }, \"$\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-orenge font-700\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 41\n        }\n      }, data.item_price ? Number(data.item_price).toFixed(2) : \"\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"foc-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"32\",\n        height: \"32\",\n        className: \"cursor-pointer\",\n        viewBox: \"0 0 32 32\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1241,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(\"circle\", {\n        cx: \"16\",\n        cy: \"16\",\n        r: \"15.5\",\n        fill: \"rgba(60, 64, 135, 0.31)\",\n        stroke: \"#3C4087\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M3.996 11.456H9.42V12.476H5.22V15.152H9.18V16.172H5.22V20H3.996V11.456ZM14.3243 20.096C13.5163 20.096 12.8123 19.92 12.2123 19.568C11.6203 19.208 11.1603 18.7 10.8323 18.044C10.5123 17.388 10.3523 16.616 10.3523 15.728C10.3523 14.832 10.5123 14.056 10.8323 13.4C11.1523 12.744 11.6123 12.24 12.2123 11.888C12.8123 11.536 13.5163 11.36 14.3243 11.36C15.1403 11.36 15.8443 11.536 16.4362 11.888C17.0363 12.24 17.4963 12.744 17.8163 13.4C18.1363 14.056 18.2963 14.828 18.2963 15.716C18.2963 16.612 18.1363 17.388 17.8163 18.044C17.4963 18.7 17.0363 19.208 16.4362 19.568C15.8363 19.92 15.1323 20.096 14.3243 20.096ZM14.3243 19.088C15.1803 19.088 15.8443 18.796 16.3163 18.212C16.7963 17.628 17.0363 16.796 17.0363 15.716C17.0363 14.644 16.7963 13.82 16.3163 13.244C15.8443 12.66 15.1803 12.368 14.3243 12.368C13.4683 12.368 12.8043 12.66 12.3323 13.244C11.8603 13.82 11.6243 14.644 11.6243 15.716C11.6243 16.796 11.8603 17.628 12.3323 18.212C12.8123 18.796 13.4763 19.088 14.3243 19.088ZM23.7598 20.096C22.9358 20.096 22.2158 19.92 21.5998 19.568C20.9918 19.208 20.5238 18.7 20.1958 18.044C19.8678 17.388 19.7038 16.612 19.7038 15.716C19.7038 14.828 19.8678 14.056 20.1958 13.4C20.5238 12.744 20.9918 12.24 21.5998 11.888C22.2158 11.536 22.9358 11.36 23.7598 11.36C24.3438 11.36 24.8838 11.452 25.3798 11.636C25.8838 11.812 26.3078 12.072 26.6518 12.416L26.2198 13.328C25.8198 13 25.4238 12.764 25.0318 12.62C24.6478 12.468 24.2278 12.392 23.7718 12.392C22.8838 12.392 22.1958 12.68 21.7078 13.256C21.2278 13.832 20.9878 14.652 20.9878 15.716C20.9878 16.788 21.2278 17.616 21.7078 18.2C22.1958 18.776 22.8838 19.064 23.7718 19.064C24.2278 19.064 24.6478 18.992 25.0318 18.848C25.4238 18.696 25.8198 18.456 26.2198 18.128L26.6518 19.04C26.3078 19.384 25.8838 19.648 25.3798 19.832C24.8838 20.008 24.3438 20.096 23.7598 20.096Z\",\n        fill: \"#3C4087\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"images\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: data.Stock_PIC,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 39\n        }\n      }))));\n    }) : \"\", pagination && /*#__PURE__*/React.createElement(Pagination, {\n      handlePagination: this.handlePagination,\n      pageMeta: pagination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-reversal\",\n      style: {\n        minWidth: \"75%\"\n      },\n      modal: isOpenReversal,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Reversal, {\n      id: this.props.match.params.id,\n      treatmentId: tsStaff.id,\n      reversalId: treatmentIds,\n      cartId: this.props.id,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-modal\",\n      style: {\n        minWidth: \"60%\"\n      },\n      modal: isOpenTreatmentDone,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1302,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1308,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SelectStaff, {\n      id: this.state.selectedItemTreatmentIds //id={tsStaff.id}\n      ,\n      session: this.state.selectedSession,\n      cartId: basicApptDetail.cartId,\n      handleModal: this.handleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"transaction-done-reversal\",\n      style: {\n        minWidth: \"432px\"\n      },\n      modal: isHandleExchangeConfirmation,\n      handleModal: this.handleDialogExchangeConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleDialogExchangeConfirm,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 27\n      }\n    }, t(\"Confirmation\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 27\n      }\n    }, t(\"Service Price\"), \" : $\", SelectedExchangeItem.item_price, \"\\xA0\", t(\"larger than\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 27\n      }\n    }, t(\"Previous Service Price\"), \" : $\", ExchangeItem.unit_amount)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1350,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1351,\n        columnNumber: 27\n      }\n    }, t(\"Are you sure want to continue\"), \" ?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Confirm\",\n      mainbg: true,\n      name: \"Exconfirm\",\n      className: `w-100 col-12`,\n      onClick: this.handleExchangePostAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1355,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1363,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(NormalButton, {\n      label: \"Cancel\",\n      resetbg: true,\n      name: \"ExCancel\",\n      className: `w-100 col-12`,\n      onClick: this.handleDialogExchangeConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1364,\n        columnNumber: 29\n      }\n    }))))))) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1379,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1380,\n        columnNumber: 19\n      }\n    }, t(\"No Data Available\"))))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"treatmenthistory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1387,\n        columnNumber: 13\n      }\n    }, activeMenu === \"treatmenthistory\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"treatment-done-new p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1389,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TreatmentHistoryCart, {\n      customerNumber: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1390,\n        columnNumber: 19\n      }\n    })) : null)), /*#__PURE__*/React.createElement(NormalModal, {\n      className: \"d-flex justify-content-center\",\n      style: {\n        minWidth: \"20%\"\n      },\n      modal: isLoginConfirmation,\n      handleModal: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1397,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleLoginConfirmationDialog,\n      className: \"close cursor-pointer\",\n      src: closeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1403,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CredentialConfirmation, {\n      handleLoginSubmit: (user, pass) => this.handleauthentication(user, pass),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1409,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selected_cstomer: state.common.selected_cstomer,\n  basicApptDetail: state.appointment.basicApptDetail,\n  tokenDetails: state.authStore.tokenDetails\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    // getCustomer,\n    getCommonApi,\n    updateForm,\n    commonCreateApi,\n    commonPatchApi,\n    commonDeleteApi\n  }, dispatch);\n};\n\nexport const TreatmentDone = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TreatmentDoneClass));","map":{"version":3,"sources":["F:/webfe/src/component/Admin/Cart/treatmentDone/treatment.js"],"names":["React","Component","NormalButton","NormalInput","NormalSelect","InputSearch","NormalModal","TableWrapper","NormalCheckbox","Pagination","dateFormat","_","history","connect","bindActionCreators","getCommonApi","updateForm","commonCreateApi","commonDeleteApi","commonPatchApi","SimpleReactValidator","SelectStaff","Reversal","service","closeIcon","FormGroup","Label","Input","TreatmentHistoryCart","Nav","NavItem","NavLink","TabContent","TabPane","classnames","Toast","withTranslation","max","CredentialConfirmation","TreatmentDoneClass","state","tstaffList","headerDetails","label","sortKey","width","divClass","yearList","value","selectedYear","isOpenTreatmentDone","tsStaff","workPoint","isOpenReversal","checkBoxConfirmReversal","selectedSession","selectedItemTreatmentIds","activeMenu","productCard","list","isOpenExchangeService","page","rangeId","menuId","rangeName","rangeOption","ExchangeItem","SelectedExchangeItem","cust_data","mainMeta","isLoginConfirmation","selectedItem","selectedType","componentDidMount","getCart","validator","element","message","autoForceUpdate","props","then","key","status","data","push","setState","handleCheckboxChangeWithNormalCheckBox","item","newArray","target","name","includes","filter","day","console","log","roomList","sourceList","staffList","cartData","duration","custId","match","params","id","basicApptDetail","limit","search","dataList","meta","pagination","formFields","cust_name","cust_refer","handleYearChange","records","getDataFromRes","updateFields","postFields","Item","Price","Room","Source","add_duration","new_remark","times","work_point","handleSubmit","handleDialog","isHandleExchangeConfirmation","handleSearch","event","persist","debouncedFn","debounce","searchString","customerOption","handleCartCreated","price","payload","reverseTreatmentIds","ItemTreatmentIds","treatmentids","sort","a","b","sel","obj","cust_noid","cart_date","Date","itemcodeid","stockid","unit_amount","item_uom","treatment_account","TreatmentAccountid","treatment","slice","session","ori_stockid","length","test","res","activeTab","isOpenPriceModal","cart_id","handleCheckout","isOpenPayment","handleChange","handlePostChange","handleUpdateChange","handleAddstaff","is_allow","unit_rate","qualifiedAmount","type","handleUpdatestaff","index","appt_fr_time","handleClearLine","cartId","handleClearAll","handleReversalTreatmentAll","treatmentIds","handleReversalTreatment","TreatmentIds","handleReverse","changeIndexSession","Number","open","toggle","tab","getServices","query","getMenus","menuOption","itm_desc","code","itm_code","seq","itm_seq","getRange","handleauthentication","user","pass","Body","username","password","prevState","handleExchangeClick","handlePagination","handlemainPagination","handleMenuChange","Object","assign","handleRangeChange","handleSelectedService","item_price","handleExchangePostAction","handleDialogExchangeConfirm","handleLoginConfirmationDialog","tokenDetails","reversalusernamepopup","exchangetdusernamepopup","render","localtStaffList","t","active","map","iscurrentloggedinsalon","site_code","treatment_date","course","transacno_ref","treatment_code","td","rev","ar","e","session_flag","is_reversal","exchange_flag","minWidth","item_desc","toFixed","Stock_PIC","mapStateToProps","selected_cstomer","common","appointment","authStore","mapDispatchToProps","dispatch","TreatmentDone"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport {\r\n  NormalButton,\r\n  NormalInput,\r\n  NormalSelect,\r\n  InputSearch,\r\n  NormalModal,\r\n  TableWrapper,\r\n  NormalCheckbox,\r\n  Pagination,\r\n} from \"component/common\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport _ from \"lodash\";\r\nimport { history } from \"helpers\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCommonApi,\r\n  updateForm,\r\n  commonCreateApi,\r\n  commonDeleteApi,\r\n  commonPatchApi,\r\n} from \"redux/actions/common\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { SelectStaff } from \"./treatmentDone\";\r\nimport { Reversal } from \"./reversal\";\r\nimport service from \"assets/images/make-up-brush.png\";\r\n// import Discount from './cart/discount';\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\nimport { TreatmentHistoryCart } from \"./TreatmentHistoryCart\";\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport { Toast } from \"service/toast\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { max } from \"moment\";\r\nimport { CredentialConfirmation } from \"../credentialConfirmation\";\r\n\r\nexport class TreatmentDoneClass extends Component {\r\n  state = {\r\n    tstaffList: [],\r\n    headerDetails: [\r\n      { label: \"Branch\" },\r\n      {\r\n        label: \"Date\",\r\n        sortKey: false,\r\n        width: \"110px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      { label: \"Treatment\", width: \"120px\" },\r\n      { label: \"Trans Ref\", sortKey: false, width: \"50px\" },\r\n\r\n      //{ label: 'Type', sortKey: false, width: \"55px\" },\r\n      // { label: 'Exp-Date', sortKey: false, width: \"80px\" },\r\n      {\r\n        label: \"Amount\",\r\n        sortKey: false,\r\n        width: \"50px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n\r\n      {\r\n        label: \"Treat-Code\",\r\n        sortKey: false,\r\n        width: \"105px\",\r\n      },\r\n      {\r\n        label: \"TD\",\r\n        sortKey: false,\r\n        width: \"55px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Rev\",\r\n        sortKey: false,\r\n        width: \"55px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Open\",\r\n        sortKey: false,\r\n        width: \"55px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"AR\",\r\n        sortKey: false,\r\n        width: \"35px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n      {\r\n        label: \"Session\",\r\n        sortKey: false,\r\n        width: \"55px\",\r\n        divClass: \"justify-content-center\",\r\n      },\r\n      {\r\n        label: \"Redeem\",\r\n        sortKey: false,\r\n        width: \"55px\",\r\n        divClass: \"justify-content-center\",\r\n      },\r\n      {\r\n        label: \"Reversal\",\r\n        sortKey: false,\r\n        width: \"55px\",\r\n        divClass: \"justify-content-center\",\r\n      },\r\n      {\r\n        label: \"Exchange\",\r\n        sortKey: false,\r\n        width: \"55px\",\r\n        divClass: \"justify-content-end text-right\",\r\n      },\r\n    ],\r\n    // cartData: {},\r\n    yearList: [\r\n      {\r\n        label: \"All\",\r\n        value: \"All\",\r\n      },\r\n      {\r\n        label: \"Default\",\r\n        value: \"Default\",\r\n      },\r\n      //{ //Yoonus\r\n      //  label: \"Expiry\",\r\n      //  value: \"Expiry\",\r\n      //},\r\n    ],\r\n    selectedYear: \"Default\", //All //Yoonus\r\n    isOpenTreatmentDone: false,\r\n    tsStaff: {},\r\n    workPoint: 0,\r\n    isOpenReversal: false,\r\n    checkBoxConfirmReversal: [],\r\n    selectedSession: \"\",\r\n    selectedItemTreatmentIds: [],\r\n    activeMenu: \"treatmentdone\",\r\n    productCard: [],\r\n    list: [],\r\n    isOpenExchangeService: false,\r\n    page: 1,\r\n    rangeId: \"\",\r\n    menuId: \"\",\r\n    rangeName: \"\",\r\n    rangeOption: [],\r\n    ExchangeItem: {},\r\n    SelectedExchangeItem: {},\r\n    cust_data: {},\r\n    mainMeta: {},\r\n    isLoginConfirmation: false,\r\n    selectedItem: {},\r\n    selectedType: \"\",\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getCart({});\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n    });\r\n    //Yoonus adding back\r\n    this.props.getCommonApi(\"treatmentdone/Year/\").then(key => {\r\n       let { status, data } = key;\r\n       let { yearList } = this.state;\r\n       for (let value of data) {\r\n         yearList.push({ value: value, label: value });\r\n       }\r\n       this.setState({ yearList });\r\n     });\r\n  };\r\n  handleCheckboxChangeWithNormalCheckBox = item => {\r\n    let newArray = [...this.state.checkBoxConfirmReversal, item.target.name];\r\n    if (this.state.checkBoxConfirmReversal.includes(item.target.name)) {\r\n      newArray = newArray.filter(day => day !== item.target.name);\r\n    }\r\n    this.setState({\r\n      checkBoxConfirmReversal: newArray,\r\n    });\r\n  };\r\n  getCart = async data => {\r\n    console.log(this.props, \"sfgdfsgdfghgf\");\r\n    let {\r\n      roomList,\r\n      sourceList,\r\n      staffList,\r\n      cartData,\r\n      duration,\r\n      tstaffList,\r\n      selectedYear,\r\n      cust_data,\r\n      mainMeta,\r\n    } = this.state;\r\n    let custId = \"\";\r\n\r\n    if (this.props.match.params.id) {\r\n      custId = this.props.match.params.id;\r\n    } else {\r\n      custId = this.props.basicApptDetail.custId;\r\n    }\r\n    let { page = 1, limit = 12, search = \"\" } = data;\r\n\r\n    this.props\r\n      .getCommonApi(\r\n        `treatmentdone/?year=${selectedYear}&cust_id=${custId}&page=${page}&limit=${limit}`\r\n      )\r\n      .then(async key => {\r\n        await this.setState({\r\n          tstaffList: [],\r\n          mainMeta: {},\r\n        });\r\n        cartData = key;\r\n        let { data, cust_data } = key;\r\n        console.log(key, \"Service Redeem List data\");\r\n\r\n        tstaffList = data.dataList;\r\n        cust_data = cust_data;\r\n        mainMeta = data.meta.pagination;\r\n        await this.setState({\r\n          tstaffList,\r\n          mainMeta,\r\n          cust_data,\r\n        });\r\n        if (cust_data) {\r\n          let formFields = {};\r\n          formFields[\"custId\"] = this.props.match.params.id;\r\n          formFields[\"custName\"] = cust_data.cust_name;\r\n          formFields[\"cust_refer\"] = cust_data.cust_refer;\r\n          await this.props.updateForm(\"basicApptDetail\", formFields);\r\n        }\r\n      });\r\n  };\r\n\r\n  handleYearChange = async ({ target: { value, name } }) => {\r\n    let { selectedYear, records } = this.state;\r\n    selectedYear = value;\r\n    records = [];\r\n    await this.setState({\r\n      selectedYear,\r\n      records,\r\n    });\r\n    this.getCart({});\r\n  };\r\n\r\n  getDataFromRes = data => {\r\n    let { formFields, cartData, updateFields, postFields } = this.state;\r\n    formFields[\"Item\"] = data.value.Item;\r\n    formFields[\"Price\"] = data.value.Price;\r\n    formFields[\"Room\"] = data.value.Room;\r\n    updateFields[\"Room\"] = data.value.Room;\r\n    formFields[\"Source\"] = data.value.Source;\r\n    updateFields[\"Source\"] = data.value.Source;\r\n    formFields[\"add_duration\"] = data.value.add_duration;\r\n    formFields[\"new_remark\"] = data.value.new_remark;\r\n    updateFields[\"new_remark\"] = data.value.new_remark;\r\n    postFields[\"times\"] = data.value.times;\r\n    postFields[\"work_point\"] = data.value.work_point;\r\n    this.setState({\r\n      formFields,\r\n      updateFields,\r\n      postFields,\r\n    });\r\n  };\r\n\r\n  // getYearList = (data) => {\r\n  //     let date = new Date().getFullYear();\r\n\r\n  //     let { yearList } = this.state;\r\n  //     for (let i = date; i > 1970; i--) {\r\n  //         yearList.push({ label: i, value: i });\r\n  //     }\r\n  //     this.setState({\r\n  //         yearList\r\n  //     })\r\n  // }\r\n\r\n  handleSubmit = id => {};\r\n\r\n  handleDialog = () => {\r\n    this.setState({\r\n      isOpenTreatmentDone: false,\r\n      isOpenReversal: false,\r\n      checkBoxConfirmReversal: [],\r\n      isOpenExchangeService: false,\r\n      isHandleExchangeConfirmation: false,\r\n      records: [],\r\n    });\r\n    this.getCart({});\r\n  };\r\n\r\n  handleSearch = event => {\r\n    event.persist();\r\n\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(() => {\r\n        let searchString = event.target.value;\r\n        this.props\r\n          .getCommonApi(`custappt/?search=${searchString}`)\r\n          .then(key => {\r\n            let { status, data } = key;\r\n            if (status === 200) {\r\n              // for (let value of data) {\r\n              //     customerList.push({ value: value.id, label: value.emp_name })\r\n              // }\r\n              this.setState({ customerOption: data });\r\n            }\r\n          });\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  // handleSelectCustomer = async data => {\r\n  //   let { formFields } = this.state;\r\n  //   formFields[\"custId\"] = data.id;\r\n  //   formFields[\"custName\"] = data.cust_name;\r\n  //   this.setState({ formFields, isOpenCustomer: false, customerOption: [] });\r\n  //   await this.props.updateForm(\"basicApptDetail\", formFields);\r\n  //   console.log(this.props.basicApptDetail, \"sdfsadfasdf\");\r\n  // };\r\n\r\n  handleCartCreated = (data, price, id) => {\r\n    let { basicApptDetail } = this.props;\r\n    let { tstaffList } = this.state;\r\n    let payload = [];\r\n\r\n    for (let key of tstaffList) {\r\n      let reverseTreatmentIds = [];\r\n      //reverseTreatmentIds = key.treatmentids.reverse();\r\n      let ItemTreatmentIds = key.treatmentids;\r\n      reverseTreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\r\n      if (key.sel === true) {\r\n        let obj = {\r\n          cust_noid: this.props.match.params.id,\r\n          cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n          itemcodeid: key.stockid,\r\n          price: key.unit_amount,\r\n          item_uom: null,\r\n          treatment_account: key.TreatmentAccountid,\r\n          treatment: reverseTreatmentIds.slice(0, key.session),\r\n          ori_stockid: null,\r\n        };\r\n        payload.push(obj);\r\n      }\r\n    }\r\n    if (payload.length > 0) {\r\n      let test = payload;\r\n      console.log(\"payload-data\", test);\r\n      this.props\r\n        .getCommonApi(\r\n          `itemcart/Check/?cart_date=${dateFormat(\r\n            new Date(),\r\n            \"yyyy-mm-dd\"\r\n          )}&cust_noid=${this.props.match.params.id}`\r\n        )\r\n        .then(res => {\r\n          if (res.data.length === 0) {\r\n            this.props\r\n              .commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload)\r\n              .then(res => {\r\n                // this.props.handleCartCreated()\r\n                this.setState({\r\n                  activeTab: \"treatment\",\r\n                  isOpenPriceModal: false,\r\n                });\r\n                history.push(\"/admin/cart\");\r\n              });\r\n          } else {\r\n            this.props\r\n              .commonCreateApi(\r\n                `itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`,\r\n                payload\r\n              )\r\n              .then(res => {\r\n                // this.props.handleCartCreated()\r\n                this.setState({\r\n                  activeTab: \"treatment\",\r\n                  isOpenPriceModal: false,\r\n                });\r\n                history.push(\"/admin/cart\");\r\n              });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleCheckout = () => {\r\n    let { isOpenPayment } = this.state;\r\n    isOpenPayment = true;\r\n    this.setState({ isOpenPayment });\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n    // this.props.updateForm('customerDetail', formFields)\r\n    // await this.props.updateForm('appointmentCustomerDetail', formFields)\r\n  };\r\n\r\n  handlePostChange = async ({ target: { value, name } }) => {\r\n    let { postFields } = this.state;\r\n    postFields[name] = value;\r\n    await this.setState({\r\n      postFields,\r\n    });\r\n  };\r\n\r\n  handleUpdateChange = async ({ target: { value, name } }) => {\r\n    let { updateFields } = this.state;\r\n    updateFields[name] = value;\r\n    await this.setState({\r\n      updateFields,\r\n    });\r\n    let event = { target: { value: value, name: name } };\r\n    // this.handleUpdatestaff(event);\r\n  };\r\n\r\n  handleAddstaff = async item => {\r\n    if (item.is_allow) {\r\n      let { tstaffList, selectedSession, selectedItemTreatmentIds } =\r\n        this.state;\r\n      selectedSession = item.session;\r\n      // let reverseTreatmentIds = [];\r\n      // reverseTreatmentIds = item.treatmentids.reverse();\r\n      let ItemTreatmentIds = item.treatmentids;\r\n      let reverseTreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\r\n      if (selectedSession == 0) {\r\n        selectedSession = 1;\r\n      }\r\n      selectedItemTreatmentIds = reverseTreatmentIds.slice(0, selectedSession);\r\n      var unit_rate = item.unit_amount;\r\n      var qualifiedAmount = selectedSession * unit_rate;\r\n      this.setState({ selectedSession, selectedItemTreatmentIds });\r\n\r\n      /* let test=0;\r\n        const currentParentCodeBalance = tstaffList.filter(\r\n            (res) => res.treatment_parentcode ===  item.treatment_parentcode\r\n          ).reduce((sum, currentValue) => {\r\n            return  currentValue.balance;\r\n          }, 0);\r\n        const currentParentCodeSelectedStaffValue = tstaffList.filter(\r\n            (res) => res.treatment_parentcode ===  item.treatment_parentcode && res.staff!=null\r\n            ).reduce((sum, currentValue) => {\r\n                return parseFloat((eval(sum))) + parseFloat((eval(currentValue.unit_amount)));\r\n              }, 0);\r\n        \r\n        if(item.staff==null)\r\n        {\r\n            test=parseFloat((eval(currentParentCodeSelectedStaffValue))) + parseFloat((eval(item.unit_amount))) ;\r\n        }\r\n        else{\r\n            test=parseFloat((eval(currentParentCodeSelectedStaffValue))) - parseFloat((eval(item.unit_amount))) ;\r\n        }\r\n        */\r\n\r\n      //if (currentParentCodeBalance >= test) {\r\n      // if (item.balance >= qualifiedAmount) {\r\n      //   let { tstaffList, formFields, cartData, postFields } = this.state;\r\n      //   await this.setState({ tsStaff: item });\r\n      //   this.setState({\r\n      //     isOpenTreatmentDone: true,\r\n      //   });\r\n      // } else {\r\n      //   this.handleDialog();\r\n      //   Toast({\r\n      //     type: \"error\",\r\n      //     message: \"Insufficient balance to redeem\",\r\n      //   });\r\n      // }\r\n      await this.setState({ tsStaff: item });\r\n      this.setState({\r\n        isOpenTreatmentDone: true,\r\n      });\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"Treatment done is not allowed in other outlets\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleUpdatestaff = async (event, item, index) => {\r\n    let { tstaffList, formFields, cartData, updateFields } = this.state;\r\n    tstaffList[index][event.target.name] = event.target.value;\r\n    this.setState({\r\n      tstaffList,\r\n    });\r\n    let data = {};\r\n    if (event.target.name === \"appt_fr_time\") {\r\n      data = {\r\n        appt_fr_time: event.target.value,\r\n        add_duration: formFields[\"add_duration\"],\r\n      };\r\n    }\r\n    if (event.target.name === \"add_duration\") {\r\n      data = {\r\n        appt_fr_time: item.appt_fr_time,\r\n        add_duration: event.target.value,\r\n      };\r\n    }\r\n\r\n    // if (updateFields.Source && updateFields.Room) {\r\n    this.props\r\n      .commonPatchApi(\r\n        `tmpitemhelper/${item.id}/?Room_Codeid=${updateFields.Room}&Source_Codeid=${updateFields.Source}&new_remark=${updateFields.new_remark}`,\r\n        data\r\n      )\r\n      .then(() => {\r\n        this.getCart({});\r\n      });\r\n    // } else {\r\n    //     this.setState({ showUpdateError: true })\r\n    // }\r\n  };\r\n\r\n  handleClearLine = () => {\r\n    this.props\r\n      .commonDeleteApi(\r\n        `tmpitemhelper/delete/?clear_all=0&cartid=${this.props.cartId}`\r\n      )\r\n      .then(() => {\r\n        this.getCart({});\r\n      });\r\n  };\r\n\r\n  handleClearAll = () => {\r\n    this.props\r\n      .commonDeleteApi(\r\n        `tmpitemhelper/delete/?clear_all=1&cartid=${this.props.cartId}`\r\n      )\r\n      .then(() => {\r\n        let { formFields, postFields } = this.state;\r\n        formFields[\"work_point\"] = \"\";\r\n        postFields[\"times\"] = \"\";\r\n        this.setState({\r\n          formFields,\r\n          postFields,\r\n        });\r\n        this.getCart({});\r\n      });\r\n  };\r\n  handleReversalTreatmentAll = async () => {\r\n    let treatmentIds = this.state.checkBoxConfirmReversal;\r\n\r\n    await this.setState({\r\n      treatmentIds,\r\n    });\r\n\r\n    this.setState({\r\n      isOpenReversal: true,\r\n    });\r\n  };\r\n  handleReversalTreatment = async () => {\r\n    //debugger;\r\n    let { selectedItem } = this.state;\r\n    let item = selectedItem;\r\n    if (item.is_allow) {\r\n      let reverseTreatmentIds = [];\r\n      let { selectedSession } = this.state;\r\n      selectedSession = item.session;\r\n      let ItemTreatmentIds = item.treatmentids;\r\n      let TreatmentIds = ItemTreatmentIds.sort((a, b) => b - a);\r\n      if (selectedSession == 0) {\r\n        selectedSession = 1;\r\n      }\r\n      reverseTreatmentIds = TreatmentIds.slice(0, selectedSession);\r\n      await this.setState({\r\n        treatmentIds: reverseTreatmentIds,\r\n        selectedSession,\r\n      });\r\n\r\n      this.setState({\r\n        isOpenReversal: true,\r\n      });\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"You are not allowed to do this transaction\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleReverse = (item, index) => {\r\n    let { tstaffList } = this.state;\r\n    tstaffList[index][\"rev\"] = true;\r\n    this.setState({\r\n      tstaffList,\r\n    });\r\n    // onClick={this.handleReversalTreatment}\r\n  };\r\n  changeIndexSession = (index, value, item) => {\r\n    if (item.is_allow) {\r\n      if (Number(value) <= Number(item.open)) {\r\n        let { tstaffList } = this.state;\r\n        tstaffList[index][\"session\"] = value;\r\n        this.setState({\r\n          tstaffList,\r\n        });\r\n      } else {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Please enter valid session\",\r\n        });\r\n      }\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"You are not allowed to do this transaction\",\r\n      });\r\n    }\r\n  };\r\n\r\n  toggle = tab => {\r\n    if (this.state.activeMenu !== tab) {\r\n      this.setState({\r\n        activeMenu: tab,\r\n      });\r\n    }\r\n  };\r\n  getServices = query => {\r\n    let {\r\n      page = this.state.page,\r\n      menuId = this.state.menuId,\r\n      rangeId = this.state.rangeId,\r\n    } = query;\r\n    this.props\r\n      .getCommonApi(\r\n        `servicestock/?Item_Deptid=${menuId}&page=${page}&Item_Rangeid=${rangeId}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          this.setState({ productCard: data, list: data.dataList });\r\n        }\r\n      });\r\n  };\r\n  getMenus = () => {\r\n    let { menuOption } = this.state;\r\n    menuOption = [];\r\n    console.log(\"sdfsdhfghjghj\", this.props);\r\n    this.props\r\n      .getCommonApi(`catalogitemdept/?Item_Dept=${`SERVICE`}`)\r\n      .then(res => {\r\n        // activeMenu = []\r\n        console.log(\"sdfsdhfghjghj ress\", res);\r\n        for (let key of res.data) {\r\n          menuOption.push({\r\n            value: key.id,\r\n            label: key.itm_desc,\r\n            code: key.itm_code,\r\n            seq: key.itm_seq,\r\n          });\r\n        }\r\n        this.setState({ menuOption });\r\n      });\r\n  };\r\n\r\n  getRange = () => {\r\n    let { rangeOption, menuId } = this.state;\r\n    rangeOption = [];\r\n\r\n    this.props\r\n      .getCommonApi(`catalogitemrange?Item_Deptid=${menuId}`)\r\n      .then(res => {\r\n        // activeMenu = []\r\n        for (let key of res.data) {\r\n          rangeOption.push({ value: key.id, label: key.itm_desc });\r\n        }\r\n        this.setState({ rangeOption });\r\n      });\r\n  };\r\n\r\n  handleauthentication = async (user, pass) => {\r\n    let Body = {\r\n      username: user,\r\n      password: pass,\r\n    };\r\n    let { selectedType } = this.state;\r\n    this.props\r\n      .commonCreateApi(`userauthorizationpopup/`, Body)\r\n      .then(async key => {\r\n        let { status, data } = key;\r\n        if (status == 200) {\r\n          await this.setState(prevState => ({\r\n            isLoginConfirmation: !prevState.isLoginConfirmation,\r\n          }));\r\n          if (selectedType == \"reversal\") {\r\n            this.handleReversalTreatment();\r\n          } else {\r\n            this.handleExchangeClick();\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  handleExchangeClick = async () => {\r\n    let { selectedItem } = this.state;\r\n    let item = selectedItem;\r\n    if (item.is_allow) {\r\n      if (item.sel) {\r\n        await this.setState({\r\n          ExchangeItem: [],\r\n        });\r\n        this.getMenus();\r\n        this.getRange();\r\n        this.getServices({});\r\n\r\n        await this.setState({\r\n          isOpenExchangeService: true,\r\n          ExchangeItem: item,\r\n        });\r\n        console.log(\r\n          this.state.ExchangeItem,\r\n          \"selected row of treatment done data - exchange item\"\r\n        );\r\n      } else {\r\n        Toast({\r\n          type: \"error\",\r\n          message: \"Select Staff should not be empty\",\r\n        });\r\n      }\r\n    } else {\r\n      Toast({\r\n        type: \"error\",\r\n        message: \"You are not allowed to do this transaction\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handlePagination = async page => {\r\n    await this.setState({ page: page });\r\n    this.getServices({ page: page });\r\n  };\r\n  handlemainPagination = page => {\r\n    this.getCart(page);\r\n  };\r\n  handleMenuChange = async ({ target: { value, name } }) => {\r\n    let menuId = Object.assign({}, this.state.menuId);\r\n    menuId = value;\r\n    await this.setState({ menuId });\r\n\r\n    this.getRange();\r\n\r\n    this.getServices({});\r\n  };\r\n\r\n  handleRangeChange = async ({ target: { value, name } }) => {\r\n    let rangeId = Object.assign({}, this.state.rangeId);\r\n    let rangeName = Object.assign({}, this.state.rangeName);\r\n    let { rangeOption } = this.state;\r\n    rangeId = value;\r\n\r\n    for (let key of rangeOption) {\r\n      if (key.value == value) {\r\n        rangeName = key.label;\r\n      }\r\n    }\r\n\r\n    await this.setState({\r\n      rangeId,\r\n      rangeName,\r\n    });\r\n    this.getServices({});\r\n  };\r\n\r\n  handleSelectedService = async data => {\r\n    let { ExchangeItem } = this.state;\r\n    await this.setState({\r\n      SelectedExchangeItem: data,\r\n    });\r\n    if (Number(data.item_price) > Number(ExchangeItem.unit_amount)) {\r\n      this.setState({ isHandleExchangeConfirmation: true });\r\n    } else {\r\n      this.handleExchangePostAction();\r\n    }\r\n  };\r\n\r\n  handleExchangePostAction = () => {\r\n    let { basicApptDetail } = this.props;\r\n    let { ExchangeItem, SelectedExchangeItem } = this.state;\r\n    let payload = [];\r\n    let obj = {\r\n      cust_noid: this.props.match.params.id,\r\n      cart_date: dateFormat(new Date(), \"yyyy-mm-dd\"),\r\n      itemcodeid: SelectedExchangeItem.id,\r\n      price: ExchangeItem.unit_amount,\r\n      item_uom: null,\r\n      treatment_account: ExchangeItem.TreatmentAccountid,\r\n      treatment: ExchangeItem.id,\r\n      ori_stockid: ExchangeItem.stockid,\r\n    };\r\n    payload.push(obj);\r\n    console.log(payload, \"exchange input\");\r\n    this.props\r\n      .getCommonApi(\r\n        `itemcart/Check/?cart_date=${dateFormat(\r\n          new Date(),\r\n          \"yyyy-mm-dd\"\r\n        )}&cust_noid=${this.props.match.params.id}`\r\n      )\r\n      .then(res => {\r\n        if (res.data.length === 0) {\r\n          this.props\r\n            .commonCreateApi(\"itemcart/TrmtDoneCartCreate/\", payload)\r\n            .then(res => {\r\n              console.log(res, \"result of exchnage final click\");\r\n              this.setState({\r\n                activeTab: \"treatment\",\r\n                isOpenExchangeService: false,\r\n              });\r\n              history.push(\"/admin/cart\");\r\n            });\r\n        } else {\r\n          this.props\r\n            .commonCreateApi(\r\n              `itemcart/TrmtDoneCartCreate/?cart_id=${res.cart_id}`,\r\n              payload\r\n            )\r\n            .then(res => {\r\n              // this.props.handleCartCreated()\r\n              this.setState({\r\n                activeTab: \"treatment\",\r\n                isOpenExchangeService: false,\r\n              });\r\n              history.push(\"/admin/cart\");\r\n            });\r\n        }\r\n      });\r\n  };\r\n  handleDialogExchangeConfirm = () => {\r\n    this.setState({\r\n      isHandleExchangeConfirmation: false,\r\n      SelectedExchangeItem: {},\r\n    });\r\n  };\r\n\r\n  handleLoginConfirmationDialog = async (item, type) => {\r\n    debugger;\r\n    let { tokenDetails } = this.props;\r\n\r\n    let selectedItem = {};\r\n    let selectedType = \"\";\r\n    selectedItem = item;\r\n    selectedType = type;\r\n    await this.setState({ selectedItem, selectedType });\r\n    if (selectedType == \"reversal\") {\r\n      if (tokenDetails.reversalusernamepopup) {\r\n        //reversal flag update based on backend api response\r\n        await this.setState(prevState => ({\r\n          isLoginConfirmation: !prevState.isLoginConfirmation,\r\n        }));\r\n      } else {\r\n        this.handleReversalTreatment();\r\n      }\r\n    } else {\r\n      if (tokenDetails.exchangetdusernamepopup) {\r\n        //exchange flag update based on backend api response\r\n        await this.setState(prevState => ({\r\n          isLoginConfirmation: !prevState.isLoginConfirmation,\r\n        }));\r\n      } else {\r\n        this.handleExchangeClick();\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    let {\r\n      productCard = {},\r\n      list,\r\n      tstaffList = [],\r\n      selectedYear,\r\n      yearList,\r\n      isOpenTreatmentDone,\r\n      headerDetails,\r\n      tsStaff,\r\n      isOpenReversal,\r\n      treatmentIds,\r\n      activeMenu,\r\n      isOpenExchangeService,\r\n      menuOption,\r\n      menuId,\r\n      rangeOption,\r\n      rangeId,\r\n      isHandleExchangeConfirmation,\r\n      ExchangeItem,\r\n      SelectedExchangeItem,\r\n      cust_data,\r\n      mainMeta,\r\n      isLoginConfirmation,\r\n    } = this.state;\r\n    let localtStaffList = [...tstaffList];\r\n    let { basicApptDetail, t, tokenDetails } = this.props;\r\n    let { dataList = [], meta = {} } = productCard;\r\n    let { pagination } = meta;\r\n    return (\r\n      <div className=\"treatmentDone-menu\">\r\n        <div className=\"row\">\r\n          <div className=\"col-10\">\r\n            <div className=\"beautesoft-navlink customer-detail mt-3\">\r\n              <div className=\"filled-tabs\">\r\n                <div className=\"tabs-block\">\r\n                  <Nav tabs>\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeMenu === \"treatmentdone\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"treatmentdone\");\r\n                        }}\r\n                      >\r\n                        {t(\"Treatment Done\")}\r\n                      </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeMenu === \"treatmenthistory\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"treatmenthistory\");\r\n                        }}\r\n                      >\r\n                        {t(\"Treatment History\")}\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <NormalButton\r\n              buttonClass={\"mx-2\"}\r\n              mainbg={true}\r\n              className=\"fs-15 clear-line\"\r\n              label=\"Back\"\r\n              outline={false}\r\n              onClick={() => history.push(`/admin/cart`)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"treatment-section ml-1 p-2 pr-0\">\r\n          <TabContent activeTab={this.state.activeMenu}>\r\n            <TabPane tabId=\"treatmentdone\">\r\n              {activeMenu === \"treatmentdone\" ? (\r\n                <div className=\"row treatment-done-new p-3\">\r\n                  <div className=\"col-10 header\">\r\n                    <p className=\"fs-18 font-700 mb-3 title\">\r\n                      {t(\"Available Treatments\")}\r\n                    </p>\r\n                    <div className=\"d-flex select-year\">\r\n                      <div className=\"pl-0 mb-2 name fs-16 py-2\">\r\n                        {t(\"Select Year\")}\r\n                      </div>\r\n                      <div className=\"input-group\">\r\n                        <NormalSelect\r\n                          // placeholder=\"Enter here\"\r\n                          options={yearList}\r\n                          value={selectedYear}\r\n                          name=\"selectedYear\"\r\n                          onChange={this.handleYearChange}\r\n                          className=\"selected-year mb-2 py-0 col-12\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <div className=\"d-flex justify-content-start align-self-center\">\r\n                          <div className=\"col-md-12\">\r\n                            <p>\r\n                              {t(\"Customer Name\")} : {cust_data.cust_name}\r\n                            </p>\r\n                            <p>\r\n                              {t(\"Reference\")} : {cust_data.cust_refer}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={`col-12 cart-item`}>\r\n                    <div className={`item-list`}>\r\n                      <div className=\"table\">\r\n                        <TableWrapper\r\n                          headerDetails={headerDetails}\r\n                          queryHandler={this.handlemainPagination}\r\n                          pageMeta={mainMeta}\r\n                          // isEmpty={tstaffList.length === 0 ? true:false}\r\n                        >\r\n                          {tstaffList.length > 0\r\n                            ? tstaffList.map((item, index) => {\r\n                                return (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <div\r\n                                        className={`text-left ${\r\n                                          !item.iscurrentloggedinsalon\r\n                                            ? \"text-danger\"\r\n                                            : \"\"\r\n                                        }`}\r\n                                      >\r\n                                        {item.site_code}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"position-relative status-type\">\r\n                                      <div className={`text-right`}>\r\n                                        {item.treatment_date}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className={`text-left`}>\r\n                                        {item.course}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className={`text-left`}>\r\n                                        {item.transacno_ref}\r\n                                      </div>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                      <div className={`text-right`}>\r\n                                        {item.unit_amount}\r\n                                      </div>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                      <div className={`text-left`}>\r\n                                        {item.treatment_code}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className={`text-right`}>\r\n                                        {item.td}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className={`text-right`}>\r\n                                        {item.rev}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className={`text-right`}>\r\n                                        {item.open}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className={`text-right`}>\r\n                                        {item.ar}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        style={{\r\n                                          width: \"50px\",\r\n                                          // textAlign: \"right\",\r\n                                        }}\r\n                                        value={item.session}\r\n                                        onChange={e =>\r\n                                          this.changeIndexSession(\r\n                                            index,\r\n                                            e.target.value,\r\n                                            item\r\n                                          )\r\n                                        }\r\n                                        className={`text-right`}\r\n                                        min={`0`}\r\n                                        max={item.open}\r\n                                        disabled={\r\n                                          item.session_flag &&\r\n                                          item.session !== Number(0)\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td style={{ width: \"50px\" }}>\r\n                                      <button\r\n                                        className=\"btnRedeem\"\r\n                                        onClick={() =>\r\n                                          this.handleAddstaff(item)\r\n                                        }\r\n                                      >\r\n                                        {t(\"Select\")}\r\n                                      </button>\r\n                                    </td>\r\n                                    <td style={{ width: \"50px\" }}>\r\n                                      {item.iscurrentloggedinsalon ||\r\n                                      (item.is_reversal && item.is_allow) ? (\r\n                                        <button\r\n                                          className=\"btnReversal\"\r\n                                          // onClick={() =>\r\n                                          //   this.handleReversalTreatment(item)\r\n                                          // }\r\n                                          onClick={() =>\r\n                                            this.handleLoginConfirmationDialog(\r\n                                              item,\r\n                                              \"reversal\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          {t(\"Select\")}\r\n                                        </button>\r\n                                      ) : null}\r\n                                    </td>\r\n                                    <td style={{ width: \"50px\" }}>\r\n                                      {item.exchange_flag && (\r\n                                        <button\r\n                                          className=\"btnExchange\"\r\n                                          label=\"Exchange\"\r\n                                          onClick={() =>\r\n                                            this.handleLoginConfirmationDialog(\r\n                                              item,\r\n                                              \"exchange\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          {t(\"Select\")}\r\n                                        </button>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })\r\n                            : null}\r\n                        </TableWrapper>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 pt-4 action-bar\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-7 d-flex\">\r\n                        {/* <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-line\"\r\n                                label=\"Clear Line\"\r\n                                outline={false}\r\n                                onClick={this.handleClearLine}\r\n                            />\r\n                            <NormalButton\r\n                                buttonClass={\"mx-2\"}\r\n                                mainbg={true}\r\n                                className=\"fs-15 clear-all\"\r\n                                label=\"Clear All\"\r\n                                outline={false}\r\n                                onClick={this.handleClearAll}\r\n                            /> */}\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 text-right\"></div>\r\n                          <div className=\"col-6 text-right\">\r\n                            <NormalButton\r\n                              buttonClass={\"mx-2\"}\r\n                              mainbg={true}\r\n                              className=\" fs-15 confirm\"\r\n                              label=\"Confirm Treatment Done\"\r\n                              outline={false}\r\n                              onClick={() => this.handleCartCreated()}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <NormalModal\r\n                    className={\"transaction-done-exchange\"}\r\n                    style={{ minWidth: \"70%\" }}\r\n                    modal={isOpenExchangeService}\r\n                    handleModal={this.handleDialog}\r\n                  >\r\n                    <img\r\n                      onClick={this.handleDialog}\r\n                      className=\"close cursor-pointer\"\r\n                      src={closeIcon}\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"d-flex mb-2\">\r\n                      <div className=\"col-md-3 input-group pl-2 range-filter\">\r\n                        <NormalSelect\r\n                          // placeholder=\"Enter here\"\r\n                          options={menuOption}\r\n                          value={menuId}\r\n                          name={\"menuId\"}\r\n                          onChange={this.handleMenuChange}\r\n                          className=\"py-0\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4 input-group range-filter\">\r\n                        <NormalSelect\r\n                          // placeholder=\"Enter here\"\r\n                          options={rangeOption}\r\n                          value={rangeId}\r\n                          name={\"rangeId\"}\r\n                          onChange={this.handleRangeChange}\r\n                          className=\"py-0\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      {console.log(list, \"card list\")}\r\n                      <div className=\"services m-0 row\">\r\n                        {list.length > 0\r\n                          ? list.map((data, index) => {\r\n                              return (\r\n                                <div\r\n                                  className=\"col-md-2 col-12 fs-12 p-2 cursor-pointer\"\r\n                                  key={data.id}\r\n                                  onClick={() =>\r\n                                    this.handleSelectedService(data)\r\n                                  }\r\n                                >\r\n                                  <div className=\"service-tab p-0\">\r\n                                    <div className=\"service-ttl px-2 font-700 fs-11\">\r\n                                      {data.item_desc}\r\n                                    </div>\r\n                                    <div className=\"price px-2 py-1\">\r\n                                      <div className=\"non-retail\">\r\n                                        <span className=\"text-orenge font-700\">\r\n                                          $\r\n                                        </span>\r\n                                        <span className=\"text-orenge font-700\">\r\n                                          {data.item_price\r\n                                            ? Number(data.item_price).toFixed(2)\r\n                                            : \"\"}\r\n                                        </span>\r\n\r\n                                        <span className=\"foc-icon\">\r\n                                          <svg\r\n                                            width=\"32\"\r\n                                            height=\"32\"\r\n                                            className=\"cursor-pointer\"\r\n                                            viewBox=\"0 0 32 32\"\r\n                                            fill=\"none\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                          >\r\n                                            <circle\r\n                                              cx=\"16\"\r\n                                              cy=\"16\"\r\n                                              r=\"15.5\"\r\n                                              fill=\"rgba(60, 64, 135, 0.31)\"\r\n                                              stroke=\"#3C4087\"\r\n                                            />\r\n                                            <path\r\n                                              d=\"M3.996 11.456H9.42V12.476H5.22V15.152H9.18V16.172H5.22V20H3.996V11.456ZM14.3243 20.096C13.5163 20.096 12.8123 19.92 12.2123 19.568C11.6203 19.208 11.1603 18.7 10.8323 18.044C10.5123 17.388 10.3523 16.616 10.3523 15.728C10.3523 14.832 10.5123 14.056 10.8323 13.4C11.1523 12.744 11.6123 12.24 12.2123 11.888C12.8123 11.536 13.5163 11.36 14.3243 11.36C15.1403 11.36 15.8443 11.536 16.4362 11.888C17.0363 12.24 17.4963 12.744 17.8163 13.4C18.1363 14.056 18.2963 14.828 18.2963 15.716C18.2963 16.612 18.1363 17.388 17.8163 18.044C17.4963 18.7 17.0363 19.208 16.4362 19.568C15.8363 19.92 15.1323 20.096 14.3243 20.096ZM14.3243 19.088C15.1803 19.088 15.8443 18.796 16.3163 18.212C16.7963 17.628 17.0363 16.796 17.0363 15.716C17.0363 14.644 16.7963 13.82 16.3163 13.244C15.8443 12.66 15.1803 12.368 14.3243 12.368C13.4683 12.368 12.8043 12.66 12.3323 13.244C11.8603 13.82 11.6243 14.644 11.6243 15.716C11.6243 16.796 11.8603 17.628 12.3323 18.212C12.8123 18.796 13.4763 19.088 14.3243 19.088ZM23.7598 20.096C22.9358 20.096 22.2158 19.92 21.5998 19.568C20.9918 19.208 20.5238 18.7 20.1958 18.044C19.8678 17.388 19.7038 16.612 19.7038 15.716C19.7038 14.828 19.8678 14.056 20.1958 13.4C20.5238 12.744 20.9918 12.24 21.5998 11.888C22.2158 11.536 22.9358 11.36 23.7598 11.36C24.3438 11.36 24.8838 11.452 25.3798 11.636C25.8838 11.812 26.3078 12.072 26.6518 12.416L26.2198 13.328C25.8198 13 25.4238 12.764 25.0318 12.62C24.6478 12.468 24.2278 12.392 23.7718 12.392C22.8838 12.392 22.1958 12.68 21.7078 13.256C21.2278 13.832 20.9878 14.652 20.9878 15.716C20.9878 16.788 21.2278 17.616 21.7078 18.2C22.1958 18.776 22.8838 19.064 23.7718 19.064C24.2278 19.064 24.6478 18.992 25.0318 18.848C25.4238 18.696 25.8198 18.456 26.2198 18.128L26.6518 19.04C26.3078 19.384 25.8838 19.648 25.3798 19.832C24.8838 20.008 24.3438 20.096 23.7598 20.096Z\"\r\n                                              fill=\"#3C4087\"\r\n                                            />\r\n                                          </svg>\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"images\">\r\n                                      <img src={data.Stock_PIC} alt=\"\" />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          : \"\"}\r\n                        {pagination && (\r\n                          <Pagination\r\n                            handlePagination={this.handlePagination}\r\n                            pageMeta={pagination}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </NormalModal>\r\n                  <NormalModal\r\n                    className={\"transaction-done-reversal\"}\r\n                    style={{ minWidth: \"75%\" }}\r\n                    modal={isOpenReversal}\r\n                    handleModal={this.handleDialog}\r\n                  >\r\n                    <img\r\n                      onClick={this.handleDialog}\r\n                      className=\"close cursor-pointer\"\r\n                      src={closeIcon}\r\n                      alt=\"\"\r\n                    />\r\n                    <Reversal\r\n                      id={this.props.match.params.id}\r\n                      treatmentId={tsStaff.id}\r\n                      reversalId={treatmentIds}\r\n                      cartId={this.props.id}\r\n                      handleModal={this.handleDialog}\r\n                    ></Reversal>\r\n                  </NormalModal>\r\n                  <NormalModal\r\n                    className={\"transaction-done-modal\"}\r\n                    style={{ minWidth: \"60%\" }}\r\n                    modal={isOpenTreatmentDone}\r\n                    handleModal={this.handleDialog}\r\n                  >\r\n                    <img\r\n                      onClick={this.handleDialog}\r\n                      className=\"close cursor-pointer\"\r\n                      src={closeIcon}\r\n                      alt=\"\"\r\n                    />\r\n                    <SelectStaff\r\n                      id={this.state.selectedItemTreatmentIds}\r\n                      //id={tsStaff.id}\r\n                      session={this.state.selectedSession}\r\n                      cartId={basicApptDetail.cartId}\r\n                      handleModal={this.handleDialog}\r\n                    ></SelectStaff>\r\n                  </NormalModal>\r\n                  <NormalModal\r\n                    className={\"transaction-done-reversal\"}\r\n                    style={{ minWidth: \"432px\" }}\r\n                    modal={isHandleExchangeConfirmation}\r\n                    handleModal={this.handleDialogExchangeConfirm}\r\n                  >\r\n                    <img\r\n                      onClick={this.handleDialogExchangeConfirm}\r\n                      className=\"close cursor-pointer\"\r\n                      src={closeIcon}\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"row\">\r\n                      <div className=\"d-flex flex-wrap\">\r\n                        <div className=\"col-12\">\r\n                          <h4>{t(\"Confirmation\")}</h4>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                          <p>\r\n                            {t(\"Service Price\")} : $\r\n                            {SelectedExchangeItem.item_price}\r\n                            &nbsp;{t(\"larger than\")}\r\n                          </p>\r\n                          <p>\r\n                            {t(\"Previous Service Price\")} : $\r\n                            {ExchangeItem.unit_amount}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                          <p>{t(\"Are you sure want to continue\")} ?</p>\r\n                        </div>\r\n                        <div className=\"row p-3\">\r\n                          <div className=\"col-6\">\r\n                            <NormalButton\r\n                              label=\"Confirm\"\r\n                              mainbg={true}\r\n                              name=\"Exconfirm\"\r\n                              className={`w-100 col-12`}\r\n                              onClick={this.handleExchangePostAction}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <NormalButton\r\n                              label=\"Cancel\"\r\n                              resetbg={true}\r\n                              name=\"ExCancel\"\r\n                              className={`w-100 col-12`}\r\n                              onClick={this.handleDialogExchangeConfirm}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </NormalModal>\r\n                </div>\r\n              ) : (\r\n                <tr>\r\n                <td colSpan=\"12\">\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    {t(\"No Data Available\")}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              )}\r\n            </TabPane>\r\n            <TabPane tabId=\"treatmenthistory\">\r\n              {activeMenu === \"treatmenthistory\" ? (\r\n                <div className=\"treatment-done-new p-3\">\r\n                  <TreatmentHistoryCart\r\n                    customerNumber={this.props.match.params.id}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </TabPane>\r\n          </TabContent>\r\n          <NormalModal\r\n            className={\"d-flex justify-content-center\"}\r\n            style={{ minWidth: \"20%\" }}\r\n            modal={isLoginConfirmation}\r\n            handleModal={() => {}}\r\n          >\r\n            <img\r\n              onClick={this.handleLoginConfirmationDialog}\r\n              className=\"close cursor-pointer\"\r\n              src={closeIcon}\r\n              alt=\"\"\r\n            />\r\n            <CredentialConfirmation\r\n              handleLoginSubmit={(user, pass) =>\r\n                this.handleauthentication(user, pass)\r\n              }\r\n            />\r\n          </NormalModal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selected_cstomer: state.common.selected_cstomer,\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  tokenDetails: state.authStore.tokenDetails,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      // getCustomer,\r\n      getCommonApi,\r\n      updateForm,\r\n      commonCreateApi,\r\n      commonPatchApi,\r\n      commonDeleteApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const TreatmentDone = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(TreatmentDoneClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}