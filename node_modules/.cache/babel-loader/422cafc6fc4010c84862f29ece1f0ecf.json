{"ast":null,"code":"import { StaffActionType } from \"redux/actions/actionType\";\nimport { staff } from \"service/apiVariables\"; // create staff action\n\nexport const createStaff = body => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    api({ ...staff.addStaff,\n      body\n    }).then(response => {\n      resolve(response);\n      let {\n        message,\n        status,\n        data\n      } = response;\n\n      if (status === 200 || status === 201) {// dispatch({ type: StaffActionType.getStaffDetail, payload: data });\n        // Toast({ type: \"success\", message });\n      } else {\n        reject(Toast({\n          type: \"error\",\n          message\n        }));\n      }\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n}; // update staff action\n\nexport const updateStaff = (id, body) => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    staff.updateStaff.addQuery = {\n      key: \"id\",\n      payload: id\n    };\n    api({ ...staff.updateStaff,\n      body\n    }).then(response => {\n      resolve(response);\n      let {\n        message,\n        status\n      } = response;\n\n      if (status === 200 || status === 201) {// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\n        // Toast({ type: 'success', message })\n      } else {\n        reject(Toast({\n          type: \"error\",\n          message\n        }));\n      }\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n}; // delete staff action\n\nexport const deleteStaff = (id, body) => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    staff.deleteStaff.addQuery = {\n      key: \"id\",\n      payload: id\n    };\n    api({ ...staff.deleteStaff,\n      body\n    }).then(response => {\n      resolve(response);\n      let {\n        message,\n        status\n      } = response;\n\n      if (status === 200 || status === 201) {// dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\n        // Toast({ type: 'success', message })\n      } else {\n        reject(Toast({\n          type: \"error\",\n          message\n        }));\n      }\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n}; // get staff  action\n\nexport const getStaff = id => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    staff.getStaff.addQuery = {\n      key: \"id\",\n      payload: id\n    };\n    api({ ...staff.getStaff\n    }).then(response => {\n      resolve(response);\n      let {\n        message,\n        status,\n        data\n      } = response;\n\n      if (status === 200 || status === 201) {\n        dispatch({\n          type: StaffActionType.getStaffDetail,\n          payload: data\n        }); // Toast({ type: 'success', message })\n      } else {\n        reject(Toast({\n          type: \"error\",\n          message\n        }));\n      }\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n}; // get staff availability action\n\nexport const getStaffAvailability = id => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    staff.getStaffAvailability.addQuery = {\n      key: \"id\",\n      payload: id\n    };\n    api({ ...staff.getStaffAvailability\n    }).then(response => {\n      resolve(response);\n      let {\n        message,\n        status,\n        data\n      } = response;\n\n      if (status === 200 || status === 201) {// dispatch({ type: StaffActionType.getStaffDetail, payload: data });\n        // Toast({ type: 'success', message })\n      } else {\n        reject(Toast({\n          type: \"error\",\n          message\n        }));\n      }\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n}; // get staff branchwise action\n\nexport const getStaffBranchwise = id => (dispatch, getState, {\n  api,\n  Toast\n}) => {\n  return new Promise((resolve, reject) => {\n    staff.getStaffBranchwise.addQuery = {\n      key: \"id\",\n      payload: id\n    };\n    api({ ...staff.getStaffBranchwise\n    }).then(response => {\n      resolve(response);\n      let {\n        message,\n        status,\n        data\n      } = response;\n\n      if (status === 200 || status === 201) {// dispatch({ type: StaffActionType.getStaffDetail, payload: data });\n        // Toast({ type: 'success', message })\n      } else {\n        reject(Toast({\n          type: \"error\",\n          message\n        }));\n      }\n    }).catch(({\n      message\n    }) => {\n      reject(Toast({\n        type: \"error\",\n        message\n      }));\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/src/redux/actions/staff.js"],"names":["StaffActionType","staff","createStaff","body","dispatch","getState","api","Toast","Promise","resolve","reject","addStaff","then","response","message","status","data","type","catch","updateStaff","id","addQuery","key","payload","deleteStaff","getStaff","getStaffDetail","getStaffAvailability","getStaffBranchwise"],"mappings":"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","sourcesContent":["import { StaffActionType } from \"redux/actions/actionType\";\r\nimport { staff } from \"service/apiVariables\";\r\n\r\n// create staff action\r\nexport const createStaff =\r\n  body =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      api({ ...staff.addStaff, body })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status, data } = response;\r\n          if (status === 200 || status === 201) {\r\n            // dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n            // Toast({ type: \"success\", message });\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n// update staff action\r\nexport const updateStaff =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      staff.updateStaff.addQuery = { key: \"id\", payload: id };\r\n      api({ ...staff.updateStaff, body })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status } = response;\r\n          if (status === 200 || status === 201) {\r\n            // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n            // Toast({ type: 'success', message })\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n// delete staff action\r\nexport const deleteStaff =\r\n  (id, body) =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      staff.deleteStaff.addQuery = { key: \"id\", payload: id };\r\n      api({ ...staff.deleteStaff, body })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status } = response;\r\n          if (status === 200 || status === 201) {\r\n            // dispatch({ type: ArticalsActionType.getArticalsDetails, payload: data });\r\n            // Toast({ type: 'success', message })\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n// get staff  action\r\nexport const getStaff =\r\n  id =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      staff.getStaff.addQuery = { key: \"id\", payload: id };\r\n      api({ ...staff.getStaff })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status, data } = response;\r\n          if (status === 200 || status === 201) {\r\n            dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n            // Toast({ type: 'success', message })\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n// get staff availability action\r\nexport const getStaffAvailability =\r\n  id =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      staff.getStaffAvailability.addQuery = { key: \"id\", payload: id };\r\n      api({ ...staff.getStaffAvailability })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status, data } = response;\r\n          if (status === 200 || status === 201) {\r\n            // dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n            // Toast({ type: 'success', message })\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\n// get staff branchwise action\r\nexport const getStaffBranchwise =\r\n  id =>\r\n  (dispatch, getState, { api, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      staff.getStaffBranchwise.addQuery = { key: \"id\", payload: id };\r\n      api({ ...staff.getStaffBranchwise })\r\n        .then(response => {\r\n          resolve(response);\r\n          let { message, status, data } = response;\r\n          if (status === 200 || status === 201) {\r\n            // dispatch({ type: StaffActionType.getStaffDetail, payload: data });\r\n            // Toast({ type: 'success', message })\r\n          } else {\r\n            reject(Toast({ type: \"error\", message }));\r\n          }\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}