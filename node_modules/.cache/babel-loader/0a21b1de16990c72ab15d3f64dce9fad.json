{"ast":null,"code":"var _jsxFileName = \"E:\\\\newfrontend\\\\webfe\\\\src\\\\component\\\\Admin\\\\NewAppointment\\\\NewCreateAppointment\\\\AppointmentForm.js\";\nimport React, { Component } from \"react\";\nimport { NormalInput, NormalSelect, NormalButton, NormalDate, NormalModal, NormalCheckbox, NormalTextarea } from \"component/common\";\nimport { CreateAppointment, updateForm } from \"redux/actions/appointment\";\nimport { getCustomer, getCommonApi } from \"redux/actions/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { dateFormat } from \"service/helperFunctions\";\nimport { history } from \"helpers\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport closeIcon from \"assets/images/close.png\";\nimport _ from \"lodash\";\nimport { AddWalkinCustomer } from \"./NewWalkinCustomer\";\nimport { AppointmentLog } from \"../CommonModal/Appointmentlog\";\nimport logicon from \"assets/images/logicon.png\";\nimport { withTranslation } from \"react-i18next\";\nexport class AppointmentFormClass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: false,\n      appt_fr_time: \"\",\n      appt_to_time: \"\",\n      currentValue: \"-1\",\n      formFields: {\n        customerName: \"\",\n        emp_id: \"\",\n        appointmentDate: new Date(),\n        bookingStatus: \"\",\n        Source_Codeid: \"\",\n        ItemSite_Codeid: \"\",\n        new_remark: \"\",\n        Appt_typeid: \"\",\n        // emp_noid : 4,\n        Room_Codeid: \"\",\n        sec_status: \"\",\n        walkin: false,\n        remark_setting: false,\n        edit_remark: \"\",\n        cart_create: false\n      },\n      multipleCustomerForm: {\n        noOfCustomer: 1,\n        treatment: \"\",\n        room: \"\"\n      },\n      bookingList: [],\n      isOpenModal: false,\n      multipleCustomr: 1,\n      customerElement: [],\n      siteList: [],\n      sourceList: [],\n      channelList: [],\n      staffList: [],\n      secStatusList: [],\n      roomList: [],\n      customerOption: [],\n      search: \"\",\n      customerId: 0,\n      appointmentId: null,\n      isWalkin: false,\n      isAppointmentLogModal: false,\n      visible: false,\n      InitStatus: \"\"\n    };\n\n    this.componentWillMount = () => {\n      this.validator = new SimpleReactValidator({\n        element: message => /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error-message text-danger validNo fs14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }\n        }, message),\n        autoForceUpdate: this,\n        validators: {\n          date: {\n            // name the rule\n            message: \"The :attribute must be grater than today.\",\n            rule: (val, params, validator) => {\n              let date1 = new Date(dateFormat(new Date()));\n              let date2 = new Date(dateFormat(val));\n              console.log(\"gagasdfsdfsdffqwef\", date1, date2, date1.getTime(), date2.getTime());\n              return date1.getTime() <= date2.getTime();\n            },\n            //   messageReplace: (message, params) => message.replace(':values', this.helpers.toSentence(params)),  // optional\n            required: true // optional\n\n          }\n        }\n      });\n    };\n\n    this.componentDidMount = async () => {\n      this.props.getCustomer(\"all/\").then(() => {});\n      this.props.getCommonApi(\"bookingstatus/\").then(res => {\n        let {\n          status,\n          data,\n          sec_data\n        } = res;\n        console.log(data);\n\n        if (status === 200) {\n          this.setState({\n            bookingList: data,\n            secStatusList: sec_data\n          });\n        }\n      }); // this.handleCustomerElement()\n\n      this.props.onRef(this);\n      let {\n        staffList,\n        formFields\n      } = this.state;\n      let {\n        basicApptDetail\n      } = this.props;\n      formFields[\"appointmentDate\"] = basicApptDetail.date;\n      let booking_status = \"Booking\";\n      formFields[\"bookingStatus\"] = booking_status;\n      formFields[\"ItemSite_Codeid\"] = basicApptDetail.branchId;\n      this.setState({\n        formFields\n      });\n      await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\n      this.getListData();\n      this.props.getCommonApi(`appointment/Staffs/?Outlet=${this.state.formFields.ItemSite_Codeid}&date=${dateFormat(new Date())}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            staffList.push({\n              value: value.id,\n              label: value.emp_name\n            });\n          }\n\n          this.setState({\n            staffList\n          });\n        }\n      });\n\n      if (basicApptDetail.appt_id) {\n        console.log(basicApptDetail.appt_id);\n        this.setState({\n          appointmentId: basicApptDetail.appt_id\n        });\n        this.handleAppointmentDetailRender(basicApptDetail.appt_id, false);\n      } else if (this.props.PasteAppointmentId && this.props.PasteAppointmentId > 0) {\n        this.handleAppointmentDetailRender(this.props.PasteAppointmentId, true);\n      }\n    };\n\n    this.handleAppointmentDetailRender = (appt_id, copy) => {\n      let {\n        formFields,\n        InitStatus\n      } = this.state;\n      this.props.getCommonApi(`appointmentedit/${appt_id}/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          if (data.appointment) {\n            console.log(data.appointment, \"selectedCustomer\");\n            formFields[\"custName\"] = data.appointment.cust_name;\n\n            if (!copy) {\n              formFields[\"appointmentDate\"] = data.appointment.appt_date;\n              formFields[\"bookingStatus\"] = data.appointment.appt_status;\n              InitStatus = data.appointment.appt_status;\n            }\n\n            if (copy) {\n              let booking_status = \"Booking\";\n              formFields[\"bookingStatus\"] = booking_status;\n            }\n\n            formFields[\"new_remark\"] = data.appointment.ori_remark;\n            formFields[\"edit_remark\"] = data.appointment.edit_remark;\n            formFields[\"customerName\"] = data.appointment.cust_id;\n            formFields[\"Source_Codeid\"] = data.appointment.source_id;\n            formFields[\"Room_Codeid\"] = data.appointment.Room_Codeid;\n            formFields[\"sec_status\"] = data.appointment.sec_status;\n            formFields[\"Appt_typeid\"] = data.appointment.channel_id;\n            formFields[\"remark_setting\"] = data.appointment.remark_setting;\n            formFields[\"custPhone\"] = data.appointment.cust_phone1;\n            formFields[\"cust_remark\"] = data.appointment.permanent_remark;\n            this.setState({\n              formFields,\n              InitStatus\n            });\n            this.setState({\n              customerId: data.appointment.cust_id\n            });\n            this.props.selectedCustomer(data.appointment.cust_id);\n            this.props.updateForm(\"appointmentCustomerDetail\", formFields);\n          }\n        }\n      });\n    };\n\n    this.getListData = () => {\n      let {\n        staffList,\n        sourceList,\n        siteList,\n        channelList,\n        roomList\n      } = this.state;\n      this.props.getCommonApi(`source/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            sourceList.push({\n              value: value.id,\n              label: value.source_desc\n            });\n          }\n\n          this.setState({\n            sourceList\n          });\n          console.log(sourceList, \"jhksdfkjsdhfks\");\n        }\n      });\n      this.props.getCommonApi(`treatment/Outlet/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            siteList.push({\n              value: value.id,\n              label: value.itemsite_code\n            });\n          }\n\n          this.setState({\n            siteList\n          });\n          console.log(siteList, \"jhksdfkjsdhfks\");\n        }\n      });\n      this.props.getCommonApi(`appttype/`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            channelList.push({\n              value: value.id,\n              label: value.appt_type_desc\n            });\n          }\n\n          this.setState({\n            channelList\n          });\n          console.log(siteList, \"jhksdfkjsdhfks\");\n        }\n      });\n      this.props.getCommonApi(`room/?outlet=${this.state.formFields.ItemSite_Codeid}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          for (let value of data) {\n            roomList.push({\n              value: value.id,\n              label: value.displayname\n            });\n          }\n\n          this.setState({\n            roomList\n          });\n          console.log(roomList, \"jhksdfkjsdhfks\");\n        }\n      });\n    };\n\n    this.selectTime = async (key, type) => {\n      let {\n        formFields\n      } = this.state;\n\n      if (type === \"appt_fr_time\") {\n        formFields[\"appt_fr_time\"] = key;\n        await this.setState({\n          formFields,\n          appt_fr_time: key\n        });\n      } else {\n        formFields[\"appt_to_time\"] = key;\n        await this.setState({\n          formFields,\n          appt_to_time: key\n        });\n      }\n\n      await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\n      console.log(\"sdfsdfsdfsd\", formFields);\n    };\n\n    this.handleClick = key => {\n      if (!this.state.visible) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n\n      if (this.state.visible) {\n        let {\n          basicApptDetail\n        } = this.props;\n        this.search(basicApptDetail);\n      }\n\n      this.setState(prevState => ({\n        visible: !prevState.visible\n      }));\n    };\n\n    this.handleOutsideClick = e => {\n      if (this.node != null) {\n        if (this.node.contains(e.target)) {\n          return;\n        }\n      }\n\n      this.handleClick();\n    };\n\n    this.onFocus = () => {\n      this.validator.showMessages();\n    };\n\n    this.handleChange = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        formFields\n      } = this.state;\n      formFields[name] = value;\n      await this.setState({\n        formFields\n      });\n      this.props.updateForm(\"customerDetail\", formFields);\n      await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\n\n      if (name === \"ItemSite_Codeid\") {\n        let {\n          staffList\n        } = this.state;\n        this.props.getCommonApi(`appointment/Staffs/?Outlet=${value}`).then(key => {\n          let {\n            status,\n            data\n          } = key;\n\n          if (status === 200) {\n            for (let value of data) {\n              staffList.push({\n                value: value.id,\n                label: value.emp_name\n              });\n            }\n\n            this.setState({\n              staffList\n            });\n          }\n        });\n      }\n\n      if (name === \"walkin\") {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"customerName\"] = \"\";\n        formFields[\"custName\"] = \"\";\n        formFields[\"cust_refer\"] = \"\";\n        this.setState({\n          formFields\n        });\n        this.setState(prevState => ({\n          isWalkin: !prevState.isWalkin\n        }));\n      }\n\n      if (name == \"bookingStatus\" && String(value).toUpperCase() == \"CANCELLED\") {\n        let {\n          formFields\n        } = this.state;\n        formFields[\"sec_status\"] = \"Rescheduled\";\n        this.setState({\n          formFields\n        });\n      }\n    };\n\n    this.handleMultiple = async ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      let {\n        multipleCustomerForm\n      } = this.state;\n\n      if (name === \"noOfCustomer\") {\n        multipleCustomerForm[name] = Number(value);\n      }\n\n      if (name === \"sameForAllTreatment\" || name === \"differentForAllTreatment\") {\n        if (name === \"differentForAllTreatment\") {\n          multipleCustomerForm[\"treatment\"] = 2;\n        } else {\n          multipleCustomerForm[\"treatment\"] = 1;\n        }\n      } else {\n        if (name === \"differentForAllRoom\") {\n          multipleCustomerForm[\"room\"] = 2;\n        } else {\n          multipleCustomerForm[\"room\"] = 1;\n        }\n      }\n\n      await this.setState({\n        multipleCustomerForm\n      });\n      this.props.updateForm(\"multipleCustomerForm\", multipleCustomerForm);\n    };\n\n    this.handleSubmit = () => {\n      history.push(`/admin/newappointment/create/select-treatment`);\n    };\n\n    this.getTime = data => {\n      let time = data.split(\" \");\n      let time1 = time[0].split(\":\");\n      console.log(time, time1, \"kghjhgdjfgsdf\");\n\n      if (time[1] === \"pm\") {\n        return (Number(time1[0]) + 12 === 24 ? \"00\" : Number(time1[0]) + 12) + \":\" + time1[1];\n      } else {\n        return time1[0] < 9 ? \"0\" + time[0] : time1[0] + \":\" + time1[1];\n      }\n    };\n\n    this.handleDialog = () => {\n      let {\n        isOpenModal\n      } = this.state;\n      isOpenModal = !isOpenModal;\n      this.setState({\n        isOpenModal\n      });\n    };\n\n    this.handleMultipleCustomer = async () => {\n      let {\n        multipleCustomerForm\n      } = this.props;\n      await this.setState({\n        multipleCustomr: multipleCustomerForm.noOfCustomer,\n        customerElement: []\n      });\n      console.log(multipleCustomerForm, this.state, \"dkjfkshgfghdfk\", multipleCustomerForm.noOfCustomer);\n      this.handleCustomerElement(multipleCustomerForm.noOfCustomer);\n    };\n\n    this.handleSearch = async event => {\n      //    event.persist();\n      let {\n        formFields,\n        visible\n      } = this.state;\n      formFields[\"custName\"] = event.target.value;\n      visible = true;\n      await this.setState({\n        formFields,\n        visible\n      });\n      console.log(this.state.formFields.custName);\n\n      if (!this.debouncedFn) {\n        this.debouncedFn = _.debounce(async () => {\n          let {\n            customerList\n          } = this.state;\n          let {\n            basicApptDetail\n          } = this.props;\n          this.search(basicApptDetail);\n        }, 500);\n      }\n\n      this.debouncedFn();\n    };\n\n    this.search = basicApptDetail => {\n      let {\n        formFields\n      } = this.state;\n      this.props.getCommonApi(`custappt/?Outlet=${basicApptDetail.branchId ? basicApptDetail.branchId : \"\"}&search=${formFields.custName}`).then(key => {\n        let {\n          status,\n          data\n        } = key;\n\n        if (status === 200) {\n          // for (let value of data) {\n          //     customerList.push({ value: value.id, label: value.emp_name })\n          // }\n          this.setState({\n            customerOption: data\n          });\n        }\n      });\n    };\n\n    this.handleSelectCustomer = async data => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"customerName\"] = data.id;\n      formFields[\"custName\"] = data.cust_name;\n      formFields[\"custPhone\"] = data.cust_phone1;\n      formFields[\"cust_remark\"] = data.cust_remark;\n      formFields[\"cust_refer\"] = data.cust_refer;\n      await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\n      await this.setState({\n        formFields,\n        customerOption: []\n      });\n      await this.setState({\n        customerId: data.id\n      });\n      this.props.selectedCustomer(data.id);\n      this.handleClick();\n    };\n\n    this.handleWalkInCustomer = async data => {\n      let {\n        formFields\n      } = this.state;\n      formFields[\"customerName\"] = data.id;\n      formFields[\"custName\"] = data.cust_name;\n      formFields[\"custPhone\"] = data.cust_phone2;\n      formFields[\"cust_remark\"] = \"\";\n      await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\n      this.setState({\n        formFields\n      });\n      this.setState({\n        customerId: data.id\n      });\n      this.props.selectedCustomer(data.id);\n      this.setState(prevState => ({\n        isWalkin: !prevState.isWalkin\n      }));\n    };\n\n    this.handleLogClick = () => {\n      this.setState(prevState => ({\n        isAppointmentLogModal: !prevState.isAppointmentLogModal\n      }));\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.onRef(null);\n  }\n\n  render() {\n    let {\n      appt_fr_time,\n      active,\n      currentValue,\n      bookingList,\n      channelList,\n      secStatusList,\n      roomList,\n      customerOption,\n      isOpenModal,\n      multipleCustomr,\n      appt_to_time,\n      siteList,\n      sourceList,\n      staffList,\n      customerElement,\n      formFields,\n      appointmentId,\n      isWalkin,\n      isAppointmentLogModal,\n      visible,\n      InitStatus\n    } = this.state;\n    let {\n      customerDetail,\n      customerList,\n      multipleCustomerForm,\n      t\n    } = this.props;\n    let {\n      noOfCustomer,\n      treatment,\n      room\n    } = multipleCustomerForm;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4 pb-2 appointment-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start col-md-11 col-12 h5 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 13\n      }\n    }, appointmentId && appointmentId > 0 ? t(\"Edit Appointment\") : t(\"Create Appointment\")), appointmentId && appointmentId > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center bg-white cursor-pointer col-md-1 col-12\",\n      onClick: this.handleLogClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logicon,\n      alt: \"\",\n      width: \"35px\",\n      height: \"35px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 15\n      }\n    }, t(\"Date\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalDate, {\n      value: new Date(formFields.appointmentDate),\n      name: \"appointmentDate\",\n      type: \"date\",\n      onChange: this.handleChange,\n      minDate: new Date(),\n      showDisabledMonthNavigation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 17\n      }\n    })), this.validator.message(\"appointmentDate\", formFields.appointmentDate, \"required|date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 17\n      }\n    }, t(\"Name\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 19\n      }\n    }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 15\n      }\n    }, appointmentId ? /*#__PURE__*/React.createElement(NormalInput, {\n      value: formFields.custName,\n      name: \"customerName\",\n      onChange: this.handleSearch,\n      onClick: this.handleClick,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(NormalInput, {\n      placeholder: \"search\",\n      value: formFields.custName,\n      name: \"customerName\",\n      onChange: this.handleSearch,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 19\n      }\n    })), this.validator.message(\"customerName\", formFields.customerName, \"required\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 15\n      }\n    }, t(\"Booking Status\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message text-danger validNo fs-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 17\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\" }\n    , {\n      options: bookingList,\n      value: formFields.bookingStatus //\n      ,\n      name: \"bookingStatus\",\n      onChange: this.handleChange,\n      className: \"customer-name status py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }\n    }), this.validator.message(\"Booking Status\", formFields.bookingStatus, \"required\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 17\n      }\n    }, t(\"Channel\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: channelList,\n      value: formFields.Appt_typeid,\n      name: \"Appt_typeid\",\n      onChange: this.handleChange,\n      className: \"customer-name py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 15\n      }\n    }, t(\"Remark\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 15\n      }\n    }, formFields.remark_setting ? /*#__PURE__*/React.createElement(NormalTextarea // placeholder=\"Enter here\"\n    // options={siteList}\n    , {\n      value: formFields.new_remark,\n      name: \"new_remark\",\n      onChange: this.handleChange,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(NormalTextarea // placeholder=\"Enter here\"\n    // options={siteList}\n    , {\n      value: formFields.new_remark,\n      name: \"new_remark\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 17\n      }\n    }, t(\"Source Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: sourceList,\n      value: formFields.Source_Codeid,\n      name: \"Source_Codeid\",\n      onChange: this.handleChange,\n      className: \"customer-name py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 17\n      }\n    }, t(\"Room\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: roomList,\n      value: formFields.Room_Codeid,\n      name: \"Room_Codeid\",\n      onChange: this.handleChange,\n      className: \"customer-name py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 15\n      }\n    }, t(\"Secondary Status\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalSelect // placeholder=\"Enter here\"\n    , {\n      options: secStatusList,\n      value: formFields.sec_status,\n      name: \"sec_status\",\n      onChange: this.handleChange,\n      className: \"customer-name py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 17\n      }\n    }))), formFields.remark_setting ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 17\n      }\n    }, \"New Remark\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalTextarea // placeholder=\"Enter here\"\n    // options={siteList}\n    , {\n      value: formFields.edit_remark,\n      name: \"edit_remark\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 19\n      }\n    }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 15\n      }\n    }, t(\"Permanent Remark\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalTextarea, {\n      value: formFields.cust_remark,\n      name: \"cust_remark\",\n      onChange: () => {},\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 15\n      }\n    }, t(\"Phone\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NormalInput, {\n      value: formFields.custPhone,\n      name: \"custPhone\",\n      onChange: () => {},\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 17\n      }\n    }))), !appointmentId ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 17\n      }\n    }, t(\"Walkin\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: this.handleChange,\n      value: formFields.walkin,\n      name: \"walkin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 19\n      }\n    }))) : \"\", appointmentId && String(InitStatus).toUpperCase() !== \"\" && String(formFields.bookingStatus).toUpperCase() === \"ARRIVED\" && String(InitStatus).toUpperCase() !== \"ARRIVED\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 col-12 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left text-black common-label-text \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 17\n      }\n    }, t(\"Cart\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NormalCheckbox, {\n      onChange: this.handleChange,\n      value: formFields.cart_create,\n      name: \"cart_create\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 19\n      }\n    }))) : \"\", visible ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customerSearch-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mt-3 table table-header w-100 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 19\n      }\n    }, t(\"Name\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 19\n      }\n    }, t(\"Phone\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 19\n      }\n    }, t(\"Customer Code\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 19\n      }\n    }, t(\"Reference\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 19\n      }\n    }, t(\"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 19\n      }\n    }, t(\"NRIC\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"response-table w-100 row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 17\n      }\n    }, console.log(customerOption, \"customer search result\"), customerOption.length > 0 ? customerOption.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row m-0 table-body w-100 border\",\n        onClick: () => this.handleSelectCustomer(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 27\n        }\n      }, item.cust_name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 27\n        }\n      }, item.cust_phone1), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 27\n        }\n      }, item.cust_code), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 27\n        }\n      }, item.cust_refer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 27\n        }\n      }, item.cust_email), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 27\n        }\n      }, item.cust_nric));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 21\n      }\n    }, t(\"No Data Available\")))) : null, isWalkin ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddWalkinCustomer, {\n      site_codeId: formFields.ItemSite_Codeid,\n      handleWalkInCustomer: this.handleWalkInCustomer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 17\n      }\n    })) : \"\"), isAppointmentLogModal ? /*#__PURE__*/React.createElement(AppointmentLog, {\n      isAppointmentLogModal: isAppointmentLogModal,\n      handleLogClick: this.handleLogClick,\n      appointmentId: appointmentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 13\n      }\n    }) : null));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customerDetail: state.appointment.customerDetail,\n  customerList: state.common.customerList,\n  multipleCustomerForm: state.appointment.multipleCustomerForm,\n  basicApptDetail: state.appointment.basicApptDetail,\n  appointmentCustomerDetail: state.appointment.appointmentCustomerDetail\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    CreateAppointment,\n    updateForm,\n    getCustomer,\n    getCommonApi\n  }, dispatch);\n};\n\nexport const AppointmentForm = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(AppointmentFormClass));","map":{"version":3,"sources":["E:/newfrontend/webfe/src/component/Admin/NewAppointment/NewCreateAppointment/AppointmentForm.js"],"names":["React","Component","NormalInput","NormalSelect","NormalButton","NormalDate","NormalModal","NormalCheckbox","NormalTextarea","CreateAppointment","updateForm","getCustomer","getCommonApi","connect","bindActionCreators","dateFormat","history","SimpleReactValidator","closeIcon","_","AddWalkinCustomer","AppointmentLog","logicon","withTranslation","AppointmentFormClass","state","active","appt_fr_time","appt_to_time","currentValue","formFields","customerName","emp_id","appointmentDate","Date","bookingStatus","Source_Codeid","ItemSite_Codeid","new_remark","Appt_typeid","Room_Codeid","sec_status","walkin","remark_setting","edit_remark","cart_create","multipleCustomerForm","noOfCustomer","treatment","room","bookingList","isOpenModal","multipleCustomr","customerElement","siteList","sourceList","channelList","staffList","secStatusList","roomList","customerOption","search","customerId","appointmentId","isWalkin","isAppointmentLogModal","visible","InitStatus","componentWillMount","validator","element","message","autoForceUpdate","validators","date","rule","val","params","date1","date2","console","log","getTime","required","componentDidMount","props","then","res","status","data","sec_data","setState","onRef","basicApptDetail","booking_status","branchId","getListData","key","value","push","id","label","emp_name","appt_id","handleAppointmentDetailRender","PasteAppointmentId","copy","appointment","cust_name","appt_date","appt_status","ori_remark","cust_id","source_id","channel_id","cust_phone1","permanent_remark","selectedCustomer","source_desc","itemsite_code","appt_type_desc","displayname","selectTime","type","handleClick","document","addEventListener","handleOutsideClick","removeEventListener","prevState","e","node","contains","target","onFocus","showMessages","handleChange","name","String","toUpperCase","handleMultiple","Number","handleSubmit","time","split","time1","handleDialog","handleMultipleCustomer","handleCustomerElement","handleSearch","event","custName","debouncedFn","debounce","customerList","handleSelectCustomer","cust_remark","cust_refer","handleWalkInCustomer","cust_phone2","handleLogClick","componentWillUnmount","render","customerDetail","t","custPhone","length","map","item","index","cust_code","cust_email","cust_nric","mapStateToProps","common","appointmentCustomerDetail","mapDispatchToProps","dispatch","AppointmentForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  NormalInput,\r\n  NormalSelect,\r\n  NormalButton,\r\n  NormalDate,\r\n  NormalModal,\r\n  NormalCheckbox,\r\n  NormalTextarea,\r\n} from \"component/common\";\r\nimport { CreateAppointment, updateForm } from \"redux/actions/appointment\";\r\nimport { getCustomer, getCommonApi } from \"redux/actions/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { dateFormat } from \"service/helperFunctions\";\r\nimport { history } from \"helpers\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport closeIcon from \"assets/images/close.png\";\r\nimport _ from \"lodash\";\r\nimport { AddWalkinCustomer } from \"./NewWalkinCustomer\";\r\nimport { AppointmentLog } from \"../CommonModal/Appointmentlog\";\r\nimport logicon from \"assets/images/logicon.png\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class AppointmentFormClass extends Component {\r\n  state = {\r\n    active: false,\r\n    appt_fr_time: \"\",\r\n    appt_to_time: \"\",\r\n    currentValue: \"-1\",\r\n    formFields: {\r\n      customerName: \"\",\r\n      emp_id: \"\",\r\n      appointmentDate: new Date(),\r\n      bookingStatus: \"\",\r\n      Source_Codeid: \"\",\r\n      ItemSite_Codeid: \"\",\r\n      new_remark: \"\",\r\n      Appt_typeid: \"\",\r\n      // emp_noid : 4,\r\n      Room_Codeid: \"\",\r\n      sec_status: \"\",\r\n      walkin: false,\r\n      remark_setting: false,\r\n      edit_remark: \"\",\r\n      cart_create: false,\r\n    },\r\n    multipleCustomerForm: {\r\n      noOfCustomer: 1,\r\n      treatment: \"\",\r\n      room: \"\",\r\n    },\r\n    bookingList: [],\r\n    isOpenModal: false,\r\n    multipleCustomr: 1,\r\n    customerElement: [],\r\n    siteList: [],\r\n    sourceList: [],\r\n    channelList: [],\r\n    staffList: [],\r\n    secStatusList: [],\r\n    roomList: [],\r\n    customerOption: [],\r\n    search: \"\",\r\n    customerId: 0,\r\n    appointmentId: null,\r\n    isWalkin: false,\r\n    isAppointmentLogModal: false,\r\n    visible: false,\r\n    InitStatus: \"\",\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => (\r\n        <span className=\"error-message text-danger validNo fs14\">\r\n          {message}\r\n        </span>\r\n      ),\r\n      autoForceUpdate: this,\r\n      validators: {\r\n        date: {\r\n          // name the rule\r\n          message: \"The :attribute must be grater than today.\",\r\n          rule: (val, params, validator) => {\r\n            let date1 = new Date(dateFormat(new Date()));\r\n            let date2 = new Date(dateFormat(val));\r\n            console.log(\r\n              \"gagasdfsdfsdffqwef\",\r\n              date1,\r\n              date2,\r\n              date1.getTime(),\r\n              date2.getTime()\r\n            );\r\n            return date1.getTime() <= date2.getTime();\r\n          },\r\n          //   messageReplace: (message, params) => message.replace(':values', this.helpers.toSentence(params)),  // optional\r\n          required: true, // optional\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.props.getCustomer(\"all/\").then(() => {});\r\n    this.props.getCommonApi(\"bookingstatus/\").then(res => {\r\n      let { status, data, sec_data } = res;\r\n      console.log(data);\r\n      if (status === 200) {\r\n        this.setState({ bookingList: data, secStatusList: sec_data });\r\n      }\r\n    });\r\n    // this.handleCustomerElement()\r\n    this.props.onRef(this);\r\n    let { staffList, formFields } = this.state;\r\n    let { basicApptDetail } = this.props;\r\n    formFields[\"appointmentDate\"] = basicApptDetail.date;\r\n\r\n    let booking_status = \"Booking\";\r\n    formFields[\"bookingStatus\"] = booking_status;\r\n    formFields[\"ItemSite_Codeid\"] = basicApptDetail.branchId;\r\n    this.setState({ formFields });\r\n    await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\r\n    this.getListData();\r\n    this.props\r\n      .getCommonApi(\r\n        `appointment/Staffs/?Outlet=${\r\n          this.state.formFields.ItemSite_Codeid\r\n        }&date=${dateFormat(new Date())}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          for (let value of data) {\r\n            staffList.push({ value: value.id, label: value.emp_name });\r\n          }\r\n          this.setState({ staffList });\r\n        }\r\n      });\r\n\r\n    if (basicApptDetail.appt_id) {\r\n      console.log(basicApptDetail.appt_id);\r\n      this.setState({ appointmentId: basicApptDetail.appt_id });\r\n      this.handleAppointmentDetailRender(basicApptDetail.appt_id, false);\r\n    } else if (\r\n      this.props.PasteAppointmentId &&\r\n      this.props.PasteAppointmentId > 0\r\n    ) {\r\n      this.handleAppointmentDetailRender(this.props.PasteAppointmentId, true);\r\n    }\r\n  };\r\n\r\n  handleAppointmentDetailRender = (appt_id, copy) => {\r\n    let { formFields, InitStatus } = this.state;\r\n    this.props.getCommonApi(`appointmentedit/${appt_id}/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        if (data.appointment) {\r\n          console.log(data.appointment, \"selectedCustomer\");\r\n          formFields[\"custName\"] = data.appointment.cust_name;\r\n          if (!copy) {\r\n            formFields[\"appointmentDate\"] = data.appointment.appt_date;\r\n            formFields[\"bookingStatus\"] = data.appointment.appt_status;\r\n            InitStatus = data.appointment.appt_status;\r\n          }\r\n          if (copy) {\r\n            let booking_status = \"Booking\";\r\n            formFields[\"bookingStatus\"] = booking_status;\r\n          }\r\n\r\n          formFields[\"new_remark\"] = data.appointment.ori_remark;\r\n          formFields[\"edit_remark\"] = data.appointment.edit_remark;\r\n          formFields[\"customerName\"] = data.appointment.cust_id;\r\n          formFields[\"Source_Codeid\"] = data.appointment.source_id;\r\n          formFields[\"Room_Codeid\"] = data.appointment.Room_Codeid;\r\n          formFields[\"sec_status\"] = data.appointment.sec_status;\r\n          formFields[\"Appt_typeid\"] = data.appointment.channel_id;\r\n          formFields[\"remark_setting\"] = data.appointment.remark_setting;\r\n          formFields[\"custPhone\"] = data.appointment.cust_phone1;\r\n          formFields[\"cust_remark\"] = data.appointment.permanent_remark;\r\n          this.setState({ formFields, InitStatus });\r\n          this.setState({ customerId: data.appointment.cust_id });\r\n          this.props.selectedCustomer(data.appointment.cust_id);\r\n          this.props.updateForm(\"appointmentCustomerDetail\", formFields);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(null);\r\n  }\r\n\r\n  getListData = () => {\r\n    let { staffList, sourceList, siteList, channelList, roomList } = this.state;\r\n\r\n    this.props.getCommonApi(`source/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          sourceList.push({ value: value.id, label: value.source_desc });\r\n        }\r\n        this.setState({ sourceList });\r\n        console.log(sourceList, \"jhksdfkjsdhfks\");\r\n      }\r\n    });\r\n    this.props.getCommonApi(`treatment/Outlet/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          siteList.push({ value: value.id, label: value.itemsite_code });\r\n        }\r\n        this.setState({ siteList });\r\n        console.log(siteList, \"jhksdfkjsdhfks\");\r\n      }\r\n    });\r\n    this.props.getCommonApi(`appttype/`).then(key => {\r\n      let { status, data } = key;\r\n      if (status === 200) {\r\n        for (let value of data) {\r\n          channelList.push({ value: value.id, label: value.appt_type_desc });\r\n        }\r\n        this.setState({ channelList });\r\n        console.log(siteList, \"jhksdfkjsdhfks\");\r\n      }\r\n    });\r\n    this.props\r\n      .getCommonApi(`room/?outlet=${this.state.formFields.ItemSite_Codeid}`)\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          for (let value of data) {\r\n            roomList.push({ value: value.id, label: value.displayname });\r\n          }\r\n          this.setState({ roomList });\r\n          console.log(roomList, \"jhksdfkjsdhfks\");\r\n        }\r\n      });\r\n  };\r\n\r\n  selectTime = async (key, type) => {\r\n    let { formFields } = this.state;\r\n    if (type === \"appt_fr_time\") {\r\n      formFields[\"appt_fr_time\"] = key;\r\n      await this.setState({\r\n        formFields,\r\n        appt_fr_time: key,\r\n      });\r\n    } else {\r\n      formFields[\"appt_to_time\"] = key;\r\n      await this.setState({\r\n        formFields,\r\n        appt_to_time: key,\r\n      });\r\n    }\r\n\r\n    await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\r\n    console.log(\"sdfsdfsdfsd\", formFields);\r\n  };\r\n\r\n  handleClick = key => {\r\n    if (!this.state.visible) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    if (this.state.visible) {\r\n      let { basicApptDetail } = this.props;\r\n      this.search(basicApptDetail);\r\n    }\r\n    this.setState(prevState => ({\r\n      visible: !prevState.visible,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node != null) {\r\n      if (this.node.contains(e.target)) {\r\n        return;\r\n      }\r\n    }\r\n    this.handleClick();\r\n  };\r\n\r\n  onFocus = () => {\r\n    this.validator.showMessages();\r\n  };\r\n\r\n  handleChange = async ({ target: { value, name } }) => {\r\n    let { formFields } = this.state;\r\n    formFields[name] = value;\r\n    await this.setState({\r\n      formFields,\r\n    });\r\n    this.props.updateForm(\"customerDetail\", formFields);\r\n    await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\r\n    if (name === \"ItemSite_Codeid\") {\r\n      let { staffList } = this.state;\r\n      this.props\r\n        .getCommonApi(`appointment/Staffs/?Outlet=${value}`)\r\n        .then(key => {\r\n          let { status, data } = key;\r\n          if (status === 200) {\r\n            for (let value of data) {\r\n              staffList.push({ value: value.id, label: value.emp_name });\r\n            }\r\n            this.setState({ staffList });\r\n          }\r\n        });\r\n    }\r\n\r\n    if (name === \"walkin\") {\r\n      let { formFields } = this.state;\r\n      formFields[\"customerName\"] = \"\";\r\n      formFields[\"custName\"] = \"\";\r\n      formFields[\"cust_refer\"] = \"\";\r\n      this.setState({ formFields });\r\n      this.setState(prevState => ({\r\n        isWalkin: !prevState.isWalkin,\r\n      }));\r\n    }\r\n    if (name == \"bookingStatus\" && String(value).toUpperCase() == \"CANCELLED\") {\r\n      let { formFields } = this.state;\r\n      formFields[\"sec_status\"] = \"Rescheduled\";\r\n      this.setState({\r\n        formFields,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleMultiple = async ({ target: { value, name } }) => {\r\n    let { multipleCustomerForm } = this.state;\r\n    if (name === \"noOfCustomer\") {\r\n      multipleCustomerForm[name] = Number(value);\r\n    }\r\n    if (name === \"sameForAllTreatment\" || name === \"differentForAllTreatment\") {\r\n      if (name === \"differentForAllTreatment\") {\r\n        multipleCustomerForm[\"treatment\"] = 2;\r\n      } else {\r\n        multipleCustomerForm[\"treatment\"] = 1;\r\n      }\r\n    } else {\r\n      if (name === \"differentForAllRoom\") {\r\n        multipleCustomerForm[\"room\"] = 2;\r\n      } else {\r\n        multipleCustomerForm[\"room\"] = 1;\r\n      }\r\n    }\r\n\r\n    await this.setState({\r\n      multipleCustomerForm,\r\n    });\r\n    this.props.updateForm(\"multipleCustomerForm\", multipleCustomerForm);\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    history.push(`/admin/newappointment/create/select-treatment`);\r\n  };\r\n\r\n  getTime = data => {\r\n    let time = data.split(\" \");\r\n    let time1 = time[0].split(\":\");\r\n    console.log(time, time1, \"kghjhgdjfgsdf\");\r\n    if (time[1] === \"pm\") {\r\n      return (\r\n        (Number(time1[0]) + 12 === 24 ? \"00\" : Number(time1[0]) + 12) +\r\n        \":\" +\r\n        time1[1]\r\n      );\r\n    } else {\r\n      return time1[0] < 9 ? \"0\" + time[0] : time1[0] + \":\" + time1[1];\r\n    }\r\n  };\r\n\r\n  handleDialog = () => {\r\n    let { isOpenModal } = this.state;\r\n    isOpenModal = !isOpenModal;\r\n    this.setState({\r\n      isOpenModal,\r\n    });\r\n  };\r\n\r\n  handleMultipleCustomer = async () => {\r\n    let { multipleCustomerForm } = this.props;\r\n    await this.setState({\r\n      multipleCustomr: multipleCustomerForm.noOfCustomer,\r\n      customerElement: [],\r\n    });\r\n    console.log(\r\n      multipleCustomerForm,\r\n      this.state,\r\n      \"dkjfkshgfghdfk\",\r\n      multipleCustomerForm.noOfCustomer\r\n    );\r\n    this.handleCustomerElement(multipleCustomerForm.noOfCustomer);\r\n  };\r\n\r\n  handleSearch = async event => {\r\n    //    event.persist();\r\n    let { formFields, visible } = this.state;\r\n    formFields[\"custName\"] = event.target.value;\r\n    visible = true;\r\n    await this.setState({ formFields, visible });\r\n    console.log(this.state.formFields.custName);\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(async () => {\r\n        let { customerList } = this.state;\r\n        let { basicApptDetail } = this.props;\r\n        this.search(basicApptDetail);\r\n      }, 500);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n\r\n  search = basicApptDetail => {\r\n    let { formFields } = this.state;\r\n    this.props\r\n      .getCommonApi(\r\n        `custappt/?Outlet=${\r\n          basicApptDetail.branchId ? basicApptDetail.branchId : \"\"\r\n        }&search=${formFields.custName}`\r\n      )\r\n      .then(key => {\r\n        let { status, data } = key;\r\n        if (status === 200) {\r\n          // for (let value of data) {\r\n          //     customerList.push({ value: value.id, label: value.emp_name })\r\n          // }\r\n          this.setState({ customerOption: data });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleSelectCustomer = async data => {\r\n    let { formFields } = this.state;\r\n    formFields[\"customerName\"] = data.id;\r\n    formFields[\"custName\"] = data.cust_name;\r\n    formFields[\"custPhone\"] = data.cust_phone1;\r\n    formFields[\"cust_remark\"] = data.cust_remark;\r\n    formFields[\"cust_refer\"] = data.cust_refer;\r\n    await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\r\n    await this.setState({ formFields, customerOption: [] });\r\n    await this.setState({ customerId: data.id });\r\n    this.props.selectedCustomer(data.id);\r\n    this.handleClick();\r\n  };\r\n\r\n  handleWalkInCustomer = async data => {\r\n    let { formFields } = this.state;\r\n    formFields[\"customerName\"] = data.id;\r\n    formFields[\"custName\"] = data.cust_name;\r\n    formFields[\"custPhone\"] = data.cust_phone2;\r\n    formFields[\"cust_remark\"] = \"\";\r\n    await this.props.updateForm(\"appointmentCustomerDetail\", formFields);\r\n    this.setState({ formFields });\r\n    this.setState({ customerId: data.id });\r\n    this.props.selectedCustomer(data.id);\r\n    this.setState(prevState => ({\r\n      isWalkin: !prevState.isWalkin,\r\n    }));\r\n  };\r\n\r\n  handleLogClick = () => {\r\n    this.setState(prevState => ({\r\n      isAppointmentLogModal: !prevState.isAppointmentLogModal,\r\n    }));\r\n  };\r\n  render() {\r\n    let {\r\n      appt_fr_time,\r\n      active,\r\n      currentValue,\r\n      bookingList,\r\n      channelList,\r\n      secStatusList,\r\n      roomList,\r\n      customerOption,\r\n      isOpenModal,\r\n      multipleCustomr,\r\n      appt_to_time,\r\n      siteList,\r\n      sourceList,\r\n      staffList,\r\n      customerElement,\r\n      formFields,\r\n      appointmentId,\r\n      isWalkin,\r\n      isAppointmentLogModal,\r\n      visible,\r\n      InitStatus,\r\n    } = this.state;\r\n    let { customerDetail, customerList, multipleCustomerForm, t } = this.props;\r\n    let { noOfCustomer, treatment, room } = multipleCustomerForm;\r\n    return (\r\n      <>\r\n        <div className=\"form-group mb-4 pb-2 appointment-form\">\r\n          <div className=\"d-flex\">\r\n            <div className=\"d-flex justify-content-start col-md-11 col-12 h5 p-0\">\r\n              {appointmentId && appointmentId > 0\r\n                ? t(\"Edit Appointment\")\r\n                : t(\"Create Appointment\")}\r\n            </div>\r\n            {appointmentId && appointmentId > 0 ? (\r\n              <div\r\n                className=\"d-flex justify-content-end align-items-center bg-white cursor-pointer col-md-1 col-12\"\r\n                onClick={this.handleLogClick}\r\n              >\r\n                <img src={logicon} alt=\"\" width=\"35px\" height=\"35px\" />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 mb-3\">\r\n              <label className=\"text-left text-black common-label-text \">\r\n                {t(\"Date\")}{\" \"}\r\n                <span className=\"error-message text-danger validNo fs-18\">\r\n                  *\r\n                </span>\r\n              </label>\r\n              <div className=\"\">\r\n                <NormalDate\r\n                  value={new Date(formFields.appointmentDate)}\r\n                  name=\"appointmentDate\"\r\n                  type=\"date\"\r\n                  onChange={this.handleChange}\r\n                  minDate={new Date()}\r\n                  showDisabledMonthNavigation\r\n                />\r\n              </div>\r\n              {this.validator.message(\r\n                \"appointmentDate\",\r\n                formFields.appointmentDate,\r\n                \"required|date\"\r\n              )}\r\n            </div>\r\n            <div className=\"col-md-3 mb-3\">\r\n              <div>\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Name\")}{\" \"}\r\n                  <span className=\"error-message text-danger validNo fs-18\">\r\n                    *\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              <div className=\"input-group\">\r\n                {appointmentId ? (\r\n                  <NormalInput\r\n                    value={formFields.custName}\r\n                    name=\"customerName\"\r\n                    onChange={this.handleSearch}\r\n                    onClick={this.handleClick}\r\n                    disabled\r\n                  />\r\n                ) : (\r\n                  <NormalInput\r\n                    placeholder=\"search\"\r\n                    value={formFields.custName}\r\n                    name=\"customerName\"\r\n                    onChange={this.handleSearch}\r\n                    onClick={this.handleClick}\r\n                  />\r\n                )}\r\n              </div>\r\n              {this.validator.message(\r\n                \"customerName\",\r\n                formFields.customerName,\r\n                \"required\"\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col-md-3 mb-3\">\r\n              <label className=\"text-left text-black common-label-text \">\r\n                {t(\"Booking Status\")}{\" \"}\r\n                <span className=\"error-message text-danger validNo fs-18\">\r\n                  *\r\n                </span>\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalSelect\r\n                  // placeholder=\"Enter here\" }\r\n                  options={bookingList}\r\n                  value={formFields.bookingStatus} //\r\n                  name=\"bookingStatus\"\r\n                  onChange={this.handleChange}\r\n                  className=\"customer-name status py-1\"\r\n                />\r\n                {this.validator.message(\r\n                  \"Booking Status\",\r\n                  formFields.bookingStatus,\r\n                  \"required\"\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 mb-3\">\r\n              <div>\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Channel\")}\r\n                </label>\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <NormalSelect\r\n                  // placeholder=\"Enter here\"\r\n                  options={channelList}\r\n                  value={formFields.Appt_typeid}\r\n                  name=\"Appt_typeid\"\r\n                  onChange={this.handleChange}\r\n                  className=\"customer-name py-1\"\r\n                />\r\n              </div>\r\n              {/* {this.validator.message('Appt_typeid', formFields.Appt_typeid, 'required')} */}\r\n            </div>\r\n\r\n            <div className=\"col-md-3 mb-3\">\r\n              <label className=\"text-left text-black common-label-text \">\r\n                {t(\"Remark\")}\r\n              </label>\r\n\r\n              <div className=\"input-group\">\r\n                {formFields.remark_setting ? (\r\n                  <NormalTextarea\r\n                    // placeholder=\"Enter here\"\r\n                    // options={siteList}\r\n                    value={formFields.new_remark}\r\n                    name=\"new_remark\"\r\n                    onChange={this.handleChange}\r\n                    disabled\r\n                  />\r\n                ) : (\r\n                  <NormalTextarea\r\n                    // placeholder=\"Enter here\"\r\n                    // options={siteList}\r\n                    value={formFields.new_remark}\r\n                    name=\"new_remark\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                )}\r\n              </div>\r\n              {/* {this.validator.message('Remark', formFields.new_remark, 'required')} */}\r\n            </div>\r\n\r\n            <div className=\"col-md-3 mb-3\">\r\n              <div>\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Source Name\")}\r\n                </label>\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <NormalSelect\r\n                  // placeholder=\"Enter here\"\r\n                  options={sourceList}\r\n                  value={formFields.Source_Codeid}\r\n                  name=\"Source_Codeid\"\r\n                  onChange={this.handleChange}\r\n                  className=\"customer-name py-1\"\r\n                />\r\n              </div>\r\n              {/* {this.validator.message('Source name', formFields.Source_Codeid, 'required')} */}\r\n            </div>\r\n            <div className=\"col-md-3 mb-3\">\r\n              <div>\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Room\")}\r\n                </label>\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <NormalSelect\r\n                  // placeholder=\"Enter here\"\r\n                  options={roomList}\r\n                  value={formFields.Room_Codeid}\r\n                  name=\"Room_Codeid\"\r\n                  onChange={this.handleChange}\r\n                  className=\"customer-name py-1\"\r\n                />\r\n              </div>\r\n              {/* {this.validator.message('Room', formFields.Room_Codeid, 'required')} */}\r\n            </div>\r\n\r\n            <div className=\"col-md-3 col-12 mb-3\">\r\n              <label className=\"text-left text-black common-label-text \">\r\n                {t(\"Secondary Status\")}\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <NormalSelect\r\n                  // placeholder=\"Enter here\"\r\n                  options={secStatusList}\r\n                  value={formFields.sec_status}\r\n                  name=\"sec_status\"\r\n                  onChange={this.handleChange}\r\n                  className=\"customer-name py-1\"\r\n                />\r\n                {/* {this.validator.message('Secondary Status', formFields.sec_status, 'required')} */}\r\n              </div>\r\n            </div>\r\n            {formFields.remark_setting ? (\r\n              <div className=\"col-md-3 mb-3\">\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  New Remark\r\n                </label>\r\n\r\n                <div className=\"input-group\">\r\n                  <NormalTextarea\r\n                    // placeholder=\"Enter here\"\r\n                    // options={siteList}\r\n                    value={formFields.edit_remark}\r\n                    name=\"edit_remark\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"col-md-3 mb-3\">\r\n              <label className=\"text-left text-black common-label-text \">\r\n                {t(\"Permanent Remark\")}\r\n              </label>\r\n\r\n              <div className=\"input-group\">\r\n                <NormalTextarea\r\n                  value={formFields.cust_remark}\r\n                  name=\"cust_remark\"\r\n                  onChange={() => {}}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-2 col-12 mb-3\">\r\n              <label className=\"text-left text-black common-label-text \">\r\n                {t(\"Phone\")}\r\n              </label>\r\n\r\n              <div className=\"input-group\">\r\n                <NormalInput\r\n                  value={formFields.custPhone}\r\n                  name=\"custPhone\"\r\n                  onChange={() => {}}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {!appointmentId ? (\r\n              <div className=\"col-md-1 col-12 mb-3\">\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Walkin\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalCheckbox\r\n                    onChange={this.handleChange}\r\n                    value={formFields.walkin}\r\n                    name=\"walkin\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {appointmentId &&\r\n            String(InitStatus).toUpperCase() !== \"\" &&\r\n            String(formFields.bookingStatus).toUpperCase() === \"ARRIVED\" &&\r\n            String(InitStatus).toUpperCase() !== \"ARRIVED\" ? (\r\n              <div className=\"col-md-1 col-12 mb-3\">\r\n                <label className=\"text-left text-black common-label-text \">\r\n                  {t(\"Cart\")}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <NormalCheckbox\r\n                    onChange={this.handleChange}\r\n                    value={formFields.cart_create}\r\n                    name=\"cart_create\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {visible ? (\r\n              <div className=\"customerSearch-block\">\r\n                <div className=\"d-flex mt-3 table table-header w-100 m-0\">\r\n                  <div className=\"col-2\">{t(\"Name\")}</div>\r\n                  <div className=\"col-2\">{t(\"Phone\")}</div>\r\n                  <div className=\"col-2\">{t(\"Customer Code\")}</div>\r\n                  <div className=\"col-2\">{t(\"Reference\")}</div>\r\n                  <div className=\"col-3\">{t(\"Email\")}</div>\r\n                  <div className=\"col-1\">{t(\"NRIC\")}</div>\r\n                </div>\r\n                <div className=\"response-table w-100 row\">\r\n                  {console.log(customerOption, \"customer search result\")}\r\n                  {customerOption.length > 0 ? (\r\n                    customerOption.map((item, index) => {\r\n                      return (\r\n                        <div\r\n                          className=\"row m-0 table-body w-100 border\"\r\n                          onClick={() => this.handleSelectCustomer(item)}\r\n                          key={index}\r\n                        >\r\n                          <div className=\"col-2\">{item.cust_name}</div>\r\n                          <div className=\"col-2\">{item.cust_phone1}</div>\r\n                          <div className=\"col-2\">{item.cust_code}</div>\r\n                          <div className=\"col-2\">{item.cust_refer}</div>\r\n                          <div className=\"col-3\">{item.cust_email}</div>\r\n                          <div className=\"col-1\">{item.cust_nric}</div>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <div className=\"text-center w-100\">\r\n                      {t(\"No Data Available\")}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {isWalkin ? (\r\n              <>\r\n                <AddWalkinCustomer\r\n                  site_codeId={formFields.ItemSite_Codeid}\r\n                  handleWalkInCustomer={this.handleWalkInCustomer}\r\n                />\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          {isAppointmentLogModal ? (\r\n            <AppointmentLog\r\n              isAppointmentLogModal={isAppointmentLogModal}\r\n              handleLogClick={this.handleLogClick}\r\n              appointmentId={appointmentId}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customerDetail: state.appointment.customerDetail,\r\n  customerList: state.common.customerList,\r\n  multipleCustomerForm: state.appointment.multipleCustomerForm,\r\n  basicApptDetail: state.appointment.basicApptDetail,\r\n  appointmentCustomerDetail: state.appointment.appointmentCustomerDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      CreateAppointment,\r\n      updateForm,\r\n      getCustomer,\r\n      getCommonApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const AppointmentForm = withTranslation()(\r\n  connect(mapStateToProps, mapDispatchToProps)(AppointmentFormClass)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}