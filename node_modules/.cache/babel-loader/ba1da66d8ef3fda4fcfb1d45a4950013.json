{"ast":null,"code":"/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.field_chooser_base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\n\nvar _click = require(\"../../events/click\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\n\nvar _uiGrid_core = require(\"../grid_core/ui.grid_core.header_filter_core\");\n\nvar _uiGrid_core2 = _interopRequireDefault(require(\"../grid_core/ui.grid_core.column_state_mixin\"));\n\nvar _uiGrid_core3 = _interopRequireDefault(require(\"../grid_core/ui.grid_core.sorting_mixin\"));\n\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\n\nvar _ui2 = _interopRequireDefault(require(\"./ui.sortable\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar IE_FIELD_WIDTH_CORRECTION = 1;\nvar DIV = \"<div>\";\n\nvar HeaderFilterView = _uiGrid_core.HeaderFilterView.inherit({\n  _getSearchExpr: function _getSearchExpr(options) {\n    options.useDefaultSearchExpr = true;\n    return this.callBase(options);\n  }\n});\n\nvar processItems = function processItems(groupItems, field) {\n  var filterValues = [];\n  var isTree = !!field.groupName;\n  var isExcludeFilterType = \"exclude\" === field.filterType;\n\n  if (field.filterValues) {\n    (0, _iterator.each)(field.filterValues, function (_, filterValue) {\n      filterValues.push(Array.isArray(filterValue) ? filterValue.join(\"/\") : filterValue && filterValue.valueOf());\n    });\n  }\n\n  (0, _uiPivot_grid.foreachTree)(groupItems, function (items) {\n    var item = items[0];\n    var path = (0, _uiPivot_grid.createPath)(items);\n    var preparedFilterValueByText = isTree ? (0, _iterator.map)(items, function (item) {\n      return item.text;\n    }).reverse().join(\"/\") : item.text;\n    item.value = isTree ? path.slice(0) : item.key || item.value;\n    var preparedFilterValue = isTree ? path.join(\"/\") : item.value && item.value.valueOf();\n\n    if (item.children) {\n      item.items = item.children;\n      item.children = null;\n    }\n\n    (0, _uiGrid_core.updateHeaderFilterItemSelectionState)(item, item.key && (0, _array.inArray)(preparedFilterValueByText, filterValues) > -1 || (0, _array.inArray)(preparedFilterValue, filterValues) > -1, isExcludeFilterType);\n  });\n};\n\nfunction getMainGroupField(dataSource, sourceField) {\n  var field = sourceField;\n\n  if ((0, _type.isDefined)(sourceField.groupIndex)) {\n    field = dataSource.getAreaFields(sourceField.area, true)[sourceField.areaIndex];\n  }\n\n  return field;\n}\n\nfunction getStringState(state) {\n  state = state || {};\n  return JSON.stringify([state.fields, state.columnExpandedPaths, state.rowExpandedPaths]);\n}\n\nvar FieldChooserBase = _ui.default.inherit(_uiGrid_core2.default).inherit(_uiGrid_core3.default).inherit(_uiGrid_core.headerFilterMixin).inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      allowFieldDragging: true,\n      applyChangesMode: \"instantly\",\n      state: null,\n      headerFilter: {\n        width: 252,\n        height: 325,\n        searchTimeout: 500,\n        texts: {\n          emptyValue: _message.default.format(\"dxDataGrid-headerFilterEmptyValue\"),\n          ok: _message.default.format(\"dxDataGrid-headerFilterOK\"),\n          cancel: _message.default.format(\"dxDataGrid-headerFilterCancel\")\n        }\n      }\n    });\n  },\n  _init: function _init() {\n    this.callBase();\n    this._headerFilterView = new HeaderFilterView(this);\n\n    this._refreshDataSource();\n\n    this.subscribeToEvents();\n  },\n  _refreshDataSource: function _refreshDataSource() {\n    var dataSource = this.option(\"dataSource\");\n\n    if (dataSource && dataSource.fields && dataSource.load) {\n      this._dataSource = dataSource;\n    }\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"dataSource\":\n        this._refreshDataSource();\n\n        break;\n\n      case \"applyChangesMode\":\n        break;\n\n      case \"state\":\n        if (this._skipStateChange || !this._dataSource) {\n          break;\n        }\n\n        if (\"instantly\" === this.option(\"applyChangesMode\") && getStringState(this._dataSource.state()) !== getStringState(args.value)) {\n          this._dataSource.state(args.value);\n        } else {\n          this._clean(true);\n\n          this._renderComponent();\n        }\n\n        break;\n\n      case \"headerFilter\":\n      case \"allowFieldDragging\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  renderField: function renderField(field, showColumnLines) {\n    var that = this;\n    var $fieldContent = (0, _renderer.default)(DIV).addClass(\"dx-area-field-content\").text(field.caption || field.dataField);\n    var $fieldElement = (0, _renderer.default)(DIV).addClass(\"dx-area-field\").addClass(\"dx-area-box\").data(\"field\", field).append($fieldContent);\n    var mainGroupField = getMainGroupField(that._dataSource, field);\n\n    if (\"data\" !== field.area) {\n      if (field.allowSorting) {\n        that._applyColumnState({\n          name: \"sort\",\n          rootElement: $fieldElement,\n          column: {\n            alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\n            sortOrder: \"desc\" === field.sortOrder ? \"desc\" : \"asc\"\n          },\n          showColumnLines: showColumnLines\n        });\n      }\n\n      that._applyColumnState({\n        name: \"headerFilter\",\n        rootElement: $fieldElement,\n        column: {\n          alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\n          filterValues: mainGroupField.filterValues,\n          allowFiltering: mainGroupField.allowFiltering && !field.groupIndex\n        },\n        showColumnLines: showColumnLines\n      });\n    }\n\n    if (field.groupName) {\n      $fieldElement.attr(\"item-group\", field.groupName);\n    }\n\n    return $fieldElement;\n  },\n  _clean: function _clean() {},\n  _render: function _render() {\n    this.callBase();\n\n    this._headerFilterView.render(this.$element());\n  },\n  renderSortable: function renderSortable() {\n    var that = this;\n\n    that._createComponent(that.$element(), _ui2.default, (0, _extend.extend)({\n      allowDragging: that.option(\"allowFieldDragging\"),\n      itemSelector: \".dx-area-field\",\n      itemContainerSelector: \".dx-area-field-container\",\n      groupSelector: \".dx-area-fields\",\n      groupFilter: function groupFilter() {\n        var dataSource = that._dataSource;\n        var $sortable = (0, _renderer.default)(this).closest(\".dx-sortable-old\");\n        var pivotGrid = $sortable.data(\"dxPivotGrid\");\n        var pivotGridFieldChooser = $sortable.data(\"dxPivotGridFieldChooser\");\n\n        if (pivotGrid) {\n          return pivotGrid.getDataSource() === dataSource;\n        }\n\n        if (pivotGridFieldChooser) {\n          return pivotGridFieldChooser.option(\"dataSource\") === dataSource;\n        }\n\n        return false;\n      },\n      itemRender: function itemRender($sourceItem, target) {\n        var $item;\n\n        if ($sourceItem.hasClass(\"dx-area-box\")) {\n          $item = $sourceItem.clone();\n\n          if (\"drag\" === target) {\n            (0, _iterator.each)($sourceItem, function (index, sourceItem) {\n              $item.eq(index).css(\"width\", parseInt((0, _renderer.default)(sourceItem).outerWidth(), 10) + IE_FIELD_WIDTH_CORRECTION);\n            });\n          }\n        } else {\n          $item = (0, _renderer.default)(DIV).addClass(\"dx-area-field\").addClass(\"dx-area-box\").text($sourceItem.text());\n        }\n\n        if (\"drag\" === target) {\n          var wrapperContainer = (0, _renderer.default)(DIV);\n          (0, _iterator.each)($item, function (_, item) {\n            var wrapper = (0, _renderer.default)(\"<div>\").addClass(\"dx-pivotgrid-fields-container\").addClass(\"dx-widget\").append((0, _renderer.default)(item));\n            wrapperContainer.append(wrapper);\n          });\n          return wrapperContainer.children();\n        }\n\n        return $item;\n      },\n      onDragging: function onDragging(e) {\n        var field = e.sourceElement.data(\"field\");\n        var targetGroup = e.targetGroup;\n        e.cancel = false;\n\n        if (true === field.isMeasure) {\n          if (\"column\" === targetGroup || \"row\" === targetGroup || \"filter\" === targetGroup) {\n            e.cancel = true;\n          }\n        } else {\n          if (false === field.isMeasure && \"data\" === targetGroup) {\n            e.cancel = true;\n          }\n        }\n      },\n      useIndicator: true,\n      onChanged: function onChanged(e) {\n        var dataSource = that._dataSource;\n        var field = e.sourceElement.data(\"field\");\n        e.removeSourceElement = !!e.sourceGroup;\n\n        that._adjustSortableOnChangedArgs(e);\n\n        if (field) {\n          that._applyChanges([getMainGroupField(dataSource, field)], {\n            area: e.targetGroup,\n            areaIndex: e.targetIndex\n          });\n        }\n      }\n    }, that._getSortableOptions()));\n  },\n  _processDemandState: function _processDemandState(func) {\n    var that = this;\n    var isInstantlyMode = \"instantly\" === that.option(\"applyChangesMode\");\n    var dataSource = that._dataSource;\n\n    if (isInstantlyMode) {\n      func(dataSource, isInstantlyMode);\n    } else {\n      var currentState = dataSource.state();\n      var pivotGridState = that.option(\"state\");\n\n      if (pivotGridState) {\n        dataSource.state(pivotGridState, true);\n      }\n\n      func(dataSource, isInstantlyMode);\n      dataSource.state(currentState, true);\n    }\n  },\n  _applyChanges: function _applyChanges(fields, props) {\n    var that = this;\n\n    that._processDemandState(function (dataSource, isInstantlyMode) {\n      fields.forEach(function (_ref) {\n        var index = _ref.index;\n        dataSource.field(index, props);\n      });\n\n      if (isInstantlyMode) {\n        dataSource.load();\n      } else {\n        that._changedHandler();\n      }\n    });\n  },\n  _adjustSortableOnChangedArgs: function _adjustSortableOnChangedArgs(e) {\n    e.removeSourceElement = false;\n    e.removeTargetElement = true;\n    e.removeSourceClass = false;\n  },\n  _getSortableOptions: function _getSortableOptions() {\n    return {\n      direction: \"auto\"\n    };\n  },\n  subscribeToEvents: function subscribeToEvents(element) {\n    var that = this;\n\n    var func = function func(e) {\n      var field = (0, _renderer.default)(e.currentTarget).data(\"field\");\n      var mainGroupField = (0, _extend.extend)(true, {}, getMainGroupField(that._dataSource, field));\n      var isHeaderFilter = (0, _renderer.default)(e.target).hasClass(\"dx-header-filter\");\n      var dataSource = that._dataSource;\n      var type = mainGroupField.groupName ? \"tree\" : \"list\";\n      var paginate = dataSource.paginate() && \"list\" === type;\n\n      if (isHeaderFilter) {\n        that._headerFilterView.showHeaderFilterMenu((0, _renderer.default)(e.currentTarget), (0, _extend.extend)(mainGroupField, {\n          type: type,\n          encodeHtml: that.option(\"encodeHtml\"),\n          dataSource: {\n            useDefaultSearch: !paginate,\n            load: function load(options) {\n              var userData = options.userData;\n\n              if (userData.store) {\n                return userData.store.load(options);\n              } else {\n                var d = new _deferred.Deferred();\n                dataSource.getFieldValues(mainGroupField.index, that.option(\"headerFilter.showRelevantValues\"), paginate ? options : void 0).done(function (data) {\n                  var emptyValue = that.option(\"headerFilter.texts.emptyValue\");\n                  data.forEach(function (element) {\n                    if (!element.text) {\n                      element.text = emptyValue;\n                    }\n                  });\n\n                  if (paginate) {\n                    d.resolve(data);\n                  } else {\n                    userData.store = new _array_store.default(data);\n                    userData.store.load(options).done(d.resolve).fail(d.reject);\n                  }\n                }).fail(d.reject);\n                return d;\n              }\n            },\n            postProcess: function postProcess(data) {\n              processItems(data, mainGroupField);\n              return data;\n            }\n          },\n          apply: function apply() {\n            that._applyChanges([mainGroupField], {\n              filterValues: this.filterValues,\n              filterType: this.filterType\n            });\n          }\n        }));\n      } else {\n        if (field.allowSorting && \"data\" !== field.area) {\n          that._applyChanges([field], {\n            sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\n          });\n        }\n      }\n    };\n\n    if (element) {\n      _events_engine.default.on(element, _click.name, \".dx-area-field.dx-area-box\", func);\n\n      return;\n    }\n\n    _events_engine.default.on(that.$element(), _click.name, \".dx-area-field.dx-area-box\", func);\n  },\n  _initTemplates: _common.noop,\n  addWidgetPrefix: function addWidgetPrefix(className) {\n    return \"dx-pivotgrid-\" + className;\n  }\n});\n\n(0, _component_registrator.default)(\"dxPivotGridFieldChooserBase\", FieldChooserBase);\nvar _default = FieldChooserBase;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/newfrontend/webfe/node_modules/devextreme/ui/pivot_grid/ui.pivot_grid.field_chooser_base.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_events_engine","_array_store","_click","_common","_type","_array","_extend","_iterator","_message","_component_registrator","_ui","_uiGrid_core","_uiGrid_core2","_uiGrid_core3","_uiPivot_grid","_ui2","_deferred","obj","__esModule","IE_FIELD_WIDTH_CORRECTION","DIV","HeaderFilterView","inherit","_getSearchExpr","options","useDefaultSearchExpr","callBase","processItems","groupItems","field","filterValues","isTree","groupName","isExcludeFilterType","filterType","each","_","filterValue","push","Array","isArray","join","valueOf","foreachTree","items","item","path","createPath","preparedFilterValueByText","map","text","reverse","value","slice","key","preparedFilterValue","children","updateHeaderFilterItemSelectionState","inArray","getMainGroupField","dataSource","sourceField","isDefined","groupIndex","getAreaFields","area","areaIndex","getStringState","state","JSON","stringify","fields","columnExpandedPaths","rowExpandedPaths","FieldChooserBase","headerFilterMixin","_getDefaultOptions","extend","allowFieldDragging","applyChangesMode","headerFilter","width","height","searchTimeout","texts","emptyValue","format","ok","cancel","_init","_headerFilterView","_refreshDataSource","subscribeToEvents","option","load","_dataSource","_optionChanged","args","name","_skipStateChange","_clean","_renderComponent","_invalidate","renderField","showColumnLines","that","$fieldContent","addClass","caption","dataField","$fieldElement","data","append","mainGroupField","allowSorting","_applyColumnState","rootElement","column","alignment","sortOrder","allowFiltering","attr","_render","render","$element","renderSortable","_createComponent","allowDragging","itemSelector","itemContainerSelector","groupSelector","groupFilter","$sortable","closest","pivotGrid","pivotGridFieldChooser","getDataSource","itemRender","$sourceItem","target","$item","hasClass","clone","index","sourceItem","eq","css","parseInt","outerWidth","wrapperContainer","wrapper","onDragging","e","sourceElement","targetGroup","isMeasure","useIndicator","onChanged","removeSourceElement","sourceGroup","_adjustSortableOnChangedArgs","_applyChanges","targetIndex","_getSortableOptions","_processDemandState","func","isInstantlyMode","currentState","pivotGridState","props","forEach","_ref","_changedHandler","removeTargetElement","removeSourceClass","direction","element","currentTarget","isHeaderFilter","type","paginate","showHeaderFilterMenu","encodeHtml","useDefaultSearch","userData","store","d","Deferred","getFieldValues","done","resolve","fail","reject","postProcess","apply","on","_initTemplates","noop","addWidgetPrefix","className","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pivot_grid/ui.pivot_grid.field_chooser_base.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _uiGrid_core = require(\"../grid_core/ui.grid_core.header_filter_core\");\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"../grid_core/ui.grid_core.column_state_mixin\"));\r\nvar _uiGrid_core3 = _interopRequireDefault(require(\"../grid_core/ui.grid_core.sorting_mixin\"));\r\nvar _uiPivot_grid = require(\"./ui.pivot_grid.utils\");\r\nvar _ui2 = _interopRequireDefault(require(\"./ui.sortable\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar IE_FIELD_WIDTH_CORRECTION = 1;\r\nvar DIV = \"<div>\";\r\nvar HeaderFilterView = _uiGrid_core.HeaderFilterView.inherit({\r\n    _getSearchExpr: function(options) {\r\n        options.useDefaultSearchExpr = true;\r\n        return this.callBase(options)\r\n    }\r\n});\r\nvar processItems = function(groupItems, field) {\r\n    var filterValues = [];\r\n    var isTree = !!field.groupName;\r\n    var isExcludeFilterType = \"exclude\" === field.filterType;\r\n    if (field.filterValues) {\r\n        (0, _iterator.each)(field.filterValues, function(_, filterValue) {\r\n            filterValues.push(Array.isArray(filterValue) ? filterValue.join(\"/\") : filterValue && filterValue.valueOf())\r\n        })\r\n    }(0, _uiPivot_grid.foreachTree)(groupItems, function(items) {\r\n        var item = items[0];\r\n        var path = (0, _uiPivot_grid.createPath)(items);\r\n        var preparedFilterValueByText = isTree ? (0, _iterator.map)(items, function(item) {\r\n            return item.text\r\n        }).reverse().join(\"/\") : item.text;\r\n        item.value = isTree ? path.slice(0) : item.key || item.value;\r\n        var preparedFilterValue = isTree ? path.join(\"/\") : item.value && item.value.valueOf();\r\n        if (item.children) {\r\n            item.items = item.children;\r\n            item.children = null\r\n        }(0, _uiGrid_core.updateHeaderFilterItemSelectionState)(item, item.key && (0, _array.inArray)(preparedFilterValueByText, filterValues) > -1 || (0, _array.inArray)(preparedFilterValue, filterValues) > -1, isExcludeFilterType)\r\n    })\r\n};\r\n\r\nfunction getMainGroupField(dataSource, sourceField) {\r\n    var field = sourceField;\r\n    if ((0, _type.isDefined)(sourceField.groupIndex)) {\r\n        field = dataSource.getAreaFields(sourceField.area, true)[sourceField.areaIndex]\r\n    }\r\n    return field\r\n}\r\n\r\nfunction getStringState(state) {\r\n    state = state || {};\r\n    return JSON.stringify([state.fields, state.columnExpandedPaths, state.rowExpandedPaths])\r\n}\r\nvar FieldChooserBase = _ui.default.inherit(_uiGrid_core2.default).inherit(_uiGrid_core3.default).inherit(_uiGrid_core.headerFilterMixin).inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            allowFieldDragging: true,\r\n            applyChangesMode: \"instantly\",\r\n            state: null,\r\n            headerFilter: {\r\n                width: 252,\r\n                height: 325,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: _message.default.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: _message.default.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: _message.default.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._headerFilterView = new HeaderFilterView(this);\r\n        this._refreshDataSource();\r\n        this.subscribeToEvents()\r\n    },\r\n    _refreshDataSource: function() {\r\n        var dataSource = this.option(\"dataSource\");\r\n        if (dataSource && dataSource.fields && dataSource.load) {\r\n            this._dataSource = dataSource\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"dataSource\":\r\n                this._refreshDataSource();\r\n                break;\r\n            case \"applyChangesMode\":\r\n                break;\r\n            case \"state\":\r\n                if (this._skipStateChange || !this._dataSource) {\r\n                    break\r\n                }\r\n                if (\"instantly\" === this.option(\"applyChangesMode\") && getStringState(this._dataSource.state()) !== getStringState(args.value)) {\r\n                    this._dataSource.state(args.value)\r\n                } else {\r\n                    this._clean(true);\r\n                    this._renderComponent()\r\n                }\r\n                break;\r\n            case \"headerFilter\":\r\n            case \"allowFieldDragging\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    renderField: function(field, showColumnLines) {\r\n        var that = this;\r\n        var $fieldContent = (0, _renderer.default)(DIV).addClass(\"dx-area-field-content\").text(field.caption || field.dataField);\r\n        var $fieldElement = (0, _renderer.default)(DIV).addClass(\"dx-area-field\").addClass(\"dx-area-box\").data(\"field\", field).append($fieldContent);\r\n        var mainGroupField = getMainGroupField(that._dataSource, field);\r\n        if (\"data\" !== field.area) {\r\n            if (field.allowSorting) {\r\n                that._applyColumnState({\r\n                    name: \"sort\",\r\n                    rootElement: $fieldElement,\r\n                    column: {\r\n                        alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                        sortOrder: \"desc\" === field.sortOrder ? \"desc\" : \"asc\"\r\n                    },\r\n                    showColumnLines: showColumnLines\r\n                })\r\n            }\r\n            that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $fieldElement,\r\n                column: {\r\n                    alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                    filterValues: mainGroupField.filterValues,\r\n                    allowFiltering: mainGroupField.allowFiltering && !field.groupIndex\r\n                },\r\n                showColumnLines: showColumnLines\r\n            })\r\n        }\r\n        if (field.groupName) {\r\n            $fieldElement.attr(\"item-group\", field.groupName)\r\n        }\r\n        return $fieldElement\r\n    },\r\n    _clean: function() {},\r\n    _render: function() {\r\n        this.callBase();\r\n        this._headerFilterView.render(this.$element())\r\n    },\r\n    renderSortable: function() {\r\n        var that = this;\r\n        that._createComponent(that.$element(), _ui2.default, (0, _extend.extend)({\r\n            allowDragging: that.option(\"allowFieldDragging\"),\r\n            itemSelector: \".dx-area-field\",\r\n            itemContainerSelector: \".dx-area-field-container\",\r\n            groupSelector: \".dx-area-fields\",\r\n            groupFilter: function() {\r\n                var dataSource = that._dataSource;\r\n                var $sortable = (0, _renderer.default)(this).closest(\".dx-sortable-old\");\r\n                var pivotGrid = $sortable.data(\"dxPivotGrid\");\r\n                var pivotGridFieldChooser = $sortable.data(\"dxPivotGridFieldChooser\");\r\n                if (pivotGrid) {\r\n                    return pivotGrid.getDataSource() === dataSource\r\n                }\r\n                if (pivotGridFieldChooser) {\r\n                    return pivotGridFieldChooser.option(\"dataSource\") === dataSource\r\n                }\r\n                return false\r\n            },\r\n            itemRender: function($sourceItem, target) {\r\n                var $item;\r\n                if ($sourceItem.hasClass(\"dx-area-box\")) {\r\n                    $item = $sourceItem.clone();\r\n                    if (\"drag\" === target) {\r\n                        (0, _iterator.each)($sourceItem, function(index, sourceItem) {\r\n                            $item.eq(index).css(\"width\", parseInt((0, _renderer.default)(sourceItem).outerWidth(), 10) + IE_FIELD_WIDTH_CORRECTION)\r\n                        })\r\n                    }\r\n                } else {\r\n                    $item = (0, _renderer.default)(DIV).addClass(\"dx-area-field\").addClass(\"dx-area-box\").text($sourceItem.text())\r\n                }\r\n                if (\"drag\" === target) {\r\n                    var wrapperContainer = (0, _renderer.default)(DIV);\r\n                    (0, _iterator.each)($item, function(_, item) {\r\n                        var wrapper = (0, _renderer.default)(\"<div>\").addClass(\"dx-pivotgrid-fields-container\").addClass(\"dx-widget\").append((0, _renderer.default)(item));\r\n                        wrapperContainer.append(wrapper)\r\n                    });\r\n                    return wrapperContainer.children()\r\n                }\r\n                return $item\r\n            },\r\n            onDragging: function(e) {\r\n                var field = e.sourceElement.data(\"field\");\r\n                var targetGroup = e.targetGroup;\r\n                e.cancel = false;\r\n                if (true === field.isMeasure) {\r\n                    if (\"column\" === targetGroup || \"row\" === targetGroup || \"filter\" === targetGroup) {\r\n                        e.cancel = true\r\n                    }\r\n                } else {\r\n                    if (false === field.isMeasure && \"data\" === targetGroup) {\r\n                        e.cancel = true\r\n                    }\r\n                }\r\n            },\r\n            useIndicator: true,\r\n            onChanged: function(e) {\r\n                var dataSource = that._dataSource;\r\n                var field = e.sourceElement.data(\"field\");\r\n                e.removeSourceElement = !!e.sourceGroup;\r\n                that._adjustSortableOnChangedArgs(e);\r\n                if (field) {\r\n                    that._applyChanges([getMainGroupField(dataSource, field)], {\r\n                        area: e.targetGroup,\r\n                        areaIndex: e.targetIndex\r\n                    })\r\n                }\r\n            }\r\n        }, that._getSortableOptions()))\r\n    },\r\n    _processDemandState: function(func) {\r\n        var that = this;\r\n        var isInstantlyMode = \"instantly\" === that.option(\"applyChangesMode\");\r\n        var dataSource = that._dataSource;\r\n        if (isInstantlyMode) {\r\n            func(dataSource, isInstantlyMode)\r\n        } else {\r\n            var currentState = dataSource.state();\r\n            var pivotGridState = that.option(\"state\");\r\n            if (pivotGridState) {\r\n                dataSource.state(pivotGridState, true)\r\n            }\r\n            func(dataSource, isInstantlyMode);\r\n            dataSource.state(currentState, true)\r\n        }\r\n    },\r\n    _applyChanges: function(fields, props) {\r\n        var that = this;\r\n        that._processDemandState(function(dataSource, isInstantlyMode) {\r\n            fields.forEach(function(_ref) {\r\n                var index = _ref.index;\r\n                dataSource.field(index, props)\r\n            });\r\n            if (isInstantlyMode) {\r\n                dataSource.load()\r\n            } else {\r\n                that._changedHandler()\r\n            }\r\n        })\r\n    },\r\n    _adjustSortableOnChangedArgs: function(e) {\r\n        e.removeSourceElement = false;\r\n        e.removeTargetElement = true;\r\n        e.removeSourceClass = false\r\n    },\r\n    _getSortableOptions: function() {\r\n        return {\r\n            direction: \"auto\"\r\n        }\r\n    },\r\n    subscribeToEvents: function(element) {\r\n        var that = this;\r\n        var func = function(e) {\r\n            var field = (0, _renderer.default)(e.currentTarget).data(\"field\");\r\n            var mainGroupField = (0, _extend.extend)(true, {}, getMainGroupField(that._dataSource, field));\r\n            var isHeaderFilter = (0, _renderer.default)(e.target).hasClass(\"dx-header-filter\");\r\n            var dataSource = that._dataSource;\r\n            var type = mainGroupField.groupName ? \"tree\" : \"list\";\r\n            var paginate = dataSource.paginate() && \"list\" === type;\r\n            if (isHeaderFilter) {\r\n                that._headerFilterView.showHeaderFilterMenu((0, _renderer.default)(e.currentTarget), (0, _extend.extend)(mainGroupField, {\r\n                    type: type,\r\n                    encodeHtml: that.option(\"encodeHtml\"),\r\n                    dataSource: {\r\n                        useDefaultSearch: !paginate,\r\n                        load: function(options) {\r\n                            var userData = options.userData;\r\n                            if (userData.store) {\r\n                                return userData.store.load(options)\r\n                            } else {\r\n                                var d = new _deferred.Deferred;\r\n                                dataSource.getFieldValues(mainGroupField.index, that.option(\"headerFilter.showRelevantValues\"), paginate ? options : void 0).done(function(data) {\r\n                                    var emptyValue = that.option(\"headerFilter.texts.emptyValue\");\r\n                                    data.forEach(function(element) {\r\n                                        if (!element.text) {\r\n                                            element.text = emptyValue\r\n                                        }\r\n                                    });\r\n                                    if (paginate) {\r\n                                        d.resolve(data)\r\n                                    } else {\r\n                                        userData.store = new _array_store.default(data);\r\n                                        userData.store.load(options).done(d.resolve).fail(d.reject)\r\n                                    }\r\n                                }).fail(d.reject);\r\n                                return d\r\n                            }\r\n                        },\r\n                        postProcess: function(data) {\r\n                            processItems(data, mainGroupField);\r\n                            return data\r\n                        }\r\n                    },\r\n                    apply: function() {\r\n                        that._applyChanges([mainGroupField], {\r\n                            filterValues: this.filterValues,\r\n                            filterType: this.filterType\r\n                        })\r\n                    }\r\n                }))\r\n            } else {\r\n                if (field.allowSorting && \"data\" !== field.area) {\r\n                    that._applyChanges([field], {\r\n                        sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\r\n                    })\r\n                }\r\n            }\r\n        };\r\n        if (element) {\r\n            _events_engine.default.on(element, _click.name, \".dx-area-field.dx-area-box\", func);\r\n            return\r\n        }\r\n        _events_engine.default.on(that.$element(), _click.name, \".dx-area-field.dx-area-box\", func)\r\n    },\r\n    _initTemplates: _common.noop,\r\n    addWidgetPrefix: function(className) {\r\n        return \"dx-pivotgrid-\" + className\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxPivotGridFieldChooserBase\", FieldChooserBase);\r\nvar _default = FieldChooserBase;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}