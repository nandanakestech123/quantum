{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../../core/dom_adapter\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../../events/core/events_engine\"));\n\nvar _element_data = require(\"../../../core/element_data\");\n\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\n\nvar _window = require(\"../../../core/utils/window\");\n\nvar _element = require(\"../../../core/element\");\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _iterator = require(\"../../../core/utils/iterator\");\n\nvar _position = require(\"../../../core/utils/position\");\n\nvar _message = _interopRequireDefault(require(\"../../../localization/message\"));\n\nvar _date2 = _interopRequireDefault(require(\"../../../localization/date\"));\n\nvar _common = require(\"../../../core/utils/common\");\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _index = require(\"../../../events/utils/index\");\n\nvar _pointer = _interopRequireDefault(require(\"../../../events/pointer\"));\n\nvar _ui = _interopRequireDefault(require(\"../../widget/ui.errors\"));\n\nvar _click = require(\"../../../events/click\");\n\nvar _contextmenu = require(\"../../../events/contextmenu\");\n\nvar _drag = require(\"../../../events/drag\");\n\nvar _ui2 = _interopRequireDefault(require(\"../../scroll_view/ui.scrollable\"));\n\nvar _uiSchedulerWork_spaceGroupedStrategy = _interopRequireDefault(require(\"./ui.scheduler.work_space.grouped.strategy.horizontal\"));\n\nvar _uiSchedulerWork_spaceGroupedStrategy2 = _interopRequireDefault(require(\"./ui.scheduler.work_space.grouped.strategy.vertical\"));\n\nvar _uiScheduler = _interopRequireDefault(require(\"../ui.scheduler.table_creator\"));\n\nvar _uiSchedulerCurrent_time_shader = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader.vertical\"));\n\nvar _appointmentDragBehavior = _interopRequireDefault(require(\"../appointmentDragBehavior\"));\n\nvar _constants = require(\"../constants\");\n\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\n\nvar _widgetObserver = _interopRequireDefault(require(\"../base/widgetObserver\"));\n\nvar _translator = require(\"../../../animation/translator\");\n\nvar _uiScheduler2 = _interopRequireDefault(require(\"./ui.scheduler.virtual_scrolling\"));\n\nvar _view_data_provider = _interopRequireDefault(require(\"./view_data_provider\"));\n\nvar _layout = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/layout.j\"));\n\nvar _title = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j\"));\n\nvar _layout2 = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/time_panel/layout.j\"));\n\nvar _virtual_selection_state = _interopRequireDefault(require(\"./virtual_selection_state\"));\n\nvar _cache = require(\"./cache\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (null == source) {\n    return {};\n  }\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n\n      if (excluded.indexOf(key) >= 0) {\n        continue;\n      }\n\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) {\n        continue;\n      }\n\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (null == source) {\n    return {};\n  }\n\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n\n    if (excluded.indexOf(key) >= 0) {\n      continue;\n    }\n\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else {\n      if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _get(target, property, receiver) {\n  if (\"undefined\" !== typeof Reflect && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function (target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) {\n        return;\n      }\n\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n\n    if (null === object) {\n      break;\n    }\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar tableCreator = _uiScheduler.default.tableCreator;\nvar abstract = _widgetObserver.default.abstract;\nvar toMs = _date.default.dateToMilliseconds;\nvar COMPONENT_CLASS = \"dx-scheduler-work-space\";\nvar GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-grouped\";\nvar VERTICAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-vertical-grouped\";\nvar WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = \"dx-scheduler-work-space-vertical-group-table\";\nvar WORKSPACE_WITH_BOTH_SCROLLS_CLASS = \"dx-scheduler-work-space-both-scrollbar\";\nvar WORKSPACE_WITH_COUNT_CLASS = \"dx-scheduler-work-space-count\";\nvar WORKSPACE_WITH_GROUP_BY_DATE_CLASS = \"dx-scheduler-work-space-group-by-date\";\nvar WORKSPACE_WITH_ODD_CELLS_CLASS = \"dx-scheduler-work-space-odd-cells\";\nvar TIME_PANEL_CLASS = \"dx-scheduler-time-panel\";\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\nvar ALL_DAY_PANEL_CLASS = \"dx-scheduler-all-day-panel\";\nvar ALL_DAY_TABLE_CLASS = \"dx-scheduler-all-day-table\";\nvar ALL_DAY_CONTAINER_CLASS = \"dx-scheduler-all-day-appointments\";\nvar ALL_DAY_TITLE_CLASS = \"dx-scheduler-all-day-title\";\nvar ALL_DAY_TITLE_HIDDEN_CLASS = \"dx-scheduler-all-day-title-hidden\";\nvar ALL_DAY_TABLE_CELL_CLASS = \"dx-scheduler-all-day-table-cell\";\nvar ALL_DAY_TABLE_ROW_CLASS = \"dx-scheduler-all-day-table-row\";\nvar WORKSPACE_WITH_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day\";\nvar WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day-collapsed\";\nvar WORKSPACE_WITH_MOUSE_SELECTION_CLASS = \"dx-scheduler-work-space-mouse-selection\";\nvar HORIZONTAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-horizontal\";\nvar VERTICAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-vertical\";\nvar HEADER_PANEL_CLASS = \"dx-scheduler-header-panel\";\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\nvar GROUP_ROW_CLASS = \"dx-scheduler-group-row\";\nvar GROUP_HEADER_CLASS = \"dx-scheduler-group-header\";\nvar GROUP_HEADER_CONTENT_CLASS = \"dx-scheduler-group-header-content\";\nvar DATE_TABLE_CLASS = \"dx-scheduler-date-table\";\nvar DATE_TABLE_CELL_CLASS = \"dx-scheduler-date-table-cell\";\nvar DATE_TABLE_ROW_CLASS = \"dx-scheduler-date-table-row\";\nvar DATE_TABLE_FOCUSED_CELL_CLASS = \"dx-scheduler-focused-cell\";\nvar VIRTUAL_ROW_CLASS = \"dx-scheduler-virtual-row\";\nvar VIRTUAL_CELL_CLASS = \"dx-scheduler-virtual-cell\";\nvar DATE_TABLE_DROPPABLE_CELL_CLASS = \"dx-scheduler-date-table-droppable-cell\";\nvar SCHEDULER_HEADER_SCROLLABLE_CLASS = \"dx-scheduler-header-scrollable\";\nvar SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = \"dx-scheduler-sidebar-scrollable\";\nvar SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = \"dx-scheduler-date-table-scrollable\";\nvar SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, \"dxSchedulerWorkSpace\");\nvar SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME = (0, _index.addNamespace)(_drag.enter, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXDROP_EVENT_NAME = (0, _index.addNamespace)(_drag.drop, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME = (0, _index.addNamespace)(_drag.leave, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXCLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.up, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.move, \"dxSchedulerDateTable\");\nvar CELL_DATA = \"dxCellData\";\nvar DATE_TABLE_CELL_BORDER = 1;\nvar DATE_TABLE_MIN_CELL_WIDTH = 75;\nvar DAY_MS = toMs(\"day\");\nvar HOUR_MS = toMs(\"hour\");\nvar SCHEDULER_DRAG_AND_DROP_SELECTOR = \".\".concat(DATE_TABLE_CLASS, \" td, .\").concat(ALL_DAY_TABLE_CLASS, \" td\");\nvar CELL_SELECTOR = \".\".concat(DATE_TABLE_CELL_CLASS, \", .\").concat(ALL_DAY_TABLE_CELL_CLASS);\n\nvar ScrollSemaphore = function () {\n  function ScrollSemaphore() {\n    _classCallCheck(this, ScrollSemaphore);\n\n    this.counter = 0;\n  }\n\n  _createClass(ScrollSemaphore, [{\n    key: \"isFree\",\n    value: function () {\n      return 0 === this.counter;\n    }\n  }, {\n    key: \"take\",\n    value: function () {\n      this.counter++;\n    }\n  }, {\n    key: \"release\",\n    value: function () {\n      this.counter--;\n\n      if (this.counter < 0) {\n        this.counter = 0;\n      }\n    }\n  }]);\n\n  return ScrollSemaphore;\n}();\n\nvar formatWeekday = function (date) {\n  return _date2.default.getDayNames(\"abbreviated\")[date.getDay()];\n};\n\nvar SchedulerWorkSpace = function (_WidgetObserver) {\n  _inherits(SchedulerWorkSpace, _WidgetObserver);\n\n  var _super = _createSuper(SchedulerWorkSpace);\n\n  function SchedulerWorkSpace() {\n    _classCallCheck(this, SchedulerWorkSpace);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SchedulerWorkSpace, [{\n    key: \"_supportedKeys\",\n    value: function () {\n      var clickHandler = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this._selectedCells && this._selectedCells.length) {\n          var $itemElement = (0, _renderer.default)(this.option(\"focusedElement\"));\n          var $cellElement = (0, _renderer.default)($itemElement.length ? $itemElement : this._selectedCells);\n          e.target = this._selectedCells;\n          this._showPopup = true;\n\n          this._cellClickAction({\n            event: e,\n            cellElement: (0, _renderer.default)(this._selectedCells),\n            cellData: this.getCellData($cellElement)\n          });\n        }\n      };\n\n      var arrowPressHandler = function (e, cell) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._moveToCell(cell, e.shiftKey);\n      };\n\n      return (0, _extend.extend)(_get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_supportedKeys\", this).call(this), {\n        enter: clickHandler,\n        space: clickHandler,\n        downArrow: function (e) {\n          var $cell = this._getCellFromNextRow(\"next\", e.shiftKey);\n\n          arrowPressHandler.call(this, e, $cell);\n        },\n        upArrow: function (e) {\n          var $cell = this._getCellFromNextRow(\"prev\", e.shiftKey);\n\n          arrowPressHandler.call(this, e, $cell);\n        },\n        rightArrow: function (e) {\n          var $rightCell = this._getCellFromNextColumn(\"next\", e.shiftKey);\n\n          arrowPressHandler.call(this, e, $rightCell);\n        },\n        leftArrow: function (e) {\n          var $leftCell = this._getCellFromNextColumn(\"prev\", e.shiftKey);\n\n          arrowPressHandler.call(this, e, $leftCell);\n        }\n      });\n    }\n  }, {\n    key: \"_dispose\",\n    value: function () {\n      var _this$virtualScrollin;\n\n      _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_dispose\", this).call(this);\n\n      null === (_this$virtualScrollin = this.virtualScrollingDispatcher) || void 0 === _this$virtualScrollin ? void 0 : _this$virtualScrollin.dispose();\n\n      this._disposeRenovatedComponents();\n    }\n  }, {\n    key: \"_isRTL\",\n    value: function () {\n      return this.option(\"rtlEnabled\");\n    }\n  }, {\n    key: \"_getFocusedCell\",\n    value: function () {\n      return this._$focusedCell || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0);\n    }\n  }, {\n    key: \"_getAllFocusedCells\",\n    value: function () {\n      return this._selectedCells || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0);\n    }\n  }, {\n    key: \"_getCellFromNextRow\",\n    value: function (direction) {\n      var $currentCell = this._$focusedCell;\n\n      if ((0, _type.isDefined)($currentCell)) {\n        var cellIndex = $currentCell.index();\n        var $row = $currentCell.parent();\n        var $cell = $row[direction]().children().eq(cellIndex);\n        $cell = this._checkForViewBounds($cell);\n        return $cell;\n      }\n    }\n  }, {\n    key: \"_checkForViewBounds\",\n    value: function ($item) {\n      if (!$item.length) {\n        $item = this._$focusedCell;\n      }\n\n      return $item;\n    }\n  }, {\n    key: \"_getCellFromNextColumn\",\n    value: function (direction, isMultiSelection) {\n      var $focusedCell = this._$focusedCell;\n\n      if (!(0, _type.isDefined)($focusedCell)) {\n        return;\n      }\n\n      var $nextCell;\n      var $row = $focusedCell.parent();\n      var nextColumnDirection = direction;\n      var isDirectionNext = \"next\" === direction;\n      var previousColumnDirection = isDirectionNext ? \"prev\" : \"next\";\n\n      var isRTL = this._isRTL();\n\n      var groupCount = this._getGroupCount();\n\n      var isHorizontalGrouping = this._isHorizontalGroupedWorkSpace();\n\n      var isGroupedByDate = this.isGroupedByDate();\n\n      var totalCellCount = this._getTotalCellCount(groupCount);\n\n      var rowCellCount = isMultiSelection && !isGroupedByDate ? this._getCellCount() : totalCellCount;\n      var lastIndexInRow = rowCellCount - 1;\n      var currentIndex = $focusedCell.index();\n      var step = isGroupedByDate && isMultiSelection ? groupCount : 1;\n\n      var isEdgeCell = this._isEdgeCell(isHorizontalGrouping ? totalCellCount - 1 : lastIndexInRow, currentIndex, step, direction);\n\n      var sign = isRTL ? 1 : -1;\n      var directionSign = isDirectionNext ? 1 : -1;\n      var resultingSign = sign * directionSign;\n\n      if (isEdgeCell || isMultiSelection && this._isGroupEndCell($focusedCell, direction)) {\n        var nextIndex = currentIndex - resultingSign * step + resultingSign * rowCellCount;\n        var rowDirection = isRTL ? previousColumnDirection : nextColumnDirection;\n        $nextCell = $row[rowDirection]().children().eq(nextIndex);\n        $nextCell = this._checkForViewBounds($nextCell);\n      } else {\n        $nextCell = $row.children().eq(currentIndex - resultingSign * step);\n      }\n\n      return $nextCell;\n    }\n  }, {\n    key: \"_isEdgeCell\",\n    value: function (lastIndexInRow, cellIndex, step, direction) {\n      var isRTL = this._isRTL();\n\n      var isDirectionNext = \"next\" === direction;\n      var rightEdgeCellIndex = isRTL ? 0 : lastIndexInRow;\n      var leftEdgeCellIndex = isRTL ? lastIndexInRow : 0;\n      var edgeCellIndex = isDirectionNext ? rightEdgeCellIndex : leftEdgeCellIndex;\n      var isNextCellGreaterThanEdge = cellIndex + step > edgeCellIndex;\n      var isNextCellLessThanEdge = cellIndex - step < edgeCellIndex;\n      var isRightEdgeCell = isRTL ? isNextCellLessThanEdge : isNextCellGreaterThanEdge;\n      var isLeftEdgeCell = isRTL ? isNextCellGreaterThanEdge : isNextCellLessThanEdge;\n      return isDirectionNext ? isRightEdgeCell : isLeftEdgeCell;\n    }\n  }, {\n    key: \"_isGroupEndCell\",\n    value: function ($cell, direction) {\n      if (this.isGroupedByDate()) {\n        return false;\n      }\n\n      var isDirectionNext = \"next\" === direction;\n\n      var cellsInRow = this._getCellCount();\n\n      var currentCellIndex = $cell.index();\n      var result = currentCellIndex % cellsInRow;\n      var endCell = isDirectionNext ? cellsInRow - 1 : 0;\n      var startCell = isDirectionNext ? 0 : cellsInRow - 1;\n      return this._isRTL() ? result === startCell : result === endCell;\n    }\n  }, {\n    key: \"_moveToCell\",\n    value: function ($cell, isMultiSelection) {\n      isMultiSelection = isMultiSelection && this.option(\"allowMultipleCellSelection\");\n\n      this._setSelectedAndFocusedCells($cell, isMultiSelection);\n\n      this._dateTableScrollable.scrollToElement($cell);\n    }\n  }, {\n    key: \"_setSelectedAndFocusedCells\",\n    value: function ($cell, isMultiSelection) {\n      if (!(0, _type.isDefined)($cell) || !$cell.length) {\n        return;\n      }\n\n      var updateViewData = this.isVirtualScrolling();\n      var $correctedCell = $cell;\n\n      if (isMultiSelection) {\n        $correctedCell = this._correctCellForGroup($cell);\n      }\n\n      if ($correctedCell.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\n        return;\n      }\n\n      this._setSelectedCells($correctedCell, isMultiSelection);\n\n      this._setFocusedCell($correctedCell, updateViewData);\n    }\n  }, {\n    key: \"_setFocusedCell\",\n    value: function ($cell) {\n      var updateViewData = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;\n\n      this._releaseFocusedCell();\n\n      var $correctedCell = $cell;\n\n      if (updateViewData) {\n        var _this$_getCoordinates = this._getCoordinatesByCell($cell),\n            rowIndex = _this$_getCoordinates.rowIndex,\n            columnIndex = _this$_getCoordinates.columnIndex;\n\n        var isAllDayCell = this._hasAllDayClass($cell);\n\n        this.virtualSelectionState.setFocusedCell(rowIndex, columnIndex, isAllDayCell);\n        var focusedCell = this.virtualSelectionState.getFocusedCell(this._isVerticalGroupedWorkSpace());\n        var cellData = focusedCell.cellData,\n            coordinates = focusedCell.coordinates;\n        var allDay = cellData.allDay;\n        $correctedCell = allDay && !this._isVerticalGroupedWorkSpace() ? this._dom_getAllDayPanelCell(coordinates.cellIndex) : this._dom_getDateCell(coordinates);\n      }\n\n      this._toggleFocusedCellClass(true, $correctedCell);\n\n      this._$focusedCell = $correctedCell;\n    }\n  }, {\n    key: \"_setSelectedCells\",\n    value: function ($firstCell, isMultiSelection) {\n      this._releaseSelectedCells();\n\n      this._selectedCells = [];\n\n      if (this.isVirtualScrolling()) {\n        this._setSelectedCellsInVirtualMode($firstCell, isMultiSelection);\n      } else {\n        this._setSelectedCellsInStandardMode($firstCell, isMultiSelection);\n      }\n\n      var $selectedCells = (0, _renderer.default)(this._selectedCells);\n\n      this._toggleFocusClass(true, $selectedCells);\n\n      this.setAria(\"label\", \"Add appointment\", $selectedCells);\n      var selectedCellData = this.getSelectedCellData().map(function (_ref) {\n        var startDate = _ref.startDate,\n            endDate = _ref.endDate,\n            allDay = _ref.allDay,\n            groups = _ref.groups,\n            groupIndex = _ref.groupIndex;\n        return {\n          startDate: startDate,\n          endDate: endDate,\n          allDay: allDay,\n          groups: groups,\n          groupIndex: groupIndex || 0\n        };\n      });\n      this.option(\"selectedCellData\", selectedCellData);\n\n      this._selectionChangedAction({\n        selectedCellData: selectedCellData\n      });\n    }\n  }, {\n    key: \"_setSelectedCellsInStandardMode\",\n    value: function ($firstCell, isMultiSelection) {\n      if (isMultiSelection) {\n        var $previousCell = this._$prevCell;\n        var orientation = \"day\" === this.option(\"type\") && (!this.option(\"groups\").length || \"vertical\" === this.option(\"groupOrientation\")) ? \"vertical\" : \"horizontal\";\n\n        var $targetCells = this._getCellsBetween($firstCell, $previousCell, orientation);\n\n        this._selectedCells = $targetCells.toArray();\n      } else {\n        this._selectedCells = [$firstCell.get(0)];\n        this._$prevCell = $firstCell;\n      }\n    }\n  }, {\n    key: \"_setSelectedCellsInVirtualMode\",\n    value: function ($firstCell, isMultiSelection) {\n      if (isMultiSelection) {\n        var _this$_getCoordinates2 = this._getCoordinatesByCell($firstCell),\n            firstRow = _this$_getCoordinates2.rowIndex,\n            firstColumn = _this$_getCoordinates2.columnIndex;\n\n        var isFirstAllDay = this._hasAllDayClass($firstCell);\n\n        var firstCell = {\n          rowIndex: firstRow,\n          columnIndex: firstColumn,\n          allDay: isFirstAllDay\n        };\n        this.virtualSelectionState.setSelectedCells(firstCell);\n      } else {\n        this._selectedCells = [$firstCell.get(0)];\n        this._$prevCell = $firstCell;\n\n        var _this$_getCoordinates3 = this._getCoordinatesByCell($firstCell),\n            rowIndex = _this$_getCoordinates3.rowIndex,\n            columnIndex = _this$_getCoordinates3.columnIndex;\n\n        var isAllDayCell = this._hasAllDayClass($firstCell);\n\n        var _firstCell = {\n          rowIndex: rowIndex,\n          columnIndex: columnIndex,\n          allDay: isAllDayCell\n        };\n        this.virtualSelectionState.setSelectedCells(_firstCell, _firstCell);\n      }\n\n      this._setSelectedCellsByCellData(this.virtualSelectionState.getSelectedCells());\n    }\n  }, {\n    key: \"_correctCellForGroup\",\n    value: function ($cell) {\n      if (this.isVirtualScrolling()) {\n        var cellData = this.getCellData($cell);\n        var isValidFocusedCell = this.virtualSelectionState.isValidFocusedCell(cellData);\n        return isValidFocusedCell ? $cell : this._$focusedCell;\n      }\n\n      var $focusedCell = this._$focusedCell;\n\n      var cellGroupIndex = this._getGroupIndexByCell($cell);\n\n      var focusedCellGroupIndex = this._getGroupIndexByCell($focusedCell);\n\n      var isDifferentTables = this._hasAllDayClass($cell) !== this._hasAllDayClass($focusedCell);\n\n      return focusedCellGroupIndex !== cellGroupIndex || isDifferentTables ? $focusedCell : $cell;\n    }\n  }, {\n    key: \"_getCellsBetween\",\n    value: function ($first, $last, direction) {\n      var isAllDayTable = this._hasAllDayClass($last);\n\n      var $cells = this._getCells(isAllDayTable, direction);\n\n      var firstIndex = $cells.index($first);\n      var lastIndex = $cells.index($last);\n\n      if (firstIndex > lastIndex) {\n        var buffer = firstIndex;\n        firstIndex = lastIndex;\n        lastIndex = buffer;\n      }\n\n      $cells = $cells.slice(firstIndex, lastIndex + 1);\n\n      if (this._getGroupCount() > 1) {\n        var result = [];\n\n        var focusedGroupIndex = this._getGroupIndexByCell($first);\n\n        (0, _iterator.each)($cells, function (_, cell) {\n          var groupIndex = this._getGroupIndexByCell((0, _renderer.default)(cell));\n\n          if (focusedGroupIndex === groupIndex) {\n            result.push(cell);\n          }\n        }.bind(this));\n        $cells = (0, _renderer.default)(result);\n      }\n\n      return $cells;\n    }\n  }, {\n    key: \"_hasAllDayClass\",\n    value: function ($cell) {\n      return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);\n    }\n  }, {\n    key: \"_getGroupIndexByCell\",\n    value: function ($cell) {\n      if (this.isVirtualScrolling()) {\n        var _this$_getCoordinates4 = this._getCoordinatesByCell($cell),\n            rowIndex = _this$_getCoordinates4.rowIndex,\n            columnIndex = _this$_getCoordinates4.columnIndex;\n\n        var isAllDayCell = $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);\n        return this.viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell).groupIndex;\n      }\n\n      return this._groupedStrategy.getGroupIndexByCell($cell);\n    }\n  }, {\n    key: \"_toggleFocusedCellClass\",\n    value: function (isFocused, $element) {\n      var $focusTarget = $element && $element.length ? $element : this._focusTarget();\n      $focusTarget.toggleClass(DATE_TABLE_FOCUSED_CELL_CLASS, isFocused);\n    }\n  }, {\n    key: \"_releaseSelectedAndFocusedCells\",\n    value: function () {\n      this._releaseFocusedCell();\n\n      this._releaseSelectedCells();\n\n      this.option(\"selectedCellData\", []);\n    }\n  }, {\n    key: \"_releaseFocusedCell\",\n    value: function () {\n      var $cell = this._$focusedCell;\n\n      if ((0, _type.isDefined)($cell) && $cell.length) {\n        this._toggleFocusedCellClass(false, $cell);\n\n        this.setAria(\"label\", void 0, $cell);\n      }\n    }\n  }, {\n    key: \"_releaseSelectedCells\",\n    value: function () {\n      var $cells = (0, _renderer.default)(this._selectedCells);\n\n      if ((0, _type.isDefined)($cells) && $cells.length) {\n        this._toggleFocusClass(false, $cells);\n\n        this.setAria(\"label\", void 0, $cells);\n      }\n    }\n  }, {\n    key: \"_focusInHandler\",\n    value: function (e) {\n      if ((0, _renderer.default)(e.target).is(this._focusTarget()) && false !== this._isCellClick) {\n        delete this._isCellClick;\n        delete this._contextMenuHandled;\n\n        _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_focusInHandler\", this).apply(this, arguments);\n\n        var $cell = this._getFocusedCell();\n\n        this._setSelectedAndFocusedCells($cell);\n      }\n    }\n  }, {\n    key: \"_focusOutHandler\",\n    value: function () {\n      _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_focusOutHandler\", this).apply(this, arguments);\n\n      if (!this._contextMenuHandled) {\n        var _this$virtualSelectio;\n\n        this._releaseSelectedAndFocusedCells();\n\n        null === (_this$virtualSelectio = this.virtualSelectionState) || void 0 === _this$virtualSelectio ? void 0 : _this$virtualSelectio.releaseSelectedAndFocusedCells();\n      }\n    }\n  }, {\n    key: \"_focusTarget\",\n    value: function () {\n      return this.$element();\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function () {\n      return (0, _extend.extend)(_get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_getDefaultOptions\", this).call(this), {\n        currentDate: new Date(),\n        intervalCount: 1,\n        startDate: null,\n        firstDayOfWeek: void 0,\n        startDayHour: 0,\n        endDayHour: 24,\n        hoursInterval: .5,\n        activeStateEnabled: true,\n        hoverStateEnabled: true,\n        groups: [],\n        showAllDayPanel: true,\n        allDayExpanded: false,\n        onCellClick: null,\n        crossScrollingEnabled: false,\n        dataCellTemplate: null,\n        timeCellTemplate: null,\n        resourceCellTemplate: null,\n        dateCellTemplate: null,\n        allowMultipleCellSelection: true,\n        indicatorTime: new Date(),\n        indicatorUpdateInterval: 5 * toMs(\"minute\"),\n        shadeUntilCurrentTime: true,\n        groupOrientation: \"horizontal\",\n        selectedCellData: [],\n        groupByDate: false,\n        scrolling: {\n          mode: \"standard\"\n        },\n        renovateRender: false,\n        height: void 0\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function (args) {\n      switch (args.name) {\n        case \"startDayHour\":\n        case \"endDayHour\":\n          this.invoke(\"validateDayHours\");\n\n          this._cleanWorkSpace();\n\n          break;\n\n        case \"dateCellTemplate\":\n        case \"resourceCellTemplate\":\n        case \"dataCellTemplate\":\n        case \"timeCellTemplate\":\n        case \"hoursInterval\":\n        case \"firstDayOfWeek\":\n        case \"currentDate\":\n        case \"startDate\":\n          this._cleanWorkSpace();\n\n          break;\n\n        case \"groups\":\n          this._cleanView();\n\n          this._disposeRenovatedComponents();\n\n          this._removeAllDayElements();\n\n          this._initGrouping();\n\n          this.repaint();\n          break;\n\n        case \"groupOrientation\":\n          this._initGroupedStrategy();\n\n          this._createAllDayPanelElements();\n\n          this._removeAllDayElements();\n\n          this._cleanWorkSpace();\n\n          this._toggleGroupByDateClass();\n\n          break;\n\n        case \"showAllDayPanel\":\n          if (this._isVerticalGroupedWorkSpace()) {\n            this._cleanView();\n\n            this._disposeRenovatedComponents();\n\n            this._removeAllDayElements();\n\n            this._initGrouping();\n\n            this.repaint();\n          } else {\n            this._toggleAllDayVisibility();\n          }\n\n          break;\n\n        case \"allDayExpanded\":\n          this._changeAllDayVisibility();\n\n          this._attachTablesEvents();\n\n          this.headerPanelOffsetRecalculate();\n\n          this._updateScrollable();\n\n          break;\n\n        case \"onSelectionChanged\":\n          this._createSelectionChangedAction();\n\n          break;\n\n        case \"onCellClick\":\n          this._createCellClickAction();\n\n          break;\n\n        case \"onCellContextMenu\":\n          this._attachContextMenuEvent();\n\n          break;\n\n        case \"intervalCount\":\n          this._cleanWorkSpace();\n\n          this._toggleWorkSpaceCountClass();\n\n          this._toggleFixedScrollableClass();\n\n          break;\n\n        case \"groupByDate\":\n          this._cleanWorkSpace();\n\n          this._toggleGroupByDateClass();\n\n          break;\n\n        case \"crossScrollingEnabled\":\n          this._toggleHorizontalScrollClass();\n\n          this._dateTableScrollable.option(this._dateTableScrollableConfig());\n\n          break;\n\n        case \"width\":\n          _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._dimensionChanged();\n\n          break;\n\n        case \"allowMultipleCellSelection\":\n          break;\n\n        case \"selectedCellData\":\n          break;\n\n        case \"scrolling\":\n          this.option(\"renovateRender\", this._isVirtualModeOn());\n          break;\n\n        case \"renovateRender\":\n          this._disposeRenovatedComponents();\n\n          this.repaint();\n          break;\n\n        default:\n          _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_cleanWorkSpace\",\n    value: function () {\n      this._cleanView();\n\n      this._toggleGroupedClass();\n\n      this._toggleWorkSpaceWithOddCells();\n\n      this._renderView();\n    }\n  }, {\n    key: \"_init\",\n    value: function () {\n      this._headerSemaphore = new ScrollSemaphore();\n      this._sideBarSemaphore = new ScrollSemaphore();\n      this._dataTableSemaphore = new ScrollSemaphore();\n      this._viewDataProvider = null;\n      this._virtualSelectionState = null;\n      this._activeStateUnit = CELL_SELECTOR;\n      this._maxAllowedVerticalPosition = [];\n      this._maxAllowedPosition = [];\n\n      _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_init\", this).call(this);\n\n      this._initGrouping();\n\n      this._toggleHorizontalScrollClass();\n\n      this._toggleWorkSpaceCountClass();\n\n      this._toggleGroupByDateClass();\n\n      this._toggleWorkSpaceWithOddCells();\n\n      this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass());\n    }\n  }, {\n    key: \"_initGrouping\",\n    value: function () {\n      this._initGroupedStrategy();\n\n      this._toggleGroupingDirectionClass();\n\n      this._toggleGroupByDateClass();\n    }\n  }, {\n    key: \"_initGroupedStrategy\",\n    value: function () {\n      var strategyName = this.option(\"groups\").length ? this.option(\"groupOrientation\") : this._getDefaultGroupStrategy();\n      var Strategy = \"vertical\" === strategyName ? _uiSchedulerWork_spaceGroupedStrategy2.default : _uiSchedulerWork_spaceGroupedStrategy.default;\n      this._groupedStrategy = new Strategy(this);\n    }\n  }, {\n    key: \"_getDefaultGroupStrategy\",\n    value: function () {\n      return \"horizontal\";\n    }\n  }, {\n    key: \"_isVerticalGroupedWorkSpace\",\n    value: function () {\n      return !!this.option(\"groups\").length && \"vertical\" === this.option(\"groupOrientation\");\n    }\n  }, {\n    key: \"_isHorizontalGroupedWorkSpace\",\n    value: function () {\n      return !!this.option(\"groups\").length && \"horizontal\" === this.option(\"groupOrientation\");\n    }\n  }, {\n    key: \"_toggleHorizontalScrollClass\",\n    value: function () {\n      this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option(\"crossScrollingEnabled\"));\n    }\n  }, {\n    key: \"_toggleGroupByDateClass\",\n    value: function () {\n      this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate());\n    }\n  }, {\n    key: \"_toggleWorkSpaceCountClass\",\n    value: function () {\n      this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount());\n    }\n  }, {\n    key: \"_isWorkSpaceWithCount\",\n    value: function () {\n      return this.option(\"intervalCount\") > 1;\n    }\n  }, {\n    key: \"_toggleWorkSpaceWithOddCells\",\n    value: function () {\n      this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells());\n    }\n  }, {\n    key: \"_isWorkspaceWithOddCells\",\n    value: function () {\n      return .5 === this.option(\"hoursInterval\") && !this.isVirtualScrolling();\n    }\n  }, {\n    key: \"_toggleGroupingDirectionClass\",\n    value: function () {\n      this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace());\n    }\n  }, {\n    key: \"_getRealGroupOrientation\",\n    value: function () {\n      return this._isVerticalGroupedWorkSpace() ? \"vertical\" : \"horizontal\";\n    }\n  }, {\n    key: \"_getTimePanelClass\",\n    value: function () {\n      return TIME_PANEL_CLASS;\n    }\n  }, {\n    key: \"_getDateTableClass\",\n    value: function () {\n      return DATE_TABLE_CLASS;\n    }\n  }, {\n    key: \"_getDateTableRowClass\",\n    value: function () {\n      return DATE_TABLE_ROW_CLASS;\n    }\n  }, {\n    key: \"_getDateTableCellClass\",\n    value: function (i, j) {\n      var cellClass = DATE_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS + \" \" + VERTICAL_SIZES_CLASS;\n      return this._needApplyLastGroupCellClass() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1, i, j) : cellClass;\n    }\n  }, {\n    key: \"_needApplyLastGroupCellClass\",\n    value: function () {\n      return true;\n    }\n  }, {\n    key: \"_getGroupRowClass\",\n    value: function () {\n      return GROUP_ROW_CLASS;\n    }\n  }, {\n    key: \"_getGroupHeaderClass\",\n    value: function (i) {\n      var cellClass = GROUP_HEADER_CLASS;\n      return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1);\n    }\n  }, {\n    key: \"_getGroupHeaderContentClass\",\n    value: function () {\n      return GROUP_HEADER_CONTENT_CLASS;\n    }\n  }, {\n    key: \"_initWorkSpaceUnits\",\n    value: function () {\n      this._$headerPanel = (0, _renderer.default)(\"<table>\");\n      this._$thead = (0, _renderer.default)(\"<thead>\").appendTo(this._$headerPanel);\n      this._$fixedContainer = (0, _renderer.default)(\"<div>\").addClass(_constants.FIXED_CONTAINER_CLASS);\n      this._$allDayContainer = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_CONTAINER_CLASS);\n\n      this._initAllDayPanelElements();\n\n      if (this.isRenovatedRender()) {\n        this.createRAllDayPanelElements();\n      } else {\n        this._createAllDayPanelElements();\n      }\n\n      this._$timePanel = (0, _renderer.default)(\"<table>\").addClass(this._getTimePanelClass());\n      this._$dateTable = (0, _renderer.default)(\"<table>\");\n      this._$groupTable = (0, _renderer.default)(\"<div>\").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS);\n    }\n  }, {\n    key: \"_initAllDayPanelElements\",\n    value: function () {\n      this._allDayTitles = [];\n      this._allDayTables = [];\n      this._allDayPanels = [];\n    }\n  }, {\n    key: \"createRAllDayPanelElements\",\n    value: function () {\n      this._$allDayPanel = (0, _renderer.default)(\"<div>\");\n      this._$allDayTitle = (0, _renderer.default)(\"<div>\").appendTo(this.$element());\n    }\n  }, {\n    key: \"_createAllDayPanelElements\",\n    value: function () {\n      var groupCount = this._getGroupCount();\n\n      if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {\n        for (var i = 0; i < groupCount; i++) {\n          var $allDayTitle = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(_message.default.format(\"dxScheduler-allDay\"));\n\n          this._allDayTitles.push($allDayTitle);\n\n          this._$allDayTable = (0, _renderer.default)(\"<table>\");\n\n          this._allDayTables.push(this._$allDayTable);\n\n          this._$allDayPanel = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\n\n          this._allDayPanels.push(this._$allDayPanel);\n        }\n      } else {\n        this._$allDayTitle = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(_message.default.format(\"dxScheduler-allDay\")).appendTo(this.$element());\n        this._$allDayTable = (0, _renderer.default)(\"<table>\");\n        this._$allDayPanel = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\n      }\n    }\n  }, {\n    key: \"_initDateTableScrollable\",\n    value: function () {\n      var $dateTableScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);\n      this._dateTableScrollable = this._createComponent($dateTableScrollable, _ui2.default, this._dateTableScrollableConfig());\n    }\n  }, {\n    key: \"_dateTableScrollableConfig\",\n    value: function () {\n      var config = {\n        useKeyboard: false,\n        bounceEnabled: false,\n        updateManually: true,\n        pushBackValue: 0\n      };\n\n      if (this._needCreateCrossScrolling()) {\n        config = (0, _extend.extend)(config, this._createCrossScrollingConfig());\n      }\n\n      return config;\n    }\n  }, {\n    key: \"_createCrossScrollingConfig\",\n    value: function () {\n      var _this = this;\n\n      var config = {};\n      config.direction = \"both\";\n\n      config.onScroll = function (e) {\n        _this._dataTableSemaphore.take();\n\n        _this._sideBarSemaphore.isFree() && _this._sidebarScrollable && _this._sidebarScrollable.scrollTo({\n          top: e.scrollOffset.top\n        });\n        _this._headerSemaphore.isFree() && _this._headerScrollable && _this._headerScrollable.scrollTo({\n          left: e.scrollOffset.left\n        });\n\n        _this._dataTableSemaphore.release();\n      };\n\n      config.onEnd = function () {\n        _this.notifyObserver(\"updateResizableArea\", {});\n      };\n\n      return config;\n    }\n  }, {\n    key: \"_createWorkSpaceElements\",\n    value: function () {\n      if (this.option(\"crossScrollingEnabled\")) {\n        this._createWorkSpaceScrollableElements();\n      } else {\n        this._createWorkSpaceStaticElements();\n      }\n    }\n  }, {\n    key: \"_createWorkSpaceStaticElements\",\n    value: function () {\n      if (this._isVerticalGroupedWorkSpace()) {\n        this._dateTableScrollable.$content().append(this._$allDayContainer, this._$groupTable, this._$timePanel, this._$dateTable);\n\n        this.$element().append(this._$fixedContainer, this._$headerPanel, this._dateTableScrollable.$element());\n      } else {\n        this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\n\n        this.$element().append(this._$fixedContainer, this._$headerPanel, this._$allDayContainer, this._$allDayPanel, this._dateTableScrollable.$element());\n      }\n    }\n  }, {\n    key: \"_createWorkSpaceScrollableElements\",\n    value: function () {\n      this.$element().append(this._$fixedContainer);\n\n      this._createHeaderScrollable();\n\n      this._createSidebarScrollable();\n\n      this.$element().append(this._dateTableScrollable.$element());\n\n      this._headerScrollable.$content().append(this._$headerPanel);\n\n      this._dateTableScrollable.$content().append(this._$dateTable);\n\n      if (this._isVerticalGroupedWorkSpace()) {\n        this._dateTableScrollable.$content().prepend(this._$allDayContainer);\n\n        this._sidebarScrollable.$content().append(this._$groupTable, this._$timePanel);\n      } else {\n        this._headerScrollable.$content().append(this._$allDayContainer, this._$allDayPanel);\n      }\n\n      this._sidebarScrollable.$content().append(this._$timePanel);\n    }\n  }, {\n    key: \"_createHeaderScrollable\",\n    value: function () {\n      var $headerScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this.$element());\n      this._headerScrollable = this._createComponent($headerScrollable, _ui2.default, this._headerScrollableConfig());\n    }\n  }, {\n    key: \"_headerScrollableConfig\",\n    value: function () {\n      var _this2 = this;\n\n      var config = {\n        useKeyboard: false,\n        showScrollbar: false,\n        direction: \"horizontal\",\n        useNative: false,\n        updateManually: true,\n        bounceEnabled: false,\n        pushBackValue: 0,\n        onScroll: function (e) {\n          _this2._headerSemaphore.take();\n\n          _this2._dataTableSemaphore.isFree() && _this2._dateTableScrollable.scrollTo({\n            left: e.scrollOffset.left\n          });\n\n          _this2._headerSemaphore.release();\n        }\n      };\n      return config;\n    }\n  }, {\n    key: \"_createSidebarScrollable\",\n    value: function () {\n      var _this3 = this;\n\n      var $timePanelScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this.$element());\n      this._sidebarScrollable = this._createComponent($timePanelScrollable, _ui2.default, {\n        useKeyboard: false,\n        showScrollbar: false,\n        direction: \"vertical\",\n        useNative: false,\n        updateManually: true,\n        bounceEnabled: false,\n        pushBackValue: 0,\n        onScroll: function (e) {\n          _this3._sideBarSemaphore.take();\n\n          _this3._dataTableSemaphore.isFree() && _this3._dateTableScrollable.scrollTo({\n            top: e.scrollOffset.top\n          });\n\n          _this3._sideBarSemaphore.release();\n        }\n      });\n    }\n  }, {\n    key: \"_visibilityChanged\",\n    value: function (visible) {\n      this.cache.clear();\n\n      if (visible && this._isVerticalGroupedWorkSpace()) {\n        this._setHorizontalGroupHeaderCellsHeight();\n      }\n\n      if (visible && this._needCreateCrossScrolling()) {\n        this._setTableSizes();\n      }\n    }\n  }, {\n    key: \"_attachTableClasses\",\n    value: function () {\n      this._addTableClass(this._$dateTable, this._getDateTableClass());\n\n      if (this._isVerticalGroupedWorkSpace()) {\n        var groupCount = this._getGroupCount();\n\n        for (var i = 0; i < groupCount; i++) {\n          this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS);\n        }\n      } else {\n        this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS);\n      }\n    }\n  }, {\n    key: \"_attachHeaderTableClasses\",\n    value: function () {\n      this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS);\n    }\n  }, {\n    key: \"_addTableClass\",\n    value: function ($el, className) {\n      $el && !$el.hasClass(className) && $el.addClass(className);\n    }\n  }, {\n    key: \"_setTableSizes\",\n    value: function () {\n      this._attachTableClasses();\n\n      var cellWidth = this.getCellWidth();\n\n      if (cellWidth < this.getCellMinWidth()) {\n        cellWidth = this.getCellMinWidth();\n      }\n\n      var minWidth = this.getWorkSpaceMinWidth();\n\n      var $headerCells = this._$headerPanel.find(\"tr\").last().find(\"th\");\n\n      var width = cellWidth * $headerCells.length;\n\n      if (width < minWidth) {\n        width = minWidth;\n      }\n\n      this._$headerPanel.width(width);\n\n      this._$dateTable.width(width);\n\n      this._$allDayTable && this._$allDayTable.width(width);\n\n      this._attachHeaderTableClasses();\n\n      if (this._isVerticalGroupedWorkSpace()) {\n        this._setHorizontalGroupHeaderCellsHeight();\n      }\n    }\n  }, {\n    key: \"getWorkSpaceMinWidth\",\n    value: function () {\n      return this._groupedStrategy.getWorkSpaceMinWidth();\n    }\n  }, {\n    key: \"_dimensionChanged\",\n    value: function () {\n      if (this.option(\"crossScrollingEnabled\")) {\n        this._setTableSizes();\n      }\n\n      this.headerPanelOffsetRecalculate();\n      this.cache.clear();\n\n      this._cleanAllowedPositions();\n    }\n  }, {\n    key: \"_needCreateCrossScrolling\",\n    value: function () {\n      return this.option(\"crossScrollingEnabled\");\n    }\n  }, {\n    key: \"_getElementClass\",\n    value: function () {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_getRowCount\",\n    value: function () {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_getRowCountWithAllDayRows\",\n    value: function () {\n      var allDayRowCount = this._isShowAllDayPanel() ? 1 : 0;\n      return this._getRowCount() + allDayRowCount;\n    }\n  }, {\n    key: \"_getCellCount\",\n    value: function () {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function () {\n      this.cache.clear();\n\n      this._initWorkSpaceUnits();\n\n      this._initDateTableScrollable();\n\n      this._createWorkSpaceElements();\n\n      this._initVirtualScrolling();\n\n      _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_initMarkup\", this).call(this);\n\n      if (!this.option(\"crossScrollingEnabled\")) {\n        this._attachTableClasses();\n\n        this._attachHeaderTableClasses();\n      }\n\n      this._toggleGroupedClass();\n\n      this._toggleFixedScrollableClass();\n\n      this._renderView();\n\n      this._attachEvents();\n\n      this._setFocusOnCellByOption(this.option(\"selectedCellData\"));\n    }\n  }, {\n    key: \"isRenovatedRender\",\n    value: function () {\n      return this.renovatedRenderSupported() && this.option(\"renovateRender\");\n    }\n  }, {\n    key: \"_isVirtualModeOn\",\n    value: function () {\n      return \"virtual\" === this.option(\"scrolling.mode\");\n    }\n  }, {\n    key: \"isVirtualScrolling\",\n    value: function () {\n      return this.isRenovatedRender() && this._isVirtualModeOn();\n    }\n  }, {\n    key: \"_initVirtualScrolling\",\n    value: function () {\n      if (this.virtualScrollingDispatcher) {\n        this.virtualScrollingDispatcher.dispose();\n        this.virtualScrollingDispatcher = null;\n      }\n\n      if (this.isVirtualScrolling()) {\n        this.virtualScrollingDispatcher = new _uiScheduler2.default(this);\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function () {\n      _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_render\", this).call(this);\n\n      this._renderDateTimeIndication();\n\n      this._setIndicationUpdateInterval();\n    }\n  }, {\n    key: \"_toggleGroupedClass\",\n    value: function () {\n      this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0);\n    }\n  }, {\n    key: \"_toggleFixedScrollableClass\",\n    value: function () {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_renderView\",\n    value: function () {\n      this._setFirstViewDate();\n\n      this._applyCellTemplates(this._renderGroupHeader());\n\n      this._renderDateHeader();\n\n      if (this.isRenovatedRender()) {\n        this.renderRWorkspace();\n      } else {\n        this._renderTimePanel();\n\n        this._renderGroupAllDayPanel();\n\n        this._renderDateTable();\n\n        this._renderAllDayPanel();\n      }\n\n      this._updateGroupTableHeight();\n\n      this._shader = new _uiSchedulerCurrent_time_shader.default(this);\n    }\n  }, {\n    key: \"isGroupedAllDayPanel\",\n    value: function () {\n      return this._isShowAllDayPanel() && this._isVerticalGroupedWorkSpace();\n    }\n  }, {\n    key: \"generateRenderOptions\",\n    value: function () {\n      var groupCount = this._getGroupCount();\n\n      var verticalGroupCount = !this._isVerticalGroupedWorkSpace() ? 1 : groupCount;\n      var horizontalGroupCount = this._isVerticalGroupedWorkSpace() ? 1 : groupCount;\n      var allDayElements = this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0;\n\n      var rowCountInGroup = this._getRowCount();\n\n      var cellCount = this._getTotalCellCount(groupCount);\n\n      var options = {\n        horizontalGroupCount: horizontalGroupCount,\n        verticalGroupCount: verticalGroupCount,\n        rowCountInGroup: rowCountInGroup,\n        cellCount: cellCount,\n        cellCountInGroupRow: this._getCellCount(),\n        cellDataGetters: [this._getCellData.bind(this)],\n        allDayElements: allDayElements,\n        startRowIndex: 0,\n        groupOrientation: this.option(\"groupOrientation\"),\n        nonVirtualRowCount: this._getRowCount(),\n        groupCount: groupCount\n      };\n\n      if (this.isVirtualScrolling()) {\n        (0, _extend.extend)(options, this.virtualScrollingDispatcher.renderState);\n      } else {\n        options.rowCount = this._getTotalRowCount(groupCount, this._isVerticalGroupedWorkSpace());\n      }\n\n      return options;\n    }\n  }, {\n    key: \"renovatedRenderSupported\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"renderRWorkspace\",\n    value: function () {\n      var _this$virtualScrollin2;\n\n      var isGenerateNewViewData = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;\n\n      this._cleanAllowedPositions();\n\n      this.viewDataProvider.update(isGenerateNewViewData);\n      this.renderRAllDayPanel();\n      this.renderRTimeTable();\n      this.renderRDateTable();\n      this.updateRSelection();\n      null === (_this$virtualScrollin2 = this.virtualScrollingDispatcher) || void 0 === _this$virtualScrollin2 ? void 0 : _this$virtualScrollin2.updateDimensions();\n    }\n  }, {\n    key: \"renderRAllDayPanel\",\n    value: function () {\n      var visible = this._isShowAllDayPanel() && !this.isGroupedAllDayPanel();\n\n      if (visible) {\n        var options = {\n          viewData: this.viewDataProvider.viewData,\n          visible: visible,\n          dataCellTemplate: this.option(\"dataCellTemplate\")\n        };\n        this.renderRComponent(this._$allDayPanel, _layout.default, \"renovatedAllDayPanel\", options);\n        this.renderRComponent(this._$allDayTitle, _title.default, \"renovatedAllDayPanelTitle\", {\n          visible: visible\n        });\n        this._$allDayTable = this.renovatedAllDayPanel.$element().find(\".\".concat(ALL_DAY_TABLE_CLASS));\n      }\n\n      this._toggleAllDayVisibility();\n    }\n  }, {\n    key: \"renderRTimeTable\",\n    value: function () {\n      this.renderRComponent(this._$timePanel, _layout2.default, \"renovatedTimePanel\", {\n        viewData: this.viewDataProvider.viewData,\n        timeCellTemplate: this.option(\"timeCellTemplate\")\n      });\n    }\n  }, {\n    key: \"renderRDateTable\",\n    value: function () {}\n  }, {\n    key: \"renderRComponent\",\n    value: function (parentElement, componentClass, componentName, viewModel) {\n      var component = this[componentName];\n\n      if (!component) {\n        var container = (0, _element.getPublicElement)(parentElement);\n        component = this._createComponent(container, componentClass, _objectSpread(_objectSpread({}, viewModel), {}, {\n          groupOrientation: this.option(\"groupOrientation\")\n        }));\n        this[componentName] = component;\n      } else {\n        Object.getOwnPropertyNames(viewModel).forEach(function (optionName) {\n          component.option(optionName, viewModel[optionName]);\n        });\n      }\n    }\n  }, {\n    key: \"updateRSelection\",\n    value: function () {\n      var isVerticalGrouping = this._isVerticalGroupedWorkSpace();\n\n      var focusedCell = this.virtualSelectionState.getFocusedCell(isVerticalGrouping);\n      var selectedCells = this.virtualSelectionState.getSelectedCells();\n\n      if (focusedCell) {\n        var coordinates = focusedCell.coordinates,\n            cellData = focusedCell.cellData;\n        var $cell = !isVerticalGrouping && cellData.allDay ? this._dom_getAllDayPanelCell(coordinates.cellIndex) : this._dom_getDateCell(coordinates);\n        $cell && this._setFocusedCell($cell);\n      }\n\n      selectedCells && this._setSelectedCellsByCellData(selectedCells);\n    }\n  }, {\n    key: \"_updateGroupTableHeight\",\n    value: function () {\n      if (this._isVerticalGroupedWorkSpace() && (0, _window.hasWindow)()) {\n        this._setHorizontalGroupHeaderCellsHeight();\n      }\n    }\n  }, {\n    key: \"_renderDateTimeIndication\",\n    value: function () {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_setIndicationUpdateInterval\",\n    value: function () {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_refreshDateTimeIndication\",\n    value: function () {\n      return (0, _common.noop)();\n    }\n  }, {\n    key: \"_setFocusOnCellByOption\",\n    value: function (data) {\n      this._releaseSelectedAndFocusedCells();\n\n      this._setSelectedCellsByCellData(data);\n    }\n  }, {\n    key: \"_setSelectedCellsByCellData\",\n    value: function (data) {\n      var _data$,\n          _this4 = this;\n\n      var cells = [];\n\n      var $cells = this._getAllCells(null === data || void 0 === data ? void 0 : null === (_data$ = data[0]) || void 0 === _data$ ? void 0 : _data$.allDay);\n\n      var cellsInRow = this._getTotalCellCount(this._getGroupCount());\n\n      data.forEach(function (cellData) {\n        var groups = cellData.groups,\n            startDate = cellData.startDate,\n            allDay = cellData.allDay;\n        var groupIndex = cellData.groupIndex;\n\n        if (!groupIndex) {\n          groupIndex = _this4._isGroupsSpecified(groups) ? _this4._getGroupIndexByResourceId(groups) : 0;\n        }\n\n        var coordinates = _this4.isVirtualScrolling() ? _this4.viewDataProvider.findCellPositionInMap(groupIndex, startDate, allDay) : _this4.getCoordinatesByDate(startDate, groupIndex, allDay);\n\n        if (coordinates) {\n          var rowIndex = coordinates.rowIndex,\n              cellIndex = coordinates.cellIndex;\n          var index = rowIndex * cellsInRow + cellIndex;\n          var $cell = $cells[index];\n\n          if ((0, _type.isDefined)($cell)) {\n            _this4._toggleFocusClass(true, (0, _renderer.default)($cell));\n\n            cells.push($cell);\n          }\n        }\n      });\n      this._selectedCells = cells;\n    }\n  }, {\n    key: \"_isGroupsSpecified\",\n    value: function (resources) {\n      return this.option(\"groups\").length && resources;\n    }\n  }, {\n    key: \"_getGroupIndexByResourceId\",\n    value: function (id) {\n      var groups = this.option(\"groups\");\n      var resourceTree = this.invoke(\"createResourcesTree\", groups);\n\n      if (!resourceTree.length) {\n        return 0;\n      }\n\n      return this._getGroupIndexRecursively(resourceTree, id);\n    }\n  }, {\n    key: \"_getGroupIndexRecursively\",\n    value: function (resourceTree, id) {\n      var _this5 = this;\n\n      var currentKey = resourceTree[0].name;\n      var currentValue = id[currentKey];\n      return resourceTree.reduce(function (prevIndex, _ref2) {\n        var leafIndex = _ref2.leafIndex,\n            value = _ref2.value,\n            children = _ref2.children;\n        var areValuesEqual = currentValue === value;\n\n        if (areValuesEqual && void 0 !== leafIndex) {\n          return leafIndex;\n        }\n\n        if (areValuesEqual) {\n          return _this5._getGroupIndexRecursively(children, id);\n        }\n\n        return prevIndex;\n      }, 0);\n    }\n  }, {\n    key: \"_setFirstViewDate\",\n    value: function () {\n      var firstDayOfWeek = (0, _type.isDefined)(this._firstDayOfWeek()) ? this._firstDayOfWeek() : _date2.default.firstDayOfWeekIndex();\n      this._firstViewDate = _date.default.getFirstWeekDate(this._getViewStartByOptions(), firstDayOfWeek);\n\n      this._setStartDayHour(this._firstViewDate);\n    }\n  }, {\n    key: \"_getViewStartByOptions\",\n    value: function () {\n      if (!this.option(\"startDate\")) {\n        return this.option(\"currentDate\");\n      } else {\n        var startDate = _date.default.trimTime(this._getStartViewDate());\n\n        var currentDate = this.option(\"currentDate\");\n        var diff = startDate.getTime() <= currentDate.getTime() ? 1 : -1;\n        var endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\n\n        while (!this._dateInRange(currentDate, startDate, endDate, diff)) {\n          startDate = endDate;\n          endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\n        }\n\n        return diff > 0 ? startDate : endDate;\n      }\n    }\n  }, {\n    key: \"_getHeaderDate\",\n    value: function () {\n      return this.getStartViewDate();\n    }\n  }, {\n    key: \"_getStartViewDate\",\n    value: function () {\n      return this.option(\"startDate\");\n    }\n  }, {\n    key: \"_dateInRange\",\n    value: function (date, startDate, endDate, diff) {\n      return diff > 0 ? _date.default.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : _date.default.dateInRange(date, endDate, startDate, \"date\");\n    }\n  }, {\n    key: \"_getIntervalDuration\",\n    value: function () {\n      return toMs(\"day\") * this.option(\"intervalCount\");\n    }\n  }, {\n    key: \"_setStartDayHour\",\n    value: function (date) {\n      var startDayHour = this.option(\"startDayHour\");\n\n      if ((0, _type.isDefined)(startDayHour)) {\n        date.setHours(startDayHour, startDayHour % 1 * 60, 0, 0);\n      }\n    }\n  }, {\n    key: \"_firstDayOfWeek\",\n    value: function () {\n      return this.option(\"firstDayOfWeek\");\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function () {\n      this._createSelectionChangedAction();\n\n      this._attachClickEvent();\n\n      this._attachContextMenuEvent();\n    }\n  }, {\n    key: \"_attachClickEvent\",\n    value: function () {\n      var that = this;\n\n      var pointerDownAction = this._createAction(function (e) {\n        that._pointerDownHandler(e.event);\n      });\n\n      this._createCellClickAction();\n\n      var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\n      var $element = this.$element();\n\n      _events_engine.default.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);\n\n      _events_engine.default.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);\n\n      _events_engine.default.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function (e) {\n        if ((0, _index.isMouseEvent)(e) && e.which > 1) {\n          e.preventDefault();\n          return;\n        }\n\n        pointerDownAction({\n          event: e\n        });\n      });\n\n      _events_engine.default.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function (e) {\n        var $cell = (0, _renderer.default)(e.target);\n\n        that._cellClickAction({\n          event: e,\n          cellElement: (0, _element.getPublicElement)($cell),\n          cellData: that.getCellData($cell)\n        });\n      });\n    }\n  }, {\n    key: \"_createCellClickAction\",\n    value: function () {\n      var _this6 = this;\n\n      this._cellClickAction = this._createActionByOption(\"onCellClick\", {\n        afterExecute: function (e) {\n          return _this6._cellClickHandler(e.args[0].event);\n        }\n      });\n    }\n  }, {\n    key: \"_createSelectionChangedAction\",\n    value: function () {\n      this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n    }\n  }, {\n    key: \"_cellClickHandler\",\n    value: function (e) {\n      var $target = (0, _renderer.default)(e.target);\n\n      if (this._showPopup && this._hasFocusClass($target)) {\n        delete this._showPopup;\n\n        this._showAddAppointmentPopup($target);\n      }\n    }\n  }, {\n    key: \"_pointerDownHandler\",\n    value: function (e) {\n      var $target = (0, _renderer.default)(e.target);\n\n      if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {\n        this._isCellClick = false;\n        return;\n      }\n\n      this._isCellClick = true;\n\n      if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\n        this._showPopup = true;\n      } else {\n        this._setSelectedAndFocusedCells($target);\n      }\n    }\n  }, {\n    key: \"_showAddAppointmentPopup\",\n    value: function ($cell) {\n      var firstCellData = this.getCellData($cell.first());\n      var lastCellData = this.getCellData($cell.last());\n\n      if (this.isVirtualScrolling()) {\n        var selectedCells = this.virtualSelectionState.getSelectedCells();\n        firstCellData = selectedCells[0];\n        lastCellData = selectedCells[selectedCells.length - 1];\n      }\n\n      var result = {\n        startDate: firstCellData.startDate,\n        endDate: lastCellData.endDate\n      };\n\n      if (void 0 !== lastCellData.allDay) {\n        result.allDay = lastCellData.allDay;\n      }\n\n      this.invoke(\"showAddAppointmentPopup\", result, lastCellData.groups);\n    }\n  }, {\n    key: \"_attachContextMenuEvent\",\n    value: function () {\n      this._createContextMenuAction();\n\n      var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\n      var $element = this.$element();\n      var eventName = (0, _index.addNamespace)(_contextmenu.name, this.NAME);\n\n      _events_engine.default.off($element, eventName, cellSelector);\n\n      _events_engine.default.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this));\n    }\n  }, {\n    key: \"_contextMenuHandler\",\n    value: function (e) {\n      var $cell = (0, _renderer.default)(e.target);\n\n      this._contextMenuAction({\n        event: e,\n        cellElement: (0, _element.getPublicElement)($cell),\n        cellData: this.getCellData($cell)\n      });\n\n      this._contextMenuHandled = true;\n    }\n  }, {\n    key: \"_createContextMenuAction\",\n    value: function () {\n      this._contextMenuAction = this._createActionByOption(\"onCellContextMenu\");\n    }\n  }, {\n    key: \"_getGroupHeaderContainer\",\n    value: function () {\n      if (this._isVerticalGroupedWorkSpace()) {\n        return this._$groupTable;\n      }\n\n      return this._$thead;\n    }\n  }, {\n    key: \"_getDateHeaderContainer\",\n    value: function () {\n      return this._$thead;\n    }\n  }, {\n    key: \"_renderGroupHeader\",\n    value: function () {\n      var $container = this._getGroupHeaderContainer();\n\n      var groupCount = this._getGroupCount();\n\n      var cellTemplates = [];\n\n      if (groupCount) {\n        var groupRows = this._makeGroupRows(this.option(\"groups\"), this.option(\"groupByDate\"));\n\n        this._attachGroupCountAttr(groupCount, groupRows);\n\n        $container.append(groupRows.elements);\n        cellTemplates = groupRows.cellTemplates;\n      } else {\n        this._detachGroupCountAttr();\n      }\n\n      return cellTemplates;\n    }\n  }, {\n    key: \"_applyCellTemplates\",\n    value: function (templates) {\n      templates.forEach(function (template) {\n        template();\n      });\n    }\n  }, {\n    key: \"_detachGroupCountAttr\",\n    value: function () {\n      var groupedAttr = this._groupedStrategy.getGroupCountAttr();\n\n      this.$element().removeAttr(groupedAttr.attr);\n    }\n  }, {\n    key: \"_attachGroupCountAttr\",\n    value: function (groupRowCount, groupRows) {\n      var groupedAttr = this._groupedStrategy.getGroupCountAttr(groupRowCount, groupRows);\n\n      this.$element().attr(groupedAttr.attr, groupedAttr.count);\n    }\n  }, {\n    key: \"headerPanelOffsetRecalculate\",\n    value: function () {\n      if (!this.option(\"resourceCellTemplate\") && !this.option(\"dateCellTemplate\")) {\n        return;\n      }\n\n      var headerPanelHeight = this.getHeaderPanelHeight();\n      var headerHeight = this.invoke(\"getHeaderHeight\");\n      var allDayPanelHeight = this.supportAllDayRow() && this._isShowAllDayPanel() ? this._groupedStrategy.getAllDayTableHeight() : 0;\n      headerPanelHeight && this._headerScrollable && this._headerScrollable.$element().height(headerPanelHeight + allDayPanelHeight);\n      headerPanelHeight && this._dateTableScrollable.$element().css({\n        paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\n        marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\n      });\n      headerPanelHeight && this._sidebarScrollable && this._sidebarScrollable.$element().css({\n        paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\n        marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\n      });\n      this._$allDayTitle && this._$allDayTitle.css(\"top\", headerHeight + headerPanelHeight + \"px\");\n    }\n  }, {\n    key: \"_makeGroupRows\",\n    value: function (groups, groupByDate) {\n      var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\n      return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\n        groupHeaderRowClass: this._getGroupRowClass(),\n        groupRowClass: this._getGroupRowClass(),\n        groupHeaderClass: this._getGroupHeaderClass.bind(this),\n        groupHeaderContentClass: this._getGroupHeaderContentClass()\n      }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getGroupCount(), groupByDate);\n    }\n  }, {\n    key: \"_getDateHeaderTemplate\",\n    value: function () {\n      return this.option(\"dateCellTemplate\");\n    }\n  }, {\n    key: \"_renderDateHeader\",\n    value: function () {\n      var container = this._getDateHeaderContainer();\n\n      var $headerRow = (0, _renderer.default)(\"<tr>\").addClass(HEADER_ROW_CLASS);\n\n      var count = this._getCellCount();\n\n      var cellTemplate = this._getDateHeaderTemplate();\n\n      var repeatCount = this._getCalculateHeaderCellRepeatCount();\n\n      var templateCallbacks = [];\n      var groupByDate = this.isGroupedByDate();\n\n      if (!groupByDate) {\n        for (var rowIndex = 0; rowIndex < repeatCount; rowIndex++) {\n          for (var cellIndex = 0; cellIndex < count; cellIndex++) {\n            var templateIndex = rowIndex * repeatCount + cellIndex;\n\n            this._renderDateHeaderTemplate($headerRow, cellIndex, templateIndex, cellTemplate, templateCallbacks);\n          }\n        }\n\n        container.append($headerRow);\n      } else {\n        var colSpan = groupByDate ? this._getGroupCount() : 1;\n\n        for (var _cellIndex = 0; _cellIndex < count; _cellIndex++) {\n          var _templateIndex = _cellIndex * repeatCount;\n\n          var cellElement = this._renderDateHeaderTemplate($headerRow, _cellIndex, _templateIndex, cellTemplate, templateCallbacks);\n\n          cellElement.attr(\"colSpan\", colSpan);\n        }\n\n        container.prepend($headerRow);\n      }\n\n      this._applyCellTemplates(templateCallbacks);\n\n      return $headerRow;\n    }\n  }, {\n    key: \"_renderDateHeaderTemplate\",\n    value: function (container, panelCellIndex, templateIndex, cellTemplate, templateCallbacks) {\n      var text = this._getHeaderText(panelCellIndex);\n\n      var $cell = (0, _renderer.default)(\"<th>\").addClass(this._getHeaderPanelCellClass(panelCellIndex)).attr(\"title\", text);\n\n      if (null !== cellTemplate && void 0 !== cellTemplate && cellTemplate.render) {\n        templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {\n          model: {\n            text: text,\n            date: this._getDateByIndex(panelCellIndex)\n          },\n          index: templateIndex,\n          container: (0, _element.getPublicElement)($cell)\n        }));\n      } else {\n        $cell.text(text);\n      }\n\n      container.append($cell);\n      return $cell;\n    }\n  }, {\n    key: \"_getHeaderPanelCellClass\",\n    value: function (i) {\n      var cellClass = HEADER_PANEL_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\n      return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1, void 0, void 0, this.isGroupedByDate());\n    }\n  }, {\n    key: \"_getCalculateHeaderCellRepeatCount\",\n    value: function () {\n      return this._groupedStrategy.calculateHeaderCellRepeatCount();\n    }\n  }, {\n    key: \"_renderAllDayPanel\",\n    value: function (index) {\n      var cellCount = this._getCellCount();\n\n      if (!this._isVerticalGroupedWorkSpace()) {\n        cellCount *= this._getGroupCount() || 1;\n      }\n\n      var cellTemplates = this._renderTableBody({\n        container: this._allDayPanels.length ? (0, _element.getPublicElement)(this._allDayTables[index]) : (0, _element.getPublicElement)(this._$allDayTable),\n        rowCount: 1,\n        cellCount: cellCount,\n        cellClass: this._getAllDayPanelCellClass.bind(this),\n        rowClass: ALL_DAY_TABLE_ROW_CLASS,\n        cellTemplate: this.option(\"dataCellTemplate\"),\n        getCellData: this._getAllDayCellData.bind(this),\n        groupIndex: index\n      }, true);\n\n      this._toggleAllDayVisibility();\n\n      this._applyCellTemplates(cellTemplates);\n    }\n  }, {\n    key: \"_renderGroupAllDayPanel\",\n    value: function () {\n      if (this._isVerticalGroupedWorkSpace()) {\n        var groupCount = this._getGroupCount();\n\n        for (var i = 0; i < groupCount; i++) {\n          this._renderAllDayPanel(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getAllDayPanelCellClass\",\n    value: function (i, j) {\n      var cellClass = ALL_DAY_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\n      return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1);\n    }\n  }, {\n    key: \"_getAllDayCellData\",\n    value: function (cell, rowIndex, cellIndex, groupIndex) {\n      var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\n\n      var cellGroupIndex = groupIndex || this._getGroupIndex(rowIndex, cellIndex);\n\n      startDate = _date.default.trimTime(startDate);\n      var data = {\n        startDate: startDate,\n        endDate: startDate,\n        allDay: true,\n        groupIndex: cellGroupIndex\n      };\n\n      var groups = this._getCellGroups(cellGroupIndex);\n\n      if (groups.length) {\n        data.groups = {};\n      }\n\n      for (var i = 0; i < groups.length; i++) {\n        data.groups[groups[i].name] = groups[i].id;\n      }\n\n      return {\n        key: CELL_DATA,\n        value: data\n      };\n    }\n  }, {\n    key: \"_toggleAllDayVisibility\",\n    value: function () {\n      var showAllDayPanel = this._isShowAllDayPanel();\n\n      this._$allDayPanel.toggle(showAllDayPanel);\n\n      this._$allDayTitle && this._$allDayTitle.toggleClass(ALL_DAY_TITLE_HIDDEN_CLASS, !showAllDayPanel);\n      this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);\n\n      this._changeAllDayVisibility();\n\n      this._updateScrollable();\n    }\n  }, {\n    key: \"_changeAllDayVisibility\",\n    value: function () {\n      this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option(\"allDayExpanded\") && this._isShowAllDayPanel());\n    }\n  }, {\n    key: \"_updateScrollable\",\n    value: function () {\n      this._dateTableScrollable.update();\n\n      this._headerScrollable && this._headerScrollable.update();\n      this._sidebarScrollable && this._sidebarScrollable.update();\n    }\n  }, {\n    key: \"_renderTimePanel\",\n    value: function () {\n      var _this7 = this;\n\n      var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();\n\n      var startViewDate = _utils.default.getDateWithoutTimezoneChange(this.getStartViewDate());\n\n      var _getTimeText = function (i) {\n        var index = i % _this7._getRowCount();\n\n        if (index % 2 === 0) {\n          return _date2.default.format(_this7._getTimeCellDateCore(startViewDate, i), \"shorttime\");\n        }\n\n        return \"\";\n      };\n\n      this._renderTableBody({\n        container: (0, _element.getPublicElement)(this._$timePanel),\n        rowCount: this._getTimePanelRowCount() * repeatCount,\n        cellCount: 1,\n        cellClass: this._getTimeCellClass.bind(this),\n        rowClass: TIME_PANEL_ROW_CLASS,\n        cellTemplate: this.option(\"timeCellTemplate\"),\n        getCellText: _getTimeText.bind(this),\n        getCellDate: this._getTimeCellDate.bind(this),\n        groupCount: this._getGroupCount(),\n        allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0\n      });\n    }\n  }, {\n    key: \"_getTimePanelRowCount\",\n    value: function () {\n      return this._getCellCountInDay();\n    }\n  }, {\n    key: \"_getCellCountInDay\",\n    value: function (skipRound) {\n      var result = this._calculateDayDuration() / this.option(\"hoursInterval\");\n      return skipRound ? result : Math.ceil(result);\n    }\n  }, {\n    key: \"_calculateDayDuration\",\n    value: function () {\n      return this.option(\"endDayHour\") - this.option(\"startDayHour\");\n    }\n  }, {\n    key: \"_getTimeCellClass\",\n    value: function (i) {\n      var cellClass = TIME_PANEL_CELL_CLASS + \" \" + VERTICAL_SIZES_CLASS;\n      return this._isVerticalGroupedWorkSpace() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i) : cellClass;\n    }\n  }, {\n    key: \"_getTimeCellDate\",\n    value: function (i) {\n      return this._getTimeCellDateCore(this.getStartViewDate(), i);\n    }\n  }, {\n    key: \"_getTimeCellDateCore\",\n    value: function (startViewDate, i) {\n      var result = new Date(startViewDate);\n      var timeCellDuration = Math.round(this.getCellDuration());\n\n      var cellCountInDay = this._getCellCountInDay(true);\n\n      result.setMilliseconds(result.getMilliseconds() + timeCellDuration * (i % cellCountInDay));\n      return result;\n    }\n  }, {\n    key: \"_renderDateTable\",\n    value: function () {\n      var groupCount = this._getGroupCount();\n\n      this._renderTableBody({\n        container: (0, _element.getPublicElement)(this._$dateTable),\n        rowCount: this._getTotalRowCount(groupCount),\n        cellCount: this._getTotalCellCount(groupCount),\n        cellClass: this._getDateTableCellClass.bind(this),\n        rowClass: this._getDateTableRowClass(),\n        cellTemplate: this.option(\"dataCellTemplate\"),\n        getCellData: this._getCellData.bind(this),\n        allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,\n        groupCount: groupCount,\n        groupByDate: this.option(\"groupByDate\")\n      });\n    }\n  }, {\n    key: \"_insertAllDayRowsIntoDateTable\",\n    value: function () {\n      return this._groupedStrategy.insertAllDayRowsIntoDateTable();\n    }\n  }, {\n    key: \"_getTotalCellCount\",\n    value: function (groupCount) {\n      return this._groupedStrategy.getTotalCellCount(groupCount);\n    }\n  }, {\n    key: \"_getTotalRowCount\",\n    value: function (groupCount, includeAllDayPanelRows) {\n      var result = this._groupedStrategy.getTotalRowCount(groupCount);\n\n      if (includeAllDayPanelRows && groupCount > 1 && this._isShowAllDayPanel()) {\n        result += groupCount;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getCellData\",\n    value: function (cell, rowIndex, cellIndex) {\n      var data = this._prepareCellData(rowIndex, cellIndex, cell);\n\n      return {\n        key: CELL_DATA,\n        value: data\n      };\n    }\n  }, {\n    key: \"_prepareCellData\",\n    value: function (rowIndex, cellIndex) {\n      var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\n\n      var endDate = this.calculateEndDate(startDate);\n\n      var groupIndex = this._getGroupIndex(rowIndex, cellIndex);\n\n      var data = {\n        startDate: startDate,\n        endDate: endDate,\n        allDay: this._getTableAllDay(),\n        groupIndex: groupIndex\n      };\n\n      var groups = this._getCellGroups(groupIndex);\n\n      if (groups.length) {\n        data.groups = {};\n      }\n\n      for (var i = 0; i < groups.length; i++) {\n        data.groups[groups[i].name] = groups[i].id;\n      }\n\n      return data;\n    }\n  }, {\n    key: \"_getGroupIndex\",\n    value: function (rowIndex, cellIndex) {\n      return this._groupedStrategy.getGroupIndex(rowIndex, cellIndex);\n    }\n  }, {\n    key: \"_getTableAllDay\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"calculateEndDate\",\n    value: function (startDate) {\n      var result = new Date(startDate);\n      result.setMilliseconds(result.getMilliseconds() + Math.round(this._getInterval()));\n      return result;\n    }\n  }, {\n    key: \"_getGroupCount\",\n    value: function () {\n      var groups = this.option(\"groups\");\n      var result = 0;\n\n      for (var i = 0, len = groups.length; i < len; i++) {\n        if (!i) {\n          result = groups[i].items.length;\n        } else {\n          result *= groups[i].items.length;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getPathToLeaf\",\n    value: function (leafIndex) {\n      var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\n\n      function findLeafByIndex(data, index) {\n        for (var i = 0; i < data.length; i++) {\n          if (data[i].leafIndex === index) {\n            return data[i];\n          } else {\n            var _leaf = findLeafByIndex(data[i].children, index);\n\n            if (_leaf) {\n              return _leaf;\n            }\n          }\n        }\n      }\n\n      function makeBranch(leaf, result) {\n        result = result || [];\n        result.push(leaf.value);\n\n        if (leaf.parent) {\n          makeBranch(leaf.parent, result);\n        }\n\n        return result;\n      }\n\n      var leaf = findLeafByIndex(tree, leafIndex);\n      return makeBranch(leaf).reverse();\n    }\n  }, {\n    key: \"_getCellGroups\",\n    value: function (groupIndex) {\n      var result = [];\n\n      if (this._getGroupCount()) {\n        var groups = this.option(\"groups\");\n\n        if (groupIndex < 0) {\n          return;\n        }\n\n        var path = this._getPathToLeaf(groupIndex);\n\n        for (var i = 0; i < groups.length; i++) {\n          result.push({\n            name: groups[i].name,\n            id: path[i]\n          });\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_attachTablesEvents\",\n    value: function () {\n      var _this8 = this;\n\n      var that = this;\n      var isPointerDown = false;\n      var cellHeight;\n      var cellWidth;\n      var $element = this.$element();\n\n      _events_engine.default.off($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME);\n\n      _events_engine.default.off($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME);\n\n      _events_engine.default.off($element, SCHEDULER_CELL_DXDROP_EVENT_NAME);\n\n      _events_engine.default.off($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);\n\n      _events_engine.default.off($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);\n\n      _events_engine.default.on($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, {\n        itemSizeFunc: function ($element) {\n          if (!cellHeight) {\n            cellHeight = (0, _position.getBoundingRect)($element.get(0)).height;\n          }\n\n          if (!cellWidth) {\n            cellWidth = (0, _position.getBoundingRect)($element.get(0)).width;\n          }\n\n          return {\n            width: cellWidth,\n            height: cellHeight\n          };\n        },\n        checkDropTarget: function (target, event) {\n          return !_this8._isOutsideScrollable(target, event);\n        }\n      }, function (e) {\n        if (that._$currentTableTarget) {\n          that.removeDroppableCellClass(that._$currentTableTarget);\n        }\n\n        that._$currentTableTarget = (0, _renderer.default)(e.target);\n\n        that._$currentTableTarget.addClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n      });\n\n      _events_engine.default.on($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME, function (e) {\n        if (!$element.find((0, _renderer.default)(e.draggingElement)).length) {\n          that.removeDroppableCellClass();\n        }\n      });\n\n      _events_engine.default.on($element, SCHEDULER_CELL_DXDROP_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n        that.removeDroppableCellClass((0, _renderer.default)(e.target));\n        cellHeight = 0;\n        cellWidth = 0;\n      });\n\n      _events_engine.default.on($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n        if ((0, _index.isMouseEvent)(e) && 1 === e.which) {\n          isPointerDown = true;\n          that.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\n\n          _events_engine.default.off(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\n\n          _events_engine.default.on(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function () {\n            isPointerDown = false;\n            that.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\n          });\n        }\n      });\n\n      _events_engine.default.on($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n        if (isPointerDown && that._dateTableScrollable && !that._dateTableScrollable.option(\"scrollByContent\")) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          that._moveToCell((0, _renderer.default)(e.target), true);\n        }\n      });\n    }\n  }, {\n    key: \"_getDateTables\",\n    value: function () {\n      return this._$dateTable.add(this._$allDayTable);\n    }\n  }, {\n    key: \"_getDateTable\",\n    value: function () {\n      return this._$dateTable;\n    }\n  }, {\n    key: \"_getAllDayTable\",\n    value: function () {\n      return this._$allDayTable;\n    }\n  }, {\n    key: \"_getInterval\",\n    value: function () {\n      if (void 0 === this._interval) {\n        this._interval = this.option(\"hoursInterval\") * HOUR_MS;\n      }\n\n      return this._interval;\n    }\n  }, {\n    key: \"_getHeaderText\",\n    value: function (headerIndex) {\n      return _date2.default.format(this._getDateForHeaderText(headerIndex), this._getFormat());\n    }\n  }, {\n    key: \"_getDateForHeaderText\",\n    value: function (index) {\n      return this._getDateByIndex(index);\n    }\n  }, {\n    key: \"_getDateByIndex\",\n    value: function () {\n      return abstract();\n    }\n  }, {\n    key: \"_getFormat\",\n    value: function () {\n      return abstract();\n    }\n  }, {\n    key: \"_calculateCellIndex\",\n    value: function (rowIndex, cellIndex) {\n      return this._groupedStrategy.calculateCellIndex(rowIndex, cellIndex);\n    }\n  }, {\n    key: \"_renderTableBody\",\n    value: function (options, delayCellTemplateRendering) {\n      var result = [];\n\n      if (!delayCellTemplateRendering) {\n        this._applyCellTemplates(tableCreator.makeTable(options));\n      } else {\n        result = tableCreator.makeTable(options);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_removeAllDayElements\",\n    value: function () {\n      this._$allDayTable && this._$allDayTable.remove();\n      this._$allDayTitle && this._$allDayTitle.remove();\n    }\n  }, {\n    key: \"_cleanView\",\n    value: function () {\n      var _this$virtualSelectio2;\n\n      this.cache.clear();\n\n      this._cleanAllowedPositions();\n\n      null === (_this$virtualSelectio2 = this.virtualSelectionState) || void 0 === _this$virtualSelectio2 ? void 0 : _this$virtualSelectio2.releaseSelectedAndFocusedCells();\n\n      this._$thead.empty();\n\n      this._$dateTable.empty();\n\n      this._shader && this._shader.clean();\n\n      this._$timePanel.empty();\n\n      this._$allDayTable && this._$allDayTable.empty();\n\n      this._$groupTable.empty();\n\n      delete this._hiddenInterval;\n      delete this._interval;\n    }\n  }, {\n    key: \"_clean\",\n    value: function () {\n      _events_engine.default.off(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\n\n      _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_clean\", this).call(this);\n    }\n  }, {\n    key: \"_disposeRenovatedComponents\",\n    value: function () {\n      var _this$renovatedAllDay, _this$renovatedDateTa, _this$renovatedTimePa;\n\n      null === (_this$renovatedAllDay = this.renovatedAllDayPanel) || void 0 === _this$renovatedAllDay ? void 0 : _this$renovatedAllDay.dispose();\n      this.renovatedAllDayPanel = void 0;\n      null === (_this$renovatedDateTa = this.renovatedDateTable) || void 0 === _this$renovatedDateTa ? void 0 : _this$renovatedDateTa.dispose();\n      this.renovatedDateTable = void 0;\n      null === (_this$renovatedTimePa = this.renovatedTimePanel) || void 0 === _this$renovatedTimePa ? void 0 : _this$renovatedTimePa.dispose();\n      this.renovatedTimePanel = void 0;\n    }\n  }, {\n    key: \"getWorkArea\",\n    value: function () {\n      return this._dateTableScrollable.$content();\n    }\n  }, {\n    key: \"getScrollable\",\n    value: function () {\n      return this._dateTableScrollable;\n    }\n  }, {\n    key: \"getScrollableScrollTop\",\n    value: function () {\n      return this._dateTableScrollable.scrollTop();\n    }\n  }, {\n    key: \"getGroupedScrollableScrollTop\",\n    value: function (allDay) {\n      return this._groupedStrategy.getScrollableScrollTop(allDay);\n    }\n  }, {\n    key: \"getScrollableScrollLeft\",\n    value: function () {\n      return this._dateTableScrollable.scrollLeft();\n    }\n  }, {\n    key: \"getScrollableOuterWidth\",\n    value: function () {\n      return this._dateTableScrollable.scrollWidth();\n    }\n  }, {\n    key: \"getScrollableContainer\",\n    value: function () {\n      return this._dateTableScrollable._container();\n    }\n  }, {\n    key: \"getHeaderPanelHeight\",\n    value: function () {\n      return this._$headerPanel && this._$headerPanel.outerHeight(true);\n    }\n  }, {\n    key: \"getTimePanelWidth\",\n    value: function () {\n      return this._$timePanel && (0, _position.getBoundingRect)(this._$timePanel.get(0)).width;\n    }\n  }, {\n    key: \"getGroupTableWidth\",\n    value: function () {\n      return this._$groupTable ? this._$groupTable.outerWidth() : 0;\n    }\n  }, {\n    key: \"getWorkSpaceLeftOffset\",\n    value: function () {\n      return this._groupedStrategy.getLeftOffset();\n    }\n  }, {\n    key: \"getGroupedStrategy\",\n    value: function () {\n      return this._groupedStrategy;\n    }\n  }, {\n    key: \"_getCellCoordinatesByIndex\",\n    value: function (index) {\n      var cellIndex = Math.floor(index / this._getRowCount());\n      var rowIndex = index - this._getRowCount() * cellIndex;\n      return {\n        cellIndex: cellIndex,\n        rowIndex: rowIndex\n      };\n    }\n  }, {\n    key: \"_getDateByCellIndexes\",\n    value: function (rowIndex, cellIndex, patchedIndexes) {\n      cellIndex = !patchedIndexes ? this._patchCellIndex(cellIndex) : cellIndex;\n      var firstViewDate = this.getStartViewDate();\n      var currentDate = new Date(firstViewDate.getTime() + this._getMillisecondsOffset(rowIndex, cellIndex) + this._getOffsetByCount(cellIndex));\n      currentDate.setTime(currentDate.getTime() + _date.default.getTimezonesDifference(firstViewDate, currentDate));\n      return currentDate;\n    }\n  }, {\n    key: \"_patchCellIndex\",\n    value: function (cellIndex) {\n      if (this.isGroupedByDate()) {\n        cellIndex = Math.floor(cellIndex / this._getGroupCount());\n      }\n\n      return cellIndex;\n    }\n  }, {\n    key: \"_getOffsetByCount\",\n    value: function () {\n      return 0;\n    }\n  }, {\n    key: \"_getMillisecondsOffset\",\n    value: function (rowIndex, cellIndex) {\n      return this._getInterval() * this._calculateCellIndex(rowIndex, cellIndex) + this._calculateHiddenInterval(rowIndex, cellIndex);\n    }\n  }, {\n    key: \"_calculateHiddenInterval\",\n    value: function (rowIndex, cellIndex) {\n      var dayCount = cellIndex % this._getCellCount();\n\n      return dayCount * this._getHiddenInterval();\n    }\n  }, {\n    key: \"_getHiddenInterval\",\n    value: function () {\n      if (void 0 === this._hiddenInterval) {\n        this._hiddenInterval = DAY_MS - this.getVisibleDayDuration();\n      }\n\n      return this._hiddenInterval;\n    }\n  }, {\n    key: \"_getIntervalBetween\",\n    value: function (currentDate, allDay) {\n      var firstViewDate = this.getStartViewDate();\n      var startDayTime = this.option(\"startDayHour\") * HOUR_MS;\n\n      var timeZoneOffset = _date.default.getTimezonesDifference(firstViewDate, currentDate);\n\n      var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;\n\n      var days = this._getDaysOfInterval(fullInterval, startDayTime);\n\n      var weekendsCount = this._getWeekendsCount(days);\n\n      var result = (days - weekendsCount) * DAY_MS;\n\n      if (!allDay) {\n        result = fullInterval - days * this._getHiddenInterval() - weekendsCount * this.getVisibleDayDuration();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getWeekendsCount\",\n    value: function () {\n      return 0;\n    }\n  }, {\n    key: \"_getDaysOfInterval\",\n    value: function (fullInterval, startDayTime) {\n      return Math.floor((fullInterval + startDayTime) / DAY_MS);\n    }\n  }, {\n    key: \"_getGroupIndexes\",\n    value: function (appointmentResources) {\n      var result = [];\n\n      if (this._isGroupsSpecified(appointmentResources)) {\n        var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\n        result = this.invoke(\"getResourceTreeLeaves\", tree, appointmentResources);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_updateIndex\",\n    value: function (index) {\n      return index * this._getRowCount();\n    }\n  }, {\n    key: \"_getDroppableCell\",\n    value: function () {\n      return this._getDateTables().find(\".\" + DATE_TABLE_DROPPABLE_CELL_CLASS);\n    }\n  }, {\n    key: \"_getWorkSpaceWidth\",\n    value: function () {\n      var _this9 = this;\n\n      return this.cache.get(\"workspaceWidth\", function () {\n        if (_this9._needCreateCrossScrolling()) {\n          return (0, _position.getBoundingRect)(_this9._$dateTable.get(0)).width;\n        }\n\n        return (0, _position.getBoundingRect)(_this9.$element().get(0)).width - _this9.getTimePanelWidth();\n      });\n    }\n  }, {\n    key: \"_getCellPositionByIndex\",\n    value: function (index, groupIndex, inAllDayRow) {\n      var cellCoordinates = this._getCellCoordinatesByIndex(index);\n\n      var $cell = this._getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow);\n\n      return this._getCellPositionWithCache($cell, cellCoordinates, groupIndex);\n    }\n  }, {\n    key: \"_getCellPositionWithCache\",\n    value: function ($cell, cellCoordinates, groupIndex) {\n      var result = this._getCellPosition($cell);\n\n      this.setCellDataCache(cellCoordinates, groupIndex, $cell);\n\n      if (result) {\n        result.rowIndex = cellCoordinates.rowIndex;\n        result.cellIndex = cellCoordinates.cellIndex;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getCellPosition\",\n    value: function ($cell) {\n      var position = $cell.position();\n\n      if (this.option(\"rtlEnabled\")) {\n        position.left += (0, _position.getBoundingRect)($cell.get(0)).width;\n      }\n\n      return position;\n    }\n  }, {\n    key: \"_getCellByCoordinates\",\n    value: function (cellCoordinates, groupIndex, inAllDayRow) {\n      var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);\n\n      return this._dom_getDateCell(indexes);\n    }\n  }, {\n    key: \"_dom_getDateCell\",\n    value: function (position) {\n      return this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).eq(position.rowIndex).find(\"td\").eq(position.cellIndex);\n    }\n  }, {\n    key: \"_dom_getAllDayPanelCell\",\n    value: function (cellIndex) {\n      return this._$allDayPanel.find(\"tr\").eq(0).find(\"td\").eq(cellIndex);\n    }\n  }, {\n    key: \"_getCells\",\n    value: function (allDay, direction) {\n      var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\n\n      if (\"vertical\" === direction) {\n        var result = [];\n\n        for (var i = 1;; i++) {\n          var cells = this.$element().find(\"tr .\".concat(cellClass, \":nth-child(\").concat(i, \")\"));\n\n          if (!cells.length) {\n            break;\n          }\n\n          result = result.concat(cells.toArray());\n        }\n\n        return (0, _renderer.default)(result);\n      } else {\n        return this.$element().find(\".\" + cellClass);\n      }\n    }\n  }, {\n    key: \"_getAllCells\",\n    value: function (allDay) {\n      if (this._isVerticalGroupedWorkSpace()) {\n        return this._$dateTable.find(\"td:not(.\".concat(VIRTUAL_CELL_CLASS, \")\"));\n      }\n\n      var cellClass = allDay && this.supportAllDayRow() ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\n      return this.$element().find(\".\" + cellClass);\n    }\n  }, {\n    key: \"_setHorizontalGroupHeaderCellsHeight\",\n    value: function () {\n      var height = (0, _position.getBoundingRect)(this._$dateTable.get(0)).height;\n\n      this._$groupTable.outerHeight(height);\n    }\n  }, {\n    key: \"_getDateTableBorder\",\n    value: function () {\n      return DATE_TABLE_CELL_BORDER;\n    }\n  }, {\n    key: \"_getDateTableBorderOffset\",\n    value: function () {\n      return 2 * this._getDateTableBorder();\n    }\n  }, {\n    key: \"_getGroupHeaderCellsContent\",\n    value: function () {\n      return this.$element().find(\".\" + GROUP_HEADER_CONTENT_CLASS);\n    }\n  }, {\n    key: \"_getGroupHeaderCells\",\n    value: function () {\n      return this.$element().find(\".\" + GROUP_HEADER_CLASS);\n    }\n  }, {\n    key: \"_getScrollCoordinates\",\n    value: function (hours, minutes, date, groupIndex, allDay) {\n      var currentDate = date || new Date(this.option(\"currentDate\"));\n      var startDayHour = this.option(\"startDayHour\");\n      var endDayHour = this.option(\"endDayHour\");\n\n      if (hours < startDayHour) {\n        hours = startDayHour;\n      }\n\n      if (hours >= endDayHour) {\n        hours = endDayHour - 1;\n      }\n\n      currentDate.setHours(hours, minutes, 0, 0);\n\n      if (!this.isVirtualScrolling()) {\n        return this.getCoordinatesByDate(currentDate, groupIndex, allDay);\n      }\n\n      var cell = this.viewDataProvider.findGlobalCellPosition(currentDate, groupIndex, allDay);\n      var position = cell.position,\n          cellData = cell.cellData;\n      return this.virtualScrollingDispatcher.calculateCoordinatesByDataAndPosition(cellData, position, currentDate);\n    }\n  }, {\n    key: \"_isOutsideScrollable\",\n    value: function (target, event) {\n      var $dateTableScrollableElement = this._dateTableScrollable.$element();\n\n      var scrollableSize = (0, _position.getBoundingRect)($dateTableScrollableElement.get(0));\n      var window = (0, _window.getWindow)();\n      var isTargetInAllDayPanel = !(0, _renderer.default)(target).closest($dateTableScrollableElement).length;\n      var isOutsideHorizontalScrollable = event.pageX < scrollableSize.left || event.pageX > scrollableSize.left + scrollableSize.width + (window.scrollX || 0);\n      var isOutsideVerticalScrollable = event.pageY < scrollableSize.top || event.pageY > scrollableSize.top + scrollableSize.height + (window.scrollY || 0);\n\n      if (isTargetInAllDayPanel && !isOutsideHorizontalScrollable) {\n        return false;\n      }\n\n      return isOutsideVerticalScrollable || isOutsideHorizontalScrollable;\n    }\n  }, {\n    key: \"setCellDataCache\",\n    value: function (cellCoordinates, groupIndex, $cell) {\n      var key = JSON.stringify({\n        rowIndex: cellCoordinates.rowIndex,\n        cellIndex: cellCoordinates.cellIndex,\n        groupIndex: groupIndex\n      });\n      this.cache.set(key, this.getCellData($cell));\n    }\n  }, {\n    key: \"setCellDataCacheAlias\",\n    value: function (appointment, geometry) {\n      var key = JSON.stringify({\n        rowIndex: appointment.rowIndex,\n        cellIndex: appointment.cellIndex,\n        groupIndex: appointment.groupIndex\n      });\n      var aliasKey = JSON.stringify({\n        top: geometry.top,\n        left: geometry.left\n      });\n      this.cache.set(aliasKey, this.cache.get(key));\n    }\n  }, {\n    key: \"_cleanAllowedPositions\",\n    value: function () {\n      this._maxAllowedVerticalPosition = [];\n      this._maxAllowedPosition = [];\n    }\n  }, {\n    key: \"supportAllDayRow\",\n    value: function () {\n      return true;\n    }\n  }, {\n    key: \"keepOriginalHours\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"getSelectedCellData\",\n    value: function () {\n      if (this.isVirtualScrolling()) {\n        return this.virtualSelectionState.getSelectedCells();\n      }\n\n      var $focusedCells = this._getAllFocusedCells();\n\n      var result = [];\n\n      if ($focusedCells.length > 1) {\n        result = this._getMultipleCellsData($focusedCells);\n      } else {\n        var data = this.getCellData((0, _renderer.default)($focusedCells[0]));\n        data && result.push(data);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getMultipleCellsData\",\n    value: function ($cells) {\n      var data = [];\n\n      for (var i = 0; i < $cells.length; i++) {\n        data.push(this.getCellData((0, _renderer.default)($cells[i])));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"getCellData\",\n    value: function ($cell) {\n      var data;\n      var currentCell = $cell[0];\n\n      if (currentCell) {\n        if (this.isRenovatedRender()) {\n          data = this._getCellDataInRenovatedView($cell);\n        } else {\n          data = (0, _element_data.data)(currentCell, CELL_DATA);\n        }\n      }\n\n      return (0, _extend.extend)(true, {}, data);\n    }\n  }, {\n    key: \"_getVirtualRowOffset\",\n    value: function () {\n      return this.isVirtualScrolling() ? this.virtualScrollingDispatcher.verticalScrollingState.virtualItemSizeBefore : 0;\n    }\n  }, {\n    key: \"_getCellDataInRenovatedView\",\n    value: function ($cell) {\n      var rowIndex = $cell.parent().index();\n\n      if (this.isVirtualScrolling()) {\n        rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount;\n      }\n\n      var columnIndex = $cell.index();\n      var viewDataProvider = this.viewDataProvider;\n\n      var isAllDayCell = this._hasAllDayClass($cell);\n\n      var cellData = viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell);\n      return cellData ? {\n        startDate: cellData.startDate,\n        endDate: cellData.endDate,\n        groups: cellData.groups,\n        groupIndex: cellData.groupIndex,\n        allDay: cellData.allDay,\n        text: cellData.text\n      } : void 0;\n    }\n  }, {\n    key: \"_getHorizontalMax\",\n    value: function (groupIndex) {\n      groupIndex = this.isGroupedByDate() ? this._getGroupCount() - 1 : groupIndex;\n      return this._groupedStrategy.getHorizontalMax(groupIndex);\n    }\n  }, {\n    key: \"getCoordinatesByDate\",\n    value: function (date, groupIndex, inAllDayRow) {\n      groupIndex = groupIndex || 0;\n      var position;\n\n      var shouldFindPositionByViewData = this.isVirtualScrolling() && (!inAllDayRow || this._isVerticalGroupedWorkSpace());\n\n      if (shouldFindPositionByViewData) {\n        var positionByMap = this.viewDataProvider.findCellPositionInMap(groupIndex, date, inAllDayRow);\n\n        if (!positionByMap) {\n          return;\n        }\n\n        var $cell = this._dom_getDateCell(positionByMap);\n\n        position = this._getCellPositionWithCache($cell, positionByMap, groupIndex);\n      } else {\n        position = this.calculateCellPositionByView(date, groupIndex, inAllDayRow);\n      }\n\n      var shift = this.getPositionShift(inAllDayRow ? 0 : this.getTimeShift(date), inAllDayRow);\n\n      var horizontalHMax = this._getHorizontalMax(groupIndex, date);\n\n      if (!position) {\n        throw _ui.default.Error(\"E1039\");\n      }\n\n      return {\n        cellPosition: position.left + shift.cellPosition,\n        top: position.top + shift.top,\n        left: position.left + shift.left,\n        rowIndex: position.rowIndex,\n        cellIndex: position.cellIndex,\n        hMax: horizontalHMax,\n        vMax: this.getVerticalMax(groupIndex),\n        groupIndex: groupIndex\n      };\n    }\n  }, {\n    key: \"calculateCellPositionByView\",\n    value: function (date, groupIndex, inAllDayRow) {\n      var index = this.getCellIndexByDate(date, inAllDayRow);\n\n      var position = this._getCellPositionByIndex(index, groupIndex, inAllDayRow);\n\n      if (position) {\n        position.top -= this._getVirtualRowOffset();\n      }\n\n      return position;\n    }\n  }, {\n    key: \"getVerticalMax\",\n    value: function (groupIndex) {\n      return this._groupedStrategy.getVerticalMax(groupIndex);\n    }\n  }, {\n    key: \"_getOffsetByAllDayPanel\",\n    value: function (groupIndex) {\n      return this._groupedStrategy._getOffsetByAllDayPanel(groupIndex);\n    }\n  }, {\n    key: \"_getGroupTop\",\n    value: function (groupIndex) {\n      return this._groupedStrategy._getGroupTop(groupIndex);\n    }\n  }, {\n    key: \"isGroupedByDate\",\n    value: function () {\n      return this.option(\"groupByDate\") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0;\n    }\n  }, {\n    key: \"getCellIndexByDate\",\n    value: function (date, inAllDayRow) {\n      var timeInterval = inAllDayRow ? 864e5 : this._getInterval();\n\n      var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow);\n\n      var index = Math.floor(dateTimeStamp / timeInterval);\n\n      if (inAllDayRow) {\n        index = this._updateIndex(index);\n      }\n\n      if (index < 0) {\n        index = 0;\n      }\n\n      return index;\n    }\n  }, {\n    key: \"getPositionShift\",\n    value: function (timeShift, isAllDay) {\n      return {\n        top: timeShift * this.getCellHeight(),\n        left: 0,\n        cellPosition: 0\n      };\n    }\n  }, {\n    key: \"getTimeShift\",\n    value: function (date) {\n      var currentDayStart = new Date(date);\n      var cellDuration = this.getCellDuration();\n      var currentDayEndHour = new Date(new Date(date).setHours(this.option(\"endDayHour\"), 0, 0));\n\n      if (date.getTime() <= currentDayEndHour.getTime()) {\n        currentDayStart.setHours(this.option(\"startDayHour\"), 0, 0, 0);\n      }\n\n      var currentDateTime = date.getTime();\n      var currentDayStartTime = currentDayStart.getTime();\n\n      var minTime = this._firstViewDate.getTime();\n\n      return currentDateTime > minTime ? (currentDateTime - currentDayStartTime) % cellDuration / cellDuration : 0;\n    }\n  }, {\n    key: \"_isSkippedData\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"getCoordinatesByDateInGroup\",\n    value: function (startDate, appointmentResources, inAllDayRow) {\n      var _this10 = this;\n\n      var result = [];\n\n      if (this._isSkippedData(startDate)) {\n        return result;\n      }\n\n      var groupIndices = this._getGroupCount() ? this._getGroupIndexes(appointmentResources) : [0];\n      groupIndices.forEach(function (groupIndex) {\n        var coordinates = _this10.getCoordinatesByDate(startDate, groupIndex, inAllDayRow);\n\n        coordinates && result.push(coordinates);\n      });\n      return result;\n    }\n  }, {\n    key: \"getDroppableCellIndex\",\n    value: function () {\n      var $droppableCell = this._getDroppableCell();\n\n      var $row = $droppableCell.parent();\n      var rowIndex = $row.index();\n      return rowIndex * $row.find(\"td\").length + $droppableCell.index();\n    }\n  }, {\n    key: \"getDataByDroppableCell\",\n    value: function () {\n      var cellData = this.getCellData((0, _renderer.default)(this._getDroppableCell()));\n      var allDay = cellData.allDay;\n      var startDate = cellData.startDate;\n      var endDate = startDate && this.invoke(\"calculateAppointmentEndDate\", allDay, startDate);\n      return {\n        startDate: startDate,\n        endDate: endDate,\n        allDay: allDay,\n        groups: cellData.groups\n      };\n    }\n  }, {\n    key: \"getDateRange\",\n    value: function () {\n      return [this.getStartViewDate(), this.getEndViewDateByEndDayHour()];\n    }\n  }, {\n    key: \"getCellWidth\",\n    value: function () {\n      var _this11 = this;\n\n      return this.cache.get(\"cellWidth\", function () {\n        var cell = _this11._getCells().first().get(0);\n\n        return cell && (0, _position.getBoundingRect)(cell).width;\n      });\n    }\n  }, {\n    key: \"getCellMinWidth\",\n    value: function () {\n      return DATE_TABLE_MIN_CELL_WIDTH;\n    }\n  }, {\n    key: \"getRoundedCellWidth\",\n    value: function (groupIndex, startIndex, cellCount) {\n      if (groupIndex < 0) {\n        return 0;\n      }\n\n      var $row = this.$element().find(\".\" + this._getDateTableRowClass()).eq(0);\n      var width = 0;\n      var $cells = $row.find(\".\" + DATE_TABLE_CELL_CLASS);\n      var totalCellCount = this._getCellCount() * groupIndex;\n      cellCount = cellCount || this._getCellCount();\n\n      if (!(0, _type.isDefined)(startIndex)) {\n        startIndex = totalCellCount;\n      }\n\n      for (var i = startIndex; i < totalCellCount + cellCount; i++) {\n        width += (0, _position.getBoundingRect)((0, _renderer.default)($cells).eq(i).get(0)).width;\n      }\n\n      return width / (totalCellCount + cellCount - startIndex);\n    }\n  }, {\n    key: \"getCellHeight\",\n    value: function () {\n      var _this12 = this;\n\n      var useCache = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;\n\n      var callbackResult = function () {\n        var cell = _this12._getCells().first().get(0);\n\n        return cell && (0, _position.getBoundingRect)(cell).height;\n      };\n\n      return useCache ? this.cache.get(\"cellHeight\", callbackResult) : callbackResult();\n    }\n  }, {\n    key: \"getAllDayHeight\",\n    value: function () {\n      var cell = this._getCells(true).first().get(0);\n\n      return this._isShowAllDayPanel() ? cell && (0, _position.getBoundingRect)(cell).height || 0 : 0;\n    }\n  }, {\n    key: \"getAllDayOffset\",\n    value: function () {\n      return this._groupedStrategy.getAllDayOffset();\n    }\n  }, {\n    key: \"getMaxAllowedPosition\",\n    value: function () {\n      if (0 === this._maxAllowedPosition.length) {\n        var isRtl = this.option(\"rtlEnabled\");\n        this._maxAllowedPosition = [];\n\n        this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).first().find(\"td:nth-child(\".concat(this._getCellCount(), \"n)\")).each(function (_, cell) {\n          var maxPosition = (0, _renderer.default)(cell).position().left;\n\n          if (!isRtl) {\n            maxPosition += (0, _position.getBoundingRect)(cell).width;\n          }\n\n          this._maxAllowedPosition.push(Math.round(maxPosition));\n        }.bind(this));\n      }\n\n      return this._maxAllowedPosition;\n    }\n  }, {\n    key: \"getMaxAllowedVerticalPosition\",\n    value: function (groupIndex) {\n      if (this.isVirtualScrolling()) {\n        return this.getMaxAllowedVerticalPositionVirtual(groupIndex);\n      }\n\n      return this.getMaxAllowedVerticalPositionStandard(groupIndex);\n    }\n  }, {\n    key: \"getMaxAllowedVerticalPositionStandard\",\n    value: function (groupIndex) {\n      var _this13 = this;\n\n      if (0 === this._maxAllowedVerticalPosition.length) {\n        var rowCount = this._getRowCount();\n\n        this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \"):nth-child(\").concat(rowCount, \"n)\")).each(function (_, row) {\n          var maxPosition = (0, _renderer.default)(row).position().top + (0, _position.getBoundingRect)(row).height;\n\n          _this13._maxAllowedVerticalPosition.push(Math.round(maxPosition));\n        });\n      }\n\n      return this._maxAllowedVerticalPosition[groupIndex];\n    }\n  }, {\n    key: \"getMaxAllowedVerticalPositionVirtual\",\n    value: function (groupIndex) {\n      var _this14 = this;\n\n      var getMaxPosition = function (rowIndex) {\n        var row = _this14._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).get(rowIndex);\n\n        var maxPosition = (0, _renderer.default)(row).position().top + (0, _position.getBoundingRect)(row).height;\n\n        if (_this14.isGroupedAllDayPanel()) {\n          maxPosition -= (groupIndex + 1) * _this14.getAllDayHeight();\n        }\n\n        _this14._maxAllowedVerticalPosition[groupIndex] = Math.round(maxPosition);\n      };\n\n      if (!this._maxAllowedVerticalPosition[groupIndex]) {\n        var _this$viewDataProvide = this.viewDataProvider.getLasGroupCellPosition(groupIndex),\n            rowIndex = _this$viewDataProvide.rowIndex;\n\n        getMaxPosition(rowIndex);\n      }\n\n      return this._maxAllowedVerticalPosition[groupIndex];\n    }\n  }, {\n    key: \"getFixedContainer\",\n    value: function () {\n      return this._$fixedContainer;\n    }\n  }, {\n    key: \"getAllDayContainer\",\n    value: function () {\n      return this._$allDayContainer;\n    }\n  }, {\n    key: \"getCellIndexByCoordinates\",\n    value: function (coordinates, allDay) {\n      var cellCount = this._getTotalCellCount(this._getGroupCount());\n\n      var cellWidth = Math.floor(this._getWorkSpaceWidth() / cellCount);\n      var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();\n      var leftOffset = this._isRTL() || this.option(\"crossScrollingEnabled\") ? 0 : this.getWorkSpaceLeftOffset();\n      var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));\n      var leftIndex = Math.floor((coordinates.left + 5 - leftOffset) / cellWidth);\n\n      if (this._isRTL()) {\n        leftIndex = cellCount - leftIndex - 1;\n      }\n\n      return cellCount * topIndex + leftIndex;\n    }\n  }, {\n    key: \"getStartViewDate\",\n    value: function () {\n      return this._firstViewDate;\n    }\n  }, {\n    key: \"getEndViewDate\",\n    value: function () {\n      var dateOfLastViewCell = this.getDateOfLastViewCell();\n      var endDateOfLastViewCell = this.calculateEndViewDate(dateOfLastViewCell);\n      return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell);\n    }\n  }, {\n    key: \"getEndViewDateByEndDayHour\",\n    value: function () {\n      var dateOfLastViewCell = this.getDateOfLastViewCell();\n\n      var endTime = _date.default.dateTimeFromDecimal(this.option(\"endDayHour\"));\n\n      var endDateOfLastViewCell = new Date(dateOfLastViewCell.setHours(endTime.hours, endTime.minutes));\n      return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell);\n    }\n  }, {\n    key: \"calculateEndViewDate\",\n    value: function (dateOfLastViewCell) {\n      return new Date(dateOfLastViewCell.getTime() + this.getCellDuration());\n    }\n  }, {\n    key: \"_adjustEndViewDateByDaylightDiff\",\n    value: function (startDate, endDate) {\n      var daylightDiff = _utils.default.getDaylightOffsetInMs(startDate, endDate);\n\n      var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);\n      return new Date(endDateOfLastViewCell.getTime() - toMs(\"minute\"));\n    }\n  }, {\n    key: \"getDateOfLastViewCell\",\n    value: function () {\n      var rowIndex = this._getRowCount() - 1;\n\n      var cellIndex = this._getCellCount();\n\n      if (this.isGroupedByDate()) {\n        cellIndex = cellIndex * this._getGroupCount() - 1;\n      } else {\n        cellIndex -= 1;\n      }\n\n      return this._getDateByCellIndexes(rowIndex, cellIndex, true);\n    }\n  }, {\n    key: \"getCellDuration\",\n    value: function () {\n      return 36e5 * this.option(\"hoursInterval\");\n    }\n  }, {\n    key: \"getIntervalDuration\",\n    value: function (allDay) {\n      return allDay ? toMs(\"day\") : this.getCellDuration();\n    }\n  }, {\n    key: \"getVisibleDayDuration\",\n    value: function () {\n      return this.option(\"hoursInterval\") * this._getCellCountInDay() * HOUR_MS;\n    }\n  }, {\n    key: \"getGroupBounds\",\n    value: function (coordinates) {\n      var cellCount = this._getCellCount();\n\n      var $cells = this._getCells();\n\n      var cellWidth = this.getCellWidth();\n\n      var result = this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates);\n\n      if (this._isRTL()) {\n        var startOffset = result.left;\n        result.left = result.right - 2 * cellWidth;\n        result.right = startOffset + 2 * cellWidth;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"needRecalculateResizableArea\",\n    value: function () {\n      return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop();\n    }\n  }, {\n    key: \"getCellDataByCoordinates\",\n    value: function (coordinates, allDay) {\n      var _this15 = this;\n\n      var key = JSON.stringify({\n        top: coordinates.top,\n        left: coordinates.left\n      });\n      return this.cache.get(key, function () {\n        var $cells = _this15._getCells(allDay);\n\n        var cellIndex = _this15.getCellIndexByCoordinates(coordinates, allDay);\n\n        var $cell = $cells.eq(cellIndex);\n        return _this15.getCellData($cell);\n      });\n    }\n  }, {\n    key: \"getVisibleBounds\",\n    value: function () {\n      var result = {};\n      var $scrollable = this.getScrollable().$element();\n      var cellHeight = this.getCellHeight();\n      var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;\n      var totalCellCount = scrolledCellCount + $scrollable.height() / cellHeight;\n      result.top = {\n        hours: Math.floor(scrolledCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\n        minutes: scrolledCellCount % 2 ? 30 : 0\n      };\n      result.bottom = {\n        hours: Math.floor(totalCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\n        minutes: Math.floor(totalCellCount) % 2 ? 30 : 0\n      };\n      return result;\n    }\n  }, {\n    key: \"updateScrollPosition\",\n    value: function (date, groups) {\n      var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n      var scheduler = this.option(\"observer\");\n      var newDate = scheduler.timeZoneCalculator.createDate(date, {\n        path: \"toGrid\"\n      });\n\n      var inAllDayRow = allDay && this.supportAllDayRow() && this._isShowAllDayPanel();\n\n      if (this.needUpdateScrollPosition(newDate, groups, inAllDayRow)) {\n        this.scrollTo(newDate, groups, inAllDayRow, false);\n      }\n    }\n  }, {\n    key: \"needUpdateScrollPosition\",\n    value: function (date, groups, inAllDayRow) {\n      var _this16 = this;\n\n      var cells = this._getCellsInViewport(inAllDayRow);\n\n      var groupIndex = this._isGroupsSpecified(groups) ? this._getGroupIndexByResourceId(groups) : 0;\n      var time = date.getTime();\n\n      var trimmedTime = _date.default.trimTime(date).getTime();\n\n      return cells.reduce(function (currentResult, cell) {\n        var _this16$getCellData = _this16.getCellData(cell),\n            cellStartDate = _this16$getCellData.startDate,\n            cellEndDate = _this16$getCellData.endDate,\n            cellGroupIndex = _this16$getCellData.groupIndex;\n\n        var cellStartTime = cellStartDate.getTime();\n        var cellEndTime = cellEndDate.getTime();\n\n        if ((!inAllDayRow && cellStartTime <= time && time < cellEndTime || inAllDayRow && trimmedTime === cellStartTime) && groupIndex === cellGroupIndex) {\n          return false;\n        }\n\n        return currentResult;\n      }, true);\n    }\n  }, {\n    key: \"_getCellsInViewport\",\n    value: function (inAllDayRow) {\n      var $scrollable = this.getScrollable().$element();\n      var cellHeight = this.getCellHeight();\n      var cellWidth = this.getCellWidth();\n\n      var totalColumnCount = this._getTotalCellCount(this._getGroupCount());\n\n      var scrollableScrollTop = this.getScrollableScrollTop();\n      var scrollableScrollLeft = this.getScrollableScrollLeft();\n      var fullScrolledRowCount = scrollableScrollTop / cellHeight;\n\n      if (this.isVirtualScrolling()) {\n        fullScrolledRowCount -= this.virtualScrollingDispatcher.topVirtualRowsCount;\n      }\n\n      var scrolledRowCount = Math.floor(fullScrolledRowCount);\n\n      if (scrollableScrollTop % cellHeight !== 0) {\n        scrolledRowCount += 1;\n      }\n\n      var fullScrolledColumnCount = scrollableScrollLeft / cellWidth;\n      var scrolledColumnCount = Math.floor(fullScrolledColumnCount);\n\n      if (scrollableScrollLeft % cellWidth !== 0) {\n        scrolledColumnCount += 1;\n      }\n\n      var rowCount = Math.floor(fullScrolledRowCount + $scrollable.height() / cellHeight);\n      var columnCount = Math.floor(fullScrolledColumnCount + $scrollable.width() / cellWidth);\n\n      var $cells = this._getAllCells(inAllDayRow);\n\n      var result = [];\n      $cells.each(function (index) {\n        var $cell = (0, _renderer.default)(this);\n        var columnIndex = index % totalColumnCount;\n        var rowIndex = index / totalColumnCount;\n\n        if (scrolledColumnCount <= columnIndex && columnIndex < columnCount && scrolledRowCount <= rowIndex && rowIndex < rowCount) {\n          result.push($cell);\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"getGroupWidth\",\n    value: function (groupIndex) {\n      var result = this._getCellCount() * this.getCellWidth();\n      var position = this.getMaxAllowedPosition();\n      var currentPosition = position[groupIndex];\n\n      if (position.length && currentPosition) {\n        if (this._isRTL()) {\n          result = currentPosition - position[groupIndex + 1];\n        } else {\n          if (0 === groupIndex) {\n            result = currentPosition;\n          } else {\n            result = currentPosition - position[groupIndex - 1];\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"scrollToTime\",\n    value: function (hours, minutes, date) {\n      if (!this._isValidScrollDate(date)) {\n        return;\n      }\n\n      var coordinates = this._getScrollCoordinates(hours, minutes, date);\n\n      var scrollable = this.getScrollable();\n      scrollable.scrollBy({\n        top: coordinates.top - scrollable.scrollTop(),\n        left: 0\n      });\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function (date, groups) {\n      var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n      var throwWarning = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\n\n      if (!this._isValidScrollDate(date, throwWarning)) {\n        return;\n      }\n\n      var groupIndex = this._getGroupCount() && groups ? this._getGroupIndexByResourceId(groups) : 0;\n\n      var isScrollToAllDay = allDay && this.supportAllDayRow() && this._isShowAllDayPanel();\n\n      var coordinates = this._getScrollCoordinates(date.getHours(), date.getMinutes(), date, groupIndex, isScrollToAllDay);\n\n      var scrollable = this.getScrollable();\n      var $scrollable = scrollable.$element();\n      var offset = this.option(\"rtlEnabled\") ? this.getCellWidth() : 0;\n      var scrollableHeight = $scrollable.height();\n      var scrollableWidth = $scrollable.width();\n      var cellWidth = this.getCellWidth();\n      var cellHeight = this.getCellHeight();\n      var xShift = (scrollableWidth - cellWidth) / 2;\n      var yShift = (scrollableHeight - cellHeight) / 2;\n      var left = coordinates.left - scrollable.scrollLeft() - xShift - offset;\n      var top = coordinates.top - scrollable.scrollTop() - yShift;\n\n      if (isScrollToAllDay && !this._isVerticalGroupedWorkSpace()) {\n        top = 0;\n      }\n\n      if (this.option(\"templatesRenderAsynchronously\")) {\n        setTimeout(function () {\n          scrollable.scrollBy({\n            left: left,\n            top: top\n          });\n        });\n      } else {\n        scrollable.scrollBy({\n          left: left,\n          top: top\n        });\n      }\n    }\n  }, {\n    key: \"_isValidScrollDate\",\n    value: function (date) {\n      var throwWarning = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : true;\n      var min = this.getStartViewDate();\n      var max = this.getEndViewDate();\n\n      if (date < min || date > max) {\n        throwWarning && _ui.default.log(\"W1008\", date);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getDistanceBetweenCells\",\n    value: function (startIndex, endIndex) {\n      var result = 0;\n      this.$element().find(\".\" + this._getDateTableRowClass()).first().find(\".\" + DATE_TABLE_CELL_CLASS).each(function (index) {\n        if (index < startIndex || index > endIndex) {\n          return true;\n        }\n\n        result += (0, _position.getBoundingRect)(this).width;\n      });\n      return result;\n    }\n  }, {\n    key: \"needApplyCollectorOffset\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"initDragBehavior\",\n    value: function (scheduler) {\n      if (!this.dragBehavior && scheduler) {\n        this.dragBehavior = new _appointmentDragBehavior.default(scheduler);\n\n        this._createDragBehavior(this.getWorkArea());\n\n        this._createDragBehavior(this.getAllDayContainer());\n\n        this._createDragBehavior(this._$allDayPanel);\n      }\n    }\n  }, {\n    key: \"_createDragBehavior\",\n    value: function ($element) {\n      var getItemData = function (itemElement, appointments) {\n        return appointments._getItemData(itemElement);\n      };\n\n      var getItemSettings = function ($itemElement) {\n        return $itemElement.data(_constants.APPOINTMENT_SETTINGS_KEY);\n      };\n\n      this._createDragBehaviorBase($element, getItemData, getItemSettings);\n    }\n  }, {\n    key: \"_createDragBehaviorBase\",\n    value: function ($element, getItemData, getItemSettings) {\n      var _this17 = this;\n\n      var _ref3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},\n          isSetCursorOffset = _ref3.isSetCursorOffset,\n          restOptions = _objectWithoutProperties(_ref3, [\"isSetCursorOffset\"]);\n\n      var dragElement;\n      var dragBehavior = this.dragBehavior;\n      var itemData;\n      dragBehavior.addTo($element, _objectSpread({\n        container: this.$element().find(\".\".concat(_constants.FIXED_CONTAINER_CLASS)),\n        dragTemplate: function () {\n          return dragElement;\n        },\n        onDragStart: function (e) {\n          var canceled = e.cancel;\n          var event = e.event;\n          var $itemElement = (0, _renderer.default)(e.itemElement);\n          var appointments = e.component._appointments;\n          itemData = getItemData(e.itemElement, appointments);\n          var settings = getItemSettings($itemElement, e);\n\n          if (itemData && !itemData.disabled) {\n            event.data = event.data || {};\n\n            if (!canceled) {\n              if (!settings.isCompact) {\n                dragBehavior.updateDragSource(itemData, settings);\n              }\n\n              dragElement = _this17._createDragAppointment(itemData, settings, appointments);\n              event.data.itemElement = dragElement;\n              event.data.initialPosition = (0, _translator.locate)((0, _renderer.default)(dragElement));\n              event.data.itemData = itemData;\n              event.data.itemSettings = settings;\n              dragBehavior.onDragStart(event.data);\n              (0, _translator.resetPosition)((0, _renderer.default)(dragElement));\n            }\n          }\n        },\n        onDragEnd: function (e) {\n          var _dragElement;\n\n          if (itemData && !itemData.disabled) {\n            dragBehavior.onDragEnd(e);\n          }\n\n          null === (_dragElement = dragElement) || void 0 === _dragElement ? void 0 : _dragElement.remove();\n        },\n        cursorOffset: isSetCursorOffset ? function () {\n          var $dragElement = (0, _renderer.default)(dragElement);\n          return {\n            x: $dragElement.width() / 2,\n            y: $dragElement.height() / 2\n          };\n        } : void 0\n      }, restOptions));\n    }\n  }, {\n    key: \"_createDragAppointment\",\n    value: function (itemData, settings, appointments) {\n      var appointmentIndex = appointments.option(\"items\").length;\n      settings.isCompact = false;\n      settings.virtual = false;\n\n      var items = appointments._renderItem(appointmentIndex, {\n        itemData: itemData,\n        settings: [settings]\n      });\n\n      return items[0];\n    }\n  }, {\n    key: \"_isApplyCompactAppointmentOffset\",\n    value: function () {\n      return this._supportCompactDropDownAppointments();\n    }\n  }, {\n    key: \"_supportCompactDropDownAppointments\",\n    value: function () {\n      return true;\n    }\n  }, {\n    key: \"_formatWeekday\",\n    value: function (date) {\n      return formatWeekday(date);\n    }\n  }, {\n    key: \"_formatWeekdayAndDay\",\n    value: function (date) {\n      return formatWeekday(date) + \" \" + _date2.default.format(date, \"day\");\n    }\n  }, {\n    key: \"removeDroppableCellClass\",\n    value: function ($cellElement) {\n      ($cellElement || this._getDroppableCell()).removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n    }\n  }, {\n    key: \"_getCoordinatesByCell\",\n    value: function ($cell) {\n      var columnIndex = $cell.index();\n      var rowIndex = $cell.parent().index();\n\n      var isAllDayCell = this._hasAllDayClass($cell);\n\n      var isVerticalGrouping = this._isVerticalGroupedWorkSpace();\n\n      if (this.isVirtualScrolling() && !(isAllDayCell && !isVerticalGrouping)) {\n        rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount;\n      }\n\n      return {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      };\n    }\n  }, {\n    key: \"_isShowAllDayPanel\",\n    value: function () {\n      return this.option(\"showAllDayPanel\");\n    }\n  }, {\n    key: \"updateAppointments\",\n    value: function () {\n      var _this$dragBehavior;\n\n      this.invoke(\"renderAppointments\");\n      null === (_this$dragBehavior = this.dragBehavior) || void 0 === _this$dragBehavior ? void 0 : _this$dragBehavior.updateDragSource();\n    }\n  }, {\n    key: \"viewDataProvider\",\n    get: function () {\n      if (!this._viewDataProvider) {\n        this._viewDataProvider = new _view_data_provider.default(this);\n      }\n\n      return this._viewDataProvider;\n    }\n  }, {\n    key: \"cache\",\n    get: function () {\n      return _cache.cache;\n    }\n  }, {\n    key: \"virtualSelectionState\",\n    get: function () {\n      if (!this._virtualSelectionState) {\n        this._virtualSelectionState = new _virtual_selection_state.default(this.viewDataProvider);\n      }\n\n      return this._virtualSelectionState;\n    }\n  }]);\n\n  return SchedulerWorkSpace;\n}(_widgetObserver.default);\n\nvar _default = SchedulerWorkSpace;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/hp/Downloads/quantumCode20082022/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.work_space.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","default","_renderer","_interopRequireDefault","require","_dom_adapter","_events_engine","_element_data","_date","_window","_element","_extend","_iterator","_position","_message","_date2","_common","_type","_index","_pointer","_ui","_click","_contextmenu","_drag","_ui2","_uiSchedulerWork_spaceGroupedStrategy","_uiSchedulerWork_spaceGroupedStrategy2","_uiScheduler","_uiSchedulerCurrent_time_shader","_appointmentDragBehavior","_constants","_utils","_widgetObserver","_translator","_uiScheduler2","_view_data_provider","_layout","_title","_layout2","_virtual_selection_state","_cache","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","call","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","_get","property","receiver","Reflect","get","base","_superPropBase","desc","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","TypeError","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","toString","e","getPrototypeOf","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","tableCreator","abstract","toMs","dateToMilliseconds","COMPONENT_CLASS","GROUPED_WORKSPACE_CLASS","VERTICAL_GROUPED_WORKSPACE_CLASS","WORKSPACE_VERTICAL_GROUP_TABLE_CLASS","WORKSPACE_WITH_BOTH_SCROLLS_CLASS","WORKSPACE_WITH_COUNT_CLASS","WORKSPACE_WITH_GROUP_BY_DATE_CLASS","WORKSPACE_WITH_ODD_CELLS_CLASS","TIME_PANEL_CLASS","TIME_PANEL_CELL_CLASS","TIME_PANEL_ROW_CLASS","ALL_DAY_PANEL_CLASS","ALL_DAY_TABLE_CLASS","ALL_DAY_CONTAINER_CLASS","ALL_DAY_TITLE_CLASS","ALL_DAY_TITLE_HIDDEN_CLASS","ALL_DAY_TABLE_CELL_CLASS","ALL_DAY_TABLE_ROW_CLASS","WORKSPACE_WITH_ALL_DAY_CLASS","WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS","WORKSPACE_WITH_MOUSE_SELECTION_CLASS","HORIZONTAL_SIZES_CLASS","VERTICAL_SIZES_CLASS","HEADER_PANEL_CLASS","HEADER_PANEL_CELL_CLASS","HEADER_ROW_CLASS","GROUP_ROW_CLASS","GROUP_HEADER_CLASS","GROUP_HEADER_CONTENT_CLASS","DATE_TABLE_CLASS","DATE_TABLE_CELL_CLASS","DATE_TABLE_ROW_CLASS","DATE_TABLE_FOCUSED_CELL_CLASS","VIRTUAL_ROW_CLASS","VIRTUAL_CELL_CLASS","DATE_TABLE_DROPPABLE_CELL_CLASS","SCHEDULER_HEADER_SCROLLABLE_CLASS","SCHEDULER_SIDEBAR_SCROLLABLE_CLASS","SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS","SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME","addNamespace","down","SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME","enter","SCHEDULER_CELL_DXDROP_EVENT_NAME","drop","SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME","leave","SCHEDULER_CELL_DXCLICK_EVENT_NAME","name","SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME","SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME","up","SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME","move","CELL_DATA","DATE_TABLE_CELL_BORDER","DATE_TABLE_MIN_CELL_WIDTH","DAY_MS","HOUR_MS","SCHEDULER_DRAG_AND_DROP_SELECTOR","concat","CELL_SELECTOR","ScrollSemaphore","counter","formatWeekday","date","getDayNames","getDay","SchedulerWorkSpace","_WidgetObserver","_super","clickHandler","preventDefault","stopPropagation","_selectedCells","$itemElement","option","$cellElement","_showPopup","_cellClickAction","event","cellElement","cellData","getCellData","arrowPressHandler","cell","_moveToCell","shiftKey","extend","space","downArrow","$cell","_getCellFromNextRow","upArrow","rightArrow","$rightCell","_getCellFromNextColumn","leftArrow","$leftCell","_this$virtualScrollin","virtualScrollingDispatcher","dispose","_disposeRenovatedComponents","_$focusedCell","_$dateTable","find","eq","direction","$currentCell","isDefined","cellIndex","index","$row","parent","children","_checkForViewBounds","$item","isMultiSelection","$focusedCell","$nextCell","nextColumnDirection","isDirectionNext","previousColumnDirection","isRTL","_isRTL","groupCount","_getGroupCount","isHorizontalGrouping","_isHorizontalGroupedWorkSpace","isGroupedByDate","totalCellCount","_getTotalCellCount","rowCellCount","_getCellCount","lastIndexInRow","currentIndex","step","isEdgeCell","_isEdgeCell","sign","directionSign","resultingSign","_isGroupEndCell","nextIndex","rowDirection","rightEdgeCellIndex","leftEdgeCellIndex","edgeCellIndex","isNextCellGreaterThanEdge","isNextCellLessThanEdge","isRightEdgeCell","isLeftEdgeCell","cellsInRow","currentCellIndex","endCell","startCell","_setSelectedAndFocusedCells","_dateTableScrollable","scrollToElement","updateViewData","isVirtualScrolling","$correctedCell","_correctCellForGroup","hasClass","_setSelectedCells","_setFocusedCell","_releaseFocusedCell","_this$_getCoordinates","_getCoordinatesByCell","rowIndex","columnIndex","isAllDayCell","_hasAllDayClass","virtualSelectionState","setFocusedCell","focusedCell","getFocusedCell","_isVerticalGroupedWorkSpace","coordinates","allDay","_dom_getAllDayPanelCell","_dom_getDateCell","_toggleFocusedCellClass","$firstCell","_releaseSelectedCells","_setSelectedCellsInVirtualMode","_setSelectedCellsInStandardMode","$selectedCells","_toggleFocusClass","setAria","selectedCellData","getSelectedCellData","map","_ref","startDate","endDate","groups","groupIndex","_selectionChangedAction","$previousCell","_$prevCell","orientation","$targetCells","_getCellsBetween","toArray","_this$_getCoordinates2","firstRow","firstColumn","isFirstAllDay","firstCell","setSelectedCells","_this$_getCoordinates3","_firstCell","_setSelectedCellsByCellData","getSelectedCells","isValidFocusedCell","cellGroupIndex","_getGroupIndexByCell","focusedCellGroupIndex","isDifferentTables","$first","$last","isAllDayTable","$cells","_getCells","firstIndex","lastIndex","buffer","slice","focusedGroupIndex","each","_","bind","_this$_getCoordinates4","viewDataProvider","_groupedStrategy","getGroupIndexByCell","isFocused","$element","$focusTarget","_focusTarget","toggleClass","is","_isCellClick","_contextMenuHandled","_getFocusedCell","_this$virtualSelectio","_releaseSelectedAndFocusedCells","releaseSelectedAndFocusedCells","currentDate","intervalCount","firstDayOfWeek","startDayHour","endDayHour","hoursInterval","activeStateEnabled","hoverStateEnabled","showAllDayPanel","allDayExpanded","onCellClick","crossScrollingEnabled","dataCellTemplate","timeCellTemplate","resourceCellTemplate","dateCellTemplate","allowMultipleCellSelection","indicatorTime","indicatorUpdateInterval","shadeUntilCurrentTime","groupOrientation","groupByDate","scrolling","mode","renovateRender","height","args","invoke","_cleanWorkSpace","_cleanView","_removeAllDayElements","_initGrouping","repaint","_initGroupedStrategy","_createAllDayPanelElements","_toggleGroupByDateClass","_toggleAllDayVisibility","_changeAllDayVisibility","_attachTablesEvents","headerPanelOffsetRecalculate","_updateScrollable","_createSelectionChangedAction","_createCellClickAction","_attachContextMenuEvent","_toggleWorkSpaceCountClass","_toggleFixedScrollableClass","_toggleHorizontalScrollClass","_dateTableScrollableConfig","_dimensionChanged","_isVirtualModeOn","_toggleGroupedClass","_toggleWorkSpaceWithOddCells","_renderView","_headerSemaphore","_sideBarSemaphore","_dataTableSemaphore","_viewDataProvider","_virtualSelectionState","_activeStateUnit","_maxAllowedVerticalPosition","_maxAllowedPosition","addClass","_getElementClass","_toggleGroupingDirectionClass","strategyName","_getDefaultGroupStrategy","Strategy","_isWorkSpaceWithCount","_isWorkspaceWithOddCells","j","cellClass","_needApplyLastGroupCellClass","addAdditionalGroupCellClasses","_$headerPanel","_$thead","appendTo","_$fixedContainer","FIXED_CONTAINER_CLASS","_$allDayContainer","_initAllDayPanelElements","isRenovatedRender","createRAllDayPanelElements","_$timePanel","_getTimePanelClass","_$groupTable","_allDayTitles","_allDayTables","_allDayPanels","_$allDayPanel","_$allDayTitle","$allDayTitle","text","format","_$allDayTable","append","$dateTableScrollable","_createComponent","config","useKeyboard","bounceEnabled","updateManually","pushBackValue","_needCreateCrossScrolling","_createCrossScrollingConfig","_this","onScroll","take","isFree","_sidebarScrollable","scrollTo","top","scrollOffset","_headerScrollable","left","release","onEnd","notifyObserver","_createWorkSpaceScrollableElements","_createWorkSpaceStaticElements","$content","_createHeaderScrollable","_createSidebarScrollable","prepend","$headerScrollable","_headerScrollableConfig","_this2","showScrollbar","useNative","_this3","$timePanelScrollable","visible","cache","clear","_setHorizontalGroupHeaderCellsHeight","_setTableSizes","_addTableClass","_getDateTableClass","$el","className","_attachTableClasses","cellWidth","getCellWidth","getCellMinWidth","minWidth","getWorkSpaceMinWidth","$headerCells","last","width","_attachHeaderTableClasses","_cleanAllowedPositions","noop","allDayRowCount","_isShowAllDayPanel","_getRowCount","_initWorkSpaceUnits","_initDateTableScrollable","_createWorkSpaceElements","_initVirtualScrolling","_attachEvents","_setFocusOnCellByOption","renovatedRenderSupported","_renderDateTimeIndication","_setIndicationUpdateInterval","_setFirstViewDate","_applyCellTemplates","_renderGroupHeader","_renderDateHeader","renderRWorkspace","_renderTimePanel","_renderGroupAllDayPanel","_renderDateTable","_renderAllDayPanel","_updateGroupTableHeight","_shader","verticalGroupCount","horizontalGroupCount","allDayElements","_insertAllDayRowsIntoDateTable","rowCountInGroup","cellCount","options","cellCountInGroupRow","cellDataGetters","_getCellData","startRowIndex","nonVirtualRowCount","renderState","rowCount","_getTotalRowCount","_this$virtualScrollin2","isGenerateNewViewData","update","renderRAllDayPanel","renderRTimeTable","renderRDateTable","updateRSelection","updateDimensions","isGroupedAllDayPanel","viewData","renderRComponent","renovatedAllDayPanel","parentElement","componentClass","componentName","viewModel","component","container","getPublicElement","getOwnPropertyNames","optionName","isVerticalGrouping","selectedCells","hasWindow","data","_data$","_this4","cells","_getAllCells","_isGroupsSpecified","_getGroupIndexByResourceId","findCellPositionInMap","getCoordinatesByDate","resources","id","resourceTree","_getGroupIndexRecursively","_this5","currentKey","currentValue","reduce","prevIndex","_ref2","leafIndex","areValuesEqual","_firstDayOfWeek","firstDayOfWeekIndex","_firstViewDate","getFirstWeekDate","_getViewStartByOptions","_setStartDayHour","trimTime","_getStartViewDate","diff","getTime","_getIntervalDuration","_dateInRange","getStartViewDate","dateInRange","setHours","_attachClickEvent","that","pointerDownAction","_createAction","_pointerDownHandler","cellSelector","off","on","isMouseEvent","which","_this6","_createActionByOption","afterExecute","_cellClickHandler","$target","_hasFocusClass","_showAddAppointmentPopup","firstCellData","first","lastCellData","_createContextMenuAction","eventName","NAME","_contextMenuHandler","_contextMenuAction","$container","_getGroupHeaderContainer","cellTemplates","groupRows","_makeGroupRows","_attachGroupCountAttr","elements","_detachGroupCountAttr","templates","template","groupedAttr","getGroupCountAttr","removeAttr","attr","groupRowCount","count","headerPanelHeight","getHeaderPanelHeight","headerHeight","allDayPanelHeight","supportAllDayRow","getAllDayTableHeight","css","paddingBottom","marginBottom","parseInt","tableCreatorStrategy","VERTICAL","HORIZONTAL","makeGroupedTable","groupHeaderRowClass","_getGroupRowClass","groupRowClass","groupHeaderClass","_getGroupHeaderClass","groupHeaderContentClass","_getGroupHeaderContentClass","_getDateHeaderContainer","$headerRow","cellTemplate","_getDateHeaderTemplate","repeatCount","_getCalculateHeaderCellRepeatCount","templateCallbacks","templateIndex","_renderDateHeaderTemplate","colSpan","_cellIndex","_templateIndex","panelCellIndex","_getHeaderText","_getHeaderPanelCellClass","render","model","_getDateByIndex","calculateHeaderCellRepeatCount","_renderTableBody","_getAllDayPanelCellClass","rowClass","_getAllDayCellData","_getDateByCellIndexes","_getGroupIndex","_getCellGroups","toggle","_this7","calculateTimeCellRepeatCount","startViewDate","getDateWithoutTimezoneChange","_getTimeText","_getTimeCellDateCore","_getTimePanelRowCount","_getTimeCellClass","getCellText","getCellDate","_getTimeCellDate","_getCellCountInDay","skipRound","_calculateDayDuration","Math","ceil","timeCellDuration","round","getCellDuration","cellCountInDay","setMilliseconds","getMilliseconds","_getDateTableCellClass","_getDateTableRowClass","insertAllDayRowsIntoDateTable","getTotalCellCount","includeAllDayPanelRows","getTotalRowCount","_prepareCellData","calculateEndDate","_getTableAllDay","getGroupIndex","_getInterval","len","items","tree","findLeafByIndex","_leaf","makeBranch","leaf","reverse","path","_getPathToLeaf","_this8","isPointerDown","cellHeight","itemSizeFunc","getBoundingRect","checkDropTarget","_isOutsideScrollable","_$currentTableTarget","removeDroppableCellClass","draggingElement","getDocument","removeClass","add","_interval","headerIndex","_getDateForHeaderText","_getFormat","calculateCellIndex","delayCellTemplateRendering","makeTable","remove","_this$virtualSelectio2","empty","clean","_hiddenInterval","_this$renovatedAllDay","_this$renovatedDateTa","_this$renovatedTimePa","renovatedDateTable","renovatedTimePanel","scrollTop","getScrollableScrollTop","scrollLeft","scrollWidth","_container","outerHeight","outerWidth","getLeftOffset","floor","patchedIndexes","_patchCellIndex","firstViewDate","_getMillisecondsOffset","_getOffsetByCount","setTime","getTimezonesDifference","_calculateCellIndex","_calculateHiddenInterval","dayCount","_getHiddenInterval","getVisibleDayDuration","startDayTime","timeZoneOffset","fullInterval","days","_getDaysOfInterval","weekendsCount","_getWeekendsCount","appointmentResources","_getDateTables","_this9","getTimePanelWidth","inAllDayRow","cellCoordinates","_getCellCoordinatesByIndex","_getCellByCoordinates","_getCellPositionWithCache","_getCellPosition","setCellDataCache","position","indexes","prepareCellIndexes","_getDateTableBorder","hours","minutes","findGlobalCellPosition","calculateCoordinatesByDataAndPosition","$dateTableScrollableElement","scrollableSize","window","getWindow","isTargetInAllDayPanel","closest","isOutsideHorizontalScrollable","pageX","scrollX","isOutsideVerticalScrollable","pageY","scrollY","JSON","stringify","set","appointment","geometry","aliasKey","$focusedCells","_getAllFocusedCells","_getMultipleCellsData","currentCell","_getCellDataInRenovatedView","verticalScrollingState","virtualItemSizeBefore","topVirtualRowsCount","getHorizontalMax","shouldFindPositionByViewData","positionByMap","calculateCellPositionByView","shift","getPositionShift","getTimeShift","horizontalHMax","_getHorizontalMax","Error","cellPosition","hMax","vMax","getVerticalMax","getCellIndexByDate","_getCellPositionByIndex","_getVirtualRowOffset","_getOffsetByAllDayPanel","_getGroupTop","timeInterval","dateTimeStamp","_getIntervalBetween","_updateIndex","timeShift","isAllDay","getCellHeight","currentDayStart","cellDuration","currentDayEndHour","currentDateTime","currentDayStartTime","minTime","_this10","_isSkippedData","groupIndices","_getGroupIndexes","$droppableCell","_getDroppableCell","getEndViewDateByEndDayHour","_this11","startIndex","_this12","useCache","callbackResult","getAllDayOffset","isRtl","maxPosition","getMaxAllowedVerticalPositionVirtual","getMaxAllowedVerticalPositionStandard","_this13","row","_this14","getMaxPosition","getAllDayHeight","_this$viewDataProvide","getLasGroupCellPosition","_getWorkSpaceWidth","leftOffset","getWorkSpaceLeftOffset","topIndex","leftIndex","dateOfLastViewCell","getDateOfLastViewCell","endDateOfLastViewCell","calculateEndViewDate","_adjustEndViewDateByDaylightDiff","endTime","dateTimeFromDecimal","daylightDiff","getDaylightOffsetInMs","getGroupBoundsOffset","startOffset","right","getScrollable","_this15","getCellIndexByCoordinates","$scrollable","scrolledCellCount","bottom","scheduler","newDate","timeZoneCalculator","createDate","needUpdateScrollPosition","_this16","_getCellsInViewport","time","trimmedTime","currentResult","_this16$getCellData","cellStartDate","cellEndDate","cellStartTime","cellEndTime","totalColumnCount","scrollableScrollTop","scrollableScrollLeft","getScrollableScrollLeft","fullScrolledRowCount","scrolledRowCount","fullScrolledColumnCount","scrolledColumnCount","columnCount","getMaxAllowedPosition","currentPosition","_isValidScrollDate","_getScrollCoordinates","scrollable","scrollBy","throwWarning","isScrollToAllDay","getHours","getMinutes","offset","scrollableHeight","scrollableWidth","xShift","yShift","setTimeout","min","max","getEndViewDate","log","endIndex","dragBehavior","_createDragBehavior","getWorkArea","getAllDayContainer","getItemData","itemElement","appointments","_getItemData","getItemSettings","APPOINTMENT_SETTINGS_KEY","_createDragBehaviorBase","_this17","_ref3","isSetCursorOffset","restOptions","dragElement","itemData","addTo","dragTemplate","onDragStart","canceled","cancel","_appointments","settings","disabled","isCompact","updateDragSource","_createDragAppointment","initialPosition","locate","itemSettings","resetPosition","onDragEnd","_dragElement","cursorOffset","$dragElement","x","y","appointmentIndex","virtual","_renderItem","_supportCompactDropDownAppointments","_this$dragBehavior","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.js)\r\n * Version: 20.2.5\r\n * Build date: Fri Jan 15 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../../events/core/events_engine\"));\r\nvar _element_data = require(\"../../../core/element_data\");\r\nvar _date = _interopRequireDefault(require(\"../../../core/utils/date\"));\r\nvar _window = require(\"../../../core/utils/window\");\r\nvar _element = require(\"../../../core/element\");\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _iterator = require(\"../../../core/utils/iterator\");\r\nvar _position = require(\"../../../core/utils/position\");\r\nvar _message = _interopRequireDefault(require(\"../../../localization/message\"));\r\nvar _date2 = _interopRequireDefault(require(\"../../../localization/date\"));\r\nvar _common = require(\"../../../core/utils/common\");\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _index = require(\"../../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../../events/pointer\"));\r\nvar _ui = _interopRequireDefault(require(\"../../widget/ui.errors\"));\r\nvar _click = require(\"../../../events/click\");\r\nvar _contextmenu = require(\"../../../events/contextmenu\");\r\nvar _drag = require(\"../../../events/drag\");\r\nvar _ui2 = _interopRequireDefault(require(\"../../scroll_view/ui.scrollable\"));\r\nvar _uiSchedulerWork_spaceGroupedStrategy = _interopRequireDefault(require(\"./ui.scheduler.work_space.grouped.strategy.horizontal\"));\r\nvar _uiSchedulerWork_spaceGroupedStrategy2 = _interopRequireDefault(require(\"./ui.scheduler.work_space.grouped.strategy.vertical\"));\r\nvar _uiScheduler = _interopRequireDefault(require(\"../ui.scheduler.table_creator\"));\r\nvar _uiSchedulerCurrent_time_shader = _interopRequireDefault(require(\"../shaders/ui.scheduler.current_time_shader.vertical\"));\r\nvar _appointmentDragBehavior = _interopRequireDefault(require(\"../appointmentDragBehavior\"));\r\nvar _constants = require(\"../constants\");\r\nvar _utils = _interopRequireDefault(require(\"../utils.timeZone\"));\r\nvar _widgetObserver = _interopRequireDefault(require(\"../base/widgetObserver\"));\r\nvar _translator = require(\"../../../animation/translator\");\r\nvar _uiScheduler2 = _interopRequireDefault(require(\"./ui.scheduler.virtual_scrolling\"));\r\nvar _view_data_provider = _interopRequireDefault(require(\"./view_data_provider\"));\r\nvar _layout = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/layout.j\"));\r\nvar _title = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j\"));\r\nvar _layout2 = _interopRequireDefault(require(\"../../../renovation/ui/scheduler/workspaces/base/time_panel/layout.j\"));\r\nvar _virtual_selection_state = _interopRequireDefault(require(\"./virtual_selection_state\"));\r\nvar _cache = require(\"./cache\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _objectWithoutProperties(source, excluded) {\r\n    if (null == source) {\r\n        return {}\r\n    }\r\n    var target = _objectWithoutPropertiesLoose(source, excluded);\r\n    var key, i;\r\n    if (Object.getOwnPropertySymbols) {\r\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n        for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n            key = sourceSymbolKeys[i];\r\n            if (excluded.indexOf(key) >= 0) {\r\n                continue\r\n            }\r\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) {\r\n                continue\r\n            }\r\n            target[key] = source[key]\r\n        }\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n    if (null == source) {\r\n        return {}\r\n    }\r\n    var target = {};\r\n    var sourceKeys = Object.keys(source);\r\n    var key, i;\r\n    for (i = 0; i < sourceKeys.length; i++) {\r\n        key = sourceKeys[i];\r\n        if (excluded.indexOf(key) >= 0) {\r\n            continue\r\n        }\r\n        target[key] = source[key]\r\n    }\r\n    return target\r\n}\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n    if (Object.getOwnPropertySymbols) {\r\n        var symbols = Object.getOwnPropertySymbols(object);\r\n        if (enumerableOnly) {\r\n            symbols = symbols.filter(function(sym) {\r\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable\r\n            })\r\n        }\r\n        keys.push.apply(keys, symbols)\r\n    }\r\n    return keys\r\n}\r\n\r\nfunction _objectSpread(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = null != arguments[i] ? arguments[i] : {};\r\n        if (i % 2) {\r\n            ownKeys(Object(source), true).forEach(function(key) {\r\n                _defineProperty(target, key, source[key])\r\n            })\r\n        } else {\r\n            if (Object.getOwnPropertyDescriptors) {\r\n                Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))\r\n            } else {\r\n                ownKeys(Object(source)).forEach(function(key) {\r\n                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\n\r\nfunction _get(target, property, receiver) {\r\n    if (\"undefined\" !== typeof Reflect && Reflect.get) {\r\n        _get = Reflect.get\r\n    } else {\r\n        _get = function(target, property, receiver) {\r\n            var base = _superPropBase(target, property);\r\n            if (!base) {\r\n                return\r\n            }\r\n            var desc = Object.getOwnPropertyDescriptor(base, property);\r\n            if (desc.get) {\r\n                return desc.get.call(receiver)\r\n            }\r\n            return desc.value\r\n        }\r\n    }\r\n    return _get(target, property, receiver || target)\r\n}\r\n\r\nfunction _superPropBase(object, property) {\r\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\r\n        object = _getPrototypeOf(object);\r\n        if (null === object) {\r\n            break\r\n        }\r\n    }\r\n    return object\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n    if (\"function\" !== typeof superClass && null !== superClass) {\r\n        throw new TypeError(\"Super expression must either be null or a function\")\r\n    }\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n        constructor: {\r\n            value: subClass,\r\n            writable: true,\r\n            configurable: true\r\n        }\r\n    });\r\n    if (superClass) {\r\n        _setPrototypeOf(subClass, superClass)\r\n    }\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\n\r\nfunction _createSuper(Derived) {\r\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n    return function() {\r\n        var result, Super = _getPrototypeOf(Derived);\r\n        if (hasNativeReflectConstruct) {\r\n            var NewTarget = _getPrototypeOf(this).constructor;\r\n            result = Reflect.construct(Super, arguments, NewTarget)\r\n        } else {\r\n            result = Super.apply(this, arguments)\r\n        }\r\n        return _possibleConstructorReturn(this, result)\r\n    }\r\n}\r\n\r\nfunction _possibleConstructorReturn(self, call) {\r\n    if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\r\n        return call\r\n    }\r\n    return _assertThisInitialized(self)\r\n}\r\n\r\nfunction _assertThisInitialized(self) {\r\n    if (void 0 === self) {\r\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")\r\n    }\r\n    return self\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n    if (\"undefined\" === typeof Reflect || !Reflect.construct) {\r\n        return false\r\n    }\r\n    if (Reflect.construct.sham) {\r\n        return false\r\n    }\r\n    if (\"function\" === typeof Proxy) {\r\n        return true\r\n    }\r\n    try {\r\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\r\n        return true\r\n    } catch (e) {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction _getPrototypeOf(o) {\r\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o) {\r\n        return o.__proto__ || Object.getPrototypeOf(o)\r\n    };\r\n    return _getPrototypeOf(o)\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar tableCreator = _uiScheduler.default.tableCreator;\r\nvar abstract = _widgetObserver.default.abstract;\r\nvar toMs = _date.default.dateToMilliseconds;\r\nvar COMPONENT_CLASS = \"dx-scheduler-work-space\";\r\nvar GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-grouped\";\r\nvar VERTICAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-vertical-grouped\";\r\nvar WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = \"dx-scheduler-work-space-vertical-group-table\";\r\nvar WORKSPACE_WITH_BOTH_SCROLLS_CLASS = \"dx-scheduler-work-space-both-scrollbar\";\r\nvar WORKSPACE_WITH_COUNT_CLASS = \"dx-scheduler-work-space-count\";\r\nvar WORKSPACE_WITH_GROUP_BY_DATE_CLASS = \"dx-scheduler-work-space-group-by-date\";\r\nvar WORKSPACE_WITH_ODD_CELLS_CLASS = \"dx-scheduler-work-space-odd-cells\";\r\nvar TIME_PANEL_CLASS = \"dx-scheduler-time-panel\";\r\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\r\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\r\nvar ALL_DAY_PANEL_CLASS = \"dx-scheduler-all-day-panel\";\r\nvar ALL_DAY_TABLE_CLASS = \"dx-scheduler-all-day-table\";\r\nvar ALL_DAY_CONTAINER_CLASS = \"dx-scheduler-all-day-appointments\";\r\nvar ALL_DAY_TITLE_CLASS = \"dx-scheduler-all-day-title\";\r\nvar ALL_DAY_TITLE_HIDDEN_CLASS = \"dx-scheduler-all-day-title-hidden\";\r\nvar ALL_DAY_TABLE_CELL_CLASS = \"dx-scheduler-all-day-table-cell\";\r\nvar ALL_DAY_TABLE_ROW_CLASS = \"dx-scheduler-all-day-table-row\";\r\nvar WORKSPACE_WITH_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day\";\r\nvar WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day-collapsed\";\r\nvar WORKSPACE_WITH_MOUSE_SELECTION_CLASS = \"dx-scheduler-work-space-mouse-selection\";\r\nvar HORIZONTAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-horizontal\";\r\nvar VERTICAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-vertical\";\r\nvar HEADER_PANEL_CLASS = \"dx-scheduler-header-panel\";\r\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\r\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\r\nvar GROUP_ROW_CLASS = \"dx-scheduler-group-row\";\r\nvar GROUP_HEADER_CLASS = \"dx-scheduler-group-header\";\r\nvar GROUP_HEADER_CONTENT_CLASS = \"dx-scheduler-group-header-content\";\r\nvar DATE_TABLE_CLASS = \"dx-scheduler-date-table\";\r\nvar DATE_TABLE_CELL_CLASS = \"dx-scheduler-date-table-cell\";\r\nvar DATE_TABLE_ROW_CLASS = \"dx-scheduler-date-table-row\";\r\nvar DATE_TABLE_FOCUSED_CELL_CLASS = \"dx-scheduler-focused-cell\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-scheduler-virtual-row\";\r\nvar VIRTUAL_CELL_CLASS = \"dx-scheduler-virtual-cell\";\r\nvar DATE_TABLE_DROPPABLE_CELL_CLASS = \"dx-scheduler-date-table-droppable-cell\";\r\nvar SCHEDULER_HEADER_SCROLLABLE_CLASS = \"dx-scheduler-header-scrollable\";\r\nvar SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = \"dx-scheduler-sidebar-scrollable\";\r\nvar SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = \"dx-scheduler-date-table-scrollable\";\r\nvar SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, \"dxSchedulerWorkSpace\");\r\nvar SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME = (0, _index.addNamespace)(_drag.enter, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXDROP_EVENT_NAME = (0, _index.addNamespace)(_drag.drop, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME = (0, _index.addNamespace)(_drag.leave, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXCLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.up, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.move, \"dxSchedulerDateTable\");\r\nvar CELL_DATA = \"dxCellData\";\r\nvar DATE_TABLE_CELL_BORDER = 1;\r\nvar DATE_TABLE_MIN_CELL_WIDTH = 75;\r\nvar DAY_MS = toMs(\"day\");\r\nvar HOUR_MS = toMs(\"hour\");\r\nvar SCHEDULER_DRAG_AND_DROP_SELECTOR = \".\".concat(DATE_TABLE_CLASS, \" td, .\").concat(ALL_DAY_TABLE_CLASS, \" td\");\r\nvar CELL_SELECTOR = \".\".concat(DATE_TABLE_CELL_CLASS, \", .\").concat(ALL_DAY_TABLE_CELL_CLASS);\r\nvar ScrollSemaphore = function() {\r\n    function ScrollSemaphore() {\r\n        _classCallCheck(this, ScrollSemaphore);\r\n        this.counter = 0\r\n    }\r\n    _createClass(ScrollSemaphore, [{\r\n        key: \"isFree\",\r\n        value: function() {\r\n            return 0 === this.counter\r\n        }\r\n    }, {\r\n        key: \"take\",\r\n        value: function() {\r\n            this.counter++\r\n        }\r\n    }, {\r\n        key: \"release\",\r\n        value: function() {\r\n            this.counter--;\r\n            if (this.counter < 0) {\r\n                this.counter = 0\r\n            }\r\n        }\r\n    }]);\r\n    return ScrollSemaphore\r\n}();\r\nvar formatWeekday = function(date) {\r\n    return _date2.default.getDayNames(\"abbreviated\")[date.getDay()]\r\n};\r\nvar SchedulerWorkSpace = function(_WidgetObserver) {\r\n    _inherits(SchedulerWorkSpace, _WidgetObserver);\r\n    var _super = _createSuper(SchedulerWorkSpace);\r\n\r\n    function SchedulerWorkSpace() {\r\n        _classCallCheck(this, SchedulerWorkSpace);\r\n        return _super.apply(this, arguments)\r\n    }\r\n    _createClass(SchedulerWorkSpace, [{\r\n        key: \"_supportedKeys\",\r\n        value: function() {\r\n            var clickHandler = function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (this._selectedCells && this._selectedCells.length) {\r\n                    var $itemElement = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n                    var $cellElement = (0, _renderer.default)($itemElement.length ? $itemElement : this._selectedCells);\r\n                    e.target = this._selectedCells;\r\n                    this._showPopup = true;\r\n                    this._cellClickAction({\r\n                        event: e,\r\n                        cellElement: (0, _renderer.default)(this._selectedCells),\r\n                        cellData: this.getCellData($cellElement)\r\n                    })\r\n                }\r\n            };\r\n            var arrowPressHandler = function(e, cell) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._moveToCell(cell, e.shiftKey)\r\n            };\r\n            return (0, _extend.extend)(_get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_supportedKeys\", this).call(this), {\r\n                enter: clickHandler,\r\n                space: clickHandler,\r\n                downArrow: function(e) {\r\n                    var $cell = this._getCellFromNextRow(\"next\", e.shiftKey);\r\n                    arrowPressHandler.call(this, e, $cell)\r\n                },\r\n                upArrow: function(e) {\r\n                    var $cell = this._getCellFromNextRow(\"prev\", e.shiftKey);\r\n                    arrowPressHandler.call(this, e, $cell)\r\n                },\r\n                rightArrow: function(e) {\r\n                    var $rightCell = this._getCellFromNextColumn(\"next\", e.shiftKey);\r\n                    arrowPressHandler.call(this, e, $rightCell)\r\n                },\r\n                leftArrow: function(e) {\r\n                    var $leftCell = this._getCellFromNextColumn(\"prev\", e.shiftKey);\r\n                    arrowPressHandler.call(this, e, $leftCell)\r\n                }\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_dispose\",\r\n        value: function() {\r\n            var _this$virtualScrollin;\r\n            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_dispose\", this).call(this);\r\n            null === (_this$virtualScrollin = this.virtualScrollingDispatcher) || void 0 === _this$virtualScrollin ? void 0 : _this$virtualScrollin.dispose();\r\n            this._disposeRenovatedComponents()\r\n        }\r\n    }, {\r\n        key: \"_isRTL\",\r\n        value: function() {\r\n            return this.option(\"rtlEnabled\")\r\n        }\r\n    }, {\r\n        key: \"_getFocusedCell\",\r\n        value: function() {\r\n            return this._$focusedCell || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0)\r\n        }\r\n    }, {\r\n        key: \"_getAllFocusedCells\",\r\n        value: function() {\r\n            return this._selectedCells || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0)\r\n        }\r\n    }, {\r\n        key: \"_getCellFromNextRow\",\r\n        value: function(direction) {\r\n            var $currentCell = this._$focusedCell;\r\n            if ((0, _type.isDefined)($currentCell)) {\r\n                var cellIndex = $currentCell.index();\r\n                var $row = $currentCell.parent();\r\n                var $cell = $row[direction]().children().eq(cellIndex);\r\n                $cell = this._checkForViewBounds($cell);\r\n                return $cell\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_checkForViewBounds\",\r\n        value: function($item) {\r\n            if (!$item.length) {\r\n                $item = this._$focusedCell\r\n            }\r\n            return $item\r\n        }\r\n    }, {\r\n        key: \"_getCellFromNextColumn\",\r\n        value: function(direction, isMultiSelection) {\r\n            var $focusedCell = this._$focusedCell;\r\n            if (!(0, _type.isDefined)($focusedCell)) {\r\n                return\r\n            }\r\n            var $nextCell;\r\n            var $row = $focusedCell.parent();\r\n            var nextColumnDirection = direction;\r\n            var isDirectionNext = \"next\" === direction;\r\n            var previousColumnDirection = isDirectionNext ? \"prev\" : \"next\";\r\n            var isRTL = this._isRTL();\r\n            var groupCount = this._getGroupCount();\r\n            var isHorizontalGrouping = this._isHorizontalGroupedWorkSpace();\r\n            var isGroupedByDate = this.isGroupedByDate();\r\n            var totalCellCount = this._getTotalCellCount(groupCount);\r\n            var rowCellCount = isMultiSelection && !isGroupedByDate ? this._getCellCount() : totalCellCount;\r\n            var lastIndexInRow = rowCellCount - 1;\r\n            var currentIndex = $focusedCell.index();\r\n            var step = isGroupedByDate && isMultiSelection ? groupCount : 1;\r\n            var isEdgeCell = this._isEdgeCell(isHorizontalGrouping ? totalCellCount - 1 : lastIndexInRow, currentIndex, step, direction);\r\n            var sign = isRTL ? 1 : -1;\r\n            var directionSign = isDirectionNext ? 1 : -1;\r\n            var resultingSign = sign * directionSign;\r\n            if (isEdgeCell || isMultiSelection && this._isGroupEndCell($focusedCell, direction)) {\r\n                var nextIndex = currentIndex - resultingSign * step + resultingSign * rowCellCount;\r\n                var rowDirection = isRTL ? previousColumnDirection : nextColumnDirection;\r\n                $nextCell = $row[rowDirection]().children().eq(nextIndex);\r\n                $nextCell = this._checkForViewBounds($nextCell)\r\n            } else {\r\n                $nextCell = $row.children().eq(currentIndex - resultingSign * step)\r\n            }\r\n            return $nextCell\r\n        }\r\n    }, {\r\n        key: \"_isEdgeCell\",\r\n        value: function(lastIndexInRow, cellIndex, step, direction) {\r\n            var isRTL = this._isRTL();\r\n            var isDirectionNext = \"next\" === direction;\r\n            var rightEdgeCellIndex = isRTL ? 0 : lastIndexInRow;\r\n            var leftEdgeCellIndex = isRTL ? lastIndexInRow : 0;\r\n            var edgeCellIndex = isDirectionNext ? rightEdgeCellIndex : leftEdgeCellIndex;\r\n            var isNextCellGreaterThanEdge = cellIndex + step > edgeCellIndex;\r\n            var isNextCellLessThanEdge = cellIndex - step < edgeCellIndex;\r\n            var isRightEdgeCell = isRTL ? isNextCellLessThanEdge : isNextCellGreaterThanEdge;\r\n            var isLeftEdgeCell = isRTL ? isNextCellGreaterThanEdge : isNextCellLessThanEdge;\r\n            return isDirectionNext ? isRightEdgeCell : isLeftEdgeCell\r\n        }\r\n    }, {\r\n        key: \"_isGroupEndCell\",\r\n        value: function($cell, direction) {\r\n            if (this.isGroupedByDate()) {\r\n                return false\r\n            }\r\n            var isDirectionNext = \"next\" === direction;\r\n            var cellsInRow = this._getCellCount();\r\n            var currentCellIndex = $cell.index();\r\n            var result = currentCellIndex % cellsInRow;\r\n            var endCell = isDirectionNext ? cellsInRow - 1 : 0;\r\n            var startCell = isDirectionNext ? 0 : cellsInRow - 1;\r\n            return this._isRTL() ? result === startCell : result === endCell\r\n        }\r\n    }, {\r\n        key: \"_moveToCell\",\r\n        value: function($cell, isMultiSelection) {\r\n            isMultiSelection = isMultiSelection && this.option(\"allowMultipleCellSelection\");\r\n            this._setSelectedAndFocusedCells($cell, isMultiSelection);\r\n            this._dateTableScrollable.scrollToElement($cell)\r\n        }\r\n    }, {\r\n        key: \"_setSelectedAndFocusedCells\",\r\n        value: function($cell, isMultiSelection) {\r\n            if (!(0, _type.isDefined)($cell) || !$cell.length) {\r\n                return\r\n            }\r\n            var updateViewData = this.isVirtualScrolling();\r\n            var $correctedCell = $cell;\r\n            if (isMultiSelection) {\r\n                $correctedCell = this._correctCellForGroup($cell)\r\n            }\r\n            if ($correctedCell.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\r\n                return\r\n            }\r\n            this._setSelectedCells($correctedCell, isMultiSelection);\r\n            this._setFocusedCell($correctedCell, updateViewData)\r\n        }\r\n    }, {\r\n        key: \"_setFocusedCell\",\r\n        value: function($cell) {\r\n            var updateViewData = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;\r\n            this._releaseFocusedCell();\r\n            var $correctedCell = $cell;\r\n            if (updateViewData) {\r\n                var _this$_getCoordinates = this._getCoordinatesByCell($cell),\r\n                    rowIndex = _this$_getCoordinates.rowIndex,\r\n                    columnIndex = _this$_getCoordinates.columnIndex;\r\n                var isAllDayCell = this._hasAllDayClass($cell);\r\n                this.virtualSelectionState.setFocusedCell(rowIndex, columnIndex, isAllDayCell);\r\n                var focusedCell = this.virtualSelectionState.getFocusedCell(this._isVerticalGroupedWorkSpace());\r\n                var cellData = focusedCell.cellData,\r\n                    coordinates = focusedCell.coordinates;\r\n                var allDay = cellData.allDay;\r\n                $correctedCell = allDay && !this._isVerticalGroupedWorkSpace() ? this._dom_getAllDayPanelCell(coordinates.cellIndex) : this._dom_getDateCell(coordinates)\r\n            }\r\n            this._toggleFocusedCellClass(true, $correctedCell);\r\n            this._$focusedCell = $correctedCell\r\n        }\r\n    }, {\r\n        key: \"_setSelectedCells\",\r\n        value: function($firstCell, isMultiSelection) {\r\n            this._releaseSelectedCells();\r\n            this._selectedCells = [];\r\n            if (this.isVirtualScrolling()) {\r\n                this._setSelectedCellsInVirtualMode($firstCell, isMultiSelection)\r\n            } else {\r\n                this._setSelectedCellsInStandardMode($firstCell, isMultiSelection)\r\n            }\r\n            var $selectedCells = (0, _renderer.default)(this._selectedCells);\r\n            this._toggleFocusClass(true, $selectedCells);\r\n            this.setAria(\"label\", \"Add appointment\", $selectedCells);\r\n            var selectedCellData = this.getSelectedCellData().map(function(_ref) {\r\n                var startDate = _ref.startDate,\r\n                    endDate = _ref.endDate,\r\n                    allDay = _ref.allDay,\r\n                    groups = _ref.groups,\r\n                    groupIndex = _ref.groupIndex;\r\n                return {\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    allDay: allDay,\r\n                    groups: groups,\r\n                    groupIndex: groupIndex || 0\r\n                }\r\n            });\r\n            this.option(\"selectedCellData\", selectedCellData);\r\n            this._selectionChangedAction({\r\n                selectedCellData: selectedCellData\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_setSelectedCellsInStandardMode\",\r\n        value: function($firstCell, isMultiSelection) {\r\n            if (isMultiSelection) {\r\n                var $previousCell = this._$prevCell;\r\n                var orientation = \"day\" === this.option(\"type\") && (!this.option(\"groups\").length || \"vertical\" === this.option(\"groupOrientation\")) ? \"vertical\" : \"horizontal\";\r\n                var $targetCells = this._getCellsBetween($firstCell, $previousCell, orientation);\r\n                this._selectedCells = $targetCells.toArray()\r\n            } else {\r\n                this._selectedCells = [$firstCell.get(0)];\r\n                this._$prevCell = $firstCell\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_setSelectedCellsInVirtualMode\",\r\n        value: function($firstCell, isMultiSelection) {\r\n            if (isMultiSelection) {\r\n                var _this$_getCoordinates2 = this._getCoordinatesByCell($firstCell),\r\n                    firstRow = _this$_getCoordinates2.rowIndex,\r\n                    firstColumn = _this$_getCoordinates2.columnIndex;\r\n                var isFirstAllDay = this._hasAllDayClass($firstCell);\r\n                var firstCell = {\r\n                    rowIndex: firstRow,\r\n                    columnIndex: firstColumn,\r\n                    allDay: isFirstAllDay\r\n                };\r\n                this.virtualSelectionState.setSelectedCells(firstCell)\r\n            } else {\r\n                this._selectedCells = [$firstCell.get(0)];\r\n                this._$prevCell = $firstCell;\r\n                var _this$_getCoordinates3 = this._getCoordinatesByCell($firstCell),\r\n                    rowIndex = _this$_getCoordinates3.rowIndex,\r\n                    columnIndex = _this$_getCoordinates3.columnIndex;\r\n                var isAllDayCell = this._hasAllDayClass($firstCell);\r\n                var _firstCell = {\r\n                    rowIndex: rowIndex,\r\n                    columnIndex: columnIndex,\r\n                    allDay: isAllDayCell\r\n                };\r\n                this.virtualSelectionState.setSelectedCells(_firstCell, _firstCell)\r\n            }\r\n            this._setSelectedCellsByCellData(this.virtualSelectionState.getSelectedCells())\r\n        }\r\n    }, {\r\n        key: \"_correctCellForGroup\",\r\n        value: function($cell) {\r\n            if (this.isVirtualScrolling()) {\r\n                var cellData = this.getCellData($cell);\r\n                var isValidFocusedCell = this.virtualSelectionState.isValidFocusedCell(cellData);\r\n                return isValidFocusedCell ? $cell : this._$focusedCell\r\n            }\r\n            var $focusedCell = this._$focusedCell;\r\n            var cellGroupIndex = this._getGroupIndexByCell($cell);\r\n            var focusedCellGroupIndex = this._getGroupIndexByCell($focusedCell);\r\n            var isDifferentTables = this._hasAllDayClass($cell) !== this._hasAllDayClass($focusedCell);\r\n            return focusedCellGroupIndex !== cellGroupIndex || isDifferentTables ? $focusedCell : $cell\r\n        }\r\n    }, {\r\n        key: \"_getCellsBetween\",\r\n        value: function($first, $last, direction) {\r\n            var isAllDayTable = this._hasAllDayClass($last);\r\n            var $cells = this._getCells(isAllDayTable, direction);\r\n            var firstIndex = $cells.index($first);\r\n            var lastIndex = $cells.index($last);\r\n            if (firstIndex > lastIndex) {\r\n                var buffer = firstIndex;\r\n                firstIndex = lastIndex;\r\n                lastIndex = buffer\r\n            }\r\n            $cells = $cells.slice(firstIndex, lastIndex + 1);\r\n            if (this._getGroupCount() > 1) {\r\n                var result = [];\r\n                var focusedGroupIndex = this._getGroupIndexByCell($first);\r\n                (0, _iterator.each)($cells, function(_, cell) {\r\n                    var groupIndex = this._getGroupIndexByCell((0, _renderer.default)(cell));\r\n                    if (focusedGroupIndex === groupIndex) {\r\n                        result.push(cell)\r\n                    }\r\n                }.bind(this));\r\n                $cells = (0, _renderer.default)(result)\r\n            }\r\n            return $cells\r\n        }\r\n    }, {\r\n        key: \"_hasAllDayClass\",\r\n        value: function($cell) {\r\n            return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS)\r\n        }\r\n    }, {\r\n        key: \"_getGroupIndexByCell\",\r\n        value: function($cell) {\r\n            if (this.isVirtualScrolling()) {\r\n                var _this$_getCoordinates4 = this._getCoordinatesByCell($cell),\r\n                    rowIndex = _this$_getCoordinates4.rowIndex,\r\n                    columnIndex = _this$_getCoordinates4.columnIndex;\r\n                var isAllDayCell = $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);\r\n                return this.viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell).groupIndex\r\n            }\r\n            return this._groupedStrategy.getGroupIndexByCell($cell)\r\n        }\r\n    }, {\r\n        key: \"_toggleFocusedCellClass\",\r\n        value: function(isFocused, $element) {\r\n            var $focusTarget = $element && $element.length ? $element : this._focusTarget();\r\n            $focusTarget.toggleClass(DATE_TABLE_FOCUSED_CELL_CLASS, isFocused)\r\n        }\r\n    }, {\r\n        key: \"_releaseSelectedAndFocusedCells\",\r\n        value: function() {\r\n            this._releaseFocusedCell();\r\n            this._releaseSelectedCells();\r\n            this.option(\"selectedCellData\", [])\r\n        }\r\n    }, {\r\n        key: \"_releaseFocusedCell\",\r\n        value: function() {\r\n            var $cell = this._$focusedCell;\r\n            if ((0, _type.isDefined)($cell) && $cell.length) {\r\n                this._toggleFocusedCellClass(false, $cell);\r\n                this.setAria(\"label\", void 0, $cell)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_releaseSelectedCells\",\r\n        value: function() {\r\n            var $cells = (0, _renderer.default)(this._selectedCells);\r\n            if ((0, _type.isDefined)($cells) && $cells.length) {\r\n                this._toggleFocusClass(false, $cells);\r\n                this.setAria(\"label\", void 0, $cells)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_focusInHandler\",\r\n        value: function(e) {\r\n            if ((0, _renderer.default)(e.target).is(this._focusTarget()) && false !== this._isCellClick) {\r\n                delete this._isCellClick;\r\n                delete this._contextMenuHandled;\r\n                _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_focusInHandler\", this).apply(this, arguments);\r\n                var $cell = this._getFocusedCell();\r\n                this._setSelectedAndFocusedCells($cell)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_focusOutHandler\",\r\n        value: function() {\r\n            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_focusOutHandler\", this).apply(this, arguments);\r\n            if (!this._contextMenuHandled) {\r\n                var _this$virtualSelectio;\r\n                this._releaseSelectedAndFocusedCells();\r\n                null === (_this$virtualSelectio = this.virtualSelectionState) || void 0 === _this$virtualSelectio ? void 0 : _this$virtualSelectio.releaseSelectedAndFocusedCells()\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_focusTarget\",\r\n        value: function() {\r\n            return this.$element()\r\n        }\r\n    }, {\r\n        key: \"_getDefaultOptions\",\r\n        value: function() {\r\n            return (0, _extend.extend)(_get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_getDefaultOptions\", this).call(this), {\r\n                currentDate: new Date,\r\n                intervalCount: 1,\r\n                startDate: null,\r\n                firstDayOfWeek: void 0,\r\n                startDayHour: 0,\r\n                endDayHour: 24,\r\n                hoursInterval: .5,\r\n                activeStateEnabled: true,\r\n                hoverStateEnabled: true,\r\n                groups: [],\r\n                showAllDayPanel: true,\r\n                allDayExpanded: false,\r\n                onCellClick: null,\r\n                crossScrollingEnabled: false,\r\n                dataCellTemplate: null,\r\n                timeCellTemplate: null,\r\n                resourceCellTemplate: null,\r\n                dateCellTemplate: null,\r\n                allowMultipleCellSelection: true,\r\n                indicatorTime: new Date,\r\n                indicatorUpdateInterval: 5 * toMs(\"minute\"),\r\n                shadeUntilCurrentTime: true,\r\n                groupOrientation: \"horizontal\",\r\n                selectedCellData: [],\r\n                groupByDate: false,\r\n                scrolling: {\r\n                    mode: \"standard\"\r\n                },\r\n                renovateRender: false,\r\n                height: void 0\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_optionChanged\",\r\n        value: function(args) {\r\n            switch (args.name) {\r\n                case \"startDayHour\":\r\n                case \"endDayHour\":\r\n                    this.invoke(\"validateDayHours\");\r\n                    this._cleanWorkSpace();\r\n                    break;\r\n                case \"dateCellTemplate\":\r\n                case \"resourceCellTemplate\":\r\n                case \"dataCellTemplate\":\r\n                case \"timeCellTemplate\":\r\n                case \"hoursInterval\":\r\n                case \"firstDayOfWeek\":\r\n                case \"currentDate\":\r\n                case \"startDate\":\r\n                    this._cleanWorkSpace();\r\n                    break;\r\n                case \"groups\":\r\n                    this._cleanView();\r\n                    this._disposeRenovatedComponents();\r\n                    this._removeAllDayElements();\r\n                    this._initGrouping();\r\n                    this.repaint();\r\n                    break;\r\n                case \"groupOrientation\":\r\n                    this._initGroupedStrategy();\r\n                    this._createAllDayPanelElements();\r\n                    this._removeAllDayElements();\r\n                    this._cleanWorkSpace();\r\n                    this._toggleGroupByDateClass();\r\n                    break;\r\n                case \"showAllDayPanel\":\r\n                    if (this._isVerticalGroupedWorkSpace()) {\r\n                        this._cleanView();\r\n                        this._disposeRenovatedComponents();\r\n                        this._removeAllDayElements();\r\n                        this._initGrouping();\r\n                        this.repaint()\r\n                    } else {\r\n                        this._toggleAllDayVisibility()\r\n                    }\r\n                    break;\r\n                case \"allDayExpanded\":\r\n                    this._changeAllDayVisibility();\r\n                    this._attachTablesEvents();\r\n                    this.headerPanelOffsetRecalculate();\r\n                    this._updateScrollable();\r\n                    break;\r\n                case \"onSelectionChanged\":\r\n                    this._createSelectionChangedAction();\r\n                    break;\r\n                case \"onCellClick\":\r\n                    this._createCellClickAction();\r\n                    break;\r\n                case \"onCellContextMenu\":\r\n                    this._attachContextMenuEvent();\r\n                    break;\r\n                case \"intervalCount\":\r\n                    this._cleanWorkSpace();\r\n                    this._toggleWorkSpaceCountClass();\r\n                    this._toggleFixedScrollableClass();\r\n                    break;\r\n                case \"groupByDate\":\r\n                    this._cleanWorkSpace();\r\n                    this._toggleGroupByDateClass();\r\n                    break;\r\n                case \"crossScrollingEnabled\":\r\n                    this._toggleHorizontalScrollClass();\r\n                    this._dateTableScrollable.option(this._dateTableScrollableConfig());\r\n                    break;\r\n                case \"width\":\r\n                    _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_optionChanged\", this).call(this, args);\r\n                    this._dimensionChanged();\r\n                    break;\r\n                case \"allowMultipleCellSelection\":\r\n                    break;\r\n                case \"selectedCellData\":\r\n                    break;\r\n                case \"scrolling\":\r\n                    this.option(\"renovateRender\", this._isVirtualModeOn());\r\n                    break;\r\n                case \"renovateRender\":\r\n                    this._disposeRenovatedComponents();\r\n                    this.repaint();\r\n                    break;\r\n                default:\r\n                    _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_optionChanged\", this).call(this, args)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_cleanWorkSpace\",\r\n        value: function() {\r\n            this._cleanView();\r\n            this._toggleGroupedClass();\r\n            this._toggleWorkSpaceWithOddCells();\r\n            this._renderView()\r\n        }\r\n    }, {\r\n        key: \"_init\",\r\n        value: function() {\r\n            this._headerSemaphore = new ScrollSemaphore;\r\n            this._sideBarSemaphore = new ScrollSemaphore;\r\n            this._dataTableSemaphore = new ScrollSemaphore;\r\n            this._viewDataProvider = null;\r\n            this._virtualSelectionState = null;\r\n            this._activeStateUnit = CELL_SELECTOR;\r\n            this._maxAllowedVerticalPosition = [];\r\n            this._maxAllowedPosition = [];\r\n            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_init\", this).call(this);\r\n            this._initGrouping();\r\n            this._toggleHorizontalScrollClass();\r\n            this._toggleWorkSpaceCountClass();\r\n            this._toggleGroupByDateClass();\r\n            this._toggleWorkSpaceWithOddCells();\r\n            this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass())\r\n        }\r\n    }, {\r\n        key: \"_initGrouping\",\r\n        value: function() {\r\n            this._initGroupedStrategy();\r\n            this._toggleGroupingDirectionClass();\r\n            this._toggleGroupByDateClass()\r\n        }\r\n    }, {\r\n        key: \"_initGroupedStrategy\",\r\n        value: function() {\r\n            var strategyName = this.option(\"groups\").length ? this.option(\"groupOrientation\") : this._getDefaultGroupStrategy();\r\n            var Strategy = \"vertical\" === strategyName ? _uiSchedulerWork_spaceGroupedStrategy2.default : _uiSchedulerWork_spaceGroupedStrategy.default;\r\n            this._groupedStrategy = new Strategy(this)\r\n        }\r\n    }, {\r\n        key: \"_getDefaultGroupStrategy\",\r\n        value: function() {\r\n            return \"horizontal\"\r\n        }\r\n    }, {\r\n        key: \"_isVerticalGroupedWorkSpace\",\r\n        value: function() {\r\n            return !!this.option(\"groups\").length && \"vertical\" === this.option(\"groupOrientation\")\r\n        }\r\n    }, {\r\n        key: \"_isHorizontalGroupedWorkSpace\",\r\n        value: function() {\r\n            return !!this.option(\"groups\").length && \"horizontal\" === this.option(\"groupOrientation\")\r\n        }\r\n    }, {\r\n        key: \"_toggleHorizontalScrollClass\",\r\n        value: function() {\r\n            this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option(\"crossScrollingEnabled\"))\r\n        }\r\n    }, {\r\n        key: \"_toggleGroupByDateClass\",\r\n        value: function() {\r\n            this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate())\r\n        }\r\n    }, {\r\n        key: \"_toggleWorkSpaceCountClass\",\r\n        value: function() {\r\n            this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount())\r\n        }\r\n    }, {\r\n        key: \"_isWorkSpaceWithCount\",\r\n        value: function() {\r\n            return this.option(\"intervalCount\") > 1\r\n        }\r\n    }, {\r\n        key: \"_toggleWorkSpaceWithOddCells\",\r\n        value: function() {\r\n            this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells())\r\n        }\r\n    }, {\r\n        key: \"_isWorkspaceWithOddCells\",\r\n        value: function() {\r\n            return .5 === this.option(\"hoursInterval\") && !this.isVirtualScrolling()\r\n        }\r\n    }, {\r\n        key: \"_toggleGroupingDirectionClass\",\r\n        value: function() {\r\n            this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace())\r\n        }\r\n    }, {\r\n        key: \"_getRealGroupOrientation\",\r\n        value: function() {\r\n            return this._isVerticalGroupedWorkSpace() ? \"vertical\" : \"horizontal\"\r\n        }\r\n    }, {\r\n        key: \"_getTimePanelClass\",\r\n        value: function() {\r\n            return TIME_PANEL_CLASS\r\n        }\r\n    }, {\r\n        key: \"_getDateTableClass\",\r\n        value: function() {\r\n            return DATE_TABLE_CLASS\r\n        }\r\n    }, {\r\n        key: \"_getDateTableRowClass\",\r\n        value: function() {\r\n            return DATE_TABLE_ROW_CLASS\r\n        }\r\n    }, {\r\n        key: \"_getDateTableCellClass\",\r\n        value: function(i, j) {\r\n            var cellClass = DATE_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS + \" \" + VERTICAL_SIZES_CLASS;\r\n            return this._needApplyLastGroupCellClass() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1, i, j) : cellClass\r\n        }\r\n    }, {\r\n        key: \"_needApplyLastGroupCellClass\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"_getGroupRowClass\",\r\n        value: function() {\r\n            return GROUP_ROW_CLASS\r\n        }\r\n    }, {\r\n        key: \"_getGroupHeaderClass\",\r\n        value: function(i) {\r\n            var cellClass = GROUP_HEADER_CLASS;\r\n            return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1)\r\n        }\r\n    }, {\r\n        key: \"_getGroupHeaderContentClass\",\r\n        value: function() {\r\n            return GROUP_HEADER_CONTENT_CLASS\r\n        }\r\n    }, {\r\n        key: \"_initWorkSpaceUnits\",\r\n        value: function() {\r\n            this._$headerPanel = (0, _renderer.default)(\"<table>\");\r\n            this._$thead = (0, _renderer.default)(\"<thead>\").appendTo(this._$headerPanel);\r\n            this._$fixedContainer = (0, _renderer.default)(\"<div>\").addClass(_constants.FIXED_CONTAINER_CLASS);\r\n            this._$allDayContainer = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_CONTAINER_CLASS);\r\n            this._initAllDayPanelElements();\r\n            if (this.isRenovatedRender()) {\r\n                this.createRAllDayPanelElements()\r\n            } else {\r\n                this._createAllDayPanelElements()\r\n            }\r\n            this._$timePanel = (0, _renderer.default)(\"<table>\").addClass(this._getTimePanelClass());\r\n            this._$dateTable = (0, _renderer.default)(\"<table>\");\r\n            this._$groupTable = (0, _renderer.default)(\"<div>\").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS)\r\n        }\r\n    }, {\r\n        key: \"_initAllDayPanelElements\",\r\n        value: function() {\r\n            this._allDayTitles = [];\r\n            this._allDayTables = [];\r\n            this._allDayPanels = []\r\n        }\r\n    }, {\r\n        key: \"createRAllDayPanelElements\",\r\n        value: function() {\r\n            this._$allDayPanel = (0, _renderer.default)(\"<div>\");\r\n            this._$allDayTitle = (0, _renderer.default)(\"<div>\").appendTo(this.$element())\r\n        }\r\n    }, {\r\n        key: \"_createAllDayPanelElements\",\r\n        value: function() {\r\n            var groupCount = this._getGroupCount();\r\n            if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {\r\n                for (var i = 0; i < groupCount; i++) {\r\n                    var $allDayTitle = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(_message.default.format(\"dxScheduler-allDay\"));\r\n                    this._allDayTitles.push($allDayTitle);\r\n                    this._$allDayTable = (0, _renderer.default)(\"<table>\");\r\n                    this._allDayTables.push(this._$allDayTable);\r\n                    this._$allDayPanel = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\r\n                    this._allDayPanels.push(this._$allDayPanel)\r\n                }\r\n            } else {\r\n                this._$allDayTitle = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(_message.default.format(\"dxScheduler-allDay\")).appendTo(this.$element());\r\n                this._$allDayTable = (0, _renderer.default)(\"<table>\");\r\n                this._$allDayPanel = (0, _renderer.default)(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_initDateTableScrollable\",\r\n        value: function() {\r\n            var $dateTableScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);\r\n            this._dateTableScrollable = this._createComponent($dateTableScrollable, _ui2.default, this._dateTableScrollableConfig())\r\n        }\r\n    }, {\r\n        key: \"_dateTableScrollableConfig\",\r\n        value: function() {\r\n            var config = {\r\n                useKeyboard: false,\r\n                bounceEnabled: false,\r\n                updateManually: true,\r\n                pushBackValue: 0\r\n            };\r\n            if (this._needCreateCrossScrolling()) {\r\n                config = (0, _extend.extend)(config, this._createCrossScrollingConfig())\r\n            }\r\n            return config\r\n        }\r\n    }, {\r\n        key: \"_createCrossScrollingConfig\",\r\n        value: function() {\r\n            var _this = this;\r\n            var config = {};\r\n            config.direction = \"both\";\r\n            config.onScroll = function(e) {\r\n                _this._dataTableSemaphore.take();\r\n                _this._sideBarSemaphore.isFree() && _this._sidebarScrollable && _this._sidebarScrollable.scrollTo({\r\n                    top: e.scrollOffset.top\r\n                });\r\n                _this._headerSemaphore.isFree() && _this._headerScrollable && _this._headerScrollable.scrollTo({\r\n                    left: e.scrollOffset.left\r\n                });\r\n                _this._dataTableSemaphore.release()\r\n            };\r\n            config.onEnd = function() {\r\n                _this.notifyObserver(\"updateResizableArea\", {})\r\n            };\r\n            return config\r\n        }\r\n    }, {\r\n        key: \"_createWorkSpaceElements\",\r\n        value: function() {\r\n            if (this.option(\"crossScrollingEnabled\")) {\r\n                this._createWorkSpaceScrollableElements()\r\n            } else {\r\n                this._createWorkSpaceStaticElements()\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_createWorkSpaceStaticElements\",\r\n        value: function() {\r\n            if (this._isVerticalGroupedWorkSpace()) {\r\n                this._dateTableScrollable.$content().append(this._$allDayContainer, this._$groupTable, this._$timePanel, this._$dateTable);\r\n                this.$element().append(this._$fixedContainer, this._$headerPanel, this._dateTableScrollable.$element())\r\n            } else {\r\n                this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\r\n                this.$element().append(this._$fixedContainer, this._$headerPanel, this._$allDayContainer, this._$allDayPanel, this._dateTableScrollable.$element())\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_createWorkSpaceScrollableElements\",\r\n        value: function() {\r\n            this.$element().append(this._$fixedContainer);\r\n            this._createHeaderScrollable();\r\n            this._createSidebarScrollable();\r\n            this.$element().append(this._dateTableScrollable.$element());\r\n            this._headerScrollable.$content().append(this._$headerPanel);\r\n            this._dateTableScrollable.$content().append(this._$dateTable);\r\n            if (this._isVerticalGroupedWorkSpace()) {\r\n                this._dateTableScrollable.$content().prepend(this._$allDayContainer);\r\n                this._sidebarScrollable.$content().append(this._$groupTable, this._$timePanel)\r\n            } else {\r\n                this._headerScrollable.$content().append(this._$allDayContainer, this._$allDayPanel)\r\n            }\r\n            this._sidebarScrollable.$content().append(this._$timePanel)\r\n        }\r\n    }, {\r\n        key: \"_createHeaderScrollable\",\r\n        value: function() {\r\n            var $headerScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this.$element());\r\n            this._headerScrollable = this._createComponent($headerScrollable, _ui2.default, this._headerScrollableConfig())\r\n        }\r\n    }, {\r\n        key: \"_headerScrollableConfig\",\r\n        value: function() {\r\n            var _this2 = this;\r\n            var config = {\r\n                useKeyboard: false,\r\n                showScrollbar: false,\r\n                direction: \"horizontal\",\r\n                useNative: false,\r\n                updateManually: true,\r\n                bounceEnabled: false,\r\n                pushBackValue: 0,\r\n                onScroll: function(e) {\r\n                    _this2._headerSemaphore.take();\r\n                    _this2._dataTableSemaphore.isFree() && _this2._dateTableScrollable.scrollTo({\r\n                        left: e.scrollOffset.left\r\n                    });\r\n                    _this2._headerSemaphore.release()\r\n                }\r\n            };\r\n            return config\r\n        }\r\n    }, {\r\n        key: \"_createSidebarScrollable\",\r\n        value: function() {\r\n            var _this3 = this;\r\n            var $timePanelScrollable = (0, _renderer.default)(\"<div>\").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this.$element());\r\n            this._sidebarScrollable = this._createComponent($timePanelScrollable, _ui2.default, {\r\n                useKeyboard: false,\r\n                showScrollbar: false,\r\n                direction: \"vertical\",\r\n                useNative: false,\r\n                updateManually: true,\r\n                bounceEnabled: false,\r\n                pushBackValue: 0,\r\n                onScroll: function(e) {\r\n                    _this3._sideBarSemaphore.take();\r\n                    _this3._dataTableSemaphore.isFree() && _this3._dateTableScrollable.scrollTo({\r\n                        top: e.scrollOffset.top\r\n                    });\r\n                    _this3._sideBarSemaphore.release()\r\n                }\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_visibilityChanged\",\r\n        value: function(visible) {\r\n            this.cache.clear();\r\n            if (visible && this._isVerticalGroupedWorkSpace()) {\r\n                this._setHorizontalGroupHeaderCellsHeight()\r\n            }\r\n            if (visible && this._needCreateCrossScrolling()) {\r\n                this._setTableSizes()\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_attachTableClasses\",\r\n        value: function() {\r\n            this._addTableClass(this._$dateTable, this._getDateTableClass());\r\n            if (this._isVerticalGroupedWorkSpace()) {\r\n                var groupCount = this._getGroupCount();\r\n                for (var i = 0; i < groupCount; i++) {\r\n                    this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS)\r\n                }\r\n            } else {\r\n                this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_attachHeaderTableClasses\",\r\n        value: function() {\r\n            this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS)\r\n        }\r\n    }, {\r\n        key: \"_addTableClass\",\r\n        value: function($el, className) {\r\n            $el && !$el.hasClass(className) && $el.addClass(className)\r\n        }\r\n    }, {\r\n        key: \"_setTableSizes\",\r\n        value: function() {\r\n            this._attachTableClasses();\r\n            var cellWidth = this.getCellWidth();\r\n            if (cellWidth < this.getCellMinWidth()) {\r\n                cellWidth = this.getCellMinWidth()\r\n            }\r\n            var minWidth = this.getWorkSpaceMinWidth();\r\n            var $headerCells = this._$headerPanel.find(\"tr\").last().find(\"th\");\r\n            var width = cellWidth * $headerCells.length;\r\n            if (width < minWidth) {\r\n                width = minWidth\r\n            }\r\n            this._$headerPanel.width(width);\r\n            this._$dateTable.width(width);\r\n            this._$allDayTable && this._$allDayTable.width(width);\r\n            this._attachHeaderTableClasses();\r\n            if (this._isVerticalGroupedWorkSpace()) {\r\n                this._setHorizontalGroupHeaderCellsHeight()\r\n            }\r\n        }\r\n    }, {\r\n        key: \"getWorkSpaceMinWidth\",\r\n        value: function() {\r\n            return this._groupedStrategy.getWorkSpaceMinWidth()\r\n        }\r\n    }, {\r\n        key: \"_dimensionChanged\",\r\n        value: function() {\r\n            if (this.option(\"crossScrollingEnabled\")) {\r\n                this._setTableSizes()\r\n            }\r\n            this.headerPanelOffsetRecalculate();\r\n            this.cache.clear();\r\n            this._cleanAllowedPositions()\r\n        }\r\n    }, {\r\n        key: \"_needCreateCrossScrolling\",\r\n        value: function() {\r\n            return this.option(\"crossScrollingEnabled\")\r\n        }\r\n    }, {\r\n        key: \"_getElementClass\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_getRowCount\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_getRowCountWithAllDayRows\",\r\n        value: function() {\r\n            var allDayRowCount = this._isShowAllDayPanel() ? 1 : 0;\r\n            return this._getRowCount() + allDayRowCount\r\n        }\r\n    }, {\r\n        key: \"_getCellCount\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_initMarkup\",\r\n        value: function() {\r\n            this.cache.clear();\r\n            this._initWorkSpaceUnits();\r\n            this._initDateTableScrollable();\r\n            this._createWorkSpaceElements();\r\n            this._initVirtualScrolling();\r\n            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_initMarkup\", this).call(this);\r\n            if (!this.option(\"crossScrollingEnabled\")) {\r\n                this._attachTableClasses();\r\n                this._attachHeaderTableClasses()\r\n            }\r\n            this._toggleGroupedClass();\r\n            this._toggleFixedScrollableClass();\r\n            this._renderView();\r\n            this._attachEvents();\r\n            this._setFocusOnCellByOption(this.option(\"selectedCellData\"))\r\n        }\r\n    }, {\r\n        key: \"isRenovatedRender\",\r\n        value: function() {\r\n            return this.renovatedRenderSupported() && this.option(\"renovateRender\")\r\n        }\r\n    }, {\r\n        key: \"_isVirtualModeOn\",\r\n        value: function() {\r\n            return \"virtual\" === this.option(\"scrolling.mode\")\r\n        }\r\n    }, {\r\n        key: \"isVirtualScrolling\",\r\n        value: function() {\r\n            return this.isRenovatedRender() && this._isVirtualModeOn()\r\n        }\r\n    }, {\r\n        key: \"_initVirtualScrolling\",\r\n        value: function() {\r\n            if (this.virtualScrollingDispatcher) {\r\n                this.virtualScrollingDispatcher.dispose();\r\n                this.virtualScrollingDispatcher = null\r\n            }\r\n            if (this.isVirtualScrolling()) {\r\n                this.virtualScrollingDispatcher = new _uiScheduler2.default(this)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_render\",\r\n        value: function() {\r\n            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_render\", this).call(this);\r\n            this._renderDateTimeIndication();\r\n            this._setIndicationUpdateInterval()\r\n        }\r\n    }, {\r\n        key: \"_toggleGroupedClass\",\r\n        value: function() {\r\n            this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0)\r\n        }\r\n    }, {\r\n        key: \"_toggleFixedScrollableClass\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_renderView\",\r\n        value: function() {\r\n            this._setFirstViewDate();\r\n            this._applyCellTemplates(this._renderGroupHeader());\r\n            this._renderDateHeader();\r\n            if (this.isRenovatedRender()) {\r\n                this.renderRWorkspace()\r\n            } else {\r\n                this._renderTimePanel();\r\n                this._renderGroupAllDayPanel();\r\n                this._renderDateTable();\r\n                this._renderAllDayPanel()\r\n            }\r\n            this._updateGroupTableHeight();\r\n            this._shader = new _uiSchedulerCurrent_time_shader.default(this)\r\n        }\r\n    }, {\r\n        key: \"isGroupedAllDayPanel\",\r\n        value: function() {\r\n            return this._isShowAllDayPanel() && this._isVerticalGroupedWorkSpace()\r\n        }\r\n    }, {\r\n        key: \"generateRenderOptions\",\r\n        value: function() {\r\n            var groupCount = this._getGroupCount();\r\n            var verticalGroupCount = !this._isVerticalGroupedWorkSpace() ? 1 : groupCount;\r\n            var horizontalGroupCount = this._isVerticalGroupedWorkSpace() ? 1 : groupCount;\r\n            var allDayElements = this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0;\r\n            var rowCountInGroup = this._getRowCount();\r\n            var cellCount = this._getTotalCellCount(groupCount);\r\n            var options = {\r\n                horizontalGroupCount: horizontalGroupCount,\r\n                verticalGroupCount: verticalGroupCount,\r\n                rowCountInGroup: rowCountInGroup,\r\n                cellCount: cellCount,\r\n                cellCountInGroupRow: this._getCellCount(),\r\n                cellDataGetters: [this._getCellData.bind(this)],\r\n                allDayElements: allDayElements,\r\n                startRowIndex: 0,\r\n                groupOrientation: this.option(\"groupOrientation\"),\r\n                nonVirtualRowCount: this._getRowCount(),\r\n                groupCount: groupCount\r\n            };\r\n            if (this.isVirtualScrolling()) {\r\n                (0, _extend.extend)(options, this.virtualScrollingDispatcher.renderState)\r\n            } else {\r\n                options.rowCount = this._getTotalRowCount(groupCount, this._isVerticalGroupedWorkSpace())\r\n            }\r\n            return options\r\n        }\r\n    }, {\r\n        key: \"renovatedRenderSupported\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"renderRWorkspace\",\r\n        value: function() {\r\n            var _this$virtualScrollin2;\r\n            var isGenerateNewViewData = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;\r\n            this._cleanAllowedPositions();\r\n            this.viewDataProvider.update(isGenerateNewViewData);\r\n            this.renderRAllDayPanel();\r\n            this.renderRTimeTable();\r\n            this.renderRDateTable();\r\n            this.updateRSelection();\r\n            null === (_this$virtualScrollin2 = this.virtualScrollingDispatcher) || void 0 === _this$virtualScrollin2 ? void 0 : _this$virtualScrollin2.updateDimensions()\r\n        }\r\n    }, {\r\n        key: \"renderRAllDayPanel\",\r\n        value: function() {\r\n            var visible = this._isShowAllDayPanel() && !this.isGroupedAllDayPanel();\r\n            if (visible) {\r\n                var options = {\r\n                    viewData: this.viewDataProvider.viewData,\r\n                    visible: visible,\r\n                    dataCellTemplate: this.option(\"dataCellTemplate\")\r\n                };\r\n                this.renderRComponent(this._$allDayPanel, _layout.default, \"renovatedAllDayPanel\", options);\r\n                this.renderRComponent(this._$allDayTitle, _title.default, \"renovatedAllDayPanelTitle\", {\r\n                    visible: visible\r\n                });\r\n                this._$allDayTable = this.renovatedAllDayPanel.$element().find(\".\".concat(ALL_DAY_TABLE_CLASS))\r\n            }\r\n            this._toggleAllDayVisibility()\r\n        }\r\n    }, {\r\n        key: \"renderRTimeTable\",\r\n        value: function() {\r\n            this.renderRComponent(this._$timePanel, _layout2.default, \"renovatedTimePanel\", {\r\n                viewData: this.viewDataProvider.viewData,\r\n                timeCellTemplate: this.option(\"timeCellTemplate\")\r\n            })\r\n        }\r\n    }, {\r\n        key: \"renderRDateTable\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"renderRComponent\",\r\n        value: function(parentElement, componentClass, componentName, viewModel) {\r\n            var component = this[componentName];\r\n            if (!component) {\r\n                var container = (0, _element.getPublicElement)(parentElement);\r\n                component = this._createComponent(container, componentClass, _objectSpread(_objectSpread({}, viewModel), {}, {\r\n                    groupOrientation: this.option(\"groupOrientation\")\r\n                }));\r\n                this[componentName] = component\r\n            } else {\r\n                Object.getOwnPropertyNames(viewModel).forEach(function(optionName) {\r\n                    component.option(optionName, viewModel[optionName])\r\n                })\r\n            }\r\n        }\r\n    }, {\r\n        key: \"updateRSelection\",\r\n        value: function() {\r\n            var isVerticalGrouping = this._isVerticalGroupedWorkSpace();\r\n            var focusedCell = this.virtualSelectionState.getFocusedCell(isVerticalGrouping);\r\n            var selectedCells = this.virtualSelectionState.getSelectedCells();\r\n            if (focusedCell) {\r\n                var coordinates = focusedCell.coordinates,\r\n                    cellData = focusedCell.cellData;\r\n                var $cell = !isVerticalGrouping && cellData.allDay ? this._dom_getAllDayPanelCell(coordinates.cellIndex) : this._dom_getDateCell(coordinates);\r\n                $cell && this._setFocusedCell($cell)\r\n            }\r\n            selectedCells && this._setSelectedCellsByCellData(selectedCells)\r\n        }\r\n    }, {\r\n        key: \"_updateGroupTableHeight\",\r\n        value: function() {\r\n            if (this._isVerticalGroupedWorkSpace() && (0, _window.hasWindow)()) {\r\n                this._setHorizontalGroupHeaderCellsHeight()\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_renderDateTimeIndication\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_setIndicationUpdateInterval\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_refreshDateTimeIndication\",\r\n        value: function() {\r\n            return (0, _common.noop)()\r\n        }\r\n    }, {\r\n        key: \"_setFocusOnCellByOption\",\r\n        value: function(data) {\r\n            this._releaseSelectedAndFocusedCells();\r\n            this._setSelectedCellsByCellData(data)\r\n        }\r\n    }, {\r\n        key: \"_setSelectedCellsByCellData\",\r\n        value: function(data) {\r\n            var _data$, _this4 = this;\r\n            var cells = [];\r\n            var $cells = this._getAllCells(null === data || void 0 === data ? void 0 : null === (_data$ = data[0]) || void 0 === _data$ ? void 0 : _data$.allDay);\r\n            var cellsInRow = this._getTotalCellCount(this._getGroupCount());\r\n            data.forEach(function(cellData) {\r\n                var groups = cellData.groups,\r\n                    startDate = cellData.startDate,\r\n                    allDay = cellData.allDay;\r\n                var groupIndex = cellData.groupIndex;\r\n                if (!groupIndex) {\r\n                    groupIndex = _this4._isGroupsSpecified(groups) ? _this4._getGroupIndexByResourceId(groups) : 0\r\n                }\r\n                var coordinates = _this4.isVirtualScrolling() ? _this4.viewDataProvider.findCellPositionInMap(groupIndex, startDate, allDay) : _this4.getCoordinatesByDate(startDate, groupIndex, allDay);\r\n                if (coordinates) {\r\n                    var rowIndex = coordinates.rowIndex,\r\n                        cellIndex = coordinates.cellIndex;\r\n                    var index = rowIndex * cellsInRow + cellIndex;\r\n                    var $cell = $cells[index];\r\n                    if ((0, _type.isDefined)($cell)) {\r\n                        _this4._toggleFocusClass(true, (0, _renderer.default)($cell));\r\n                        cells.push($cell)\r\n                    }\r\n                }\r\n            });\r\n            this._selectedCells = cells\r\n        }\r\n    }, {\r\n        key: \"_isGroupsSpecified\",\r\n        value: function(resources) {\r\n            return this.option(\"groups\").length && resources\r\n        }\r\n    }, {\r\n        key: \"_getGroupIndexByResourceId\",\r\n        value: function(id) {\r\n            var groups = this.option(\"groups\");\r\n            var resourceTree = this.invoke(\"createResourcesTree\", groups);\r\n            if (!resourceTree.length) {\r\n                return 0\r\n            }\r\n            return this._getGroupIndexRecursively(resourceTree, id)\r\n        }\r\n    }, {\r\n        key: \"_getGroupIndexRecursively\",\r\n        value: function(resourceTree, id) {\r\n            var _this5 = this;\r\n            var currentKey = resourceTree[0].name;\r\n            var currentValue = id[currentKey];\r\n            return resourceTree.reduce(function(prevIndex, _ref2) {\r\n                var leafIndex = _ref2.leafIndex,\r\n                    value = _ref2.value,\r\n                    children = _ref2.children;\r\n                var areValuesEqual = currentValue === value;\r\n                if (areValuesEqual && void 0 !== leafIndex) {\r\n                    return leafIndex\r\n                }\r\n                if (areValuesEqual) {\r\n                    return _this5._getGroupIndexRecursively(children, id)\r\n                }\r\n                return prevIndex\r\n            }, 0)\r\n        }\r\n    }, {\r\n        key: \"_setFirstViewDate\",\r\n        value: function() {\r\n            var firstDayOfWeek = (0, _type.isDefined)(this._firstDayOfWeek()) ? this._firstDayOfWeek() : _date2.default.firstDayOfWeekIndex();\r\n            this._firstViewDate = _date.default.getFirstWeekDate(this._getViewStartByOptions(), firstDayOfWeek);\r\n            this._setStartDayHour(this._firstViewDate)\r\n        }\r\n    }, {\r\n        key: \"_getViewStartByOptions\",\r\n        value: function() {\r\n            if (!this.option(\"startDate\")) {\r\n                return this.option(\"currentDate\")\r\n            } else {\r\n                var startDate = _date.default.trimTime(this._getStartViewDate());\r\n                var currentDate = this.option(\"currentDate\");\r\n                var diff = startDate.getTime() <= currentDate.getTime() ? 1 : -1;\r\n                var endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\r\n                while (!this._dateInRange(currentDate, startDate, endDate, diff)) {\r\n                    startDate = endDate;\r\n                    endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff)\r\n                }\r\n                return diff > 0 ? startDate : endDate\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getHeaderDate\",\r\n        value: function() {\r\n            return this.getStartViewDate()\r\n        }\r\n    }, {\r\n        key: \"_getStartViewDate\",\r\n        value: function() {\r\n            return this.option(\"startDate\")\r\n        }\r\n    }, {\r\n        key: \"_dateInRange\",\r\n        value: function(date, startDate, endDate, diff) {\r\n            return diff > 0 ? _date.default.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : _date.default.dateInRange(date, endDate, startDate, \"date\")\r\n        }\r\n    }, {\r\n        key: \"_getIntervalDuration\",\r\n        value: function() {\r\n            return toMs(\"day\") * this.option(\"intervalCount\")\r\n        }\r\n    }, {\r\n        key: \"_setStartDayHour\",\r\n        value: function(date) {\r\n            var startDayHour = this.option(\"startDayHour\");\r\n            if ((0, _type.isDefined)(startDayHour)) {\r\n                date.setHours(startDayHour, startDayHour % 1 * 60, 0, 0)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_firstDayOfWeek\",\r\n        value: function() {\r\n            return this.option(\"firstDayOfWeek\")\r\n        }\r\n    }, {\r\n        key: \"_attachEvents\",\r\n        value: function() {\r\n            this._createSelectionChangedAction();\r\n            this._attachClickEvent();\r\n            this._attachContextMenuEvent()\r\n        }\r\n    }, {\r\n        key: \"_attachClickEvent\",\r\n        value: function() {\r\n            var that = this;\r\n            var pointerDownAction = this._createAction(function(e) {\r\n                that._pointerDownHandler(e.event)\r\n            });\r\n            this._createCellClickAction();\r\n            var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\r\n            var $element = this.$element();\r\n            _events_engine.default.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);\r\n            _events_engine.default.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);\r\n            _events_engine.default.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function(e) {\r\n                if ((0, _index.isMouseEvent)(e) && e.which > 1) {\r\n                    e.preventDefault();\r\n                    return\r\n                }\r\n                pointerDownAction({\r\n                    event: e\r\n                })\r\n            });\r\n            _events_engine.default.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function(e) {\r\n                var $cell = (0, _renderer.default)(e.target);\r\n                that._cellClickAction({\r\n                    event: e,\r\n                    cellElement: (0, _element.getPublicElement)($cell),\r\n                    cellData: that.getCellData($cell)\r\n                })\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_createCellClickAction\",\r\n        value: function() {\r\n            var _this6 = this;\r\n            this._cellClickAction = this._createActionByOption(\"onCellClick\", {\r\n                afterExecute: function(e) {\r\n                    return _this6._cellClickHandler(e.args[0].event)\r\n                }\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_createSelectionChangedAction\",\r\n        value: function() {\r\n            this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n        }\r\n    }, {\r\n        key: \"_cellClickHandler\",\r\n        value: function(e) {\r\n            var $target = (0, _renderer.default)(e.target);\r\n            if (this._showPopup && this._hasFocusClass($target)) {\r\n                delete this._showPopup;\r\n                this._showAddAppointmentPopup($target)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_pointerDownHandler\",\r\n        value: function(e) {\r\n            var $target = (0, _renderer.default)(e.target);\r\n            if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {\r\n                this._isCellClick = false;\r\n                return\r\n            }\r\n            this._isCellClick = true;\r\n            if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\r\n                this._showPopup = true\r\n            } else {\r\n                this._setSelectedAndFocusedCells($target)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_showAddAppointmentPopup\",\r\n        value: function($cell) {\r\n            var firstCellData = this.getCellData($cell.first());\r\n            var lastCellData = this.getCellData($cell.last());\r\n            if (this.isVirtualScrolling()) {\r\n                var selectedCells = this.virtualSelectionState.getSelectedCells();\r\n                firstCellData = selectedCells[0];\r\n                lastCellData = selectedCells[selectedCells.length - 1]\r\n            }\r\n            var result = {\r\n                startDate: firstCellData.startDate,\r\n                endDate: lastCellData.endDate\r\n            };\r\n            if (void 0 !== lastCellData.allDay) {\r\n                result.allDay = lastCellData.allDay\r\n            }\r\n            this.invoke(\"showAddAppointmentPopup\", result, lastCellData.groups)\r\n        }\r\n    }, {\r\n        key: \"_attachContextMenuEvent\",\r\n        value: function() {\r\n            this._createContextMenuAction();\r\n            var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\r\n            var $element = this.$element();\r\n            var eventName = (0, _index.addNamespace)(_contextmenu.name, this.NAME);\r\n            _events_engine.default.off($element, eventName, cellSelector);\r\n            _events_engine.default.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this))\r\n        }\r\n    }, {\r\n        key: \"_contextMenuHandler\",\r\n        value: function(e) {\r\n            var $cell = (0, _renderer.default)(e.target);\r\n            this._contextMenuAction({\r\n                event: e,\r\n                cellElement: (0, _element.getPublicElement)($cell),\r\n                cellData: this.getCellData($cell)\r\n            });\r\n            this._contextMenuHandled = true\r\n        }\r\n    }, {\r\n        key: \"_createContextMenuAction\",\r\n        value: function() {\r\n            this._contextMenuAction = this._createActionByOption(\"onCellContextMenu\")\r\n        }\r\n    }, {\r\n        key: \"_getGroupHeaderContainer\",\r\n        value: function() {\r\n            if (this._isVerticalGroupedWorkSpace()) {\r\n                return this._$groupTable\r\n            }\r\n            return this._$thead\r\n        }\r\n    }, {\r\n        key: \"_getDateHeaderContainer\",\r\n        value: function() {\r\n            return this._$thead\r\n        }\r\n    }, {\r\n        key: \"_renderGroupHeader\",\r\n        value: function() {\r\n            var $container = this._getGroupHeaderContainer();\r\n            var groupCount = this._getGroupCount();\r\n            var cellTemplates = [];\r\n            if (groupCount) {\r\n                var groupRows = this._makeGroupRows(this.option(\"groups\"), this.option(\"groupByDate\"));\r\n                this._attachGroupCountAttr(groupCount, groupRows);\r\n                $container.append(groupRows.elements);\r\n                cellTemplates = groupRows.cellTemplates\r\n            } else {\r\n                this._detachGroupCountAttr()\r\n            }\r\n            return cellTemplates\r\n        }\r\n    }, {\r\n        key: \"_applyCellTemplates\",\r\n        value: function(templates) {\r\n            templates.forEach(function(template) {\r\n                template()\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_detachGroupCountAttr\",\r\n        value: function() {\r\n            var groupedAttr = this._groupedStrategy.getGroupCountAttr();\r\n            this.$element().removeAttr(groupedAttr.attr)\r\n        }\r\n    }, {\r\n        key: \"_attachGroupCountAttr\",\r\n        value: function(groupRowCount, groupRows) {\r\n            var groupedAttr = this._groupedStrategy.getGroupCountAttr(groupRowCount, groupRows);\r\n            this.$element().attr(groupedAttr.attr, groupedAttr.count)\r\n        }\r\n    }, {\r\n        key: \"headerPanelOffsetRecalculate\",\r\n        value: function() {\r\n            if (!this.option(\"resourceCellTemplate\") && !this.option(\"dateCellTemplate\")) {\r\n                return\r\n            }\r\n            var headerPanelHeight = this.getHeaderPanelHeight();\r\n            var headerHeight = this.invoke(\"getHeaderHeight\");\r\n            var allDayPanelHeight = this.supportAllDayRow() && this._isShowAllDayPanel() ? this._groupedStrategy.getAllDayTableHeight() : 0;\r\n            headerPanelHeight && this._headerScrollable && this._headerScrollable.$element().height(headerPanelHeight + allDayPanelHeight);\r\n            headerPanelHeight && this._dateTableScrollable.$element().css({\r\n                paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\r\n                marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\r\n            });\r\n            headerPanelHeight && this._sidebarScrollable && this._sidebarScrollable.$element().css({\r\n                paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\r\n                marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\r\n            });\r\n            this._$allDayTitle && this._$allDayTitle.css(\"top\", headerHeight + headerPanelHeight + \"px\")\r\n        }\r\n    }, {\r\n        key: \"_makeGroupRows\",\r\n        value: function(groups, groupByDate) {\r\n            var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\r\n            return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\r\n                groupHeaderRowClass: this._getGroupRowClass(),\r\n                groupRowClass: this._getGroupRowClass(),\r\n                groupHeaderClass: this._getGroupHeaderClass.bind(this),\r\n                groupHeaderContentClass: this._getGroupHeaderContentClass()\r\n            }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getGroupCount(), groupByDate)\r\n        }\r\n    }, {\r\n        key: \"_getDateHeaderTemplate\",\r\n        value: function() {\r\n            return this.option(\"dateCellTemplate\")\r\n        }\r\n    }, {\r\n        key: \"_renderDateHeader\",\r\n        value: function() {\r\n            var container = this._getDateHeaderContainer();\r\n            var $headerRow = (0, _renderer.default)(\"<tr>\").addClass(HEADER_ROW_CLASS);\r\n            var count = this._getCellCount();\r\n            var cellTemplate = this._getDateHeaderTemplate();\r\n            var repeatCount = this._getCalculateHeaderCellRepeatCount();\r\n            var templateCallbacks = [];\r\n            var groupByDate = this.isGroupedByDate();\r\n            if (!groupByDate) {\r\n                for (var rowIndex = 0; rowIndex < repeatCount; rowIndex++) {\r\n                    for (var cellIndex = 0; cellIndex < count; cellIndex++) {\r\n                        var templateIndex = rowIndex * repeatCount + cellIndex;\r\n                        this._renderDateHeaderTemplate($headerRow, cellIndex, templateIndex, cellTemplate, templateCallbacks)\r\n                    }\r\n                }\r\n                container.append($headerRow)\r\n            } else {\r\n                var colSpan = groupByDate ? this._getGroupCount() : 1;\r\n                for (var _cellIndex = 0; _cellIndex < count; _cellIndex++) {\r\n                    var _templateIndex = _cellIndex * repeatCount;\r\n                    var cellElement = this._renderDateHeaderTemplate($headerRow, _cellIndex, _templateIndex, cellTemplate, templateCallbacks);\r\n                    cellElement.attr(\"colSpan\", colSpan)\r\n                }\r\n                container.prepend($headerRow)\r\n            }\r\n            this._applyCellTemplates(templateCallbacks);\r\n            return $headerRow\r\n        }\r\n    }, {\r\n        key: \"_renderDateHeaderTemplate\",\r\n        value: function(container, panelCellIndex, templateIndex, cellTemplate, templateCallbacks) {\r\n            var text = this._getHeaderText(panelCellIndex);\r\n            var $cell = (0, _renderer.default)(\"<th>\").addClass(this._getHeaderPanelCellClass(panelCellIndex)).attr(\"title\", text);\r\n            if (null !== cellTemplate && void 0 !== cellTemplate && cellTemplate.render) {\r\n                templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {\r\n                    model: {\r\n                        text: text,\r\n                        date: this._getDateByIndex(panelCellIndex)\r\n                    },\r\n                    index: templateIndex,\r\n                    container: (0, _element.getPublicElement)($cell)\r\n                }))\r\n            } else {\r\n                $cell.text(text)\r\n            }\r\n            container.append($cell);\r\n            return $cell\r\n        }\r\n    }, {\r\n        key: \"_getHeaderPanelCellClass\",\r\n        value: function(i) {\r\n            var cellClass = HEADER_PANEL_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\r\n            return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1, void 0, void 0, this.isGroupedByDate())\r\n        }\r\n    }, {\r\n        key: \"_getCalculateHeaderCellRepeatCount\",\r\n        value: function() {\r\n            return this._groupedStrategy.calculateHeaderCellRepeatCount()\r\n        }\r\n    }, {\r\n        key: \"_renderAllDayPanel\",\r\n        value: function(index) {\r\n            var cellCount = this._getCellCount();\r\n            if (!this._isVerticalGroupedWorkSpace()) {\r\n                cellCount *= this._getGroupCount() || 1\r\n            }\r\n            var cellTemplates = this._renderTableBody({\r\n                container: this._allDayPanels.length ? (0, _element.getPublicElement)(this._allDayTables[index]) : (0, _element.getPublicElement)(this._$allDayTable),\r\n                rowCount: 1,\r\n                cellCount: cellCount,\r\n                cellClass: this._getAllDayPanelCellClass.bind(this),\r\n                rowClass: ALL_DAY_TABLE_ROW_CLASS,\r\n                cellTemplate: this.option(\"dataCellTemplate\"),\r\n                getCellData: this._getAllDayCellData.bind(this),\r\n                groupIndex: index\r\n            }, true);\r\n            this._toggleAllDayVisibility();\r\n            this._applyCellTemplates(cellTemplates)\r\n        }\r\n    }, {\r\n        key: \"_renderGroupAllDayPanel\",\r\n        value: function() {\r\n            if (this._isVerticalGroupedWorkSpace()) {\r\n                var groupCount = this._getGroupCount();\r\n                for (var i = 0; i < groupCount; i++) {\r\n                    this._renderAllDayPanel(i)\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getAllDayPanelCellClass\",\r\n        value: function(i, j) {\r\n            var cellClass = ALL_DAY_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\r\n            return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1)\r\n        }\r\n    }, {\r\n        key: \"_getAllDayCellData\",\r\n        value: function(cell, rowIndex, cellIndex, groupIndex) {\r\n            var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\r\n            var cellGroupIndex = groupIndex || this._getGroupIndex(rowIndex, cellIndex);\r\n            startDate = _date.default.trimTime(startDate);\r\n            var data = {\r\n                startDate: startDate,\r\n                endDate: startDate,\r\n                allDay: true,\r\n                groupIndex: cellGroupIndex\r\n            };\r\n            var groups = this._getCellGroups(cellGroupIndex);\r\n            if (groups.length) {\r\n                data.groups = {}\r\n            }\r\n            for (var i = 0; i < groups.length; i++) {\r\n                data.groups[groups[i].name] = groups[i].id\r\n            }\r\n            return {\r\n                key: CELL_DATA,\r\n                value: data\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_toggleAllDayVisibility\",\r\n        value: function() {\r\n            var showAllDayPanel = this._isShowAllDayPanel();\r\n            this._$allDayPanel.toggle(showAllDayPanel);\r\n            this._$allDayTitle && this._$allDayTitle.toggleClass(ALL_DAY_TITLE_HIDDEN_CLASS, !showAllDayPanel);\r\n            this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);\r\n            this._changeAllDayVisibility();\r\n            this._updateScrollable()\r\n        }\r\n    }, {\r\n        key: \"_changeAllDayVisibility\",\r\n        value: function() {\r\n            this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option(\"allDayExpanded\") && this._isShowAllDayPanel())\r\n        }\r\n    }, {\r\n        key: \"_updateScrollable\",\r\n        value: function() {\r\n            this._dateTableScrollable.update();\r\n            this._headerScrollable && this._headerScrollable.update();\r\n            this._sidebarScrollable && this._sidebarScrollable.update()\r\n        }\r\n    }, {\r\n        key: \"_renderTimePanel\",\r\n        value: function() {\r\n            var _this7 = this;\r\n            var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();\r\n            var startViewDate = _utils.default.getDateWithoutTimezoneChange(this.getStartViewDate());\r\n            var _getTimeText = function(i) {\r\n                var index = i % _this7._getRowCount();\r\n                if (index % 2 === 0) {\r\n                    return _date2.default.format(_this7._getTimeCellDateCore(startViewDate, i), \"shorttime\")\r\n                }\r\n                return \"\"\r\n            };\r\n            this._renderTableBody({\r\n                container: (0, _element.getPublicElement)(this._$timePanel),\r\n                rowCount: this._getTimePanelRowCount() * repeatCount,\r\n                cellCount: 1,\r\n                cellClass: this._getTimeCellClass.bind(this),\r\n                rowClass: TIME_PANEL_ROW_CLASS,\r\n                cellTemplate: this.option(\"timeCellTemplate\"),\r\n                getCellText: _getTimeText.bind(this),\r\n                getCellDate: this._getTimeCellDate.bind(this),\r\n                groupCount: this._getGroupCount(),\r\n                allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_getTimePanelRowCount\",\r\n        value: function() {\r\n            return this._getCellCountInDay()\r\n        }\r\n    }, {\r\n        key: \"_getCellCountInDay\",\r\n        value: function(skipRound) {\r\n            var result = this._calculateDayDuration() / this.option(\"hoursInterval\");\r\n            return skipRound ? result : Math.ceil(result)\r\n        }\r\n    }, {\r\n        key: \"_calculateDayDuration\",\r\n        value: function() {\r\n            return this.option(\"endDayHour\") - this.option(\"startDayHour\")\r\n        }\r\n    }, {\r\n        key: \"_getTimeCellClass\",\r\n        value: function(i) {\r\n            var cellClass = TIME_PANEL_CELL_CLASS + \" \" + VERTICAL_SIZES_CLASS;\r\n            return this._isVerticalGroupedWorkSpace() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i) : cellClass\r\n        }\r\n    }, {\r\n        key: \"_getTimeCellDate\",\r\n        value: function(i) {\r\n            return this._getTimeCellDateCore(this.getStartViewDate(), i)\r\n        }\r\n    }, {\r\n        key: \"_getTimeCellDateCore\",\r\n        value: function(startViewDate, i) {\r\n            var result = new Date(startViewDate);\r\n            var timeCellDuration = Math.round(this.getCellDuration());\r\n            var cellCountInDay = this._getCellCountInDay(true);\r\n            result.setMilliseconds(result.getMilliseconds() + timeCellDuration * (i % cellCountInDay));\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_renderDateTable\",\r\n        value: function() {\r\n            var groupCount = this._getGroupCount();\r\n            this._renderTableBody({\r\n                container: (0, _element.getPublicElement)(this._$dateTable),\r\n                rowCount: this._getTotalRowCount(groupCount),\r\n                cellCount: this._getTotalCellCount(groupCount),\r\n                cellClass: this._getDateTableCellClass.bind(this),\r\n                rowClass: this._getDateTableRowClass(),\r\n                cellTemplate: this.option(\"dataCellTemplate\"),\r\n                getCellData: this._getCellData.bind(this),\r\n                allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,\r\n                groupCount: groupCount,\r\n                groupByDate: this.option(\"groupByDate\")\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_insertAllDayRowsIntoDateTable\",\r\n        value: function() {\r\n            return this._groupedStrategy.insertAllDayRowsIntoDateTable()\r\n        }\r\n    }, {\r\n        key: \"_getTotalCellCount\",\r\n        value: function(groupCount) {\r\n            return this._groupedStrategy.getTotalCellCount(groupCount)\r\n        }\r\n    }, {\r\n        key: \"_getTotalRowCount\",\r\n        value: function(groupCount, includeAllDayPanelRows) {\r\n            var result = this._groupedStrategy.getTotalRowCount(groupCount);\r\n            if (includeAllDayPanelRows && groupCount > 1 && this._isShowAllDayPanel()) {\r\n                result += groupCount\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getCellData\",\r\n        value: function(cell, rowIndex, cellIndex) {\r\n            var data = this._prepareCellData(rowIndex, cellIndex, cell);\r\n            return {\r\n                key: CELL_DATA,\r\n                value: data\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_prepareCellData\",\r\n        value: function(rowIndex, cellIndex) {\r\n            var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\r\n            var endDate = this.calculateEndDate(startDate);\r\n            var groupIndex = this._getGroupIndex(rowIndex, cellIndex);\r\n            var data = {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                allDay: this._getTableAllDay(),\r\n                groupIndex: groupIndex\r\n            };\r\n            var groups = this._getCellGroups(groupIndex);\r\n            if (groups.length) {\r\n                data.groups = {}\r\n            }\r\n            for (var i = 0; i < groups.length; i++) {\r\n                data.groups[groups[i].name] = groups[i].id\r\n            }\r\n            return data\r\n        }\r\n    }, {\r\n        key: \"_getGroupIndex\",\r\n        value: function(rowIndex, cellIndex) {\r\n            return this._groupedStrategy.getGroupIndex(rowIndex, cellIndex)\r\n        }\r\n    }, {\r\n        key: \"_getTableAllDay\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"calculateEndDate\",\r\n        value: function(startDate) {\r\n            var result = new Date(startDate);\r\n            result.setMilliseconds(result.getMilliseconds() + Math.round(this._getInterval()));\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getGroupCount\",\r\n        value: function() {\r\n            var groups = this.option(\"groups\");\r\n            var result = 0;\r\n            for (var i = 0, len = groups.length; i < len; i++) {\r\n                if (!i) {\r\n                    result = groups[i].items.length\r\n                } else {\r\n                    result *= groups[i].items.length\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getPathToLeaf\",\r\n        value: function(leafIndex) {\r\n            var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\r\n\r\n            function findLeafByIndex(data, index) {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    if (data[i].leafIndex === index) {\r\n                        return data[i]\r\n                    } else {\r\n                        var _leaf = findLeafByIndex(data[i].children, index);\r\n                        if (_leaf) {\r\n                            return _leaf\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function makeBranch(leaf, result) {\r\n                result = result || [];\r\n                result.push(leaf.value);\r\n                if (leaf.parent) {\r\n                    makeBranch(leaf.parent, result)\r\n                }\r\n                return result\r\n            }\r\n            var leaf = findLeafByIndex(tree, leafIndex);\r\n            return makeBranch(leaf).reverse()\r\n        }\r\n    }, {\r\n        key: \"_getCellGroups\",\r\n        value: function(groupIndex) {\r\n            var result = [];\r\n            if (this._getGroupCount()) {\r\n                var groups = this.option(\"groups\");\r\n                if (groupIndex < 0) {\r\n                    return\r\n                }\r\n                var path = this._getPathToLeaf(groupIndex);\r\n                for (var i = 0; i < groups.length; i++) {\r\n                    result.push({\r\n                        name: groups[i].name,\r\n                        id: path[i]\r\n                    })\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_attachTablesEvents\",\r\n        value: function() {\r\n            var _this8 = this;\r\n            var that = this;\r\n            var isPointerDown = false;\r\n            var cellHeight;\r\n            var cellWidth;\r\n            var $element = this.$element();\r\n            _events_engine.default.off($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME);\r\n            _events_engine.default.off($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME);\r\n            _events_engine.default.off($element, SCHEDULER_CELL_DXDROP_EVENT_NAME);\r\n            _events_engine.default.off($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);\r\n            _events_engine.default.off($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);\r\n            _events_engine.default.on($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, {\r\n                itemSizeFunc: function($element) {\r\n                    if (!cellHeight) {\r\n                        cellHeight = (0, _position.getBoundingRect)($element.get(0)).height\r\n                    }\r\n                    if (!cellWidth) {\r\n                        cellWidth = (0, _position.getBoundingRect)($element.get(0)).width\r\n                    }\r\n                    return {\r\n                        width: cellWidth,\r\n                        height: cellHeight\r\n                    }\r\n                },\r\n                checkDropTarget: function(target, event) {\r\n                    return !_this8._isOutsideScrollable(target, event)\r\n                }\r\n            }, function(e) {\r\n                if (that._$currentTableTarget) {\r\n                    that.removeDroppableCellClass(that._$currentTableTarget)\r\n                }\r\n                that._$currentTableTarget = (0, _renderer.default)(e.target);\r\n                that._$currentTableTarget.addClass(DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n            });\r\n            _events_engine.default.on($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME, function(e) {\r\n                if (!$element.find((0, _renderer.default)(e.draggingElement)).length) {\r\n                    that.removeDroppableCellClass()\r\n                }\r\n            });\r\n            _events_engine.default.on($element, SCHEDULER_CELL_DXDROP_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n                that.removeDroppableCellClass((0, _renderer.default)(e.target));\r\n                cellHeight = 0;\r\n                cellWidth = 0\r\n            });\r\n            _events_engine.default.on($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n                if ((0, _index.isMouseEvent)(e) && 1 === e.which) {\r\n                    isPointerDown = true;\r\n                    that.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\r\n                    _events_engine.default.off(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\r\n                    _events_engine.default.on(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function() {\r\n                        isPointerDown = false;\r\n                        that.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS)\r\n                    })\r\n                }\r\n            });\r\n            _events_engine.default.on($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n                if (isPointerDown && that._dateTableScrollable && !that._dateTableScrollable.option(\"scrollByContent\")) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    that._moveToCell((0, _renderer.default)(e.target), true)\r\n                }\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_getDateTables\",\r\n        value: function() {\r\n            return this._$dateTable.add(this._$allDayTable)\r\n        }\r\n    }, {\r\n        key: \"_getDateTable\",\r\n        value: function() {\r\n            return this._$dateTable\r\n        }\r\n    }, {\r\n        key: \"_getAllDayTable\",\r\n        value: function() {\r\n            return this._$allDayTable\r\n        }\r\n    }, {\r\n        key: \"_getInterval\",\r\n        value: function() {\r\n            if (void 0 === this._interval) {\r\n                this._interval = this.option(\"hoursInterval\") * HOUR_MS\r\n            }\r\n            return this._interval\r\n        }\r\n    }, {\r\n        key: \"_getHeaderText\",\r\n        value: function(headerIndex) {\r\n            return _date2.default.format(this._getDateForHeaderText(headerIndex), this._getFormat())\r\n        }\r\n    }, {\r\n        key: \"_getDateForHeaderText\",\r\n        value: function(index) {\r\n            return this._getDateByIndex(index)\r\n        }\r\n    }, {\r\n        key: \"_getDateByIndex\",\r\n        value: function() {\r\n            return abstract()\r\n        }\r\n    }, {\r\n        key: \"_getFormat\",\r\n        value: function() {\r\n            return abstract()\r\n        }\r\n    }, {\r\n        key: \"_calculateCellIndex\",\r\n        value: function(rowIndex, cellIndex) {\r\n            return this._groupedStrategy.calculateCellIndex(rowIndex, cellIndex)\r\n        }\r\n    }, {\r\n        key: \"_renderTableBody\",\r\n        value: function(options, delayCellTemplateRendering) {\r\n            var result = [];\r\n            if (!delayCellTemplateRendering) {\r\n                this._applyCellTemplates(tableCreator.makeTable(options))\r\n            } else {\r\n                result = tableCreator.makeTable(options)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_removeAllDayElements\",\r\n        value: function() {\r\n            this._$allDayTable && this._$allDayTable.remove();\r\n            this._$allDayTitle && this._$allDayTitle.remove()\r\n        }\r\n    }, {\r\n        key: \"_cleanView\",\r\n        value: function() {\r\n            var _this$virtualSelectio2;\r\n            this.cache.clear();\r\n            this._cleanAllowedPositions();\r\n            null === (_this$virtualSelectio2 = this.virtualSelectionState) || void 0 === _this$virtualSelectio2 ? void 0 : _this$virtualSelectio2.releaseSelectedAndFocusedCells();\r\n            this._$thead.empty();\r\n            this._$dateTable.empty();\r\n            this._shader && this._shader.clean();\r\n            this._$timePanel.empty();\r\n            this._$allDayTable && this._$allDayTable.empty();\r\n            this._$groupTable.empty();\r\n            delete this._hiddenInterval;\r\n            delete this._interval\r\n        }\r\n    }, {\r\n        key: \"_clean\",\r\n        value: function() {\r\n            _events_engine.default.off(_dom_adapter.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\r\n            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), \"_clean\", this).call(this)\r\n        }\r\n    }, {\r\n        key: \"_disposeRenovatedComponents\",\r\n        value: function() {\r\n            var _this$renovatedAllDay, _this$renovatedDateTa, _this$renovatedTimePa;\r\n            null === (_this$renovatedAllDay = this.renovatedAllDayPanel) || void 0 === _this$renovatedAllDay ? void 0 : _this$renovatedAllDay.dispose();\r\n            this.renovatedAllDayPanel = void 0;\r\n            null === (_this$renovatedDateTa = this.renovatedDateTable) || void 0 === _this$renovatedDateTa ? void 0 : _this$renovatedDateTa.dispose();\r\n            this.renovatedDateTable = void 0;\r\n            null === (_this$renovatedTimePa = this.renovatedTimePanel) || void 0 === _this$renovatedTimePa ? void 0 : _this$renovatedTimePa.dispose();\r\n            this.renovatedTimePanel = void 0\r\n        }\r\n    }, {\r\n        key: \"getWorkArea\",\r\n        value: function() {\r\n            return this._dateTableScrollable.$content()\r\n        }\r\n    }, {\r\n        key: \"getScrollable\",\r\n        value: function() {\r\n            return this._dateTableScrollable\r\n        }\r\n    }, {\r\n        key: \"getScrollableScrollTop\",\r\n        value: function() {\r\n            return this._dateTableScrollable.scrollTop()\r\n        }\r\n    }, {\r\n        key: \"getGroupedScrollableScrollTop\",\r\n        value: function(allDay) {\r\n            return this._groupedStrategy.getScrollableScrollTop(allDay)\r\n        }\r\n    }, {\r\n        key: \"getScrollableScrollLeft\",\r\n        value: function() {\r\n            return this._dateTableScrollable.scrollLeft()\r\n        }\r\n    }, {\r\n        key: \"getScrollableOuterWidth\",\r\n        value: function() {\r\n            return this._dateTableScrollable.scrollWidth()\r\n        }\r\n    }, {\r\n        key: \"getScrollableContainer\",\r\n        value: function() {\r\n            return this._dateTableScrollable._container()\r\n        }\r\n    }, {\r\n        key: \"getHeaderPanelHeight\",\r\n        value: function() {\r\n            return this._$headerPanel && this._$headerPanel.outerHeight(true)\r\n        }\r\n    }, {\r\n        key: \"getTimePanelWidth\",\r\n        value: function() {\r\n            return this._$timePanel && (0, _position.getBoundingRect)(this._$timePanel.get(0)).width\r\n        }\r\n    }, {\r\n        key: \"getGroupTableWidth\",\r\n        value: function() {\r\n            return this._$groupTable ? this._$groupTable.outerWidth() : 0\r\n        }\r\n    }, {\r\n        key: \"getWorkSpaceLeftOffset\",\r\n        value: function() {\r\n            return this._groupedStrategy.getLeftOffset()\r\n        }\r\n    }, {\r\n        key: \"getGroupedStrategy\",\r\n        value: function() {\r\n            return this._groupedStrategy\r\n        }\r\n    }, {\r\n        key: \"_getCellCoordinatesByIndex\",\r\n        value: function(index) {\r\n            var cellIndex = Math.floor(index / this._getRowCount());\r\n            var rowIndex = index - this._getRowCount() * cellIndex;\r\n            return {\r\n                cellIndex: cellIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getDateByCellIndexes\",\r\n        value: function(rowIndex, cellIndex, patchedIndexes) {\r\n            cellIndex = !patchedIndexes ? this._patchCellIndex(cellIndex) : cellIndex;\r\n            var firstViewDate = this.getStartViewDate();\r\n            var currentDate = new Date(firstViewDate.getTime() + this._getMillisecondsOffset(rowIndex, cellIndex) + this._getOffsetByCount(cellIndex));\r\n            currentDate.setTime(currentDate.getTime() + _date.default.getTimezonesDifference(firstViewDate, currentDate));\r\n            return currentDate\r\n        }\r\n    }, {\r\n        key: \"_patchCellIndex\",\r\n        value: function(cellIndex) {\r\n            if (this.isGroupedByDate()) {\r\n                cellIndex = Math.floor(cellIndex / this._getGroupCount())\r\n            }\r\n            return cellIndex\r\n        }\r\n    }, {\r\n        key: \"_getOffsetByCount\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"_getMillisecondsOffset\",\r\n        value: function(rowIndex, cellIndex) {\r\n            return this._getInterval() * this._calculateCellIndex(rowIndex, cellIndex) + this._calculateHiddenInterval(rowIndex, cellIndex)\r\n        }\r\n    }, {\r\n        key: \"_calculateHiddenInterval\",\r\n        value: function(rowIndex, cellIndex) {\r\n            var dayCount = cellIndex % this._getCellCount();\r\n            return dayCount * this._getHiddenInterval()\r\n        }\r\n    }, {\r\n        key: \"_getHiddenInterval\",\r\n        value: function() {\r\n            if (void 0 === this._hiddenInterval) {\r\n                this._hiddenInterval = DAY_MS - this.getVisibleDayDuration()\r\n            }\r\n            return this._hiddenInterval\r\n        }\r\n    }, {\r\n        key: \"_getIntervalBetween\",\r\n        value: function(currentDate, allDay) {\r\n            var firstViewDate = this.getStartViewDate();\r\n            var startDayTime = this.option(\"startDayHour\") * HOUR_MS;\r\n            var timeZoneOffset = _date.default.getTimezonesDifference(firstViewDate, currentDate);\r\n            var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;\r\n            var days = this._getDaysOfInterval(fullInterval, startDayTime);\r\n            var weekendsCount = this._getWeekendsCount(days);\r\n            var result = (days - weekendsCount) * DAY_MS;\r\n            if (!allDay) {\r\n                result = fullInterval - days * this._getHiddenInterval() - weekendsCount * this.getVisibleDayDuration()\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getWeekendsCount\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"_getDaysOfInterval\",\r\n        value: function(fullInterval, startDayTime) {\r\n            return Math.floor((fullInterval + startDayTime) / DAY_MS)\r\n        }\r\n    }, {\r\n        key: \"_getGroupIndexes\",\r\n        value: function(appointmentResources) {\r\n            var result = [];\r\n            if (this._isGroupsSpecified(appointmentResources)) {\r\n                var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\r\n                result = this.invoke(\"getResourceTreeLeaves\", tree, appointmentResources)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_updateIndex\",\r\n        value: function(index) {\r\n            return index * this._getRowCount()\r\n        }\r\n    }, {\r\n        key: \"_getDroppableCell\",\r\n        value: function() {\r\n            return this._getDateTables().find(\".\" + DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n        }\r\n    }, {\r\n        key: \"_getWorkSpaceWidth\",\r\n        value: function() {\r\n            var _this9 = this;\r\n            return this.cache.get(\"workspaceWidth\", function() {\r\n                if (_this9._needCreateCrossScrolling()) {\r\n                    return (0, _position.getBoundingRect)(_this9._$dateTable.get(0)).width\r\n                }\r\n                return (0, _position.getBoundingRect)(_this9.$element().get(0)).width - _this9.getTimePanelWidth()\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_getCellPositionByIndex\",\r\n        value: function(index, groupIndex, inAllDayRow) {\r\n            var cellCoordinates = this._getCellCoordinatesByIndex(index);\r\n            var $cell = this._getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow);\r\n            return this._getCellPositionWithCache($cell, cellCoordinates, groupIndex)\r\n        }\r\n    }, {\r\n        key: \"_getCellPositionWithCache\",\r\n        value: function($cell, cellCoordinates, groupIndex) {\r\n            var result = this._getCellPosition($cell);\r\n            this.setCellDataCache(cellCoordinates, groupIndex, $cell);\r\n            if (result) {\r\n                result.rowIndex = cellCoordinates.rowIndex;\r\n                result.cellIndex = cellCoordinates.cellIndex\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getCellPosition\",\r\n        value: function($cell) {\r\n            var position = $cell.position();\r\n            if (this.option(\"rtlEnabled\")) {\r\n                position.left += (0, _position.getBoundingRect)($cell.get(0)).width\r\n            }\r\n            return position\r\n        }\r\n    }, {\r\n        key: \"_getCellByCoordinates\",\r\n        value: function(cellCoordinates, groupIndex, inAllDayRow) {\r\n            var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);\r\n            return this._dom_getDateCell(indexes)\r\n        }\r\n    }, {\r\n        key: \"_dom_getDateCell\",\r\n        value: function(position) {\r\n            return this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).eq(position.rowIndex).find(\"td\").eq(position.cellIndex)\r\n        }\r\n    }, {\r\n        key: \"_dom_getAllDayPanelCell\",\r\n        value: function(cellIndex) {\r\n            return this._$allDayPanel.find(\"tr\").eq(0).find(\"td\").eq(cellIndex)\r\n        }\r\n    }, {\r\n        key: \"_getCells\",\r\n        value: function(allDay, direction) {\r\n            var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\r\n            if (\"vertical\" === direction) {\r\n                var result = [];\r\n                for (var i = 1;; i++) {\r\n                    var cells = this.$element().find(\"tr .\".concat(cellClass, \":nth-child(\").concat(i, \")\"));\r\n                    if (!cells.length) {\r\n                        break\r\n                    }\r\n                    result = result.concat(cells.toArray())\r\n                }\r\n                return (0, _renderer.default)(result)\r\n            } else {\r\n                return this.$element().find(\".\" + cellClass)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getAllCells\",\r\n        value: function(allDay) {\r\n            if (this._isVerticalGroupedWorkSpace()) {\r\n                return this._$dateTable.find(\"td:not(.\".concat(VIRTUAL_CELL_CLASS, \")\"))\r\n            }\r\n            var cellClass = allDay && this.supportAllDayRow() ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\r\n            return this.$element().find(\".\" + cellClass)\r\n        }\r\n    }, {\r\n        key: \"_setHorizontalGroupHeaderCellsHeight\",\r\n        value: function() {\r\n            var height = (0, _position.getBoundingRect)(this._$dateTable.get(0)).height;\r\n            this._$groupTable.outerHeight(height)\r\n        }\r\n    }, {\r\n        key: \"_getDateTableBorder\",\r\n        value: function() {\r\n            return DATE_TABLE_CELL_BORDER\r\n        }\r\n    }, {\r\n        key: \"_getDateTableBorderOffset\",\r\n        value: function() {\r\n            return 2 * this._getDateTableBorder()\r\n        }\r\n    }, {\r\n        key: \"_getGroupHeaderCellsContent\",\r\n        value: function() {\r\n            return this.$element().find(\".\" + GROUP_HEADER_CONTENT_CLASS)\r\n        }\r\n    }, {\r\n        key: \"_getGroupHeaderCells\",\r\n        value: function() {\r\n            return this.$element().find(\".\" + GROUP_HEADER_CLASS)\r\n        }\r\n    }, {\r\n        key: \"_getScrollCoordinates\",\r\n        value: function(hours, minutes, date, groupIndex, allDay) {\r\n            var currentDate = date || new Date(this.option(\"currentDate\"));\r\n            var startDayHour = this.option(\"startDayHour\");\r\n            var endDayHour = this.option(\"endDayHour\");\r\n            if (hours < startDayHour) {\r\n                hours = startDayHour\r\n            }\r\n            if (hours >= endDayHour) {\r\n                hours = endDayHour - 1\r\n            }\r\n            currentDate.setHours(hours, minutes, 0, 0);\r\n            if (!this.isVirtualScrolling()) {\r\n                return this.getCoordinatesByDate(currentDate, groupIndex, allDay)\r\n            }\r\n            var cell = this.viewDataProvider.findGlobalCellPosition(currentDate, groupIndex, allDay);\r\n            var position = cell.position,\r\n                cellData = cell.cellData;\r\n            return this.virtualScrollingDispatcher.calculateCoordinatesByDataAndPosition(cellData, position, currentDate)\r\n        }\r\n    }, {\r\n        key: \"_isOutsideScrollable\",\r\n        value: function(target, event) {\r\n            var $dateTableScrollableElement = this._dateTableScrollable.$element();\r\n            var scrollableSize = (0, _position.getBoundingRect)($dateTableScrollableElement.get(0));\r\n            var window = (0, _window.getWindow)();\r\n            var isTargetInAllDayPanel = !(0, _renderer.default)(target).closest($dateTableScrollableElement).length;\r\n            var isOutsideHorizontalScrollable = event.pageX < scrollableSize.left || event.pageX > scrollableSize.left + scrollableSize.width + (window.scrollX || 0);\r\n            var isOutsideVerticalScrollable = event.pageY < scrollableSize.top || event.pageY > scrollableSize.top + scrollableSize.height + (window.scrollY || 0);\r\n            if (isTargetInAllDayPanel && !isOutsideHorizontalScrollable) {\r\n                return false\r\n            }\r\n            return isOutsideVerticalScrollable || isOutsideHorizontalScrollable\r\n        }\r\n    }, {\r\n        key: \"setCellDataCache\",\r\n        value: function(cellCoordinates, groupIndex, $cell) {\r\n            var key = JSON.stringify({\r\n                rowIndex: cellCoordinates.rowIndex,\r\n                cellIndex: cellCoordinates.cellIndex,\r\n                groupIndex: groupIndex\r\n            });\r\n            this.cache.set(key, this.getCellData($cell))\r\n        }\r\n    }, {\r\n        key: \"setCellDataCacheAlias\",\r\n        value: function(appointment, geometry) {\r\n            var key = JSON.stringify({\r\n                rowIndex: appointment.rowIndex,\r\n                cellIndex: appointment.cellIndex,\r\n                groupIndex: appointment.groupIndex\r\n            });\r\n            var aliasKey = JSON.stringify({\r\n                top: geometry.top,\r\n                left: geometry.left\r\n            });\r\n            this.cache.set(aliasKey, this.cache.get(key))\r\n        }\r\n    }, {\r\n        key: \"_cleanAllowedPositions\",\r\n        value: function() {\r\n            this._maxAllowedVerticalPosition = [];\r\n            this._maxAllowedPosition = []\r\n        }\r\n    }, {\r\n        key: \"supportAllDayRow\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"keepOriginalHours\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"getSelectedCellData\",\r\n        value: function() {\r\n            if (this.isVirtualScrolling()) {\r\n                return this.virtualSelectionState.getSelectedCells()\r\n            }\r\n            var $focusedCells = this._getAllFocusedCells();\r\n            var result = [];\r\n            if ($focusedCells.length > 1) {\r\n                result = this._getMultipleCellsData($focusedCells)\r\n            } else {\r\n                var data = this.getCellData((0, _renderer.default)($focusedCells[0]));\r\n                data && result.push(data)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getMultipleCellsData\",\r\n        value: function($cells) {\r\n            var data = [];\r\n            for (var i = 0; i < $cells.length; i++) {\r\n                data.push(this.getCellData((0, _renderer.default)($cells[i])))\r\n            }\r\n            return data\r\n        }\r\n    }, {\r\n        key: \"getCellData\",\r\n        value: function($cell) {\r\n            var data;\r\n            var currentCell = $cell[0];\r\n            if (currentCell) {\r\n                if (this.isRenovatedRender()) {\r\n                    data = this._getCellDataInRenovatedView($cell)\r\n                } else {\r\n                    data = (0, _element_data.data)(currentCell, CELL_DATA)\r\n                }\r\n            }\r\n            return (0, _extend.extend)(true, {}, data)\r\n        }\r\n    }, {\r\n        key: \"_getVirtualRowOffset\",\r\n        value: function() {\r\n            return this.isVirtualScrolling() ? this.virtualScrollingDispatcher.verticalScrollingState.virtualItemSizeBefore : 0\r\n        }\r\n    }, {\r\n        key: \"_getCellDataInRenovatedView\",\r\n        value: function($cell) {\r\n            var rowIndex = $cell.parent().index();\r\n            if (this.isVirtualScrolling()) {\r\n                rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount\r\n            }\r\n            var columnIndex = $cell.index();\r\n            var viewDataProvider = this.viewDataProvider;\r\n            var isAllDayCell = this._hasAllDayClass($cell);\r\n            var cellData = viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell);\r\n            return cellData ? {\r\n                startDate: cellData.startDate,\r\n                endDate: cellData.endDate,\r\n                groups: cellData.groups,\r\n                groupIndex: cellData.groupIndex,\r\n                allDay: cellData.allDay,\r\n                text: cellData.text\r\n            } : void 0\r\n        }\r\n    }, {\r\n        key: \"_getHorizontalMax\",\r\n        value: function(groupIndex) {\r\n            groupIndex = this.isGroupedByDate() ? this._getGroupCount() - 1 : groupIndex;\r\n            return this._groupedStrategy.getHorizontalMax(groupIndex)\r\n        }\r\n    }, {\r\n        key: \"getCoordinatesByDate\",\r\n        value: function(date, groupIndex, inAllDayRow) {\r\n            groupIndex = groupIndex || 0;\r\n            var position;\r\n            var shouldFindPositionByViewData = this.isVirtualScrolling() && (!inAllDayRow || this._isVerticalGroupedWorkSpace());\r\n            if (shouldFindPositionByViewData) {\r\n                var positionByMap = this.viewDataProvider.findCellPositionInMap(groupIndex, date, inAllDayRow);\r\n                if (!positionByMap) {\r\n                    return\r\n                }\r\n                var $cell = this._dom_getDateCell(positionByMap);\r\n                position = this._getCellPositionWithCache($cell, positionByMap, groupIndex)\r\n            } else {\r\n                position = this.calculateCellPositionByView(date, groupIndex, inAllDayRow)\r\n            }\r\n            var shift = this.getPositionShift(inAllDayRow ? 0 : this.getTimeShift(date), inAllDayRow);\r\n            var horizontalHMax = this._getHorizontalMax(groupIndex, date);\r\n            if (!position) {\r\n                throw _ui.default.Error(\"E1039\")\r\n            }\r\n            return {\r\n                cellPosition: position.left + shift.cellPosition,\r\n                top: position.top + shift.top,\r\n                left: position.left + shift.left,\r\n                rowIndex: position.rowIndex,\r\n                cellIndex: position.cellIndex,\r\n                hMax: horizontalHMax,\r\n                vMax: this.getVerticalMax(groupIndex),\r\n                groupIndex: groupIndex\r\n            }\r\n        }\r\n    }, {\r\n        key: \"calculateCellPositionByView\",\r\n        value: function(date, groupIndex, inAllDayRow) {\r\n            var index = this.getCellIndexByDate(date, inAllDayRow);\r\n            var position = this._getCellPositionByIndex(index, groupIndex, inAllDayRow);\r\n            if (position) {\r\n                position.top -= this._getVirtualRowOffset()\r\n            }\r\n            return position\r\n        }\r\n    }, {\r\n        key: \"getVerticalMax\",\r\n        value: function(groupIndex) {\r\n            return this._groupedStrategy.getVerticalMax(groupIndex)\r\n        }\r\n    }, {\r\n        key: \"_getOffsetByAllDayPanel\",\r\n        value: function(groupIndex) {\r\n            return this._groupedStrategy._getOffsetByAllDayPanel(groupIndex)\r\n        }\r\n    }, {\r\n        key: \"_getGroupTop\",\r\n        value: function(groupIndex) {\r\n            return this._groupedStrategy._getGroupTop(groupIndex)\r\n        }\r\n    }, {\r\n        key: \"isGroupedByDate\",\r\n        value: function() {\r\n            return this.option(\"groupByDate\") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0\r\n        }\r\n    }, {\r\n        key: \"getCellIndexByDate\",\r\n        value: function(date, inAllDayRow) {\r\n            var timeInterval = inAllDayRow ? 864e5 : this._getInterval();\r\n            var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow);\r\n            var index = Math.floor(dateTimeStamp / timeInterval);\r\n            if (inAllDayRow) {\r\n                index = this._updateIndex(index)\r\n            }\r\n            if (index < 0) {\r\n                index = 0\r\n            }\r\n            return index\r\n        }\r\n    }, {\r\n        key: \"getPositionShift\",\r\n        value: function(timeShift, isAllDay) {\r\n            return {\r\n                top: timeShift * this.getCellHeight(),\r\n                left: 0,\r\n                cellPosition: 0\r\n            }\r\n        }\r\n    }, {\r\n        key: \"getTimeShift\",\r\n        value: function(date) {\r\n            var currentDayStart = new Date(date);\r\n            var cellDuration = this.getCellDuration();\r\n            var currentDayEndHour = new Date(new Date(date).setHours(this.option(\"endDayHour\"), 0, 0));\r\n            if (date.getTime() <= currentDayEndHour.getTime()) {\r\n                currentDayStart.setHours(this.option(\"startDayHour\"), 0, 0, 0)\r\n            }\r\n            var currentDateTime = date.getTime();\r\n            var currentDayStartTime = currentDayStart.getTime();\r\n            var minTime = this._firstViewDate.getTime();\r\n            return currentDateTime > minTime ? (currentDateTime - currentDayStartTime) % cellDuration / cellDuration : 0\r\n        }\r\n    }, {\r\n        key: \"_isSkippedData\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"getCoordinatesByDateInGroup\",\r\n        value: function(startDate, appointmentResources, inAllDayRow) {\r\n            var _this10 = this;\r\n            var result = [];\r\n            if (this._isSkippedData(startDate)) {\r\n                return result\r\n            }\r\n            var groupIndices = this._getGroupCount() ? this._getGroupIndexes(appointmentResources) : [0];\r\n            groupIndices.forEach(function(groupIndex) {\r\n                var coordinates = _this10.getCoordinatesByDate(startDate, groupIndex, inAllDayRow);\r\n                coordinates && result.push(coordinates)\r\n            });\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"getDroppableCellIndex\",\r\n        value: function() {\r\n            var $droppableCell = this._getDroppableCell();\r\n            var $row = $droppableCell.parent();\r\n            var rowIndex = $row.index();\r\n            return rowIndex * $row.find(\"td\").length + $droppableCell.index()\r\n        }\r\n    }, {\r\n        key: \"getDataByDroppableCell\",\r\n        value: function() {\r\n            var cellData = this.getCellData((0, _renderer.default)(this._getDroppableCell()));\r\n            var allDay = cellData.allDay;\r\n            var startDate = cellData.startDate;\r\n            var endDate = startDate && this.invoke(\"calculateAppointmentEndDate\", allDay, startDate);\r\n            return {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                allDay: allDay,\r\n                groups: cellData.groups\r\n            }\r\n        }\r\n    }, {\r\n        key: \"getDateRange\",\r\n        value: function() {\r\n            return [this.getStartViewDate(), this.getEndViewDateByEndDayHour()]\r\n        }\r\n    }, {\r\n        key: \"getCellWidth\",\r\n        value: function() {\r\n            var _this11 = this;\r\n            return this.cache.get(\"cellWidth\", function() {\r\n                var cell = _this11._getCells().first().get(0);\r\n                return cell && (0, _position.getBoundingRect)(cell).width\r\n            })\r\n        }\r\n    }, {\r\n        key: \"getCellMinWidth\",\r\n        value: function() {\r\n            return DATE_TABLE_MIN_CELL_WIDTH\r\n        }\r\n    }, {\r\n        key: \"getRoundedCellWidth\",\r\n        value: function(groupIndex, startIndex, cellCount) {\r\n            if (groupIndex < 0) {\r\n                return 0\r\n            }\r\n            var $row = this.$element().find(\".\" + this._getDateTableRowClass()).eq(0);\r\n            var width = 0;\r\n            var $cells = $row.find(\".\" + DATE_TABLE_CELL_CLASS);\r\n            var totalCellCount = this._getCellCount() * groupIndex;\r\n            cellCount = cellCount || this._getCellCount();\r\n            if (!(0, _type.isDefined)(startIndex)) {\r\n                startIndex = totalCellCount\r\n            }\r\n            for (var i = startIndex; i < totalCellCount + cellCount; i++) {\r\n                width += (0, _position.getBoundingRect)((0, _renderer.default)($cells).eq(i).get(0)).width\r\n            }\r\n            return width / (totalCellCount + cellCount - startIndex)\r\n        }\r\n    }, {\r\n        key: \"getCellHeight\",\r\n        value: function() {\r\n            var _this12 = this;\r\n            var useCache = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;\r\n            var callbackResult = function() {\r\n                var cell = _this12._getCells().first().get(0);\r\n                return cell && (0, _position.getBoundingRect)(cell).height\r\n            };\r\n            return useCache ? this.cache.get(\"cellHeight\", callbackResult) : callbackResult()\r\n        }\r\n    }, {\r\n        key: \"getAllDayHeight\",\r\n        value: function() {\r\n            var cell = this._getCells(true).first().get(0);\r\n            return this._isShowAllDayPanel() ? cell && (0, _position.getBoundingRect)(cell).height || 0 : 0\r\n        }\r\n    }, {\r\n        key: \"getAllDayOffset\",\r\n        value: function() {\r\n            return this._groupedStrategy.getAllDayOffset()\r\n        }\r\n    }, {\r\n        key: \"getMaxAllowedPosition\",\r\n        value: function() {\r\n            if (0 === this._maxAllowedPosition.length) {\r\n                var isRtl = this.option(\"rtlEnabled\");\r\n                this._maxAllowedPosition = [];\r\n                this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).first().find(\"td:nth-child(\".concat(this._getCellCount(), \"n)\")).each(function(_, cell) {\r\n                    var maxPosition = (0, _renderer.default)(cell).position().left;\r\n                    if (!isRtl) {\r\n                        maxPosition += (0, _position.getBoundingRect)(cell).width\r\n                    }\r\n                    this._maxAllowedPosition.push(Math.round(maxPosition))\r\n                }.bind(this))\r\n            }\r\n            return this._maxAllowedPosition\r\n        }\r\n    }, {\r\n        key: \"getMaxAllowedVerticalPosition\",\r\n        value: function(groupIndex) {\r\n            if (this.isVirtualScrolling()) {\r\n                return this.getMaxAllowedVerticalPositionVirtual(groupIndex)\r\n            }\r\n            return this.getMaxAllowedVerticalPositionStandard(groupIndex)\r\n        }\r\n    }, {\r\n        key: \"getMaxAllowedVerticalPositionStandard\",\r\n        value: function(groupIndex) {\r\n            var _this13 = this;\r\n            if (0 === this._maxAllowedVerticalPosition.length) {\r\n                var rowCount = this._getRowCount();\r\n                this._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \"):nth-child(\").concat(rowCount, \"n)\")).each(function(_, row) {\r\n                    var maxPosition = (0, _renderer.default)(row).position().top + (0, _position.getBoundingRect)(row).height;\r\n                    _this13._maxAllowedVerticalPosition.push(Math.round(maxPosition))\r\n                })\r\n            }\r\n            return this._maxAllowedVerticalPosition[groupIndex]\r\n        }\r\n    }, {\r\n        key: \"getMaxAllowedVerticalPositionVirtual\",\r\n        value: function(groupIndex) {\r\n            var _this14 = this;\r\n            var getMaxPosition = function(rowIndex) {\r\n                var row = _this14._$dateTable.find(\"tr:not(.\".concat(VIRTUAL_ROW_CLASS, \")\")).get(rowIndex);\r\n                var maxPosition = (0, _renderer.default)(row).position().top + (0, _position.getBoundingRect)(row).height;\r\n                if (_this14.isGroupedAllDayPanel()) {\r\n                    maxPosition -= (groupIndex + 1) * _this14.getAllDayHeight()\r\n                }\r\n                _this14._maxAllowedVerticalPosition[groupIndex] = Math.round(maxPosition)\r\n            };\r\n            if (!this._maxAllowedVerticalPosition[groupIndex]) {\r\n                var _this$viewDataProvide = this.viewDataProvider.getLasGroupCellPosition(groupIndex),\r\n                    rowIndex = _this$viewDataProvide.rowIndex;\r\n                getMaxPosition(rowIndex)\r\n            }\r\n            return this._maxAllowedVerticalPosition[groupIndex]\r\n        }\r\n    }, {\r\n        key: \"getFixedContainer\",\r\n        value: function() {\r\n            return this._$fixedContainer\r\n        }\r\n    }, {\r\n        key: \"getAllDayContainer\",\r\n        value: function() {\r\n            return this._$allDayContainer\r\n        }\r\n    }, {\r\n        key: \"getCellIndexByCoordinates\",\r\n        value: function(coordinates, allDay) {\r\n            var cellCount = this._getTotalCellCount(this._getGroupCount());\r\n            var cellWidth = Math.floor(this._getWorkSpaceWidth() / cellCount);\r\n            var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();\r\n            var leftOffset = this._isRTL() || this.option(\"crossScrollingEnabled\") ? 0 : this.getWorkSpaceLeftOffset();\r\n            var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));\r\n            var leftIndex = Math.floor((coordinates.left + 5 - leftOffset) / cellWidth);\r\n            if (this._isRTL()) {\r\n                leftIndex = cellCount - leftIndex - 1\r\n            }\r\n            return cellCount * topIndex + leftIndex\r\n        }\r\n    }, {\r\n        key: \"getStartViewDate\",\r\n        value: function() {\r\n            return this._firstViewDate\r\n        }\r\n    }, {\r\n        key: \"getEndViewDate\",\r\n        value: function() {\r\n            var dateOfLastViewCell = this.getDateOfLastViewCell();\r\n            var endDateOfLastViewCell = this.calculateEndViewDate(dateOfLastViewCell);\r\n            return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell)\r\n        }\r\n    }, {\r\n        key: \"getEndViewDateByEndDayHour\",\r\n        value: function() {\r\n            var dateOfLastViewCell = this.getDateOfLastViewCell();\r\n            var endTime = _date.default.dateTimeFromDecimal(this.option(\"endDayHour\"));\r\n            var endDateOfLastViewCell = new Date(dateOfLastViewCell.setHours(endTime.hours, endTime.minutes));\r\n            return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell)\r\n        }\r\n    }, {\r\n        key: \"calculateEndViewDate\",\r\n        value: function(dateOfLastViewCell) {\r\n            return new Date(dateOfLastViewCell.getTime() + this.getCellDuration())\r\n        }\r\n    }, {\r\n        key: \"_adjustEndViewDateByDaylightDiff\",\r\n        value: function(startDate, endDate) {\r\n            var daylightDiff = _utils.default.getDaylightOffsetInMs(startDate, endDate);\r\n            var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);\r\n            return new Date(endDateOfLastViewCell.getTime() - toMs(\"minute\"))\r\n        }\r\n    }, {\r\n        key: \"getDateOfLastViewCell\",\r\n        value: function() {\r\n            var rowIndex = this._getRowCount() - 1;\r\n            var cellIndex = this._getCellCount();\r\n            if (this.isGroupedByDate()) {\r\n                cellIndex = cellIndex * this._getGroupCount() - 1\r\n            } else {\r\n                cellIndex -= 1\r\n            }\r\n            return this._getDateByCellIndexes(rowIndex, cellIndex, true)\r\n        }\r\n    }, {\r\n        key: \"getCellDuration\",\r\n        value: function() {\r\n            return 36e5 * this.option(\"hoursInterval\")\r\n        }\r\n    }, {\r\n        key: \"getIntervalDuration\",\r\n        value: function(allDay) {\r\n            return allDay ? toMs(\"day\") : this.getCellDuration()\r\n        }\r\n    }, {\r\n        key: \"getVisibleDayDuration\",\r\n        value: function() {\r\n            return this.option(\"hoursInterval\") * this._getCellCountInDay() * HOUR_MS\r\n        }\r\n    }, {\r\n        key: \"getGroupBounds\",\r\n        value: function(coordinates) {\r\n            var cellCount = this._getCellCount();\r\n            var $cells = this._getCells();\r\n            var cellWidth = this.getCellWidth();\r\n            var result = this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates);\r\n            if (this._isRTL()) {\r\n                var startOffset = result.left;\r\n                result.left = result.right - 2 * cellWidth;\r\n                result.right = startOffset + 2 * cellWidth\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"needRecalculateResizableArea\",\r\n        value: function() {\r\n            return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop()\r\n        }\r\n    }, {\r\n        key: \"getCellDataByCoordinates\",\r\n        value: function(coordinates, allDay) {\r\n            var _this15 = this;\r\n            var key = JSON.stringify({\r\n                top: coordinates.top,\r\n                left: coordinates.left\r\n            });\r\n            return this.cache.get(key, function() {\r\n                var $cells = _this15._getCells(allDay);\r\n                var cellIndex = _this15.getCellIndexByCoordinates(coordinates, allDay);\r\n                var $cell = $cells.eq(cellIndex);\r\n                return _this15.getCellData($cell)\r\n            })\r\n        }\r\n    }, {\r\n        key: \"getVisibleBounds\",\r\n        value: function() {\r\n            var result = {};\r\n            var $scrollable = this.getScrollable().$element();\r\n            var cellHeight = this.getCellHeight();\r\n            var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;\r\n            var totalCellCount = scrolledCellCount + $scrollable.height() / cellHeight;\r\n            result.top = {\r\n                hours: Math.floor(scrolledCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\r\n                minutes: scrolledCellCount % 2 ? 30 : 0\r\n            };\r\n            result.bottom = {\r\n                hours: Math.floor(totalCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\r\n                minutes: Math.floor(totalCellCount) % 2 ? 30 : 0\r\n            };\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"updateScrollPosition\",\r\n        value: function(date, groups) {\r\n            var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n            var scheduler = this.option(\"observer\");\r\n            var newDate = scheduler.timeZoneCalculator.createDate(date, {\r\n                path: \"toGrid\"\r\n            });\r\n            var inAllDayRow = allDay && this.supportAllDayRow() && this._isShowAllDayPanel();\r\n            if (this.needUpdateScrollPosition(newDate, groups, inAllDayRow)) {\r\n                this.scrollTo(newDate, groups, inAllDayRow, false)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"needUpdateScrollPosition\",\r\n        value: function(date, groups, inAllDayRow) {\r\n            var _this16 = this;\r\n            var cells = this._getCellsInViewport(inAllDayRow);\r\n            var groupIndex = this._isGroupsSpecified(groups) ? this._getGroupIndexByResourceId(groups) : 0;\r\n            var time = date.getTime();\r\n            var trimmedTime = _date.default.trimTime(date).getTime();\r\n            return cells.reduce(function(currentResult, cell) {\r\n                var _this16$getCellData = _this16.getCellData(cell),\r\n                    cellStartDate = _this16$getCellData.startDate,\r\n                    cellEndDate = _this16$getCellData.endDate,\r\n                    cellGroupIndex = _this16$getCellData.groupIndex;\r\n                var cellStartTime = cellStartDate.getTime();\r\n                var cellEndTime = cellEndDate.getTime();\r\n                if ((!inAllDayRow && cellStartTime <= time && time < cellEndTime || inAllDayRow && trimmedTime === cellStartTime) && groupIndex === cellGroupIndex) {\r\n                    return false\r\n                }\r\n                return currentResult\r\n            }, true)\r\n        }\r\n    }, {\r\n        key: \"_getCellsInViewport\",\r\n        value: function(inAllDayRow) {\r\n            var $scrollable = this.getScrollable().$element();\r\n            var cellHeight = this.getCellHeight();\r\n            var cellWidth = this.getCellWidth();\r\n            var totalColumnCount = this._getTotalCellCount(this._getGroupCount());\r\n            var scrollableScrollTop = this.getScrollableScrollTop();\r\n            var scrollableScrollLeft = this.getScrollableScrollLeft();\r\n            var fullScrolledRowCount = scrollableScrollTop / cellHeight;\r\n            if (this.isVirtualScrolling()) {\r\n                fullScrolledRowCount -= this.virtualScrollingDispatcher.topVirtualRowsCount\r\n            }\r\n            var scrolledRowCount = Math.floor(fullScrolledRowCount);\r\n            if (scrollableScrollTop % cellHeight !== 0) {\r\n                scrolledRowCount += 1\r\n            }\r\n            var fullScrolledColumnCount = scrollableScrollLeft / cellWidth;\r\n            var scrolledColumnCount = Math.floor(fullScrolledColumnCount);\r\n            if (scrollableScrollLeft % cellWidth !== 0) {\r\n                scrolledColumnCount += 1\r\n            }\r\n            var rowCount = Math.floor(fullScrolledRowCount + $scrollable.height() / cellHeight);\r\n            var columnCount = Math.floor(fullScrolledColumnCount + $scrollable.width() / cellWidth);\r\n            var $cells = this._getAllCells(inAllDayRow);\r\n            var result = [];\r\n            $cells.each(function(index) {\r\n                var $cell = (0, _renderer.default)(this);\r\n                var columnIndex = index % totalColumnCount;\r\n                var rowIndex = index / totalColumnCount;\r\n                if (scrolledColumnCount <= columnIndex && columnIndex < columnCount && scrolledRowCount <= rowIndex && rowIndex < rowCount) {\r\n                    result.push($cell)\r\n                }\r\n            });\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"getGroupWidth\",\r\n        value: function(groupIndex) {\r\n            var result = this._getCellCount() * this.getCellWidth();\r\n            var position = this.getMaxAllowedPosition();\r\n            var currentPosition = position[groupIndex];\r\n            if (position.length && currentPosition) {\r\n                if (this._isRTL()) {\r\n                    result = currentPosition - position[groupIndex + 1]\r\n                } else {\r\n                    if (0 === groupIndex) {\r\n                        result = currentPosition\r\n                    } else {\r\n                        result = currentPosition - position[groupIndex - 1]\r\n                    }\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"scrollToTime\",\r\n        value: function(hours, minutes, date) {\r\n            if (!this._isValidScrollDate(date)) {\r\n                return\r\n            }\r\n            var coordinates = this._getScrollCoordinates(hours, minutes, date);\r\n            var scrollable = this.getScrollable();\r\n            scrollable.scrollBy({\r\n                top: coordinates.top - scrollable.scrollTop(),\r\n                left: 0\r\n            })\r\n        }\r\n    }, {\r\n        key: \"scrollTo\",\r\n        value: function(date, groups) {\r\n            var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n            var throwWarning = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\r\n            if (!this._isValidScrollDate(date, throwWarning)) {\r\n                return\r\n            }\r\n            var groupIndex = this._getGroupCount() && groups ? this._getGroupIndexByResourceId(groups) : 0;\r\n            var isScrollToAllDay = allDay && this.supportAllDayRow() && this._isShowAllDayPanel();\r\n            var coordinates = this._getScrollCoordinates(date.getHours(), date.getMinutes(), date, groupIndex, isScrollToAllDay);\r\n            var scrollable = this.getScrollable();\r\n            var $scrollable = scrollable.$element();\r\n            var offset = this.option(\"rtlEnabled\") ? this.getCellWidth() : 0;\r\n            var scrollableHeight = $scrollable.height();\r\n            var scrollableWidth = $scrollable.width();\r\n            var cellWidth = this.getCellWidth();\r\n            var cellHeight = this.getCellHeight();\r\n            var xShift = (scrollableWidth - cellWidth) / 2;\r\n            var yShift = (scrollableHeight - cellHeight) / 2;\r\n            var left = coordinates.left - scrollable.scrollLeft() - xShift - offset;\r\n            var top = coordinates.top - scrollable.scrollTop() - yShift;\r\n            if (isScrollToAllDay && !this._isVerticalGroupedWorkSpace()) {\r\n                top = 0\r\n            }\r\n            if (this.option(\"templatesRenderAsynchronously\")) {\r\n                setTimeout(function() {\r\n                    scrollable.scrollBy({\r\n                        left: left,\r\n                        top: top\r\n                    })\r\n                })\r\n            } else {\r\n                scrollable.scrollBy({\r\n                    left: left,\r\n                    top: top\r\n                })\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_isValidScrollDate\",\r\n        value: function(date) {\r\n            var throwWarning = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : true;\r\n            var min = this.getStartViewDate();\r\n            var max = this.getEndViewDate();\r\n            if (date < min || date > max) {\r\n                throwWarning && _ui.default.log(\"W1008\", date);\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"getDistanceBetweenCells\",\r\n        value: function(startIndex, endIndex) {\r\n            var result = 0;\r\n            this.$element().find(\".\" + this._getDateTableRowClass()).first().find(\".\" + DATE_TABLE_CELL_CLASS).each(function(index) {\r\n                if (index < startIndex || index > endIndex) {\r\n                    return true\r\n                }\r\n                result += (0, _position.getBoundingRect)(this).width\r\n            });\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"needApplyCollectorOffset\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"initDragBehavior\",\r\n        value: function(scheduler) {\r\n            if (!this.dragBehavior && scheduler) {\r\n                this.dragBehavior = new _appointmentDragBehavior.default(scheduler);\r\n                this._createDragBehavior(this.getWorkArea());\r\n                this._createDragBehavior(this.getAllDayContainer());\r\n                this._createDragBehavior(this._$allDayPanel)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_createDragBehavior\",\r\n        value: function($element) {\r\n            var getItemData = function(itemElement, appointments) {\r\n                return appointments._getItemData(itemElement)\r\n            };\r\n            var getItemSettings = function($itemElement) {\r\n                return $itemElement.data(_constants.APPOINTMENT_SETTINGS_KEY)\r\n            };\r\n            this._createDragBehaviorBase($element, getItemData, getItemSettings)\r\n        }\r\n    }, {\r\n        key: \"_createDragBehaviorBase\",\r\n        value: function($element, getItemData, getItemSettings) {\r\n            var _this17 = this;\r\n            var _ref3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},\r\n                isSetCursorOffset = _ref3.isSetCursorOffset,\r\n                restOptions = _objectWithoutProperties(_ref3, [\"isSetCursorOffset\"]);\r\n            var dragElement;\r\n            var dragBehavior = this.dragBehavior;\r\n            var itemData;\r\n            dragBehavior.addTo($element, _objectSpread({\r\n                container: this.$element().find(\".\".concat(_constants.FIXED_CONTAINER_CLASS)),\r\n                dragTemplate: function() {\r\n                    return dragElement\r\n                },\r\n                onDragStart: function(e) {\r\n                    var canceled = e.cancel;\r\n                    var event = e.event;\r\n                    var $itemElement = (0, _renderer.default)(e.itemElement);\r\n                    var appointments = e.component._appointments;\r\n                    itemData = getItemData(e.itemElement, appointments);\r\n                    var settings = getItemSettings($itemElement, e);\r\n                    if (itemData && !itemData.disabled) {\r\n                        event.data = event.data || {};\r\n                        if (!canceled) {\r\n                            if (!settings.isCompact) {\r\n                                dragBehavior.updateDragSource(itemData, settings)\r\n                            }\r\n                            dragElement = _this17._createDragAppointment(itemData, settings, appointments);\r\n                            event.data.itemElement = dragElement;\r\n                            event.data.initialPosition = (0, _translator.locate)((0, _renderer.default)(dragElement));\r\n                            event.data.itemData = itemData;\r\n                            event.data.itemSettings = settings;\r\n                            dragBehavior.onDragStart(event.data);\r\n                            (0, _translator.resetPosition)((0, _renderer.default)(dragElement))\r\n                        }\r\n                    }\r\n                },\r\n                onDragEnd: function(e) {\r\n                    var _dragElement;\r\n                    if (itemData && !itemData.disabled) {\r\n                        dragBehavior.onDragEnd(e)\r\n                    }\r\n                    null === (_dragElement = dragElement) || void 0 === _dragElement ? void 0 : _dragElement.remove()\r\n                },\r\n                cursorOffset: isSetCursorOffset ? function() {\r\n                    var $dragElement = (0, _renderer.default)(dragElement);\r\n                    return {\r\n                        x: $dragElement.width() / 2,\r\n                        y: $dragElement.height() / 2\r\n                    }\r\n                } : void 0\r\n            }, restOptions))\r\n        }\r\n    }, {\r\n        key: \"_createDragAppointment\",\r\n        value: function(itemData, settings, appointments) {\r\n            var appointmentIndex = appointments.option(\"items\").length;\r\n            settings.isCompact = false;\r\n            settings.virtual = false;\r\n            var items = appointments._renderItem(appointmentIndex, {\r\n                itemData: itemData,\r\n                settings: [settings]\r\n            });\r\n            return items[0]\r\n        }\r\n    }, {\r\n        key: \"_isApplyCompactAppointmentOffset\",\r\n        value: function() {\r\n            return this._supportCompactDropDownAppointments()\r\n        }\r\n    }, {\r\n        key: \"_supportCompactDropDownAppointments\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"_formatWeekday\",\r\n        value: function(date) {\r\n            return formatWeekday(date)\r\n        }\r\n    }, {\r\n        key: \"_formatWeekdayAndDay\",\r\n        value: function(date) {\r\n            return formatWeekday(date) + \" \" + _date2.default.format(date, \"day\")\r\n        }\r\n    }, {\r\n        key: \"removeDroppableCellClass\",\r\n        value: function($cellElement) {\r\n            ($cellElement || this._getDroppableCell()).removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n        }\r\n    }, {\r\n        key: \"_getCoordinatesByCell\",\r\n        value: function($cell) {\r\n            var columnIndex = $cell.index();\r\n            var rowIndex = $cell.parent().index();\r\n            var isAllDayCell = this._hasAllDayClass($cell);\r\n            var isVerticalGrouping = this._isVerticalGroupedWorkSpace();\r\n            if (this.isVirtualScrolling() && !(isAllDayCell && !isVerticalGrouping)) {\r\n                rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_isShowAllDayPanel\",\r\n        value: function() {\r\n            return this.option(\"showAllDayPanel\")\r\n        }\r\n    }, {\r\n        key: \"updateAppointments\",\r\n        value: function() {\r\n            var _this$dragBehavior;\r\n            this.invoke(\"renderAppointments\");\r\n            null === (_this$dragBehavior = this.dragBehavior) || void 0 === _this$dragBehavior ? void 0 : _this$dragBehavior.updateDragSource()\r\n        }\r\n    }, {\r\n        key: \"viewDataProvider\",\r\n        get: function() {\r\n            if (!this._viewDataProvider) {\r\n                this._viewDataProvider = new _view_data_provider.default(this)\r\n            }\r\n            return this._viewDataProvider\r\n        }\r\n    }, {\r\n        key: \"cache\",\r\n        get: function() {\r\n            return _cache.cache\r\n        }\r\n    }, {\r\n        key: \"virtualSelectionState\",\r\n        get: function() {\r\n            if (!this._virtualSelectionState) {\r\n                this._virtualSelectionState = new _virtual_selection_state.default(this.viewDataProvider)\r\n            }\r\n            return this._virtualSelectionState\r\n        }\r\n    }]);\r\n    return SchedulerWorkSpace\r\n}(_widgetObserver.default);\r\nvar _default = SchedulerWorkSpace;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}